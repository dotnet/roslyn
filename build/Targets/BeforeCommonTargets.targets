<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(RoslynProjectType)' == 'UnitTest' OR '$(RoslynProjectType)' == 'UnitTestPortable'">
      <PropertyGroup>
        <_IsAnyUnitTest>true</_IsAnyUnitTest>
        <_NeedRuntimeAssets>true</_NeedRuntimeAssets> 
        <CopyNuGetImplementations>true</CopyNuGetImplementations>
        <OutputPath>$(OutputPath)UnitTests\$(MSBuildProjectName)\</OutputPath>
        <IsShipping>false</IsShipping>
      </PropertyGroup>
    </When>
    <When Condition="'$(RoslynProjectType)' == 'Vsix'">
      <PropertyGroup>
        <_CopyReferences>false</_CopyReferences>
        <_NeedRuntimeAssets>true</_NeedRuntimeAssets> 
        <CopyNuGetImplementations>true</CopyNuGetImplementations>
        <OutputPath>$(OutputPath)Vsix\$(MSBuildProjectName)\</OutputPath>
      </PropertyGroup>
    </When>
    <When Condition="'$(RoslynProjectType)' == 'Custom'">
      <!-- Do nothing -->
    </When>
    <When Condition="'$(RoslynProjectType)' == 'SourcePackage'">
      <PropertyGroup>
        <OutputPath>$(OutputPath)SourcePackages\$(MSBuildProjectName)\</OutputPath>
      </PropertyGroup>
    </When>
    <When Condition="'$(RoslynProjectType)' == '' AND '$(OutputType)' == 'Library'">
      <PropertyGroup>
        <_CopyReferences>false</_CopyReferences>
        <_CopyProjectReferences>false</_CopyProjectReferences>
        <CopyNuGetImplementations>false</CopyNuGetImplementations>
        <OutputPath>$(OutputPath)Dlls\$(MSBuildProjectName)\</OutputPath>
        <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
      </PropertyGroup>
    </When>
    <When Condition="'$(RoslynProjectType)' == '' AND '$(OutputType)' == 'Exe'">
      <PropertyGroup>
        <_NeedRuntimeAssets>true</_NeedRuntimeAssets> 
        <CopyNuGetImplementations>true</CopyNuGetImplementations>
        <OutputPath>$(OutputPath)Exes\$(MSBuildProjectName)\</OutputPath>
        <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
      </PropertyGroup>
    </When>
    <When Condition="'$(RoslynProjectType)' == '' AND '$(OutputType)' == 'WinExe'">
      <PropertyGroup>
        <_NeedRuntimeAssets>true</_NeedRuntimeAssets> 
        <CopyNuGetImplementations>true</CopyNuGetImplementations>
        <OutputPath>$(OutputPath)Exes\$(MSBuildProjectName)\</OutputPath>
        <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
      </PropertyGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <!-- 
         Have to hand specify PublishDir since we suppress the addition of the runtime
         identifier to the end of the output path
         https://github.com/dotnet/roslyn/issues/23547
    -->
    <PublishDir Condition="'$(PublishDir)' != '' AND '$(RuntimeIdentifier)' != ''">$(OutputPath)$(RuntimeIdentifier)\$(PublishDirName)\</PublishDir>
    <PublishDir Condition="'$(PublishDir)' != '' AND '$(RuntimeIdentifier)' == ''">$(OutputPath)$(TargetFramework)\$(PublishDirName)\</PublishDir>

    <DocumentationFile Condition="'$(GenerateDocumentationFile)' == 'true' AND '$(Language)' == 'VB'">$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFrameworks)' != ''">
    <IntermediateOutputPath>$(IntermediateOutputPath)$(TargetFramework.ToLowerInvariant())\</IntermediateOutputPath>
    <OutputPath Condition="'$(RoslynProjectType)' != 'SourcePackage' and '$(RoslynProjectType)' != 'Custom'">$(OutputPath)$(TargetFramework.ToLowerInvariant())\</OutputPath>
    <DocumentationFile Condition="'$(GenerateDocumentationFile)' == 'true' AND '$(Language)' == 'C#'">$(IntermediateOutputPath)$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <!-- If the project hasn't configured a ruleset, set a default ruleset. -->
  <Choose>
    <When Condition="'$(CodeAnalysisRuleSet)' == ''">
      <Choose>
        <!-- We have different default rulesets for Build versus Running Code Analysis. -->
        <When Condition="'$(RunCodeAnalysis)' == 'true' OR '$(RunCodeAnalysisOnce)' == 'true'">
          <PropertyGroup>
            <DefaultRulesetSuffix>_RunCodeAnalysisRules</DefaultRulesetSuffix>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <DefaultRulesetSuffix>_BuildRules</DefaultRulesetSuffix>
          </PropertyGroup>
        </Otherwise>
      </Choose>

      <PropertyGroup>
        <CodeAnalysisRuleSet Condition="'$(CodeAnalysisRuleSet)' == '' AND '$(IsShipping)' != 'true'">$(MSBuildThisFileDirectory)..\Rulesets\NonShippingProject$(DefaultRulesetSuffix).ruleset</CodeAnalysisRuleSet>
        <CodeAnalysisRuleSet Condition="'$(CodeAnalysisRuleSet)' == '' AND '$(AnalyzerProject)' == 'true'">$(MSBuildThisFileDirectory)..\Rulesets\AnalyzerProject$(DefaultRulesetSuffix).ruleset</CodeAnalysisRuleSet>
        <CodeAnalysisRuleSet Condition="'$(CodeAnalysisRuleSet)' == ''">$(MSBuildThisFileDirectory)..\Rulesets\Roslyn$(DefaultRulesetSuffix).ruleset</CodeAnalysisRuleSet>
      </PropertyGroup>
    </When>
  </Choose>

  <!--
    If the project targets Framework 2.0 reference assemblies provided by Microsoft.NetFramework.ReferenceAssemblies nuget package.
    Use the latest Framework toolset to build, but set msbuild properties below
    so to avoid 4.5 specific artifacts to be added to the compilation (references, attributes).
  -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'net20'">
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <AddAdditionalExplicitAssemblyReferences>false</AddAdditionalExplicitAssemblyReferences>
    <NoStdLib>true</NoStdLib>
    <ExecuteAsTool>false</ExecuteAsTool>
    <GenerateResourceMSBuildRuntime>CurrentRuntime</GenerateResourceMSBuildRuntime>
    
    <!-- Bypass a check in msbuild that .NET Framework 3.5 is installed on the machine when targeting .NET < 4.0 -->
    <BypassFrameworkInstallChecks>true</BypassFrameworkInstallChecks>
  </PropertyGroup>

</Project>

