<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->

<!--
Copied from RepoToolset. Might be slightly modified to adjust for the current Roslyn build system specifics if necessary.

Limit Roslyn specific changes to minumum.

If a fix not specific to Roslyn is needed create a PR against https://github.com/dotnet/roslyn-tools repo updating the toolset.
Update this file only if the change to RepoToolset gets approved and merged.
-->

<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <_DeployToSymStoreTargetName Condition="'$(TargetFrameworks)' == ''">_InnerDeployToSymStore</_DeployToSymStoreTargetName>
    <_DeployToSymStoreTargetName Condition="'$(TargetFrameworks)' != ''">_OuterDeployToSymStore</_DeployToSymStoreTargetName>
  </PropertyGroup>

  <!-- Note: The DeployToSymStore target definition differs from the original implementation in RepoToolset. -->
  <Target Name="DeployToSymStore" DependsOnTargets="$(_DeployToSymStoreTargetName)" Condition="'$(ArtifactsSymStoreDirectory)' != ''" />

  <Target Name="_OuterDeployToSymStore">
    <ItemGroup>
      <_TargetFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFile)"
             Condition="'$(TargetFrameworks)' != ''"
             Targets="_InnerDeployToSymStore"
             Properties="TargetFramework=%(_TargetFramework.Identity)">
    </MSBuild>
  </Target>

  <Target Name="_InnerDeployToSymStore">
    <PropertyGroup>
      <_TargetPdbPath />
      <_TargetPdbPath Condition="'$(DebugType)' != 'embedded'">$([System.IO.Path]::ChangeExtension($(TargetPath), '.pdb'))</_TargetPdbPath>

      <_SymStoreOutputDir>$(ArtifactsSymStoreDirectory)$(MSBuildProjectName)\$(TargetFramework)\</_SymStoreOutputDir>
      <_SymStorePdbPath>$(_SymStoreOutputDir)$(TargetName).pdb</_SymStorePdbPath>
      <_SymStoreAssemblyPath>$(_SymStoreOutputDir)$(TargetName)$(TargetExt)</_SymStoreAssemblyPath>
      
      <PublishOutputToSymStore Condition="'$(PublishOutputToSymStore)' == '' and Exists('$(TargetPath)') and ('$(DebugType)' == 'embedded' or Exists('$(_TargetPdbPath)'))">true</PublishOutputToSymStore>
    </PropertyGroup>
  </Target>

  <!-- 
    Convert Portable and Embedded PDBs. 
    We publish converted PDBs to Symbol Store so that WinDBG can find them when debugging crash dumps.
    Convert source link to srcsvr so that both WinDBG and VS can open the source files.
  -->
  <Target Name="_DeployPortableSymbolsToSymStore"
          AfterTargets="_InnerDeployToSymStore"
          Inputs="$(TargetPath);$(_TargetPdbPath)"
          Outputs="$(_SymStorePdbPath)"
          Condition="'$(PublishOutputToSymStore)' == 'true' and ('$(DebugType)' == 'portable' or '$(DebugType)' == 'embedded')">

    <PropertyGroup>
      <_PdbConverterPath>$(NuGetPackageRoot)microsoft.diasymreader.pdb2pdb\$(MicrosoftDiaSymReaderPdb2PdbVersion)\tools\Pdb2Pdb.exe</_PdbConverterPath>
      <_PdbConverterCommandLineArgs>"$(TargetPath)" /out "$(_SymStorePdbPath)" /verbose</_PdbConverterCommandLineArgs>
    </PropertyGroup>

    <Error Text="Attempt to publish Portable PDB to SymStore without conversion: UsingToolPdbConverter property is false in project $(MSBuildProjectName)"
           Condition="'$(UsingToolPdbConverter)' != 'true'"
           ContinueOnError="false"/>

    <MakeDir Directories="$(_SymStoreOutputDir)"/>
   
    <Exec Command='"$(_PdbConverterPath)" $(_PdbConverterCommandLineArgs)' IgnoreExitCode="false" />

    <ItemGroup>
      <FileWrites Include="$(_SymStorePdbPath)"/>
    </ItemGroup>
  </Target>

  <!-- 
    The current MicroBuild symbol indexing task doesn't support specifying list of files to index.
    Therefore we create hardlinks to the files in output directory, where DLLs and EXEs are signed.
    These targets are executed after the signing phase so that we publish signed binaries to the
    symbol store even if the files are copies and not hardlinked.
  -->
  <Target Name="_DeployWindowsSymbolsToSymStore"
          AfterTargets="_InnerDeployToSymStore"
          Condition="'$(PublishOutputToSymStore)' == 'true' and ('$(DebugType)' == 'full' or '$(DebugType)' == 'pdbonly')"
          Inputs="$(_TargetPdbPath)"
          Outputs="$(_SymStorePdbPath)">

    <MakeDir Directories="$(_SymStoreOutputDir)"/>
  
    <Copy SourceFiles="$(_TargetPdbPath)"
          DestinationFiles="$(_SymStorePdbPath)"
          UseHardlinksIfPossible="true"/>

    <ItemGroup>
      <FileWrites Include="$(_SymStorePdbPath)"/>
    </ItemGroup>
  </Target>

  <Target Name="_DeployAssembliesToSymStore"
          AfterTargets="_InnerDeployToSymStore"
          Condition="'$(PublishOutputToSymStore)' == 'true'"
          Inputs="$(TargetPath)"
          Outputs="$(_SymStoreAssemblyPath)">

    <MakeDir Directories="$(_SymStoreOutputDir)"/>
   
    <Copy SourceFiles="$(TargetPath)"
          DestinationFiles="$(_SymStoreAssemblyPath)"
          UseHardlinksIfPossible="true"/>

    <ItemGroup>
      <FileWrites Include="$(_SymStoreAssemblyPath)"/>
    </ItemGroup>
  </Target>
</Project>