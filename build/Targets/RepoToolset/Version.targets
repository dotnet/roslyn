<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <!--
    Specification: https://github.com/dotnet/arcade/blob/master/Documentation/Versioning.md
 
    Properties:
      SemanticVersioningV1        "true" if the Version needs to respect SemVer 1.0. Default is false, which means format following SemVer 2.0.
  -->

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <Target Name="_InitializeAssemblyVersion" BeforeTargets="GetAssemblyVersion">
    <Error Text="Invalid format of OfficialBuildId: '$(OfficialBuildId)'" 
           Condition="$(VersionSuffixDateStamp) != '' and ($(VersionSuffixDateStamp.Length) != 5 or $(VersionSuffixBuildOfTheDayPadded.Length) != 2)"/>
   
    <PropertyGroup Condition="'$(VersionSuffixDateStamp)' != ''">
      <FileVersion>$(VersionPrefix).$(VersionSuffixDateStamp)</FileVersion>
    </PropertyGroup>

    <PropertyGroup Condition="'$(VersionSuffixDateStamp)' == ''">
      <!--
        Set FileVersion to a distinct version that's greater than any shipping version.
        This makes it possible to install binaries produced by a dev build over product binaries,
        provided that the installer only requires higher version. 
      -->
      <FileVersion>42.42.42.42424</FileVersion>
      
      <!--
        Respect version explicitly set by the project.
        The default .NET Core SDK implementation sets AssemblyVersion from NuGet package version, 
        which we want to override in dev builds.
      -->
      <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">42.42.42.42</AssemblyVersion>
    </PropertyGroup>
  </Target>

  <UsingTask TaskName="Microsoft.DotNet.Arcade.Sdk.CheckRequiredDotNetVersion" AssemblyFile="$(RoslynToolsBuildTasksAssembly)" />

  <Target Name="_CheckRequiredDotNetVersion" BeforeTargets="BeforeBuild">
    <Microsoft.DotNet.Arcade.Sdk.CheckRequiredDotNetVersion RepositoryRoot="$(RepoRoot)" SdkVersion="$(NETCoreSdkVersion)" />
  </Target>

</Project>
