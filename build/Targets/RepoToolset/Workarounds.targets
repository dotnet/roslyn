<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- Workaround for https://github.com/Microsoft/msbuild/issues/1310 -->
  <Target Name="ForceGenerationOfBindingRedirects"
          AfterTargets="ResolveAssemblyReferences"
          BeforeTargets="GenerateBindingRedirects"
          Condition="'$(AutoGenerateBindingRedirects)' == 'true'">
    <PropertyGroup>
      <!-- Needs to be set in a target because it has to be set after the initial evaluation in the common targets -->
      <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    </PropertyGroup>
  </Target>

  <!--
     Work around to fix Intellisense file generation for XAML projects
     https://github.com/dotnet/project-system/issues/2488
  -->
  <Target Name="WorkaroundForXAMLIntellisenseBuildIssue" AfterTargets="_CheckCompileDesignTimePrerequisite">
    <PropertyGroup>
      <BuildingProject>false</BuildingProject>
    </PropertyGroup>
  </Target>

  <PropertyGroup>
    <IsWpfTempProject>false</IsWpfTempProject>
    <IsWpfTempProject Condition="'$(MSBuildProjectExtension)' == '.tmp_proj' or $(MSBuildProjectName.EndsWith('_wpftmp'))">true</IsWpfTempProject>
  </PropertyGroup>

  <!--
    Workaround for WPF temp projects.

    XAML targets create a temp project with OutDir set, which makes the SDK create an empty directory for it,
    polluting the output dir. Avoid creating these directories.
    https://github.com/dotnet/sdk/issues/1367

    WPF temp-projects do not import .props and .targets files from NuGet packages.
    (see https://github.com/dotnet/sourcelink/issues/91)
  -->
  <PropertyGroup Condition="'$(IsWpfTempProject)' == 'true'">
    <OutDir/>
    <DeterministicSourcePaths>false</DeterministicSourcePaths>
  </PropertyGroup>

  <!--
    Workaround for a race condition https://github.com/Microsoft/msbuild/issues/1479.
  -->
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$(IntermediateOutputPath)$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>

  <!-- Portable PDBs are not included by default -->
  <PropertyGroup Condition="'$(DebugType)' == 'portable'">
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <!-- 
    TODO: Move to Roslyn.Toolsets.XUnit.targets - non-test projects should not reference xunit runner.
  
    In order to use Test Explorer in Visual Studio as well as leverage LUT testing we need to have both of the follownig packages in 
    our build.  

        - xunit.runner.visualstudio
        - xunit

    Both of these include xunit.abstractions.dll in different forms: None and reference
    respectively.  This creates a double write violation in our build.  The None item
    is unnecessary for us since we reference the xunit package hence remove it here. 

    https://github.com/xunit/xunit/issues/1651
    https://github.com/dotnet/roslyn/issues/18753
  -->
  <ItemGroup>
    <None Remove="$(NuGetPackageRoot)xunit.runner.visualstudio\$(xunitrunnervisualstudioVersion)\build\net20\..\_common\xunit.abstractions.dll" />
  </ItemGroup>
</Project>