<?xml version="1.0" encoding="utf-8"?>
<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>


  <!--
    Set PackageOutputPath based on the IsShipping flag set by projects.
    This distinction allows signing and publishing tools to determine which assets to sign/publish and which to ignore.

    Unless specified owtherwise project is assumed to produce binaries/package that ship.
    Test projects automatically set IsShipping to false.
  -->
  <PropertyGroup>
    <IsShipping Condition="'$(IsShipping)' == ''">true</IsShipping>

    <PackageOutputPath Condition="'$(IsShipping)' == 'true'">$(ArtifactsShippingPackagesDir)</PackageOutputPath>
    <PackageOutputPath Condition="'$(IsShipping)' != 'true'">$(ArtifactsNonShippingPackagesDir)</PackageOutputPath>
  </PropertyGroup>

  <Import Project="StrongName.targets"/>
  <Import Project="GenerateInternalsVisibleTo.targets" />
  <Import Project="Workarounds.targets"/>
  <Import Project="RepositoryInfo.targets"/>
  <Import Project="Version.targets"/>
  <Import Project="Tests.targets"/>

  <Import Project="Localization.targets" Condition="'$(UsingToolXliff)' == 'true'"/>
  <Import Project="VisualStudio.targets" Condition="'$(UsingToolVSSDK)' == 'true' and '$(DesignTimeBuild)' != 'true' and '$(BuildingForLiveUnitTesting)' != 'true' and '$(MSBuildRuntimeType)' != 'Core'"/>
  <Import Project="OptimizationData.targets" Condition="'$(UsingToolIbcOptimization)' == 'true' and '$(IbcOptimizationDataDir)' != ''"/>
  <Import Project="SymStore.targets" Condition="'$(ContinuousIntegrationBuild)' == 'true' and '$(OS)' == 'Windows_NT'"/>

</Project>