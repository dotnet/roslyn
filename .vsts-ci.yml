resources:
- repo: self
  clean: true
queue:
  name: VSEng-MicroBuildVS2017
  timeoutInMinutes: 360
  demands: 
  - msbuild
  - visualstudio
  - DotNetFramework

variables:
  BuildPlatform: 'Any CPU'
steps:
- task: NuGetCommand@2
  inputs:
    command: custom
    arguments: 'locals all -clear'

- task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
  inputs:
    signType: real
  condition: and(succeeded(), in(variables['PB_SignType'], 'test', 'real'))

- task: ms-vseng.MicroBuildTasks.32f78468-e895-4f47-962c-58a699361df8.MicroBuildSwixPlugin@1
  inputs:
    feedSource: 'https://devdiv-test.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json'

- task: NuGetRestore@1
  inputs:
    solution: 'build\ToolsetPackages\InternalToolset.csproj'
    feed: '8f470c7e-ac49-4afe-a6ee-cf784e438b93'

- task: CmdLine@1
  displayName: Create output directory
  inputs:
    filename: mkdir
    arguments: 'Binaries\$(BuildConfiguration)'

- script: build\scripts\cibuild.cmd
            -configuration $(BuildConfiguration) -official -testDesktop -procdump
            /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            /p:DotNetSignType=$(PB_SignType)
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
  displayName: Build
  condition: succeeded()

- task: PowerShell@2
  displayName: Publish Assets
  inputs:
    arguments: '-config $(BuildConfiguration) -branchName "$(Build.SourceBranch)" -mygetApiKey $(Roslyn.MyGetApiKey) -nugetApiKey $(Roslyn.NuGetApiKey) -gitHubUserName $(Roslyn.GitHubUserName) -gitHubToken $(Roslyn.GitHubToken) -gitHubEmail $(Roslyn.GitHubEmail)'
    filePath: 'build\scripts\publish-assets.ps1'
  condition: succeeded()

- task: PublishBuildArtifacts@1
  displayName: Publish Logs
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\Binaries\$(BuildConfiguration)\Logs'
    ArtifactName: 'Build Diagnostic Files'
    publishLocation: Container
  continueOnError: true
  condition: succeededOrFailed()

- task: PublishTestResults@1
  displayName: Publish Test Results
  inputs:
    testRunner: XUnit
    testResultsFiles: '**/xUnitResults/*.xml'
    mergeTestResults: true
    testRunTitle: 'Unit Tests'
  condition: succeededOrFailed()

- task: ms-vseng.MicroBuildTasks.4305a8de-ba66-4d8b-b2d1-0dc4ecbbf5e8.MicroBuildUploadVstsDropFolder@1
  displayName: Upload VSTS Drop
  inputs:
    DropFolder: 'Binaries\VSSetup\$(BuildConfiguration)\Insertion'
  condition: succeeded()

- task: NuGetCommand@2
  displayName: NuGet CoreXT publish
  inputs:
    command: push
    feedsToUse: config
    packagesToPush: '$(Build.SourcesDirectory)\Binaries\$(BuildConfiguration)\DevDivPackages\**\*.nupkg'
    publishVstsFeed: '97a41293-2972-4f48-8c0e-05493ae82010'
    allowPackageConflicts: true
  condition: succeeded()

# Publish VSTS artifact that the RoslynInsertionTool is able to find by its name.
# The backing storage of the artifact is a file share.
- task: PublishBuildArtifacts@1
  displayName: Publish Drop - Binaries
  inputs:
    PathtoPublish: 'Binaries\$(BuildConfiguration)'
    ArtifactName: '$(Build.BuildNumber)'
    publishLocation: FilePath
    TargetPath: '$(DropRoot)\Roslyn-Signed\$(Build.SourceBranchName)\$(BuildConfiguration)'
    Parallel: true
    ParallelCount: 64
  condition: succeededOrFailed()

# Copy additional files to the drop directory
- task: PowerShell@2
  displayName: Publish Drop - VSSetup
  inputs:
    arguments: '-Source Binaries\VSSetup\$(BuildConfiguration)\Insertion -Target $(DropRoot)\Roslyn-Signed\$(Build.SourceBranchName)\$(BuildConfiguration)\$(Build.BuildNumber)\Insertion -ParallelCount 8'
    filePath: 'build\scripts\vsts-robocopy.ps1'
  condition: succeededOrFailed()

- task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
  displayName: Perform Cleanup Tasks
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: Publish MicroBuild Outputs
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\MicroBuild\Output'
    ArtifactName: '$(Build.BuildNumber)'
    publishLocation: FilePath
    TargetPath: '$(DropRoot)\Roslyn-Signed\$(Build.SourceBranchName)\$(BuildConfiguration)'
  condition: succeededOrFailed()

