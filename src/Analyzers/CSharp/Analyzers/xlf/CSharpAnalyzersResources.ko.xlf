<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../CSharpAnalyzersResources.resx">
    <body>
      <trans-unit id="Add_braces">
        <source>Add braces</source>
        <target state="translated">중괄호 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_braces_to_0_statement">
        <source>Add braces to '{0}' statement.</source>
        <target state="translated">'{0}' 문에 중괄호를 추가합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Blank_line_not_allowed_after_constructor_initializer_colon">
        <source>Blank line not allowed after constructor initializer colon</source>
        <target state="new">Blank line not allowed after constructor initializer colon</target>
        <note />
      </trans-unit>
      <trans-unit id="Consecutive_braces_must_not_have_a_blank_between_them">
        <source>Consecutive braces must not have blank line between them</source>
        <target state="new">Consecutive braces must not have blank line between them</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_switch_statement_to_expression">
        <source>Convert switch statement to expression</source>
        <target state="translated">switch 문을 식으로 변환</target>
        <note />
      </trans-unit>
      <trans-unit id="Deconstruct_variable_declaration">
        <source>Deconstruct variable declaration</source>
        <target state="translated">변수 선언 분해</target>
        <note />
      </trans-unit>
      <trans-unit id="Delegate_invocation_can_be_simplified">
        <source>Delegate invocation can be simplified.</source>
        <target state="translated">대리자 호출을 간단하게 만들 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Discard_can_be_removed">
        <source>Discard can be removed</source>
        <target state="translated">무시 항목은 제거할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Embedded_statements_must_be_on_their_own_line">
        <source>Embedded statements must be on their own line</source>
        <target state="new">Embedded statements must be on their own line</target>
        <note />
      </trans-unit>
      <trans-unit id="Indexing_can_be_simplified">
        <source>Indexing can be simplified</source>
        <target state="translated">인덱싱은 단순화될 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Inline_variable_declaration">
        <source>Inline variable declaration</source>
        <target state="translated">인라인 변수 선언</target>
        <note />
      </trans-unit>
      <trans-unit id="Misplaced_using_directive">
        <source>Misplaced using directive</source>
        <target state="translated">위치가 잘못된 using 지시문</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Move_misplaced_using_directives">
        <source>Move misplaced using directives</source>
        <target state="translated">위치가 잘못된 using 지시문 이동</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Make_readonly_fields_writable">
        <source>Make readonly fields writable</source>
        <target state="translated">readonly 필드를 쓰기 가능으로 지정</target>
        <note>{Locked="readonly"} "readonly" is C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Local_function_can_be_made_static">
        <source>Local function can be made static</source>
        <target state="translated">로컬 함수를 정적으로 지정할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_local_function_static">
        <source>Make local function 'static'</source>
        <target state="translated">로컬 함수를 '정적'으로 지정</target>
        <note />
      </trans-unit>
      <trans-unit id="Negate_expression_changes_semantics">
        <source>Negate expression (changes semantics)</source>
        <target state="translated">식 부정(의미 체계를 변경함)</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_operator_preserves_semantics">
        <source>Remove operator (preserves semantics)</source>
        <target state="translated">연산자 제거(의미 체계를 유지함)</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_suppression_operators">
        <source>Remove suppression operators</source>
        <target state="translated">비표시 오류(Suppression) 연산자 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnecessary_suppression_operator">
        <source>Remove unnecessary suppression operator</source>
        <target state="translated">불필요한 비표시 오류(Suppression) 연산자 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnessary_discard">
        <source>Remove unnecessary discard</source>
        <target state="translated">불필요한 무시 항목 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_default_expression">
        <source>Simplify 'default' expression</source>
        <target state="translated">default' 식 단순화</target>
        <note />
      </trans-unit>
      <trans-unit id="Struct_contains_assignment_to_this_outside_of_constructor_Make_readonly_fields_writable">
        <source>Struct contains assignment to 'this' outside of constructor. Make readonly fields writable.</source>
        <target state="needs-review-translation">Struct에서 'this'에 대한 할당이 생성자 외부에 있습니다. 읽기 전용 필드를 쓰기 가능으로 설정하세요.</target>
        <note>{Locked="Struct"}{Locked="this"} these are C#/VB keywords and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Suppression_operator_has_no_effect_and_can_be_misinterpreted">
        <source>Suppression operator has no effect and can be misinterpreted</source>
        <target state="translated">비표시 오류(Suppression) 연산자는 아무런 영향을 주지 않으며 잘못 해석될 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unreachable_code_detected">
        <source>Unreachable code detected</source>
        <target state="translated">접근할 수 없는 코드가 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_accessors">
        <source>Use block body for accessors</source>
        <target state="translated">접근자에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_constructors">
        <source>Use block body for constructors</source>
        <target state="translated">생성자에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_indexers">
        <source>Use block body for indexers</source>
        <target state="translated">인덱서에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_local_functions">
        <source>Use block body for local functions</source>
        <target state="translated">로컬 함수에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_methods">
        <source>Use block body for methods</source>
        <target state="translated">메서드에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_operators">
        <source>Use block body for operators</source>
        <target state="translated">연산자에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_properties">
        <source>Use block body for properties</source>
        <target state="translated">속성에 블록 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_explicit_type">
        <source>Use explicit type</source>
        <target state="translated">명시적 형식 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_explicit_type_instead_of_var">
        <source>Use explicit type instead of 'var'</source>
        <target state="translated">var' 대신에 명시적 형식을 사용합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_accessors">
        <source>Use expression body for accessors</source>
        <target state="translated">접근자에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_constructors">
        <source>Use expression body for constructors</source>
        <target state="translated">생성자에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_indexers">
        <source>Use expression body for indexers</source>
        <target state="translated">인덱서에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_local_functions">
        <source>Use expression body for local functions</source>
        <target state="translated">로컬 함수의 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_methods">
        <source>Use expression body for methods</source>
        <target state="translated">메서드에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_operators">
        <source>Use expression body for operators</source>
        <target state="translated">연산자에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_properties">
        <source>Use expression body for properties</source>
        <target state="translated">속성에 식 본문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_implicit_type">
        <source>Use implicit type</source>
        <target state="translated">암시적 형식 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_index_operator">
        <source>Use index operator</source>
        <target state="translated">인덱스 연산자 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_is_null_check">
        <source>Use 'is null' check</source>
        <target state="translated">is null' 검사 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_local_function">
        <source>Use local function</source>
        <target state="translated">로컬 함수 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_new">
        <source>Use 'new(...)'</source>
        <target state="translated">'new(...)' 사용</target>
        <note>{Locked="new(...)"} This is a C# construct and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Use_pattern_matching">
        <source>Use pattern matching</source>
        <target state="translated">패턴 일치 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_range_operator">
        <source>Use range operator</source>
        <target state="translated">범위 연산자 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_simple_using_statement">
        <source>Use simple 'using' statement</source>
        <target state="translated">간단한 'using' 문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_switch_expression">
        <source>Use 'switch' expression</source>
        <target state="translated">'switch' 식 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_directives_must_be_placed_inside_of_a_namespace_declaration">
        <source>Using directives must be placed inside of a namespace declaration</source>
        <target state="translated">Using 지시문은 namespace 선언 내부에 배치되어야 합니다.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized. {Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Using_directives_must_be_placed_outside_of_a_namespace_declaration">
        <source>Using directives must be placed outside of a namespace declaration</source>
        <target state="translated">Using 지시문은 namespace 선언 외부에 배치되어야 합니다.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized. {Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_deconstructed">
        <source>Variable declaration can be deconstructed</source>
        <target state="translated">변수 선언을 분해할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_inlined">
        <source>Variable declaration can be inlined</source>
        <target state="translated">변수 선언은 인라인될 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Moving_using_directives_may_change_code_meaning">
        <source>Warning: Moving using directives may change code meaning.</source>
        <target state="translated">경고: using 지시문을 이동하면 코드 의미가 변경될 수 있습니다.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="_0_can_be_simplified">
        <source>{0} can be simplified</source>
        <target state="translated">{0}은(는) 단순화될 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="default_expression_can_be_simplified">
        <source>'default' expression can be simplified</source>
        <target state="translated">'default' 식을 단순화할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="if_statement_can_be_simplified">
        <source>'if' statement can be simplified</source>
        <target state="translated">'if' 문을 간단하게 줄일 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="new_expression_can_be_simplified">
        <source>'new' expression can be simplified</source>
        <target state="translated">'new' 식을 간단하게 줄일 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="typeof_can_be_converted_ to_nameof">
        <source>'typeof' can be converted  to 'nameof'</source>
        <target state="translated">'typeof'를 'nameof'로 변환할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="use_var_instead_of_explicit_type">
        <source>use 'var' instead of explicit type</source>
        <target state="translated">대신 명시적 형식의 'var'을 사용합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_directive_is_unnecessary">
        <source>Using directive is unnecessary.</source>
        <target state="translated">Using 지시문은 필요하지 않습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="using_statement_can_be_simplified">
        <source>'using' statement can be simplified</source>
        <target state="translated">'using' 문을 간소화할 수 있습니다.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>