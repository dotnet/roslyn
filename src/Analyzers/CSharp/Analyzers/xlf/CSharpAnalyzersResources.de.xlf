<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="de" original="../CSharpAnalyzersResources.resx">
    <body>
      <trans-unit id="Add_braces">
        <source>Add braces</source>
        <target state="translated">Geschweifte Klammern hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_braces_to_0_statement">
        <source>Add braces to '{0}' statement.</source>
        <target state="translated">Der Anweisung "{0}" geschweifte Klammern hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Blank_line_not_allowed_after_arrow_expression_clause_token">
        <source>Blank line not allowed after arrow expression clause token</source>
        <target state="translated">Nach dem Token der Pfeilausdrucksklausel ist keine leere Zeile zulässig</target>
        <note />
      </trans-unit>
      <trans-unit id="Blank_line_not_allowed_after_conditional_expression_token">
        <source>Blank line not allowed after conditional expression token</source>
        <target state="translated">Leere Zeile nach bedingtem Ausdruckstoken nicht zulässig</target>
        <note />
      </trans-unit>
      <trans-unit id="Blank_line_not_allowed_after_constructor_initializer_colon">
        <source>Blank line not allowed after constructor initializer colon</source>
        <target state="translated">Nach dem Doppelpunkt für den Initialisierer des Konstruktors ist keine leere Zeile zulässig.</target>
        <note />
      </trans-unit>
      <trans-unit id="Consecutive_braces_must_not_have_a_blank_between_them">
        <source>Consecutive braces must not have blank line between them</source>
        <target state="translated">Aufeinanderfolgende geschweifte Klammern dürfen keine leere Zeile einschließen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_switch_statement_to_expression">
        <source>Convert switch statement to expression</source>
        <target state="translated">Switch-Anweisung in Ausdruck konvertieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_Program_Main_style_program">
        <source>Convert to 'Program.Main' style program</source>
        <target state="translated">In 'Program.Main' Programmformat konvertieren</target>
        <note>{Locked="Program.Main"} this is the C# syntax we are going to generate</note>
      </trans-unit>
      <trans-unit id="Convert_to_block_scoped_namespace">
        <source>Convert to block scoped namespace</source>
        <target state="translated">In namespace eines Blockbereichs konvertieren</target>
        <note>{Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Convert_to_file_scoped_namespace">
        <source>Convert to file-scoped namespace</source>
        <target state="translated">In namespace eines Dateibereichs konvertieren</target>
        <note>{Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Convert_to_top_level_statements">
        <source>Convert to top-level statements</source>
        <target state="translated">Konvertieren in Anweisungen der obersten Ebene</target>
        <note />
      </trans-unit>
      <trans-unit id="Deconstruct_variable_declaration">
        <source>Deconstruct variable declaration</source>
        <target state="translated">Variablendeklaration dekonstruieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Delegate_invocation_can_be_simplified">
        <source>Delegate invocation can be simplified.</source>
        <target state="translated">Der Delegataufruf kann vereinfacht werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Discard_can_be_removed">
        <source>Discard can be removed</source>
        <target state="translated">discard-Element kann entfernt werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Embedded_statements_must_be_on_their_own_line">
        <source>Embedded statements must be on their own line</source>
        <target state="translated">Eingebettete Anweisungen müssen in einer eigenen Zeile enthalten sein.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indexing_can_be_simplified">
        <source>Indexing can be simplified</source>
        <target state="translated">Die Indizierung kann vereinfacht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Inline_variable_declaration">
        <source>Inline variable declaration</source>
        <target state="translated">Inlinevariablendeklaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Lambda_expression_can_be_removed">
        <source>Lambda expression can be removed</source>
        <target state="translated">Lambdaausdruck kann entfernt werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_member_readonly">
        <source>Make member 'readonly'</source>
        <target state="translated">Member als "readonly" festlegen</target>
        <note>{Locked="readonly"} "readonly" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Make_struct_readonly">
        <source>Make struct 'readonly'</source>
        <target state="translated">Struktur als "readonly" festlegen</target>
        <note />
      </trans-unit>
      <trans-unit id="Member_can_be_made_readonly">
        <source>Member can be made 'readonly'</source>
        <target state="translated">Member kann als "readonly" festgelegt werden</target>
        <note>{Locked="readonly"} "readonly" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Misplaced_using_directive">
        <source>Misplaced using directive</source>
        <target state="translated">Die using-Anweisung wurde falsch platziert.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Move_misplaced_using_directives">
        <source>Move misplaced using directives</source>
        <target state="translated">Falsch platzierte using-Anweisungen verschieben</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Make_readonly_fields_writable">
        <source>Make readonly fields writable</source>
        <target state="translated">readonly-Felder als schreibbar festlegen</target>
        <note>{Locked="readonly"} "readonly" is C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Local_function_can_be_made_static">
        <source>Local function can be made static</source>
        <target state="translated">Die lokale Funktion kann als statisch festgelegt werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_local_function_static">
        <source>Make local function 'static'</source>
        <target state="translated">Lokale Funktion als "static" festlegen</target>
        <note />
      </trans-unit>
      <trans-unit id="Negate_expression_changes_semantics">
        <source>Negate expression (changes semantics)</source>
        <target state="translated">Ausdruck negieren (Semantik ändern)</target>
        <note />
      </trans-unit>
      <trans-unit id="Null_check_can_be_clarified">
        <source>Null check can be clarified</source>
        <target state="translated">Die NULL-Überprüfung kann verdeutlicht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Nullable_directive_is_redundant">
        <source>Nullable directive is redundant</source>
        <target state="translated">Nullable Direktive ist überflüssig</target>
        <note />
      </trans-unit>
      <trans-unit id="Nullable_directive_is_unnecessary">
        <source>Nullable directive is unnecessary</source>
        <target state="translated">Nullable Direktive ist unnötig</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_null_check_over_type_check">
        <source>Prefer 'null' check over type check</source>
        <target state="translated">„NULL“-Überprüfung vor Typüberprüfung bevorzugen</target>
        <note />
      </trans-unit>
      <trans-unit id="Property_pattern_can_be_simplified">
        <source>Property pattern can be simplified</source>
        <target state="translated">Das Eigenschaftsmuster kann vereinfacht werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_operator_preserves_semantics">
        <source>Remove operator (preserves semantics)</source>
        <target state="translated">Operator entfernen (Semantik beibehalten)</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_redundant_nullable_directive">
        <source>Remove redundant nullable directive</source>
        <target state="translated">Die redundante nullable-Direktive entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_suppression_operators">
        <source>Remove suppression operators</source>
        <target state="translated">Unterdrückungsoperatoren entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnecessary_lambda_expression">
        <source>Remove unnecessary lambda expression</source>
        <target state="translated">Unnötigen Lambdaausdruck entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnecessary_nullable_directive">
        <source>Remove unnecessary nullable directive</source>
        <target state="translated">Unnötige Nullable-Direktiven entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnecessary_suppression_operator">
        <source>Remove unnecessary suppression operator</source>
        <target state="translated">Unnötigen Unterdrückungsoperator entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_unnessary_discard">
        <source>Remove unnecessary discard</source>
        <target state="translated">Nicht benötigtes discard-Element entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_default_expression">
        <source>Simplify 'default' expression</source>
        <target state="translated">"default"-Ausdruck vereinfachen</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_delegate_invocation">
        <source>Simplify delegate invocation</source>
        <target state="translated">Vereinfachen des Delegatenaufrufs</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_property_pattern">
        <source>Simplify property pattern</source>
        <target state="translated">Eigenschaftenmuster vereinfachen</target>
        <note />
      </trans-unit>
      <trans-unit id="Struct_can_be_made_readonly">
        <source>Struct can be made 'readonly'</source>
        <target state="translated">Struktur kann als "readonly" festgelegt werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Struct_contains_assignment_to_this_outside_of_constructor_Make_readonly_fields_writable">
        <source>Struct contains assignment to 'this' outside of constructor. Make readonly fields writable.</source>
        <target state="translated">"Struct" enthält außerhalb des Konstruktors eine Zuweisung zu "this". Legen Sie schreibgeschützte Felder als beschreibbar fest.</target>
        <note>{Locked="Struct"}{Locked="this"} these are C#/VB keywords and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Suppression_operator_has_no_effect_and_can_be_misinterpreted">
        <source>Suppression operator has no effect and can be misinterpreted</source>
        <target state="translated">Der Unterdrückungsoperator besitzt keine Auswirkungen und kann falsch interpretiert werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Unreachable_code_detected">
        <source>Unreachable code detected</source>
        <target state="translated">Unerreichbarer Code wurde entdeckt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Utf8_string_literal">
        <source>Use UTF-8 string literal</source>
        <target state="translated">Verwenden des UTF-8-Zeichenfolgenliterals</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_accessor">
        <source>Use block body for accessor</source>
        <target state="translated">Blocktextkörper für Zugriffsmethode verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_constructor">
        <source>Use block body for constructor</source>
        <target state="translated">Blocktextkörper für Konstruktor verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_conversion_operator">
        <source>Use block body for conversion operator</source>
        <target state="translated">Blocktext für Konvertierungsoperator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_indexer">
        <source>Use block body for indexer</source>
        <target state="translated">Blocktextkörper für Indexer verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_lambda_expression">
        <source>Use block body for lambda expression</source>
        <target state="translated">Blocktextkörper für Lambdafunktion verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_local_function">
        <source>Use block body for local function</source>
        <target state="translated">Blocktextkörper für lokale Funktion verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_method">
        <source>Use block body for method</source>
        <target state="translated">Blocktextkörper für Methode verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_operator">
        <source>Use block body for operator</source>
        <target state="translated">Blocktextkörper für Operator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_block_body_for_property">
        <source>Use block body for property</source>
        <target state="translated">Blocktextkörper für Eigenschaft verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_explicit_type">
        <source>Use explicit type</source>
        <target state="translated">Expliziten Typ verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_explicit_type_instead_of_var">
        <source>Use explicit type instead of 'var'</source>
        <target state="translated">Expliziten Typ anstelle von "var" verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_accessor">
        <source>Use expression body for accessor</source>
        <target state="translated">Ausdruckskörper für Zugriffsmethode verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_constructor">
        <source>Use expression body for constructor</source>
        <target state="translated">Ausdruckskörper für Konstruktor verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_conversion_operator">
        <source>Use expression body for conversion operator</source>
        <target state="translated">Ausdruckstext für Konvertierungsoperator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_indexer">
        <source>Use expression body for indexer</source>
        <target state="translated">Ausdruckskörper für Indexer verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_lambda_expression">
        <source>Use expression body for lambda expression</source>
        <target state="translated">Ausdruckskörper für Lambdafunktion verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_local_function">
        <source>Use expression body for local function</source>
        <target state="translated">Ausdruckskörper für lokale Funktion verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_method">
        <source>Use expression body for method</source>
        <target state="translated">Ausdruckskörper für Methode verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_operator">
        <source>Use expression body for operator</source>
        <target state="translated">Ausdruckskörper für Operator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_property">
        <source>Use expression body for property</source>
        <target state="translated">Ausdruckskörper für Eigenschaft verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_implicit_type">
        <source>Use implicit type</source>
        <target state="translated">Impliziten Typ verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_index_operator">
        <source>Use index operator</source>
        <target state="translated">Indexoperator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_is_not_null_check">
        <source>Use 'is not null' check</source>
        <target state="translated">„Ist nicht NULL“-Überprüfung verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_is_null_check">
        <source>Use 'is null' check</source>
        <target state="translated">"Ist NULL"-Prüfung verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_is_object_check">
        <source>Use 'is object' check</source>
        <target state="translated">„Ist Objekt“-Überprüfung verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_local_function">
        <source>Use local function</source>
        <target state="translated">Lokale Funktion verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_nameof">
        <source>Use 'nameof'</source>
        <target state="translated">„nameof“ verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_new">
        <source>Use 'new(...)'</source>
        <target state="translated">"new(...)" verwenden</target>
        <note>{Locked="new(...)"} This is a C# construct and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Use_pattern_matching">
        <source>Use pattern matching</source>
        <target state="translated">Musterabgleich verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_pattern_matching_may_change_code_meaning">
        <source>Use pattern matching (may change code meaning)</source>
        <target state="translated">Musterabgleich verwenden (kann Codebedeutung ändern)</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_primary_constructor">
        <source>Use primary constructor</source>
        <target state="translated">Primären Konstruktor verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_range_operator">
        <source>Use range operator</source>
        <target state="translated">Bereichsoperator verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_simple_using_statement">
        <source>Use simple 'using' statement</source>
        <target state="translated">Einfache using-Anweisung verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_switch_expression">
        <source>Use 'switch' expression</source>
        <target state="translated">Switch-Ausdruck verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_tuple_to_swap_values">
        <source>Use tuple to swap values</source>
        <target state="translated">Tupel zum Tauschen von Werten verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_directives_must_be_placed_inside_of_a_namespace_declaration">
        <source>Using directives must be placed inside of a namespace declaration</source>
        <target state="translated">Using-Anweisungen müssen in einer namespace-Deklaration platziert werden.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized. {Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Using_directives_must_be_placed_outside_of_a_namespace_declaration">
        <source>Using directives must be placed outside of a namespace declaration</source>
        <target state="translated">Using-Anweisungen müssen außerhalb einer namespace-Deklaration platziert werden.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized. {Locked="namespace"} "namespace" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_deconstructed">
        <source>Variable declaration can be deconstructed</source>
        <target state="translated">Die Variablendeklaration kann dekonstruiert werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Variable_declaration_can_be_inlined">
        <source>Variable declaration can be inlined</source>
        <target state="translated">Variablendeklaration kann inline erfolgen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_colon_Moving_using_directives_may_change_code_meaning">
        <source>Warning: Moving using directives may change code meaning.</source>
        <target state="translated">Warnung: Durch das Verschieben von using-Anweisungen kann sich die Codebedeutung ändern.</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="_0_can_be_simplified">
        <source>{0} can be simplified</source>
        <target state="translated">{0} kann vereinfacht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="default_expression_can_be_simplified">
        <source>'default' expression can be simplified</source>
        <target state="translated">'"default"-Ausdruck kann vereinfacht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="if_statement_can_be_simplified">
        <source>'if' statement can be simplified</source>
        <target state="translated">Die If-Anweisung kann vereinfacht werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="new_expression_can_be_simplified">
        <source>'new' expression can be simplified</source>
        <target state="translated">new-Ausdruck kann vereinfacht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="typeof_can_be_converted_ to_nameof">
        <source>'typeof' can be converted  to 'nameof'</source>
        <target state="translated">"typeof" kann in "nameof" konvertiert werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="use_var_instead_of_explicit_type">
        <source>use 'var' instead of explicit type</source>
        <target state="translated">"var" anstelle des expliziten Typs verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_directive_is_unnecessary">
        <source>Using directive is unnecessary.</source>
        <target state="translated">Using-Direktive ist unnötig.</target>
        <note />
      </trans-unit>
      <trans-unit id="using_statement_can_be_simplified">
        <source>'using' statement can be simplified</source>
        <target state="translated">Die using-Anweisung kann vereinfacht werden.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>