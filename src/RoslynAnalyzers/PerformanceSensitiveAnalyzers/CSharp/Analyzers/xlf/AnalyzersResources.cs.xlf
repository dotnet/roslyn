<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="cs" original="../AnalyzersResources.resx">
    <body>
      <trans-unit id="ClosureCaptureRuleMessage">
        <source>The compiler will emit a class that will hold this as a field to allow capturing of this closure</source>
        <target state="translated">Kompilátor vygeneruje třídu, která toto bude uchovávat jako pole, aby se toto uzavření dalo zachytit.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureCaptureRuleTitle">
        <source>Display class allocation to capture closure</source>
        <target state="translated">Zobrazit přidělení třídy, aby se zachytilo uzavření</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureDriverRuleMessage">
        <source>Heap allocation of closure Captures: {0}</source>
        <target state="translated">Přidělení haldy zachycení uzavření: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureDriverRuleTitle">
        <source>Closure Allocation Source</source>
        <target state="translated">Zdroj přidělení uzavření</target>
        <note />
      </trans-unit>
      <trans-unit id="DelegateOnStructInstanceRuleMessage">
        <source>Struct instance method being used for delegate creation, this will result in a boxing instruction</source>
        <target state="translated">Instanční metoda struct, pomocí které se deleguje vytváření. Toto způsobí instrukci zabalení.</target>
        <note />
      </trans-unit>
      <trans-unit id="DelegateOnStructInstanceRuleTitle">
        <source>Delegate on struct instance caused a boxing allocation</source>
        <target state="translated">Delegát v instanci struktury způsobil přidělení zabalení</target>
        <note />
      </trans-unit>
      <trans-unit id="LambaOrAnonymousMethodInGenericMethodRuleMessage">
        <source>Considering moving this out of the generic method</source>
        <target state="translated">Zvažte možnost přesunout to mimo obecnou metodu.</target>
        <note />
      </trans-unit>
      <trans-unit id="LambaOrAnonymousMethodInGenericMethodRuleTitle">
        <source>Lambda or anonymous method in a generic method allocates a delegate instance</source>
        <target state="translated">Lambda nebo anonymní metoda v obecné metodě přidělují instanci delegáta</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodGroupAllocationRuleMessage">
        <source>This will allocate a delegate instance</source>
        <target state="translated">Tato operace přidělí instanci delegáta.</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodGroupAllocationRuleTitle">
        <source>Delegate allocation from a method group</source>
        <target state="translated">Přidělení delegáta ze skupiny metod</target>
        <note />
      </trans-unit>
      <trans-unit id="ParamsParameterRuleMessage">
        <source>This call site is calling into a function with a 'params' parameter. This results in an array allocation.</source>
        <target state="translated">Tato lokalita volání volá funkci s parametrem params. Výsledkem je přidělení pole.</target>
        <note />
      </trans-unit>
      <trans-unit id="ParamsParameterRuleTitle">
        <source>Array allocation for params parameter</source>
        <target state="translated">Přidělení pole pro parametr params</target>
        <note />
      </trans-unit>
      <trans-unit id="ReadonlyMethodGroupAllocationRuleMessage">
        <source>This will allocate a delegate instance</source>
        <target state="translated">Tato operace přidělí instanci delegáta.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReadonlyMethodGroupAllocationRuleTitle">
        <source>Delegate allocation from a method group</source>
        <target state="translated">Přidělení delegáta ze skupiny metod</target>
        <note />
      </trans-unit>
      <trans-unit id="ReferenceTypeEnumeratorRuleMessage">
        <source>Non-ValueType enumerator may result in a heap allocation</source>
        <target state="translated">Enumerátor, který není ValueType, může způsobit přidělení haldy.</target>
        <note />
      </trans-unit>
      <trans-unit id="ReferenceTypeEnumeratorRuleTitle">
        <source>Possible allocation of reference type enumerator</source>
        <target state="translated">Možné přidělení enumerátoru typů odkazů</target>
        <note />
      </trans-unit>
      <trans-unit id="StringConcatenationAllocationRuleMessage">
        <source>Considering using StringBuilder</source>
        <target state="translated">Zvažte možnost použít StringBuilder.</target>
        <note />
      </trans-unit>
      <trans-unit id="StringConcatenationAllocationRuleTitle">
        <source>Implicit string concatenation allocation</source>
        <target state="translated">Implicitní přidělení zřetězení řetězců</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeNonOverridenCallRuleMessage">
        <source>Non-overridden virtual method call on a value type adds a boxing or constrained instruction</source>
        <target state="translated">Volání nepřepsané virtuální metody pro typ hodnoty přidává instrukci zabalení nebo omezenou instrukci.</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeNonOverridenCallRuleTitle">
        <source>Non-overridden virtual method call on value type</source>
        <target state="translated">Volání nepřepsané virtuální metody pro typ hodnoty</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeConversionRuleMessage">
        <source>Value type to reference type conversion causes boxing at call site (here), and unboxing at the callee-site. Consider using generics if applicable.</source>
        <target state="translated">Typ hodnoty pro převod typu odkazu způsobuje zabalení v lokalitě volání (tady) a rozbalení v lokalitě volajícího. Zvažte možnost použít obecné typy, pokud je to možné.</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeConversionRuleTitle">
        <source>Value type to reference type conversion causing boxing allocation</source>
        <target state="translated">Typ hodnoty pro převod typů odkazů způsobuje přidělení zabalení</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeInAStringConcatenationRuleMessage">
        <source>Value type ({0}) is being boxed to a reference type for a string concatenation</source>
        <target state="translated">Typ hodnoty ({0}) se balí do typu odkazu pro zřetězení řetězců.</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeInAStringConcatenationRuleTitle">
        <source>Value type to reference type conversion allocation for string concatenation</source>
        <target state="translated">Přidělení typu hodnoty pro převod typů odkazů pro řetězení řetězců</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>