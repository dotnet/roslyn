<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../AnalyzersResources.resx">
    <body>
      <trans-unit id="ClosureCaptureRuleMessage">
        <source>The compiler will emit a class that will hold this as a field to allow capturing of this closure</source>
        <target state="translated">コンパイラは、このクロージャのキャプチャを可能にするフィールドとしてこれを保持するクラスを生成します</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureCaptureRuleTitle">
        <source>Display class allocation to capture closure</source>
        <target state="translated">クラスの割り当てを表示してクロージャをキャプチャする</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureDriverRuleMessage">
        <source>Heap allocation of closure Captures: {0}</source>
        <target state="translated">クロージャのヒープ割り当ては次をキャプチャします: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ClosureDriverRuleTitle">
        <source>Closure Allocation Source</source>
        <target state="translated">クロージャ割り当てソース</target>
        <note />
      </trans-unit>
      <trans-unit id="DelegateOnStructInstanceRuleMessage">
        <source>Struct instance method being used for delegate creation, this will result in a boxing instruction</source>
        <target state="translated">デリゲートの作成に使用されている構造体インスタンス メソッドで、これはボックス化命令になります</target>
        <note />
      </trans-unit>
      <trans-unit id="DelegateOnStructInstanceRuleTitle">
        <source>Delegate on struct instance caused a boxing allocation</source>
        <target state="translated">構造体インスタンスでのデリゲートが、ボックス化の割り当てを引き起こしました</target>
        <note />
      </trans-unit>
      <trans-unit id="LambaOrAnonymousMethodInGenericMethodRuleMessage">
        <source>Considering moving this out of the generic method</source>
        <target state="translated">これをジェネリック メソッドから移行することを検討します</target>
        <note />
      </trans-unit>
      <trans-unit id="LambaOrAnonymousMethodInGenericMethodRuleTitle">
        <source>Lambda or anonymous method in a generic method allocates a delegate instance</source>
        <target state="translated">ジェネリック メソッド内のラムダ式または匿名メソッドは、デリゲート インスタンスを割り当てます</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodGroupAllocationRuleMessage">
        <source>This will allocate a delegate instance</source>
        <target state="translated">これにより、デリゲート インスタンスが割り当てられます</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodGroupAllocationRuleTitle">
        <source>Delegate allocation from a method group</source>
        <target state="translated">メソッド グループからのデリゲート割り当て</target>
        <note />
      </trans-unit>
      <trans-unit id="ParamsParameterRuleMessage">
        <source>This call site is calling into a function with a 'params' parameter. This results in an array allocation.</source>
        <target state="translated">この呼び出しサイトは 'params' パラメーターを持つ関数を呼び出しています。結果として、配列が割り当てられます。</target>
        <note />
      </trans-unit>
      <trans-unit id="ParamsParameterRuleTitle">
        <source>Array allocation for params parameter</source>
        <target state="translated">params パラメーターの配列の割り当て</target>
        <note />
      </trans-unit>
      <trans-unit id="ReadonlyMethodGroupAllocationRuleMessage">
        <source>This will allocate a delegate instance</source>
        <target state="translated">これにより、デリゲート インスタンスが割り当てられます</target>
        <note />
      </trans-unit>
      <trans-unit id="ReadonlyMethodGroupAllocationRuleTitle">
        <source>Delegate allocation from a method group</source>
        <target state="translated">メソッド グループからのデリゲート割り当て</target>
        <note />
      </trans-unit>
      <trans-unit id="ReferenceTypeEnumeratorRuleMessage">
        <source>Non-ValueType enumerator may result in a heap allocation</source>
        <target state="translated">非 ValueType 列挙子は、ヒープの割り当てを発生させる可能性があります</target>
        <note />
      </trans-unit>
      <trans-unit id="ReferenceTypeEnumeratorRuleTitle">
        <source>Possible allocation of reference type enumerator</source>
        <target state="translated">参照型列挙子の可能な割り当て</target>
        <note />
      </trans-unit>
      <trans-unit id="StringConcatenationAllocationRuleMessage">
        <source>Considering using StringBuilder</source>
        <target state="translated">StringBuilder の使用を検討します</target>
        <note />
      </trans-unit>
      <trans-unit id="StringConcatenationAllocationRuleTitle">
        <source>Implicit string concatenation allocation</source>
        <target state="translated">暗黙的な文字列連結の割り当て</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeNonOverridenCallRuleMessage">
        <source>Non-overridden virtual method call on a value type adds a boxing or constrained instruction</source>
        <target state="translated">値の型へのオーバーロードされていない仮想メソッド呼び出しにより、ボックス化または制限付きの命令が追加されます</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeNonOverridenCallRuleTitle">
        <source>Non-overridden virtual method call on value type</source>
        <target state="translated">値の型へのオーバーライドされていない仮想メソッド呼び出し</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeConversionRuleMessage">
        <source>Value type to reference type conversion causes boxing at call site (here), and unboxing at the callee-site. Consider using generics if applicable.</source>
        <target state="translated">値の型から参照型への変換は、呼び出しサイト (ここ) でのボックス化と、呼び出し先サイトでのボックス化解除につながります。該当する場合は、ジェネリックの使用を検討してください。</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeConversionRuleTitle">
        <source>Value type to reference type conversion causing boxing allocation</source>
        <target state="translated">ボックス化割り当ての原因となる、値の型から参照型への変換</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeInAStringConcatenationRuleMessage">
        <source>Value type ({0}) is being boxed to a reference type for a string concatenation</source>
        <target state="translated">値の型 ({0}) は、文字列連結のための参照型にボックス化されています</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueTypeToReferenceTypeInAStringConcatenationRuleTitle">
        <source>Value type to reference type conversion allocation for string concatenation</source>
        <target state="translated">文字列連結のための、値の型から参照型への変換割り当て</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>