<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../BasicVSResources.resx">
    <body>
      <trans-unit id="Microsoft_Visual_Basic">
        <source>Microsoft Visual Basic</source>
        <target state="new">Microsoft Visual Basic</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_Snippet">
        <source>Insert Snippet</source>
        <target state="new">Insert Snippet</target>
        <note />
      </trans-unit>
      <trans-unit id="IntelliSense">
        <source>IntelliSense</source>
        <target state="new">IntelliSense</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_local_declaration_to_the_extracted_method_if_it_is_not_used_elsewhere">
        <source>_Move local declaration to the extracted method if it is not used elsewhere</source>
        <target state="new">_Move local declaration to the extracted method if it is not used elsewhere</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatic_insertion_of_Interface_and_MustOverride_members">
        <source>Automatic _insertion of Interface and MustOverride members</source>
        <target state="new">Automatic _insertion of Interface and MustOverride members</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_procedure_line_separators">
        <source>_Show procedure line separators</source>
        <target state="new">_Show procedure line separators</target>
        <note />
      </trans-unit>
      <trans-unit id="Don_t_put_ByRef_on_custom_structure">
        <source>_Don't put ByRef on custom structure</source>
        <target state="new">_Don't put ByRef on custom structure</target>
        <note />
      </trans-unit>
      <trans-unit id="Editor_Help">
        <source>Editor Help</source>
        <target state="new">Editor Help</target>
        <note />
      </trans-unit>
      <trans-unit id="A_utomatic_insertion_of_end_constructs">
        <source>A_utomatic insertion of end constructs</source>
        <target state="new">A_utomatic insertion of end constructs</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_related_keywords_under_cursor">
        <source>Highlight related _keywords under cursor</source>
        <target state="new">Highlight related _keywords under cursor</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_references_to_symbol_under_cursor">
        <source>_Highlight references to symbol under cursor</source>
        <target state="new">_Highlight references to symbol under cursor</target>
        <note />
      </trans-unit>
      <trans-unit id="Pretty_listing_reformatting_of_code">
        <source>_Pretty listing (reformatting) of code</source>
        <target state="new">_Pretty listing (reformatting) of code</target>
        <note />
      </trans-unit>
      <trans-unit id="Enter_outlining_mode_when_files_open">
        <source>_Enter outlining mode when files open</source>
        <target state="new">_Enter outlining mode when files open</target>
        <note />
      </trans-unit>
      <trans-unit id="Extract_Method">
        <source>Extract Method</source>
        <target state="new">Extract Method</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_XML_documentation_comments_for">
        <source>_Generate XML documentation comments for '''</source>
        <target state="new">_Generate XML documentation comments for '''</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlighting">
        <source>Highlighting</source>
        <target state="new">Highlighting</target>
        <note />
      </trans-unit>
      <trans-unit id="Optimize_for_solution_size">
        <source>Optimize for solution size</source>
        <target state="new">Optimize for solution size</target>
        <note />
      </trans-unit>
      <trans-unit id="Large">
        <source>Large</source>
        <target state="new">Large</target>
        <note />
      </trans-unit>
      <trans-unit id="Regular">
        <source>Regular</source>
        <target state="new">Regular</target>
        <note />
      </trans-unit>
      <trans-unit id="Small">
        <source>Small</source>
        <target state="new">Small</target>
        <note />
      </trans-unit>
      <trans-unit id="Performance">
        <source>Performance</source>
        <target state="new">Performance</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_preview_for_rename_tracking">
        <source>Show preview for rename _tracking</source>
        <target state="new">Show preview for rename _tracking</target>
        <note />
      </trans-unit>
      <trans-unit id="Navigate_to_Object_Browser_for_symbols_defined_in_metadata">
        <source>_Navigate to Object Browser for symbols defined in metadata</source>
        <target state="new">_Navigate to Object Browser for symbols defined in metadata</target>
        <note />
      </trans-unit>
      <trans-unit id="Go_to_Definition">
        <source>Go to Definition</source>
        <target state="new">Go to Definition</target>
        <note />
      </trans-unit>
      <trans-unit id="Import_Directives">
        <source>Import Directives</source>
        <target state="new">Import Directives</target>
        <note />
      </trans-unit>
      <trans-unit id="Suggest_imports_for_types_in_NuGet_packages">
        <source>Suggest imports for types in _NuGet packages</source>
        <target state="new">Suggest imports for types in _NuGet packages</target>
        <note />
      </trans-unit>
      <trans-unit id="Suggest_imports_for_types_in_reference_assemblies">
        <source>Suggest imports for types in _reference assemblies</source>
        <target state="new">Suggest imports for types in _reference assemblies</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_System_directives_first_when_sorting_imports">
        <source>_Place 'System' directives first when sorting imports</source>
        <target state="new">_Place 'System' directives first when sorting imports</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_event_access_with_Me">
        <source>Qualify event access with 'Me'</source>
        <target state="new">Qualify event access with 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_field_access_with_Me">
        <source>Qualify field access with 'Me'</source>
        <target state="new">Qualify field access with 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_method_access_with_Me">
        <source>Qualify method access with 'Me'</source>
        <target state="new">Qualify method access with 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_property_access_with_Me">
        <source>Qualify property access with 'Me'</source>
        <target state="new">Qualify property access with 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Do_not_prefer_Me">
        <source>Do not prefer 'Me.'</source>
        <target state="new">Do not prefer 'Me.'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_Me">
        <source>Prefer 'Me.'</source>
        <target state="new">Prefer 'Me.'</target>
        <note />
      </trans-unit>
      <trans-unit id="Me_preferences_colon">
        <source>'Me.' preferences:</source>
        <target state="new">'Me.' preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="Predefined_type_preferences_colon">
        <source>Predefined type preferences:</source>
        <target state="new">Predefined type preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_matching_portions_of_completion_list_items">
        <source>_Highlight matching portions of completion list items</source>
        <target state="new">_Highlight matching portions of completion list items</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_item_filters">
        <source>Show completion item _filters</source>
        <target state="new">Show completion item _filters</target>
        <note />
      </trans-unit>
      <trans-unit id="Completion_Lists">
        <source>Completion Lists</source>
        <target state="new">Completion Lists</target>
        <note />
      </trans-unit>
      <trans-unit id="Enter_key_behavior_colon">
        <source>Enter key behavior:</source>
        <target state="new">Enter key behavior:</target>
        <note />
      </trans-unit>
      <trans-unit id="Only_add_new_line_on_enter_after_end_of_fully_typed_word">
        <source>_Only add new line on enter after end of fully typed word</source>
        <target state="new">_Only add new line on enter after end of fully typed word</target>
        <note />
      </trans-unit>
      <trans-unit id="Always_add_new_line_on_enter">
        <source>_Always add new line on enter</source>
        <target state="new">_Always add new line on enter</target>
        <note />
      </trans-unit>
      <trans-unit id="Never_add_new_line_on_enter">
        <source>_Never add new line on enter</source>
        <target state="new">_Never add new line on enter</target>
        <note />
      </trans-unit>
      <trans-unit id="Always_include_snippets">
        <source>Always include snippets</source>
        <target state="new">Always include snippets</target>
        <note />
      </trans-unit>
      <trans-unit id="Include_snippets_when_Tab_is_typed_after_an_identifier">
        <source>Include snippets when ?-Tab is typed after an identifier</source>
        <target state="new">Include snippets when ?-Tab is typed after an identifier</target>
        <note />
      </trans-unit>
      <trans-unit id="Never_include_snippets">
        <source>Never include snippets</source>
        <target state="new">Never include snippets</target>
        <note />
      </trans-unit>
      <trans-unit id="Snippets_behavior">
        <source>Snippets behavior</source>
        <target state="new">Snippets behavior</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_list_after_a_character_is_deleted">
        <source>Show completion list after a character is _deleted</source>
        <target state="new">Show completion list after a character is _deleted</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_list_after_a_character_is_typed">
        <source>_Show completion list after a character is typed</source>
        <target state="new">_Show completion list after a character is typed</target>
        <note />
      </trans-unit>
      <trans-unit id="nothing_checking_colon">
        <source>'nothing' checking:</source>
        <target state="new">'nothing' checking:</target>
        <note />
      </trans-unit>
      <trans-unit id="Fade_out_unused_imports">
        <source>Fade out unused imports</source>
        <target state="new">Fade out unused imports</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_Is_Nothing_over_ReferenceEquals">
        <source>Prefer 'Is Nothing' over 'Object.ReferenceEquals(..., Nothing)'</source>
        <target state="new">Prefer 'Is Nothing' over 'Object.ReferenceEquals(..., Nothing)'</target>
        <note />
      </trans-unit>
      <trans-unit id="Report_invalid_placeholders_in_string_dot_format_calls">
        <source>Report invalid placeholders in 'String.Format' calls</source>
        <target state="new">Report invalid placeholders in 'String.Format' calls</target>
        <note />
      </trans-unit>
      <trans-unit id="Separate_import_directive_groups">
        <source>Separate import directive groups</source>
        <target state="new">Separate import directive groups</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>