<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pl" original="../CSharpVSResources.resx">
    <body>
      <trans-unit id="CSharp">
        <source>C#</source>
        <target state="new">C#</target>
        <note />
      </trans-unit>
      <trans-unit id="Surround_With">
        <source>Surround With</source>
        <target state="new">Surround With</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_Snippet">
        <source>Insert Snippet</source>
        <target state="new">Insert Snippet</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatically_format_block_on_close_brace">
        <source>Automatically format _block on }</source>
        <target state="new">Automatically format _block on }</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatically_format_on_paste">
        <source>Automatically format on _paste</source>
        <target state="new">Automatically format on _paste</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatically_format_statement_on_semicolon">
        <source>Automatically format _statement on ;</source>
        <target state="new">Automatically format _statement on ;</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_anonymous_types_on_new_line">
        <source>Place members in anonymous types on new line</source>
        <target state="new">Place members in anonymous types on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_block_on_single_line">
        <source>Leave block on single line</source>
        <target state="new">Leave block on single line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_catch_on_new_line">
        <source>Place "catch" on new line</source>
        <target state="new">Place "catch" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_else_on_new_line">
        <source>Place "else" on new line</source>
        <target state="new">Place "else" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_block_contents">
        <source>Indent block contents</source>
        <target state="new">Indent block contents</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_open_and_close_braces">
        <source>Indent open and close braces</source>
        <target state="new">Indent open and close braces</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents">
        <source>Indent case contents</source>
        <target state="new">Indent case contents</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_labels">
        <source>Indent case labels</source>
        <target state="new">Indent case labels</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_finally_on_new_line">
        <source>Place "finally" on new line</source>
        <target state="new">Place "finally" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_goto_labels_in_leftmost_column">
        <source>Place goto labels in leftmost column</source>
        <target state="new">Place goto labels in leftmost column</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_labels_normally">
        <source>Indent labels normally</source>
        <target state="new">Indent labels normally</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_goto_labels_one_indent_less_than_current">
        <source>Place goto labels one indent less than current</source>
        <target state="new">Place goto labels one indent less than current</target>
        <note />
      </trans-unit>
      <trans-unit id="Label_Indentation">
        <source>Label Indentation</source>
        <target state="new">Label Indentation</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_object_initializers_on_new_line">
        <source>Place members in object initializers on new line</source>
        <target state="new">Place members in object initializers on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_anonymous_methods">
        <source>Place open brace on new line for anonymous methods</source>
        <target state="new">Place open brace on new line for anonymous methods</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_anonymous_types">
        <source>Place open brace on new line for anonymous types</source>
        <target state="new">Place open brace on new line for anonymous types</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_control_blocks">
        <source>Place open brace on new line for control blocks</source>
        <target state="new">Place open brace on new line for control blocks</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_lambda_expression">
        <source>Place open brace on new line for lambda expression</source>
        <target state="new">Place open brace on new line for lambda expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_methods_local_functions">
        <source>Place open brace on new line for methods and local functions</source>
        <target state="new">Place open brace on new line for methods and local functions</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_object_collection_and_array_initializers">
        <source>Place open brace on new line for object, collection and array initializers</source>
        <target state="new">Place open brace on new line for object, collection and array initializers</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_types">
        <source>Place open brace on new line for types</source>
        <target state="new">Place open brace on new line for types</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_query_expression_clauses_on_new_line">
        <source>Place query expression clauses on new line</source>
        <target state="new">Place query expression clauses on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_statements_and_member_declarations_on_the_same_line">
        <source>Leave statements and member declarations on the same line</source>
        <target state="new">Leave statements and member declarations on the same line</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_and_after_binary_operators">
        <source>Insert space before and after binary operators</source>
        <target state="new">Insert space before and after binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore_spaces_around_binary_operators">
        <source>Ignore spaces around binary operators</source>
        <target state="new">Ignore spaces around binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_spaces_before_and_after_binary_operators">
        <source>Remove spaces before and after binary operators</source>
        <target state="new">Remove spaces before and after binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space after colon for base or interface in type declaration</source>
        <target state="new">Insert space after colon for base or interface in type declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_comma">
        <source>Insert space after comma</source>
        <target state="new">Insert space after comma</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_dot">
        <source>Insert space after dot</source>
        <target state="new">Insert space after dot</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_semicolon_in_for_statement">
        <source>Insert space after semicolon in "for" statement</source>
        <target state="new">Insert space after semicolon in "for" statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space before colon for base or interface in type declaration</source>
        <target state="new">Insert space before colon for base or interface in type declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_comma">
        <source>Insert space before comma</source>
        <target state="new">Insert space before comma</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_dot">
        <source>Insert space before dot</source>
        <target state="new">Insert space before dot</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_semicolon_in_for_statement">
        <source>Insert space before semicolon in "for" statement</source>
        <target state="new">Insert space before semicolon in "for" statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_argument_list_parentheses">
        <source>Insert space within argument list parentheses</source>
        <target state="new">Insert space within argument list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_argument_list_parentheses">
        <source>Insert space within empty argument list parentheses</source>
        <target state="new">Insert space within empty argument list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis1">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="new">Insert space between method name and its opening parenthesis</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_parameter_list_parentheses">
        <source>Insert space within empty parameter list parentheses</source>
        <target state="new">Insert space within empty parameter list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis2">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="new">Insert space between method name and its opening parenthesis</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parameter_list_parentheses">
        <source>Insert space within parameter list parentheses</source>
        <target state="new">Insert space within parameter list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_keywords_in_control_flow_statements">
        <source>Insert space after keywords in control flow statements</source>
        <target state="new">Insert space after keywords in control flow statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parentheses_of_expressions">
        <source>Insert space within parentheses of expressions</source>
        <target state="new">Insert space within parentheses of expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_cast">
        <source>Insert space after cast</source>
        <target state="new">Insert space after cast</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_spaces_within_parentheses_of_control_flow_statements">
        <source>Insert spaces within parentheses of control flow statements</source>
        <target state="new">Insert spaces within parentheses of control flow statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parentheses_of_type_casts">
        <source>Insert space within parentheses of type casts</source>
        <target state="new">Insert space within parentheses of type casts</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore_spaces_in_declaration_statements">
        <source>Ignore spaces in declaration statements</source>
        <target state="new">Ignore spaces in declaration statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_other_spacing_options">
        <source>Set other spacing options</source>
        <target state="new">Set other spacing options</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_brackets">
        <source>Set spacing for brackets</source>
        <target state="new">Set spacing for brackets</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_delimiters">
        <source>Set spacing for delimiters</source>
        <target state="new">Set spacing for delimiters</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_method_calls">
        <source>Set spacing for method calls</source>
        <target state="new">Set spacing for method calls</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_method_declarations">
        <source>Set spacing for method declarations</source>
        <target state="new">Set spacing for method declarations</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_operators">
        <source>Set spacing for operators</source>
        <target state="new">Set spacing for operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_spaces_within_square_brackets">
        <source>Insert spaces within square brackets</source>
        <target state="new">Insert spaces within square brackets</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_open_square_bracket">
        <source>Insert space before open square bracket</source>
        <target state="new">Insert space before open square bracket</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_square_brackets">
        <source>Insert space within empty square brackets</source>
        <target state="new">Insert space within empty square brackets</target>
        <note />
      </trans-unit>
      <trans-unit id="New_line_options_for_braces">
        <source>New line options for braces</source>
        <target state="new">New line options for braces</target>
        <note />
      </trans-unit>
      <trans-unit id="New_line_options_for_expressions">
        <source>New line options for expressions</source>
        <target state="new">New line options for expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="New_line_options_for_keywords">
        <source>New line options for keywords</source>
        <target state="new">New line options for keywords</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_var_when_generating_locals">
        <source>Use 'var' when generating locals</source>
        <target state="new">Use 'var' when generating locals</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_local_declaration_to_the_extracted_method_if_it_is_not_used_elsewhere">
        <source>_Move local declaration to the extracted method if it is not used elsewhere</source>
        <target state="new">_Move local declaration to the extracted method if it is not used elsewhere</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_procedure_line_separators">
        <source>_Show procedure line separators</source>
        <target state="new">_Show procedure line separators</target>
        <note />
      </trans-unit>
      <trans-unit id="Don_t_put_ref_or_out_on_custom_struct">
        <source>_Don't put ref or out on custom struct</source>
        <target state="new">_Don't put ref or out on custom struct</target>
        <note />
      </trans-unit>
      <trans-unit id="Editor_Help">
        <source>Editor Help</source>
        <target state="new">Editor Help</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_related_keywords_under_cursor">
        <source>Highlight related _keywords under cursor</source>
        <target state="new">Highlight related _keywords under cursor</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_references_to_symbol_under_cursor">
        <source>_Highlight references to symbol under cursor</source>
        <target state="new">_Highlight references to symbol under cursor</target>
        <note />
      </trans-unit>
      <trans-unit id="Enter_outlining_mode_when_files_open">
        <source>Enter _outlining mode when files open</source>
        <target state="new">Enter _outlining mode when files open</target>
        <note />
      </trans-unit>
      <trans-unit id="Extract_Method">
        <source>Extract Method</source>
        <target state="new">Extract Method</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_XML_documentation_comments_for">
        <source>_Generate XML documentation comments for ///</source>
        <target state="new">_Generate XML documentation comments for ///</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlighting">
        <source>Highlighting</source>
        <target state="new">Highlighting</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_at_the_start_of_new_lines_when_writing_comments">
        <source>_Insert * at the start of new lines when writing /* */ comments</source>
        <target state="new">_Insert * at the start of new lines when writing /* */ comments</target>
        <note />
      </trans-unit>
      <trans-unit id="Optimize_for_solution_size">
        <source>Optimize for solution size</source>
        <target state="new">Optimize for solution size</target>
        <note />
      </trans-unit>
      <trans-unit id="Large">
        <source>Large</source>
        <target state="new">Large</target>
        <note />
      </trans-unit>
      <trans-unit id="Regular">
        <source>Regular</source>
        <target state="new">Regular</target>
        <note />
      </trans-unit>
      <trans-unit id="Small">
        <source>Small</source>
        <target state="new">Small</target>
        <note />
      </trans-unit>
      <trans-unit id="Using_Directives">
        <source>Using Directives</source>
        <target state="new">Using Directives</target>
        <note />
      </trans-unit>
      <trans-unit id="Performance">
        <source>Performance</source>
        <target state="new">Performance</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_System_directives_first_when_sorting_usings">
        <source>_Place 'System' directives first when sorting usings</source>
        <target state="new">_Place 'System' directives first when sorting usings</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_list_after_a_character_is_typed">
        <source>_Show completion list after a character is typed</source>
        <target state="new">_Show completion list after a character is typed</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_keywords_in_completion_lists">
        <source>Place _keywords in completion lists</source>
        <target state="new">Place _keywords in completion lists</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_code_snippets_in_completion_lists">
        <source>Place _code snippets in completion lists</source>
        <target state="new">Place _code snippets in completion lists</target>
        <note />
      </trans-unit>
      <trans-unit id="Completion_Lists">
        <source>Completion Lists</source>
        <target state="new">Completion Lists</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_In_Completion_List">
        <source>Selection In Completion List</source>
        <target state="new">Selection In Completion List</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_preview_for_rename_tracking">
        <source>Show preview for rename _tracking</source>
        <target state="new">Show preview for rename _tracking</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_property_indexer_and_event_accessors">
        <source>Place open brace on new line for property, indexer, and event accessors</source>
        <target state="new">Place open brace on new line for property, indexer, and event accessors</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_properties_indexers_and_events">
        <source>Place open brace on new line for properties, indexers, and events</source>
        <target state="new">Place open brace on new line for properties, indexers, and events</target>
        <note />
      </trans-unit>
      <trans-unit id="Suggest_usings_for_types_in_reference_assemblies">
        <source>Suggest usings for types in _reference assemblies</source>
        <target state="new">Suggest usings for types in _reference assemblies</target>
        <note />
      </trans-unit>
      <trans-unit id="Suggest_usings_for_types_in_NuGet_packages">
        <source>Suggest usings for types in _NuGet packages</source>
        <target state="new">Suggest usings for types in _NuGet packages</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_Inference_preferences_colon">
        <source>Type Inference preferences:</source>
        <target state="new">Type Inference preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="For_built_in_types">
        <source>For built-in types</source>
        <target state="new">For built-in types</target>
        <note />
      </trans-unit>
      <trans-unit id="Elsewhere">
        <source>Elsewhere</source>
        <target state="new">Elsewhere</target>
        <note />
      </trans-unit>
      <trans-unit id="When_variable_type_is_apparent">
        <source>When variable type is apparent</source>
        <target state="new">When variable type is apparent</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_event_access_with_this">
        <source>Qualify event access with 'this'</source>
        <target state="new">Qualify event access with 'this'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_field_access_with_this">
        <source>Qualify field access with 'this'</source>
        <target state="new">Qualify field access with 'this'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_method_access_with_this">
        <source>Qualify method access with 'this'</source>
        <target state="new">Qualify method access with 'this'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_property_access_with_this">
        <source>Qualify property access with 'this'</source>
        <target state="new">Qualify property access with 'this'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_explicit_type">
        <source>Prefer explicit type</source>
        <target state="new">Prefer explicit type</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_this">
        <source>Prefer 'this.'</source>
        <target state="new">Prefer 'this.'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_var">
        <source>Prefer 'var'</source>
        <target state="new">Prefer 'var'</target>
        <note />
      </trans-unit>
      <trans-unit id="this_preferences_colon">
        <source>'this.' preferences:</source>
        <target state="new">'this.' preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="var_preferences_colon">
        <source>'var' preferences:</source>
        <target state="new">'var' preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="Do_not_prefer_this">
        <source>Do not prefer 'this.'</source>
        <target state="new">Do not prefer 'this.'</target>
        <note />
      </trans-unit>
      <trans-unit id="predefined_type_preferences_colon">
        <source>predefined type preferences:</source>
        <target state="new">predefined type preferences:</target>
        <note />
      </trans-unit>
      <trans-unit id="Split_string_literals_on_enter">
        <source>Split string literals on _enter</source>
        <target state="new">Split string literals on _enter</target>
        <note />
      </trans-unit>
      <trans-unit id="Highlight_matching_portions_of_completion_list_items">
        <source>_Highlight matching portions of completion list items</source>
        <target state="new">_Highlight matching portions of completion list items</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_item_filters">
        <source>Show completion item _filters</source>
        <target state="new">Show completion item _filters</target>
        <note />
      </trans-unit>
      <trans-unit id="Enter_key_behavior_colon">
        <source>Enter key behavior:</source>
        <target state="new">Enter key behavior:</target>
        <note />
      </trans-unit>
      <trans-unit id="Only_add_new_line_on_enter_after_end_of_fully_typed_word">
        <source>_Only add new line on enter after end of fully typed word</source>
        <target state="new">_Only add new line on enter after end of fully typed word</target>
        <note />
      </trans-unit>
      <trans-unit id="Always_add_new_line_on_enter">
        <source>_Always add new line on enter</source>
        <target state="new">_Always add new line on enter</target>
        <note />
      </trans-unit>
      <trans-unit id="Never_add_new_line_on_enter">
        <source>_Never add new line on enter</source>
        <target state="new">_Never add new line on enter</target>
        <note />
      </trans-unit>
      <trans-unit id="Always_include_snippets">
        <source>Always include snippets</source>
        <target state="new">Always include snippets</target>
        <note />
      </trans-unit>
      <trans-unit id="Include_snippets_when_Tab_is_typed_after_an_identifier">
        <source>Include snippets when ?-Tab is typed after an identifier</source>
        <target state="new">Include snippets when ?-Tab is typed after an identifier</target>
        <note />
      </trans-unit>
      <trans-unit id="Never_include_snippets">
        <source>Never include snippets</source>
        <target state="new">Never include snippets</target>
        <note />
      </trans-unit>
      <trans-unit id="Snippets_behavior">
        <source>Snippets behavior</source>
        <target state="new">Snippets behavior</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_completion_list_after_a_character_is_deleted">
        <source>Show completion list after a character is _deleted</source>
        <target state="new">Show completion list after a character is _deleted</target>
        <note />
      </trans-unit>
      <trans-unit id="null_checking_colon">
        <source>'null' checking:</source>
        <target state="new">'null' checking:</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_throw_expression">
        <source>Prefer throw-expression</source>
        <target state="new">Prefer throw-expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_conditional_delegate_call">
        <source>Prefer conditional delegate call</source>
        <target state="new">Prefer conditional delegate call</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_is_with_cast_check">
        <source>Prefer pattern matching over 'is' with 'cast' check</source>
        <target state="new">Prefer pattern matching over 'is' with 'cast' check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_as_with_null_check">
        <source>Prefer pattern matching over 'as' with 'null' check</source>
        <target state="new">Prefer pattern matching over 'as' with 'null' check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_block_body">
        <source>Prefer block body</source>
        <target state="new">Prefer block body</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_expression_body">
        <source>Prefer expression body</source>
        <target state="new">Prefer expression body</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatically_format_on_return">
        <source>Automatically format on return</source>
        <target state="new">Automatically format on return</target>
        <note />
      </trans-unit>
      <trans-unit id="Automatically_format_when_typing">
        <source>Automatically format when typing</source>
        <target state="new">Automatically format when typing</target>
        <note />
      </trans-unit>
      <trans-unit id="Never">
        <source>Never</source>
        <target state="new">Never</target>
        <note />
      </trans-unit>
      <trans-unit id="When_on_single_line">
        <source>When on single line</source>
        <target state="new">When on single line</target>
        <note />
      </trans-unit>
      <trans-unit id="When_possible">
        <source>When possible</source>
        <target state="new">When possible</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents_when_block">
        <source>Indent case contents (when block)</source>
        <target state="new">Indent case contents (when block)</target>
        <note />
      </trans-unit>
      <trans-unit id="Fade_out_unused_usings">
        <source>Fade out unused usings</source>
        <target state="new">Fade out unused usings</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_is_null_over_ReferenceEquals">
        <source>Prefer 'is null' over 'object.ReferenceEquals(..., null)'</source>
        <target state="new">Prefer 'is null' over 'object.ReferenceEquals(..., null)'</target>
        <note />
      </trans-unit>
      <trans-unit id="Report_invalid_placeholders_in_string_dot_format_calls">
        <source>Report invalid placeholders in 'string.Format' calls</source>
        <target state="new">Report invalid placeholders in 'string.Format' calls</target>
        <note />
      </trans-unit>
      <trans-unit id="Separate_using_directive_groups">
        <source>Separate using directive groups</source>
        <target state="new">Separate using directive groups</target>
        <note />
      </trans-unit>
      <trans-unit id="Show_name_suggestions">
        <source>Show name s_uggestions</source>
        <target state="new">Show name s_uggestions</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>