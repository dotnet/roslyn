<UserControl x:Class="Microsoft.VisualStudio.LanguageServices.StackTraceExplorer.StackTraceExplorerRoot"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:local="clr-namespace:Microsoft.VisualStudio.LanguageServices.StackTraceExplorer"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:platformimaging="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="Root"
             Background="{StaticResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
             platformimaging:ImageThemingUtilities.ImageBackgroundColor="{StaticResource {x:Static vsshell:VsColors.ToolWindowBackgroundKey}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogButtonStyleKey}}" />
            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogCheckBoxStyleKey}}" />
            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogComboBoxStyleKey}}" />
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTextBoxStyleKey}}" />
            <Style TargetType="Label" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogLabelStyleKey}}" />
            <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogRadioButtonStyleKey}}" />
            <Style TargetType="Hyperlink" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogHyperlinkStyleKey}}" />
            <Style TargetType="TreeView" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTreeViewStyleKey}}" />
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTreeViewItemStyleKey}}" />
            <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogGridViewColumnHeaderStyleKey}}" />
            <Style TargetType="ListBox" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogListBoxStyleKey}}" />
            <Style TargetType="ListView" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogListViewStyleKey}}" />


            <Style TargetType="TabControl">
                <Setter Property="Background" Value="{StaticResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <TabControl x:Name="TabControl"
            TabStripPlacement="Top"
            ItemsSource="{Binding Tabs, Mode=OneWay}"
            SelectedItem="{Binding SelectedTab, Mode=TwoWay}">

            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="Content" Value="{Binding Content}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                    <Setter Property="FontSize" Value="{DynamicResource VsFont.EnvironmentFontSize}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    <Setter Property="Padding" Value="20,0,20,0" />
                    <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlsFocusVisualStyle}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter  Grid.Row="0" x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    <!-- the line under the text to indicate that this label is selected -->
                                    <Rectangle
                                        x:Name="_underline"
                                        Grid.Row="1"
                                        Height="3"
                                        Visibility="Collapsed"
                                        Width="{Binding ActualWidth, ElementName=contentPresenter}"
                                        HorizontalAlignment="Center"
                                        Fill="{DynamicResource {x:Static vsui:CommonDocumentColors.InnerTabInactiveHoverTextBrushKey}}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonDocumentColors.InnerTabInactiveHoverTextBrushKey }}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" TargetName="_underline" Value="Visible" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonDocumentColors.InnerTabTextFocusedBrushKey }}" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <local:ThemedContextMenu>
                                <MenuItem Header="{Binding ElementName=Root, Path=CloseTab}" Command="{Binding CloseClick}">
                                    <MenuItem.Icon>
                                        <imaging:CrispImage Moniker="{x:Static imagecatalog:KnownMonikers.Close}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </local:ThemedContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--<Style TargetType="TabItem" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTabItemNavigationStyleKey}}">
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="Content" Value="{Binding Content}" />
                    <Setter Property="AutomationProperties.Name" Value="{Binding Title}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabInactiveBackgroundBrushKey}}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabInactiveTextBrushKey}}" />
                    <Setter Property="Padding" Value="6,3,6,3" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="PART_Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="16" />
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Binding Header}" Padding="0" Margin="0" />
                                        <imaging:CrispImage Moniker="{x:Static imagecatalog:KnownMonikers.Close}" Grid.Column="1" Margin="4, 0, 0, 0" Width="12">
                                            <imaging:CrispImage.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static platformimaging:ImageThemingUtilities.ImageBackgroundColorProperty}}" />
                                                </Trigger>
                                            </imaging:CrispImage.Triggers>
                                        </imaging:CrispImage>
                                    </Grid>
                                </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabActiveBackgroundBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabActiveTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabActiveBorderBrushKey}}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsSelected" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter Property="Background" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabInactiveHoverBackgroundBrushKey}}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:CommonControlsColors.InnerTabInactiveHoverTextBrushKey}}" />
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>-->
            </TabControl.ItemContainerStyle>
        </TabControl>
    </Grid>
</UserControl>