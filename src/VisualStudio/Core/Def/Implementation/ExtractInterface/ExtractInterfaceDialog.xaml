<vs:DialogWindow x:Uid="ExtractInterfaceDialog"
             x:Class="Microsoft.VisualStudio.LanguageServices.Implementation.ExtractInterface.ExtractInterfaceDialog"
             x:ClassModifier="internal"
             x:Name="dialog"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:u="clr-namespace:Microsoft.VisualStudio.LanguageServices.Implementation.Utilities"
             xmlns:dest="clr-namespace:Microsoft.VisualStudio.LanguageServices.Implementation.ExtractInterface"
             mc:Ignorable="d" 
             d:DesignHeight="380" d:DesignWidth="460"
             Height="380" Width="460"
             MinHeight="380" MinWidth="460"
             Title="{Binding ElementName=dialog, Path=ExtractInterfaceDialogTitle}"
             HasHelpButton="True"
             FocusManager.FocusedElement="{Binding ElementName=interfaceNameTextBox}"
             ResizeMode="CanResizeWithGrip"
             ShowInTaskbar="False"
             HasDialogFrame="True"
             WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style TargetType="ListBoxItem">
            <Setter Property="IsTabStop" 
                    Value="False" />
        </Style>
        <Thickness x:Key="labelPadding">0, 5, 0, 2</Thickness>
        <Thickness x:Key="okCancelButtonPadding">9,2,9,2</Thickness>
        <Thickness x:Key="selectDeselectButtonPadding">9,2,9,2</Thickness>
        <Thickness x:Key="textboxPadding">2</Thickness>
        <Thickness x:Key="radioButtonPadding">2, 0, 2, 0</Thickness>
        <u:EnumBoolConverter x:Key="enumBoolConverter" />
    </Window.Resources>
    <Grid Margin="11,6,11,11">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <Label x:Uid="InterfaceNameLabel" 
                   x:Name="InterfaceNameLabel"
                   Content="{Binding ElementName=dialog, Path=NewInterfaceName}"
                   Padding="{StaticResource ResourceKey=labelPadding}"
                   Target="{Binding ElementName=interfaceNameTextBox}"/>
            <TextBox x:Uid="InterfaceNameTextBox"
                     AutomationProperties.LabeledBy="{Binding ElementName=InterfaceNameLabel}"
                     Text="{Binding InterfaceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     Name="interfaceNameTextBox"
                     Padding="{StaticResource ResourceKey=textboxPadding}"
                     GotFocus="SelectAllInTextBox"/>
            <Label x:Uid="GeneratedNameLabel" 
                   x:Name="GeneratedNameLabel" 
                   Content="{Binding ElementName=dialog, Path=GeneratedName}" 
                   Padding="{StaticResource ResourceKey=labelPadding}"/>
            <TextBox x:Uid="GeneratedNameTextBox" 
                     AutomationProperties.LabeledBy="{Binding ElementName=GeneratedNameLabel}"
                     Text="{Binding GeneratedName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                     IsReadOnly="True"
                     Background="{DynamicResource {x:Static SystemColors.ControlBrush}}"
                     Padding="{StaticResource ResourceKey=textboxPadding}"
                     GotFocus="SelectAllInTextBox"/>

            <GroupBox x:Uid="DestinationSelectionGroupBox"
                      Margin="0, 9, 0, 0"
                      Header="{Binding ElementName=dialog, Path=SelectDestinationFile}">
                <Grid
                    Margin="9, 9, 9, 7">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <RadioButton x:Uid="DestinationCurrentFileSelectionRadioButton"
                                 GroupName="FileDestination"
                                 Grid.Row="0"
                                 Grid.ColumnSpan="2" 
                                 Margin="0, 0, 0, 5"
                                 Content="{Binding ElementName=dialog, Path=SelectCurrentFileAsDestination}"
                                 Padding="{StaticResource ResourceKey=radioButtonPadding}"
                                 IsChecked="{Binding Destination, Converter={StaticResource enumBoolConverter}, ConverterParameter={x:Static dest:InterfaceDestination.CurrentFile}}"
                                 VerticalAlignment="Center"
                                 />

                    <RadioButton x:Uid="DestinationNewFileSelectionRadioButton"
                                 GroupName="FileDestination"
                                 Grid.Row="1"
                                 Grid.Column="0"
                                 Content="{Binding ElementName=dialog, Path=SelectNewFileAsDestination}"
                                 IsChecked="{Binding Destination, Converter={StaticResource enumBoolConverter}, ConverterParameter={x:Static dest:InterfaceDestination.NewFile}}"
                                 Padding="{StaticResource ResourceKey=radioButtonPadding}"
                                 VerticalAlignment="Center"
                                 />

                    <TextBox x:Uid="FileNameTextBox" 
                             AutomationProperties.LabeledBy="{Binding ElementName=DestinationNewFileSelectionRadioButton}"
                             Text="{Binding FileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Padding="{StaticResource ResourceKey=textboxPadding}"
                             Margin="2, 0, 0, 0"
                             Name="fileNameTextBox"
                             IsEnabled="{Binding FileNameEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                             GotFocus="SelectAllInTextBox"
                             Grid.Column="1" 
                             Grid.Row="1" />
                </Grid>
            </GroupBox>
        </StackPanel>
        <GroupBox x:Uid="MemberSelectionGroupBox"
                  x:Name="MemberSelectionGroupBox"
                  Margin="0, 9, 0, 0"
                  Grid.Row="1"
                  Header="{Binding ElementName=dialog, Path=SelectPublicMembersToFormInterface}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <u:AutomationDelegatingListView x:Uid="MemberSelectionList"
                          x:Name="Members"
                          AutomationProperties.LabeledBy="{Binding ElementName=MemberSelectionGroupBox}"
                          Grid.Column="0"
                          Margin="9"
                          SelectionMode="Extended"
                          PreviewKeyDown="OnListViewPreviewKeyDown"
                          MouseDoubleClick="OnListViewDoubleClick"
                          ItemsSource="{Binding MemberContainers, Mode=TwoWay}">
                    <u:AutomationDelegatingListView.ItemTemplate x:Uid="SelectableMemberListItem">
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox x:Uid="SelectableMemberCheckBox"
                                          AutomationProperties.Name="{Binding MemberAutomationText}"
                                          IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                                          Width="Auto"
                                          Focusable="False"
                                          AutomationProperties.AutomationId="{Binding MemberName}">
                                </CheckBox>
                                <Image x:Uid="SelectableMemberGlyph" 
                                       Margin="8,0,0,0"
                                               Source="{Binding Glyph}"/>
                                <TextBlock x:Uid="SelectableMemberName" 
                                                   Text="{Binding MemberName}"/>
                            </StackPanel>
                        </DataTemplate>
                    </u:AutomationDelegatingListView.ItemTemplate>
                </u:AutomationDelegatingListView>
                <StackPanel Grid.Column="1">
                    <Button x:Uid="SelectAllButton"
                            Content="{Binding ElementName=dialog, Path=SelectAll}" 
                            Margin="2, 9, 9, 7" 
                            Click="Select_All_Click" 
                            Padding="{StaticResource ResourceKey=selectDeselectButtonPadding}"
                            MinWidth="73"
                            MinHeight="21"/>
                    <Button x:Uid="DeselectAllButton"
                            Content="{Binding ElementName=dialog, Path=DeselectAll}" 
                            Margin="2, 0, 9, 0"
                            Padding="{StaticResource ResourceKey=selectDeselectButtonPadding}"
                            Click="Deselect_All_Click" 
                            MinWidth="73"
                            MinHeight="21"/>
                </StackPanel>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="2" 
                    HorizontalAlignment="Right" 
                    Margin="0, 11, 0, 0"
                    Orientation="Horizontal">
            <Button x:Uid="OkButton" 
                    Content="{Binding ElementName=dialog, Path=OK}" 
                    Margin="0, 0, 0, 0" 
                    Padding="{StaticResource ResourceKey=okCancelButtonPadding}"
                    Click="OK_Click" 
                    IsDefault="True"
                    MinWidth="73"
                    MinHeight="21"/>
            <Button x:Uid="CancelButton" 
                    Content="{Binding ElementName=dialog, Path=Cancel}"
                    Margin="7, 0, 0, 0" 
                    Padding="{StaticResource ResourceKey=okCancelButtonPadding}"
                    Click="Cancel_Click"
                    IsCancel="True"
                    MinWidth="73"
                    MinHeight="21"/>
        </StackPanel>
    </Grid>
</vs:DialogWindow>
