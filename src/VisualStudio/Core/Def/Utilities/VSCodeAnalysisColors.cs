// Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

using System;
using Microsoft.VisualStudio.Shell;

namespace Microsoft.VisualStudio.LanguageServices.Utilities
{
    internal static class VSCodeAnalysisColors
    {
        #region Autogenerated resource keys
        // These resource keys are generated by VsThemeEditor, and should be replaced when new colors are added to this category.
        public static readonly Guid Category = new Guid("bbadd5c0-3c00-4c56-aae8-92cd1d1f516b");

        private static ThemeResourceKey s_renameErrorColorKey;
        private static ThemeResourceKey s_renameErrorBrushKey;
        private static ThemeResourceKey s_renameErrorTextColorKey;
        private static ThemeResourceKey s_renameErrorTextBrushKey;
        public static ThemeResourceKey RenameErrorColorKey { get { return s_renameErrorColorKey ?? (s_renameErrorColorKey = new ThemeResourceKey(Category, "RenameError", ThemeResourceKeyType.BackgroundColor)); } }
        public static ThemeResourceKey RenameErrorBrushKey { get { return s_renameErrorBrushKey ?? (s_renameErrorBrushKey = new ThemeResourceKey(Category, "RenameError", ThemeResourceKeyType.BackgroundBrush)); } }
        public static ThemeResourceKey RenameErrorTextColorKey { get { return s_renameErrorTextColorKey ?? (s_renameErrorTextColorKey = new ThemeResourceKey(Category, "RenameError", ThemeResourceKeyType.ForegroundColor)); } }
        public static ThemeResourceKey RenameErrorTextBrushKey { get { return s_renameErrorTextBrushKey ?? (s_renameErrorTextBrushKey = new ThemeResourceKey(Category, "RenameError", ThemeResourceKeyType.ForegroundBrush)); } }

        private static ThemeResourceKey s_renameResolvableConflictColorKey;
        private static ThemeResourceKey s_renameResolvableConflictBrushKey;
        private static ThemeResourceKey s_renameResolvableConflictTextColorKey;
        private static ThemeResourceKey s_renameResolvableConflictTextBrushKey;
        public static ThemeResourceKey RenameResolvableConflictColorKey { get { return s_renameResolvableConflictColorKey ?? (s_renameResolvableConflictColorKey = new ThemeResourceKey(Category, "RenameResolvableConflict", ThemeResourceKeyType.BackgroundColor)); } }
        public static ThemeResourceKey RenameResolvableConflictBrushKey { get { return s_renameResolvableConflictBrushKey ?? (s_renameResolvableConflictBrushKey = new ThemeResourceKey(Category, "RenameResolvableConflict", ThemeResourceKeyType.BackgroundBrush)); } }
        public static ThemeResourceKey RenameResolvableConflictTextColorKey { get { return s_renameResolvableConflictTextColorKey ?? (s_renameResolvableConflictTextColorKey = new ThemeResourceKey(Category, "RenameResolvableConflict", ThemeResourceKeyType.ForegroundColor)); } }
        public static ThemeResourceKey RenameResolvableConflictTextBrushKey { get { return s_renameResolvableConflictTextBrushKey ?? (s_renameResolvableConflictTextBrushKey = new ThemeResourceKey(Category, "RenameResolvableConflict", ThemeResourceKeyType.ForegroundBrush)); } }
        #endregion
    }
}
