<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>net472</TargetFramework>
    <SetupProductArch>x64</SetupProductArch>
  </PropertyGroup>
  <ItemGroup Label="Project References">
    <ProjectReference Include="..\..\..\Workspaces\Remote\ServiceHub.CoreComponents\x64\Microsoft.CodeAnalysis.Remote.ServiceHub.CoreComponents.x64.csproj">
      <Name>ServiceHubX64</Name>
      <!-- This project targets netcoreapp -->
      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <IncludeOutputGroupsInVSIX>PublishProjectOutputGroup</IncludeOutputGroupsInVSIX>
      <IncludeOutputGroupsInVSIXLocalOnly></IncludeOutputGroupsInVSIXLocalOnly>
      <Private>false</Private>
      <!-- Disable NGEN. Core assemblies are crossgened. -->
      <Ngen>false</Ngen>
    </ProjectReference>
  </ItemGroup> 
  <ItemGroup>
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <!--
    The properties and targets below will add the VSIXSourceItems (files that go in the VSIX) and the VSIX file itself to the item group that tracks when files are up-to-date.
    This ensures that these files are recognized in VS to force the VS Extension Project to build when the files are changed, such as prior to debugging.
    Workaround for https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1820277 
  -->
  <PropertyGroup>
    <CollectUpToDateCheckInputDesignTimeDependsOn>$(CollectUpToDateCheckInputDesignTimeDependsOn);AddUpToDateCheckVSIXSourceItems</CollectUpToDateCheckInputDesignTimeDependsOn>
    <CollectUpToDateCheckOutputDesignTimeDependsOn>$(CollectUpToDateCheckOutputDesignTimeDependsOn);AddUpToDateCheckTargetVsixContainer</CollectUpToDateCheckOutputDesignTimeDependsOn>
  </PropertyGroup>
  <Target Name="AddUpToDateCheckVSIXSourceItems" DependsOnTargets="GetVsixSourceItems;Publish">
    <ItemGroup>
      <UpToDateCheckInput Include="@(VSIXSourceItem)" Set="VsixItems" />
    </ItemGroup>
  </Target>
  <Target Name="AddUpToDateCheckTargetVsixContainer">
    <ItemGroup>
      <UpToDateCheckOutput Include="$(TargetVsixContainer)" Set="VsixItems" />
    </ItemGroup>
  </Target>
</Project>
