Microsoft.CodeAnalysis.Scripting.CompilationErrorException
Microsoft.CodeAnalysis.Scripting.CompilationErrorException.Diagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult
Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult.AssemblyLoadResult(string path, string originalPath, bool isSuccessful) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult.IsSuccessful.get -> bool
Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult.OriginalPath.get -> string
Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult.Path.get -> string
Microsoft.CodeAnalysis.Scripting.Hosting.CommandLineHostObject
Microsoft.CodeAnalysis.Scripting.Hosting.CommandLineHostObject.Args -> string[]
Microsoft.CodeAnalysis.Scripting.Hosting.CommandLineHostObject.ExitCode -> int
Microsoft.CodeAnalysis.Scripting.Hosting.CommandLineHostObject.Print(object value) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader
Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader.InteractiveAssemblyLoader(Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider shadowCopyProvider = null) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader.LoadFromPath(string path) -> Microsoft.CodeAnalysis.Scripting.Hosting.AssemblyLoadResult
Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader.RegisterDependency(Microsoft.CodeAnalysis.AssemblyIdentity dependency, string path) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.InteractiveAssemblyLoader.RegisterDependency(System.Reflection.Assembly dependency) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopy
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopy.DocumentationFile.get -> Microsoft.CodeAnalysis.Scripting.Hosting.ShadowCopy
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopy.Metadata.get -> Microsoft.CodeAnalysis.Metadata
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopy.PrimaryModule.get -> Microsoft.CodeAnalysis.Scripting.Hosting.ShadowCopy
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.Dispose() -> void
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.GetMetadata(string fullPath, Microsoft.CodeAnalysis.MetadataImageKind kind) -> Microsoft.CodeAnalysis.Metadata
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.GetMetadataShadowCopy(string fullPath, Microsoft.CodeAnalysis.MetadataImageKind kind) -> Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopy
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.GetReference(string fullPath, Microsoft.CodeAnalysis.MetadataReferenceProperties properties = default(Microsoft.CodeAnalysis.MetadataReferenceProperties)) -> Microsoft.CodeAnalysis.PortableExecutableReference
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.IsShadowCopy(string fullPath) -> bool
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.MetadataShadowCopyProvider(string directory = null, System.Collections.Generic.IEnumerable<string> noShadowCopyDirectories = null) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.NeedsShadowCopy(string fullPath) -> bool
Microsoft.CodeAnalysis.Scripting.Hosting.MetadataShadowCopyProvider.SuppressShadowCopy(string originalPath) -> void
Microsoft.CodeAnalysis.Scripting.Hosting.ShadowCopy
Microsoft.CodeAnalysis.Scripting.Hosting.ShadowCopy.FullPath.get -> string
Microsoft.CodeAnalysis.Scripting.Hosting.ShadowCopy.OriginalPath.get -> string
Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat.Inline = 1 -> Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat.InlineValue = 2 -> Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat.List = 3 -> Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat.NoMembers = 0 -> Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.ObjectFormatter
Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatObject(object obj, Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions options = null) -> string
Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatTypeName(System.Type type, Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions options) -> string
Microsoft.CodeAnalysis.Scripting.ObjectFormatter.ObjectFormatter() -> void
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.Copy(Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat? memberFormat = null, bool? quoteStrings = null, bool? useHexadecimalNumbers = null, bool? includeCodePoints = null, int? maxLineLength = null, int? maxOutputLength = null, string memberIndentation = null, string ellipsis = null, string newLine = null) -> Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.Ellipsis.get -> string
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.IncludeCodePoints.get -> bool
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.MaxLineLength.get -> int
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.MaxOutputLength.get -> int
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.MemberFormat.get -> Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.MemberIndentation.get -> string
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.NewLine.get -> string
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.ObjectFormattingOptions(Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat memberFormat = Microsoft.CodeAnalysis.Scripting.MemberDisplayFormat.NoMembers, bool quoteStrings = true, bool useHexadecimalNumbers = false, bool includeCodePoints = false, int maxLineLength = 2147483647, int maxOutputLength = 2147483647, string memberIndentation = null, string ellipsis = null, string lineBreak = null) -> void
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.QuoteStrings.get -> bool
Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.UseHexadecimalNumbers.get -> bool
Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.Script.Build(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> void
Microsoft.CodeAnalysis.Scripting.Script.Code.get -> string
Microsoft.CodeAnalysis.Scripting.Script.ContinueAsync(Microsoft.CodeAnalysis.Scripting.ScriptState previousState, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState>
Microsoft.CodeAnalysis.Scripting.Script.ContinueWith(string code, Microsoft.CodeAnalysis.Scripting.ScriptOptions options = null) -> Microsoft.CodeAnalysis.Scripting.Script<object>
Microsoft.CodeAnalysis.Scripting.Script.ContinueWith<TResult>(string code, Microsoft.CodeAnalysis.Scripting.ScriptOptions options = null) -> Microsoft.CodeAnalysis.Scripting.Script<TResult>
Microsoft.CodeAnalysis.Scripting.Script.EvaluateAsync(object globals = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<object>
Microsoft.CodeAnalysis.Scripting.Script.GetCompilation() -> Microsoft.CodeAnalysis.Compilation
Microsoft.CodeAnalysis.Scripting.Script.GlobalsType.get -> System.Type
Microsoft.CodeAnalysis.Scripting.Script.Options.get -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.Script.Previous.get -> Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.Script.RunAsync(object globals = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState>
Microsoft.CodeAnalysis.Scripting.Script.WithCode(string code) -> Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.Script.WithGlobalsType(System.Type globalsType) -> Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.Script.WithOptions(Microsoft.CodeAnalysis.Scripting.ScriptOptions options) -> Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.Script<T>
Microsoft.CodeAnalysis.Scripting.Script<T>.ContinueAsync(Microsoft.CodeAnalysis.Scripting.ScriptState previousState, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState<T>>
Microsoft.CodeAnalysis.Scripting.Script<T>.CreateDelegate(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Microsoft.CodeAnalysis.Scripting.ScriptRunner<T>
Microsoft.CodeAnalysis.Scripting.Script<T>.EvaluateAsync(object globals = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<T>
Microsoft.CodeAnalysis.Scripting.Script<T>.RunAsync(object globals = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState<T>>
Microsoft.CodeAnalysis.Scripting.Script<T>.WithCode(string code) -> Microsoft.CodeAnalysis.Scripting.Script<T>
Microsoft.CodeAnalysis.Scripting.Script<T>.WithGlobalsType(System.Type globalsType) -> Microsoft.CodeAnalysis.Scripting.Script<T>
Microsoft.CodeAnalysis.Scripting.Script<T>.WithOptions(Microsoft.CodeAnalysis.Scripting.ScriptOptions options) -> Microsoft.CodeAnalysis.Scripting.Script<T>
Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddNamespaces(System.Collections.Generic.IEnumerable<string> namespaces) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddNamespaces(params string[] namespaces) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(System.Collections.Generic.IEnumerable<System.Reflection.Assembly> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(System.Collections.Generic.IEnumerable<string> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(params Microsoft.CodeAnalysis.MetadataReference[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(params System.Reflection.Assembly[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.AddReferences(params string[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.IsInteractive.get -> bool
Microsoft.CodeAnalysis.Scripting.ScriptOptions.MetadataReferences.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference>
Microsoft.CodeAnalysis.Scripting.ScriptOptions.MetadataResolver.get -> Microsoft.CodeAnalysis.MetadataReferenceResolver
Microsoft.CodeAnalysis.Scripting.ScriptOptions.Namespaces.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.Scripting.ScriptOptions.Path.get -> string
Microsoft.CodeAnalysis.Scripting.ScriptOptions.SourceResolver.get -> Microsoft.CodeAnalysis.SourceReferenceResolver
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithCustomMetadataResolution(Microsoft.CodeAnalysis.MetadataReferenceResolver resolver) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithCustomSourceResolution(Microsoft.CodeAnalysis.SourceReferenceResolver resolver) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultMetadataResolution(System.Collections.Generic.IEnumerable<string> searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultMetadataResolution(System.Collections.Immutable.ImmutableArray<string> searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultMetadataResolution(params string[] searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultSourceResolution(System.Collections.Generic.IEnumerable<string> searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultSourceResolution(System.Collections.Immutable.ImmutableArray<string> searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithDefaultSourceResolution(params string[] searchPaths) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithIsInteractive(bool isInteractive) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithNamespaces(System.Collections.Generic.IEnumerable<string> namespaces) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithNamespaces(System.Collections.Immutable.ImmutableArray<string> namespaces) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithNamespaces(params string[] namespaces) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithPath(string path) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(System.Collections.Generic.IEnumerable<System.Reflection.Assembly> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(System.Collections.Generic.IEnumerable<string> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.MetadataReference> references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(params Microsoft.CodeAnalysis.MetadataReference[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(params System.Reflection.Assembly[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptOptions.WithReferences(params string[] references) -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
Microsoft.CodeAnalysis.Scripting.ScriptRunner<T>
Microsoft.CodeAnalysis.Scripting.ScriptState
Microsoft.CodeAnalysis.Scripting.ScriptState.ContinueWithAsync(string code, Microsoft.CodeAnalysis.Scripting.ScriptOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState<object>>
Microsoft.CodeAnalysis.Scripting.ScriptState.ContinueWithAsync<TResult>(string code, Microsoft.CodeAnalysis.Scripting.ScriptOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Scripting.ScriptState<TResult>>
Microsoft.CodeAnalysis.Scripting.ScriptState.ReturnValue.get -> object
Microsoft.CodeAnalysis.Scripting.ScriptState.Script.get -> Microsoft.CodeAnalysis.Scripting.Script
Microsoft.CodeAnalysis.Scripting.ScriptState.Variables.get -> Microsoft.CodeAnalysis.Scripting.ScriptVariables
Microsoft.CodeAnalysis.Scripting.ScriptState<T>
Microsoft.CodeAnalysis.Scripting.ScriptState<T>.ReturnValue.get -> T
Microsoft.CodeAnalysis.Scripting.ScriptVariable
Microsoft.CodeAnalysis.Scripting.ScriptVariable.Name.get -> string
Microsoft.CodeAnalysis.Scripting.ScriptVariable.Type.get -> System.Type
Microsoft.CodeAnalysis.Scripting.ScriptVariable.Value.get -> object
Microsoft.CodeAnalysis.Scripting.ScriptVariables
Microsoft.CodeAnalysis.Scripting.ScriptVariables.ContainsVariable(string name) -> bool
Microsoft.CodeAnalysis.Scripting.ScriptVariables.Count.get -> int
Microsoft.CodeAnalysis.Scripting.ScriptVariables.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.CodeAnalysis.Scripting.ScriptVariable>
Microsoft.CodeAnalysis.Scripting.ScriptVariables.Names.get -> System.Collections.Generic.IEnumerable<string>
Microsoft.CodeAnalysis.Scripting.ScriptVariables.this[string name].get -> Microsoft.CodeAnalysis.Scripting.ScriptVariable
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatArrayTypeName(System.Type arrayType, System.Array arrayOpt, Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions options) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatGeneratedTypeName(System.Type type) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(System.DateTime value) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(bool value) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(byte value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(char value, bool quote, bool includeCodePoints = false, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(decimal value) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(double value) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(float value) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(int value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(long value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(sbyte value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(short value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(string value, bool quote, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(uint value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(ulong value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatLiteral(ushort value, bool useHexadecimalNumbers = false) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatMemberName(System.Reflection.MemberInfo member) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.GenericParameterClosing.get -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.GenericParameterOpening.get -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.GetPrimitiveTypeName(Microsoft.CodeAnalysis.SpecialType type) -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.NullLiteral.get -> string
abstract Microsoft.CodeAnalysis.Scripting.ObjectFormatter.VoidDisplayString.get -> object
abstract Microsoft.CodeAnalysis.Scripting.Script.ReturnType.get -> System.Type
override Microsoft.CodeAnalysis.Scripting.Script<T>.ReturnType.get -> System.Type
readonly Microsoft.CodeAnalysis.Scripting.Hosting.CommandLineHostObject.CancellationToken -> System.Threading.CancellationToken
static readonly Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions.Default -> Microsoft.CodeAnalysis.Scripting.ObjectFormattingOptions
static readonly Microsoft.CodeAnalysis.Scripting.ScriptOptions.Default -> Microsoft.CodeAnalysis.Scripting.ScriptOptions
virtual Microsoft.CodeAnalysis.Scripting.ObjectFormatter.FormatMethodSignature(System.Reflection.MethodBase method) -> string
virtual Microsoft.CodeAnalysis.Scripting.ObjectFormatter.IsHiddenMember(System.Reflection.MemberInfo member) -> bool