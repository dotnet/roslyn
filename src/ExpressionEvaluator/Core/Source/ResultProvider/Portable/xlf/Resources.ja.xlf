<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../Resources.resx">
    <body>
      <trans-unit id="DynamicView">
        <source>Dynamic View</source>
        <target state="translated">動的ビュー</target>
        <note>IDynamicMetaObjectProvider and System.__ComObject expansion</note>
      </trans-unit>
      <trans-unit id="DynamicViewNotDynamic">
        <source>Only COM or Dynamic objects can have Dynamic View</source>
        <target state="translated">動的ビューは、COM オブジェクトまたは動的なオブジェクトでのみ使用できます</target>
        <note>Cannot use "dynamic" format specifier on a non-dynamic type</note>
      </trans-unit>
      <trans-unit id="DynamicViewValueWarning">
        <source>Expanding the Dynamic View will get the dynamic members for the object</source>
        <target state="translated">動的ビューを展開すると、オブジェクトの動的メンバーが取得されます</target>
        <note>Warning reported in Dynamic View value</note>
      </trans-unit>
      <trans-unit id="ErrorName">
        <source>Error</source>
        <target state="translated">エラー</target>
        <note>Error result name</note>
      </trans-unit>
      <trans-unit id="ExceptionThrown">
        <source>'{0}' threw an exception of type '{1}'</source>
        <target state="translated">'{0}' は型 '{1}' の例外をスローしました</target>
        <note>Threw an exception while evaluating a value.</note>
      </trans-unit>
      <trans-unit id="HostValueNotFound">
        <source>Cannot provide the value: host value not found</source>
        <target state="translated">値を指定できません: ホスト値が見つかりません</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidPointerDereference">
        <source>Cannot dereference '{0}'. The pointer is not valid.</source>
        <target state="translated">'{0}' を逆参照できません。ポインターが無効です。</target>
        <note>Invalid pointer dereference</note>
      </trans-unit>
      <trans-unit id="NativeView">
        <source>Native View</source>
        <target state="translated">ネイティブ ビュー</target>
        <note>Native COM object expansion</note>
      </trans-unit>
      <trans-unit id="NativeViewNotNativeDebugging">
        <source>To inspect the native object, enable native code debugging.</source>
        <target state="translated">ネイティブ オブジェクトを検査するには、ネイティブ コードのデバックを有効にする必要があります。</target>
        <note>Display value of Native View node when native debugging is not enabled</note>
      </trans-unit>
      <trans-unit id="NonPublicMembers">
        <source>Non-Public members</source>
        <target state="translated">パブリックでないメンバー</target>
        <note>Non-public type members</note>
      </trans-unit>
      <trans-unit id="RawView">
        <source>Raw View</source>
        <target state="translated">列ビュー</target>
        <note>DebuggerTypeProxy "Raw View"</note>
      </trans-unit>
      <trans-unit id="ResultsView">
        <source>Results View</source>
        <target state="translated">結果ビュー</target>
        <note>IEnumerable results expansion</note>
      </trans-unit>
      <trans-unit id="ResultsViewNoSystemCore">
        <source>Results View requires System.Core.dll to be referenced</source>
        <target state="translated">結果ビューは System.Core.dll を参照する必要があります。</target>
        <note>"results" format specifier requires System.Core.dll</note>
      </trans-unit>
      <trans-unit id="ResultsViewNotEnumerable">
        <source>Only Enumerable types can have Results View</source>
        <target state="translated">結果ビューを含むことができるのは、列挙可能な型だけです</target>
        <note>Cannot use "results" format specifier on non-enumerable type</note>
      </trans-unit>
      <trans-unit id="ResultsViewValueWarning">
        <source>Expanding the Results View will enumerate the IEnumerable</source>
        <target state="translated">結果ビューを展開すると、IEnumerable が列挙されます</target>
        <note>Warning reported in Results View value</note>
      </trans-unit>
      <trans-unit id="SharedMembers">
        <source>Shared members</source>
        <target state="translated">共有メンバー</target>
        <note>Shared type members (VB only)</note>
      </trans-unit>
      <trans-unit id="StaticMembers">
        <source>Static members</source>
        <target state="translated">静的メンバー</target>
        <note>Static type members (C# only)</note>
      </trans-unit>
      <trans-unit id="TypeVariablesName">
        <source>Type variables</source>
        <target state="translated">Type 変数</target>
        <note>Type variables result name</note>
      </trans-unit>
    </body>
  </file>
</xliff>