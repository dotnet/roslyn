.assembly extern Microsoft.VisualStudio.Debugger.Metadata
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 14:0:0:0
}
.assembly extern System.Globalization
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 4:0:10:0
}
.assembly extern System.Runtime
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 4:0:20:0
}
.assembly extern System.Runtime.InteropServices
{
	.publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A)
	.ver 4:0:20:0
}
.assembly Microsoft.VisualStudio.Debugger.Engine
{
	.custom instance void [System.Runtime]System.CLSCompliantAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [System.Runtime]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90 0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F 29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1 64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D 26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93)
	.hash algorithm 0x00008004
	.ver 1:0:0:0
}
.class public abstract sealed CoreCLRHostEntrypoint
	extends [System.Runtime]System.Object
{
	.method public static hidebysig 
		native int CreateManagedInstance(string marshal(lpwstr) assemblyName, string marshal(lpwstr) typeName)
	{
		ret
	}
}
.class public abstract sealed CultureInfoHelper
	extends [System.Runtime]System.Object
{
	.method public static hidebysig 
		int32 GetLCIDFromCultureInfo(class [System.Globalization]System.Globalization.CultureInfo cultureInfo)
	{
		ret
	}
	.method public static hidebysig 
		string GetCultureNameFromLCID(int32 lcid)
	{
		.custom instance void [System.Runtime]System.Security.SecurityCriticalAttribute::.ctor() = { }
		ret
	}
}
.class public abstract sealed DebugShim
	extends [System.Runtime]System.Object
{
	.method public static hidebysig 
		void Assert(bool condition)
	{
		ret
	}
	.method public static hidebysig 
		void Assert(bool condition, string message)
	{
		ret
	}
	.method public static hidebysig 
		void Fail(string message)
	{
		ret
	}
	.method public static hidebysig 
		void WriteLine(string message)
	{
		ret
	}
}
.class public sealed DkmContinueCorruptingExceptionAttribute
	extends [System.Runtime]System.Attribute
{
	.custom instance void [System.Runtime]System.AttributeUsageAttribute::.ctor(valuetype [System.Runtime]System.AttributeTargets) = { int32(68) }
	.method public hidebysig specialname 
		instance void .ctor()
	{
		ret
	}
}
.class public sealed DkmReportNonFatalWatsonExceptionAttribute
	extends [System.Runtime]System.Attribute
{
	.custom instance void [System.Runtime]System.AttributeUsageAttribute::.ctor(valuetype [System.Runtime]System.AttributeTargets) = { int32(68) property bool AllowMultiple = bool(true) }
	.method public hidebysig specialname 
		instance class [System.Runtime]System.Type get_ExcludeExceptionType()
	{
		.custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		ret
	}
	.method public hidebysig specialname 
		instance void set_ExcludeExceptionType(class [System.Runtime]System.Type 'value')
	{
		.custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = { }
		ret
	}
	.method public hidebysig specialname 
		instance void .ctor()
	{
		ret
	}
	.property instance class [System.Runtime]System.Type ExcludeExceptionType()
	{
		.get instance class [System.Runtime]System.Type DkmReportNonFatalWatsonExceptionAttribute::get_ExcludeExceptionType()
		.set instance void DkmReportNonFatalWatsonExceptionAttribute::set_ExcludeExceptionType(class [System.Runtime]System.Type)
	}
}
.namespace Microsoft.VisualStudio.CorDebugInterop
{
	.class public sequential sealed 'COR_ACTIVE_FUNCTION'
		extends [System.Runtime]System.ValueType
	{
		.field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain pAppDomain
		.field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule pModule
		.field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction2 pFunction
		.field public uint32 ilOffset
		.field public uint32 Flags
	}
	.class public sequential sealed 'COR_DEBUG_IL_TO_NATIVE_MAP'
		extends [System.Runtime]System.ValueType
	{
		.field public uint32 ilOffset
		.field public uint32 nativeStartOffset
		.field public uint32 nativeEndOffset
	}
	.class public sequential sealed 'COR_DEBUG_STEP_RANGE'
		extends [System.Runtime]System.ValueType
	{
		.field public uint32 startOffset
		.field public uint32 endOffset
	}
	.class public sequential sealed 'COR_IL_MAP'
		extends [System.Runtime]System.ValueType
	{
		.field public uint32 oldOffset
		.field public uint32 newOffset
		.field public int32 fAccurate
	}
	.class public sequential sealed 'COR_VERSION'
		extends [System.Runtime]System.ValueType
	{
		.field public uint32 dwMajor
		.field public uint32 dwMinor
		.field public uint32 dwBuild
		.field public uint32 dwSubBuild
	}
	.class public sequential sealed CodeChunkInfo
		extends [System.Runtime]System.ValueType
	{
		.field public uint64 startAddr
		.field public uint32 length
	}
	.class public sealed CorDebugChainReason
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_CLASS_INIT' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_CONTEXT_POLICY' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_CONTEXT_SWITCH' = int32(0x00000400)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_DEBUGGER_EVAL' = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_ENTER_MANAGED' = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_ENTER_UNMANAGED' = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_EXCEPTION_FILTER' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_FUNC_EVAL' = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_INTERCEPTION' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_NONE' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_PROCESS_START' = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_SECURITY' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason 'CHAIN_THREAD_START' = int32(0x00000040)
	}
	.class public sealed CorDebugCreateProcessFlags
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugCreateProcessFlags 'DEBUG_NO_SPECIAL_OPTIONS' = int32(0x00000000)
	}
	.class public sealed CorDebugExceptionCallbackType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType 'DEBUG_EXCEPTION_CATCH_HANDLER_FOUND' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType 'DEBUG_EXCEPTION_FIRST_CHANCE' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType 'DEBUG_EXCEPTION_UNHANDLED' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType 'DEBUG_EXCEPTION_USER_FIRST_CHANCE' = int32(0x00000002)
	}
	.class public sealed CorDebugExceptionUnwindCallbackType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType 'DEBUG_EXCEPTION_INTERCEPTED' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType 'DEBUG_EXCEPTION_UNWIND_BEGIN' = int32(0x00000001)
	}
	.class public sealed CorDebugHandleType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType 'HANDLE_STRONG' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType 'HANDLE_WEAK_TRACK_RESURRECTION' = int32(0x00000002)
	}
	.class public sealed CorDebugIntercept
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_ALL' = int32(0x0000FFFF)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_CLASS_INIT' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_CONTEXT_POLICY' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_EXCEPTION_FILTER' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_INTERCEPTION' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_NONE' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept 'INTERCEPT_SECURITY' = int32(0x00000004)
	}
	.class public sealed CorDebugInternalFrameType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_APPDOMAIN_TRANSITION' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_FUNC_EVAL' = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_INTERNALCALL' = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_LIGHTWEIGHT_FUNCTION' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_M2U' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_NONE' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType 'STUBFRAME_U2M' = int32(0x00000002)
	}
	.class public sealed CorDebugMappingResult
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_APPROXIMATE' = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_EPILOG' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_EXACT' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_NO_INFO' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_PROLOG' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult 'MAPPING_UNMAPPED_ADDRESS' = int32(0x00000008)
	}
	.class public sealed CorDebugRegister
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R10' = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R11' = int32(0x0000000C)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R12' = int32(0x0000000D)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R13' = int32(0x0000000E)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R14' = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R15' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R8' = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_R9' = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RAX' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RBP' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RBX' = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RCX' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RDI' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RDX' = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RIP' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RSI' = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_RSP' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM0' = int32(0x00000011)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM1' = int32(0x00000012)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM10' = int32(0x0000001B)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM11' = int32(0x0000001C)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM12' = int32(0x0000001D)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM13' = int32(0x0000001E)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM14' = int32(0x0000001F)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM15' = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM2' = int32(0x00000013)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM3' = int32(0x00000014)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM4' = int32(0x00000015)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM5' = int32(0x00000016)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM6' = int32(0x00000017)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM7' = int32(0x00000018)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM8' = int32(0x00000019)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_AMD64_XMM9' = int32(0x0000001A)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_FRAME_POINTER' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_IA64_BSP' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_IA64_F0' = int32(0x00000083)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_IA64_R0' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_INSTRUCTION_POINTER' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_STACK_POINTER' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EAX' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EBP' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EBX' = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_ECX' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EDI' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EDX' = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_EIP' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_ESI' = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_ESP' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_0' = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_1' = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_2' = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_3' = int32(0x0000000C)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_4' = int32(0x0000000D)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_5' = int32(0x0000000E)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_6' = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister 'REGISTER_X86_FPSTACK_7' = int32(0x00000010)
	}
	.class public sealed CorDebugStepReason
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_CALL' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_EXCEPTION_FILTER' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_EXCEPTION_HANDLER' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_EXIT' = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_INTERCEPT' = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_NORMAL' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason 'STEP_RETURN' = int32(0x00000001)
	}
	.class public sealed CorDebugThreadState
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState 'THREAD_RUN' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState 'THREAD_SUSPEND' = int32(0x00000001)
	}
	.class public sealed CorDebugUnmappedStop
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_ALL' = int32(0x0000FFFF)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_EPILOG' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_NONE' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_NO_MAPPING_INFO' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_OTHER_UNMAPPED' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_PROLOG' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop 'STOP_UNMANAGED' = int32(0x00000010)
	}
	.class public sealed CorDebugUserState
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_BACKGROUND' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_STOPPED' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_STOP_REQUESTED' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_SUSPENDED' = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_SUSPEND_REQUESTED' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_UNSAFE_POINT' = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_UNSTARTED' = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState 'USER_WAIT_SLEEP_JOIN' = int32(0x00000020)
	}
	.class public sealed CorElementType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Array = int32(0x00000014)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Bool = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Byref = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Byte = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType CModOpt = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType CModReqd = int32(0x0000001F)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Char = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Class = int32(0x00000012)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Double = int32(0x0000000D)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType End = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Enum = int32(0x00000055)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Float = int32(0x0000000C)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType FnPtr = int32(0x0000001B)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType GenericInstantiation = int32(0x00000015)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Int = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType IntPtr = int32(0x00000018)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Internal = int32(0x00000021)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Long = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Max = int32(0x00000022)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType MethodVar = int32(0x0000001E)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Modifier = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Object = int32(0x0000001C)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Pinned = int32(0x00000045)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Pointer = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType SByte = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Sentinel = int32(0x00000041)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Short = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType String = int32(0x0000000E)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType SzArray = int32(0x0000001D)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Type = int32(0x00000050)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType TypeVar = int32(0x00000013)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType TypedByRef = int32(0x00000016)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UInt = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UIntPtr = int32(0x00000019)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ULong = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UShort = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ValueType = int32(0x00000011)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ValueZero = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Void = int32(0x00000001)
	}
	.class public sealed CorTokenType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtAssembly = int32(0x20000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtAssemblyRef = int32(0x23000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtBaseType = int32(0x72000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtCustomAttribute = int32(0x0C000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtEvent = int32(0x14000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtExportedType = int32(0x27000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtFieldDef = int32(0x04000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtFile = int32(0x26000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtGenericParam = int32(0x2A000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtGenericParamConstraint = int32(0x2C000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtInterfaceImpl = int32(0x09000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtManifestResource = int32(0x28000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMemberRef = int32(0x0A000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodDef = int32(0x06000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodImpl = int32(0x19000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodSpec = int32(0x2B000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtModule = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtModuleRef = int32(0x1A000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtName = int32(0x71000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtParamDef = int32(0x08000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtPermission = int32(0x0E000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtProperty = int32(0x17000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtSignature = int32(0x11000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtString = int32(0x70000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeDef = int32(0x02000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeRef = int32(0x01000000)
		.field static public literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeSpec = int32(0x1B000000)
	}
	.class public abstract sealed CorTokens
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig 
			int32 TokenFromRid(int32 rid, valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType tkType)
		{
			ret
		}
		.method public static hidebysig 
			int32 RidFromToken(int32 token)
		{
			ret
		}
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType TypeFromToken(int32 token)
		{
			ret
		}
		.method public static hidebysig 
			bool IsNilToken(int32 token)
		{
			ret
		}
	}
	.class public interface abstract import ICorDebugAppDomain
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugController
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3D6F5F63-7538-11D3-8D5B-00104B35E7EF') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Stop([in] uint32 dwTimeout)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Continue([in] int32 fIsOutOfBand)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsRunning([out] int32& pbRunning)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pThread, [out] int32& pbQueued)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum& marshal(interface) ppThreads)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pExceptThisThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Detach()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Terminate([in] uint32 exitCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CanCommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetProcess([out] native int& ppProcess)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateAssemblies([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssemblyEnum& marshal(interface) ppAssemblies)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetModuleFromMetaDataInterface([in] object marshal(iunknown) pIMetaData, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule& marshal(interface) ppModule)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateBreakpoints([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpointEnum& marshal(interface) ppBreakpoints)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateSteppers([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepperEnum& marshal(interface) ppSteppers)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsAttached([out] int32& pbAttached)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetName([in] uint32 cchName, [out] uint32& pcchName, [out] class [System.Runtime]System.Text.StringBuilder marshal(lpwstr) szName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Attach()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetID([out] uint32& pId)
		{
		}
	}
	.class public interface abstract import ICorDebugAppDomain2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('096E81D5-ECDA-4202-83F5-C65980A9EF75') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetArrayOrPointerType([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType, [in] uint32 nRank, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType marshal(interface) pTypeArg, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) ppType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionPointerType([in] uint32 nTypeArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 0]) ppTypeArgs, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) ppType)
		{
		}
	}
	.class public interface abstract import ICorDebugAppDomainEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('63CA1B24-4359-4883-BD57-13F815F58744') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain[] marshal([ + 0]) values, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugArrayValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue, Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0405B0DF-A660-11D2-BD02-0000F80849BD') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValid([out] int32& pbValid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetElementType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRank([out] uint32& pnRank)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pnCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetDimensions([in] uint32 cdim, [out] uint32[] marshal([ + 0]) dims)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void HasBaseIndicies([out] int32& pbHasBaseIndicies)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetBaseIndicies([in] uint32 cdim, [out] uint32[] marshal([ + 0]) indicies)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetElement([in] uint32 cdim, [in] int32[] marshal([ + 0]) indices, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetElementAtPosition([in] uint32 nPosition, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
	}
	.class public interface abstract import ICorDebugAssembly
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('DF59507C-D47A-459E-BCE2-6427EAC8FD06') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess& marshal(interface) ppProcess)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetAppDomain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain& marshal(interface) ppAppDomain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateModules([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleEnum& marshal(interface) ppModules)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCodeBase([in] uint32 cchName, [out] uint32& pcchName, char[] marshal([]) szName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetName([in] uint32 cchName, [out] uint32& pcchName, char[] marshal([]) szName)
		{
		}
	}
	.class public interface abstract import ICorDebugAssembly2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('426D1F9E-6DD4-44C8-AEC7-26CDBAF4E398') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void IsFullyTrusted([out] int32& pbFullyTrusted)
		{
		}
	}
	.class public interface abstract import ICorDebugAssemblyEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4A2A1EC9-85EC-4BFB-9F15-A89FDFE0FE83') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly[] marshal([ + 0]) values, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugBoxValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue, Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAFC-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValid([out] int32& pbValid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue& marshal(interface) ppObject)
		{
		}
	}
	.class public interface abstract import ICorDebugBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAE8-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Activate([in] int32 bActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
	}
	.class public interface abstract import ICorDebugBreakpointEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB03-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint[] marshal([]) breakpoints, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugChain
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAEE-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetThread([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread& marshal(interface) ppThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackRange([out] uint64& pStart, [out] uint64& pEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext& marshal(interface) ppContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetPrevious([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetNext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsManaged([out] int32& pManaged)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateFrames([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrameEnum& marshal(interface) ppFrames)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetActiveFrame([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRegisterSet([out] native int& marshal(interface) ppRegisters)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetReason([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason& pReason)
		{
		}
	}
	.class public interface abstract import ICorDebugChainEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB08-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain[] marshal([]) chains, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugClass
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF5-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule& marshal(interface) pModule)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetToken([out] uint32& pTypeDef)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStaticFieldValue([in] uint32 fieldDef, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame marshal(interface) pFrame, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
	}
	.class public interface abstract import ICorDebugClass2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('B008EA8D-7AB1-43F7-BB20-FBB5A04038AE') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetParameterizedType([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType, [in] uint32 nTypeArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 1]) ppTypeArgs, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) ppType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetJMCStatus([in] int32 bIsJustMyCode)
		{
		}
	}
	.class public interface abstract import ICorDebugCode
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF4-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void IsIL([out] int32& pbIL)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetAddress([out] uint64& pStart)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pcBytes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([in] uint32 offset, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetCode([in] uint32 startOffset, [in] uint32 endOffset, [in] uint32 cBufferAlloc, [out] uint8[] marshal([ + 4]) buffer, [out] uint32& pcBufferSize)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVersionNumber([out] uint32& nVersion)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetILToNativeMapping([in] uint32 cMap, [out] uint32& pcMap, [out] valuetype 'Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_IL_TO_NATIVE_MAP'[] marshal([ + 1]) map)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetEnCRemapSequencePoints([in] uint32 cMap, [out] uint32& pcMap, [out] uint32[] marshal([]) offsets)
		{
		}
	}
	.class public interface abstract import ICorDebugCode2
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5F696509-452F-4436-A3FE-4D11FE7E2347') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetCodeChunks([in] uint32 cbufSize, [out] uint32& pcnumChunks, [out] valuetype Microsoft.VisualStudio.CorDebugInterop.CodeChunkInfo[] marshal([ + 1]) chunks)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCompilerFlags([out] uint32& pdwFlags)
		{
		}
	}
	.class public interface abstract import ICorDebugCodeEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('55E96461-9645-45E4-A2FF-0367877ABCDE') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode[] marshal([]) values, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugContext
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue, Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB00-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetAddress([out] uint64& pAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass& marshal(interface) ppClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetFieldValue([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pClass, [in] uint32 fieldDef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVirtualMethod([in] uint32 memberRef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext& marshal(interface) ppContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValueClass([out] int32& pbIsValueClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetManagedCopy([out] object& marshal(iunknown) ppObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetFromManagedCopy([in] object marshal(iunknown) pObject)
		{
		}
	}
	.class public interface abstract import ICorDebugController
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3D6F5F62-7538-11D3-8D5B-00104B35E7EF') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Stop([in] uint32 dwTimeout)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Continue([in] int32 fIsOutOfBand)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsRunning([out] int32& pbRunning)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pThread, [out] int32& pbQueued)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum& marshal(interface) ppThreads)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pExceptThisThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Detach()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Terminate([in] uint32 exitCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CanCommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
	}
	.class public interface abstract import ICorDebugEditAndContinueSnapshot
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6DC3FA01-D7CB-11D2-8A95-0080C792E5D8') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void CopyMetaData([in] class [System.Runtime.InteropServices]System.Runtime.InteropServices.ComTypes.IStream marshal(interface) pIStream, [out] valuetype [System.Runtime]System.Guid& pMvid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetMvid([out] valuetype [System.Runtime]System.Guid& pMvid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRoDataRVA([out] uint32& pRoDataRVA)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRwDataRVA([out] uint32& pRwDataRVA)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPEBytes([in] class [System.Runtime.InteropServices]System.Runtime.InteropServices.ComTypes.IStream marshal(interface) pIStream)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetILMap([in] uint32 mdFunction, [in] uint32 cMapSize, [in] valuetype 'Microsoft.VisualStudio.CorDebugInterop.COR_IL_MAP'& map)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPESymbolBytes([in] class [System.Runtime.InteropServices]System.Runtime.InteropServices.ComTypes.IStream marshal(interface) pIStream)
		{
		}
	}
	.class public interface abstract import ICorDebugEnum
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB01-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
	}
	.class public interface abstract import ICorDebugErrorInfoEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('F0E18809-72B5-11D2-976F-00A0C9B4D50C') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] native int errors, [out] uint32& pceltFetched)
			preservesig 
		{
			.param [2]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('ICorDebugEditAndContinueErrorInfo**') }
		}
	}
	.class public interface abstract import ICorDebugEval
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF6-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void CallFunction([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction marshal(interface) pFunction, [in] uint32 nArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[] marshal([ + 1]) ppArgs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewObject([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction marshal(interface) pConstructor, [in] uint32 nArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[] marshal([ + 1]) ppArgs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewObjectNoConstructor([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewString([in] string marshal(lpwstr) 'string')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewArray([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pElementClass, [in] uint32 rank, [in] uint32& dims, [in] uint32& lowBounds)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Abort()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetResult([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppResult)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThread([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread& marshal(interface) ppThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pElementClass, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
	}
	.class public interface abstract import ICorDebugEval2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('FB0D9CE7-BE66-4683-9D32-A42A04E2FD91') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void CallParameterizedFunction([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction marshal(interface) pFunction, [in] uint32 nTypeArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 1]) ppTypeArgs, [in] uint32 nArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[] marshal([ + 3]) ppArgs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateValueForType([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType marshal(interface) pType, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewParameterizedObject([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction marshal(interface) pConstructor, [in] uint32 nTypeArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 1]) ppTypeArgs, [in] uint32 nArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[] marshal([ + 3]) ppArgs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewParameterizedObjectNoConstructor([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pClass, [in] uint32 nTypeArgs, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 1]) ppTypeArgs)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewParameterizedArray([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType marshal(interface) pElementType, [in] uint32 rank, [in] uint32[] marshal([ + 1]) dims, [in] uint32[] marshal([ + 1]) lowBounds)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NewStringWithLength([in] char[] marshal([ + 1]) chars, [in] uint32 uiLength)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RudeAbort()
		{
		}
	}
	.class public interface abstract import ICorDebugFrame
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAEF-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance int32 GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionToken([out] uint32& pToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackRange([out] uint64& pStart, [out] uint64& pEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper& marshal(interface) ppStepper)
		{
		}
	}
	.class public interface abstract import ICorDebugFrameEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB07-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame[] marshal([]) frames, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugFunction
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF3-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule& marshal(interface) ppModule)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass& marshal(interface) ppClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetToken([out] uint32& pMethodDef)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetILCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetNativeCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalVarSigToken([out] uint32& pmdSig)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentVersionNumber([out] uint32& pnCurrentVersion)
		{
		}
	}
	.class public interface abstract import ICorDebugFunction2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('EF0C490B-94C3-4E4D-B629-DDC134C532D8') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void SetJMCStatus([in] int32 bIsJustMyCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetJMCStatus([out] int32& pbIsJustMyCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateNativeCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCodeEnum& marshal(interface) ppCodeEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVersionNumber([out] uint32& pnVersion)
		{
		}
	}
	.class public interface abstract import ICorDebugFunctionBreakpoint
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAE9-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Activate([in] int32 bActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetOffset([out] uint32& pnOffset)
		{
		}
	}
	.class public interface abstract import ICorDebugGenericValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF8-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetValue([out] native int pTo)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue([in] native int pFrom)
		{
		}
	}
	.class public interface abstract import ICorDebugHandleValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue, Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('029596E8-276B-46A1-9821-732E96BBB00B') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsNull([out] int32& pbNull)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetValue([out] uint64& pValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue([in] uint64 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Dereference([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DereferenceStrong([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetHandleType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Dispose()
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugHeapValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAFA-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValid([out] int32& pbValid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
	}
	.class public interface abstract import ICorDebugHeapValue2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('E3AC4D6C-9CB7-43E6-96CC-B21540E5083C') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance int32 CreateHandle([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType 'type', [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue& marshal(interface) ppHandle)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugILFrame
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('03E26311-4F76-11D3-88C6-006097945418') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance int32 GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionToken([out] uint32& pToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackRange([out] uint64& pStart, [out] uint64& pEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper& marshal(interface) ppStepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetIP([out] uint32& pnOffset, [out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult& pMappingResult)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetIP([in] uint32 nOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateLocalVariables([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum& marshal(interface) ppValueEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalVariable([in] uint32 dwIndex, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateArguments([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum& marshal(interface) ppValueEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetArgument([in] uint32 dwIndex, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackDepth([out] uint32& pDepth)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackValue([in] uint32 dwIndex, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 CanSetIP([in] uint32 nOffset)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugILFrame2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5D88A994-6C30-479B-890F-BCEF88B129A5') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void RemapFunction([in] uint32 newILOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateTypeParameters([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum& marshal(interface) ppTyParEnum)
		{
		}
	}
	.class public interface abstract import ICorDebugInternalFrame
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('B92CC7F7-9D2D-45C4-BC2B-621FCC9DFBF4') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionToken([out] uint32& pToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackRange([out] uint64& pStart, [out] uint64& pEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper& marshal(interface) ppStepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFrameType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType& pType)
		{
		}
	}
	.class public interface abstract import ICorDebugModule
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('DBA2D8C1-E5C5-4069-8C13-10A7C6ABF43D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess& marshal(interface) ppProcess)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetBaseAddress([out] uint64& pAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetAssembly([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly& marshal(interface) ppAssembly)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetName([in] uint32 cchName, [out] uint32[] marshal([1]) pcchName, [out] char[] marshal([ + 0]) szName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnableJITDebugging([in] int32 bTrackJITInfo, [in] int32 bAllowJitOpts)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnableClassLoadCallbacks([in] int32 bClassLoadCallbacks)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionFromToken([in] uint32 methodDef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionFromRVA([in] uint64 rva, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetClassFromToken([in] uint32 typeDef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass& marshal(interface) ppClass)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetEditAndContinueSnapshot([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) ppEditAndContinueSnapshot)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetMetaDataInterface([in] valuetype [System.Runtime]System.Guid& riid, [out] native int& pMetaDataInterface)
			preservesig 
		{
			.param [1]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('REFIID') }
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetToken([out] uint32& pToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsDynamic([out] int32& pDynamic)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetGlobalVariableValue([in] uint32 fieldDef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pcBytes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsInMemory([out] int32& pInMemory)
		{
		}
	}
	.class public interface abstract import ICorDebugModule2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7FCC5FB5-49C0-41DE-9938-3B88B5B9ADD7') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void SetJMCStatus([in] int32 bIsJustMyCode, [in] uint32 cTokens, [in] uint32& pTokens)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ApplyChanges([in] uint32 cbMetadata, [in] uint8[] marshal([]) pbMetadata, [in] uint32 cbIL, [in] uint8[] marshal([]) pbIL)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 SetJITCompilerFlags([in] uint32 dwFlags)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetJITCompilerFlags([out] uint32& pdwFlags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 ResolveAssembly([in] uint32 tkAssemblyRef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly& marshal(interface) ppAssembly)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugModuleBreakpoint
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAEA-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Activate([in] int32 bActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule& marshal(interface) ppModule)
		{
		}
	}
	.class public interface abstract import ICorDebugModuleEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB09-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule[] marshal([ + 0]) modules, [out] uint32& pceltFetched)
		{
		}
	}
	.class public interface abstract import ICorDebugNativeFrame
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('03E26314-4F76-11D3-88C6-006097945418') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode& marshal(interface) ppCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFunctionToken([out] uint32& pToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetStackRange([out] uint64& pStart, [out] uint64& pEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper& marshal(interface) ppStepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetIP([out] uint32& pnOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetIP([in] uint32 nOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRegisterSet([out] native int& marshal(interface) ppRegisters)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalRegisterValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister reg, [in] uint32 cbSigBlob, [in] uint8[] marshal([ + 1]) pvSigBlob, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalDoubleRegisterValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister highWordReg, [in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister lowWordReg, [in] uint32 cbSigBlob, [in] uint8[] marshal([ + 2]) pvSigBlob, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalMemoryValue([in] uint64 address, [in] uint32 cbSigBlob, [in] uint8[] marshal([ + 1]) pvSigBlob, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalRegisterMemoryValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister highWordReg, [in] uint64 lowWordAddress, [in] uint32 cbSigBlob, [in] uint8[] marshal([ + 2]) pvSigBlob, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalMemoryRegisterValue([in] uint64 highWordAddress, [in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister lowWordRegister, [in] uint32 cbSigBlob, [in] uint8[] marshal([ + 2]) pvSigBlob, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 CanSetIP([in] uint32 nOffset)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugObjectEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB02-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] uint64[] marshal([]) objects, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugObjectValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('18AD3D6E-B7D2-11D2-BD04-0000F80849BD') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass& marshal(interface) ppClass)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetFieldValue([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass marshal(interface) pClass, [in] uint32 fieldDef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVirtualMethod([in] uint32 memberRef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext& marshal(interface) ppContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValueClass([out] int32& pbIsValueClass)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetManagedCopy([out] object& marshal(iunknown) ppObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetFromManagedCopy([in] object marshal(iunknown) pObject)
		{
		}
	}
	.class public interface abstract import ICorDebugObjectValue2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('49E4A320-4A9B-4ECA-B105-229FB7D5009F') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetVirtualMethodAndType([in] uint32 memberRef, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction& marshal(interface) ppFunction, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) ppType)
		{
		}
	}
	.class public interface abstract import ICorDebugProcess
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugController
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3D6F5F64-7538-11D3-8D5B-00104B35E7EF') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Stop([in] uint32 dwTimeout)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Continue([in] int32 fIsOutOfBand)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsRunning([out] int32& pbRunning)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pThread, [out] int32& pbQueued)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum& marshal(interface) ppThreads)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread marshal(interface) pExceptThisThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Detach()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Terminate([in] uint32 exitCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CanCommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CommitChanges([in] uint32 cSnapshots, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot& marshal(interface) pSnapshots, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum& marshal(interface) pError)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetID([out] uint32& pdwProcessId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetHandle([out] native int& phProcessHandle)
		{
			.param [1]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('HPROCESS*') }
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThread([in] uint32 dwThreadId, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread& marshal(interface) ppThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateObjects([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectEnum& marshal(interface) ppObjects)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsTransitionStub([in] uint64 address, [out] int32& pbTransitionStub)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsOSSuspended([in] uint32 threadID, [out] int32& pbSuspended)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThreadContext([in] uint32 threadID, [in] uint32 contextSize, [in] native int context)
		{
			.param [3]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('BYTE*') }
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetThreadContext([in] uint32 threadID, [in] uint32 contextSize, [in] native int context)
		{
			.param [3]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('BYTE*') }
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 ReadMemory([in] uint64 address, [in] uint32 size, [out] uint8[] marshal([ + 1]) buffer, [out] native int& read)
			preservesig 
		{
			.param [4]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('SIZE_T*') }
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteMemory([in] uint64 address, [in] uint32 size, [in] uint8[] marshal([ + 1]) buffer, [out] native int& written)
		{
			.param [4]
			.custom instance void System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = { string('SIZE_T*') }
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearCurrentException([in] uint32 threadID)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnableLogMessages([in] int32 fOnOff)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ModifyLogSwitch([in] string marshal(lpwstr) pLogSwitchName, [in] int32 lLevel)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateAppDomains([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomainEnum& marshal(interface) ppAppDomains)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ThreadForFiberCookie([in] uint32 fiberCookie, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread& marshal(interface) ppThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetHelperThreadID([out] uint32& pThreadID)
		{
		}
	}
	.class public interface abstract import ICorDebugProcess2
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('AD1B3588-0EF0-4744-A496-AA09A9F80371') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetThreadForTaskID([in] uint64 taskid, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread2& marshal(interface) ppThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVersion([out] valuetype 'Microsoft.VisualStudio.CorDebugInterop.COR_VERSION'& version)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetUnmanagedBreakpoint([in] uint64 address, [in] uint32 bufsize, [out] uint8[] marshal([]) buffer, [out] uint32& bufLen)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearUnmanagedBreakpoint([in] uint64 address)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetDesiredNGENCompilerFlags([in] uint32 pdwFlags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetDesiredNGENCompilerFlags([out] uint32& pdwFlags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetReferenceValueFromGCHandle([in] native int handle, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue& marshal(interface) pOutValue)
		{
		}
	}
	.class public interface abstract import ICorDebugProcessEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB05-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess[] marshal([]) processes, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugReferenceValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF9-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsNull([out] int32& pbNull)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetValue([out] uint64& pValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValue([in] uint64 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Dereference([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DereferenceStrong([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
	}
	.class public interface abstract import ICorDebugStepper
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAEC-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Deactivate()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetInterceptMask([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept mask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetUnmappedStopMask([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop mask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Step([in] int32 bStepIn)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StepRange([in] int32 bStepIn, [in] valuetype 'Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_STEP_RANGE'[] marshal([]) ranges, [in] uint32 cRangeCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StepOut()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetRangeIL([in] int32 bIL)
		{
		}
	}
	.class public interface abstract import ICorDebugStepper2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('C5B6E9C3-E7D1-4A8E-873B-7F047F0706F7') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void SetJMC([in] int32 fIsJMCStepper)
		{
		}
	}
	.class public interface abstract import ICorDebugStepperEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB04-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper[] marshal([]) steppers, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugStringValue
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue, Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAFD-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsValid([out] int32& pbValid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLength([out] uint32& pcchString)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetString([in] uint32 cchString, [out] uint32& pcchString, [out] char[] marshal([ + 0]) str)
		{
		}
	}
	.class public interface abstract import ICorDebugThread
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('938C6D66-7FB6-4F69-B389-425B8987329B') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess& marshal(interface) ppProcess)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetID([out] uint32& pdwThreadId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetHandle([out] native int& phThreadHandle)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAppDomain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain& marshal(interface) ppAppDomain)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetDebugState([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState& pState)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetUserState([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState& pState)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentException([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppExceptionObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearCurrentException()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper& marshal(interface) ppStepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateChains([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChainEnum& marshal(interface) ppChains)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetActiveChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain& marshal(interface) ppChain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetActiveFrame([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame& marshal(interface) ppFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRegisterSet([out] native int& marshal(interface) ppRegisters)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateEval([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval& marshal(interface) ppEval)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppObject)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugThread2
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2BD956D9-7B07-4BEF-8A98-12AA862417C5') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetActiveFunctions([in] uint32 cFunctions, [out] uint32& pcFunctions, [out] valuetype 'Microsoft.VisualStudio.CorDebugInterop.COR_ACTIVE_FUNCTION'[] marshal([ + 1]) pFunctions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetConnectionID([out] uint32& pdwConnectionId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskID([out] uint64& pTaskId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetVolatileOSThreadID([out] uint32& pdwTid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InterceptCurrentException([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame marshal(interface) pFrame)
		{
		}
	}
	.class public interface abstract import ICorDebugThreadEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB06-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread[] marshal([ + 0]) threads, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('D613F0BB-ACE1-4C19-BD72-E4C08D5DA7F5') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& ty)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass& marshal(interface) ppClass)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnumerateTypeParameters([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum& marshal(interface) ppTyParEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFirstTypeParameter([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) 'value')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetBase([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) pBase)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetStaticFieldValue([in] uint32 fieldDef, [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame marshal(interface) pFrame, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetRank([out] uint32& pnRank)
		{
		}
	}
	.class public interface abstract import ICorDebugTypeEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('10F27499-9DF2-43CE-8333-A321D7C99CB4') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[] marshal([ + 0]) values, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
	.class public interface abstract import ICorDebugValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAF7-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetSize([out] uint32& pSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAddress([out] uint64& pAddress)
			preservesig 
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint& marshal(interface) ppBreakpoint)
		{
		}
	}
	.class public interface abstract import ICorDebugValue2
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5E0B54E7-D88A-4626-9420-A691E0A78B49') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void GetExactType([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType& marshal(interface) ppType)
		{
		}
	}
	.class public interface abstract import ICorDebugValueBreakpoint
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCAEB-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Activate([in] int32 bActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void IsActive([out] int32& pbActive)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetValue([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue& marshal(interface) ppValue)
		{
		}
	}
	.class public interface abstract import ICorDebugValueEnum
		implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
	{
		.custom instance void System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = { }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('CC7BCB0A-8A68-11D2-983C-0000F808342D') }
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = { int16(1) }
		.method public virtual hidebysig newslot abstract 
			instance void Skip([in] uint32 celt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Reset()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum& marshal(interface) ppEnum)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCount([out] uint32& pcelt)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 Next([in] uint32 celt, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[] marshal([]) values, [out] uint32& pceltFetched)
			preservesig 
		{
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger
{
	.class public sealed DkmApiVersion
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS11FeaturePack1 = int32(0x0B000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion 'VS11RTM' = int32(0x0B000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS11Update2 = int32(0x0B000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion 'VS12RTM' = int32(0x0C000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS12Update2 = int32(0x0C000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS12Update3 = int32(0x0C000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion 'VS14RTM' = int32(0x0E000002)
	}
	.class public sealed DkmAsyncBreakStatus
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus ActiveBreak = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus FrozenBreak = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus ImmediateBreak = int32(0x00000002)
	}
	.class public abstract sealed DkmBaseDebugMonitorId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_WindowsProcess()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrVirtualMachine()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DumpFile()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_GpuVirtualMachine()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_InProcessManagedNativeInterop()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DumpFileInterop()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid ActiveScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_ActiveScript()
		}
		.property valuetype [System.Runtime]System.Guid ClrVirtualMachine()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_ClrVirtualMachine()
		}
		.property valuetype [System.Runtime]System.Guid DumpFile()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_DumpFile()
		}
		.property valuetype [System.Runtime]System.Guid DumpFileInterop()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_DumpFileInterop()
		}
		.property valuetype [System.Runtime]System.Guid GpuVirtualMachine()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_GpuVirtualMachine()
		}
		.property valuetype [System.Runtime]System.Guid InProcessManagedNativeInterop()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_InProcessManagedNativeInterop()
		}
		.property valuetype [System.Runtime]System.Guid WindowsProcess()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_WindowsProcess()
		}
	}
	.class public sealed 'DkmCompletionRoutine`1'<valuetype .ctor ([System.Runtime]System.ValueType) 'TResult'>
		extends [System.Runtime]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(!0 result)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [System.Runtime]System.IAsyncResult BeginInvoke(!0 result, class [System.Runtime]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [System.Runtime]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract sealed DkmComponentManager
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig 
			void InitializeThread(valuetype [System.Runtime]System.Guid componentId)
		{
			ret
		}
		.method public static hidebysig 
			void InitializeThread(valuetype [System.Runtime]System.Guid componentId, [out] bool& alreadyInitialized)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void InitializeThread(native int componentHandle, [out] bool& alreadyInitialized)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			native int FindComponentHandle(valuetype [System.Runtime]System.Guid componentGuid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void PushComponentTransition(native int componentHandle)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void PopComponentTransition(native int componentHandle)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void UninitializeThread(native int componentHandle)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void UninitializeThread(valuetype [System.Runtime]System.Guid componentId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_CurrentComponentId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void AllowComponentReentrancy()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			void DisableComponentReentrancy()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			bool IsApiVersionSupported(valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion apiVersion)
		{
			ret
		}
		.method public static hidebysig 
			bool ReportCurrentNonFatalException(class [System.Runtime]System.Exception currentException, string implementationName)
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid CurrentComponentId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmComponentManager::get_CurrentComponentId()
		}
	}
	.class public DkmCustomMessage
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d308a6ed-8e21-e7dd-abfa-9ae22434f9bc') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MessageCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Parameter1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Parameter2()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmCustomMessage Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid SourceId, int32 MessageCode, object Parameter1, object Parameter2)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnCustomStop(class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype [System.Runtime]System.Guid VsService)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage SendHigher()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage SendLower()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SendLower(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SendToVsService(valuetype [System.Runtime]System.Guid VsService, bool IsBlocking)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Connection()
		}
		.property instance int32 MessageCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_MessageCode()
		}
		.property instance object Parameter1()
		{
			.get instance object Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Parameter1()
		}
		.property instance object Parameter2()
		{
			.get instance object Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Parameter2()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_SourceId()
		}
	}
	.class public abstract DkmDataContainer
		extends [System.Runtime]System.Object
	{
		.method public hidebysig 
			instance void SetDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) 'T'>(valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreationDisposition, !!0 item)
		{
			ret
		}
		.method public hidebysig 
			instance !!0 GetDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) 'T'>()
		{
			ret
		}
		.method public hidebysig 
			instance bool RemoveDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) 'T'>()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsUnloaded()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance bool IsUnloaded()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmDataContainer::get_IsUnloaded()
		}
	}
	.class public sealed DkmDataCreationDisposition
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreateAlways = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreateNew = int32(0x00000000)
	}
	.class public abstract DkmDataItem
		extends [System.Runtime]System.Object
	{
		.method family virtual hidebysig newslot 
			instance void OnClose()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnContainerCreated(class Microsoft.VisualStudio.Debugger.DkmDataContainer container)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed DkmDispatcherObjectFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags LockInitialized = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags ObjectAlive = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags ObjectUnloaded = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RemoteMarshalled = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RestrictVisibilityAboveCreationLevel = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RestrictVisibilityBelowCreationLevel = int32(0x00000010)
	}
	.class public sequential sealed DkmDisplayUserMessagePromptAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint32 Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult::get_ErrorCode()
		}
		.property instance uint32 Result()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult::get_Result()
		}
	}
	.class public sealed DkmDumpType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDumpType Minidump = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmDumpType MinidumpWithFullMemory = int32(0x00000001)
	}
	.class public sealed DkmEngineFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags JustMyCodeSupported = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags NativeCodeSupported = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags None = int32(0x00000000)
	}
	.class public abstract sealed DkmEngineId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_NativeEng()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_COMPlusNativeEng()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_COMPlusOnlyEng2()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_COMPlusOnlyEng4()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_COMPlusSQLLocalEng()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_SilverlightEng()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_EmbeddedClrEngV1()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_EmbeddedClrEngV2()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_MacSilverlightEng()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Script()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_CoreSystemClr()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_InteropEngineV2()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_InteropEngineV4()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrNativeCompilation()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid COMPlusNativeEng()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusNativeEng()
		}
		.property valuetype [System.Runtime]System.Guid COMPlusOnlyEng2()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusOnlyEng2()
		}
		.property valuetype [System.Runtime]System.Guid COMPlusOnlyEng4()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusOnlyEng4()
		}
		.property valuetype [System.Runtime]System.Guid COMPlusSQLLocalEng()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusSQLLocalEng()
		}
		.property valuetype [System.Runtime]System.Guid ClrNativeCompilation()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_ClrNativeCompilation()
		}
		.property valuetype [System.Runtime]System.Guid CoreSystemClr()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_CoreSystemClr()
		}
		.property valuetype [System.Runtime]System.Guid EmbeddedClrEngV1()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_EmbeddedClrEngV1()
		}
		.property valuetype [System.Runtime]System.Guid EmbeddedClrEngV2()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_EmbeddedClrEngV2()
		}
		.property valuetype [System.Runtime]System.Guid InteropEngineV2()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_InteropEngineV2()
		}
		.property valuetype [System.Runtime]System.Guid InteropEngineV4()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_InteropEngineV4()
		}
		.property valuetype [System.Runtime]System.Guid MacSilverlightEng()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_MacSilverlightEng()
		}
		.property valuetype [System.Runtime]System.Guid NativeEng()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_NativeEng()
		}
		.property valuetype [System.Runtime]System.Guid Script()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_Script()
		}
		.property valuetype [System.Runtime]System.Guid SilverlightEng()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_SilverlightEng()
		}
	}
	.class public DkmEngineSettings
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3c1f22df-556c-18bf-7584-c2c649777bfe') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_EngineId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId get_ClrDebuggingServicesId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage> get_Languages()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat> get_ImageDebugDirectoryFormats()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableFuncEvalQuickAbort()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_FuncEvalQuickAbortExcludeList()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EnableAsyncDebugging()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_RemoteClrPdbNamePatterns()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_BaseDebugMonitorId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_MaxCallStackFrames()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEditAndContinue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ValidateFilesForMinidumps()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak> get_RegistryTweaks()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsJustMyCodeEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings get_SymbolPaths()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsSuppressOptimizationsEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsStepOverPropertiesAndOperatorsEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsNativeExportsEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsGpuRaceHazardsAllowSameSettingEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_RequireFullTrustForSourceServer()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_TraceSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmEngineSettings FindSettings(valuetype [System.Runtime]System.Guid EngineId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmEngineSettings[] GetSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess FindProcess(valuetype [System.Runtime]System.Guid UniqueId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess[] GetProcesses()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage GetLanguage(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId[] GetCodeViewCompilers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetUserDocumentPath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid BaseDebugMonitorId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_BaseDebugMonitorId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId ClrDebuggingServicesId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ClrDebuggingServicesId()
		}
		.property instance bool EnableAsyncDebugging()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EnableAsyncDebugging()
		}
		.property instance bool EnableFuncEvalQuickAbort()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EnableFuncEvalQuickAbort()
		}
		.property instance valuetype [System.Runtime]System.Guid EngineId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EngineId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_Flags()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FuncEvalQuickAbortExcludeList()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_FuncEvalQuickAbortExcludeList()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat> ImageDebugDirectoryFormats()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ImageDebugDirectoryFormats()
		}
		.property instance bool IsEditAndContinue()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsEditAndContinue()
		}
		.property instance bool IsGpuRaceHazardsAllowSameSettingEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsGpuRaceHazardsAllowSameSettingEnabled()
		}
		.property instance bool IsJustMyCodeEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsJustMyCodeEnabled()
		}
		.property instance bool IsNativeExportsEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsNativeExportsEnabled()
		}
		.property instance bool IsStepOverPropertiesAndOperatorsEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsStepOverPropertiesAndOperatorsEnabled()
		}
		.property instance bool IsSuppressOptimizationsEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsSuppressOptimizationsEnabled()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage> Languages()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_Languages()
		}
		.property instance uint32 MaxCallStackFrames()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_MaxCallStackFrames()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak> RegistryTweaks()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RegistryTweaks()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> RemoteClrPdbNamePatterns()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RemoteClrPdbNamePatterns()
		}
		.property instance bool RequireFullTrustForSourceServer()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RequireFullTrustForSourceServer()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings SymbolPaths()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_SymbolPaths()
		}
		.property instance string TraceSettings()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_TraceSettings()
		}
		.property instance bool ValidateFilesForMinidumps()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ValidateFilesForMinidumps()
		}
	}
	.class public sealed DkmEventCode
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode AsyncBreakComplete = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BinaryLoaded = int32(0x00000024)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BinaryReloadOpportunity = int32(0x00000026)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BoundBreakpointHit = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ClrDebugMonitorExceptionCaught = int32(0x00000025)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ComputeKernelExit = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode CustomStop = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode DebugMonitorException = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode EmbeddedBreakpointHit = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode EntryPoint = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ExceptionContinued = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ExceptionTriggerHit = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode FuncEvalCompleted = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode FuncEvalStarting = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode GPUSingleStepComplete = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode HiddenEntryPoint = int32(0x00000028)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode InterceptExceptionCompleted = int32(0x0000000C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode LoadComplete = int32(0x0000000D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleCreate = int32(0x0000000E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleInstanceLoad = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleInstanceUnload = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleSymbolsLoaded = int32(0x00000011)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleSymbolsUpdated = int32(0x00000012)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode OutOfBandException = int32(0x00000023)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ProcessCreate = int32(0x00000013)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ProcessExit = int32(0x00000014)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ReturnValues = int32(0x00000015)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeBreakpoint = int32(0x00000016)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceLoad = int32(0x00000017)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceLoadComplete = int32(0x00000027)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceUnload = int32(0x00000018)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentContentInsert = int32(0x00000019)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentContentRemove = int32(0x0000001A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentTreeNodeCreate = int32(0x0000001B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentTreeNodeUnload = int32(0x0000001C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptSymbolsUpdated = int32(0x0000001D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode SingleStepComplete = int32(0x0000001E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode StepComplete = int32(0x0000001F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode TaskProviderCreate = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ThreadCreate = int32(0x00000021)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ThreadExit = int32(0x00000022)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ThreadNameChange = int32(0x00000029)
	}
	.class public DkmEventDescriptor
		extends [System.Runtime]System.Object
	{
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmEventCode Code()
		{
			ret
		}
		.method public hidebysig 
			instance int32 Id()
		{
			ret
		}
		.method public hidebysig 
			instance uint64 GetTimeStamp()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmEventDescriptorS
		extends Microsoft.VisualStudio.Debugger.DkmEventDescriptor
	{
		.method public hidebysig 
			instance void Suppress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmException
		extends [System.Runtime]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode code)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode get_Code()
		{
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode Code()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode Microsoft.VisualStudio.Debugger.DkmException::get_Code()
		}
	}
	.class public sealed DkmExceptionCode
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'COR_E_OPERATIONCANCELED' = int32(0x8013153B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_64BIT_CLR_NOT_SUPPORTED' = int32(0x80040017)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_64BIT_COMPONENTS_NOT_INSTALLED' = int32(0x80040750)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ACCESS_DENIED_ON_CALLBACK' = int32(0x800405A4)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ALL_THREADS_SUSPENDED' = int32(0x80040207)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_APPX_REGISTRATION_NOT_FOUND' = int32(0x80040C17)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_APP_PACKAGE_NEVER_SUSPENDED' = int32(0x92330049)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ARMDUMP_NOT_SUPPORTED_PRE_WIN8' = int32(0x80040D14)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ASP_USER_ACCESS_DENIED' = int32(0x80040125)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED' = int32(0x80040111)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ASYNCBREAK_NO_PROGRAMS' = int32(0x80040110)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ASYNCBREAK_UNABLE_TO_PROCESS' = int32(0x80040112)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_CANNOT_ATTACH_TO_DESKTOP' = int32(0x80040003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION' = int32(0x80040002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_DEBUGGER_ALREADY_ATTACHED' = int32(0x80040001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_FAILED_ABORT_SILENTLY' = int32(0x80040A07)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_NOT_ENABLED' = int32(0x80040402)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_NO_CLR_PROGRAMS' = int32(0x8004000E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_REQUIRES_ELEVATION' = int32(0x80040039)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ATTACH_USER_CANCELED' = int32(0x80040760)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTOATTACH_WEBSERVER_NOT_FOUND' = int32(0x80040901)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTO_ATTACH_CLASSNOTREG' = int32(0x80040129)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTO_ATTACH_COCREATE_FAILURE' = int32(0x80040128)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTO_ATTACH_DCOM_ERROR' = int32(0x80040127)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTO_ATTACH_NOT_REGISTERED' = int32(0x80040126)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_AUTO_LAUNCH_EXEC_FAILURE' = int32(0x80040028)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BAD_CLR_DIASYMREADER' = int32(0x80040802)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BAD_NETCF_VERSION' = int32(0x80040408)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BAD_SYMBOL_DATA' = int32(0x92330059)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BG_TASK_ACTIVATION_FAILED' = int32(0x80040D0E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_CLR_ERROR' = int32(0x92330006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_CLR_EXTERN_FUNCTION' = int32(0x92330007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_DELETED' = int32(0x80040060)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_INVALID_ADDRESS' = int32(0x92330002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_IN_OPTIMIZED_CODE' = int32(0x92330004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_IN_RUNTIME_MODULE_BLOCKED' = int32(0x92330063)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BP_MODULE_UNLOADED' = int32(0x92330008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_BREAK_ALL_FAILED' = int32(0x80040404)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_AUTOATTACH_TO_SQLSERVER' = int32(0x80040D02)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL' = int32(0x80040130)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_DEBUG_APP_PACKAGE_IN_RDBSERVICE' = int32(0x92330044)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_DEBUG_MULTI_GPU_PROCS' = int32(0x80040D05)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_DEBUG_WIN32' = int32(0x8004021B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_DEBUG_WIN64' = int32(0x8004021C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_DETACH_WHILE_TERMINATE_IN_PROGRESS' = int32(0x80040D15)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_EMULATE_RESULTS_VIEW' = int32(0x92330060)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_FIND_INTERNET_EXPLORER' = int32(0x80040139)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_FIND_REMOTE_RESOURCES' = int32(0x92330018)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT' = int32(0x80040561)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_LAUNCH_IN_RDBSERVICE' = int32(0x92330045)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_MIX_MINDUMP_DEBUGGING' = int32(0x80040018)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_REMOTE_DEBUG_MIXED' = int32(0x80040D0D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION' = int32(0x80040104)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_GENERAL' = int32(0x8004010B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH' = int32(0x8004010A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY' = int32(0x80040108)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER' = int32(0x8004010C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_IN_OPTIMIZED_CODE' = int32(0x80040D13)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION' = int32(0x80040105)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME' = int32(0x80040100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY' = int32(0x80040109)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_BREAKPOINT_BIND_ERROR' = int32(0x80040923)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_BREAKPOINT_NOT_HIT' = int32(0x80040922)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_BRIDGE_ALREADY_INITIALIZED' = int32(0x92330046)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_NO_SERVER_RESPONSE' = int32(0x80040920)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_PROJECT_DISABLED' = int32(0x80040924)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CAUSALITY_REMOTE_NOT_REGISTERED' = int32(0x80040921)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CLIENT_NOT_LOGGED_ON' = int32(0x800405A7)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CLR_CANNOT_DEBUG_FIBER_PROCESS' = int32(0x80040034)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CLR_INCOMPATIBLE_PROTOCOL' = int32(0x80040033)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CLR_NOT_SUPPORTED' = int32(0x80040016)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CLR_SHIM_ERROR' = int32(0x80040803)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CODE_CONTEXT_OUT_OF_SCOPE' = int32(0x800405A1)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_COMPARE_CANNOT_COMPARE' = int32(0x800400A0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CONTEXT_CONTROL_REQUIRED' = int32(0x92330026)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CORRUPT_MINIDUMP' = int32(0x80040C13)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CRASHDUMP_ACTIVE' = int32(0x80040206)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CRASHDUMP_DEPRECATED' = int32(0x80040227)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_CRASHDUMP_UNSUPPORTED' = int32(0x80040211)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DATABPS_NOTSUPPORTED' = int32(0x9233004E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DBGEXTENSION_FAULTED' = int32(0x80040912)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DBGEXTENSION_FUNCTION_NOT_FOUND' = int32(0x80040911)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DBGEXTENSION_NOT_FOUND' = int32(0x80040910)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DBGEXTENSION_RESULT_INVALID' = int32(0x80040913)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DBGSHIM_INIT_ERROR' = int32(0x92330062)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DCOM_ACCESS_DENIED' = int32(0x8004002C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEBUGGEE_BLOCKED' = int32(0x80040216)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEBUGGER_NOT_REGISTERED_PROPERLY' = int32(0x80040023)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEBUGGING_BLOCKED_ON_TARGET' = int32(0x80040D17)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEBUG_ENGINE_NOT_REGISTERED' = int32(0x80040019)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEBUG_PROCESS_REQUEST_FAILED' = int32(0x9233004F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEPLOY_APPX_SHUTDOWN_WRONG_TIME' = int32(0x92330047)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEPLOY_FILE_NOT_EXIST' = int32(0x92330041)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEPLOY_FILE_PATH_INVALID' = int32(0x92330039)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEPLOY_FILE_TOO_LARGE' = int32(0x92330038)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DESTROYED' = int32(0x80040201)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DETACH_FAILED_ON_ENC' = int32(0x92330064)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DETACH_IMPERSONATE_FAILURE' = int32(0x800400F0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DETACH_NO_PROXY' = int32(0x800400D0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DETACH_TS_UNSUPPORTED' = int32(0x800400E0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEVICEBITS_NOT_SIGNED' = int32(0x80040401)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEVICE_ACCESS_DENIED' = int32(0x80040406)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEVICE_ACCESS_DENIED_SELECT_YES' = int32(0x80040405)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DEVICE_CONNRESET' = int32(0x80040407)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DE_CLR_DBG_SERVICES_NOT_INSTALLED' = int32(0x8004000D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DE_NOT_SUPPORTED_PRE_8_0' = int32(0x80040B00)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DISASM_BADADDRESS' = int32(0x80040042)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DISASM_NOTAVAILABLE' = int32(0x80040043)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DISASM_NOTSUPPORTED' = int32(0x80040041)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DOTNETNATIVE_SDK_NOT_INSTALLED' = int32(0x80040D18)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMPS_DO_NOT_SUPPORT_BREAKPOINTS' = int32(0x92330022)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMP_ALREADY_LAUNCHED' = int32(0x80040D12)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMP_ARM_ARCHITECTURE' = int32(0x92330023)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMP_CORRUPTED' = int32(0x80040224)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMP_NO_THREADS' = int32(0x9233005C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_DUMP_UNKNOWN_ARCHITECTURE' = int32(0x92330024)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ENABLE_SCRIPT_DEBUGGING_FAILED' = int32(0x9233005A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_ENC_SETIP_REQUIRES_CONTINUE' = int32(0x80040107)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_EVALUATE_BUSY_WITH_EVALUATION' = int32(0x80040030)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_EVALUATE_TIMEOUT' = int32(0x80040031)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_EXCEPTION_CANNOT_BE_INTERCEPTED' = int32(0x80040140)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK' = int32(0x80040141)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_EXECUTE_COMMAND_IN_PROGRESS' = int32(0x92330042)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FAIL' = int32(0x80004005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FAILED_TO_INITIALIZE_SCRIPT_PROXY' = int32(0x8004001B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FIBER_NOT_SUPPORTED' = int32(0x80040103)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FIREWALL_CANNOT_OPEN_APPLICATION' = int32(0x8004075B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FIREWALL_CANNOT_OPEN_FILE_SHARING' = int32(0x8004075D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FIREWALL_CANNOT_OPEN_PORT' = int32(0x8004075C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FIREWALL_NO_EXCEPTIONS' = int32(0x8004075A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FORCE_GUEST_MODE_ENABLED' = int32(0x80040024)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_FUNCTION_NOT_JITTED' = int32(0x80040800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GETREFERENCE_NO_REFERENCE' = int32(0x80040581)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GET_IWAM_USER_FAILURE' = int32(0x80040025)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GLOBAL_INTERFACE_POINTER_FAILURE' = int32(0x92330016)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_ADAPTOR_NOT_FOUND' = int32(0x80040D06)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_BARRIER_BREAKPOINT_NOT_SUPPORTED' = int32(0x9233004D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_DEBUG_CONFIG_ISSUE' = int32(0x80040D09)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_DEBUG_NOT_SUPPORTED_PRE_DX_11_1' = int32(0x80040D08)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_LOAD_VSD3D_FAILURE' = int32(0x80040D0B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_LOCAL_DEBUGGING_ERROR' = int32(0x80040D0A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_GPU_TDR_ENABLED_FAILURE' = int32(0x80040D0C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_ACCESS_DENIED' = int32(0x80040708)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_APP_NOT_FOUND' = int32(0x8004070D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_BAD_REQUEST' = int32(0x80040707)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_CONNECT_FAILED' = int32(0x80040709)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_EXCEPTION' = int32(0x8004070A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_FORBIDDEN' = int32(0x80040703)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_GENERAL' = int32(0x80040765)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_MANAGEMENT_API_MISSING' = int32(0x8004070E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_NOT_FOUND' = int32(0x80040706)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_NOT_SUPPORTED' = int32(0x80040704)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_NO_CONTENT' = int32(0x80040705)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_NO_PROCESS' = int32(0x8004070F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_SENDREQUEST_FAILED' = int32(0x80040702)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_SERVERERROR' = int32(0x80040700)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_SITE_NOT_FOUND' = int32(0x8004070C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_TIMEOUT' = int32(0x8004070B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_HTTP_UNAUTHORIZED' = int32(0x80040701)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_IMAGE_NOT_LOADED' = int32(0x80040102)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INSTRUCTION_NO_SOURCE' = int32(0x92330011)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP' = int32(0x80040143)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED' = int32(0x80040142)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTEROP_CLR_TOO_OLD' = int32(0x80040032)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTEROP_IA64' = int32(0x80040764)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTEROP_NOT_SUPPORTED' = int32(0x80040009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTEROP_ORPC_INIT' = int32(0x80040219)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INTEROP_X64' = int32(0x80040225)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_CLR_INSTRUCTION_NATIVE_OFFSET' = int32(0x92330055)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_DATABP_ALLREGSUSED' = int32(0x92330021)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_DATABP_SIZE' = int32(0x92330020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_FULL_PATH' = int32(0x92330043)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_MEMORY_ADDRESS' = int32(0x92330010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_MEMORY_PROTECT' = int32(0x92330032)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_PE_FORMAT' = int32(0x80040D11)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_REGISTER_SIZE' = int32(0x92330027)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_RUNTIME' = int32(0x92330034)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_SESSIONID' = int32(0x800405A2)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_INVALID_WORKING_DIRECTORY' = int32(0x80040136)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_IOREDIR_BADFILE' = int32(0x8004020E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_IOREDIR_BADSYNTAX' = int32(0x8004020F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_JIT_APPID_NOT_REGISTERED' = int32(0x800400B4)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_JIT_INVALID_PID' = int32(0x800400B1)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_JIT_RUNTIME_VERSION_UNSUPPORTED' = int32(0x800400B6)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_JIT_VSJITDEBUGGER_NOT_REGISTERED' = int32(0x800400B3)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_JMC_CANNOT_SET_STATUS' = int32(0x80040145)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED' = int32(0x80040229)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_DEBUGGING_NOT_POSSIBLE' = int32(0x80040006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_ELEVATION_REQUIRED' = int32(0x80040138)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_FAILED_WITH_ELEVATION' = int32(0x80040137)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_KERNEL_DEBUGGER_ENABLED' = int32(0x80040007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_KERNEL_DEBUGGER_PRESENT' = int32(0x80040008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED' = int32(0x80040228)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_NO_INTEROP' = int32(0x80040005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LAUNCH_SXS_ERROR' = int32(0x8004001A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_COMPLETE_ALREADY_SENT' = int32(0x9233005D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_COMPLETE_DEFERRAL_NOT_FOUND' = int32(0x9233005E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_DIA' = int32(0x80040223)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_DM' = int32(0x8004020C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_DM_INCORRECT_VERSION' = int32(0x80040221)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_EE' = int32(0x8004020B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_EM' = int32(0x8004020A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_MD' = int32(0x8004020D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_SH' = int32(0x80040209)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_TL' = int32(0x80040208)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_DLL_TL_INCORRECT_VERSION' = int32(0x80040220)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_SCRIPT_AGENT_LOCAL_FAILURE' = int32(0x80040C14)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_SCRIPT_AGENT_REMOTE_FAILURE' = int32(0x80040C16)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_VSDEBUGENG_CONFIG_ERROR' = int32(0x80040C12)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_VSDEBUGENG_FAILED' = int32(0x80040C10)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOAD_VSDEBUGENG_IMPORTS_FAILED' = int32(0x80040C11)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_LOGON_FAILURE_ON_CALLBACK' = int32(0x80040756)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MANAGED_FEATURE_NOTSUPPORTED' = int32(0x80040BAD)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MANAGED_HEAP_ENUMERATION_PARTIAL' = int32(0x92330065)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MANAGED_HEAP_ENUMERATION_TARGET_NOT_STOPPED' = int32(0x92330061)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MANAGED_HEAP_NOT_ENUMERABLE' = int32(0x92330056)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MARSHALLING_SIZE_TOO_LARGE' = int32(0x9233005F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MEMORY_NOTSUPPORTED' = int32(0x80040040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MINIDUMP_READ_WIN9X' = int32(0x8004021D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MSENC_INSTALL_ERROR' = int32(0x80040D19)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_MSHTML_SCRIPT_DEBUGGING_DISABLED' = int32(0x8004000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NOT_SUPPORTED_INTEROP' = int32(0x9233004C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NO_ATTACH_WHILE_DDD' = int32(0x80040A00)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NO_CHECKSUM' = int32(0x92330025)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NO_CODE_CONTEXT' = int32(0x80040801)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NO_FRAME' = int32(0x9233004B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_NO_SESSION_AVAILABLE' = int32(0x800405A6)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OBJECT_OUT_OF_SYNC' = int32(0x80040D03)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OPERATION_REQUIRES_ELEVATION' = int32(0x80040038)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OPERATION_UNAVAILABLE_CLR_NC' = int32(0x92330058)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OPERATION_UNAVAILABLE_SCRIPT_INTEROP' = int32(0x92330057)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OS_PERSONAL' = int32(0x80040C00)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_OTHER_USERS_SESSION' = int32(0x800405A8)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PORTSUPPLIER_NO_PORT' = int32(0x80040080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PORT_NO_REQUEST' = int32(0x80040090)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_ALREADY_CONTINUED' = int32(0x80040D04)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_DEBUGGER_IS_DEBUGGEE' = int32(0x80040071)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_DESTROYED' = int32(0x80040070)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_OBJECT_ACCESS_DENIED' = int32(0x80040035)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_TOKEN_ACCESS_DENIED' = int32(0x80040036)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS' = int32(0x80040037)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROGRAM_DESTROY_PENDING' = int32(0x80040B01)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROGRAM_IN_RUNMODE' = int32(0x80040914)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PROPERTY_NOT_VALID' = int32(0x80040511)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_PSEUDOREMOTE_NO_LOCALHOST_TCPIP_CONNECTION' = int32(0x8004076C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REFERENCE_NOT_VALID' = int32(0x80040501)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REGISTER_NOT_FOUND' = int32(0x92330028)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REGISTER_READONLY' = int32(0x92330029)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REG_NOT_TOP_STACK' = int32(0x92330030)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_ATTACH_REQUIRES_ELEVATION' = int32(0x8004013B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_AUTHENTICATION_ERROR' = int32(0x92330017)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_BADIPADDRESS' = int32(0x80040203)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_BADVERSION' = int32(0x80040210)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_BAD_CLR_VERSION' = int32(0x80040212)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_BAD_MSDBG2' = int32(0x8004075F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_CONNECT_USER_CANCELED' = int32(0x80040758)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_CREDENTIALS_PROHIBITED' = int32(0x80040759)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_DEBUGGING_UNSUPPORTED' = int32(0x8004075E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_DISCONNECT' = int32(0x80040403)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_IDE_TOO_OLD' = int32(0x80040D1B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_INVALID_PROXY_SERVER_NAME' = int32(0x80040767)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_LAUNCH_ELEVATION_REQUIRED' = int32(0x8004013C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_MACHINEDOWN' = int32(0x80040204)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_MACHINEUNSPECIFIED' = int32(0x80040205)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_MSVSMON_TOO_OLD' = int32(0x80040D1A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_NOMSVCMON' = int32(0x80040202)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_NOMSVCMON_PIPE' = int32(0x80040222)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_NOUSERMSVCMON' = int32(0x80040217)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_NO_CONNECTION' = int32(0x80040766)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_PACKET_TOO_BIG' = int32(0x80040761)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED' = int32(0x8004013A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_PROGRAM_PROVIDERS_UNSUPPORTED' = int32(0x80040769)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_REDIRECTION_UNSUPPORTED' = int32(0x80040135)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_REJECTED_NO_AUTH_REQUEST' = int32(0x8004076A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_REJECTED_WIN_AUTH_REQUEST' = int32(0x8004076B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_ACCESS_DENIED' = int32(0x80040021)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_CLOSED' = int32(0x80040010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_DOES_NOT_EXIST' = int32(0x80040020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_INVALID_NAME' = int32(0x80040026)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST' = int32(0x80040022)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_SERVER_UNAVAILABLE' = int32(0x80040757)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_UNSUPPORTED_OPERATION_ON_PLATFORM' = int32(0x80040C02)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_VERSION' = int32(0x80040D0F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_WEAK_CONNECTION' = int32(0x80040768)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_WWS_INSTALL_REQUIRES_ADMIN' = int32(0x8004076E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_REMOTE_WWS_NOT_INSTALLED' = int32(0x8004076D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_RPC_REQUIRES_AUTHENTICATION' = int32(0x80040755)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_ASYNC_FRAME_EE_UNAVAILABLE' = int32(0x9233005B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_CLR_EE_DISABLED' = int32(0x800405B0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_DEBUGGING_DISABLED_WWAHOST_ATTACH_FAILED' = int32(0x92330040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_FILE_DIFFERENT_CONTENT' = int32(0x9233004A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_PDM_NOT_REGISTERED' = int32(0x8004000C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SCRIPT_SPAN_MAPPING_FAILED' = int32(0x92330037)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SERVER_UNAVAILABLE_ON_CALLBACK' = int32(0x800405A3)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SESSION_TERMINATE_DETACH_FAILED' = int32(0x800400C2)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SESSION_TERMINATE_FAILED' = int32(0x800400C3)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SETVALUEASREFERENCE_NOTSUPPORTED' = int32(0x80040523)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SETVALUE_VALUE_CANNOT_BE_SET' = int32(0x80040521)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SETVALUE_VALUE_IS_READONLY' = int32(0x80040522)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED' = int32(0x8004002D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST' = int32(0x80040C01)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQLLE_ACCESSDENIED' = int32(0x80040A01)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT' = int32(0x80040A04)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER' = int32(0x80040A03)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_EXECUTED_BUT_NOT_DEBUGGED' = int32(0x80040A05)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_REGISTER_FAILED' = int32(0x80040A08)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_SP_ENABLE_PERMISSION_DENIED' = int32(0x80040A02)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SQL_VDT_INIT_RETURNED_SQL_ERROR' = int32(0x80040A06)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_STEP_BP_SET_FAILED' = int32(0x8004021F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_STEP_WIN9xSYSCODE = int32(0x80040218)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_STOPPING_EVENT_REJECTED' = int32(0x92330009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_STRING_TOO_LONG' = int32(0x92330031)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SYMBOLS_NOT_LOADED' = int32(0x92330000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SYMBOLS_STRIPPED' = int32(0x92330001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_SYMBOL_LOCATOR_INSTALL_ERROR' = int32(0x80040D10)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TARGET_ALREADY_STOPPED' = int32(0x9233000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TARGET_FILE_MISMATCH' = int32(0x80040101)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TARGET_NOT_STOPPED' = int32(0x9233000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TERMINATE_FORBIDDEN' = int32(0x80040072)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TEXT_SPAN_NOT_LOADED' = int32(0x92330036)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_THREAD_DESTROYED' = int32(0x80040075)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_THREAD_NOT_FOUND' = int32(0x80040D01)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_TOO_MANY_PROCESSES' = int32(0x8004000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK' = int32(0x800405A5)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNKNOWN_CPU_INSTRUCTION' = int32(0x92330033)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNMARSHALLABLE_VARIANT' = int32(0x92330013)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNMARSHAL_CALLBACK_FAILED' = int32(0x80040752)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNMARSHAL_SERVER_FAILED' = int32(0x80040751)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNSUPPORTED_BINARY' = int32(0x80040215)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNSUPPORTED_CLR_V1' = int32(0x80040763)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_UNSUPPORTED_FUTURE_CLR_VERSION' = int32(0x80040762)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_USER_LEVEL_ACCESS_CONTROL_REQUIRED' = int32(0x800405A9)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_VARIABLE_OPTIMIZED_AWAY' = int32(0x92330035)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_VSDEBUGENG_DEPLOYMENT_ERROR' = int32(0x92330014)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_VSDEBUGENG_RESOURCE_LOAD_FAILURE' = int32(0x92330012)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_VSDEBUGLAUNCHNOTIFY_NOT_INSTALLED' = int32(0x80040C18)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WEBDBG_DEBUG_VERB_BLOCKED' = int32(0x80040121)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WEBSERVICES_LOAD_FAILURE' = int32(0x92330015)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WIN8_TOO_OLD' = int32(0x80040C1C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WINAUTH_CONNECT_NOT_SUPPORTED' = int32(0x8004002F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WINDOWS_GRAPHICAL_SHELL_UNINSTALLED_ERROR' = int32(0x80040D07)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WINDOWS_REG_ERROR' = int32(0x92330048)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WLDP_NOT_FOUND' = int32(0x80040D16)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WORKGROUP_REMOTE_LOGON_FAILURE' = int32(0x8004002E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WRONG_COMPONENT' = int32(0x9233000E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WRONG_METHOD_VERSION' = int32(0x9233000F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WRONG_THREAD' = int32(0x9233000C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_WRONG_TIME' = int32(0x9233000D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_ALREADY_INITIALIZED' = int32(0x8EDE0002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_BAD_CONFIG' = int32(0x8EDE0006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_BAD_QUERY_INTERFACE' = int32(0x8EDE0004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_CALL_EXCEPTION_THROWN' = int32(0x8EDE0025)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_CLIENT_ONLY_METHOD' = int32(0x8EDE0021)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_COMPLETION_ROUTINE_RELEASED' = int32(0x8EDE000C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_COMPONENTID_NOT_FOUND' = int32(0x8EDE000E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_COMPONENT_DLL_NOT_FOUND' = int32(0x8EDE0023)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_COMPONENT_LOAD_FAILURE' = int32(0x8EDE0000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_CREATOR_REQUIRED' = int32(0x8EDE0009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_DATA_ITEM_ALREADY_EXISTS' = int32(0x8EDE0017)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_DATA_ITEM_NOT_FOUND' = int32(0x8EDE0018)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_DURING_CREATE_EVENT_REQUIRED' = int32(0x8EDE0008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_INCOMPATIBLE_PROTOCOL' = int32(0x8EDE0013)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_MANAGED_DISPATCHER_CONNECT_FAILURE' = int32(0x8EDE0007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_MANAGED_DISPATCHER_SIGNATURE_ERROR' = int32(0x8EDE0020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_MAX_PACKET_EXCEEDED' = int32(0x8EDE0014)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_METHOD_NOT_REMOTED' = int32(0x8EDE0010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_NOT_INITIALIZED' = int32(0x8EDE0001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_NULL_OUT_PARAM' = int32(0x8EDE0019)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_OBJECT_ALREADY_EXISTS' = int32(0x8EDE0015)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_OBJECT_NOT_FOUND' = int32(0x8EDE0016)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_REMOTE_CLOSED' = int32(0x8EDE0012)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_REMOTE_DISCONNECTED' = int32(0x8EDE0011)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_REMOTE_NEW_VER_REQUIRED' = int32(0x8EDE0024)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_SERVER_ONLY_METHOD' = int32(0x8EDE0022)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_STA_THREADS_NOT_SUPPORTED' = int32(0x8EDE0026)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_THREAD_ABORTED' = int32(0x8EDE0003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_UNAVAILABLE_OBJECT' = int32(0x8EDE0005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_WORKLIST_ALREADY_STARTED' = int32(0x8EDE000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_WORK_LIST_COMPLETE' = int32(0x8EDE000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_WRONG_CONNECTION_OBJECT' = int32(0x8EDE000F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 'E_XAPI_WRONG_THREAD' = int32(0x8EDE000D)
	}
	.class public sealed DkmFuncEvalMode
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode EvaluatingWithStoppingEvents = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode EvaluatingWithoutStoppingEvents = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode NotEvaluating = int32(0x00000000)
	}
	.class public sealed DkmGetCurrentCPUAddressAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64[] get_InstructionPointers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint64[] InstructionPointers)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult::get_ErrorCode()
		}
		.property instance uint64[] InstructionPointers()
		{
			.get instance uint64[] Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult::get_InstructionPointers()
		}
	}
	.class public sealed DkmGetInstructionAddressAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_AddressObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_FirstAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject, bool FirstAddress)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_AddressObject()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_ErrorCode()
		}
		.property instance bool FirstAddress()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_FirstAddress()
		}
	}
	.class public abstract sealed DkmGlobalSettings
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			class [System.Globalization]System.Globalization.CultureInfo get_Culture()
		{
			ret
		}
		.method public static hidebysig specialname 
			string get_RegistryRoot()
		{
			ret
		}
		.method public static hidebysig specialname 
			int32 get_RootProcessId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property class [System.Globalization]System.Globalization.CultureInfo Culture()
		{
			.get class [System.Globalization]System.Globalization.CultureInfo Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_Culture()
		}
		.property string RegistryRoot()
		{
			.get string Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_RegistryRoot()
		}
		.property int32 RootProcessId()
		{
			.get int32 Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_RootProcessId()
		}
	}
	.class public abstract DkmInstructionAddress
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6e2a219f-3a14-3410-e755-d00ce1f2f5e6') }
		.class nested public sealed CPUInstruction
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(uint64 InstructionPointer)
			{
				ret
			}
			.field public initonly uint64 InstructionPointer
		}
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag ClrAddress = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag CustomAddress = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag NativeAddress = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag ScriptAddress = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag UnknownAddress = int32(0x00000004)
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction get_CPUInstructionPart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol GetSymbol()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 CompareTo(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsInSameFunction(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64[] GetCurrentCPUAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetCurrentCPUAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void IsUserCode(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstructionPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_CPUInstructionPart()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_ModuleInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_RuntimeInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_TagValue()
		}
	}
	.class public DkmLanguageRegistrySetting
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('e0271ff0-7cb5-6f49-e948-a82864f5744b') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting Create(string Name, object Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting::get_Name()
		}
		.property instance object Value()
		{
			.get instance object Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting::get_Value()
		}
	}
	.class public sealed DkmModuleFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Editable = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags FileBacked = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags FileResolved = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags MissingBinary = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Optimized = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Relocated = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Unoptimized = int32(0x00000020)
	}
	.class public abstract DkmModuleInstance
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('74857b6f-618d-66e3-149e-6cebf4c4123e') }
		.class nested public sealed MinidumpInfo
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(string OriginalPath)
			{
				ret
			}
			.field public initonly string OriginalPath
		}
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag ClrModuleInstance = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag ClrNcContainerModuleInstance = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag CustomModuleInstance = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag NativeModuleInstance = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo get_MinidumpInfoPart()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_TimeDateStamp()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion get_Version()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId get_SymbolFileId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout get_MemoryLayout()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_BaseAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_LoadOrder()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Size()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_LoadContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsDisabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetDisabled(bool IsDisabled)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetGPUDisassembly(uint64 Address, uint32 Count, bool IsForward, [out] bool& IsEnd)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetGPUDisassemblySize()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetNextGPUInstructionAddress(uint64 StartAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnSymbolsLoaded(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, bool IsReload)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetModule(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, bool IsReload)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FlagAsTransitionModule()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearTransitionModuleFlag()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsTransitionModule()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryLoadBinary()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryLoadSymbols()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetSymbolStatusMessage(bool ExcludeCommonErrors)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetSymbolLoadInformation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ReadSymbols()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBinaryLoaded(string Path)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsUserCode()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBinaryReloadOpportunity()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsSuppressed()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnModuleModified()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 BaseAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_BaseAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Connection()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Flags()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_FullName()
		}
		.property instance bool IsDisabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_IsDisabled()
		}
		.property instance string LoadContext()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_LoadContext()
		}
		.property instance uint32 LoadOrder()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_LoadOrder()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_MemoryLayout()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfoPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_MinidumpInfoPart()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Module()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_RuntimeInstance()
		}
		.property instance uint32 Size()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Size()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_SymbolFileId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_TagValue()
		}
		.property instance uint64 TimeDateStamp()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_TimeDateStamp()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_UniqueId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Version()
		}
	}
	.class public sealed DkmModuleMemoryLayout
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout DiskPE = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryPE = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout Unknown = int32(0x00000000)
	}
	.class public DkmModuleVersion
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c7094fad-97e0-e3eb-4337-60cbb394aa35') }
		.method public hidebysig specialname 
			instance string get_FileVersionString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CompanyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_FileVersionMS()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_FileVersionLS()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ProductVersionMS()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ProductVersionLS()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_VersionFlags()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmModuleVersion Create(string FileVersionString, string CompanyName, uint32 FileVersionMS, uint32 FileVersionLS, uint32 ProductVersionMS, uint32 ProductVersionLS, uint32 VersionFlags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string CompanyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_CompanyName()
		}
		.property instance uint32 FileVersionLS()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionLS()
		}
		.property instance uint32 FileVersionMS()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionMS()
		}
		.property instance string FileVersionString()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionString()
		}
		.property instance uint32 ProductVersionLS()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_ProductVersionLS()
		}
		.property instance uint32 ProductVersionMS()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_ProductVersionMS()
		}
		.property instance uint32 VersionFlags()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_VersionFlags()
		}
	}
	.class public DkmPerformanceCounters
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c00029d1-55bb-5536-c725-a7a2bcf07481') }
		.method public hidebysig specialname 
			instance uint32 get_StartStopCounter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_SystemTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_UserTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_KernelTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_RuntimeOverhead()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_OSOverhead()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_TotalOverhead()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Id()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Create(uint32 StartStopCounter, uint64 SystemTime, uint64 UserTime, uint64 KernelTime, uint64 RuntimeOverhead, uint64 OSOverhead, uint64 TotalOverhead, uint64 Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Id()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_Id()
		}
		.property instance uint64 KernelTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_KernelTime()
		}
		.property instance uint64 OSOverhead()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_OSOverhead()
		}
		.property instance uint64 RuntimeOverhead()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_RuntimeOverhead()
		}
		.property instance uint32 StartStopCounter()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_StartStopCounter()
		}
		.property instance uint64 SystemTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_SystemTime()
		}
		.property instance uint64 TotalOverhead()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_TotalOverhead()
		}
		.property instance uint64 UserTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_UserTime()
		}
	}
	.class public sealed DkmPerformanceCountersAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters get_Counters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Counters)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Counters()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult::get_Counters()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmProcess
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a6eaf62b-6db1-4f38-6359-46e9262d7a0a') }
		.class nested public sealed Live
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(int32 Id, int64 StartTime)
			{
				ret
			}
			.field public initonly int32 Id
			.field public initonly int64 StartTime
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live get_LivePart()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod get_StartMethod()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings get_EngineSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings get_DebugLaunchSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation get_SystemInformation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_BaseDebugMonitorId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsAppPackage()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsNativeDebuggingEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmProcess FindProcess(valuetype [System.Runtime]System.Guid UniqueId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmProcess[] GetProcesses()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmProcess Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, string Path, valuetype [System.Runtime]System.Guid UniqueId, valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation, valuetype [System.Runtime]System.Guid BaseDebugMonitorId, bool IsNativeDebuggingEnabled, class Microsoft.VisualStudio.Debugger.DkmProcess/Live Live, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmProcess Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, string Path, valuetype [System.Runtime]System.Guid UniqueId, valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation, valuetype [System.Runtime]System.Guid BaseDebugMonitorId, bool IsAppPackage, bool IsNativeDebuggingEnabled, class Microsoft.VisualStudio.Debugger.DkmProcess/Live Live, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmThread[] GetThreads()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmThread FindSystemThread(int32 Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnAsyncBreakComplete(valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus Status, class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint[] GetPendingBreakpoints()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance FindRuntimeInstance(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance[] GetRuntimeInstances()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'[] GetComputeKernels()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest[] GetRuntimeFunctionResolutionRequests()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnEntryPoint(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress CreateNativeInstructionAddress(uint64 InstructionPointer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance FindNativeModule(uint64 Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance FindNativeModule(uint64 Address, bool IncludeDisabledModules)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AsyncBreak(bool StopImmediately)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string LocateBinary(string ApplicationPath, string DumpPath, string OriginalPath, uint32 TimeDateStamp, uint32 ImageSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] Disassemble(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address, uint32 Count)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartAddress, int32 InstructionOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WriteDump(valuetype Microsoft.VisualStudio.Debugger.DkmDumpType DumpType, string Path, class Microsoft.VisualStudio.Debugger.DkmThread TargetThread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddExceptionTrigger(valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AddExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearExceptionTriggers(valuetype [System.Runtime]System.Guid SourceId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> SearchRuntimeFunctionTable(uint64 Address, [out] uint64& BaseAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' GetGPUBreakpointBehavior()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetGPUMemoryAccessWarning(int32 WarningCode, bool Enable)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearAllGPUMemoryAccessWarnings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, uint64 InstructionPointer, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnInstructionPatchInserted(uint64 Address, uint8[] OriginalMemory)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnInstructionPatchRemoved(uint64 Address, uint8[] OriginalMemory)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 ReadMemory(uint64 Address, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, void* Buffer, int32 Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 ReadMemory(uint64 Address, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, uint8[] Buffer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] ReadMemoryString(uint64 Address, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, uint16 CharacterSize, int32 MaxCharacters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WriteMemory(uint64 Address, uint8[] Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InvisibleWriteMemory(uint64 Address, uint8[] Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 GetHandleCount()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetRunningTime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRunningTime(uint64 RunningTime)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance GetNativeRuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Detach()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Terminate(int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void StoppingEventProcessingBegin(bool ForceQueue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction StoppingEventProcessingContinue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AbortingFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsStopped()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmThread[] GetSystemThreads()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 AllocateVirtualMemory(uint64 Address, int32 Size, int32 AllocationType, int32 PageProtection)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FreeVirtualMemory(uint64 Address, int32 Size, int32 FreeType)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void VolatileReadMemory(uint64 Address, void* Buffer, int32 Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void VolatileReadMemory(uint64 Address, uint8[] Buffer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void VolatileWriteMemory(uint64 Address, uint8[] Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnLoadComplete()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload(int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string TryLocateBinary(string ApplicationPath, string DumpPath, string OriginalPath, uint32 TimeDateStamp, uint32 ImageSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetDumpExePath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsLoadComplete()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation[] GetStowedExceptions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation GetNativeStowedException()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation GetManagedStowedException()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnHiddenEntryPoint(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void BeforeStopDebugging()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveExceptionTrigger(valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmRemoveExceptionTriggerAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void QueryPerformanceCounters(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid BaseDebugMonitorId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmProcess::get_BaseDebugMonitorId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmProcess::get_Connection()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.DkmProcess::get_DebugLaunchSettings()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.DkmProcess::get_EngineSettings()
		}
		.property instance bool IsAppPackage()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmProcess::get_IsAppPackage()
		}
		.property instance bool IsNativeDebuggingEnabled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmProcess::get_IsNativeDebuggingEnabled()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live LivePart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live Microsoft.VisualStudio.Debugger.DkmProcess::get_LivePart()
		}
		.property instance string Path()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmProcess::get_Path()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Microsoft.VisualStudio.Debugger.DkmProcess::get_StartMethod()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Microsoft.VisualStudio.Debugger.DkmProcess::get_SystemInformation()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmProcess::get_UniqueId()
		}
	}
	.class public DkmProcessExecutionCounters
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ed71c47f-dc09-2abb-d61b-b55a74bdb710') }
		.method public hidebysig specialname 
			instance uint64 get_QueryPerformanceCounterTime()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters Create(uint64 QueryPerformanceCounterTime)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 QueryPerformanceCounterTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters::get_QueryPerformanceCounterTime()
		}
	}
	.class public sealed DkmProcessorArchitecture
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname uint16 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture 'PROCESSOR_ARCHITECTURE_AMD64' = uint16(0x0009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture 'PROCESSOR_ARCHITECTURE_ARM' = uint16(0x0005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture 'PROCESSOR_ARCHITECTURE_INTEL' = uint16(0x0000)
	}
	.class public sealed DkmReadMemoryFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags AllowPartialRead = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags ExecutableOnly = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags ReadGPUPointer = int32(0x00000004)
	}
	.class public sealed DkmReadOnlyByteCollection
		extends class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>
	{
		.method public hidebysig specialname 
			instance native int get_ItemsPtr()
		{
			ret
		}
		.property instance native int ItemsPtr()
		{
			.get instance native int Microsoft.VisualStudio.Debugger.DkmReadOnlyByteCollection::get_ItemsPtr()
		}
	}
	.class public DkmRegistryTweak
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('cc23b95f-53fb-bc5a-454c-9345558fa0fe') }
		.method public hidebysig specialname 
			instance string get_ValueName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Data()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmRegistryTweak Create(string ValueName, uint32 Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Data()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.DkmRegistryTweak::get_Data()
		}
		.property instance string ValueName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmRegistryTweak::get_ValueName()
		}
	}
	.class public sealed DkmResolveCPUInstructionAddressAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_AddressObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_FirstAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject, bool FirstAddress)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_AddressObject()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_ErrorCode()
		}
		.property instance bool FirstAddress()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_FirstAddress()
		}
	}
	.class public sealed DkmRuntimeCapabilities
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities AllowStackCaching = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities PreventDetach = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities ProhibitsStoppingInNonUserCode = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities SupportsJustMyCode = int32(0x00000004)
	}
	.class public abstract sealed DkmRuntimeId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Native()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Clr()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Gpu()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScriptInterop()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrNativeCompilation()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_GpuInterop()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid ActiveScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ActiveScript()
		}
		.property valuetype [System.Runtime]System.Guid ActiveScriptInterop()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ActiveScriptInterop()
		}
		.property valuetype [System.Runtime]System.Guid Clr()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Clr()
		}
		.property valuetype [System.Runtime]System.Guid ClrNativeCompilation()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ClrNativeCompilation()
		}
		.property valuetype [System.Runtime]System.Guid Gpu()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Gpu()
		}
		.property valuetype [System.Runtime]System.Guid GpuInterop()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_GpuInterop()
		}
		.property valuetype [System.Runtime]System.Guid Native()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Native()
		}
	}
	.class public abstract DkmRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9b32a175-6e35-1ae5-1498-c93ab323e2c8') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag ClrRuntimeInstance = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag CustomRuntimeInstance = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag NativeRuntimeInstance = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag ScriptRuntimeInstance = int32(0x00000002)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId get_Id()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities get_Capabilities()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_ParentRuntime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode[] GetScriptDocumentTreeNodes()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] GetModuleInstances()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider[] GetTaskProviders()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ResolveCPUInstructionAddress(uint64 InstructionPointer, [out] bool& FirstAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ResolveCPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, uint64 InstructionPointer, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] FindModulesByName(string SearchKey)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRegisterValue(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackWalkFrame, int32 RegisterIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool OwnsCurrentExecutionLocation(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Step(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void StopStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AfterSteppingArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance NewControllingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnNewControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ControllingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool StepControlRequested(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TakeStepControl(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper, bool LeaveGuardsInPlace, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void NotifyStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThreadDisplayProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetThreadName(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThreadName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler[] GetManagedHeapSamplers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker[] GetManagedHeapWalkers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] GetCodePathsInRange(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame CorFrame, uint32 StartILOffset, uint32 EndILOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] Disassemble(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address, uint32 Count)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartAddress, int32 InstructionOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnLoadComplete()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Capabilities()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Connection()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Id()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_ParentRuntime()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Process()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_TagValue()
		}
	}
	.class public sequential sealed DkmRuntimeInstanceId
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('38ab90f5-dd83-b247-4d45-bd415c909b21') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [System.Runtime]System.Guid RuntimeType, uint64 InstanceId)
		{
			ret
		}
		.field public initonly valuetype [System.Runtime]System.Guid RuntimeType
		.field public initonly uint64 InstanceId
	}
	.class public sealed DkmSendLowerAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage get_ReplyMessage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmCustomMessage ReplyMessage)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage ReplyMessage()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult::get_ReplyMessage()
		}
	}
	.class public abstract sealed DkmSourceId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_AD7BreakpointId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_MSBreakpointManagerId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_NativeBaseDmRequest()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_AD7ExceptionSetting()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_AD7ExceptionBoundary()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_AD7Stepper()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ManagedDmSymbolsUpdateId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ManagedDmStepper()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_GpuDebugMonitorRequest()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_AD7DeploymentId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_BaseDMServicesId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_SteppingManagerStepper()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClientCppEE()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ServerCppEE()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid AD7BreakpointId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7BreakpointId()
		}
		.property valuetype [System.Runtime]System.Guid AD7DeploymentId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7DeploymentId()
		}
		.property valuetype [System.Runtime]System.Guid AD7ExceptionBoundary()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7ExceptionBoundary()
		}
		.property valuetype [System.Runtime]System.Guid AD7ExceptionSetting()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7ExceptionSetting()
		}
		.property valuetype [System.Runtime]System.Guid AD7Stepper()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7Stepper()
		}
		.property valuetype [System.Runtime]System.Guid BaseDMServicesId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_BaseDMServicesId()
		}
		.property valuetype [System.Runtime]System.Guid ClientCppEE()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ClientCppEE()
		}
		.property valuetype [System.Runtime]System.Guid GpuDebugMonitorRequest()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_GpuDebugMonitorRequest()
		}
		.property valuetype [System.Runtime]System.Guid MSBreakpointManagerId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_MSBreakpointManagerId()
		}
		.property valuetype [System.Runtime]System.Guid ManagedDmStepper()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ManagedDmStepper()
		}
		.property valuetype [System.Runtime]System.Guid ManagedDmSymbolsUpdateId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ManagedDmSymbolsUpdateId()
		}
		.property valuetype [System.Runtime]System.Guid NativeBaseDmRequest()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_NativeBaseDmRequest()
		}
		.property valuetype [System.Runtime]System.Guid ServerCppEE()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ServerCppEE()
		}
		.property valuetype [System.Runtime]System.Guid SteppingManagerStepper()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_SteppingManagerStepper()
		}
	}
	.class public sealed DkmStoppingEventProcessingNextAction
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction EnterStoppedState = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ForceQueueModeComplete = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ResumeTarget = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ResumeUnclaimedThreads = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction SlipTarget = int32(0x00000001)
	}
	.class public DkmThread
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ac420a23-b721-57c1-375d-a5053f90f94c') }
		.class nested public sealed System
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(int32 Id)
			{
				ret
			}
			.field public initonly int32 Id
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread/System get_SystemPart()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_NativeStartAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_TebAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsMainThread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation get_SystemInformation()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmThread Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, uint64 NativeStartAddress, uint64 TebAddress, bool IsMainThread, class Microsoft.VisualStudio.Debugger.DkmThread/System System, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper[] GetSteppers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnEmbeddedBreakpointHit(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, bool ShowAsException)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void BeginFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RaiseExecutionControlException(uint32 ExceptionCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] GetExtendedRegisters()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetExtendedRegisterValue(int32 RegisterIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters CreateFrameRegisters(class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] UnwoundRegisters, uint32 VFrame)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetManagedThreadProperties([out] int32& ManagedThreadId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetManagedThreadProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame GetTopStackWalkFrame(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetCurrentFrameInfo([out] uint64& ReturnAddress, [out] uint64& FrameBase, [out] uint64& VFrame)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame GetTopStackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters GetCurrentRegisters(class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] PseudoRegisters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters CreateRegistersObject(uint8[] ThreadContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] PseudoRegisters, class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] ExtendedRegisters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool OnContinueExecution()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool OnBeginFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EndFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsStoppingEventQueued(bool IgnoreAsyncBreakEvents)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode GetCurrentFuncEvalMode()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetContext(uint8[] Context)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetContext(int32 ContextFlags, void* Context, int32 ContextSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetContext(int32 ContextFlags, uint8[] Context)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetCurrentLocation(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange GetStackAddressRange()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 Suspend(bool InternalSuspension)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 Resume(bool InternalSuspension)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 GetSuspensionCount(bool ShowInternal)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 GetDebuggerSuspensionCount()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetTlsValue(int32 TlsIndex)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetTlsValue(int32 TlsIndex, uint64 Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetVolatileProperties([out] int32& Priority, [out] uint64& AffinityMask)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetVolatileProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags GetVolatileFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetVolatileFlags(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnInterceptExceptionCompleted(uint64 Cookie)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload(int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetThreadCurrentWinRtErrorInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnThreadNameChange()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmThread::get_Connection()
		}
		.property instance bool IsMainThread()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmThread::get_IsMainThread()
		}
		.property instance uint64 NativeStartAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmThread::get_NativeStartAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmThread::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Microsoft.VisualStudio.Debugger.DkmThread::get_SystemInformation()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread/System SystemPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread/System Microsoft.VisualStudio.Debugger.DkmThread::get_SystemPart()
		}
		.property instance uint64 TebAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmThread::get_TebAddress()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DkmThread::get_UniqueId()
		}
	}
	.class public DkmUnknownInstructionAddress
		extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a36f3140-bcdd-fcdf-a363-869fbaea9906') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmUnknownInstructionAddress Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmUserMessage
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1a166c7c-4ae6-0992-82e2-c75555ed8055') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind get_OutputKind()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MessageText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags get_MessageBoxFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_TimeStamp()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmUserMessage Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind OutputKind, string MessageText, valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MessageBoxFlags, int32 ErrorCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmUserMessage Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind OutputKind, string MessageText, valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MessageBoxFlags, int32 ErrorCode, uint64 TimeStamp)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Post()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 DisplayPrompt()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DisplayPrompt(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmUserMessage::get_Connection()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DkmUserMessage::get_ErrorCode()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MessageBoxFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags Microsoft.VisualStudio.Debugger.DkmUserMessage::get_MessageBoxFlags()
		}
		.property instance string MessageText()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DkmUserMessage::get_MessageText()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind OutputKind()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind Microsoft.VisualStudio.Debugger.DkmUserMessage::get_OutputKind()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmUserMessage::get_Process()
		}
		.property instance uint64 TimeStamp()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DkmUserMessage::get_TimeStamp()
		}
	}
	.class public sealed DkmUserMessageOutputKind
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind ExceptionOutputWindowMessage = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind FatalError = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind FatalOperationAbortOutputMessage = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind JustMyCodePrompt = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind MessageBox = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind NewDebuggerCompatibilityWarning = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind ProgramOutput = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind StepFilterOutputWindowMessage = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind StepFilterPrompt = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind UnfilteredOutputWindowMessage = int32(0x00000000)
	}
	.class public sealed DkmWorkList
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DkmWorkList Create(class Microsoft.VisualStudio.Debugger.DkmWorkListCompletionRoutine CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig specialname 
			bool get_IsCurrentInstanceCanceled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCanceled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void BeginExecution()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Execute()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Cancel()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance bool IsCanceled()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.DkmWorkList::get_IsCanceled()
		}
		.property bool IsCurrentInstanceCanceled()
		{
			.get bool Microsoft.VisualStudio.Debugger.DkmWorkList::get_IsCurrentInstanceCanceled()
		}
	}
	.class public sealed DkmWorkListCompletionRoutine
		extends [System.Runtime]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(class Microsoft.VisualStudio.Debugger.DkmWorkList workList)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [System.Runtime]System.IAsyncResult BeginInvoke(class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class [System.Runtime]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [System.Runtime]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public explicit sealed DkmXmm128
		extends [System.Runtime]System.ValueType
	{
		.method public hidebysig specialname 
			instance void .ctor(uint64 arg0, uint64 arg1)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint32 arg0, uint32 arg1, uint32 arg2, uint32 arg3)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float64 arg0, float64 arg1)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(float32 arg0, float32 arg1, float32 arg2, float32 arg3)
		{
			ret
		}
		.field [0] public initonly uint64 u64v0
		.field [8] public initonly uint64 u64v1
		.field [0] public initonly uint32 u32v0
		.field [4] public initonly uint32 u32v1
		.field [8] public initonly uint32 u32v2
		.field [12] public initonly uint32 u32v3
		.field [0] public initonly float64 Double0
		.field [8] public initonly float64 Double1
		.field [0] public initonly float32 Single0
		.field [4] public initonly float32 Single1
		.field [8] public initonly float32 Single2
		.field [12] public initonly float32 Single3
	}
	.class public sealed GCReferenceType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname uint32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleAll = uint32(0x7FFFFFFF)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrong = uint32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongAsyncPinned = uint32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongDependent = uint32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongOnly = uint32(0x000001E3)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongPinning = uint32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongRefCount = uint32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongSizedByref = uint32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakLong = uint32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakOnly = uint32(0x0000001C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakRefCount = uint32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakShort = uint32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorReferenceFinalizer = uint32(0x04C4B402)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorReferenceStack = uint32(0x80000001)
	}
	.class public sealed MessageBoxFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ABORTRETRYIGNORE' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_APPLMODAL' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_CANCELTRYCONTINUE' = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFAULT_DESKTOP_ONLY' = int32(0x00020000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFBUTTON1' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFBUTTON2' = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFBUTTON3' = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFBUTTON4' = int32(0x00000300)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_DEFMASK' = int32(0x00000F00)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_HELP' = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONASTERISK' = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONERROR' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONEXCLAMATION' = int32(0x00000030)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONHAND' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONINFORMATION' = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONMASK' = int32(0x000000F0)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONQUESTION' = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONSTOP' = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_ICONWARNING' = int32(0x00000030)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_MISCMASK' = int32(0x0000C000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_MODEMASK' = int32(0x00003000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_NOFOCUS' = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_OK' = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_OKCANCEL' = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_RETRYCANCEL' = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_RIGHT' = int32(0x00080000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_RTLREADING' = int32(0x00100000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_SERVICE_NOTIFICATION' = int32(0x00200000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_SERVICE_NOTIFICATION_NT3X' = int32(0x00040000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_SETFOREGROUND' = int32(0x00010000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_SYSTEMMODAL' = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_TASKMODAL' = int32(0x00002000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_TOPMOST' = int32(0x00040000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_TYPEMASK' = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_USERICON' = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_YESNO' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 'MB_YESNOCANCEL' = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags None = int32(0x00000000)
	}
	.class public sealed MinidumpFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterMemory = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterModulePaths = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterTriage = int32(0x00100000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpIgnoreInaccessibleMemory = int32(0x00020000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpNormal = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpScanMemory = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpValidTypeFlags = int32(0x001FFFFF)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithCodeSegs = int32(0x00002000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithDataSegs = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullAuxiliaryState = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullMemory = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullMemoryInfo = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithHandleData = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithIndirectlyReferencedMemory = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithModuleHeaders = int32(0x00080000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithPrivateReadWriteMemory = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithPrivateWriteCopyMemory = int32(0x00010000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithProcessThreadData = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithThreadInfo = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithTokenInformation = int32(0x00040000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithUnloadedModules = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithoutAuxiliaryState = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithoutOptionalData = int32(0x00000400)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Breakpoints
{
	.class public DkmBoundBreakpoint
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('91c8952c-4e18-00f7-ac71-8d0d38694e4c') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint get_PendingBreakpoint()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint get_Target()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_SourcePosition()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint Create(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint PendingBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Target, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnHit(class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool HasException)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsEnabled()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetHitCountValue(int32 NewValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetHitCountValue(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_CompilerId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint PendingBreakpoint()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_PendingBreakpoint()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_SourceId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_SourcePosition()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Target()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_Target()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_UniqueId()
		}
	}
	.class public DkmBreakpointCondition
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6f47e50b-85ef-ba6d-e36a-8121fa195bb2') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator get_Operator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags get_CompilationFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Timeout()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Create(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator Operator, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags, string Text, uint32 Timeout)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_CompilationFlags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_CompilerId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator Operator()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Operator()
		}
		.property instance string Text()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Text()
		}
		.property instance uint32 Timeout()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Timeout()
		}
	}
	.class public sealed DkmBreakpointConditionOperator
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator BreakWhenChanged = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator BreakWhenTrue = int32(0x00000000)
	}
	.class public DkmBreakpointFileUpdateNotification
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2dde565b-c382-7dbb-2841-647a7322b64e') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_FilePaths()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FilePaths)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Send(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FilePaths()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification::get_FilePaths()
		}
	}
	.class public DkmBreakpointHitCountCondition
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2a0d19d5-b8ad-6fbe-5dec-a918f083ca4b') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator get_Operator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Operand()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Create(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Operator, int32 Operand)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Operand()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition::get_Operand()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Operator()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition::get_Operator()
		}
	}
	.class public sealed DkmBreakpointHitCountConditionOperator
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Equal = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator EqualOrGreater = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Modulo = int32(0x00000002)
	}
	.class public sealed DkmBreakpointMessageLevel
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel HighestError = int32(0x00000011)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel LowError = int32(0x0000000F)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel StandardError = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel1 = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel10 = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel11 = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel12 = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel13 = int32(0x0000000C)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel14 = int32(0x0000000D)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel15 = int32(0x0000000E)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel2 = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel3 = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel4 = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel5 = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel6 = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel7 = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel8 = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel9 = int32(0x00000008)
	}
	.class public sealed DkmBreakpointUnboundReason
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason CodeUnload = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason Rebind = int32(0x00000001)
	}
	.class public sequential sealed DkmClearRuntimeBreakpointConditionsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmClearRuntimeBreakpointHitCountConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CurrentHitCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 CurrentHitCount)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 CurrentHitCount()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmDataAccessStopMask
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Execute = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask ReadWrite = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Write = int32(0x00000001)
	}
	.class public sequential sealed DkmDisableBoundBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmDisablePendingBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmDisableRuntimeBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmEnableBoundBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmEnablePendingBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmEnableRuntimeBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmEnrollPendingBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmEvaluateConditionAndSelectThreadAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_ConditionMetThread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmThread ConditionMetThread)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread ConditionMetThread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult::get_ConditionMetThread()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmEvaluationBreakpointCondition
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d838eb1d-9ec7-751c-1896-5057bf597376') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint get_RuntimeBreakpoint()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition get_Source()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition Create(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint RuntimeBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Source, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Parse([out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Evaluate(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, [out] bool& Stop, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_Language()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint RuntimeBreakpoint()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_RuntimeBreakpoint()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Source()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_Source()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_UniqueId()
		}
	}
	.class public sequential sealed DkmGetBoundBreakpointHitCountValueAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CurrentHitCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 CurrentHitCount)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 CurrentHitCount()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult::get_CurrentHitCount()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmGetRuntimeBreakpointHitCountConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CurrentHitCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 CurrentHitCount)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 CurrentHitCount()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmPendingAddressBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5e4de51b-8d82-5d38-8041-3a42c18d3f47') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint Create(valuetype [System.Runtime]System.Guid SourceId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool IsBarrier, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint::get_InstructionAddress()
		}
	}
	.class public DkmPendingAddressNameBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('243712b0-a935-6c92-7fc4-6ffb461126ac') }
		.method public hidebysig specialname 
			instance string get_ModuleName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_AddressName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FunctionName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid SourceId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool IsBarrier, string ModuleName, string AddressName, string FunctionName, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string AddressName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_AddressName()
		}
		.property instance string FunctionName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_FunctionName()
		}
		.property instance string ModuleName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_ModuleName()
		}
	}
	.class public abstract DkmPendingBreakpoint
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c9e1ffa4-f943-14bc-5566-00a802dfc66f') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag AddressBreakpoint = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag AddressNameBreakpoint = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag DataBreakpoint = int32(0x00000004)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag FileLineBreakpoint = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag FunctionBreakpoint = int32(0x00000001)
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBarrier()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] GetBoundBreakpoints()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enroll(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBreakpointBound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] BoundBreakpoints)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBreakpointUnbound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] BoundBreakpoints, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason Reason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBreakpointMessage(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level, string Message)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_CompilerId()
		}
		.property instance bool IsBarrier()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_IsBarrier()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_SourceId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_TagValue()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_Thread()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_UniqueId()
		}
	}
	.class public DkmPendingDataBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('afd7a281-dbf3-946b-9464-8ca12287616b') }
		.method public hidebysig specialname 
			instance string get_DataElementLocation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Size()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid SourceId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool IsBarrier, string DataElementLocation, int32 Size, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DataElementLocation()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint::get_DataElementLocation()
		}
		.property instance int32 Size()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint::get_Size()
		}
	}
	.class public DkmPendingFileLineBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ea7b0aee-1cc5-a887-4dff-930fc23a6278') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid SourceId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool IsBarrier, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetCurrentSourcePosition()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetCurrentSourceText()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmPendingFunctionBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b463b9e3-5b9f-e0e4-f0e9-4f38c63ef443') }
		.method public hidebysig specialname 
			instance string get_ModuleName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FunctionName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_LineOffset()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid SourceId, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool IsBarrier, string ModuleName, string FunctionName, uint32 LineOffset, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string FunctionName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_FunctionName()
		}
		.property instance uint32 LineOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_LineOffset()
		}
		.property instance string ModuleName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_ModuleName()
		}
	}
	.class public sequential sealed DkmRequestBreakpointEventOnModifiedThreadAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult::get_ErrorCode()
		}
	}
	.class public abstract DkmRuntimeBreakpoint
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c4815219-c5fd-3e96-9b86-fd6a36eef464') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag InstructionBreakpoint = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag NativeDataBreakpoint = int32(0x00000001)
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCompiledConditionPending()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCompiledConditionPending(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearConditions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearConditions(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition, int32 HitCountValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition, int32 HitCountValue, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition, [out] int32& CurrentHitCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetHitCountConditionStatus([out] int32& CurrentHitCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetHitCountConditionStatus(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery GetCompiledCondition(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, [out] valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator& ConditionOperator)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBreakpointConditionFailed(string ErrorMessage)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.DkmThread ModifiedBreakThread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread ModifiedBreakThread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enable()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Test()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Test(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Disable()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnHit(class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool HasException)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmThread EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.DkmThread FirstStoppedThread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread FirstStoppedThread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnBreakpointConditionFailed(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' ErrorCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_SourceId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_TagValue()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_Thread()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_UniqueId()
		}
	}
	.class public DkmRuntimeHardwareDataBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3346103d-7c30-4ee9-c3dd-e8e7e9f66a5e') }
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask get_Access()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Size()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint64 Address, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Access, int32 Size, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Access()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Access()
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Address()
		}
		.property instance int32 Size()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Size()
		}
	}
	.class public DkmRuntimeInstructionBreakpoint
		extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4c0b1e65-9d9c-2a4b-9ea0-8b9ead27ca39') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsBarrier()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint Create(valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, bool IsBarrier, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCompiledCondition(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetCompiledCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryClearConditionOnTargetDevice()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TryClearConditionOnTargetDevice(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint::get_InstructionAddress()
		}
		.property instance bool IsBarrier()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint::get_IsBarrier()
		}
	}
	.class public sequential sealed DkmSetCompiledConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmSetCompiledConditionPendingAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmSetEvaluationConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string ErrorText)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult::get_ErrorCode()
		}
		.property instance string ErrorText()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult::get_ErrorText()
		}
	}
	.class public sequential sealed DkmSetPendingBreakpointConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmSetPendingBreakpointHitCountConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmSetRuntimeBreakpointHitCountConditionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmTestRuntimeBreakpointAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmTryClearConditionOnTargetDeviceAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmTryPushConditionToTargetDeviceAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult::get_ErrorCode()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.CallStack
{
	.class public DkmArmFrameRegisters
		extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('991eff54-4b89-fc8e-3d59-f6b8dae67265') }
		.method public hidebysig specialname 
			instance uint32 get_Pc()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Sp()
		{
			ret
		}
		.property instance uint32 Pc()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters::get_Pc()
		}
		.property instance uint32 Sp()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters::get_Sp()
		}
	}
	.class public DkmAsyncStackWalkContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('be372de0-27f8-fcb3-6a35-27128111cd17') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_TaskProviderId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_TaskIdentityStackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_InternalStackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult get_FrameObject()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask get_Task()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> get_ReturnStackFunctions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, valuetype [System.Runtime]System.Guid TaskProviderId, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame TaskIdentityStackFrame, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame InternalStackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult FrameObject, class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> ReturnStackFunctions, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTaskCreationStack(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetAsyncCallStack(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult FrameObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_FrameObject()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame InternalStackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_InternalStackFrame()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> ReturnStackFunctions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_ReturnStackFunctions()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task()
		{
			.get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_Task()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame TaskIdentityStackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_TaskIdentityStackFrame()
		}
		.property instance valuetype [System.Runtime]System.Guid TaskProviderId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_TaskProviderId()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_UniqueId()
		}
	}
	.class public DkmCallStackFilterList
		extends [System.Runtime]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] FilterNextFrame(int32 ImplementationIndex, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext StackContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Input)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList::get_Count()
		}
	}
	.class public sealed DkmCallStackFilterOptions
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterHiddenFrames = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterNonuserCode = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions HideNonUserExceptionImplementationFrames = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions IncludeAsyncFrames = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions ShowTopNonUserBlock = int32(0x00000008)
	}
	.class public sequential sealed DkmFrameFormatOptions
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b65c8b37-5df0-a9ca-4492-eda38962e5b0') }
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions FrameNameFormat, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags, uint32 Timeout, uint32 Radix)
		{
			ret
		}
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions FrameNameFormat
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags
		.field public initonly uint32 Timeout
		.field public initonly uint32 Radix
	}
	.class public sealed DkmFrameNameFormatOptions
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ByteOffsets = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions DocumentPositionField = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions Lines = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions Module = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ReturnType = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ReturnTypeField = int32(0x00000010)
	}
	.class public abstract DkmFrameRegisters
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bb64ab72-8d4e-6997-9f89-79436f38133e') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag ArmRegisters = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag X64Registers = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag X86Registers = int32(0x00000001)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister> get_UnwoundRegisters()
		{
			ret
		}
		.method public hidebysig 
			instance uint64 GetInstructionPointer()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetStackPointer()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 GetRegisterValue(uint32 Id, void* Buffer, int32 Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 GetRegisterValue(uint32 Id, uint8[] Buffer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters::get_TagValue()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister> UnwoundRegisters()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister> Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters::get_UnwoundRegisters()
		}
	}
	.class public sealed DkmGetAsyncCallStackAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_Frames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult::get_Frames()
		}
	}
	.class public sealed DkmGetClrGenericParametersAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_ParameterTypeNames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string[] ParameterTypeNames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult::get_ErrorCode()
		}
		.property instance string[] ParameterTypeNames()
		{
			.get instance string[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult::get_ParameterTypeNames()
		}
	}
	.class public sealed DkmGetContinuationFramesFromTaskObjectAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] get_ContinuationFrames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ContinuationFrames()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetCurrentLocationAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LocationName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string LocationName)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult::get_ErrorCode()
		}
		.property instance string LocationName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult::get_LocationName()
		}
	}
	.class public sealed DkmGetManagedTaskContinuationFramesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] get_ContinuationFrames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult::get_ContinuationFrames()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetNextFramesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] get_Frames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] Frames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] Frames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult::get_Frames()
		}
	}
	.class public sealed DkmGetTaskContinuationFramesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_ContinuationFrames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] ContinuationFrames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] ContinuationFrames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult::get_ContinuationFrames()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetTaskCreationStackAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_CreationStack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] CreationStack)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] CreationStack()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult::get_CreationStack()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmHeuristicWalkFramesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_Frames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters get_NextRegisters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EndOfStack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters, bool EndOfStack)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance bool EndOfStack()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_EndOfStack()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_Frames()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_NextRegisters()
		}
	}
	.class public DkmMonitorStackWalkContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4ce2f85d-5b40-4a4c-5eba-79e9228e48b1') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ThreadContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 StackRangeSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 StackRangeSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult WalkNextFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_Thread()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_ThreadContext()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_UniqueId()
		}
	}
	.class public sealed DkmMonitorStackWalkResult
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d4dd7f13-e45e-1045-821a-45827846ead6') }
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus Status, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame FrameObject, uint64 NextStackPointer)
		{
			ret
		}
		.field public initonly class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame FrameObject
		.field public initonly class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters
		.field public initonly uint64 NextStackPointer
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus Status
	}
	.class public sealed DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_Frames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EndOfStack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash get_ActualStackHash()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext get_ActualStackWalkContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsCacheValid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames, bool EndOfStack, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash ActualStackHash, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext ActualStackWalkContext, bool IsCacheValid)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash ActualStackHash()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackHash()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext ActualStackWalkContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackWalkContext()
		}
		.property instance bool EndOfStack()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_EndOfStack()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_Frames()
		}
		.property instance bool IsCacheValid()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_IsCacheValid()
		}
	}
	.class public sealed DkmRuntimeWalkNextFramesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] get_Frames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_EndOfStack()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames, bool EndOfStack)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance bool EndOfStack()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_EndOfStack()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_Frames()
		}
	}
	.class public DkmStackContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('90f8ca28-617f-0b13-f421-fa6f1159973e') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions get_FilterOptions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions get_FormatOptions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ThreadContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext get_AsyncContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation get_Operation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Operation, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetNextFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, int32 RequestSize, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_AsyncContext()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_FilterOptions()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_FormatOptions()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_InspectionSession()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Operation()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_Operation()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_Thread()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_ThreadContext()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_UniqueId()
		}
	}
	.class public DkmStackFrame
		extends Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9e32fe11-196e-a0ec-b83c-0792427e91a2') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions get_Options()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FrameName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ReturnType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_SourcePosition()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Options, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, string FrameName, string ReturnType, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress> GetEffectiveAddresses(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_CompilerId()
		}
		.property instance string FrameName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_FrameName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Options()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_Options()
		}
		.property instance string ReturnType()
		{
			.get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_ReturnType()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_SourcePosition()
		}
	}
	.class public DkmStackHash
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('de840e2b-b1b5-f981-88aa-b9de5940c762') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange get_StackMemoryRange()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue get_RegisterHash()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue get_MemoryHash()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange StackMemoryRange, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue RegisterHash, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue MemoryHash)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue MemoryHash()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_MemoryHash()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue RegisterHash()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_RegisterHash()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange StackMemoryRange()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_StackMemoryRange()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_Thread()
		}
	}
	.class public sequential sealed DkmStackMemoryRange
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('25b9f321-da7e-7b52-ac8c-381d9cbbc176') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint64 StackBase, uint64 StackLimit)
		{
			ret
		}
		.field public initonly uint64 StackBase
		.field public initonly uint64 StackLimit
	}
	.class public DkmStackTraceContext
		extends Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b79ed48e-5eee-89c8-d677-883341894619') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> get_Frames()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Operation, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Frames, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Frames()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext::get_Frames()
		}
	}
	.class public DkmStackWalkContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('33ebb282-734b-c2f3-66cd-c42eb8a3d490') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ThreadContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext FindSymbolStackWalkContext(valuetype [System.Runtime]System.Guid SymbolProviderId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 RequestSize, uint64 EndStackPointer, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& NextRegisters, [out] bool& EndOfStack)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 RequestSize, uint64 EndStackPointer, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] RuntimeWalkNextFramesAndCheckCache(uint32 RequestSizeHintIfCacheIsValid, uint32 RequestSizeHintIfCacheIsInvalid, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash CachedHash, [out] bool& EndOfStack, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash& ActualStackHash, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext& ActualStackWalkContext, [out] bool& IsCacheValid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RuntimeWalkNextFramesAndCheckCache(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, uint32 RequestSizeHintIfCacheIsValid, uint32 RequestSizeHintIfCacheIsInvalid, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash CachedHash, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] RuntimeWalkNextFrames(uint32 RequestSizeHint, [out] bool& EndOfStack)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RuntimeWalkNextFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, uint32 RequestSizeHint, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_Thread()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_ThreadContext()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_UniqueId()
		}
	}
	.class public DkmStackWalkFrame
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('48b55030-ecac-2387-4e63-bfdc3c172598') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_FrameBase()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_FrameSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters get_Registers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> get_Annotations()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance get_AnnotatedModule()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext get_AsyncContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData get_Data()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, uint64 FrameBase, uint32 FrameSize, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags, string Description, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Annotations)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, uint64 FrameBase, uint32 FrameSize, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags, string Description, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Annotations, class Microsoft.VisualStudio.Debugger.DkmModuleInstance AnnotatedModule, class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnSetNextStatementCompleted(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InterceptCurrentException(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags InterceptAction, [out] uint64& Cookie)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetUnwindAddress([out] class Microsoft.VisualStudio.Debugger.DkmInstructionAddress& NewAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetNextStatement(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 CanSetNextStatement(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame Format(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Options)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol GetInstructionSymbol()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object GetInspectionInterface(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Session, valuetype [System.Runtime]System.Guid InterfaceID)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool ComputeUserStatus(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, [out] bool& ExceptionImplementation)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string[] GetClrGenericParameters()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetClrGenericParameters(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance AnnotatedModule()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_AnnotatedModule()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Annotations()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Annotations()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_AsyncContext()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Connection()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Data()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Description()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Flags()
		}
		.property instance uint64 FrameBase()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_FrameBase()
		}
		.property instance uint32 FrameSize()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_FrameSize()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_InstructionAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_ModuleInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Registers()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Thread()
		}
	}
	.class public DkmStackWalkFrameAnnotation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b3b38131-4bcb-4dba-a409-4bdba19e7323') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_Id()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation Create(valuetype [System.Runtime]System.Guid Id, uint64 Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid Id()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation::get_Id()
		}
		.property instance uint64 Value()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation::get_Value()
		}
	}
	.class public DkmStackWalkFrameData
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('15ea147e-b48b-2d5c-b52a-a2fee87713b2') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData::get_InspectionSession()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData::get_UniqueId()
		}
	}
	.class public sealed DkmStackWalkFrameFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags AsyncCallAnnotatedFrame = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags AsyncContinuationAnnotatedFrame = int32(0x00002000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags BinaryNotLoadedAnnotation = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags ExceptionUnwindTarget = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags FakeFrame = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags FuncEvalFrame = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Hidden = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags InlineOptimized = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags MaxFramesExceeded = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags NonUserExceptionImplementation = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags NonuserCode = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags ReturnStackFrame = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags SymbolsNotLoadedAnnotation = int32(0x00000400)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags TaskCreationStackFrame = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags TopFrame = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags UserStatusNotDetermined = int32(0x00000200)
	}
	.class public sealed DkmStackWalkOperation
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Async = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation StackTrace = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Standard = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation TaskContinuations = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation TaskCreation = int32(0x00000002)
	}
	.class public sealed DkmStackWalkStatus
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus EndOfStack = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus FrameFound = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus OutsideOfRuntime = int32(0x00000001)
	}
	.class public DkmSymbolStackWalkContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ca6905ca-dfde-bacc-31e6-fef0ad7fee7e') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext get_StackWalkContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SymbolProviderId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ThreadContext()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext StackWalkContext, valuetype [System.Runtime]System.Guid SymbolProviderId, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 StackRangeSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers, uint32 StackRangeSize, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame WalkNextFrame([out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& NextRegisters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext StackWalkContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_StackWalkContext()
		}
		.property instance valuetype [System.Runtime]System.Guid SymbolProviderId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_SymbolProviderId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_Thread()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ThreadContext()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_ThreadContext()
		}
	}
	.class public DkmUnwoundRegister
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('00abc6e8-c394-faef-ccf4-e3180221cc60') }
		.method public hidebysig specialname 
			instance int32 get_Identifier()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister Create(int32 Identifier, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Identifier()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister::get_Identifier()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister::get_Value()
		}
	}
	.class public DkmX64FrameRegisters
		extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('23cfb317-a11e-4213-b192-2da6a78f5a9a') }
		.method public hidebysig specialname 
			instance uint64 get_Rip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Rsp()
		{
			ret
		}
		.property instance uint64 Rip()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters::get_Rip()
		}
		.property instance uint64 Rsp()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters::get_Rsp()
		}
	}
	.class public DkmX86FrameRegisters
		extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6e768c76-d179-e13b-d745-e4bb2b687e16') }
		.method public hidebysig specialname 
			instance uint32 get_Eip()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Esp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_VFrame()
		{
			ret
		}
		.property instance uint32 Eip()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_Eip()
		}
		.property instance uint32 Esp()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_Esp()
		}
		.property instance uint32 VFrame()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_VFrame()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Clr
{
	.class public DkmClrAlias
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('04a0b24c-08ff-14c2-f131-9ec01bc1dae1') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind get_Kind()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_CustomTypeInfoPayloadTypeId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_CustomTypeInfoPayload()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias Create(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind Kind, string Name, string FullName, string Type, valuetype [System.Runtime]System.Guid CustomTypeInfoPayloadTypeId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> CustomTypeInfoPayload)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> CustomTypeInfoPayload()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_CustomTypeInfoPayload()
		}
		.property instance valuetype [System.Runtime]System.Guid CustomTypeInfoPayloadTypeId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_CustomTypeInfoPayloadTypeId()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_FullName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind Kind()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_Kind()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_Name()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias::get_Type()
		}
	}
	.class public sealed DkmClrAliasKind
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind Exception = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind ObjectId = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind ReturnValue = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind StowedException = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAliasKind Variable = int32(0x00000003)
	}
	.class public DkmClrAppDomain
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('337360db-44af-e459-1323-f16ddacf8b79') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Id()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain Create(int32 Id, class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, string Name, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance FindClrModuleInstance(valuetype [System.Runtime]System.Guid Mvid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance[] GetClrModuleInstances()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain GetCorObject()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance GetManagedRuntimeModule()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance native int GetMetaDataBytesPtr(string AssemblyName, [out] uint32& Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetMetaDataBytes(string AssemblyName, [out] valuetype [System.Runtime]System.Guid& Mvid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype [System.Runtime]System.Guid ResolveMvidByAssemblyName(string AssemblyName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Id()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Id()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_UniqueId()
		}
	}
	.class public sealed DkmClrAsyncMethodLocation
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation AtYield = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation BeforeYield = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation FirstStatement = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation LastStatement = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation NonAwaitStatement = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation None = int32(0x00000000)
	}
	.class public sequential sealed DkmClrAwaitExpressionInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('f22942ed-2e95-dba6-04f2-d42f3439af36') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 YieldOffset, uint32 ResumeOffset, uint32 ResumeMethodToken)
		{
			ret
		}
		.field public initonly uint32 YieldOffset
		.field public initonly uint32 ResumeOffset
		.field public initonly uint32 ResumeMethodToken
	}
	.class public DkmClrCaughtExceptionInformation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0550d914-26fe-bbe7-2d19-a432bbfea685') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_FrameStart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_FrameEnd()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_CatchHandlerILOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, int64 FrameStart, int64 FrameEnd, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, uint32 CatchHandlerILOffset, string Name)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnClrDebugMonitorExceptionCaught()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 CatchHandlerILOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_CatchHandlerILOffset()
		}
		.property instance int64 FrameEnd()
		{
			.get instance int64 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_FrameEnd()
		}
		.property instance int64 FrameStart()
		{
			.get instance int64 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_FrameStart()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_InstructionAddress()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Thread()
		}
	}
	.class public sealed DkmClrDebuggingServicesId
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId CoreSystemClr = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DesktopClrV2 = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DesktopClrV4 = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DevicesClr = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId OutOfProcessPipeline = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId SilverlightMac = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId SilverlightWindows = int32(0x00000003)
	}
	.class public DkmClrExceptionInformation
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('42d9ccf0-bf7f-1064-377a-4aa80ac85812') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, string Name, class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation::get_InstructionAddress()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation::get_Name()
		}
	}
	.class public sealed DkmClrHeaderStatus
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus ManagedOnlyBinary = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus MixedModeBinary = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus NGenBinary = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus NativeBinary = int32(0x00000000)
	}
	.class public DkmClrInstructionAddress
		extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ef7a9773-03a1-0aab-55bb-ee6b870e6246') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId get_MethodId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NativeOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ILOffset()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, uint32 NativeOffset, uint32 ILOffset, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags GetNonUserCodeMetadataFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry[] GetNativeCodeMap(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction GetCorFunction()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsUserCodeWithoutCheckingLineInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ILOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_ILOffset()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_MethodId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_ModuleInstance()
		}
		.property instance uint32 NativeOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_NativeOffset()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_RuntimeInstance()
		}
	}
	.class public DkmClrInstructionSymbol
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8e7388ae-e3e2-122c-5560-09f77dfaed9d') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId get_MethodId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ILOffset()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, uint32 ILOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation GetAsyncMethodLocation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetAsyncMethodLocation(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] GetAllAwaitExpressionInfoForStatement()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetAllAwaitExpressionInfoForStatement(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool GetAsyncMethodCatchHandlerILOffset([out] uint32& CatchHandlerILOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo GetNextAwaitExpressionInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetNextAwaitExpressionInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 GetAsyncKickoffMethod()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetAsyncKickoffMethod(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodLocalSymbols()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodLocalSymbols(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetMethodSymbolStoreAttribute(string AttributeName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string AttributeName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ILOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol::get_ILOffset()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol::get_MethodId()
		}
	}
	.class public DkmClrLocalConstant
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('be763bf4-5d54-ece8-8dcb-6f5ed4ae3506') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Name, object Value, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetSignature()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_AdditionalData()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Module()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Name()
		}
		.property instance object Value()
		{
			.get instance object Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Value()
		}
	}
	.class public DkmClrLocalVariable
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8ea1e31c-295d-3d63-f790-8f0eca9158c5') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Slot()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Name, uint32 Attributes, int32 Slot, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetSignature()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_AdditionalData()
		}
		.property instance uint32 Attributes()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Attributes()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Module()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Name()
		}
		.property instance int32 Slot()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Slot()
		}
	}
	.class public sequential sealed DkmClrMethodId
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('023de36c-0bd8-a8ac-b6d4-b1870aae7471') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 Token, uint32 Version)
		{
			ret
		}
		.field public initonly int32 Token
		.field public initonly uint32 Version
	}
	.class public sealed DkmClrMethodScopeData
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('97ed6d00-e7ea-5bd4-a627-de120e2e98ed') }
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILRange ILRange, int32 ParentScope, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable> LocalVariables, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant> LocalConstants, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Namespaces)
		{
			ret
		}
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILRange ILRange
		.field public initonly class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant> LocalConstants
		.field public initonly class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable> LocalVariables
		.field public initonly class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Namespaces
		.field public initonly int32 ParentScope
	}
	.class public sealed DkmClrModuleFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags Dynamic = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags FullyTrusted = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags RuntimeModule = int32(0x00000002)
	}
	.class public DkmClrModuleInstance
		extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('29da4ffa-6063-6232-46dd-64d14cf56ddf') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_Mvid()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags get_ClrFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain get_AppDomain()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ILImageSize()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Create(string Name, string FullName, uint64 TimeDateStamp, class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version, class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId, valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout, uint64 BaseAddress, uint32 LoadOrder, uint32 Size, string LoadContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid Mvid, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags ClrFlags, class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain, bool IsDisabled, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Create(string Name, string FullName, uint64 TimeDateStamp, class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version, class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId, valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout, uint64 BaseAddress, uint32 LoadOrder, uint32 Size, string LoadContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid Mvid, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags ClrFlags, class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain, uint32 ILImageSize, bool IsDisabled, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object GetMetaDataImport()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetMetaDataBytes()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule GetCorObject()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ResolveTypeName(string TypeName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericParameters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue InterpretManagedMethod(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Method, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericTypeParameters, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericMethodParameters, class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue ThisParameter, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue> Parameters, int32 MaxInstructionCount, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions Options, [out] string& ExceptionType)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus GetMetadataStatus()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance native int GetMetaDataBytesPtr([out] uint32& Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 GetLocalSignatureToken(int32 MethodToken)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodTokens(string ClassName, string MethodName, [out] int32[]& Tokens)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodTokens(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string ClassName, string MethodName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_AppDomain()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags ClrFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_ClrFlags()
		}
		.property instance uint32 ILImageSize()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_ILImageSize()
		}
		.property instance valuetype [System.Runtime]System.Guid Mvid()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_Mvid()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_RuntimeInstance()
		}
	}
	.class public sequential sealed DkmClrNativeCodeMapEntry
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ff28f1ad-c2f5-1684-f358-eef67257c074') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 NativeAddress, uint32 NativeSize, uint32 NativeOffset, uint32 ILOffset)
		{
			ret
		}
		.field public initonly uint64 NativeAddress
		.field public initonly uint32 NativeSize
		.field public initonly uint32 NativeOffset
		.field public initonly uint32 ILOffset
	}
	.class public DkmClrRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ea234770-c86f-1706-8842-c6fb5311ba79') }
		.method public hidebysig specialname 
			instance string get_CORSystemDirectory()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_RuntimeVersion()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, string CORSystemDirectory, string RuntimeVersion, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, string CORSystemDirectory, string RuntimeVersion, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain FindAppDomain(int32 Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain[] GetAppDomains()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance FindClrModuleInstance(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule CorModule)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread GetCorThread(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess GetCorProcess()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void PrepareForFuncEvalQuickAbort(class Microsoft.VisualStudio.Debugger.DkmThread Thread, [out] bool& SkipLoad, [out] uint64& MemoryAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnFuncEvalQuickAbortDllLoaded(class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool Result)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 ContinueForFuncEval(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval CorEval, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, uint32 Timeout, string EvaluationString)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 CanDoFuncEval(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias> GetAliases(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance native int GetIntrinsicAssemblyMetaDataBytesPtr([out] uint32& Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object GetCorFrame(class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint64 FrameBase, valuetype [System.Runtime]System.Guid InterfaceID)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string CORSystemDirectory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance::get_CORSystemDirectory()
		}
		.property instance string RuntimeVersion()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance::get_RuntimeVersion()
		}
	}
	.class public DkmClrType
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('837d21de-5f4c-e07c-0f1d-227f6422d67a') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain, class [Microsoft.VisualStudio.Debugger.Metadata]Microsoft.VisualStudio.Debugger.Metadata.Type 'type')
		{
			ret
		}
		.method public hidebysig 
			instance class [Microsoft.VisualStudio.Debugger.Metadata]Microsoft.VisualStudio.Debugger.Metadata.Type GetLmrType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Token()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> get_GenericArguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType get_ElementType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_CorElementType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ArrayRank()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SyntheticMvid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain get_AppDomain()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 Token, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericArguments)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 Token, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericArguments, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ElementType, uint32 CorElementType, int32 ArrayRank, valuetype [System.Runtime]System.Guid SyntheticMvid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId ResolveMethodName(string MethodName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> ParameterTypes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute> GetEvalAttributes()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_AppDomain()
		}
		.property instance int32 ArrayRank()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ArrayRank()
		}
		.property instance uint32 CorElementType()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_CorElementType()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ElementType()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ElementType()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericArguments()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_GenericArguments()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ModuleInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid SyntheticMvid()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_SyntheticMvid()
		}
		.property instance int32 Token()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_Token()
		}
	}
	.class public sealed DkmGetAllAwaitExpressionInfoForStatementAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] get_AsyncExpressionInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] AsyncExpressionInfo)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] AsyncExpressionInfo()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_AsyncExpressionInfo()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmGetAsyncKickoffMethodAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_KickoffMethodToken()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 KickoffMethodToken)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult::get_ErrorCode()
		}
		.property instance int32 KickoffMethodToken()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult::get_KickoffMethodToken()
		}
	}
	.class public sequential sealed DkmGetAsyncMethodLocationAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation get_AsyncLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation AsyncLocation)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation AsyncLocation()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult::get_AsyncLocation()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetMethodLocalSymbolsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] get_Scopes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult::get_ErrorCode()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult::get_Scopes()
		}
	}
	.class public sealed DkmGetMethodSymbolStoreAttributeAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint8[] get_Data()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8[] Data)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance uint8[] Data()
		{
			.get instance uint8[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult::get_Data()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetMethodTokensAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32[] get_Tokens()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32[] Tokens)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult::get_ErrorCode()
		}
		.property instance int32[] Tokens()
		{
			.get instance int32[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult::get_Tokens()
		}
	}
	.class public sequential sealed DkmGetNextAwaitExpressionInfoAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo get_AwaitExpressionInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo AwaitExpressionInfo)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo AwaitExpressionInfo()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult::get_AwaitExpressionInfo()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmILInterpreterOptions
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions ResolveVirtual = int32(0x00000001)
	}
	.class public DkmILInterpreterPrimitiveValue
		extends Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dd09d102-60f5-a71f-6a91-6d9770d907ca') }
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, object Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance object Value()
		{
			.get instance object Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue::get_Value()
		}
	}
	.class public DkmILInterpreterReferenceValue
		extends Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('cd724a8f-abd6-8297-c2f2-4e539e1512fd') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue Value()
		{
			.get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue::get_Value()
		}
	}
	.class public abstract DkmILInterpreterValue
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4851b2d6-89f2-46f5-1a56-f257135c3b4b') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag PrimitiveValue = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag ReferenceValue = int32(0x00000001)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue::get_RuntimeInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue::get_TagValue()
		}
	}
	.class public sequential sealed DkmILRange
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0dc8d999-b496-cd95-0469-06d11d4d8b23') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 StartOffset, uint32 EndOffset)
		{
			ret
		}
		.field public initonly uint32 StartOffset
		.field public initonly uint32 EndOffset
	}
	.class public sequential sealed DkmManagedHeapObjectInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('606505d6-885d-610e-9c8f-20b721710dc8') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 Address, uint64 Size, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId TypeId)
		{
			ret
		}
		.field public initonly uint64 Address
		.field public initonly uint64 Size
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId TypeId
	}
	.class public sealed DkmManagedHeapRootInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7ccd05ef-9127-6160-f766-ac0d5c7bb7ec') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 Address, valuetype Microsoft.VisualStudio.Debugger.GCReferenceType RootType, string RootName, uint64 ExtraData)
		{
			ret
		}
		.field public initonly uint64 Address
		.field public initonly uint64 ExtraData
		.field public initonly string RootName
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.GCReferenceType RootType
	}
	.class public DkmManagedHeapSampler
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('14537042-a674-0f63-20ba-a9fab411d46a') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InitializeHeapObjectWalk(uint32 TargetObjectCount, bool LiveObjectStatsOnly)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 NextObjects(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 NextReferences(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 NextRoots(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetSampledHeapData(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo[] GetSampledHeapTypeStats()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] GetRoots()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler::get_UniqueId()
		}
	}
	.class public sequential sealed DkmManagedHeapSegmentInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('e97bab76-a083-6166-5d3a-d22bd6576782') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 StartAddress, uint64 EndAddress, uint8 Generation)
		{
			ret
		}
		.field public initonly uint64 StartAddress
		.field public initonly uint64 EndAddress
		.field public initonly uint8 Generation
	}
	.class public sealed DkmManagedHeapTypeInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5c2790a6-65bd-568c-796b-7509eebb6ef1') }
		.method public hidebysig specialname 
			instance void .ctor(string Name, uint32 TotalCount, uint64 TotalSize)
		{
			ret
		}
		.field public initonly string Name
		.field public initonly uint32 TotalCount
		.field public initonly uint64 TotalSize
	}
	.class public DkmManagedHeapWalker
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dca8e5e0-6bfc-1a87-5ae8-4c165856c3cb') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InitializeHeapObjectWalk()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InitializeHeapReferenceWalk()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InitializeHeapRootsWalk()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo[] NextObjects(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo[] NextReferences(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] NextRoots(uint32 RequestCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string[] GetTypeNames(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId[] TypeIds)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo[] GetSegments()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker::get_UniqueId()
		}
	}
	.class public sequential sealed DkmManagedObjectReferenceInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('11a79ceb-e6b7-e642-81d1-1e7be6a42a5b') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 From, uint64 To)
		{
			ret
		}
		.field public initonly uint64 From
		.field public initonly uint64 To
	}
	.class public DkmManagedReturnStackFrame
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b4660c09-eaf1-87dd-bbdf-8210478281a6') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId get_Method()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_AwaitIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext get_AsyncStackWalkContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData get_Data()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Method, class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 AwaitIndex, class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncStackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncStackWalkContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_AsyncStackWalkContext()
		}
		.property instance int32 AwaitIndex()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_AwaitIndex()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Data()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Flags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Method()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Method()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_ModuleInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Thread()
		}
	}
	.class public DkmManagedReturnValueContext
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5550ca27-ac65-0a34-f6fb-5a0688bb83aa') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_Runtime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Runtime, class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Address, string Name, string FullName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo GetReturnValueInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Address()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Address()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_FullName()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Runtime()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Runtime()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Thread()
		}
	}
	.class public DkmManagedReturnValueCopy
		extends Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('78986f0d-1eec-5d34-51fd-88e48e04b5b2') }
		.method public hidebysig specialname 
			instance uint32 get_CorElementType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ValueBuffer()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy Create(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType CorType, uint32 CorElementType, uint32 Size, uint64 Address, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ValueBuffer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_Address()
		}
		.property instance uint32 CorElementType()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_CorElementType()
		}
		.property instance uint32 Size()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_Size()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ValueBuffer()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_ValueBuffer()
		}
	}
	.class public abstract DkmManagedReturnValueInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d72b0393-ff2a-9a20-531c-68d2bdbaaeb9') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag ManagedReturnValueCopy = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag ManagedReturnValueReference = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType get_CorType()
		{
			ret
		}
		.property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType CorType()
		{
			.get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo::get_CorType()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo::get_TagValue()
		}
	}
	.class public DkmManagedReturnValueReference
		extends Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('59b45a07-6a5f-6938-4039-e4e382aaa05e') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue get_CorValue()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference Create(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType CorType, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue CorValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue CorValue()
		{
			.get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference::get_CorValue()
		}
	}
	.class public sequential sealed DkmManagedTypeId
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('e60e3116-d0f8-efb9-ef36-a373271ad669') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint64 Token1, uint64 Token2)
		{
			ret
		}
		.field public initonly uint64 Token1
		.field public initonly uint64 Token2
	}
	.class public sealed DkmMetadataStatus
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus NotDetermined = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus NotPresent = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus Present = int32(0x00000001)
	}
	.class public sealed DkmNonUserCodeFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags HiddenAttribute = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags NonUserCodeAttribute = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags StepThroughAttribute = int32(0x00000002)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Clr.NativeCompilation
{
	.class public DkmClrNcContainerModuleInstance
		extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a79c8888-83eb-5fa2-143f-7e9b42f77bed') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance FindEmbeddedModule(uint32 Index)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance[] GetEmbeddedModules()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetAssemblyImageBytes(uint32 RVA, uint32 BytesRequested)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetClassInfo(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ClassSignature, [out] class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol[]& InstanceFields, [out] uint32& Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetGenericDictionaryInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateInstructionAddressFromRva(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, uint32 Rva, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance::get_RuntimeInstance()
		}
	}
	.class public DkmClrNcInstanceFieldSymbol
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bb9283d5-b8d9-c1fc-fcdc-c798561b248e') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Offset()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol Create(string Name, uint32 Size, uint32 Offset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Name()
		}
		.property instance uint32 Offset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Offset()
		}
		.property instance uint32 Size()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Size()
		}
	}
	.class public DkmClrNcInstructionAddress
		extends Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('377ece5a-e9ff-bb6a-1612-b5d9cc54755f') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance get_ContainerModule()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_GenericParameters()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress Create(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, uint32 NativeOffset, uint32 ILOffset, class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance ModuleInstance, class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance ContainerModule, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GenericParameters, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance ContainerModule()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_ContainerModule()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GenericParameters()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_GenericParameters()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_ModuleInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_RuntimeInstance()
		}
	}
	.class public DkmClrNcInstructionSymbol
		extends Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('19d8a807-38c8-4b6d-a89a-4e4b00a604d7') }
		.method public hidebysig specialname 
			instance uint32 get_EmbeddedModuleIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NativeOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_GenericParameters()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, uint32 ILOffset, uint32 EmbeddedModuleIndex, uint32 NativeOffset, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GenericParameters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 EmbeddedModuleIndex()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_EmbeddedModuleIndex()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GenericParameters()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_GenericParameters()
		}
		.property instance uint32 NativeOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_NativeOffset()
		}
	}
	.class public DkmClrNcModuleInstance
		extends Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('f85a173b-616b-91d3-319d-24cf9030c023') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance get_ContainerModule()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Index()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateInstructionAddressesFromILAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, uint32 ILOffset, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance ContainerModule()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_ContainerModule()
		}
		.property instance uint32 Index()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_Index()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_RuntimeInstance()
		}
	}
	.class public DkmClrNcRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a1a355e8-c42b-c18f-c5e6-42f06d6aa8c5') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, string RuntimeVersion, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public sealed DkmCreateInstructionAddressFromRvaAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress InstructionAddress)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult::get_InstructionAddress()
		}
	}
	.class public sealed DkmCreateInstructionAddressesFromILAddressAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] get_InstructionAddresses()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] InstructionAddresses)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] InstructionAddresses()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult::get_InstructionAddresses()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.ComponentInterfaces
{
	.class public interface abstract IDkmActiveScriptDebugMonitor
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetRemoteDebugApplication(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AbortExecutionOnResume(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance)
		{
		}
	}
	.class public interface abstract IDkmAfterSetNextStatementNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSetNextStatementCompleted(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement)
		{
		}
	}
	.class public interface abstract IDkmAppPackageInfo
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo[] EnumPackages(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection)
		{
		}
	}
	.class public interface abstract IDkmAsyncBreak
	{
		.method public virtual hidebysig newslot abstract 
			instance void AsyncBreak(class Microsoft.VisualStudio.Debugger.DkmProcess process, bool stopImmediately)
		{
		}
	}
	.class public interface abstract IDkmAsyncBreakCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnAsyncBreakComplete(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus status, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmAsyncBreakCompleteReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnAsyncBreakCompleteReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus status, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmAsyncTaskDecoder
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskCreationStack(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetAsyncCallStack(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmBaseFuncEvalService
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeginFuncEvalExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags')
		{
		}
	}
	.class public interface abstract IDkmBaseNativeExecutionController
	{
		.method public virtual hidebysig newslot abstract 
			instance void RaiseExecutionControlException(class Microsoft.VisualStudio.Debugger.DkmThread thread, uint32 exceptionCode)
		{
		}
	}
	.class public interface abstract IDkmBeforeContinueExecutionNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeforeContinueExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmBeforeStopDebuggingNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeforeStopDebugging(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmBinaryLoadedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBinaryLoaded(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, string path, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmBinaryLocator
	{
		.method public virtual hidebysig newslot abstract 
			instance string LocateBinary(class Microsoft.VisualStudio.Debugger.DkmProcess process, string applicationPath, string dumpPath, string originalPath, uint32 timeDateStamp, uint32 imageSize)
		{
		}
	}
	.class public interface abstract IDkmBinaryLocator11a
	{
		.method public virtual hidebysig newslot abstract 
			instance string TryLocateBinary(class Microsoft.VisualStudio.Debugger.DkmProcess process, string applicationPath, string dumpPath, string originalPath, uint32 timeDateStamp, uint32 imageSize)
		{
		}
	}
	.class public interface abstract IDkmBinaryReloadOpportunityNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBinaryReloadOpportunity(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmBoundBreakpointHitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBoundBreakpointHit(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmBoundBreakpointHitReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBoundBreakpointHitReceived(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmBreakpointConditionProcessor
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetCompiledCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery compiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator conditionOperator)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetCompiledConditionPending(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition, [out] string& errorText)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearConditions(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition, int32 hitCountValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition, [out] int32& currentHitCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetHitCountConditionStatus(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, [out] int32& currentHitCount)
		{
		}
	}
	.class public interface abstract IDkmBreakpointConditionProcessorClient
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery GetCompiledCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, [out] valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator& conditionOperator)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointConditionFailed(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, string errorMessage)
		{
		}
	}
	.class public interface abstract IDkmBreakpointConditionProcessorClient140
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointConditionFailed(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' errorCode)
		{
		}
	}
	.class public interface abstract IDkmBreakpointConditionProcessorGpuExtension
	{
		.method public virtual hidebysig newslot abstract 
			instance void TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery compiledCondition, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator conditionOperator)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TryClearConditionOnTargetDevice(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread modifiedBreakThread)
		{
		}
	}
	.class public interface abstract IDkmBreakpointConditionThreadSelectorForGpu
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmThread EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread firstStoppedThread)
		{
		}
	}
	.class public interface abstract IDkmBreakpointManager
	{
		.method public virtual hidebysig newslot abstract 
			instance void EnablePendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DisablePendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnrollPendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPendingBreakpointCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPendingBreakpointHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnableBoundBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DisableBoundBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsBoundBreakpointEnabled(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetBoundBreakpointCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetBoundBreakpointHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetBoundBreakpointHitCountValue(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, int32 newValue)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetBoundBreakpointHitCountValue(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmBreakpointManagerFileUpdate
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointFilesUpdated(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification fileUpdateNotification, class Microsoft.VisualStudio.Debugger.DkmWorkList workList)
		{
		}
	}
	.class public interface abstract IDkmBreakpointManagerNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointBound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] boundBreakpoints)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointUnbound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] boundBreakpoints, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason reason)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnBreakpointMessage(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel level, string message)
		{
		}
	}
	.class public interface abstract IDkmCallStackFilter
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] FilterNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext stackContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame input)
		{
		}
	}
	.class public interface abstract IDkmClrAppDomainNameChanged
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnAppDomainNameChanged(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain)
		{
		}
	}
	.class public interface abstract IDkmClrCustomVisualizerObjectProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void CreateDebuggeeSideVisualizerObject(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult, uint32 selectedVisualizerIndex, [out] string& exceptionType, [out] string& exceptionStackTrace, [out] string& exceptionMessage)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool DestroyDebuggeeSideVisualizerObject(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResolveAssembly(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult, string assemblyName, [out] string& assemblyPath, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& assemblyBytes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetDataFromDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult, [out] string& exceptionType, [out] string& exceptionStackTrace, [out] string& exceptionMessage)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> TransferDataToDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult, uint8[] dataIn, [out] string& exceptionType, [out] string& exceptionStackTrace, [out] string& exceptionMessage)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CreateReplacementObjectOnDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult, uint8[] dataIn, [out] string& exceptionType, [out] string& exceptionStackTrace, [out] string& exceptionMessage)
		{
		}
	}
	.class public interface abstract IDkmClrDebugMonitorExceptionCaughtNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnClrDebugMonitorExceptionCaught(class Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation clrCaughtException, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmClrExpressionCompiler
	{
		.method public virtual hidebysig newslot abstract 
			instance void CompileExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, [out] string& 'error', [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CompileAssignment(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult lValue, [out] string& 'error', [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery GetClrLocalVariableQuery(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress, bool argumentsOnly)
		{
		}
	}
	.class public interface abstract IDkmClrExpressionCompilerCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void CompileDisplayAttribute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance moduleInstance, int32 token, [out] string& 'error', [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result)
		{
		}
	}
	.class public interface abstract IDkmClrExpressionEvaluatorCallbackInternal
	{
		.method public virtual hidebysig newslot abstract 
			instance void CompileDisplayAttributeInternal(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance moduleInstance, int32 token, [out] string& 'error', [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result)
		{
		}
	}
	.class public interface abstract IDkmClrFormatter
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetValueString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> formatSpecifiers)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetTypeName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo customTypeInfo, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> formatSpecifiers)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool HasUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
	}
	.class public interface abstract IDkmClrFrameGenericParameterProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance string[] GetClrGenericParameters(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame)
		{
		}
	}
	.class public interface abstract IDkmClrInspectionQueryProcessor
	{
		.method public virtual hidebysig newslot abstract 
			instance void Execute(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery compiledClrInspectionQuery, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, string expressionName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLocalValues(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery compiledClrLocalsQuery, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, int32 firstLocalIndex, int32 count, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrAlias> GetAliases(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
	}
	.class public interface abstract IDkmClrIntrinsicAssemblyProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance native int GetIntrinsicAssemblyMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, [out] uint32& size)
		{
		}
	}
	.class public interface abstract IDkmClrMetaDataLoader
	{
		.method public virtual hidebysig newslot abstract 
			instance native int GetMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain, string assemblyName, [out] uint32& size)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetMetaDataBytes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain, string assemblyName, [out] valuetype [System.Runtime]System.Guid& mvid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [System.Runtime]System.Guid ResolveMvidByAssemblyName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain, string assemblyName)
		{
		}
	}
	.class public interface abstract IDkmClrMetaDataProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetMetaDataImport(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance)
		{
		}
	}
	.class public interface abstract IDkmClrMetaDataProvider140
	{
		.method public virtual hidebysig newslot abstract 
			instance native int GetMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance, [out] uint32& size)
		{
		}
	}
	.class public interface abstract IDkmClrMethodSignatureHelper
	{
		.method public virtual hidebysig newslot abstract 
			instance int32 GetLocalSignatureToken(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance, int32 methodToken)
		{
		}
	}
	.class public interface abstract IDkmClrModuleLookup
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance FindClrModuleInstance(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule corModule)
		{
		}
	}
	.class public interface abstract IDkmClrResultProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetResult(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType declaredType, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo customTypeInfo, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> formatSpecifiers, string resultName, string resultFullName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetClrValue(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, int32 initialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, int32 startIndex, int32 count, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result)
		{
		}
	}
	.class public interface abstract IDkmClrRuntimeDebugMonitor
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags GetNonUserCodeMetadataFlags(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry[] GetNativeCodeMap(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetMetaDataBytes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance)
		{
		}
	}
	.class public interface abstract IDkmClrRuntimeDebugMonitorDirect
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain GetCorAppDomain(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread GetCorThread(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess GetCorProcess(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule GetCorModule(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction GetCorFunction(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress)
		{
		}
	}
	.class public interface abstract IDkmClrSymbolCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodSymbolStoreData(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId methodId)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId GetFirstMethodInFirstDocument(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodSymbolStoreDataPreRemap(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId methodId, [out] int32& remapToken)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetTokenSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, int32 parentToken, bool isPreRemap, string attributeName)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation GetAsyncMethodLocation(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] GetAllAwaitExpressionInfoForStatement(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool GetAsyncMethodCatchHandlerILOffset(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction, [out] uint32& catchHandlerILOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo GetNextAwaitExpressionInfo(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 GetAsyncKickoffMethod(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction)
		{
		}
	}
	.class public interface abstract IDkmClrSymbolCallback120
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodLocalSymbols(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetMethodSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction, string attributeName)
		{
		}
	}
	.class public interface abstract IDkmClrSymbolSignatureCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetSignatureForConstant(class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant clrLocalConstant)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetSignatureForVariable(class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable clrLocalVariable)
		{
		}
	}
	.class public interface abstract IDkmClrTypeResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId ResolveMethodName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType, string methodName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> parameterTypes)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ResolveTypeName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance, string typeName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericParameters)
		{
		}
	}
	.class public interface abstract IDkmClrUIVisualizerService
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> InitSourceDataProvider(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetManagedViewerCreationData(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy, [out] string& assemblyName, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& assemblyBytes, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& assemblyPdb, [out] string& className, [out] uint32& assemblyResolution, [out] bool& replacementOk)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> InPlaceUpdateObject(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy, uint8[] dataIn)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResolveAssemblyReference(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy, string assemblyName, uint32 'flags', [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& assemblyBytes, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& assemblyPdb, [out] string& assemblyLocation, [out] uint32& assemblyResolution)
		{
		}
	}
	.class public interface abstract IDkmClrUIVisualizerService120
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetInitialData(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> CreateReplacementObject(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy, uint8[] dataIn)
		{
		}
	}
	.class public interface abstract IDkmClrValueInspectionCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute> GetEvalAttributes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string EvaluateToString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateDebuggerDisplayString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType targetType, string formatString, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateProxyType(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 'type')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateResultsViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType enumerableType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateDynamicViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetMemberValue(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, string memberName, int32 memberType, string parentTypeName, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetArrayElement(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, int32[] index, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue Dereference(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext)
		{
		}
	}
	.class public interface abstract IDkmCompiledInspectionQueryProcessor
	{
		.method public virtual hidebysig newslot abstract 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] ExecuteQuery(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery query, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> parameters, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, uint32 timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags funcEvalFlags, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& failureReason)
		{
		}
	}
	.class public interface abstract IDkmComputeKernelExitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnComputeKernelExit(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, int32 exitCode, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmContinueExecution
	{
		.method public virtual hidebysig newslot abstract 
			instance void ContinueExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmCustomMessageCallbackReceiver
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage SendHigher(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage)
		{
		}
	}
	.class public interface abstract IDkmCustomMessageForwardReceiver
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage SendLower(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage)
		{
		}
	}
	.class public interface abstract IDkmCustomStopNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnCustomStop(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage, class Microsoft.VisualStudio.Debugger.DkmThread thread, valuetype [System.Runtime]System.Guid vsService, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmCustomStopReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnCustomStopReceived(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage, class Microsoft.VisualStudio.Debugger.DkmThread thread, valuetype [System.Runtime]System.Guid vsService, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmCustomVisualizer
	{
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateVisualizedExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& resultObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UseDefaultEvaluationBehavior(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, [out] bool& useDefaultEvaluationBehavior, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& defaultEvaluationResult)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, int32 initialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& initialChildren, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& enumContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext, int32 startIndex, int32 count, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& items)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValueAsString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, string 'value', int32 timeout, [out] string& errorText)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression)
		{
		}
	}
	.class public interface abstract IDkmCustomVisualizerCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetSymbolInterface(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, valuetype [System.Runtime]System.Guid typeSymbolInterfaceId, [out] object& typeSymbolInterface)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateExpressionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& resultObject)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string CreateDefaultChildFullName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, int32 index)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetChildrenCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult, int32 initialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& initialChildren, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& enumContext)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetItemsCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext, int32 startIndex, int32 count, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& items)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValueAsStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult, string 'value', int32 timeout, [out] string& errorText)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUnderlyingStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult)
		{
		}
	}
	.class public interface abstract IDkmDebugMonitorExceptionNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnDebugMonitorException(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmDeploymentCommandCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessExit(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand, int32 exitCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnStdOut(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand, string text)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnStdErr(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand, string text)
		{
		}
	}
	.class public interface abstract IDkmDisassemblyProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] Disassemble(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address, uint32 count)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress startAddress, int32 instructionOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress> GetEffectiveAddresses(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame frame, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address)
		{
		}
	}
	.class public interface abstract IDkmDumpWriter
	{
		.method public virtual hidebysig newslot abstract 
			instance void WriteDump(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype Microsoft.VisualStudio.Debugger.DkmDumpType dumpType, string path, class Microsoft.VisualStudio.Debugger.DkmThread targetThread)
		{
		}
	}
	.class public interface abstract IDkmEditAndContinueService
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsStaleCode(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.DkmModuleInstance module, bool isLeafFrame)
		{
		}
	}
	.class public interface abstract IDkmEmbeddedBreakpointHitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnEmbeddedBreakpointHit(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, bool showAsException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmEmbeddedBreakpointHitReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnEmbeddedBreakpointHitReceived(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, bool showAsException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmEntryPointNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnEntryPoint(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmEntryPointReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnEntryPointReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmExceptionContinuedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnExceptionContinued(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmExceptionController
	{
		.method public virtual hidebysig newslot abstract 
			instance bool CanModifyProcessing(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SquashProcessing(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception)
		{
		}
	}
	.class public interface abstract IDkmExceptionFormatter
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetDescription(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetAdditionalInformation(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception)
		{
		}
	}
	.class public interface abstract IDkmExceptionManager
	{
		.method public virtual hidebysig newslot abstract 
			instance void AddExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype [System.Runtime]System.Guid sourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger trigger)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearExceptionTriggers(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype [System.Runtime]System.Guid sourceId)
		{
		}
	}
	.class public interface abstract IDkmExceptionManager140
	{
		.method public virtual hidebysig newslot abstract 
			instance void RemoveExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmProcess process, valuetype [System.Runtime]System.Guid sourceId, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger trigger)
		{
		}
	}
	.class public interface abstract IDkmExceptionStackTraceProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> GetExceptionStackTrace(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception)
		{
		}
	}
	.class public interface abstract IDkmExceptionTriggerHitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnExceptionTriggerHit(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit hit, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmExceptionTriggerHitReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnExceptionTriggerHitReceived(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit hit, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmExceptionWinRTErrorExtractor
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetWinRTErrorInfo(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception, [out] string& restrictedDescription, [out] string& restrictedErrorReference, [out] string& restrictedCapabilitySid)
		{
		}
	}
	.class public interface abstract IDkmExtendedRegisters
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] GetExtendedRegisters(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetExtendedRegisterValue(class Microsoft.VisualStudio.Debugger.DkmThread thread, int32 registerIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'value')
		{
		}
	}
	.class public interface abstract IDkmFrameExceptionInterceptProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void InterceptCurrentException(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags interceptAction, [out] uint64& cookie)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetUnwindAddress(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, [out] class Microsoft.VisualStudio.Debugger.DkmInstructionAddress& newAddress)
		{
		}
	}
	.class public interface abstract IDkmFuncEvalCompletedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnFuncEvalCompleted(class Microsoft.VisualStudio.Debugger.DkmThread thread, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags', class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmFuncEvalStartingNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnFuncEvalStarting(class Microsoft.VisualStudio.Debugger.DkmThread thread, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags', class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmFunctionTableProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetFunctionTableEntry(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance, uint64 address)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> SearchRuntimeFunctionTable(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, [out] uint64& baseAddress)
		{
		}
	}
	.class public interface abstract IDkmGPUBreakpointBehaviorQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' GetGPUBreakpointBehavior(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmGPUComputeKernelOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetComputeVectorWidth(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] int32& width)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetActiveThreadGroups(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] int64[]& activeThreadGroups, [out] int32& numberOfGroups)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentThreadDimensions(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] int32[]& threadDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentGroupDimensions(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] int32[]& groupDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThisThreadDimension(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, [out] int32[]& threadDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThisGroupDimension(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, [out] int32[]& groupDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetComputeKernelName(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetComputeKernelProperties(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty'[]& computeProperties, [out] int32& numberOfProperties)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThreadId(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, [out] int32[]& threadDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetGroupId(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, [out] int32[]& groupDimensions, [out] int32& numberOfDimensions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo'[] Select(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> from, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' where)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo'[] GroupBy(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' groupByFlags, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> from, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' where)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64[] GetStoppedThreads(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetThreadFromId(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, uint64 threadId, [out] class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread'& thread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateFlaggedState(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' where, bool flagged)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdateFrozenState(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' where, bool frozen)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFlatComputeKernelDimensions(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' computeKernel, [out] int32[]& flatThreadDimensions, [out] int32[]& flatIndexBase, [out] int32& numberOfDimensions, [out] valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel'& model)
		{
		}
	}
	.class public interface abstract IDkmGPUDisassemblyQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetGPUDisassembly(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, uint64 address, uint32 count, bool isForward, [out] bool& isEnd)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetGPUDisassemblySize(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetNextGPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, uint64 startAddress)
		{
		}
	}
	.class public interface abstract IDkmGPUEnvironmentFilter
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetGPUAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings debugLaunchSettings, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario scenario)
		{
		}
	}
	.class public interface abstract IDkmGPUMemoryOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance int32 ReadMemory(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, uint64 address, uint64 instructionPointer, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags', uint8[] buffer)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteMemory(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, uint64 address, uint64 instructionPointer, uint8[] data)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 UpdateBufferTag(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, uint32 inputTag)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool ValidateAddress(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, uint64 address)
		{
		}
	}
	.class public interface abstract IDkmGPURegisterOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription'[] GetRegisterDescriptions(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetRegisterValue(class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' computeThread, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription' registerDescription, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> registerValue)
		{
		}
	}
	.class public interface abstract IDkmGPUSetMemoryAccessWarningOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetGPUMemoryAccessWarning(class Microsoft.VisualStudio.Debugger.DkmProcess process, int32 warningCode, bool enable)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearAllGPUMemoryAccessWarnings(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmGPUSingleStepCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnGPUSingleStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmGPUSingleStepCompleteReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnGPUSingleStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmGPUSymbolProviderCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void TranslateAcceleratorTagByIP(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, uint32 inputTag, uint32 instructionPointer, [out] uint32& registerType, [out] uint32& registerIndex, [out] uint32& firstElement, [out] uint32& vectorElements, [out] uint32& byteOffset, [out] uint32& vectorElementSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType' GetGPUInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol nextInstruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetCompilerOptions(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetNoSourceRanges(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction)
		{
		}
	}
	.class public interface abstract IDkmGPUSymbolQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance void TranslateAcceleratorTagByRva(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, uint32 inputTag, uint32 rva, [out] uint32& registerType, [out] uint32& registerIndex, [out] uint32& firstElement, [out] uint32& vectorElements, [out] uint32& byteOffset, [out] uint32& vectorElementSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsValidAcceleratorTag(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, uint32 inputTag, uint32 rva)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetPointerToHLSLRegister(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, int32 registerType, uint32 registerIndex, uint32 firstElement, uint32 vectorElements, uint32 byteOffset, uint32 vectorElementSize, uint32 rva, uint32 startLiveRange, uint32 endLiveRange, [out] bool& isNewDynamicTag)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetPointerToHLSLRegister(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, uint64 address, int32 registerType, uint32 registerIndex, uint32 firstElement, uint32 vectorElements, uint32 byteOffset, uint32 vectorElementSize, uint32 startLiveRange, uint32 endLiveRange)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 GetAcceleratorTagTableSize(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, [out] uint32& sizeOfForwardedTags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 GetInstructionOffsetForRva(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, uint32 rVA)
		{
		}
	}
	.class public interface abstract IDkmGPUSymbolQueryCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession)
		{
		}
	}
	.class public interface abstract IDkmGPUTempBreakStepper
	{
		.method public virtual hidebysig newslot abstract 
			instance void EnableTempBreak(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest, int64[] tempBreakInstructions)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearTempBreak(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest)
		{
		}
	}
	.class public interface abstract IDkmGpuRaceHazardsAllowSameNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnGpuRaceHazardAllowSameSettingChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmGroupCompiledInspectionQueryProcessor
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult ExecuteQueryOnThreads(class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery' dkmILQuery, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> threads, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> parameters)
		{
		}
	}
	.class public interface abstract IDkmGroupLanguageExpressionEvaluator
	{
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateExpressionOnThreads(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> threads, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmHeuristicStackWalker
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers, uint32 requestSize, uint64 endStackPointer, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& nextRegisters, [out] bool& endOfStack)
		{
		}
	}
	.class public interface abstract IDkmHiddenEntryPointNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnHiddenEntryPoint(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmHiddenEntryPointReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnHiddenEntryPointReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmHostingProcessShowNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnHostingProcessShow(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmIISDebuggingServices
	{
		.method public virtual hidebysig newslot abstract 
			instance void DiagnoseRemoteWebDebuggingError(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, string url)
		{
		}
	}
	.class public interface abstract IDkmIISResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance int32[] ResolveUrlToProcessIds(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, string url, string dnsNames, [out] string& exceptionText)
		{
		}
	}
	.class public interface abstract IDkmILFailureReasonResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance string ResolveILFailureReason(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery query, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' errorCode)
		{
		}
	}
	.class public interface abstract IDkmILInterpreter
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue InterpretManagedMethod(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 'method', class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericTypeParameters, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericMethodParameters, class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue thisParameter, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue> parameters, int32 maxInstructionCount, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions options, [out] string& exceptionType)
		{
		}
	}
	.class public interface abstract IDkmInstructionAddressOperator
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsInSameFunction(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress other)
		{
		}
	}
	.class public interface abstract IDkmInstructionAddressProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, uint64 instructionPointer, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmInstructionAddressResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ResolveCPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, uint64 instructionPointer, [out] bool& firstAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64[] GetCurrentCPUAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress)
		{
		}
	}
	.class public interface abstract IDkmInstructionPatchNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnInstructionPatchInserted(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] originalMemory)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnInstructionPatchRemoved(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] originalMemory)
		{
		}
	}
	.class public interface abstract IDkmInstructionStepper
	{
		.method public virtual hidebysig newslot abstract 
			instance void EnableSingleStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearSingleStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest)
		{
		}
	}
	.class public interface abstract IDkmInterceptExceptionCompletedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnInterceptExceptionCompleted(class Microsoft.VisualStudio.Debugger.DkmThread thread, uint64 cookie, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmInterceptExceptionCompletedReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnInterceptExceptionCompletedReceived(class Microsoft.VisualStudio.Debugger.DkmThread thread, uint64 cookie, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmIntrinsicFunctionEvaluator
	{
		.method public virtual hidebysig newslot abstract 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Execute(class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic' executeIntrinsic, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] arguments, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> subroutines, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& failureReason)
		{
		}
	}
	.class public interface abstract IDkmIntrinsicFunctionEvaluator140
	{
		.method public virtual hidebysig newslot abstract 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Execute(class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic' executeIntrinsic, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery' inspectionQuery, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] arguments, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> subroutines, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& failureReason)
		{
		}
	}
	.class public interface abstract IDkmJustMyCodeEnableNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnJustMyCodeChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmJustMyCodeProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void IsUserCode(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmLanguageAsyncStepper
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue GetAsyncMethodIdentity(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress, class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetStepOutFlag(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool 'value')
		{
		}
	}
	.class public interface abstract IDkmLanguageConditionEvaluator
	{
		.method public virtual hidebysig newslot abstract 
			instance void ParseCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition evaluationCondition, [out] string& errorText)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition evaluationCondition, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, [out] bool& stop, [out] string& errorText)
		{
		}
	}
	.class public interface abstract IDkmLanguageExpressionCompiler
	{
		.method public virtual hidebysig newslot abstract 
			instance void Compile(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult& 'error')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompileCondition(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress, class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition, [out] string& errorText)
		{
		}
	}
	.class public interface abstract IDkmLanguageExpressionEvaluator
	{
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, int32 initialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFrameLocals(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFrameArguments(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, int32 startIndex, int32 count, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetValueAsString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result, string 'value', int32 timeout, [out] string& errorText)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result)
		{
		}
	}
	.class public interface abstract IDkmLanguageFrameDecoder
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetFrameName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags argumentFlags, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetFrameReturnType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmLanguageInstructionDecoder
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetMethodName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags argumentFlags)
		{
		}
	}
	.class public interface abstract IDkmLanguageObjectIdProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void CreateObjectId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DestroyObjectId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result)
		{
		}
	}
	.class public interface abstract IDkmLanguageReturnValueEvaluator
	{
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateReturnValue(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue rawReturnValue, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmLanguageReturnValueEvaluator2
	{
		.method public virtual hidebysig newslot abstract 
			instance void EvaluateReturnValue2(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer rawReturnValue, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmLanguageStepIntoFilterCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags GetStepIntoFlags(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress)
		{
		}
	}
	.class public interface abstract IDkmLaunchResumeProcess
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo LaunchProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request', int32 additionalWin32Flags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResumeProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request')
		{
		}
	}
	.class public interface abstract IDkmLoadCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnLoadComplete(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmManagedAsyncTaskDecoder
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetManagedTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetContinuationFramesFromTaskObject(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue taskObject, class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain taskAppDomain, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskHandleFromManagedReturnFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame managedReturnStackFrame, [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue& taskHandle)
		{
		}
	}
	.class public interface abstract IDkmManagedFuncEvalQuickAbortServices
	{
		.method public virtual hidebysig newslot abstract 
			instance void PrepareForFuncEvalQuickAbort(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread, [out] bool& skipLoad, [out] uint64& memoryAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnFuncEvalQuickAbortDllLoaded(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool result)
		{
		}
	}
	.class public interface abstract IDkmManagedFuncEvalServices
	{
		.method public virtual hidebysig newslot abstract 
			instance int32 ContinueForFuncEval(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval corEval, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags funcEvalFlags, uint32 timeout, string evaluationString)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 CanDoFuncEval(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmManagedHeapSampler
	{
		.method public virtual hidebysig newslot abstract 
			instance void InitializeHeapObjectWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler, uint32 targetObjectCount, bool liveObjectStatsOnly)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 NextObjects(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 NextReferences(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 NextRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetSampledHeapData(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo[] GetSampledHeapTypeStats(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] GetRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler)
		{
		}
	}
	.class public interface abstract IDkmManagedHeapWalker
	{
		.method public virtual hidebysig newslot abstract 
			instance void InitializeHeapObjectWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InitializeHeapReferenceWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InitializeHeapRootsWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo[] NextObjects(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo[] NextReferences(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] NextRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker, uint32 requestCount)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetTypeNames(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId[] typeIds)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo[] GetSegments(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker)
		{
		}
	}
	.class public interface abstract IDkmManagedReturnValueFetcher
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo GetReturnValueInfo(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext managedReturnValueContext)
		{
		}
	}
	.class public interface abstract IDkmManagedSteppingCodePathProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] GetCodePathsInRange(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame corFrame, uint32 startILOffset, uint32 endILOffset)
		{
		}
	}
	.class public interface abstract IDkmManagedTaskServices
	{
		.method public virtual hidebysig newslot abstract 
			instance int32 GetMethodMetadataToken(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, string className, string methodName, string[] methodArguments)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskInfoFromFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, int32 argumentIndex, [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo& taskInfo)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskInfoArrayFromFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, int32 argumentIndex, [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo[]& taskInfoArray)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskInfoFromHandle(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue taskHandle, class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain, [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo& taskInfo)
		{
		}
	}
	.class public interface abstract IDkmManagedThreadProperties
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetManagedThreadProperties(class Microsoft.VisualStudio.Debugger.DkmThread thread, [out] int32& managedThreadId)
		{
		}
	}
	.class public interface abstract IDkmMemoryOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance int32 ReadMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags', uint8[] buffer)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint8[] ReadMemoryString(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags', uint16 characterSize, int32 maxCharacters)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void WriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] data)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void InvisibleWriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] data)
		{
		}
	}
	.class public interface abstract IDkmMergedMonitorStackWalk
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] RuntimeWalkNextFramesAndCheckCache(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext, uint32 requestSizeHintIfCacheIsValid, uint32 requestSizeHintIfCacheIsInvalid, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash cachedHash, [out] bool& endOfStack, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash& actualStackHash, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext& actualStackWalkContext, [out] bool& isCacheValid)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] RuntimeWalkNextFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext, uint32 requestSizeHint, [out] bool& endOfStack)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame GetTopStackWalkFrame(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance)
		{
		}
	}
	.class public interface abstract IDkmMinidumpQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetDumpExePath(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmModuleCreateNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleCreate(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmModuleInstanceDisabledNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnDisabledChanged(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmModuleInstanceLoadNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleInstanceLoad(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmModuleInstanceUnloadNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleInstanceUnload(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmModuleLocator
	{
		.method public virtual hidebysig newslot abstract 
			instance void TryLoadBinary(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmModuleMetadataStatusQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus GetMetadataStatus(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance)
		{
		}
	}
	.class public interface abstract IDkmModuleModifiedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleModified(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmModuleSymbolsLoaded
	{
		.method public virtual hidebysig newslot abstract 
			instance void RaiseSymbolsLoadedEvent(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, bool isReload)
		{
		}
	}
	.class public interface abstract IDkmModuleSymbolsLoadedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleSymbolsLoaded(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, bool isReload, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmModuleSymbolsUpdatedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnModuleSymbolsUpdated(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmModuleUserCodeDeterminer
	{
		.method public virtual hidebysig newslot abstract 
			instance bool IsUserCode(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmMonitorStackWalk
	{
		.method public virtual hidebysig newslot abstract 
			instance void Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers, uint32 stackRangeSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers, uint32 stackRangeSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult WalkNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext)
		{
		}
	}
	.class public interface abstract IDkmNameUndecorator
	{
		.method public virtual hidebysig newslot abstract 
			instance string UndecorateName(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, string decoratedName, uint32 options)
		{
		}
	}
	.class public interface abstract IDkmNativeCppEditAndContinueNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnNativeCppEditAndContinueAfterCommitEdit(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance)
		{
		}
	}
	.class public interface abstract IDkmNativeDebuggingEnableNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnNativeDebuggingEnabledChanged(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmNativeEditAndContinueUpdate
	{
		.method public virtual hidebysig newslot abstract 
			instance void ApplyCodeChange(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance nativeRuntimeInstance, class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress[] modifiedStackIPAddresses, uint32[] lineHints, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& warnings, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& errors)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CommitCodeChange(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance nativeRuntimeInstance, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& warnings, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& errors)
		{
		}
	}
	.class public interface abstract IDkmNativeExportTableDecoder
	{
		.method public virtual hidebysig newslot abstract 
			instance string FindNearestExport(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress nativeAddress, [out] int32& byteOffset)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress FindExportName(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance, string name, bool ignoreDataExports)
		{
		}
	}
	.class public interface abstract IDkmNativeExportsEnableNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnNativeExportsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmNativeStackCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentFrameInfo(class Microsoft.VisualStudio.Debugger.DkmThread thread, [out] uint64& returnAddress, [out] uint64& frameBase, [out] uint64& vFrame)
		{
		}
	}
	.class public interface abstract IDkmNativeSteppingCallSiteProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite[] GetSteppingCallSites(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress nativeAddress, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] steppingRanges)
		{
		}
	}
	.class public interface abstract IDkmNativeSymbolProviderCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata GetNativeInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol GetPublicSymbolByNameCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, string publicName)
		{
		}
	}
	.class public interface abstract IDkmNativeSymbolProviderCallback120a
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetSteppingRanges(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction, class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress stepStartingAddress, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary rangeBoundary, bool includeInline)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata GetSteppingNativeInstructionMetadata(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction, class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress stepStartingAddress)
		{
		}
	}
	.class public interface abstract IDkmOutOfBandExceptionNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnOutOfBandException(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmOutOfBandProcessContinueNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OutOfBandProcessContinue(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmPendingFileLineBreakpointCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetCurrentSourcePosition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint fileLineBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetCurrentSourceText(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint fileLineBreakpoint)
		{
		}
	}
	.class public interface abstract IDkmPerformanceMeasurement140
	{
		.method public virtual hidebysig newslot abstract 
			instance void QueryPerformanceCounters(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmProcessContinueNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessContinue(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmProcessCreateNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessCreate(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmProcessDebuggerInitializeWaiter
	{
		.method public virtual hidebysig newslot abstract 
			instance void WaitForDebuggerInitialize(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetDebuggerInitialized(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmProcessExecutionNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessPause(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters processCounters)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessResume(class Microsoft.VisualStudio.Debugger.DkmProcess process, class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters processCounters)
		{
		}
	}
	.class public interface abstract IDkmProcessExitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnProcessExit(class Microsoft.VisualStudio.Debugger.DkmProcess process, int32 exitCode, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmProcessLaunchEnvironmentFilter
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings debugLaunchSettings, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario scenario)
		{
		}
	}
	.class public interface abstract IDkmProcessLaunchEnvironmentFilter140
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData inputData)
		{
		}
	}
	.class public interface abstract IDkmProcessQueryOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance uint32 GetHandleCount(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetRunningTime(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetRunningTime(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 runningTime)
		{
		}
	}
	.class public interface abstract IDkmRegisterWrite
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetRegisterValue(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackWalkFrame, int32 registerIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'value')
		{
		}
	}
	.class public interface abstract IDkmRequireFullTrustForSourceServerNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRequireFullTrustForSourceServerChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmReturnValuesNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnReturnValues(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue> returnValues, bool lastValueInCurrentContext, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRunningProcessInfoProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo[] EnumRunningProcesses(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, bool includeFromAllUsers, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo GetRunningProcessInfo(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, int32 id, int64 startTime, bool isDebuggee, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo PrepareForDebuggingProcess(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, int32 id, int64 startTime, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TerminateRunningProcess(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, int32 id, int64 startTime, int32 exitCode)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation GetSystemInformation(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, bool nativeSystemInfo)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetClrVersionOfExecutable(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, string exePath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool QueryIsWOW64Executable(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection, string exePath)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetDefaultClrVersion(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection)
		{
		}
	}
	.class public interface abstract IDkmRuntimeBreakpointNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRuntimeBreakpointReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRuntimeBreakpointReceived(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRuntimeDisassemblyProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] Disassemble(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address, uint32 count)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress startAddress, int32 instructionOffset)
		{
		}
	}
	.class public interface abstract IDkmRuntimeFunctionResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance void EnableResolution(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest, class Microsoft.VisualStudio.Debugger.DkmWorkList workList)
		{
		}
	}
	.class public interface abstract IDkmRuntimeFunctionResolverClient
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnFunctionResolved(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnResolverMessage(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel level, string message)
		{
		}
	}
	.class public interface abstract IDkmRuntimeHandleComparer
	{
		.method public virtual hidebysig newslot abstract 
			instance bool CompareHandleValuesThroughVil(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue handleValue1, class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue handleValue2)
		{
		}
	}
	.class public interface abstract IDkmRuntimeInstanceLoadCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRuntimeInstanceLoadComplete(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRuntimeInstanceLoadNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRuntimeInstanceLoad(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRuntimeInstanceUnloadNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnRuntimeInstanceUnload(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmRuntimeMonitorBreakpointHandler
	{
		.method public virtual hidebysig newslot abstract 
			instance void EnableRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TestRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void DisableRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint)
		{
		}
	}
	.class public interface abstract IDkmRuntimeSetNextStatement
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetNextStatement(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement)
		{
		}
	}
	.class public interface abstract IDkmRuntimeStepper
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool OwnsCurrentExecutionLocation(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Step(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void StopStep(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AfterSteppingArbitration(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance newControllingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnNewControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance controllingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool StepControlRequested(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TakeStepControl(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, bool leaveGuardsInPlace, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void NotifyStepComplete(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentContentInsertNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnScriptDocumentContentInsert(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan span, string newText, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentContentRemoveNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnScriptDocumentContentRemove(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan span, int32 charsToRemove, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetContent(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, bool enableContentEvents, [out] uint32[]& sectionDividers)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetRaiseContentEvents(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, bool enable)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument TryResolve(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId sourceFileId)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentSourceProjectItemChanged
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSourceProjectItemChanged(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentSymbolProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetRaiseSymbolEvents(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument, bool enable)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentTreeNodeCreateNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnScriptDocumentTreeNodeCreate(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode scriptDocumentTreeNode, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmScriptDocumentTreeNodeUnloadNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnScriptDocumentTreeNodeUnload(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode scriptDocumentTreeNode, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmScriptJmcStateChangeNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnJmcStateChanged(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument)
		{
		}
	}
	.class public interface abstract IDkmScriptSymbolCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction GetNextSteppingAction(class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol scriptInstruction, class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol startingInstruction, bool isSteppingByLine)
		{
		}
	}
	.class public interface abstract IDkmScriptSymbolsUpdatedNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnScriptSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] documents, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmSetNextStatementQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance uint32 CanSetNextStatement(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement)
		{
		}
	}
	.class public interface abstract IDkmSingleStepCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSingleStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmSingleStepCompleteReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSingleStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmSourceServerSymbolQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance uint8[] GetSourceServerData(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmStackProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetNextFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext stackContext, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, int32 requestSize, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult> completionRoutine)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame Format(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession, valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions options)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame GetTopStackFrame(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmStackWalkFrameInterfaceProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetFrameInspectionInterface(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession session, valuetype [System.Runtime]System.Guid interfaceID)
		{
		}
	}
	.class public interface abstract IDkmStackWalkFrameInterfaceProvider2
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetCorFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread, uint64 frameBase, valuetype [System.Runtime]System.Guid interfaceID)
		{
		}
	}
	.class public interface abstract IDkmStartDebuggingOperations
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess AttachToProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest 'request')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo LaunchDebuggedProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request')
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess ResumeDebuggedProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request', valuetype [System.Runtime]System.Guid uniqueProcessId)
		{
		}
	}
	.class public interface abstract IDkmStepCompleteNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmStepCompleteReceived
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, class Microsoft.VisualStudio.Debugger.DkmThread thread, bool hasException, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmStepOverPropertiesAndOperatorsEnableNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnStepOverPropertiesAndOperatorsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmSteppingCodePathProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] GetCodePaths(class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource steppingCodePathSource, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit stepUnit)
		{
		}
	}
	.class public interface abstract IDkmSteppingManager
	{
		.method public virtual hidebysig newslot abstract 
			instance void BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void EnableStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, bool removeOtherSteppers)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void CancelStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ClearSteppers(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmSteppingManagerCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance GetControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool StepControlRequested(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void TakeStepControl(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, bool leaveGuardsInPlace, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnStepArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance currentControllingRuntimeInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void OnCrossThreadStepArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance currentControllingRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread newThread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStartingInstructionAddress, [out] class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper& newStepper)
		{
		}
	}
	.class public interface abstract IDkmSteppingManagerCallback11a
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetExceptionInFlight(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper, bool enable)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool IsExceptionInFlight(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper)
		{
		}
	}
	.class public interface abstract IDkmStopDebuggingOperations
	{
		.method public virtual hidebysig newslot abstract 
			instance void Detach(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Terminate(class Microsoft.VisualStudio.Debugger.DkmProcess process, int32 exitCode)
		{
		}
	}
	.class public interface abstract IDkmStowedExceptionProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation[] GetStowedExceptions(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation GetNativeStowedException(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation GetManagedStowedException(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmSuppressOptimizationsEnableNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSuppressOptimizationsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmSymbolAlternateSourcePositionQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetAlternateSourcePosition(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags')
		{
		}
	}
	.class public interface abstract IDkmSymbolCompilerIdQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId GetCompilerId(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession)
		{
		}
	}
	.class public interface abstract IDkmSymbolCompilerIdQueryCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId GetCompilerIdCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession)
		{
		}
	}
	.class public interface abstract IDkmSymbolDisassemblyQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetDisassemblyLabel(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession)
		{
		}
	}
	.class public interface abstract IDkmSymbolDocumentCollectionQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] FindDocuments(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId sourceFileId)
		{
		}
	}
	.class public interface abstract IDkmSymbolDocumentSpanQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] FindSymbols(class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument resolvedDocument, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan textSpan, string text, [out] class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[]& symbolLocation)
		{
		}
	}
	.class public interface abstract IDkmSymbolFunctionResolver
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] Resolve(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest symbolFunctionResolutionRequest)
		{
		}
	}
	.class public interface abstract IDkmSymbolHiddenAttributeQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance void IsHiddenCode(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmSymbolLocator
	{
		.method public virtual hidebysig newslot abstract 
			instance void TryLoadSymbols(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetSymbolFilePath(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetSymbolStatusMessage(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance, bool excludeCommonErrors)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetSymbolLoadInformation(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmSymbolMemoryReader
	{
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ReadSymbols(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance)
		{
		}
	}
	.class public interface abstract IDkmSymbolPathChangeNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnSymbolPathChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmSymbolProviderCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetSteppingRanges(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary rangeBoundary, bool includeInline)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance bool HasLineInfo(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] GetEntryPointSymbols(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange GetCurrentStatementRange(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] GetFunctionInfo(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, string functionName)
		{
		}
	}
	.class public interface abstract IDkmSymbolQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance object GetSymbolInterface(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module, valuetype [System.Runtime]System.Guid interfaceID)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetSourcePosition(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags', class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession, [out] bool& startOfLine)
		{
		}
	}
	.class public interface abstract IDkmSymbolQueryCallback
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags', class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession, [out] bool& startOfLine)
		{
		}
	}
	.class public interface abstract IDkmSymbolStackWalk
	{
		.method public virtual hidebysig newslot abstract 
			instance void Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers, uint32 stackRangeSize)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers, uint32 stackRangeSize, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame WalkNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext, [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& nextRegisters)
		{
		}
	}
	.class public interface abstract IDkmTaskProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetTasks(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider, bool isRoot, uint32 requestCount, [out] uint32& scheduledTaskCount, [out] class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[]& items, [out] uint32& taskEnumFlags)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string[] GetPropertyNames(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[] GetChildTasks(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetTaskProperties(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task, uint32 radix, int32 fields, [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties& properties)
		{
		}
	}
	.class public interface abstract IDkmTaskProviderCreateNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnTaskProviderCreate(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmTaskProviderInitialize
	{
		.method public virtual hidebysig newslot abstract 
			instance void InitializeTaskProviders(class Microsoft.VisualStudio.Debugger.DkmProcess process)
		{
		}
	}
	.class public interface abstract IDkmTaskSynchronizationObjectProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject[] GetSynchronizationObjects(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task)
		{
		}
	}
	.class public interface abstract IDkmThreadContextOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetContext(class Microsoft.VisualStudio.Debugger.DkmThread thread, uint8[] context)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetContext(class Microsoft.VisualStudio.Debugger.DkmThread thread, int32 contextFlags, uint8[] context)
		{
		}
	}
	.class public interface abstract IDkmThreadCreateNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnThreadCreate(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmThreadCurrentWinRtExceptionQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetThreadCurrentWinRtErrorInfo(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmThreadDisplayPropertiesQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetThreadDisplayProperties(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmThread thread, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmThreadExitNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnThreadExit(class Microsoft.VisualStudio.Debugger.DkmThread thread, int32 exitCode, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmThreadLocationProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetCurrentLocation(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmThreadNameChangeNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnThreadNameChange(class Microsoft.VisualStudio.Debugger.DkmThread thread, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor)
		{
		}
	}
	.class public interface abstract IDkmThreadNameQuery
	{
		.method public virtual hidebysig newslot abstract 
			instance string GetThreadName(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmThreadStackRangeProvider
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange GetStackAddressRange(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmThreadSuspension
	{
		.method public virtual hidebysig newslot abstract 
			instance uint32 Suspend(class Microsoft.VisualStudio.Debugger.DkmThread thread, bool internalSuspension)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 Resume(class Microsoft.VisualStudio.Debugger.DkmThread thread, bool internalSuspension)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 GetSuspensionCount(class Microsoft.VisualStudio.Debugger.DkmThread thread, bool showInternal)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 GetDebuggerSuspensionCount(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
	.class public interface abstract IDkmTlsReadWrite
	{
		.method public virtual hidebysig newslot abstract 
			instance uint64 GetTlsValue(class Microsoft.VisualStudio.Debugger.DkmThread thread, int32 tlsIndex)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetTlsValue(class Microsoft.VisualStudio.Debugger.DkmThread thread, int32 tlsIndex, uint64 'value')
		{
		}
	}
	.class public interface abstract IDkmTraceSettingsNotification
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnTraceSettingsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
	}
	.class public interface abstract IDkmUserCodeDeterminer
	{
		.method public virtual hidebysig newslot abstract 
			instance bool ComputeUserStatus(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession, [out] bool& exceptionImplementation)
		{
		}
	}
	.class public interface abstract IDkmVirtualMemoryAllocator
	{
		.method public virtual hidebysig newslot abstract 
			instance uint64 AllocateVirtualMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, int32 size, int32 allocationType, int32 pageProtection)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void FreeVirtualMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, int32 size, int32 freeType)
		{
		}
	}
	.class public interface abstract IDkmVisualStudioServices
	{
		.method public virtual hidebysig newslot abstract 
			instance void PostUserMessage(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance uint32 DisplayUserMessagePrompt(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId[] GetCodeViewCompilers(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SendToVsService(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage, valuetype [System.Runtime]System.Guid vsService, bool isBlocking)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void GetLanguageSettings(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage language, [out] class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[]& settings)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string GetUserDocumentPath(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> GetProjectItemScriptBlocks(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument)
		{
		}
	}
	.class public interface abstract IDkmVisualStudioServices120
	{
		.method public virtual hidebysig newslot abstract 
			instance void DisplayUserMessagePrompt(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage, class Microsoft.VisualStudio.Debugger.DkmWorkList workList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult> completionRoutine)
		{
		}
	}
	.class public interface abstract IDkmVisualizationDataCompiler
	{
		.method public virtual hidebysig newslot abstract 
			instance void InitializeVisualizationData(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData visualizationDataObject, string[] visualizationFiles)
		{
		}
	}
	.class public interface abstract IDkmVolatileMemoryOperation
	{
		.method public virtual hidebysig newslot abstract 
			instance void VolatileReadMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] buffer)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void VolatileWriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process, uint64 address, uint8[] data)
		{
		}
	}
	.class public interface abstract IDkmVolatileThreadProperties
	{
		.method public virtual hidebysig newslot abstract 
			instance void GetVolatileProperties(class Microsoft.VisualStudio.Debugger.DkmThread thread, [out] int32& priority, [out] uint64& affinityMask)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags GetVolatileFlags(class Microsoft.VisualStudio.Debugger.DkmThread thread)
		{
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.CustomRuntimes
{
	.class public DkmCustomExceptionInformation
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7572c08d-ef31-438a-9324-21d72ad99c65') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalInformation()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid ExceptionCategory, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, string Name, uint32 Code, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation ImplementationException, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalInformation)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalInformation()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation::get_AdditionalInformation()
		}
	}
	.class public DkmCustomInstructionAddress
		extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9205f0c6-3471-83dc-bd08-54c4c7d5dbc8') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_EntityId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Offset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance ModuleInstance, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> EntityId, uint64 Offset, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_AdditionalData()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> EntityId()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_EntityId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_ModuleInstance()
		}
		.property instance uint64 Offset()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_Offset()
		}
	}
	.class public DkmCustomInstructionSymbol
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c154cde9-82a7-6e6f-f4f4-8dbb776da068') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_EntityId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Offset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, valuetype [System.Runtime]System.Guid RuntimeType, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> EntityId, uint64 Offset, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_AdditionalData()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> EntityId()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_EntityId()
		}
		.property instance uint64 Offset()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_Offset()
		}
	}
	.class public DkmCustomModuleInstance
		extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('28a2ee07-bdcf-31f8-66e9-09b958e66fe8') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance Create(string Name, string FullName, uint64 TimeDateStamp, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version, class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId, valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout, uint64 BaseAddress, uint32 LoadOrder, uint32 Size, string LoadContext, bool IsDisabled, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmCustomRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('83e44dea-5cac-3e7d-c980-118728716623') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.DefaultPort
{
	.class public sequential sealed DkmActivateBackgroundTaskAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmAppPackageId
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('40f5e02e-bbc4-3b2a-5595-51d3208fb72f') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform get_AppPlatform()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Create(valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform, string FullName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId::get_AppPlatform()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId::get_FullName()
		}
	}
	.class public DkmDeploymentCommand
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('301484b2-442b-a6f7-f258-48db3d9d121a') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_RemoteExecutable()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Arguments()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_CurrentDirectory()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, valuetype [System.Runtime]System.Guid SourceId, string RemoteExecutable, string Arguments, string CurrentDirectory, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Flags, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnProcessExit(int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnStdOut(string Text)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnStdErr(string Text)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Start()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Abort()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Arguments()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Arguments()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Connection()
		}
		.property instance string CurrentDirectory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_CurrentDirectory()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Flags()
		}
		.property instance string RemoteExecutable()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_RemoteExecutable()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_SourceId()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_UniqueId()
		}
	}
	.class public sealed DkmDeploymentCommandFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags CombineStdErr = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags ConsoleCodePage = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Default = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags ShowUI = int32(0x00000004)
	}
	.class public DkmDeviceInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('64bdfd1a-cb8a-31dc-a97d-b3e15116885a') }
		.method public hidebysig specialname 
			instance string get_DeviceFamily()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DeviceFamilyVersion()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DeviceForm()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo Create(string DeviceFamily, string DeviceFamilyVersion, string DeviceForm)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DeviceFamily()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo::get_DeviceFamily()
		}
		.property instance string DeviceFamilyVersion()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo::get_DeviceFamilyVersion()
		}
		.property instance string DeviceForm()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo::get_DeviceForm()
		}
	}
	.class public sequential sealed DkmDownloadFileAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmEnumerateBackgroundTasksAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid[] get_TaskIds()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_TaskNames()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [System.Runtime]System.Guid[] TaskIds, string[] TaskNames)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_ErrorCode()
		}
		.property instance valuetype [System.Runtime]System.Guid[] TaskIds()
		{
			.get instance valuetype [System.Runtime]System.Guid[] Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_TaskIds()
		}
		.property instance string[] TaskNames()
		{
			.get instance string[] Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_TaskNames()
		}
	}
	.class public DkmFileInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c255d11c-e40f-9be0-11ac-0f5da8427782') }
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FilePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Attributes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_CreationTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_LastAccessTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_LastWriteTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_FileSize()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo Create(string FileName, string FilePath, int32 Attributes, uint64 CreationTime, uint64 LastAccessTime, uint64 LastWriteTime, uint64 FileSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Attributes()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_Attributes()
		}
		.property instance uint64 CreationTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_CreationTime()
		}
		.property instance string FileName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FileName()
		}
		.property instance string FilePath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FilePath()
		}
		.property instance uint64 FileSize()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FileSize()
		}
		.property instance uint64 LastAccessTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_LastAccessTime()
		}
		.property instance uint64 LastWriteTime()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_LastWriteTime()
		}
	}
	.class public DkmFileTransferStream
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('cfeabf40-7ab2-7d44-c16d-ef23d4579e8c') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_RemoteFilePath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, string RemoteFilePath, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WriteFirst(uint8[] Content, uint64 TotalFileSize, uint64 LastWriteTime, bool OverwriteExisting)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WriteNext(uint8[] Content)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ReadFirst(void* ContentBuffer, int32 BufferSize, [out] int32& BytesRead, [out] uint64& LastWriteTime, [out] uint64& TotalFileSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ReadFirst(uint8[] ContentBuffer, [out] int32& BytesRead, [out] uint64& LastWriteTime, [out] uint64& TotalFileSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ReadNext(void* ContentBuffer, int32 BufferSize, [out] int32& BytesRead)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ReadNext(uint8[] ContentBuffer, [out] int32& BytesRead)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_Connection()
		}
		.property instance string RemoteFilePath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_RemoteFilePath()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_UniqueId()
		}
	}
	.class public DkmInstalledAppPackageInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('686d56ce-05cf-f74b-c723-7b0b4e2cd09d') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId get_AppPackageId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Version()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_LogoPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> get_Applications()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, string DisplayName, string Version, string LogoPath, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> Applications)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_AppPackageId()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> Applications()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_Applications()
		}
		.property instance string DisplayName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_DisplayName()
		}
		.property instance string LogoPath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_LogoPath()
		}
		.property instance string Version()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_Version()
		}
	}
	.class public DkmInstalledApplicationInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('220918fc-b335-72c8-16d2-4bfeaceee181') }
		.method public hidebysig specialname 
			instance string get_AppUserModelId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Executable()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SmallLogoPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BackgroundColor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_DefaultDebugEngine()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo Create(string AppUserModelId, string DisplayName, string Executable, string SmallLogoPath, string BackgroundColor, string Description, valuetype [System.Runtime]System.Guid DefaultDebugEngine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string AppUserModelId()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_AppUserModelId()
		}
		.property instance string BackgroundColor()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_BackgroundColor()
		}
		.property instance valuetype [System.Runtime]System.Guid DefaultDebugEngine()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_DefaultDebugEngine()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_Description()
		}
		.property instance string DisplayName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_DisplayName()
		}
		.property instance string Executable()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_Executable()
		}
		.property instance string SmallLogoPath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_SmallLogoPath()
		}
	}
	.class public sealed DkmPackageExecutionState
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Running = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Suspended = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Suspending = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Terminated = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Unknown = int32(0x00000000)
	}
	.class public sealed DkmPackagedAppPlatform
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform WindowsAppx = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform WindowsPhoneXAP = int32(0x00000001)
	}
	.class public sealed DkmProcessorFeatures
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures AMD3DNow = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures AVX = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures MMX = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures SSE = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures 'SSE2' = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures 'VFP32' = int32(0x00000020)
	}
	.class public DkmPublishedProgramInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('eaeb3217-af01-dcda-7d08-2cabbddc2351') }
		.method public hidebysig specialname 
			instance string get_FriendlyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> get_EngineIds()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo Create(string FriendlyName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineIds)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineIds()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo::get_EngineIds()
		}
		.property instance string FriendlyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo::get_FriendlyName()
		}
	}
	.class public sealed DkmRemoteAuthenticationMode
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Custom = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Kerberos = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode 'NTLM' = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode None = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode WindowsNegotiate = int32(0x00000000)
	}
	.class public sealed DkmRunningProcessFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags AppContainer = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags ClrNativeCompilationRuntimeLoaded = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags DebuggerAttached = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags HideFromDefaultProcessList = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags OtherUser = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags SecurityWarningOnAttach = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Wow64 = int32(0x00000001)
	}
	.class public DkmRunningProcessInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b7b99a64-a129-3356-e276-1a7873905ceb') }
		.method public hidebysig specialname 
			instance int32 get_Id()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_StartTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SessionId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UserName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_ClrVersions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CommandLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CurrentDirectory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_EnvironmentBlock()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_IntegrityLevel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> get_PublishedPrograms()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint16 get_ProcessorArchitecture()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId get_AppPackageId()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo Create(int32 Id, int64 StartTime, int32 SessionId, string Name, string Title, string UserName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> ClrVersions, string CommandLine, string CurrentDirectory, string EnvironmentBlock, int32 IntegrityLevel, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> PublishedPrograms, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Flags, uint16 ProcessorArchitecture, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_AppPackageId()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> ClrVersions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_ClrVersions()
		}
		.property instance string CommandLine()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_CommandLine()
		}
		.property instance string CurrentDirectory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_CurrentDirectory()
		}
		.property instance string EnvironmentBlock()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_EnvironmentBlock()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Flags()
		}
		.property instance int32 Id()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Id()
		}
		.property instance int32 IntegrityLevel()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_IntegrityLevel()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Name()
		}
		.property instance uint16 ProcessorArchitecture()
		{
			.get instance uint16 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_ProcessorArchitecture()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> PublishedPrograms()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_PublishedPrograms()
		}
		.property instance int32 SessionId()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_SessionId()
		}
		.property instance int64 StartTime()
		{
			.get instance int64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_StartTime()
		}
		.property instance string Title()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Title()
		}
		.property instance string UserName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_UserName()
		}
	}
	.class public sealed DkmRunningProcessInfoPropertyMask
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask AppPackageId = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask BasicInfoFlags = int32(0x00000400)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask ClrVersions = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CommandLine = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CoreClrPublishedProgram = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CurrentDirectory = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Empty = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask EnvironmentBlock = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask FilterFlags = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask IntegrityLevel = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Name = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask PublishedPrograms = int32(0x00002000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask SessionId = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask StartTime = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Title = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask UserIdentityFlags = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask UserName = int32(0x00000010)
	}
	.class public sequential sealed DkmShutDownAppPackageAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmStandardRemoteTransportConnection
		extends Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('97a0464d-a80e-ab40-233b-e55b49e3dfd9') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode get_AuthenticationMode()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_ProxyServer()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Abort()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode AuthenticationMode()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection::get_AuthenticationMode()
		}
		.property instance string ProxyServer()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection::get_ProxyServer()
		}
	}
	.class public sequential sealed DkmSuspendAppPackageAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmSystemInformation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0b539dba-077a-7055-b78c-44e3b1d35bba') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture get_ProcessorArchitecture()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_PageSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_OperatingSystemVersion()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint16 get_SuiteMask()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures get_ProcessorFeatures()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags get_MinidumpFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SystemDirectory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SystemWow64Directory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo get_DeviceInfo()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Create(valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture, int32 PageSize, int32 OperatingSystemVersion, uint16 SuiteMask, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Create(valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture, int32 PageSize, int32 OperatingSystemVersion, uint16 SuiteMask, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures, valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MinidumpFlags, string SystemDirectory, string SystemWow64Directory)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Create(valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture, int32 PageSize, int32 OperatingSystemVersion, uint16 SuiteMask, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures, valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MinidumpFlags, string SystemDirectory, string SystemWow64Directory, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo DeviceInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo DeviceInfo()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeviceInfo Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_DeviceInfo()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_Flags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MinidumpFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_MinidumpFlags()
		}
		.property instance int32 OperatingSystemVersion()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_OperatingSystemVersion()
		}
		.property instance int32 PageSize()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_PageSize()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_ProcessorArchitecture()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_ProcessorFeatures()
		}
		.property instance uint16 SuiteMask()
		{
			.get instance uint16 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SuiteMask()
		}
		.property instance string SystemDirectory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SystemDirectory()
		}
		.property instance string SystemWow64Directory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SystemWow64Directory()
		}
	}
	.class public sealed DkmSystemInformationFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags CanAccessFileSystem = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags CoreSystem = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Default = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags DumpFile = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Is64Bit = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags LaunchedInChamber = int32(0x00000010)
	}
	.class public DkmTransportConnection
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('37f756b6-9ea0-4c02-3f0a-99fb3a0f7a77') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Qualifier()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_Kind()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion get_ProtocolVersion()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection FindConnection(valuetype [System.Runtime]System.Guid UniqueId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection[] GetConnections()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess FindProcess(valuetype [System.Runtime]System.Guid UniqueId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess[] GetProcesses()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess FindLiveProcess(int32 Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess[] GetLiveProcesses()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest[] GetRequests()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ActivateAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform, string ActivationName, bool LaunchForDebugging, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SuspendAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ResumeAppPackage(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ShutDownAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetIsolatedStorageRootForApplication(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState GetAppPackageExecutionState(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EnumerateBackgroundTasks(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ActivateBackgroundTask(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, int32 SessionId, valuetype [System.Runtime]System.Guid TaskId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo[] EnumPackages()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DeployFile(string LocalFilePath, string RemoteFilePath, bool OverwriteExisting)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DownloadFile(string RemoteFilePath, string LocalFilePath, bool OverwriteExisting)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DownloadFile(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string RemoteFilePath, string LocalFilePath, bool OverwriteExisting, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DeleteFile(string RemoteFilePath)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetDNSName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateDirectory(string RemoteDirectoryPath)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveDirectory(string RemoteDirectoryPath, bool Recursive)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo[] GetFileListing(string RootDirectoryPath, string SearchWildcard, bool Recursive)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo[] EnumRunningProcesses(bool IncludeFromAllUsers, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask RequestedPropertyMask)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo GetRunningProcessInfo(int32 Id, int64 StartTime, bool IsDebuggee, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask RequestedPropertyMask)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TerminateRunningProcess(int32 Id, int64 StartTime, int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation GetSystemInformation(bool NativeSystemInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetClrVersionOfExecutable(string ExePath)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool QueryIsWOW64Executable(string ExePath)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetDefaultClrVersion()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FlushClosedObjectQueue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 TriggerPrefetch(string PackageFullName, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform Platform)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void RemoveAppPackageFromTaskbar(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, uint32 SessionId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ActivateAppPackageOnTargetMonitor(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform, string ActivationName, bool LaunchForDebugging, uint32 Monitor, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ActivateAppPackageWithStartupTask(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string ActivationName, bool LaunchForDebugging, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Flags()
		}
		.property instance valuetype [System.Runtime]System.Guid Kind()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Kind()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion ProtocolVersion()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_ProtocolVersion()
		}
		.property instance string Qualifier()
		{
			.get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Qualifier()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_UniqueId()
		}
	}
	.class public sealed DkmTransportConnectionFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags DefaultConnectionToTarget = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags LocalComputer = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags MarshallingRequired = int32(0x00000002)
	}
	.class public abstract sealed DkmTransportKind
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Local()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_PseudoRemote()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_StandardRemote()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid Local()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_Local()
		}
		.property valuetype [System.Runtime]System.Guid PseudoRemote()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_PseudoRemote()
		}
		.property valuetype [System.Runtime]System.Guid StandardRemote()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_StandardRemote()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Disassembly
{
	.class public DkmDisassembledInstruction
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0d808671-5c47-a9c5-fffb-5aecb558b2b4') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_InstructionPointer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_InstructionLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AddressOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CodeBytes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RawOpcode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RawOperands()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FormattedOpcode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FormattedOperands()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Symbol()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_DocumentPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> get_RegisterOperands()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ValidInstruction()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, uint64 InstructionPointer, uint32 InstructionLength, string Address, string AddressOffset, string CodeBytes, string RawOpcode, string RawOperands, string FormattedOpcode, string FormattedOperands, string Symbol, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition DocumentPosition, uint32 ByteOffset, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> RegisterOperands, bool ValidInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Address()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Address()
		}
		.property instance string AddressOffset()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_AddressOffset()
		}
		.property instance uint32 ByteOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_ByteOffset()
		}
		.property instance string CodeBytes()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_CodeBytes()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition DocumentPosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_DocumentPosition()
		}
		.property instance string FormattedOpcode()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_FormattedOpcode()
		}
		.property instance string FormattedOperands()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_FormattedOperands()
		}
		.property instance uint32 InstructionLength()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_InstructionLength()
		}
		.property instance uint64 InstructionPointer()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_InstructionPointer()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Process()
		}
		.property instance string RawOpcode()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RawOpcode()
		}
		.property instance string RawOperands()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RawOperands()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> RegisterOperands()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RegisterOperands()
		}
		.property instance string Symbol()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Symbol()
		}
		.property instance bool ValidInstruction()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_ValidInstruction()
		}
	}
	.class public sequential sealed DkmEffectiveAddress
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('143e24fc-8dcd-826c-1008-a3578f617a79') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 EffectiveAddress, uint32 OperandSize, valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags Flags)
		{
			ret
		}
		.field public initonly uint64 EffectiveAddress
		.field public initonly uint32 OperandSize
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags Flags
	}
	.class public sealed DkmEffectiveAddressFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags SegmentIsFS = int32(0x00000001)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Enc
{
	.class public sealed DkmNativeEncNotify
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify CompileEnd = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify CompileStart = int32(0x00000000)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Evaluation
{
	.class public DkmChildVisualizedExpression
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('08e6ff27-0cdf-ea67-dc1a-4fa958d3fbbd') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_EvaluationResult()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression get_Parent()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Index()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, valuetype [System.Runtime]System.Guid VisualizerId, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult EvaluationResult, class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression Parent, uint32 Index, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult EvaluationResult()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_EvaluationResult()
		}
		.property instance uint32 Index()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_Index()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression Parent()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_Parent()
		}
	}
	.class public sealed DkmClrCustomVisualizerAssemblyLocation
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Debuggee = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation SharedDirectory = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Unknown = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UserDirectory = int32(0x00000001)
	}
	.class public sealed DkmClrValueFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Error = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Synthetic = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Void = int32(0x00000004)
	}
	.class public sealed DkmCompileDisplayAttributeInternalAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompileDisplayAttributeInternalAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Error()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Error, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance string Error()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCompileDisplayAttributeInternalAsyncResult::get_Error()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmCompileDisplayAttributeInternalAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery Result()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery Microsoft.VisualStudio.Debugger.Evaluation.DkmCompileDisplayAttributeInternalAsyncResult::get_Result()
		}
	}
	.class public DkmCompiledCustomInspectionQuery
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('951e8d5e-e5f3-78d8-3492-0b2615b06e42') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Instructions()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid QueryKind, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Instructions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype [System.Runtime]System.Guid QueryKind, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Instructions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Instructions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery::get_Instructions()
		}
	}
	.class public abstract DkmCompiledInspectionQuery
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('47a09cc9-e122-16e1-9132-beda4e7b8025') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CompiledClrInspectionQuery = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CompiledClrLocalsQuery = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CustomQuery = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag DkmILQuery = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_QueryKind()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer get_DataContainer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_LanguageId()
		{
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Execute(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> Parameters, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, uint32 Timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& FailureReason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Execute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> Parameters, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, uint32 Timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string ResolveILFailureReason(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' ErrorCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_DataContainer()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_LanguageId()
		}
		.property instance valuetype [System.Runtime]System.Guid QueryKind()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_QueryKind()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_RuntimeInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_TagValue()
		}
	}
	.class public abstract sealed DkmCompiledInspectionQueryKind
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DkmIL()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DkmClrIL()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid DkmClrIL()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind::get_DkmClrIL()
		}
		.property valuetype [System.Runtime]System.Guid DkmIL()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind::get_DkmIL()
		}
	}
	.class public DkmCompiledVisualizationData
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3347c534-533c-275b-1828-d1dd73ba2fc0') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Initialize(string[] VisualizationFiles)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_Language()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_UniqueId()
		}
	}
	.class public sealed DkmCompiledVisualizationDataPriority
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Exclusive = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority High = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Low = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority None = int32(0x00000000)
	}
	.class public sequential sealed DkmCompilerId
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b0873194-c47f-a65a-5def-16644ebe23b8') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [System.Runtime]System.Guid VendorId, valuetype [System.Runtime]System.Guid LanguageId)
		{
			ret
		}
		.field public initonly valuetype [System.Runtime]System.Guid VendorId
		.field public initonly valuetype [System.Runtime]System.Guid LanguageId
	}
	.class public DkmCustomDataContainer
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('f9f8611d-e2ca-35c0-696a-eb4f7f38ee13') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer::get_UniqueId()
		}
	}
	.class public DkmCustomRawReturnValue
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('911c2fd8-96c3-e527-3e60-c2dc9c429d21') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue::get_Value()
		}
	}
	.class public DkmCustomUIVisualizerInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4dfdfab9-7dc9-9b57-f046-463c417add1c') }
		.method public hidebysig specialname 
			instance uint32 get_Id()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MenuName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Metric()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UISideVisualizerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UISideVisualizerAssemblyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation get_UISideVisualizerAssemblyLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DebuggeeSideVisualizerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DebuggeeSideVisualizerAssemblyName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo Create(uint32 Id, string MenuName, string Description, string Metric)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo Create(uint32 Id, string MenuName, string Description, string Metric, string UISideVisualizerTypeName, string UISideVisualizerAssemblyName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation, string DebuggeeSideVisualizerTypeName, string DebuggeeSideVisualizerAssemblyName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DebuggeeSideVisualizerAssemblyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerAssemblyName()
		}
		.property instance string DebuggeeSideVisualizerTypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerTypeName()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Description()
		}
		.property instance uint32 Id()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Id()
		}
		.property instance string MenuName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_MenuName()
		}
		.property instance string Metric()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Metric()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyLocation()
		}
		.property instance string UISideVisualizerAssemblyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyName()
		}
		.property instance string UISideVisualizerTypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerTypeName()
		}
	}
	.class public DkmDataAddress
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('90d3adc4-f34b-4b9e-83d3-4ce6f6bcbde2') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, uint64 Value, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_InstructionAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_RuntimeInstance()
		}
		.property instance uint64 Value()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_Value()
		}
	}
	.class public sealed DkmEvaluateExpressionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_ResultObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult::get_ResultObject()
		}
	}
	.class public sealed DkmEvaluateReturnValueAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_ResultObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult::get_ResultObject()
		}
	}
	.class public sealed DkmEvaluateReturnValueAsyncResult2
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2 CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_ResultObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2::get_ResultObject()
		}
	}
	.class public sealed DkmEvaluationEnumAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult::get_Items()
		}
	}
	.class public sealed DkmEvaluationFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags AllowImplicitVariables = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags DesignTime = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags DynamicView = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ForceEvaluationNow = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ForceRealFuncEval = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags HideNonPublicMembers = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoExpansion = int32(0x00010000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoFormatting = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoFuncEval = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoQuotes = int32(0x00002000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoRawView = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoSideEffects = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoToString = int32(0x00000400)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ResultsOnly = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ShowValueRaw = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags TreatAsExpression = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags TreatFunctionAsAddress = int32(0x00000002)
	}
	.class public abstract DkmEvaluationResult
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a017f790-1e94-73fc-a4b5-53278ec5548b') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag FailedResult = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag IntermediateResult = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag SuccessResult = int32(0x00000000)
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext get_InspectionContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_StackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetChildren(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, int32 InitialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetValueAsString(string Value, int32 Timeout, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetUnderlyingString()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateObjectId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void DestroyObjectId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_FullName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_InspectionContext()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_Language()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_StackFrame()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_TagValue()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_UniqueId()
		}
	}
	.class public sealed DkmEvaluationResultAccessType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Final = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Internal = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Private = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Protected = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Public = int32(0x00000001)
	}
	.class public sealed DkmEvaluationResultCategory
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory BaseClass = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Class = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Data = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Event = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory InnerClass = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Interface = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Method = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory MostDerivedClass = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Other = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Property = int32(0x00000004)
	}
	.class public DkmEvaluationResultEnumContext
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8a77c186-e7a6-31bc-b218-d7ea66212f8b') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_StackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext get_InspectionContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext Create(int32 Count, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetItems(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, int32 StartIndex, int32 Count, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_Count()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_InspectionContext()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_Language()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_StackFrame()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_UniqueId()
		}
	}
	.class public sealed DkmEvaluationResultFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Address = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Boolean = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags BooleanTrue = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags CanHaveObjectId = int32(0x00000400)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags CrossThreadDependency = int32(0x00000800)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ExceptionThrown = int32(0x00008000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Expandable = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ExpandableError = int32(0x00004000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags HasObjectId = int32(0x00000200)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ILInterpreter = int32(0x00000080)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Invalid = int32(0x00001000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags IsBuiltInType = int32(0x00020000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags RawString = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ReadOnly = int32(0x00000040)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ReturnValue = int32(0x00010000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags SideEffect = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags UnflushedSideEffects = int32(0x00000100)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Visualized = int32(0x00002000)
	}
	.class public sealed DkmEvaluationResultStorageType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Global = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Register = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Static = int32(0x00000002)
	}
	.class public sealed DkmEvaluationResultTypeModifierFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Constant = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Synchronized = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Virtual = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Volatile = int32(0x00000008)
	}
	.class public sealed DkmExecuteQueryAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] get_Results()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' get_FailureReason()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Results, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureReason)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_ErrorCode()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureReason()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_FailureReason()
		}
		.property instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Results()
		{
			.get instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_Results()
		}
	}
	.class public abstract DkmExpressionValueHome
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b39a3432-f736-a099-a999-08b0bd3c13bf') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag FakeValueHome = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag PointerValueHome = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag get_TagValue()
		{
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome::get_TagValue()
		}
	}
	.class public DkmFailedEvaluationResult
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('066fdcd5-e1d5-a0ba-95c4-f4c4973557fc') }
		.method public hidebysig specialname 
			instance string get_ErrorMessage()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, string Name, string FullName, string ErrorMessage, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, string Name, string FullName, string ErrorMessage, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags, string Type, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string ErrorMessage()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_ErrorMessage()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_Flags()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_Type()
		}
	}
	.class public DkmFakeValueHome
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c9ee3ff6-d57e-80e4-f57e-e00fad2f7fab') }
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome Create(uint64 Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome::get_Address()
		}
	}
	.class public sealed DkmFuncEvalFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags AllowStoppingEvents = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags RunAllThreads = int32(0x00000002)
	}
	.class public sealed DkmGetChildrenAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] get_InitialChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext get_EnumContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] InitialChildren, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_EnumContext()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] InitialChildren()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_InitialChildren()
		}
	}
	.class public sealed DkmGetFrameArgumentsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] get_Arguments()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Arguments)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Arguments()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult::get_Arguments()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetFrameLocalsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext get_EnumContext()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult::get_EnumContext()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetFrameNameAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FrameName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string FrameName)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult::get_ErrorCode()
		}
		.property instance string FrameName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult::get_FrameName()
		}
	}
	.class public sealed DkmGetFrameReturnTypeAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ReturnType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string ReturnType)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult::get_ErrorCode()
		}
		.property instance string ReturnType()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult::get_ReturnType()
		}
	}
	.class public sealed DkmGetLanguageSettingsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] get_Settings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] Settings)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] Settings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult::get_Settings()
		}
	}
	.class public DkmILContext
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0791dedd-cf53-fb48-30ad-66b9bb8699a6') }
		.class nested public sealed ThreadOverride
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(uint64 ThreadId)
			{
				ret
			}
			.field public initonly uint64 ThreadId
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride get_ThreadOverridePart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_StackFrame()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer get_DataContainer()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride ThreadOverride)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride ThreadOverride)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_DataContainer()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_StackFrame()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride ThreadOverridePart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_ThreadOverridePart()
		}
	}
	.class public DkmInspectionContext
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0807c826-3338-dd99-2f3a-202ba8fb9da7') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Timeout()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags get_EvaluationFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags get_FuncEvalFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Radix()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue get_ReturnValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData get_AdditionalVisualizationData()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority get_AdditionalVisualizationDataPriority()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> get_ReturnValues()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint32 Timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, uint32 Radix, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint32 Timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, uint32 Radix, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData AdditionalVisualizationData, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority AdditionalVisualizationDataPriority)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint32 Timeout, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags, uint32 Radix, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData AdditionalVisualizationData, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority AdditionalVisualizationDataPriority, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> ReturnValues)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateExpressionOnThreads(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> Threads, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateExpression(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFrameLocals(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFrameArguments(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFrameName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFrameReturnType(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateReturnValue(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue RawReturnValue, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery GetClrLocalVariableQuery(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress, bool ArgumentsOnly)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetTypeName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ClrType, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FormatSpecifiers)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateReturnValue2(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer RawReturnValue, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData AdditionalVisualizationData()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_AdditionalVisualizationData()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority AdditionalVisualizationDataPriority()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_AdditionalVisualizationDataPriority()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_EvaluationFlags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_FuncEvalFlags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Language()
		}
		.property instance uint32 Radix()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Radix()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_ReturnValue()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> ReturnValues()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_ReturnValues()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_RuntimeInstance()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Thread()
		}
		.property instance uint32 Timeout()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Timeout()
		}
	}
	.class public DkmInspectionSession
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('79035fe3-c25f-1535-6595-2b6b79621f50') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer FindReturnValueContainer(int32 Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer[] GetReturnValueContainers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession::get_UniqueId()
		}
	}
	.class public DkmIntermediateEvaluationResult
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1fe38f12-16e3-0c9d-7bdb-91aabf324221') }
		.method public hidebysig specialname 
			instance string get_Expression()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_IntermediateLanguage()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_TargetRuntime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, string Name, string FullName, string Expression, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage IntermediateLanguage, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance TargetRuntime, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Expression()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_Expression()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage IntermediateLanguage()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_IntermediateLanguage()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance TargetRuntime()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_TargetRuntime()
		}
	}
	.class public DkmLanguage
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7dbbd573-0a29-3ba3-6f5d-42c8faf933e0') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_Id()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Create(string Name, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetLanguageSettings([out] class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[]& Settings)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetLanguageSettings(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetEEMetricFile(string MetricName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Id()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage::get_Id()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage::get_Name()
		}
	}
	.class public DkmLanguageExpression
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dce7ad4c-45b3-1220-86da-a2cd4ca64ab0') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags get_CompilationFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Text()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags, string Text, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CompileExpression(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, [out] string& Error, [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CompileAssignment(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult LValue, [out] string& Error, [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CompileDisplayAttribute(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 Token, [out] string& Error, [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CompileDisplayAttributeInternal(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 Token, [out] string& Error, [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CompileDisplayAttributeInternal(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance, int32 Token, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompileDisplayAttributeInternalAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_CompilationFlags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_Language()
		}
		.property instance string Text()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_Text()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_UniqueId()
		}
	}
	.class public abstract sealed DkmLanguageId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_VB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_JScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_C()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Cpp()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_SQL()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Script()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_CSharp()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Fortran()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Cobol()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Pascal()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Java()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ILAssembly()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_CausalityBreakpoint()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_MethodId()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClientScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_HLSL()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid C()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_C()
		}
		.property valuetype [System.Runtime]System.Guid CSharp()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_CSharp()
		}
		.property valuetype [System.Runtime]System.Guid CausalityBreakpoint()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_CausalityBreakpoint()
		}
		.property valuetype [System.Runtime]System.Guid ClientScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_ClientScript()
		}
		.property valuetype [System.Runtime]System.Guid Cobol()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Cobol()
		}
		.property valuetype [System.Runtime]System.Guid Cpp()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Cpp()
		}
		.property valuetype [System.Runtime]System.Guid Fortran()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Fortran()
		}
		.property valuetype [System.Runtime]System.Guid 'HLSL'()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_HLSL()
		}
		.property valuetype [System.Runtime]System.Guid ILAssembly()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_ILAssembly()
		}
		.property valuetype [System.Runtime]System.Guid JScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_JScript()
		}
		.property valuetype [System.Runtime]System.Guid Java()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Java()
		}
		.property valuetype [System.Runtime]System.Guid MethodId()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_MethodId()
		}
		.property valuetype [System.Runtime]System.Guid Pascal()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Pascal()
		}
		.property valuetype [System.Runtime]System.Guid SQL()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_SQL()
		}
		.property valuetype [System.Runtime]System.Guid Script()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Script()
		}
		.property valuetype [System.Runtime]System.Guid VB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_VB()
		}
	}
	.class public DkmLanguageInstructionAddress
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('42745737-3842-1f94-1ea8-2c310a3a61c1') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Compile(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult& Error)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompileCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetMethodName(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags GetStepIntoFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_Address()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_Language()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_RuntimeInstance()
		}
	}
	.class public DkmNativeRawReturnValue
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('694dbdcd-80b2-9743-a624-3629d195f5b4') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> get_Registers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Memory()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> Registers, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Memory)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Memory()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue::get_Memory()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> Registers()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue::get_Registers()
		}
	}
	.class public DkmNativeReturnValueRegister
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b2c0ed0b-6a96-c138-034a-49a67ab87104') }
		.method public hidebysig specialname 
			instance int32 get_Identifier()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister Create(int32 Identifier, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Identifier()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister::get_Identifier()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister::get_Value()
		}
	}
	.class public DkmPointerValueHome
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bea748f3-61f0-5175-ef91-1b4b1f6e4cca') }
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome Create(uint64 Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome::get_Address()
		}
	}
	.class public DkmRawManagedReturnValue
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bac1944f-d24a-e177-8b80-48d02d5b4839') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext get_Context()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom, class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Context)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Context()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue::get_Context()
		}
	}
	.class public abstract DkmRawReturnValue
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('eecc8d2d-81c3-9823-e89f-1438471e579d') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag CustomRawReturnValue = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag ManagedReturnValue = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag NativeRawReturnValue = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_ReturnFrom()
		{
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue::get_ReturnFrom()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue::get_TagValue()
		}
	}
	.class public DkmRawReturnValueContainer
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b7478b79-2e9f-083d-2757-f1b2f20df1f5') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Id()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue get_RawReturnValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, int32 Id, class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue RawReturnValue, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Id()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_Id()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue RawReturnValue()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_RawReturnValue()
		}
	}
	.class public DkmRootVisualizedExpression
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('78ad085c-7b73-5937-a063-e2c7f4ee6556') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ArrayLength()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, valuetype [System.Runtime]System.Guid VisualizerId, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Name, string FullName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Flags, uint32 ArrayLength, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, valuetype [System.Runtime]System.Guid VisualizerId, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Name, string FullName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Flags, uint32 ArrayLength, string Type, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ArrayLength()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_ArrayLength()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Flags()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_FullName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Module()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Name()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Type()
		}
	}
	.class public sealed DkmRootVisualizedExpressionFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsArray = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsPointer = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsReference = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags None = int32(0x00000001)
	}
	.class public DkmSuccessEvaluationResult
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5d948996-5805-1795-8b6b-535f0bc32bde') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_EditableValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory get_Category()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType get_Access()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType get_StorageType()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags get_TypeModifierFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress get_Address()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> get_CustomUIVisualizers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> get_ExternalModules()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, string Name, string FullName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags, string Value, string EditableValue, string Type, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags, class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> ExternalModules, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateDebuggeeSideVisualizerObject(uint32 SelectedVisualizerIndex, [out] string& ExceptionType, [out] string& ExceptionStackTrace, [out] string& ExceptionMessage)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool DestroyDebuggeeSideVisualizerObject()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ResolveAssembly(string AssemblyName, [out] string& AssemblyPath, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& AssemblyBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetDataFromDebuggeeSideVisualizer([out] string& ExceptionType, [out] string& ExceptionStackTrace, [out] string& ExceptionMessage)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> TransferDataToDebuggeeSideVisualizer(uint8[] DataIn, [out] string& ExceptionType, [out] string& ExceptionStackTrace, [out] string& ExceptionMessage)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CreateReplacementObjectOnDebuggeeSideVisualizer(uint8[] DataIn, [out] string& ExceptionType, [out] string& ExceptionStackTrace, [out] string& ExceptionMessage)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetClrValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Access()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Address()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Category()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_CustomUIVisualizers()
		}
		.property instance string EditableValue()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_EditableValue()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> ExternalModules()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_ExternalModules()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Flags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_StorageType()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Type()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_TypeModifierFlags()
		}
		.property instance string Value()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Value()
		}
	}
	.class public sealed DkmVariableInfoFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags FullNames = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Names = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags TypeAliases = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Types = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Values = int32(0x00000010)
	}
	.class public abstract sealed DkmVendorId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Microsoft()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid Microsoft()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVendorId::get_Microsoft()
		}
	}
	.class public abstract DkmVisualizedExpression
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2db1132d-77a6-ae00-a7f7-b2c910327b56') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag ChildVisualizedExpression = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag RootVisualizedExpression = int32(0x00000000)
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext get_InspectionContext()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_VisualizerId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_StackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome get_ValueHome()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateVisualizedExpression([out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& ResultObject)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void UseDefaultEvaluationBehavior([out] bool& UseDefaultEvaluationBehavior, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& DefaultEvaluationResult)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetChildren(int32 InitialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& InitialChildren, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& EnumContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext, int32 StartIndex, int32 Count, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& Items)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetValueAsString(string Value, int32 Timeout, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetUnderlyingString()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetSymbolInterface(valuetype [System.Runtime]System.Guid TypeSymbolInterfaceId, [out] object& TypeSymbolInterface)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateExpressionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& ResultObject)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string CreateDefaultChildFullName(int32 Index)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetChildrenCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult, int32 InitialRequestSize, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& InitialChildren, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& EnumContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetItemsCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext, int32 StartIndex, int32 Count, [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& Items)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetValueAsStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult, string Value, int32 Timeout, [out] string& ErrorText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetUnderlyingStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_InspectionContext()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_InspectionSession()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_SourceId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_StackFrame()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_TagValue()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_UniqueId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_ValueHome()
		}
		.property instance valuetype [System.Runtime]System.Guid VisualizerId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_VisualizerId()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation
{
	.class public sealed DkmClrCompilationResultFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags BoolResult = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags PotentialSideEffect = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags ReadOnlyResult = int32(0x00000002)
	}
	.class public DkmClrCustomTypeInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('24ac6f62-f3f8-1f2f-52db-986e3e96f38e') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_PayloadTypeId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Payload()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo Create(valuetype [System.Runtime]System.Guid PayloadTypeId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Payload)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Payload()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo::get_Payload()
		}
		.property instance valuetype [System.Runtime]System.Guid PayloadTypeId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo::get_PayloadTypeId()
		}
	}
	.class public DkmClrDebuggerBrowsableAttribute
		extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('43eb3a78-3101-f06f-6c8c-aed3dc61b616') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState get_State()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType, string TargetMember, valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState State)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState State()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute::get_State()
		}
	}
	.class public sealed DkmClrDebuggerBrowsableAttributeState
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Collapsed = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Never = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState RootHidden = int32(0x00000002)
	}
	.class public DkmClrDebuggerDisplayAttribute
		extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dc405fce-5688-d055-6378-4c4b40f0f95c') }
		.method public hidebysig specialname 
			instance string get_OriginatingAssemblyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_OriginatingAssemblyPublicKeyToken()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType, string TargetMember, string OriginatingAssemblyName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> OriginatingAssemblyPublicKeyToken, string Value, string Name, string TypeName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_Name()
		}
		.property instance string OriginatingAssemblyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyName()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> OriginatingAssemblyPublicKeyToken()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyPublicKeyToken()
		}
		.property instance string TypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_TypeName()
		}
		.property instance string Value()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_Value()
		}
	}
	.class public DkmClrDebuggerTypeProxyAttribute
		extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('76d380fb-f2af-56dc-228a-86ebfc5eec61') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType get_ProxyType()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType, string TargetMember, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ProxyType)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ProxyType()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute::get_ProxyType()
		}
	}
	.class public DkmClrDebuggerVisualizerAttribute
		extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('cd33e5a2-b44e-289c-67b0-97a054621689') }
		.method public hidebysig specialname 
			instance string get_UISideVisualizerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_UISideVisualizerAssemblyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation get_UISideVisualizerAssemblyLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DebuggeeSideVisualizerTypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DebuggeeSideVisualizerAssemblyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_VisualizerDescription()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType, string TargetMember, string UISideVisualizerTypeName, string UISideVisualizerAssemblyName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation, string DebuggeeSideVisualizerTypeName, string DebuggeeSideVisualizerAssemblyName, string VisualizerDescription)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DebuggeeSideVisualizerAssemblyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerAssemblyName()
		}
		.property instance string DebuggeeSideVisualizerTypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerTypeName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyLocation()
		}
		.property instance string UISideVisualizerAssemblyName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyName()
		}
		.property instance string UISideVisualizerTypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerTypeName()
		}
		.property instance string VisualizerDescription()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_VisualizerDescription()
		}
	}
	.class public abstract DkmClrEvalAttribute
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('24121b3a-c9a2-3977-09bd-1a2cdc550537') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerBrowsableAttribute = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerDisplayAttribute = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerTypeProxyAttribute = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerVisualizerAttribute = int32(0x00000003)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType get_TargetType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TargetMember()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance get_ModuleInstance()
		{
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_ModuleInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TagValue()
		}
		.property instance string TargetMember()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TargetMember()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TargetType()
		}
	}
	.class public DkmClrLocalVariableInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d1f5c36a-d669-2b14-c996-a6fd28e08cda') }
		.method public hidebysig specialname 
			instance string get_VariableName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MethodName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags get_CompilationFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory get_ResultCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo get_CustomTypeInfo()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo Create(string VariableName, string FullName, string MethodName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_CompilationFlags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_CustomTypeInfo()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_FullName()
		}
		.property instance string MethodName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_MethodName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_ResultCategory()
		}
		.property instance string VariableName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_VariableName()
		}
	}
	.class public DkmClrValue
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8186570c-2529-edb5-ef0b-4e485f902e89') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession get_InspectionSession()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory get_Category()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType get_Access()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType get_StorageType()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags get_TypeModifierFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsNull()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance object get_HostObjectValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame get_StackFrame()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags get_EvalFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags get_ValueFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_NativeComPointer()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress get_Address()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Alias()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> get_ArrayDimensions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> get_ArrayLowerBounds()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Type, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags, bool IsNull, object HostObjectValue, class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags EvalFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags ValueFlags, uint64 NativeComPointer, class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address, string Alias, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> ArrayDimensions, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> ArrayLowerBounds, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetValueString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FormatSpecifiers)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool HasUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetResult(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType DeclaredType, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FormatSpecifiers, string ResultName, string ResultFullName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string EvaluateToString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EvaluateDebuggerDisplayString(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType, string FormatString, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateProxyType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateResultsViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Clr.DkmClrType EnumerableType)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue InstantiateDynamicViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetMemberValue(string MemberName, int32 MemberType, string ParentTypeName, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue GetArrayElement(int32[] Index, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue Dereference(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Access()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Address()
		}
		.property instance string Alias()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Alias()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> ArrayDimensions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ArrayDimensions()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> ArrayLowerBounds()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<int32> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ArrayLowerBounds()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Category()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags EvalFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_EvalFlags()
		}
		.property instance object HostObjectValue()
		{
			.get instance object Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_HostObjectValue()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_InspectionSession()
		}
		.property instance bool IsNull()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_IsNull()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Language()
		}
		.property instance uint64 NativeComPointer()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_NativeComPointer()
		}
		.property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame()
		{
			.get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_StackFrame()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_StorageType()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Type()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Type()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_TypeModifierFlags()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_UniqueId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags ValueFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ValueFlags()
		}
	}
	.class public DkmCompiledClrInspectionQuery
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('db5318eb-4272-2f7d-0a92-3697769aba6b') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Binary()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MethodName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_FormatSpecifiers()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags get_CompilationFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory get_ResultCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType get_Access()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType get_StorageType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags get_TypeModifierFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo get_CustomTypeInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Binary, string TypeName, string MethodName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FormatSpecifiers, valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags, class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Execute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, string ExpressionName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_Access()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Binary()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_Binary()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_CompilationFlags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo CustomTypeInfo()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCustomTypeInfo Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_CustomTypeInfo()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> FormatSpecifiers()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_FormatSpecifiers()
		}
		.property instance string MethodName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_MethodName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_ResultCategory()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_StorageType()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_TypeModifierFlags()
		}
		.property instance string TypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_TypeName()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_UniqueId()
		}
	}
	.class public DkmCompiledClrLocalsQuery
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('cff3eb78-ae76-a013-0883-b6da3594048e') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Binary()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> get_LocalInfo()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Binary, string TypeName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> LocalInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetLocalValues(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, int32 FirstLocalIndex, int32 Count, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Binary()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_Binary()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> LocalInfo()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_LocalInfo()
		}
		.property instance string TypeName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_TypeName()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_UniqueId()
		}
	}
	.class public sealed DkmEvaluateDebuggerDisplayStringAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult::get_ErrorCode()
		}
		.property instance string Result()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult::get_Result()
		}
	}
	.class public sealed DkmEvaluationAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult::get_Result()
		}
	}
	.class public sealed DkmExecuteClrInspectionQueryAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteClrInspectionQueryAsyncResult::get_Result()
		}
	}
	.class public sealed DkmGetLocalValuesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] get_Items()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult::get_Items()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Evaluation.Group
{
	.class public DkmContextGroupEvaluationILResult
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2bed0f45-7abe-5710-434c-3a254db68898') }
		.method public hidebysig specialname 
			instance int32 get_EvaluationResults()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> get_ResultData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Create(int32 EvaluationResults, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> ResultData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 EvaluationResults()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult::get_EvaluationResults()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> ResultData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult::get_ResultData()
		}
	}
	.class public abstract DkmContextGroupEvaluationResult
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bb891190-1064-c1b9-132e-f2e637c597e0') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag FailedContextGroupEvalResult = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag SuccessContextGroupEvalResult = int32(0x00000000)
		}
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag get_TagValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> get_ThreadIds()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_EvaluationResults()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FullName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 EvaluationResults()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_EvaluationResults()
		}
		.property instance string FullName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_FullName()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_RuntimeInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_TagValue()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> ThreadIds()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_ThreadIds()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_UniqueId()
		}
	}
	.class public sealed DkmEvaluateExpressionOnThreadsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> get_Results()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> Results)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult::get_ErrorCode()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> Results()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult::get_Results()
		}
	}
	.class public sealed DkmExecuteQueryOnThreadsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Result()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult::get_Result()
		}
	}
	.class public DkmFailedContextGroupEvaluationResult
		extends Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bcbf5652-8501-77e0-2256-0e6455e7909a') }
		.method public hidebysig specialname 
			instance string get_ErrorMessage()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_HasSideEffects()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> ThreadIds, int32 EvaluationResults, string Name, string FullName, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, string ErrorMessage, bool HasSideEffects, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string ErrorMessage()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult::get_ErrorMessage()
		}
		.property instance bool HasSideEffects()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult::get_HasSideEffects()
		}
	}
	.class public DkmILParameterValueCollection
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('79c52e77-96fa-6709-ca94-85d3a8ae6a5e') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> get_Parameters()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> Parameters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> Parameters()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection::get_Parameters()
		}
	}
	.class public DkmSuccessContextGroupEvaluationResult
		extends Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0f911a5f-f32c-2647-470c-5524bac4b351') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_Values()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory get_Category()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType get_Access()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType get_StorageType()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags get_TypeModifierFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> get_CustomUIVisualizers()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> ThreadIds, int32 EvaluationResults, string Name, string FullName, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Values, string Type, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Access()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Category()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_CustomUIVisualizers()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Flags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_StorageType()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Type()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_TypeModifierFlags()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Values()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Values()
		}
	}
	.class public DkmThreadEvaluationResultCollection
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5abed340-3864-41c5-af3c-486f0d0cb101') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'> get_Results()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' get_FailureReason()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'> Results, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureReason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureReason()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection::get_FailureReason()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'> Results()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection::get_Results()
		}
	}
}
.namespace 'Microsoft.VisualStudio.Debugger.Evaluation.IL'
{
	.class public DkmCompiledILInspectionQuery
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b004e1ed-1890-adca-c358-d4fd722ecd98') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'> get_Instructions()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery' Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'> Instructions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery' Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'> Instructions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult ExecuteQueryOnThreads(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> Threads, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> Parameters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ExecuteQueryOnThreads(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> Threads, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> Parameters, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'> Instructions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery'::get_Instructions()
		}
	}
	.class public DkmILAdd
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8cea2e5c-6a04-4523-4dad-b55f4052fc33') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd'::get_Type()
		}
	}
	.class public DkmILAmpAdjustBufferTag
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('502429a9-011b-79f2-cd30-a5d0536c0376') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAmpAdjustBufferTag' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILBeginTry
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('16f727a6-1a24-9c23-11b3-1a4cfe666cc6') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'> get_CatchBlocks()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry' Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'> CatchBlocks)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'> CatchBlocks()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry'::get_CatchBlocks()
		}
	}
	.class public DkmILBitAnd
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1c046c38-4667-3b0c-3387-6efc9b66c74e') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd'::get_Type()
		}
	}
	.class public DkmILBitFieldRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9b7942ff-9ac4-effb-46a9-8f06682d8472') }
		.method public hidebysig specialname 
			instance uint32 get_BitPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NumBits()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead' Create(uint32 BitPosition, uint32 NumBits, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 BitPosition()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead'::get_BitPosition()
		}
		.property instance uint32 NumBits()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead'::get_NumBits()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead'::get_Type()
		}
	}
	.class public DkmILBitFieldReadFromBytes
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('795365b6-659e-619a-ad13-37942b3f7788') }
		.method public hidebysig specialname 
			instance uint32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_BitPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NumBits()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes' Create(uint32 ByteOffset, uint32 BitPosition, uint32 NumBits, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 BitPosition()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes'::get_BitPosition()
		}
		.property instance uint32 ByteOffset()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes'::get_ByteOffset()
		}
		.property instance uint32 NumBits()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes'::get_NumBits()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes'::get_Type()
		}
	}
	.class public DkmILBitFieldWrite
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2be85ffe-5c9c-7f41-cef6-cd2c051e2ee7') }
		.method public hidebysig specialname 
			instance uint32 get_BitPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NumBits()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite' Create(uint32 BitPosition, uint32 NumBits)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 BitPosition()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite'::get_BitPosition()
		}
		.property instance uint32 NumBits()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite'::get_NumBits()
		}
	}
	.class public DkmILBitFieldWriteToBytes
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('470db7c1-3e41-3dde-ac43-bf52c441847d') }
		.method public hidebysig specialname 
			instance uint32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_BitPosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_NumBits()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes' Create(uint32 ByteOffset, uint32 BitPosition, uint32 NumBits)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 BitPosition()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes'::get_BitPosition()
		}
		.property instance uint32 ByteOffset()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes'::get_ByteOffset()
		}
		.property instance uint32 NumBits()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes'::get_NumBits()
		}
	}
	.class public DkmILBitNot
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ead1642b-da0a-3e0e-0f8c-ab1c3279fb0f') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot'::get_Type()
		}
	}
	.class public DkmILBitOr
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('59c33aa2-28f3-0da3-ed3a-676ae57f6470') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr'::get_Type()
		}
	}
	.class public DkmILBitShiftLeft
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9e02b526-a3d3-1eb3-eaf5-0e817af4e47d') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft'::get_Type()
		}
	}
	.class public DkmILBitShiftRight
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8b4645e9-19a8-ba08-9554-3f17f197f478') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight'::get_Type()
		}
	}
	.class public DkmILBitXor
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9f0eb985-42c0-fbc0-1d85-2371aca7e7c1') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor'::get_Type()
		}
	}
	.class public sealed DkmILCallingConvention
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' CDecl = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' FastCall = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' StdCall = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' ThisCall = int32(0x00000002)
	}
	.class public DkmILCatchBlock
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1e8dd3ff-e859-f0c7-17a4-a59e0b7d7c62') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Target()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' ErrorCode, int32 Target)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' ErrorCode()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'::get_ErrorCode()
		}
		.property instance int32 Target()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock'::get_Target()
		}
	}
	.class public DkmILCheckTimeout
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('172f1d3a-23c9-6271-d5d2-6646bf7054ca') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCheckTimeout' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILCompareEqual
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b7d7d75b-054e-16de-e7ac-157725ddf51c') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual'::get_Type()
		}
	}
	.class public DkmILCompareGreaterThan
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('87da7a59-d3c5-2a9c-098a-b036d51c2bb6') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan'::get_Type()
		}
	}
	.class public DkmILCompareGreaterThanOrEqual
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8b58921f-dea7-4cbc-b533-8211e74e0d46') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual'::get_Type()
		}
	}
	.class public DkmILCompareLessThan
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ed47674b-a628-ee40-8e2c-a7282e82f593') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan'::get_Type()
		}
	}
	.class public DkmILCompareLessThanOrEqual
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a8439ea9-e9e0-7669-8d8e-38780379f045') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual'::get_Type()
		}
	}
	.class public DkmILCompareNotEqual
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('26714063-5d3c-d8f5-a948-d903c3cd8702') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual'::get_Type()
		}
	}
	.class public DkmILConvert
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('fe9357e0-21e3-b8fb-993e-9abc312fa934') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_OriginalType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_TargetType()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' OriginalType, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' TargetType)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' OriginalType()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert'::get_OriginalType()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' TargetType()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert'::get_TargetType()
		}
	}
	.class public DkmILDivide
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('71a11e07-4158-8259-9f50-f764b86b0835') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide'::get_Type()
		}
	}
	.class public DkmILDuplicateTop
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('75aea7e7-c6a1-78cf-bee0-c6025b37a868') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDuplicateTop' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILEndTry
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('e67ca9b0-423e-11e2-fa72-fef237717a9a') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEndTry' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILEvaluationResult
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('892ad886-2235-9411-b588-a1da20887729') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ResultBytes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsPseudoAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_DereferencedBytes()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult' Create(valuetype [System.Runtime]System.Guid SourceId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ResultBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult' Create(valuetype [System.Runtime]System.Guid SourceId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ResultBytes, bool IsPseudoAddress, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> DereferencedBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> DereferencedBytes()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'::get_DereferencedBytes()
		}
		.property instance bool IsPseudoAddress()
		{
			.get instance bool 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'::get_IsPseudoAddress()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ResultBytes()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'::get_ResultBytes()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'::get_SourceId()
		}
	}
	.class public DkmILExecuteFunction
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2d26c57a-7bf3-02dc-3bcb-a593bc8e5ca0') }
		.method public hidebysig specialname 
			instance uint32 get_ArgumentCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ReturnValueSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' get_CallingConvention()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags'> get_ArgumentFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_UniformComplexReturnElementSize()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction' Create(uint32 ArgumentCount, uint32 ReturnValueSize, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' CallingConvention, valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' Flags, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags'> ArgumentFlags, uint32 UniformComplexReturnElementSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ArgumentCount()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_ArgumentCount()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags'> ArgumentFlags()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags'> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_ArgumentFlags()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' CallingConvention()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_CallingConvention()
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' Flags()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_Flags()
		}
		.property instance uint32 ReturnValueSize()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_ReturnValueSize()
		}
		.property instance uint32 UniformComplexReturnElementSize()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction'::get_UniformComplexReturnElementSize()
		}
	}
	.class public DkmILExecuteIntrinsic
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b78030f6-2d05-231a-c0d6-bf554010824e') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_LanguageId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Id()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ArgumentCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> get_Subroutines()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic' Create(valuetype [System.Runtime]System.Guid SourceId, valuetype [System.Runtime]System.Guid LanguageId, uint32 Id, uint32 ArgumentCount, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Execute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Arguments, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& FailureReason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Execute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery' InspectionQuery, class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult'[] Arguments, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines, [out] valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason'& FailureReason)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ArgumentCount()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic'::get_ArgumentCount()
		}
		.property instance uint32 Id()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic'::get_Id()
		}
		.property instance valuetype [System.Runtime]System.Guid LanguageId()
		{
			.get instance valuetype [System.Runtime]System.Guid 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic'::get_LanguageId()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic'::get_SourceId()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic'::get_Subroutines()
		}
	}
	.class public DkmILExtractBytes
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('fe1217c9-bd40-4691-c912-72577c056ee1') }
		.method public hidebysig specialname 
			instance int32 get_Offset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Length()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes' Create(int32 Offset, int32 Length)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Length()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes'::get_Length()
		}
		.property instance int32 Offset()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes'::get_Offset()
		}
	}
	.class public DkmILExtractBytesPopArguments
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ea7acbb9-0112-e75a-b624-97624126aed8') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytesPopArguments' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public sealed DkmILFailureReason
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' AbortFailed = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' AbortUnhandledException = int32(0x0000000C)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' Aborted = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' ByteExtractionOutOfBounds = int32(0x0000000E)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' DivideByZero = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' InvalidPseudoAddressOperation = int32(0x0000000F)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' MemoryReadError = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' MemoryWriteError = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' MinidumpNotSupported = int32(0x0000000B)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' None = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' RegisterReadError = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' RegisterWriteError = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' StringTooLong = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' Timeout = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' TooManyFuncEval = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' UserModeScheduledNotSupported = int32(0x0000000D)
	}
	.class public sealed DkmILFunctionEvaluationArgumentFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags' CopyToDebuggee = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags' Default = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags' FloatingPoint = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags' Scalar = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags' ThisPointer = int32(0x00000008)
	}
	.class public sealed DkmILFunctionEvaluationFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' Default = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' EnregisteredComplexReturn = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' FloatingPointReturn = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' HasThisPointer = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' NoEnregisteredReturn = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' ReturnAddressOfValue = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags' ScalarReturn = int32(0x00000002)
	}
	.class public DkmILHlslBufferRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d6e46654-0686-441c-3d86-ff6bf50f4df6') }
		.method public hidebysig specialname 
			instance int32 get_RegisterId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_RegisterIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_BytesToRead()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead' Create(int32 RegisterId, uint32 RegisterIndex, uint32 BytesToRead)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 BytesToRead()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead'::get_BytesToRead()
		}
		.property instance int32 RegisterId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead'::get_RegisterId()
		}
		.property instance uint32 RegisterIndex()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead'::get_RegisterIndex()
		}
	}
	.class public DkmILHlslGetGroupId
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dd58ab29-83d2-c4d4-e499-e85e5bf99277') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' get_GroupIdComponents()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId' Create(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' GroupIdComponents)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' GroupIdComponents()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId'::get_GroupIdComponents()
		}
	}
	.class public DkmILHlslGetThreadId
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2c425193-043f-3d02-59b1-cedd50363ca6') }
		.method public hidebysig specialname 
			instance bool get_UseDispatchId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseFlatModel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' get_ThreadIdComponents()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId' Create(bool UseDispatchId, bool UseFlatModel, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' ThreadIdComponents)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' ThreadIdComponents()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId'::get_ThreadIdComponents()
		}
		.property instance bool UseDispatchId()
		{
			.get instance bool 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId'::get_UseDispatchId()
		}
		.property instance bool UseFlatModel()
		{
			.get instance bool 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId'::get_UseFlatModel()
		}
	}
	.class public DkmILHlslIndexedRegisterRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('64daf200-37b1-379f-b698-4a181200b8db') }
		.method public hidebysig specialname 
			instance int32 get_RegisterId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_RegisterIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_BytesToRead()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_VectorElements()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead' Create(int32 RegisterId, uint32 RegisterIndex, uint32 ByteOffset, uint32 BytesToRead, uint32 VectorElements)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ByteOffset()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead'::get_ByteOffset()
		}
		.property instance uint32 BytesToRead()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead'::get_BytesToRead()
		}
		.property instance int32 RegisterId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead'::get_RegisterId()
		}
		.property instance uint32 RegisterIndex()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead'::get_RegisterIndex()
		}
		.property instance uint32 VectorElements()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead'::get_VectorElements()
		}
	}
	.class public DkmILHlslRegisterRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('967c6835-6825-8a43-1d23-c4b5f9fb2719') }
		.method public hidebysig specialname 
			instance int32 get_RegisterId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_RegisterIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_BytesToRead()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_FirstElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_VectorElements()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead' Create(int32 RegisterId, uint32 RegisterIndex, uint32 ByteOffset, uint32 BytesToRead, uint32 FirstElement, uint32 VectorElements)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 ByteOffset()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_ByteOffset()
		}
		.property instance uint32 BytesToRead()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_BytesToRead()
		}
		.property instance uint32 FirstElement()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_FirstElement()
		}
		.property instance int32 RegisterId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_RegisterId()
		}
		.property instance uint32 RegisterIndex()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_RegisterIndex()
		}
		.property instance uint32 VectorElements()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead'::get_VectorElements()
		}
	}
	.class public abstract DkmILInstruction
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('fb5a5649-632c-d719-219e-d42a7ffffdc9') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Add = int32(0x0000000E)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag AmpAdjustBufferTag = int32(0x00000034)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BeginTry = int32(0x0000002C)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitAnd = int32(0x00000017)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitFieldRead = int32(0x00000006)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitFieldReadFromBytes = int32(0x00000015)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitFieldWrite = int32(0x00000007)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitFieldWriteToBytes = int32(0x00000016)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitNot = int32(0x0000001C)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitOr = int32(0x00000018)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitShiftLeft = int32(0x0000001A)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitShiftRight = int32(0x0000001B)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag BitXor = int32(0x00000019)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CheckTimeout = int32(0x00000037)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareEqual = int32(0x0000001F)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareGreaterThan = int32(0x00000021)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareGreaterThanOrEqual = int32(0x00000022)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareLessThan = int32(0x00000023)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareLessThanOrEqual = int32(0x00000024)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag CompareNotEqual = int32(0x00000020)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Convert = int32(0x00000025)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Divide = int32(0x00000011)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag DuplicateTop = int32(0x00000009)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag EndTry = int32(0x0000002D)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag ExecuteFunction = int32(0x0000002E)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag ExecuteIntrinsic = int32(0x0000002B)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag ExtractBytes = int32(0x00000013)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag ExtractBytesPopArguments = int32(0x00000035)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag HlslBufferRead = int32(0x00000031)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag HlslGetGroupId = int32(0x00000033)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag HlslGetThreadId = int32(0x00000032)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag HlslIndexedRegisterRead = int32(0x00000030)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag HlslRegisterRead = int32(0x0000002F)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag IsFalse = int32(0x0000001E)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag IsTrue = int32(0x0000001D)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Jump = int32(0x00000028)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag JumpIfFalse = int32(0x0000002A)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag JumpIfTrue = int32(0x00000029)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Load = int32(0x0000000C)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag MemoryRead = int32(0x00000002)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag MemoryStringRead = int32(0x00000004)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag MemoryWrite = int32(0x00000003)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Multiply = int32(0x00000010)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Nop = int32(0x0000000D)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Pop = int32(0x0000000A)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag PushConstant = int32(0x00000008)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag PushLocalVariablePseudoAddress = int32(0x00000036)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag RegisterRead = int32(0x00000000)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag RegisterWrite = int32(0x00000001)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Remainder = int32(0x00000012)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag ReturnTop = int32(0x00000026)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Save = int32(0x0000000B)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag SetBytesRegion = int32(0x00000014)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Subtract = int32(0x0000000F)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag Throw = int32(0x00000027)
			.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag TlsGetValue = int32(0x00000005)
		}
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag TagValue()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'/Tag 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'::get_TagValue()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'::get_UniqueId()
		}
	}
	.class public DkmILIsFalse
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('58671534-8e49-9c48-c2a8-201d29bac5ef') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse'::get_Type()
		}
	}
	.class public DkmILIsTrue
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('fefef4e7-d812-5005-f1c2-e817b63e0e5c') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue'::get_Type()
		}
	}
	.class public DkmILJump
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('36bb21a4-629b-d3fe-7cba-97191f007349') }
		.method public hidebysig specialname 
			instance uint32 get_Target()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump' Create(uint32 Target)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Target()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump'::get_Target()
		}
	}
	.class public DkmILJumpIfFalse
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('80cc8616-ef15-670e-16dc-8d1d852e80b1') }
		.method public hidebysig specialname 
			instance uint32 get_Target()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse' Create(uint32 Target)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Target()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse'::get_Target()
		}
	}
	.class public DkmILJumpIfTrue
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('01aaf69c-9a98-03d9-2bbd-49b74de78028') }
		.method public hidebysig specialname 
			instance uint32 get_Target()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue' Create(uint32 Target)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Target()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue'::get_Target()
		}
	}
	.class public DkmILLoad
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('242ede22-4afa-dcb0-6e75-e5b718815bee') }
		.method public hidebysig specialname 
			instance uint32 get_Index()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad' Create(uint32 Index)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Index()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad'::get_Index()
		}
	}
	.class public DkmILMemoryRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('773a4206-89a8-80c4-a828-6ea6728935aa') }
		.method public hidebysig specialname 
			instance uint32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags get_Flags()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead' Create(uint32 Size, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead'::get_Flags()
		}
		.property instance uint32 Size()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead'::get_Size()
		}
	}
	.class public DkmILMemoryStringRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a64d7c04-4e5a-4a75-936c-5eeeb7121f65') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint16 get_CharacterSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MaxCharacters()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead' Create(valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, uint16 CharacterSize, int32 MaxCharacters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint16 CharacterSize()
		{
			.get instance uint16 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead'::get_CharacterSize()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead'::get_Flags()
		}
		.property instance int32 MaxCharacters()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead'::get_MaxCharacters()
		}
	}
	.class public DkmILMemoryWrite
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9b5f6ebc-fd01-fca2-baec-9d02957bffc4') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryWrite' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILMultiply
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3fcf6521-45e9-d844-be16-1f0523c98ff3') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply'::get_Type()
		}
	}
	.class public DkmILNop
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('54573ae7-a6fa-c7c5-4473-3846e8a76f1f') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILNop' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILParameterValue
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2aa6551e-a9cc-b1d5-d880-5ea0f21fd5e6') }
		.method public hidebysig specialname 
			instance uint32 get_LocalIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_ValueBytes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsByRef()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue' Create(uint32 LocalIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ValueBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue' Create(uint32 LocalIndex, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ValueBytes, bool IsByRef)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance bool IsByRef()
		{
			.get instance bool 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'::get_IsByRef()
		}
		.property instance uint32 LocalIndex()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'::get_LocalIndex()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> ValueBytes()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue'::get_ValueBytes()
		}
	}
	.class public DkmILPop
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6eb40730-7c81-beb5-91be-bf369d34f741') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPop' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILPushConstant
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('debef887-9da9-04e2-fff2-6e510affdffe') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant' Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Value()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant'::get_Value()
		}
	}
	.class public DkmILPushLocalVariablePseudoAddress
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('56f239a7-cc68-aa1a-8b1a-ee0cb4ff9834') }
		.method public hidebysig specialname 
			instance int32 get_Index()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ByteOffset()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress' Create(int32 Index, int32 ByteOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 ByteOffset()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress'::get_ByteOffset()
		}
		.property instance int32 Index()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress'::get_Index()
		}
	}
	.class public DkmILRegisterRead
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('65088917-dd5b-32c3-b300-21da5242d959') }
		.method public hidebysig specialname 
			instance int32 get_RegisterId()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead' Create(int32 RegisterId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 RegisterId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead'::get_RegisterId()
		}
	}
	.class public DkmILRegisterWrite
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6c08742c-250e-5f2c-98bb-b2a714901eab') }
		.method public hidebysig specialname 
			instance int32 get_RegisterId()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite' Create(int32 RegisterId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 RegisterId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite'::get_RegisterId()
		}
	}
	.class public DkmILRemainder
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2fc16220-cbf9-15e8-f428-84628d374f31') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder'::get_Type()
		}
	}
	.class public DkmILReturnTop
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('deb13411-2568-d114-0ab1-ab891ce11a2c') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILReturnTop' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILSave
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('60b4a51a-025c-34a3-6b05-284cf64fd50f') }
		.method public hidebysig specialname 
			instance uint32 get_Index()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave' Create(uint32 Index)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Index()
		{
			.get instance uint32 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave'::get_Index()
		}
	}
	.class public DkmILSetBytesRegion
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d49f8ec4-1fab-cf70-86c4-6b615460c079') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSetBytesRegion' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmILSubtract
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8dd587d3-eb37-aba6-37b6-b6cae1950c3e') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' get_Type()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Type()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract'::get_Type()
		}
	}
	.class public DkmILThrow
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b786a0a1-1605-bbee-238d-dbb759497dfb') }
		.method public hidebysig specialname 
			instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' get_FailureCode()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow' Create(valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' FailureCode()
		{
			.get instance valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason' 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow'::get_FailureCode()
		}
	}
	.class public DkmILTlsGetValue
		extends 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction'
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a9dbc0f2-c7be-c76b-5cff-9e45cef41a33') }
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILTlsGetValue' Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public sealed DkmPrimitiveObjectType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Double = int32(0x00000009)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Float = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Int16 = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Int32 = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Int64 = int32(0x00000006)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' Int8 = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' LongDouble = int32(0x0000000A)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' UInt16 = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' UInt32 = int32(0x00000005)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' UInt64 = int32(0x00000007)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType' UInt8 = int32(0x00000001)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Exceptions
{
	.class public sequential sealed DkmAddExceptionTriggerAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult::get_ErrorCode()
		}
	}
	.class public abstract sealed DkmExceptionCategory
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Cpp()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Win32()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Clr()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_NativeRuntimeCheck()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ManagedDebuggingAssistant()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_Gpu()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid ActiveScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_ActiveScript()
		}
		.property valuetype [System.Runtime]System.Guid Clr()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Clr()
		}
		.property valuetype [System.Runtime]System.Guid Cpp()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Cpp()
		}
		.property valuetype [System.Runtime]System.Guid Gpu()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Gpu()
		}
		.property valuetype [System.Runtime]System.Guid ManagedDebuggingAssistant()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_ManagedDebuggingAssistant()
		}
		.property valuetype [System.Runtime]System.Guid NativeRuntimeCheck()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_NativeRuntimeCheck()
		}
		.property valuetype [System.Runtime]System.Guid Win32()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Win32()
		}
	}
	.class public DkmExceptionCategoryTrigger
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('64994a94-4363-dfda-0dc1-00f49cc6ff43') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_ExceptionCategory()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype [System.Runtime]System.Guid ExceptionCategory)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid ExceptionCategory()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger::get_ExceptionCategory()
		}
	}
	.class public DkmExceptionCodeTrigger
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4862250b-5bf2-b9f9-4da6-6fdd7e39b841') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_ExceptionCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Code()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype [System.Runtime]System.Guid ExceptionCategory, uint32 Code)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Code()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger::get_Code()
		}
		.property instance valuetype [System.Runtime]System.Guid ExceptionCategory()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger::get_ExceptionCategory()
		}
	}
	.class public DkmExceptionGlobalTrigger
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7e756301-6822-678f-4fdf-ebfe25bdc021') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionGlobalTrigger Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public abstract DkmExceptionInformation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('02e0d36d-e7ec-ebb8-105e-1b6ac73701ff') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag ClrException = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag CppException = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag CustomException = int32(0x00000004)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag GPUMemoryAccessException = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag Win32Exception = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_ExceptionCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Code()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage get_ProcessingStage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation get_ImplementationException()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance void OnDebugMonitorException()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnContinued()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool CanModifyProcessing()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SquashProcessing()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetDescription()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetAdditionalInformation()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetWinRTErrorInfo([out] string& RestrictedDescription, [out] string& RestrictedErrorReference, [out] string& RestrictedCapabilitySid)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnOutOfBandException()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> GetExceptionStackTrace()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Code()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Code()
		}
		.property instance valuetype [System.Runtime]System.Guid ExceptionCategory()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ExceptionCategory()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation ImplementationException()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ImplementationException()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_InstructionAddress()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Process()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ProcessingStage()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_RuntimeInstance()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_TagValue()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Thread()
		}
	}
	.class public sealed DkmExceptionInterceptActionFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags CancelIntercept = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags Intercept = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags None = int32(0x00000000)
	}
	.class public DkmExceptionNameTrigger
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dcffa6ae-e45d-fd4f-a23e-82779a332801') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_ExceptionCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.DkmThread Thread, valuetype [System.Runtime]System.Guid ExceptionCategory, string Name)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid ExceptionCategory()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger::get_ExceptionCategory()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger::get_Name()
		}
	}
	.class public sealed DkmExceptionProcessingStage
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage AppDomainTransition = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ManagedUnmanagedTransition = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Thrown = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Unhandled = int32(0x00000020)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserCodeSearch = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserUnhandled = int32(0x00000010)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserVisible = int32(0x00000040)
	}
	.class public abstract DkmExceptionTrigger
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('736be8c2-b44a-3d59-24b1-e132fbe225fc') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag CategoryTrigger = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag CodeTrigger = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag GlobalTrigger = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag NameTrigger = int32(0x00000002)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage get_ProcessingStage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_ProcessingStage()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_TagValue()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_Thread()
		}
	}
	.class public DkmExceptionTriggerHit
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4d7aee60-dc8d-794c-98c2-7f4704eeb5d1') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation get_Exception()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RestrictedErrorDescription()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_CapabilitySid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RestrictedReference()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_AdditionalInformation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> get_StackTrace()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit Create(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Exception, string Description, string RestrictedErrorDescription, string CapabilitySid, string RestrictedReference, string AdditionalInformation, valuetype [System.Runtime]System.Guid SourceId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit Create(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Exception, string Description, string RestrictedErrorDescription, string CapabilitySid, string RestrictedReference, string AdditionalInformation, valuetype [System.Runtime]System.Guid SourceId, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> StackTrace)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Send()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string AdditionalInformation()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_AdditionalInformation()
		}
		.property instance string CapabilitySid()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_CapabilitySid()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Description()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Exception()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Exception()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Process()
		}
		.property instance string RestrictedErrorDescription()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RestrictedErrorDescription()
		}
		.property instance string RestrictedReference()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RestrictedReference()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_SourceId()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> StackTrace()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_StackTrace()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Thread()
		}
	}
	.class public sequential sealed DkmRemoveExceptionTriggerAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmRemoveExceptionTriggerAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Exceptions.DkmRemoveExceptionTriggerAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmStowedExceptionInformation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8e224fd7-6b35-29e2-119b-020d4df4dcac') }
		.class nested public sealed NestedException
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(uint64 NestedExceptionAddress, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType NestedExceptionType)
			{
				ret
			}
			.field public initonly uint64 NestedExceptionAddress
			.field public initonly valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType NestedExceptionType
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException get_NestedExceptionPart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ResultCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_ThreadId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ErrorText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ExceptionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_StackTraceWordSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_StackTraceWords()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_StackTrace()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation Create(int32 ResultCode, uint32 ThreadId, string ErrorText, uint64 ExceptionAddress, uint32 StackTraceWordSize, uint32 StackTraceWords, uint64 StackTrace, class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException NestedException)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string ErrorText()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ErrorText()
		}
		.property instance uint64 ExceptionAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ExceptionAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException NestedExceptionPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_NestedExceptionPart()
		}
		.property instance int32 ResultCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ResultCode()
		}
		.property instance uint64 StackTrace()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTrace()
		}
		.property instance uint32 StackTraceWordSize()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTraceWordSize()
		}
		.property instance uint32 StackTraceWords()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTraceWords()
		}
		.property instance uint32 ThreadId()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ThreadId()
		}
	}
	.class public sealed DkmStowedExceptionNestedType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType LEO = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType Stowed = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType Win32 = int32(0x00000001)
	}
}
.namespace Microsoft.VisualStudio.Debugger.FunctionResolution
{
	.class public sealed DkmAddressSearchFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags UseWildcard = int32(0x00000001)
	}
	.class public sequential sealed DkmOnFunctionResolvedAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult::get_ErrorCode()
		}
	}
	.class public sequential sealed DkmOnResolverMessageAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmRuntimeFunctionResolutionRequest
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b102c225-ea38-8242-7787-f48cda1e12e9') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FunctionName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_LineOffset()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_ModuleName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags get_SearchFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, string FunctionName, uint32 LineOffset, string ModuleName, valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EnableResolution(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnFunctionResolved(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnFunctionResolved(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnResolverMessage(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level, string Message)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnResolverMessage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level, string Message, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_CompilerId()
		}
		.property instance string FunctionName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_FunctionName()
		}
		.property instance uint32 LineOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_LineOffset()
		}
		.property instance string ModuleName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_ModuleName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_Process()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_SearchFlags()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_UniqueId()
		}
	}
	.class public DkmSymbolFunctionResolutionRequest
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('365bd4a2-61ab-b70d-48f4-ed41bfdf9a87') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FunctionName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_LineOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ModuleName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags get_SearchFlags()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language, string FunctionName, uint32 LineOffset, string ModuleName, valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] Resolve()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string FunctionName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_FunctionName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Language()
		}
		.property instance uint32 LineOffset()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_LineOffset()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Module()
		}
		.property instance string ModuleName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_ModuleName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Process()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_SearchFlags()
		}
	}
}
.namespace 'Microsoft.VisualStudio.Debugger.GPU'
{
	.class public sealed DkmComputeKernelModel
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel' Flat = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel' 'HLSL' = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel' Tile = int32(0x00000001)
	}
	.class public sealed DkmComputeProperty
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a6792ede-1d69-7729-4e5b-f6de0e3afb3b') }
		.method public hidebysig specialname 
			instance void .ctor(string Name, string Value)
		{
			ret
		}
		.field public initonly string Name
		.field public initonly string Value
	}
	.class public sequential sealed DkmComputeThreadInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('30645692-f6be-eb65-a2b8-719fb033e020') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 ThreadCount, uint32 VectorId, uint64 ThreadGroupId, uint64 ThreadId, uint64 InstructionPointer, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' ThreadState, bool FlaggedState, bool FrozenState)
		{
			ret
		}
		.field public initonly uint32 ThreadCount
		.field public initonly uint32 VectorId
		.field public initonly uint64 ThreadGroupId
		.field public initonly uint64 ThreadId
		.field public initonly uint64 InstructionPointer
		.field public initonly valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' ThreadState
		.field public initonly marshal(unsigned int8) bool FlaggedState
		.field public initonly marshal(unsigned int8) bool FrozenState
	}
	.class public sealed DkmComputeThreadState
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Active = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Blocked = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Completed = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Divergent = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' NotStarted = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Unknown = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState' Unused = int32(0x00000008)
	}
	.class public sealed DkmGPUAddressType
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType' FunctionCall = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType' NoStepInto = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType' None = int32(0x00000001)
	}
	.class public sealed DkmGPUBreakpointBehaviorFlags
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' BreakForEveryThread = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' BreakOnFirstDefaultWarp = int32(0x00000003)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' BreakOncePerWarp = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags' None = int32(0x00000000)
	}
	.class public DkmGPUComputeKernel
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('944cc867-86e7-9c78-724c-d929d98ce82d') }
		.method public hidebysig specialname 
			instance int32 get_DispatchId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_GPUDevice()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_GPUShader()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_GPUShaderDispatch()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> get_GroupDimensions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_NumberOfGroups()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> get_ThreadDimensions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumberOfThreads()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' Create(int32 DispatchId, int64 GPUDevice, int64 GPUShader, int64 GPUShaderDispatch, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> GroupDimensions, int64 NumberOfGroups, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> ThreadDimensions, int32 NumberOfThreads, class Microsoft.VisualStudio.Debugger.DkmProcess Process, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload(int32 ExitCode)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' FindComputeThread(int64 GlobalThreadIndex)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetComputeVectorWidth([out] int32& Width)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetActiveThreadGroups([out] int64[]& ActiveThreadGroups, [out] int32& NumberOfGroups)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetCurrentThreadDimensions([out] int32[]& ThreadDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetCurrentGroupDimensions([out] int32[]& GroupDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetComputeKernelName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetComputeKernelProperties([out] valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty'[]& ComputeProperties, [out] int32& NumberOfProperties)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo'[] Select(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> From, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' Where)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo'[] GroupBy(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' GroupByFlags, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> From, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' Where)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64[] GetStoppedThreads()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThreadFromId(uint64 ThreadId, [out] class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread'& Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void UpdateFlaggedState(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' Where, bool Flagged)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void UpdateFrozenState(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause' Where, bool Frozen)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFlatComputeKernelDimensions([out] int32[]& FlatThreadDimensions, [out] int32[]& FlatIndexBase, [out] int32& NumberOfDimensions, [out] valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel'& Model)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_Connection()
		}
		.property instance int32 DispatchId()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_DispatchId()
		}
		.property instance int64 GPUDevice()
		{
			.get instance int64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_GPUDevice()
		}
		.property instance int64 GPUShader()
		{
			.get instance int64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_GPUShader()
		}
		.property instance int64 GPUShaderDispatch()
		{
			.get instance int64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_GPUShaderDispatch()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> GroupDimensions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_GroupDimensions()
		}
		.property instance int64 NumberOfGroups()
		{
			.get instance int64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_NumberOfGroups()
		}
		.property instance int32 NumberOfThreads()
		{
			.get instance int32 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_NumberOfThreads()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_Process()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> ThreadDimensions()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint32> 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_ThreadDimensions()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel'::get_UniqueId()
		}
	}
	.class public DkmGPUComputeThread
		extends Microsoft.VisualStudio.Debugger.DkmThread
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('40cbb26d-05f5-dc30-49f9-797b17f2ab9e') }
		.method public hidebysig specialname 
			instance int64 get_GlobalThreadIndex()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' get_ComputeKernel()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_NativeThread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, uint64 NativeStartAddress, bool IsMainThread, int64 GlobalThreadIndex, class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' ComputeKernel, class Microsoft.VisualStudio.Debugger.DkmThread/System System, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, uint64 NativeStartAddress, bool IsMainThread, int64 GlobalThreadIndex, class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' ComputeKernel, class Microsoft.VisualStudio.Debugger.DkmThread NativeThread, class Microsoft.VisualStudio.Debugger.DkmThread/System System, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThisThreadDimension([out] int32[]& ThreadDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThisGroupDimension([out] int32[]& GroupDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetThreadId([out] int32[]& ThreadDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetGroupId([out] int32[]& GroupDimensions, [out] int32& NumberOfDimensions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 ReadMemory(uint64 Address, uint64 InstructionPointer, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, void* Buffer, int32 Size)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance int32 ReadMemory(uint64 Address, uint64 InstructionPointer, valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags, uint8[] Buffer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void WriteMemory(uint64 Address, uint64 InstructionPointer, uint8[] Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 UpdateBufferTag(uint32 InputTag)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool ValidateAddress(uint64 Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription'[] GetRegisterDescriptions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRegisterValue(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription' RegisterDescription, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> RegisterValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' ComputeKernel()
		{
			.get instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel' 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread'::get_ComputeKernel()
		}
		.property instance int64 GlobalThreadIndex()
		{
			.get instance int64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread'::get_GlobalThreadIndex()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread NativeThread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread'::get_NativeThread()
		}
	}
	.class public DkmGPUDataAddress
		extends Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5d7ae46a-0766-92b7-31f0-466dabc07582') }
		.method public hidebysig specialname 
			instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' get_ComputeThread()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_InstructionPointer()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress' Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, uint64 Value, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' ComputeThread, uint64 InstructionPointer)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' ComputeThread()
		{
			.get instance class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread' 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress'::get_ComputeThread()
		}
		.property instance uint64 InstructionPointer()
		{
			.get instance uint64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress'::get_InstructionPointer()
		}
	}
	.class public DkmGPUMemoryAccessExceptionInformation
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1930c922-5906-c29d-d51b-a59e5c8d4227') }
		.method public hidebysig specialname 
			instance uint64 get_ConflictingInstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ConflictingThreadGlobalIndex()
		{
			ret
		}
		.method public static hidebysig 
			class 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation' Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, string Name, uint32 Code, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, uint64 ConflictingInstructionAddress, uint64 ConflictingThreadGlobalIndex)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 ConflictingInstructionAddress()
		{
			.get instance uint64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation'::get_ConflictingInstructionAddress()
		}
		.property instance uint64 ConflictingThreadGlobalIndex()
		{
			.get instance uint64 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation'::get_ConflictingThreadGlobalIndex()
		}
	}
	.class public sealed DkmGPURegisterDescription
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5b4f9bea-1b43-64a4-e441-8b61f377d417') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 RegisterType, uint32 RegisterIndex, uint64 RegisterSize, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> RegisterValue)
		{
			ret
		}
		.field public initonly uint32 RegisterIndex
		.field public initonly uint64 RegisterSize
		.field public initonly uint32 RegisterType
		.field public initonly class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> RegisterValue
	}
	.class public sealed DkmHlslThreadIdComponents
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' X = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' Y = int32(0x00000002)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents' Z = int32(0x00000004)
	}
	.class public sealed DkmQueryComputeThreadInfoFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' FlaggedState = int32(0x00000010)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' FrozenState = int32(0x00000040)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' InstructionPointer = int32(0x00000020)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' None = int32(0x00000000)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' ThreadGroupId = int32(0x00000001)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' ThreadId = int32(0x00000004)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' ThreadState = int32(0x00000008)
		.field static public literal valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' VectorId = int32(0x00000002)
	}
	.class public sequential sealed DkmWhereClause
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0365513d-4d3c-8674-f02e-af9db38d12f5') }
		.method public hidebysig specialname 
			instance void .ctor(valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' ColumnFlags, valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo' Values)
		{
			ret
		}
		.field public initonly valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags' ColumnFlags
		.field public initonly valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo' Values
	}
}
.namespace Microsoft.VisualStudio.Debugger.Internal
{
	.class public DkmEELocalObject
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('81492227-e68b-4398-eea2-12c86fd2be52') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void InitCache()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTargetClass(string Name, uint32 AssemblyCookie, [out] uint32& Cookie, [out] uint32& ValueAttributeCount, [out] uint32& ViewerAttributeCount, [out] uint32& VisualizerAttributeCount)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTargetAssembly(string Name, [out] uint32& Cookie)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetAssembly(uint32 AssemblyCookie, uint32 Flags, [out] uint32& FlagsOut, [out] string& Name, [out] uint8[]& AssemblyBytes, [out] uint8[]& PdbBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetHostAssembly(uint32 Flags, [out] uint8[]& AssemblyBytes, [out] uint8[]& PdbBytes)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetValueAttributeProps(uint32 ClassCookie, uint32 Ordinal, [out] string& TargetedAssembly, [out] uint32& AssemblyLocation, [out] string& Name, [out] string& Value, [out] string& Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetViewerAttributeProps(uint32 ClassCookie, uint32 Ordinal, [out] string& TargetedAssembly, [out] uint32& AssemblyLocation, [out] string& ClassName, [out] uint32& ClassAssemblyLocation)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetVisualizerAttributeProps(uint32 ClassCookie, uint32 Ordinal, [out] string& TargetedAssembly, [out] uint32& AssemblyLocation, [out] string& DisplayClassName, [out] uint32& DisplayClassAssemblyLocation, [out] string& ProxyClassName, [out] uint32& ProxyClassAssemblyLocation, [out] string& Description, [out] uint32& Type)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject::get_Process()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject::get_UniqueId()
		}
	}
	.class public DkmPropertyProxy
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('26a761e2-09ad-2a3e-6c9f-cc799df30828') }
		.method public hidebysig specialname 
			instance uint32 get_Id()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult get_EvaluationResult()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy Create(uint32 Id, class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult EvaluationResult, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> InitSourceDataProvider()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetManagedViewerCreationData([out] string& AssemblyName, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& AssemblyBytes, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& AssemblyPdb, [out] string& ClassName, [out] uint32& AssemblyResolution, [out] bool& ReplacementOk)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> InPlaceUpdateObject(uint8[] DataIn)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ResolveAssemblyReference(string AssemblyName, uint32 Flags, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& AssemblyBytes, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8>& AssemblyPdb, [out] string& AssemblyLocation, [out] uint32& AssemblyResolution)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetInitialData()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> CreateReplacementObject(uint8[] DataIn)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult EvaluationResult()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_EvaluationResult()
		}
		.property instance uint32 Id()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_Id()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_UniqueId()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Native
{
	.class public DkmCppExceptionInformation
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8d9e3c4f-e264-47d5-0e02-7d5bf93c4659') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ExceptionObjectPointer()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation get_WinRTExceptionInfo()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation ImplementationException, string Name, uint64 ExceptionObjectPointer, uint64 Address, class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation WinRTExceptionInfo)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_Address()
		}
		.property instance uint64 ExceptionObjectPointer()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_ExceptionObjectPointer()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation WinRTExceptionInfo()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_WinRTExceptionInfo()
		}
	}
	.class public DkmCppWinRTExceptionInformation
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dcee9b3e-138b-d26c-42fd-4bfd99a3955b') }
		.method public hidebysig specialname 
			instance string get_Description()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RestrictedDescription()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RestrictedReference()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_RestrictedCapabilitySid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ExceptionHR()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ErrorInfoAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> get_CapturedStack()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation Create(string Description, string RestrictedDescription, string RestrictedReference, string RestrictedCapabilitySid, int32 ExceptionHR)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation Create(string Description, string RestrictedDescription, string RestrictedReference, string RestrictedCapabilitySid, int32 ExceptionHR, uint64 ErrorInfoAddress, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> CapturedStack)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> CapturedStack()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_CapturedStack()
		}
		.property instance string Description()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_Description()
		}
		.property instance uint64 ErrorInfoAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_ErrorInfoAddress()
		}
		.property instance int32 ExceptionHR()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_ExceptionHR()
		}
		.property instance string RestrictedCapabilitySid()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedCapabilitySid()
		}
		.property instance string RestrictedDescription()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedDescription()
		}
		.property instance string RestrictedReference()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedReference()
		}
	}
	.class public sealed DkmFindExportNameAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Address)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Address()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult::get_Address()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmFindNearestExportAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExportName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ByteOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string ExportName, int32 ByteOffset)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ByteOffset()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ByteOffset()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ErrorCode()
		}
		.property instance string ExportName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ExportName()
		}
	}
	.class public DkmNativeAddressMetadata
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('4d17e81c-cff2-58f7-7973-87f40be51fc0') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType get_AddressType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType get_StepType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_AddressTypeLength()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata Create(valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType AddressType, valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType StepType, uint32 AddressTypeLength)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType AddressType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_AddressType()
		}
		.property instance uint32 AddressTypeLength()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_AddressTypeLength()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType StepType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_StepType()
		}
	}
	.class public sealed DkmNativeAddressStepType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType ContinueStep = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType None = int32(0x00000000)
	}
	.class public sealed DkmNativeAddressType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType CompilerGeneratedGlueCode = int32(0x0000000B)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Custom = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Epilog = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Native = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NativeNoSource = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NativeNoStepInto = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NlgReturn = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NoNativeSymbols = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NonStopStepIntoCode = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Prolog = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Thunk = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Trampoline = int32(0x00000005)
	}
	.class public DkmNativeInstructionAddress
		extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a1e2e4ab-463a-e8a1-3e68-1f49e6945d9e') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance get_ModuleInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_RVA()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Create(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance ModuleInstance, uint32 RVA, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string FindNearestExport([out] int32& ByteOffset)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FindNearestExport(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite[] GetSteppingCallSites(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] SteppingRanges)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance ModuleInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_ModuleInstance()
		}
		.property instance uint32 RVA()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_RVA()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_RuntimeInstance()
		}
	}
	.class public DkmNativeInstructionSymbol
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('0eb834ca-c591-449c-66ad-e016093977d2') }
		.method public hidebysig specialname 
			instance uint32 get_RVA()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, uint32 RVA)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata GetNativeInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetSteppingRanges(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StepStartingAddress, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary RangeBoundary, bool IncludeInline)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata GetSteppingNativeInstructionMetadata(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StepStartingAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 RVA()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol::get_RVA()
		}
	}
	.class public DkmNativeModuleInstance
		extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b7de7beb-acab-76c4-bd78-fbba698e4b65') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_BaseAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Size()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus get_ClrHeaderStatus()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance Create(string Name, string FullName, uint64 TimeDateStamp, class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version, class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId, valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags, valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout, uint32 LoadOrder, string LoadContext, class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance, uint64 BaseAddress, uint32 Size, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus ClrHeaderStatus, bool IsDisabled, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> GetFunctionTableEntry(uint64 Address)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress FindExportName(string Name, bool IgnoreDataExports)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FindExportName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string Name, bool IgnoreDataExports, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 BaseAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_BaseAddress()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus ClrHeaderStatus()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_ClrHeaderStatus()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_RuntimeInstance()
		}
		.property instance uint32 Size()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_Size()
		}
	}
	.class public DkmNativeRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d7d75a72-5477-dcc3-e306-8e31a8e7fd7e') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance FindNativeModuleInstance(uint64 BaseAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance[] GetNativeModuleInstances()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ApplyCodeChange(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress[] ModifiedStackIPAddresses, uint32[] LineHints, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& Warnings, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& Errors)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CommitCodeChange([out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& Warnings, [out] class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string>& Errors)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmWin32ExceptionInformation
		extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('8ca1a5b5-5cbb-f33f-6476-ae67ac9417fa') }
		.method public hidebysig specialname 
			instance uint32 get_ExceptionFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ParentExceptionRecordAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_Address()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> get_ExceptionParameters()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, uint32 Code, valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage, uint32 ExceptionFlags, uint64 ParentExceptionRecordAddress, uint64 Address, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> ExceptionParameters)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 Address()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_Address()
		}
		.property instance uint32 ExceptionFlags()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ExceptionFlags()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> ExceptionParameters()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint64> Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ExceptionParameters()
		}
		.property instance uint64 ParentExceptionRecordAddress()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ParentExceptionRecordAddress()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.ParallelTasks
{
	.class public DkmJsAsyncStackFrame
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('f2718442-b256-1321-a580-ea28fb8f1ec9') }
		.method public hidebysig specialname 
			instance uint64 get_DocumentId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_SourceLocationStartIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_SourceLocationLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame Create(uint64 DocumentId, uint32 SourceLocationStartIndex, uint32 SourceLocationLength, string Name)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint64 DocumentId()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_DocumentId()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_Name()
		}
		.property instance uint32 SourceLocationLength()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_SourceLocationLength()
		}
		.property instance uint32 SourceLocationStartIndex()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_SourceLocationStartIndex()
		}
	}
	.class public sealed DkmManagedTaskInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('00083cf7-83a6-88c5-bf6e-c4fc451fa49c') }
		.method public hidebysig specialname 
			instance void .ctor(int32 Id, int32 ParentId, string AsyncState, int32 StateFlags)
		{
			ret
		}
		.field public initonly string AsyncState
		.field public initonly int32 Id
		.field public initonly int32 ParentId
		.field public initonly int32 StateFlags
	}
	.class public DkmTask
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('91470324-c843-bec3-2050-7c9e644c28d7') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider get_TaskProvider()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_TaskId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ParentTaskId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment get_StackSegment()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus get_ReturnStatus()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_StartTime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_CompletedTime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance float64 get_Duration()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider TaskProvider, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint64 TaskId, uint64 ParentTaskId, valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment StackSegment, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider TaskProvider, class Microsoft.VisualStudio.Debugger.DkmThread Thread, uint64 TaskId, uint64 ParentTaskId, valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment StackSegment, valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus ReturnStatus, float64 StartTime, float64 CompletedTime, float64 Duration, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[] GetChildTasks()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTaskProperties(uint32 Radix, int32 Fields, [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties& Properties)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject[] GetSynchronizationObjects()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance float64 CompletedTime()
		{
			.get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_CompletedTime()
		}
		.property instance float64 Duration()
		{
			.get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_Duration()
		}
		.property instance uint64 ParentTaskId()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_ParentTaskId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus ReturnStatus()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_ReturnStatus()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment StackSegment()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_StackSegment()
		}
		.property instance float64 StartTime()
		{
			.get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_StartTime()
		}
		.property instance uint64 TaskId()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_TaskId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider TaskProvider()
		{
			.get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_TaskProvider()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_Thread()
		}
	}
	.class public sealed DkmTaskProperties
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('d0fc2053-8661-2602-078e-13207a8b6727') }
		.method public hidebysig specialname 
			instance void .ctor(string Name, string Location, string Property1, string Property2, string Property3, int32 State, int32 Flags, int32 Fields)
		{
			ret
		}
		.field public initonly int32 Fields
		.field public initonly int32 Flags
		.field public initonly string Location
		.field public initonly string Name
		.field public initonly string Property1
		.field public initonly string Property2
		.field public initonly string Property3
		.field public initonly int32 State
	}
	.class public DkmTaskProvider
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9df33d71-fb30-91b6-43fd-15c2bdda7236') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_TaskProviderId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags get_AdditionalCapabilities()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider Create(valuetype [System.Runtime]System.Guid TaskProviderId, string Name, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider Create(valuetype [System.Runtime]System.Guid TaskProviderId, string Name, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags AdditionalCapabilities, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask FindTask(uint64 TaskId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTasks(bool IsRoot, uint32 RequestCount, [out] uint32& ScheduledTaskCount, [out] class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[]& Items, [out] uint32& TaskEnumFlags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string[] GetPropertyNames()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags AdditionalCapabilities()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_AdditionalCapabilities()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_Name()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_RuntimeInstance()
		}
		.property instance valuetype [System.Runtime]System.Guid TaskProviderId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_TaskProviderId()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_UniqueId()
		}
	}
	.class public sealed DkmTaskProviderCapabilityFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags ReturnStatus = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags Timestamps = int32(0x00000001)
	}
	.class public abstract sealed DkmTaskProviderId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_TPL()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ConcurrencyRuntime()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_JavaScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ManagedEtw()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_NativeEtw()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid ConcurrencyRuntime()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_ConcurrencyRuntime()
		}
		.property valuetype [System.Runtime]System.Guid JavaScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_JavaScript()
		}
		.property valuetype [System.Runtime]System.Guid ManagedEtw()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_ManagedEtw()
		}
		.property valuetype [System.Runtime]System.Guid NativeEtw()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_NativeEtw()
		}
		.property valuetype [System.Runtime]System.Guid TPL()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_TPL()
		}
	}
	.class public sealed DkmTaskReturnStatus
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Cancelled = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Error = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Success = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Unknown = int32(0x00000000)
	}
	.class public sequential sealed DkmTaskStackSegment
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9fdf4025-864e-58e3-84c9-5f0e5a82e49f') }
		.method public hidebysig specialname 
			instance void .ctor(uint64 AddressMin, uint64 AddressMax, uint64 AddressOriginalMin, uint64 AddressOriginalMax, int32 ThreadId)
		{
			ret
		}
		.field public initonly uint64 AddressMin
		.field public initonly uint64 AddressMax
		.field public initonly uint64 AddressOriginalMin
		.field public initonly uint64 AddressOriginalMax
		.field public initonly int32 ThreadId
	}
	.class public DkmTaskSynchronizationObject
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('ceeeb968-317e-47e7-f0e7-42d12f5bb406') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask get_Task()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_OwningThread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_DecimalName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_HexidecimalName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Type()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_WaitTime()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Timeout()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task, class Microsoft.VisualStudio.Debugger.DkmThread OwningThread, string DecimalName, string HexidecimalName, string Type, int32 WaitTime, int32 Timeout, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DecimalName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_DecimalName()
		}
		.property instance string HexidecimalName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_HexidecimalName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread OwningThread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_OwningThread()
		}
		.property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task()
		{
			.get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Task()
		}
		.property instance int32 Timeout()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Timeout()
		}
		.property instance string Type()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Type()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_UniqueId()
		}
		.property instance int32 WaitTime()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_WaitTime()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Script
{
	.class public sequential sealed DkmOnScriptCriticalErrorAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmScriptBlockMappingInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('95e15cff-d9eb-8030-0b43-da52cd1b977b') }
		.method public hidebysig specialname 
			instance string get_CodeText()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan get_TextSpan()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo Create(string CodeText, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string CodeText()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo::get_CodeText()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo::get_TextSpan()
		}
	}
	.class public DkmScriptDocument
		extends Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5df7092d-153e-3a9e-6a9c-01d70ae57148') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Url()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_FilePath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags get_Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType get_ContentType()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind get_EmbeddedDocumentKind()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem get_SourceProjectItem()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState get_JmcState()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent, string Title, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Url, string FilePath, valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Flags, class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem SourceProjectItem, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent, string Title, class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string Url, string FilePath, valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Flags, valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType ContentType, valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind EmbeddedDocumentKind, class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem SourceProjectItem, valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState JmcState, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetContent(bool EnableContentEvents, [out] uint32[]& SectionDividers)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRaiseContentEvents(bool Enable)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument TryResolve(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRaiseSymbolEvents(bool Enable)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetRaiseSymbolEvents(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, bool Enable, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> GetProjectItemScriptBlocks()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnContentInsert(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Span, string NewText)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnContentRemove(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Span, int32 CharsToRemove)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetJmcState(valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState NewValue)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType ContentType()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_ContentType()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind EmbeddedDocumentKind()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_EmbeddedDocumentKind()
		}
		.property instance string FilePath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_FilePath()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Flags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState JmcState()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_JmcState()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Module()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem SourceProjectItem()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_SourceProjectItem()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_UniqueId()
		}
		.property instance string Url()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Url()
		}
	}
	.class public sealed DkmScriptDocumentContentType
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Html = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Script = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Unknown = int32(0x00000000)
	}
	.class public sealed DkmScriptDocumentFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags AggregateDocument = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags None = int32(0x00000000)
	}
	.class public sealed DkmScriptDocumentJmcState
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState LibraryCode = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState MyCode = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState UnrelatedCode = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState Unsure = int32(0x00000000)
	}
	.class public DkmScriptDocumentTreeNode
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('df65fb73-d375-49e7-06f9-0e5613dba3f3') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance get_RuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode get_Parent()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent, string Title, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Unload()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Parent()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Process()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_RuntimeInstance()
		}
		.property instance string Title()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Title()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_UniqueId()
		}
	}
	.class public sealed DkmScriptEmbeddedDocumentKind
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind EvalCode = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind FunctionCode = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind ScriptBlock = int32(0x00000003)
	}
	.class public DkmScriptInstructionAddress
		extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('6b4814ba-827e-19cf-d178-ecab171f2d30') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance get_RuntimeInstance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument get_Document()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Revision()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StartIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StatementLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress Create(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance RuntimeInstance, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document, int32 Revision, int32 StartIndex, int32 StatementLength, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_AdditionalData()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_Document()
		}
		.property instance int32 Revision()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_Revision()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance RuntimeInstance()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_RuntimeInstance()
		}
		.property instance int32 StartIndex()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_StartIndex()
		}
		.property instance int32 StatementLength()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_StatementLength()
		}
	}
	.class public DkmScriptInstructionSymbol
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('aebaa0af-6437-2ecf-aaf1-86c58eba9447') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument get_Document()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Revision()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StartIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_StatementLength()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, valuetype [System.Runtime]System.Guid RuntimeType, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document, int32 Revision, int32 StartIndex, int32 StatementLength, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction GetNextSteppingAction(class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol StartingInstruction, bool IsSteppingByLine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_AdditionalData()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_Document()
		}
		.property instance int32 Revision()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_Revision()
		}
		.property instance int32 StartIndex()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_StartIndex()
		}
		.property instance int32 StatementLength()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_StatementLength()
		}
	}
	.class public DkmScriptRuntimeInstance
		extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('f6cb156c-9ad9-c01d-29e0-cb77e45fa254') }
		.method public hidebysig specialname 
			instance int32 get_LoadOrderIndex()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsEdgeHtmlDll()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_ScriptHostVersion()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, int32 LoadOrderIndex, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, int32 LoadOrderIndex, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id, valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime, int32 LoadOrderIndex, bool IsEdgeHtmlDll, uint64 ScriptHostVersion, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object GetRemoteDebugApplication()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void AbortExecutionOnResume()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnScriptCriticalError(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string Source, int32 MessageId, string Message, class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnScriptSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] Documents)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance bool IsEdgeHtmlDll()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance::get_IsEdgeHtmlDll()
		}
		.property instance int32 LoadOrderIndex()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance::get_LoadOrderIndex()
		}
		.property instance uint64 ScriptHostVersion()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance::get_ScriptHostVersion()
		}
	}
	.class public DkmScriptSourceProjectItem
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('554a3b31-dbb1-1b82-b0a4-8854519691c7') }
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsGenerated()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem Create(string Path, bool IsGenerated)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance bool IsGenerated()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem::get_IsGenerated()
		}
		.property instance string Path()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem::get_Path()
		}
	}
	.class public sealed DkmScriptSymbolNextSteppingAction
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction CompleteStep = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipCurrentMethod = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipMethodCall = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipStatement = int32(0x00000001)
	}
	.class public sequential sealed DkmSetRaiseSymbolEventsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult::get_ErrorCode()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Start
{
	.class public sequential sealed DkmActivateAppPackageAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmDebugLaunchSettings
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('bbc4d5cc-e936-fc2a-64b7-ba716dda9020') }
		.method public hidebysig specialname 
			instance string get_OptionsString()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> get_EngineFilter()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Create(string OptionsString, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineFilter)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetGPUAdditionalEnvironmentVariables(valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario Scenario)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsNativeCodeSupported(class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineFilter()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings::get_EngineFilter()
		}
		.property instance string OptionsString()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings::get_OptionsString()
		}
	}
	.class public DkmDebugProcessRequest
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('847301d5-269c-7461-c18d-90df9175fe08') }
		.method public hidebysig specialname 
			instance int32 get_ProcessId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_StartTime()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_LogicalParentProcess()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> get_EngineFilter()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags get_Flags()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest Create(int32 ProcessId, int64 StartTime, class Microsoft.VisualStudio.Debugger.DkmProcess LogicalParentProcess, string Path, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineFilter, valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Send(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> EngineFilter()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [System.Runtime]System.Guid> Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_EngineFilter()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_Flags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess LogicalParentProcess()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_LogicalParentProcess()
		}
		.property instance string Path()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_Path()
		}
		.property instance int32 ProcessId()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_ProcessId()
		}
		.property instance int64 StartTime()
		{
			.get instance int64 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_StartTime()
		}
	}
	.class public sequential sealed DkmDebugProcessRequestAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmDebugProcessRequestFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags DetachOnStop = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags None = int32(0x00000000)
	}
	.class public sequential sealed DkmLaunchedProcessInfo
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('df3c6c1f-676b-92dc-286b-b364a24342ae') }
		.method public hidebysig specialname 
			instance void .ctor(int32 ProcessId, int64 StartTime, int32 ThreadId)
		{
			ret
		}
		.field public initonly int32 ProcessId
		.field public initonly int64 StartTime
		.field public initonly int32 ThreadId
	}
	.class public DkmLoadCompleteEventDeferral
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5e4f3517-4169-c1bf-6f13-0b84105f8c58') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_Id()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process, valuetype [System.Runtime]System.Guid Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Add()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Remove()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid Id()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral::get_Id()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral::get_Process()
		}
	}
	.class public DkmProcessAttachRequest
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7c0ada54-d17e-0067-cb5e-5a8169507663') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ProcessId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueProcessId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod get_StartMethod()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_HostingProcessLanguage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings get_EngineSettings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings get_DebugLaunchSettings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int64 get_StartTime()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, string Path, int32 ProcessId, valuetype [System.Runtime]System.Guid UniqueProcessId, valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod, valuetype [System.Runtime]System.Guid HostingProcessLanguage, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, string Path, int32 ProcessId, valuetype [System.Runtime]System.Guid UniqueProcessId, valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod, valuetype [System.Runtime]System.Guid HostingProcessLanguage, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, int64 StartTime)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess AttachToProcess()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_Connection()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_DebugLaunchSettings()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_EngineSettings()
		}
		.property instance valuetype [System.Runtime]System.Guid HostingProcessLanguage()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_HostingProcessLanguage()
		}
		.property instance string Path()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_Path()
		}
		.property instance int32 ProcessId()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_ProcessId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_StartMethod()
		}
		.property instance int64 StartTime()
		{
			.get instance int64 Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_StartTime()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueProcessId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_UniqueProcessId()
		}
	}
	.class public DkmProcessLaunchEnvironmentFilterInputData
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('e646e5ef-5ba2-e021-4f3d-70f85015bff6') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings get_DebugLaunchSettings()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExecutablePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId get_AppPackageId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags get_LaunchFlags()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, string ExecutablePath, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_AppPackageId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_Connection()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_DebugLaunchSettings()
		}
		.property instance string ExecutablePath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_ExecutablePath()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_LaunchFlags()
		}
	}
	.class public DkmProcessLaunchEnvironmentFilterList
		extends [System.Runtime]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance string GetAdditionalEnvironmentVariables(int32 ImplementationIndex, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario Scenario)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList::get_Count()
		}
	}
	.class public DkmProcessLaunchEnvironmentFilterList140
		extends [System.Runtime]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_Count()
		{
			ret
		}
		.method public hidebysig 
			instance string GetAdditionalEnvironmentVariables(int32 ImplementationIndex, class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData InputData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140 Create()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance int32 Count()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140::get_Count()
		}
	}
	.class public sealed DkmProcessLaunchEnvironmentFilterScenario
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario AppPackageLaunch = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario ClassicLaunch = int32(0x00000000)
	}
	.class public sealed DkmProcessLaunchFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags VsdebugengEngineUsed = int32(0x00000001)
	}
	.class public sealed DkmProcessLaunchModeFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags EnableENC = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags MergeEnvironment = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags NoDebug = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags None = int32(0x00000000)
	}
	.class public DkmProcessLaunchRequest
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7107fc56-3477-2708-fc00-174f33c04b08') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Arguments()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_WorkingDirectory()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Environment()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo get_StartupInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags get_ModeFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Win32Flags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings get_EngineSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings get_DebugLaunchSettings()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags get_LaunchFlags()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest Create(string FileName, string Arguments, string WorkingDirectory, string Environment, class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo StartupInfo, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags ModeFlags, int32 Win32Flags, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest Create(string FileName, string Arguments, string WorkingDirectory, string Environment, class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo StartupInfo, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags ModeFlags, int32 Win32Flags, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings, class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings, valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo LaunchProcess(int32 AdditionalWin32Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ResumeProcess()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo LaunchDebuggedProcess()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess ResumeDebuggedProcess(valuetype [System.Runtime]System.Guid UniqueProcessId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Arguments()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Arguments()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Connection()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_DebugLaunchSettings()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_EngineSettings()
		}
		.property instance string Environment()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Environment()
		}
		.property instance string FileName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_FileName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_LaunchFlags()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags ModeFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_ModeFlags()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo StartupInfo()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_StartupInfo()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_UniqueId()
		}
		.property instance int32 Win32Flags()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Win32Flags()
		}
		.property instance string WorkingDirectory()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_WorkingDirectory()
		}
	}
	.class public DkmProcessStartupInfo
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9e5881db-f4be-b1eb-2ba5-ed18f73a7979') }
		.method public hidebysig specialname 
			instance string get_Desktop()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_X()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Y()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_XSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_YSize()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_XCountChars()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_YCountChars()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_FillAttribute()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint16 get_ShowWindow()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_StdInputHandle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_StdOutputHandle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_StdErrorHandle()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo Create(string Desktop, string Title, int32 X, int32 Y, int32 XSize, int32 YSize, int32 XCountChars, int32 YCountChars, int32 FillAttribute, int32 Flags, uint16 ShowWindow, uint64 StdInputHandle, uint64 StdOutputHandle, uint64 StdErrorHandle)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Desktop()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Desktop()
		}
		.property instance int32 FillAttribute()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_FillAttribute()
		}
		.property instance int32 Flags()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Flags()
		}
		.property instance uint16 ShowWindow()
		{
			.get instance uint16 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_ShowWindow()
		}
		.property instance uint64 StdErrorHandle()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdErrorHandle()
		}
		.property instance uint64 StdInputHandle()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdInputHandle()
		}
		.property instance uint64 StdOutputHandle()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdOutputHandle()
		}
		.property instance string Title()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Title()
		}
		.property instance int32 X()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_X()
		}
		.property instance int32 XCountChars()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_XCountChars()
		}
		.property instance int32 XSize()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_XSize()
		}
		.property instance int32 Y()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Y()
		}
		.property instance int32 YCountChars()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_YCountChars()
		}
		.property instance int32 YSize()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_YSize()
		}
	}
	.class public sealed DkmStartMethod
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Attach = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod AttachForHostingLaunch = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod AttachForSuspendedLaunch = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Launch = int32(0x00000000)
	}
}
.namespace Microsoft.VisualStudio.Debugger.Stepping
{
	.class public sealed DkmLanguageStepIntoFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags NoStepInto = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags None = int32(0x00000000)
	}
	.class public DkmNativeSteppingCallSite
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('49b7610c-d229-e123-9f3a-b00df2ef4c24') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress get_CallSite()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress get_CallTarget()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress get_CallTargetAddress()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite Create(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallSite, class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTarget, class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTargetAddress)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallSite()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallSite()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTarget()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallTarget()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTargetAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallTargetAddress()
		}
	}
	.class public DkmSingleStepRequest
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('15ec2b6b-561d-93d3-f7b4-50fba4cb8bb5') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest Create(valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnGPUSingleStepComplete(class Microsoft.VisualStudio.Debugger.DkmThread Thread)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EnableTempBreak(int64[] TempBreakInstructions)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearTempBreak()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void EnableSingleStep()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void ClearSingleStep()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnSingleStepComplete()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest::get_SourceId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest::get_Thread()
		}
	}
	.class public sealed DkmStepArbitrationReason
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason AsyncStep = int32(0x0000000A)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason EnterRuntime = int32(0x00000005)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason ExceptionHandlerFound = int32(0x00000007)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason ExitRuntime = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason InstructionLevelOverride = int32(0x00000008)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NewStep = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NoSource = int32(0x00000006)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NoSymbols = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason TransitionModule = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Unknown = int32(0x00000009)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason UnknownModule = int32(0x00000001)
	}
	.class public sealed DkmStepKind
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Into = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Out = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Over = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepIntoSpecific = int32(0x00000003)
	}
	.class public sealed DkmStepUnit
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Instruction = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Line = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Statement = int32(0x00000000)
	}
	.class public DkmStepper
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('2aae9764-33a3-8fc7-22ff-e27c9de91bda') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmThread get_Thread()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_StartingAddress()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_FrameBase()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind get_StepKind()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit get_StepUnit()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SourceId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath get_CodePath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper get_CrossThreadParent()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ShouldCaptureReturnValue()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> get_CurrentCodePaths()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_CurrentMethodName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartingAddress, uint64 FrameBase, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepKind, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath CodePath, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper CrossThreadParent, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartingAddress, uint64 FrameBase, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepKind, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit, valuetype [System.Runtime]System.Guid SourceId, class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath CodePath, class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper CrossThreadParent, bool ShouldCaptureReturnValue, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> CurrentCodePaths, string CurrentMethodName, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void BeforeEnable()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Enable(bool RemoveOtherSteppers)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void CancelStepper(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance GetControllingRuntimeInstance()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool StepControlRequested(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TakeStepControl(bool LeaveGuardsInPlace, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnStepArbitration(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CurrentControllingRuntimeInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnCrossThreadStepArbitration(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason, class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CurrentControllingRuntimeInstance, class Microsoft.VisualStudio.Debugger.DkmThread NewThread, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStartingInstructionAddress, [out] class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper& NewStepper)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnReturnValues(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue> ReturnValues, bool LastValueInCurrentContext)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void OnStepComplete(class Microsoft.VisualStudio.Debugger.DkmThread Thread, bool HasException)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetExceptionInFlight(bool Enable)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsExceptionInFlight()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath CodePath()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CodePath()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper CrossThreadParent()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CrossThreadParent()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> CurrentCodePaths()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CurrentCodePaths()
		}
		.property instance string CurrentMethodName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CurrentMethodName()
		}
		.property instance uint64 FrameBase()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_FrameBase()
		}
		.property instance bool ShouldCaptureReturnValue()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_ShouldCaptureReturnValue()
		}
		.property instance valuetype [System.Runtime]System.Guid SourceId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_SourceId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartingAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StartingAddress()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepKind()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StepKind()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StepUnit()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmThread Thread()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_Thread()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_UniqueId()
		}
	}
	.class public DkmSteppingCodePath
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('14c9f40d-f492-532e-ea75-f0d1ab0e9fff') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_CodePathOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_EndOffset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_AdditionalData()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath Create(string Name, int32 CodePathOffset, int32 EndOffset, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> AdditionalData()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_AdditionalData()
		}
		.property instance int32 CodePathOffset()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_CodePathOffset()
		}
		.property instance int32 EndOffset()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_EndOffset()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_Name()
		}
	}
	.class public DkmSteppingCodePathSource
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('b4f7a81a-62b9-de29-106d-5f055114810a') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol get_InstructionSymbol()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress get_InstructionAddress()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage get_Language()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol InstructionSymbol, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] GetCodePaths(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame, valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_InstructionAddress()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol InstructionSymbol()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_InstructionSymbol()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_Language()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.Symbols
{
	.class public sealed DkmCodeViewCompilerId
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a47cc33b-5978-a1cb-c006-c1869c6778f0') }
		.method public hidebysig specialname 
			instance void .ctor(uint8 LanguageEnumeration, string CompilerName, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId)
		{
			ret
		}
		.field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId
		.field public initonly string CompilerName
		.field public initonly uint8 LanguageEnumeration
	}
	.class public DkmCustomSymbolFileId
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c25228a7-de43-2abc-1da8-5cb744e0e75e') }
		.method public hidebysig specialname 
			instance int32 get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> get_Data()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId Create(valuetype [System.Runtime]System.Guid SymbolProviderId, int32 Type, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Data)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Data()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<uint8> Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId::get_Data()
		}
		.property instance int32 Type()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId::get_Type()
		}
	}
	.class public sealed DkmDocumentMatchStrength
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength Checksum = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength ExactURL = int32(0x00000004)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength FileName = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength FullPath = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength SubPath = int32(0x00000001)
	}
	.class public DkmDynamicSymbolFileId
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('22e890de-40f9-2415-edf0-d3b5014acd22') }
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmDynamicSymbolFileId Create(valuetype [System.Runtime]System.Guid SymbolProviderId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
	}
	.class public DkmEngineSymbolSettings
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1e0ac5bb-9169-359d-7689-c1407b244f62') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_SymbolPaths()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SymbolCachePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_IncludeList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> get_ExcludeList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_ManualLoading()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_LoadAdjacentSymbols()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings Create(class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> SymbolPaths, string SymbolCachePath, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> IncludeList, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> ExcludeList, bool ManualLoading, bool LoadAdjacentSymbols)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> ExcludeList()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_ExcludeList()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> IncludeList()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_IncludeList()
		}
		.property instance bool LoadAdjacentSymbols()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_LoadAdjacentSymbols()
		}
		.property instance bool ManualLoading()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_ManualLoading()
		}
		.property instance string SymbolCachePath()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_SymbolCachePath()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> SymbolPaths()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_SymbolPaths()
		}
	}
	.class public sealed DkmFindDocumentsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] get_Documents()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] Documents)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] Documents()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult::get_Documents()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmFindSymbolsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] get_InstructionSymbols()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] get_SymbolLocation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] InstructionSymbols, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] SymbolLocation)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] InstructionSymbols()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_InstructionSymbols()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] SymbolLocation()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_SymbolLocation()
		}
	}
	.class public sealed DkmGetFunctionInfoAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] get_Results()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] Results)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult::get_ErrorCode()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] Results()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult::get_Results()
		}
	}
	.class public sealed DkmGetMethodSymbolStoreDataAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] get_Scopes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult::get_ErrorCode()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult::get_Scopes()
		}
	}
	.class public sealed DkmGetMethodSymbolStoreDataPreRemapAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_RemapToken()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] get_Scopes()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 RemapToken, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_ErrorCode()
		}
		.property instance int32 RemapToken()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_RemapToken()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_Scopes()
		}
	}
	.class public sealed DkmGetSourcePositionAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_StartOfLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_SourcePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool StartOfLine, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_SourcePosition()
		}
		.property instance bool StartOfLine()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_StartOfLine()
		}
	}
	.class public sealed DkmGetSourcePositionCallbackAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_StartOfLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_SourcePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool StartOfLine, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_SourcePosition()
		}
		.property instance bool StartOfLine()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_StartOfLine()
		}
	}
	.class public sealed DkmGetTokenSymbolStoreAttributeAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint8[] get_Data()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(uint8[] Data)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance uint8[] Data()
		{
			.get instance uint8[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult::get_Data()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult::get_ErrorCode()
		}
	}
	.class public sealed DkmGetUserCodeSourcePositionCallbackAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition get_SourcePosition()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult::get_SourcePosition()
		}
	}
	.class public sequential sealed DkmHasLineInfoAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Result()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool Result)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult::get_ErrorCode()
		}
		.property instance bool Result()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult::get_Result()
		}
	}
	.class public sequential sealed DkmImageDebugDirectoryFormat
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('66bdcf7e-ac43-b629-7205-57cec0699a35') }
		.method public hidebysig specialname 
			instance void .ctor(int32 TypeValue, valuetype [System.Runtime]System.Guid SymbolProvider)
		{
			ret
		}
		.field public initonly int32 TypeValue
		.field public initonly valuetype [System.Runtime]System.Guid SymbolProvider
	}
	.class public abstract DkmInstructionSymbol
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('c55d7b4d-246f-0e5a-e37e-c9d9f2d996c6') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag ClrInstruction = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag CustomInstruction = int32(0x00000003)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag NativeInstruction = int32(0x00000000)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag ScriptInstruction = int32(0x00000002)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_RuntimeType()
		{
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Bind(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype 'Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType' GetGPUInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol NextInstruction)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetNoSourceRanges()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetDisassemblyLabel(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId GetCompilerId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void IsHiddenCode(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] GetSteppingRanges(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary RangeBoundary, bool IncludeInline)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool HasLineInfo()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void HasLineInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange GetCurrentStatementRange()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetSourcePosition(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, [out] bool& StartOfLine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetSourcePosition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetSourcePositionCallback(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, [out] bool& StartOfLine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetSourcePositionCallback(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags, class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition GetAlternateSourcePosition(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_Module()
		}
		.property instance valuetype [System.Runtime]System.Guid RuntimeType()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_RuntimeType()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_TagValue()
		}
	}
	.class public sealed DkmIsHiddenCodeAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags get_NonUserCodeFlags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol get_NextLine()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags NonUserCodeFlags, class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol NextLine)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_ErrorCode()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol NextLine()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_NextLine()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags NonUserCodeFlags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_NonUserCodeFlags()
		}
	}
	.class public sequential sealed DkmIsUserCodeAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UserCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(bool UserCode)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult::get_ErrorCode()
		}
		.property instance bool UserCode()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult::get_UserCode()
		}
	}
	.class public sequential sealed DkmMD5HashValue
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9804843a-3774-8a13-087b-dc688a492af9') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 Value0, int32 Value1, int32 Value2, int32 Value3)
		{
			ret
		}
		.field public initonly int32 Value0
		.field public initonly int32 Value1
		.field public initonly int32 Value2
		.field public initonly int32 Value3
	}
	.class public DkmModule
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('9fdf7d9f-e5ab-b363-6282-1da170173343') }
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId get_Id()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId get_CompilerId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection get_Connection()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmModule FindModule(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Id)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmModule[] GetModules()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Create(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Id, string Name, valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId, class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] GetScriptDocuments()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodSymbolStoreData(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodSymbolStoreData(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId GetFirstMethodInFirstDocument()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] GetMethodSymbolStoreDataPreRemap(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, [out] int32& RemapToken)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetMethodSymbolStoreDataPreRemap(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetTokenSymbolStoreAttribute(int32 ParentToken, bool IsPreRemap, string AttributeName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetTokenSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, int32 ParentToken, bool IsPreRemap, string AttributeName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TranslateAcceleratorTagByIP(uint32 InputTag, uint32 InstructionPointer, [out] uint32& RegisterType, [out] uint32& RegisterIndex, [out] uint32& FirstElement, [out] uint32& VectorElements, [out] uint32& ByteOffset, [out] uint32& VectorElementSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetCompilerOptions()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void TranslateAcceleratorTagByRva(uint32 InputTag, uint32 Rva, [out] uint32& RegisterType, [out] uint32& RegisterIndex, [out] uint32& FirstElement, [out] uint32& VectorElements, [out] uint32& ByteOffset, [out] uint32& VectorElementSize)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool IsValidAcceleratorTag(uint32 InputTag, uint32 Rva)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint64 GetPointerToHLSLRegister(int32 RegisterType, uint32 RegisterIndex, uint32 FirstElement, uint32 VectorElements, uint32 ByteOffset, uint32 VectorElementSize, uint32 Rva, uint32 StartLiveRange, uint32 EndLiveRange, [out] bool& IsNewDynamicTag)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void SetPointerToHLSLRegister(uint64 Address, int32 RegisterType, uint32 RegisterIndex, uint32 FirstElement, uint32 VectorElements, uint32 ByteOffset, uint32 VectorElementSize, uint32 StartLiveRange, uint32 EndLiveRange)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 GetAcceleratorTagTableSize([out] uint32& SizeOfForwardedTags)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint32 GetInstructionOffsetForRva(uint32 RVA)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] GetModuleInstances()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string UndecorateName(string DecoratedName, uint32 Options)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol GetPublicSymbolByNameCallback(string PublicName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance uint8[] GetSourceServerData(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] FindDocuments(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FindDocuments(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance string GetSymbolFilePath()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] GetEntryPointSymbols()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] GetFunctionInfo(string FunctionName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void GetFunctionInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, string FunctionName, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object GetSymbolInterface(valuetype [System.Runtime]System.Guid InterfaceID)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_CompilerId()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Connection()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Id()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Id()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Name()
		}
	}
	.class public sequential sealed DkmModuleId
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('67e8ae96-fe88-e528-5190-458bd95dd9f2') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [System.Runtime]System.Guid Mvid, valuetype [System.Runtime]System.Guid SymbolProvider)
		{
			ret
		}
		.field public initonly valuetype [System.Runtime]System.Guid Mvid
		.field public initonly valuetype [System.Runtime]System.Guid SymbolProvider
	}
	.class public DkmPdbFileId
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('3c1bf10d-a25c-9c9f-3f20-27ad8165d1df') }
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_Mvid()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint32 get_Age()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PdbName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId Create(valuetype [System.Runtime]System.Guid SymbolProviderId, valuetype [System.Runtime]System.Guid Mvid, uint32 Age, string PdbName)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance uint32 Age()
		{
			.get instance uint32 Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_Age()
		}
		.property instance valuetype [System.Runtime]System.Guid Mvid()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_Mvid()
		}
		.property instance string PdbName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_PdbName()
		}
	}
	.class public sequential sealed DkmRVASizePair
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('dbeefc90-b141-1a6e-1b47-7b4cd20f6fba') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 RVA, uint32 Size)
		{
			ret
		}
		.field public initonly uint32 RVA
		.field public initonly uint32 Size
	}
	.class public DkmResolvedDocument
		extends Microsoft.VisualStudio.Debugger.DkmDataContainer
		implements [System.Runtime]System.IDisposable
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('79baa60b-1e97-ac96-0d95-996e6b997c33') }
		.method private final virtual hidebysig newslot 
			instance void System.IDisposable.Dispose()
		{
			.override [System.Runtime]System.IDisposable::Dispose
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule get_Module()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_UniqueId()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string get_DocumentName()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument get_ScriptDocument()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength get_MatchStrength()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning get_Warning()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance bool get_TextRequested()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Close()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string DocumentName, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength MatchStrength, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Warning, bool TextRequested, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] FindSymbols(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan, string Text, [out] class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[]& SymbolLocation)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void FindSymbols(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan, string Text, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DocumentName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_DocumentName()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength MatchStrength()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_MatchStrength()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_Module()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_ScriptDocument()
		}
		.property instance bool TextRequested()
		{
			.get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_TextRequested()
		}
		.property instance valuetype [System.Runtime]System.Guid UniqueId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_UniqueId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Warning()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_Warning()
		}
	}
	.class public sealed DkmResolvedDocumentWarning
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning ChecksumMismatch = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning MultipleChecksums = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning None = int32(0x00000000)
	}
	.class public DkmResolvedMappedDocument
		extends Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a2390517-8273-fd47-12dc-fc0d945fa1a1') }
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> get_ScriptBlocks()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module, string DocumentName, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength MatchStrength, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Warning, bool TextRequested, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> ScriptBlocks, class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> ScriptBlocks()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument::get_ScriptBlocks()
		}
	}
	.class public sequential sealed DkmSHA1HashValue
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('db7a1f38-cb63-d4c8-70aa-b52af7e0b9ed') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 Value0, int32 Value1, int32 Value2, int32 Value3, int32 Value4)
		{
			ret
		}
		.field public initonly int32 Value0
		.field public initonly int32 Value1
		.field public initonly int32 Value2
		.field public initonly int32 Value3
		.field public initonly int32 Value4
	}
	.class public DkmSourceFileId
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('a892d8cf-b6fd-7e20-e0da-6ceca6a7c0c4') }
		.class nested public sealed MD5Hash
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Value)
			{
				ret
			}
			.field public initonly valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Value
		}
		.class nested public sealed SHA1Hash
			extends [System.Runtime]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue Value)
			{
				ret
			}
			.field public initonly valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue Value
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash get_MD5HashPart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash get_SHA1HashPart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DocumentName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument get_ScriptDocument()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId Create(string DocumentName, class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash MD5Hash, class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash SHA1Hash)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DocumentName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_DocumentName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash MD5HashPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_MD5HashPart()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash SHA1HashPart()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_SHA1HashPart()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_ScriptDocument()
		}
	}
	.class public DkmSourcePosition
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('7995b6c8-93dc-ac77-d59b-b99ce6ec9e48') }
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId get_SourceFileId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan get_TextSpan()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DocumentName()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string DocumentName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_DocumentName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId()
		{
			.get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_SourceFileId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_TextSpan()
		}
	}
	.class public sealed DkmSourcePositionFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags ExtendedSourceRange = int32(0x00000001)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags None = int32(0x00000000)
	}
	.class public sequential sealed DkmSteppingRange
		extends [System.Runtime]System.ValueType
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('1707052e-b14e-90df-d96a-82807318f017') }
		.method public hidebysig specialname 
			instance void .ctor(uint32 StartOffset, uint32 Length, uint32 LineNumber)
		{
			ret
		}
		.field public initonly uint32 StartOffset
		.field public initonly uint32 Length
		.field public initonly uint32 LineNumber
	}
	.class public sealed DkmSteppingRangeBoundary
		extends [System.Runtime]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary FunctionStart = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary InlineFunctionOut = int32(0x00000003)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary NextLine = int32(0x00000002)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary NextStatement = int32(0x00000001)
	}
	.class public abstract DkmSymbolFileId
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('950eb6d7-86fd-e311-6d68-d8b12705fa7e') }
		.class nested public sealed Tag
			extends [System.Runtime]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag CustomSymbolFileId = int32(0x00000002)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag DynamicSymbolFileId = int32(0x00000001)
			.field static public literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag PdbFileId = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag get_TagValue()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [System.Runtime]System.Guid get_SymbolProviderId()
		{
			ret
		}
		.property instance valuetype [System.Runtime]System.Guid SymbolProviderId()
		{
			.get instance valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId::get_SymbolProviderId()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag TagValue()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId::get_TagValue()
		}
	}
	.class public abstract sealed DkmSymbolProviderId
		extends [System.Runtime]System.Object
	{
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_NativePDB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrPDB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrRemoteSymbolStore()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScript()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_HlslPDB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DpcppPDB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ActiveScriptInterop()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_ClrNcPDB()
		{
			ret
		}
		.method public static hidebysig specialname 
			valuetype [System.Runtime]System.Guid get_DpcppInteropPDB()
		{
			ret
		}
		.property valuetype [System.Runtime]System.Guid ActiveScript()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ActiveScript()
		}
		.property valuetype [System.Runtime]System.Guid ActiveScriptInterop()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ActiveScriptInterop()
		}
		.property valuetype [System.Runtime]System.Guid ClrNcPDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrNcPDB()
		}
		.property valuetype [System.Runtime]System.Guid ClrPDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrPDB()
		}
		.property valuetype [System.Runtime]System.Guid ClrRemoteSymbolStore()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrRemoteSymbolStore()
		}
		.property valuetype [System.Runtime]System.Guid DpcppInteropPDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_DpcppInteropPDB()
		}
		.property valuetype [System.Runtime]System.Guid DpcppPDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_DpcppPDB()
		}
		.property valuetype [System.Runtime]System.Guid HlslPDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_HlslPDB()
		}
		.property valuetype [System.Runtime]System.Guid NativePDB()
		{
			.get valuetype [System.Runtime]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_NativePDB()
		}
	}
	.class public sequential sealed DkmTextSpan
		extends [System.Runtime]System.ValueType
		implements class [System.Runtime]'System.IComparable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan>, class [System.Runtime]'System.IEquatable`1'<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan>
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('5196533e-11e8-53b0-6620-ba454830e33b') }
		.method public final virtual hidebysig newslot 
			instance int32 CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan other)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan other)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0, valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1)
		{
			ret
		}
		.method public virtual hidebysig 
			instance int32 GetHashCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 StartLine, int32 EndLine, int32 StartColumn, int32 EndColumn)
		{
			ret
		}
		.field public initonly int32 StartLine
		.field public initonly int32 EndLine
		.field public initonly int32 StartColumn
		.field public initonly int32 EndColumn
	}
}
.namespace Microsoft.VisualStudio.Debugger.Telemetry
{
	.class public DkmNameValuePair
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('45c37880-0ee9-689c-fb26-b3dfbf5cff3d') }
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair Create(string Name, object Value)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair::get_Name()
		}
		.property instance object Value()
		{
			.get instance object Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair::get_Value()
		}
	}
	.class public sequential sealed DkmPostAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult::get_ErrorCode()
		}
	}
	.class public DkmTelemetryEvent
		extends [System.Runtime]System.Object
	{
		.custom instance void [System.Runtime.InteropServices]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = { string('02237b74-d27c-db94-dfbd-18bfa838d7f5') }
		.method public hidebysig specialname 
			instance string get_EventName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Microsoft.VisualStudio.Debugger.DkmProcess get_Process()
		{
			ret
		}
		.method public static hidebysig 
			class Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent Create(string EventName, class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> Properties, class Microsoft.VisualStudio.Debugger.DkmProcess Process)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Post()
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Post(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList, class 'Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1'<valuetype Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult> CompletionRoutine)
		{
			.custom instance void [System.Runtime]System.Security.SecuritySafeCriticalAttribute::.ctor() = { }
			ret
		}
		.property instance string EventName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_EventName()
		}
		.property instance class Microsoft.VisualStudio.Debugger.DkmProcess Process()
		{
			.get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_Process()
		}
		.property instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> Properties()
		{
			.get instance class [System.Runtime]'System.Collections.ObjectModel.ReadOnlyCollection`1'<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_Properties()
		}
	}
}
.namespace Microsoft.VisualStudio.Debugger.ThreadProperties
{
	.class public sequential sealed DkmGetManagedThreadPropertiesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ManagedThreadId()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 ManagedThreadId)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult::get_ErrorCode()
		}
		.property instance int32 ManagedThreadId()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult::get_ManagedThreadId()
		}
	}
	.class public sealed DkmGetThreadDisplayPropertiesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_DisplayName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_DisplayNamePriority()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ThreadCategory()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string DisplayName, int32 DisplayNamePriority, int32 ThreadCategory)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance string DisplayName()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayName()
		}
		.property instance int32 DisplayNamePriority()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayNamePriority()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_ErrorCode()
		}
		.property instance int32 ThreadCategory()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_ThreadCategory()
		}
	}
	.class public sealed DkmGetThreadNameAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Name()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string Name)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult::get_ErrorCode()
		}
		.property instance string Name()
		{
			.get instance string Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult::get_Name()
		}
	}
	.class public sequential sealed DkmGetVolatileFlagsAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags get_Flags()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags Flags)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult::get_ErrorCode()
		}
		.property instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags Flags()
		{
			.get instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult::get_Flags()
		}
	}
	.class public sequential sealed DkmGetVolatilePropertiesAsyncResult
		extends [System.Runtime]System.ValueType
	{
		.method public static hidebysig 
			valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult CreateErrorResult(class [System.Runtime]System.Exception exception)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ErrorCode()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Priority()
		{
			ret
		}
		.method public hidebysig specialname 
			instance uint64 get_AffinityMask()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 Priority, uint64 AffinityMask)
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance uint64 AffinityMask()
		{
			.get instance uint64 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_AffinityMask()
		}
		.property instance int32 ErrorCode()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_ErrorCode()
		}
		.property instance int32 Priority()
		{
			.get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_Priority()
		}
	}
	.class public sealed DkmVolatileThreadFlags
		extends [System.Runtime]System.Enum
	{
		.custom instance void [System.Runtime]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags None = int32(0x00000000)
		.field static public literal valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags UserModeScheduled = int32(0x00000001)
	}
}
.namespace System.Runtime.InteropServices
{
	.class public ComAliasNameAttribute
		extends [System.Runtime]System.Attribute
	{
		.custom instance void [System.Runtime]System.AttributeUsageAttribute::.ctor(valuetype [System.Runtime]System.AttributeTargets) = { int32(32767) }
		.method public hidebysig specialname 
			instance void .ctor(string alias)
		{
			ret
		}
		.field public string alias
	}
	.class public sealed ComConversionLossAttribute
		extends [System.Runtime]System.Attribute
	{
		.custom instance void [System.Runtime]System.AttributeUsageAttribute::.ctor(valuetype [System.Runtime]System.AttributeTargets) = { int32(32767) property bool Inherited = bool(false) }
		.custom instance void [System.Runtime]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(true) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
