
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.33440
//  Copyright (c) Microsoft Corporation.  All rights reserved.


// warning : THIS IS A PARTIAL DISASSEMBLY, NOT SUITABLE FOR RE-ASSEMBLING

// Only shown items having accessibility: Public Family


// Metadata version: v2.0.50727
.assembly extern Microsoft.VisualStudio.Debugger.Metadata
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 14:0:0:0
}
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly Microsoft.VisualStudio.Debugger.Engine
{
  .custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .permissionset reqmin
             = {class 'System.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' = {property bool 'SkipVerification' = bool(true)}}
  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                07 D1 FA 57 C4 AE D9 F0 A3 2E 84 AA 0F AE FD 0D   // ...W............
                E9 E8 FD 6A EC 8F 87 FB 03 76 6C 83 4C 99 92 1E   // ...j.....vl.L...
                B2 3B E7 9A D9 D5 DC C1 DD 9A D2 36 13 21 02 90   // .;.........6.!..
                0B 72 3C F9 80 95 7F C4 E1 77 10 8F C6 07 77 4F   // .r<......w....wO
                29 E8 32 0E 92 EA 05 EC E4 E8 21 C0 A5 EF E8 F1   // ).2.......!.....
                64 5C 4C 0C 93 C1 AB 99 28 5D 62 2C AA 65 2C 1D   // d\L.....(]b,.e,.
                FA D6 3D 74 5D 6F 2D E5 F1 7E 5E AF 0F C4 96 3D   // ..=t]o-..~^....=
                26 1C 8A 12 43 65 18 20 6D C0 93 34 4D 5A D2 93 ) // &...Ce. m..4MZ..
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Microsoft.VisualStudio.Debugger.Engine.dll
// MVID: {F69E895E-D452-4E38-95BE-7B90DD70E62B}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x018D0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public auto ansi sealed DkmContinueCorruptingExceptionAttribute
       extends [mscorlib]System.Attribute
{
  .custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 44 00 00 00 00 00 )                         // ..D.....
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContinueCorruptingExceptionAttribute::.ctor

} // end of class DkmContinueCorruptingExceptionAttribute

.class public auto ansi sealed DkmReportNonFatalWatsonExceptionAttribute
       extends [mscorlib]System.Attribute
{
  .custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = ( 01 00 44 00 00 00 01 00 54 02 0D 41 6C 6C 6F 77   // ..D.....T..Allow
                                                                                                                         4D 75 6C 74 69 70 6C 65 01 )                      // Multiple.
  .method public hidebysig specialname instance class [mscorlib]System.Type 
          get_ExcludeExceptionType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReportNonFatalWatsonExceptionAttribute::get_ExcludeExceptionType

  .method public hidebysig specialname instance void 
          set_ExcludeExceptionType(class [mscorlib]System.Type 'value') cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReportNonFatalWatsonExceptionAttribute::set_ExcludeExceptionType

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReportNonFatalWatsonExceptionAttribute::.ctor

  .property instance class [mscorlib]System.Type
          ExcludeExceptionType()
  {
    .get instance class [mscorlib]System.Type DkmReportNonFatalWatsonExceptionAttribute::get_ExcludeExceptionType()
    .set instance void DkmReportNonFatalWatsonExceptionAttribute::set_ExcludeExceptionType(class [mscorlib]System.Type)
  } // end of property DkmReportNonFatalWatsonExceptionAttribute::ExcludeExceptionType
} // end of class DkmReportNonFatalWatsonExceptionAttribute

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.COR_ACTIVE_FUNCTION
       extends [mscorlib]System.ValueType
{
  .field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain pAppDomain
  .field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule pModule
  .field public class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction2 pFunction
  .field public uint32 ilOffset
  .field public uint32 Flags
} // end of class Microsoft.VisualStudio.CorDebugInterop.COR_ACTIVE_FUNCTION

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugController
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 44 36 46 35 46 36 33 2D 37 35 33 38   // ..$3D6F5F63-7538
                                                                                                  2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34   // -11D3-8D5B-00104
                                                                                                  42 33 35 45 37 45 46 00 00 )                      // B35E7EF..
  .method public hidebysig newslot abstract virtual 
          instance void  Stop([in] uint32 dwTimeout) cil managed
  {
  } // end of method ICorDebugAppDomain::Stop

  .method public hidebysig newslot abstract virtual 
          instance void  Continue([in] int32 fIsOutOfBand) cil managed
  {
  } // end of method ICorDebugAppDomain::Continue

  .method public hidebysig newslot abstract virtual 
          instance void  IsRunning([out] int32& pbRunning) cil managed
  {
  } // end of method ICorDebugAppDomain::IsRunning

  .method public hidebysig newslot abstract virtual 
          instance void  HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pThread,
                                            [out] int32& pbQueued) cil managed
  {
  } // end of method ICorDebugAppDomain::HasQueuedCallbacks

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum&  marshal( interface ) ppThreads) cil managed
  {
  } // end of method ICorDebugAppDomain::EnumerateThreads

  .method public hidebysig newslot abstract virtual 
          instance void  SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state,
                                                 [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pExceptThisThread) cil managed
  {
  } // end of method ICorDebugAppDomain::SetAllThreadsDebugState

  .method public hidebysig newslot abstract virtual 
          instance void  Detach() cil managed
  {
  } // end of method ICorDebugAppDomain::Detach

  .method public hidebysig newslot abstract virtual 
          instance void  Terminate([in] uint32 exitCode) cil managed
  {
  } // end of method ICorDebugAppDomain::Terminate

  .method public hidebysig newslot abstract virtual 
          instance void  CanCommitChanges([in] uint32 cSnapshots,
                                          [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugAppDomain::CanCommitChanges

  .method public hidebysig newslot abstract virtual 
          instance void  CommitChanges([in] uint32 cSnapshots,
                                       [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugAppDomain::CommitChanges

  .method public hidebysig newslot abstract virtual 
          instance int32  GetProcess([out] native int& ppProcess) cil managed preservesig
  {
  } // end of method ICorDebugAppDomain::GetProcess

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateAssemblies([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssemblyEnum&  marshal( interface ) ppAssemblies) cil managed
  {
  } // end of method ICorDebugAppDomain::EnumerateAssemblies

  .method public hidebysig newslot abstract virtual 
          instance void  GetModuleFromMetaDataInterface([in] object  marshal( iunknown ) pIMetaData,
                                                        [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule&  marshal( interface ) ppModule) cil managed
  {
  } // end of method ICorDebugAppDomain::GetModuleFromMetaDataInterface

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateBreakpoints([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpointEnum&  marshal( interface ) ppBreakpoints) cil managed
  {
  } // end of method ICorDebugAppDomain::EnumerateBreakpoints

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateSteppers([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepperEnum&  marshal( interface ) ppSteppers) cil managed
  {
  } // end of method ICorDebugAppDomain::EnumerateSteppers

  .method public hidebysig newslot abstract virtual 
          instance void  IsAttached([out] int32& pbAttached) cil managed
  {
  } // end of method ICorDebugAppDomain::IsAttached

  .method public hidebysig newslot abstract virtual 
          instance void  GetName([in] uint32 cchName,
                                 [out] uint32& pcchName,
                                 [out] class [mscorlib]System.Text.StringBuilder  marshal( lpwstr) szName) cil managed
  {
  } // end of method ICorDebugAppDomain::GetName

  .method public hidebysig newslot abstract virtual 
          instance void  GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppObject) cil managed
  {
  } // end of method ICorDebugAppDomain::GetObject

  .method public hidebysig newslot abstract virtual 
          instance void  Attach() cil managed
  {
  } // end of method ICorDebugAppDomain::Attach

  .method public hidebysig newslot abstract virtual 
          instance void  GetID([out] uint32& pId) cil managed
  {
  } // end of method ICorDebugAppDomain::GetID

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 44 42 41 32 44 38 43 31 2D 45 35 43 35   // ..$DBA2D8C1-E5C5
                                                                                                  2D 34 30 36 39 2D 38 43 31 33 2D 31 30 41 37 43   // -4069-8C13-10A7C
                                                                                                  36 41 42 46 34 33 44 00 00 )                      // 6ABF43D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess&  marshal( interface ) ppProcess) cil managed
  {
  } // end of method ICorDebugModule::GetProcess

  .method public hidebysig newslot abstract virtual 
          instance void  GetBaseAddress([out] uint64& pAddress) cil managed
  {
  } // end of method ICorDebugModule::GetBaseAddress

  .method public hidebysig newslot abstract virtual 
          instance void  GetAssembly([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly&  marshal( interface ) ppAssembly) cil managed
  {
  } // end of method ICorDebugModule::GetAssembly

  .method public hidebysig newslot abstract virtual 
          instance void  GetName([in] uint32 cchName,
                                 [out] uint32[]  marshal([1 + 0]) pcchName,
                                 [out] char[]  marshal([ + 0]) szName) cil managed
  {
  } // end of method ICorDebugModule::GetName

  .method public hidebysig newslot abstract virtual 
          instance void  EnableJITDebugging([in] int32 bTrackJITInfo,
                                            [in] int32 bAllowJitOpts) cil managed
  {
  } // end of method ICorDebugModule::EnableJITDebugging

  .method public hidebysig newslot abstract virtual 
          instance void  EnableClassLoadCallbacks([in] int32 bClassLoadCallbacks) cil managed
  {
  } // end of method ICorDebugModule::EnableClassLoadCallbacks

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionFromToken([in] uint32 methodDef,
                                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugModule::GetFunctionFromToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionFromRVA([in] uint64 rva,
                                            [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugModule::GetFunctionFromRVA

  .method public hidebysig newslot abstract virtual 
          instance int32  GetClassFromToken([in] uint32 typeDef,
                                            [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass&  marshal( interface ) ppClass) cil managed preservesig
  {
  } // end of method ICorDebugModule::GetClassFromToken

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugModule::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetEditAndContinueSnapshot([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) ppEditAndContinueSnapshot) cil managed
  {
  } // end of method ICorDebugModule::GetEditAndContinueSnapshot

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMetaDataInterface([in] valuetype [mscorlib]System.Guid& riid,
                                               [out] native int& pMetaDataInterface) cil managed preservesig
  {
    .param [1]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 06 52 45 46 49 49 44 00 00 )                // ...REFIID..
  } // end of method ICorDebugModule::GetMetaDataInterface

  .method public hidebysig newslot abstract virtual 
          instance void  GetToken([out] uint32& pToken) cil managed
  {
  } // end of method ICorDebugModule::GetToken

  .method public hidebysig newslot abstract virtual 
          instance void  IsDynamic([out] int32& pDynamic) cil managed
  {
  } // end of method ICorDebugModule::IsDynamic

  .method public hidebysig newslot abstract virtual 
          instance void  GetGlobalVariableValue([in] uint32 fieldDef,
                                                [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugModule::GetGlobalVariableValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pcBytes) cil managed
  {
  } // end of method ICorDebugModule::GetSize

  .method public hidebysig newslot abstract virtual 
          instance void  IsInMemory([out] int32& pInMemory) cil managed
  {
  } // end of method ICorDebugModule::IsInMemory

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 45 46 30 43 34 39 30 42 2D 39 34 43 33   // ..$EF0C490B-94C3
                                                                                                  2D 34 45 34 44 2D 42 36 32 39 2D 44 44 43 31 33   // -4E4D-B629-DDC13
                                                                                                  34 43 35 33 32 44 38 00 00 )                      // 4C532D8..
  .method public hidebysig newslot abstract virtual 
          instance void  SetJMCStatus([in] int32 bIsJustMyCode) cil managed
  {
  } // end of method ICorDebugFunction2::SetJMCStatus

  .method public hidebysig newslot abstract virtual 
          instance void  GetJMCStatus([out] int32& pbIsJustMyCode) cil managed
  {
  } // end of method ICorDebugFunction2::GetJMCStatus

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateNativeCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCodeEnum&  marshal( interface ) ppCodeEnum) cil managed
  {
  } // end of method ICorDebugFunction2::EnumerateNativeCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetVersionNumber([out] uint32& pnVersion) cil managed
  {
  } // end of method ICorDebugFunction2::GetVersionNumber

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction2

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_IL_TO_NATIVE_MAP
       extends [mscorlib]System.ValueType
{
  .field public uint32 ilOffset
  .field public uint32 nativeStartOffset
  .field public uint32 nativeEndOffset
} // end of class Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_IL_TO_NATIVE_MAP

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_STEP_RANGE
       extends [mscorlib]System.ValueType
{
  .field public uint32 startOffset
  .field public uint32 endOffset
} // end of class Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_STEP_RANGE

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.COR_IL_MAP
       extends [mscorlib]System.ValueType
{
  .field public uint32 oldOffset
  .field public uint32 newOffset
  .field public int32 fAccurate
} // end of class Microsoft.VisualStudio.CorDebugInterop.COR_IL_MAP

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.COR_VERSION
       extends [mscorlib]System.ValueType
{
  .field public uint32 dwMajor
  .field public uint32 dwMinor
  .field public uint32 dwBuild
  .field public uint32 dwSubBuild
} // end of class Microsoft.VisualStudio.CorDebugInterop.COR_VERSION

.class public sequential ansi sealed Microsoft.VisualStudio.CorDebugInterop.CodeChunkInfo
       extends [mscorlib]System.ValueType
{
  .field public uint64 startAddr
  .field public uint32 length
} // end of class Microsoft.VisualStudio.CorDebugInterop.CodeChunkInfo

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_CLASS_INIT = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_CONTEXT_POLICY = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_CONTEXT_SWITCH = int32(0x00000400)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_DEBUGGER_EVAL = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_ENTER_MANAGED = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_ENTER_UNMANAGED = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_EXCEPTION_FILTER = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_FUNC_EVAL = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_INTERCEPTION = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_NONE = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_PROCESS_START = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_SECURITY = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason CHAIN_THREAD_START = int32(0x00000040)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugCreateProcessFlags
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugCreateProcessFlags DEBUG_NO_SPECIAL_OPTIONS = int32(0x00000000)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugCreateProcessFlags

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType DEBUG_EXCEPTION_CATCH_HANDLER_FOUND = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType DEBUG_EXCEPTION_FIRST_CHANCE = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType DEBUG_EXCEPTION_UNHANDLED = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType DEBUG_EXCEPTION_USER_FIRST_CHANCE = int32(0x00000002)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionCallbackType

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType DEBUG_EXCEPTION_INTERCEPTED = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType DEBUG_EXCEPTION_UNWIND_BEGIN = int32(0x00000001)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugExceptionUnwindCallbackType

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType HANDLE_STRONG = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType HANDLE_WEAK_TRACK_RESURRECTION = int32(0x00000002)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_ALL = int32(0x0000FFFF)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_CLASS_INIT = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_CONTEXT_POLICY = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_EXCEPTION_FILTER = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_INTERCEPTION = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_NONE = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept INTERCEPT_SECURITY = int32(0x00000004)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_APPDOMAIN_TRANSITION = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_FUNC_EVAL = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_INTERNALCALL = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_LIGHTWEIGHT_FUNCTION = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_M2U = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_NONE = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType STUBFRAME_U2M = int32(0x00000002)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_APPROXIMATE = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_EPILOG = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_EXACT = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_NO_INFO = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_PROLOG = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult MAPPING_UNMAPPED_ADDRESS = int32(0x00000008)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R10 = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R11 = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R12 = int32(0x0000000D)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R13 = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R14 = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R15 = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R8 = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_R9 = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RAX = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RBP = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RBX = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RCX = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RDI = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RDX = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RIP = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RSI = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_RSP = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM0 = int32(0x00000011)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM1 = int32(0x00000012)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM10 = int32(0x0000001B)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM11 = int32(0x0000001C)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM12 = int32(0x0000001D)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM13 = int32(0x0000001E)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM14 = int32(0x0000001F)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM15 = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM2 = int32(0x00000013)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM3 = int32(0x00000014)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM4 = int32(0x00000015)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM5 = int32(0x00000016)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM6 = int32(0x00000017)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM7 = int32(0x00000018)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM8 = int32(0x00000019)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_AMD64_XMM9 = int32(0x0000001A)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_FRAME_POINTER = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_IA64_BSP = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_IA64_F0 = int32(0x00000083)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_IA64_R0 = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_INSTRUCTION_POINTER = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_STACK_POINTER = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EAX = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EBP = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EBX = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_ECX = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EDI = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EDX = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_EIP = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_ESI = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_ESP = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_0 = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_1 = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_2 = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_3 = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_4 = int32(0x0000000D)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_5 = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_6 = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister REGISTER_X86_FPSTACK_7 = int32(0x00000010)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_CALL = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_EXCEPTION_FILTER = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_EXCEPTION_HANDLER = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_EXIT = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_INTERCEPT = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_NORMAL = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason STEP_RETURN = int32(0x00000001)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugStepReason

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState THREAD_RUN = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState THREAD_SUSPEND = int32(0x00000001)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_ALL = int32(0x0000FFFF)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_EPILOG = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_NONE = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_NO_MAPPING_INFO = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_OTHER_UNMAPPED = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_PROLOG = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop STOP_UNMANAGED = int32(0x00000010)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_BACKGROUND = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_STOPPED = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_STOP_REQUESTED = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_SUSPENDED = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_SUSPEND_REQUESTED = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_UNSAFE_POINT = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_UNSTARTED = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState USER_WAIT_SLEEP_JOIN = int32(0x00000020)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorElementType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Array = int32(0x00000014)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Bool = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Byref = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Byte = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType CModOpt = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType CModReqd = int32(0x0000001F)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Char = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Class = int32(0x00000012)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Double = int32(0x0000000D)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType End = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Enum = int32(0x00000055)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Float = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType FnPtr = int32(0x0000001B)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType GenericInstantiation = int32(0x00000015)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Int = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType IntPtr = int32(0x00000018)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Internal = int32(0x00000021)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Long = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Max = int32(0x00000022)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType MethodVar = int32(0x0000001E)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Modifier = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Object = int32(0x0000001C)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Pinned = int32(0x00000045)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Pointer = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType SByte = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Sentinel = int32(0x00000041)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Short = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType String = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType SzArray = int32(0x0000001D)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Type = int32(0x00000050)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType TypeVar = int32(0x00000013)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType TypedByRef = int32(0x00000016)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UInt = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UIntPtr = int32(0x00000019)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ULong = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType UShort = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ValueType = int32(0x00000011)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType ValueZero = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType Void = int32(0x00000001)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorElementType

.class public auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorTokenType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtAssembly = int32(0x20000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtAssemblyRef = int32(0x23000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtBaseType = int32(0x72000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtCustomAttribute = int32(0x0C000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtEvent = int32(0x14000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtExportedType = int32(0x27000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtFieldDef = int32(0x04000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtFile = int32(0x26000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtGenericParam = int32(0x2A000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtGenericParamConstraint = int32(0x2C000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtInterfaceImpl = int32(0x09000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtManifestResource = int32(0x28000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMemberRef = int32(0x0A000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodDef = int32(0x06000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodImpl = int32(0x19000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtMethodSpec = int32(0x2B000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtModule = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtModuleRef = int32(0x1A000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtName = int32(0x71000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtParamDef = int32(0x08000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtPermission = int32(0x0E000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtProperty = int32(0x17000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtSignature = int32(0x11000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtString = int32(0x70000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeDef = int32(0x02000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeRef = int32(0x01000000)
  .field public static literal valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType mdtTypeSpec = int32(0x1B000000)
} // end of class Microsoft.VisualStudio.CorDebugInterop.CorTokenType

.class public abstract auto ansi sealed Microsoft.VisualStudio.CorDebugInterop.CorTokens
       extends [mscorlib]System.Object
{
  .method public hidebysig static int32  TokenFromRid(int32 rid,
                                                      valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType tkType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method CorTokens::TokenFromRid

  .method public hidebysig static int32  RidFromToken(int32 token) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method CorTokens::RidFromToken

  .method public hidebysig static valuetype Microsoft.VisualStudio.CorDebugInterop.CorTokenType 
          TypeFromToken(int32 token) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method CorTokens::TypeFromToken

  .method public hidebysig static bool  IsNilToken(int32 token) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method CorTokens::IsNilToken

} // end of class Microsoft.VisualStudio.CorDebugInterop.CorTokens

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugController
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 44 36 46 35 46 36 32 2D 37 35 33 38   // ..$3D6F5F62-7538
                                                                                                  2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34   // -11D3-8D5B-00104
                                                                                                  42 33 35 45 37 45 46 00 00 )                      // B35E7EF..
  .method public hidebysig newslot abstract virtual 
          instance void  Stop([in] uint32 dwTimeout) cil managed
  {
  } // end of method ICorDebugController::Stop

  .method public hidebysig newslot abstract virtual 
          instance void  Continue([in] int32 fIsOutOfBand) cil managed
  {
  } // end of method ICorDebugController::Continue

  .method public hidebysig newslot abstract virtual 
          instance void  IsRunning([out] int32& pbRunning) cil managed
  {
  } // end of method ICorDebugController::IsRunning

  .method public hidebysig newslot abstract virtual 
          instance void  HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pThread,
                                            [out] int32& pbQueued) cil managed
  {
  } // end of method ICorDebugController::HasQueuedCallbacks

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum&  marshal( interface ) ppThreads) cil managed
  {
  } // end of method ICorDebugController::EnumerateThreads

  .method public hidebysig newslot abstract virtual 
          instance void  SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state,
                                                 [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pExceptThisThread) cil managed
  {
  } // end of method ICorDebugController::SetAllThreadsDebugState

  .method public hidebysig newslot abstract virtual 
          instance void  Detach() cil managed
  {
  } // end of method ICorDebugController::Detach

  .method public hidebysig newslot abstract virtual 
          instance void  Terminate([in] uint32 exitCode) cil managed
  {
  } // end of method ICorDebugController::Terminate

  .method public hidebysig newslot abstract virtual 
          instance void  CanCommitChanges([in] uint32 cSnapshots,
                                          [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugController::CanCommitChanges

  .method public hidebysig newslot abstract virtual 
          instance void  CommitChanges([in] uint32 cSnapshots,
                                       [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugController::CommitChanges

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugController

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 33 38 43 36 44 36 36 2D 37 46 42 36   // ..$938C6D66-7FB6
                                                                                                  2D 34 46 36 39 2D 42 33 38 39 2D 34 32 35 42 38   // -4F69-B389-425B8
                                                                                                  39 38 37 33 32 39 42 00 00 )                      // 987329B..
  .method public hidebysig newslot abstract virtual 
          instance void  GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess&  marshal( interface ) ppProcess) cil managed
  {
  } // end of method ICorDebugThread::GetProcess

  .method public hidebysig newslot abstract virtual 
          instance void  GetID([out] uint32& pdwThreadId) cil managed
  {
  } // end of method ICorDebugThread::GetID

  .method public hidebysig newslot abstract virtual 
          instance void  GetHandle([out] native int& phThreadHandle) cil managed
  {
  } // end of method ICorDebugThread::GetHandle

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAppDomain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain&  marshal( interface ) ppAppDomain) cil managed preservesig
  {
  } // end of method ICorDebugThread::GetAppDomain

  .method public hidebysig newslot abstract virtual 
          instance void  SetDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state) cil managed
  {
  } // end of method ICorDebugThread::SetDebugState

  .method public hidebysig newslot abstract virtual 
          instance void  GetDebugState([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState& pState) cil managed
  {
  } // end of method ICorDebugThread::GetDebugState

  .method public hidebysig newslot abstract virtual 
          instance void  GetUserState([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUserState& pState) cil managed
  {
  } // end of method ICorDebugThread::GetUserState

  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentException([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppExceptionObject) cil managed
  {
  } // end of method ICorDebugThread::GetCurrentException

  .method public hidebysig newslot abstract virtual 
          instance void  ClearCurrentException() cil managed
  {
  } // end of method ICorDebugThread::ClearCurrentException

  .method public hidebysig newslot abstract virtual 
          instance void  CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper&  marshal( interface ) ppStepper) cil managed
  {
  } // end of method ICorDebugThread::CreateStepper

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateChains([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChainEnum&  marshal( interface ) ppChains) cil managed
  {
  } // end of method ICorDebugThread::EnumerateChains

  .method public hidebysig newslot abstract virtual 
          instance void  GetActiveChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugThread::GetActiveChain

  .method public hidebysig newslot abstract virtual 
          instance void  GetActiveFrame([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugThread::GetActiveFrame

  .method public hidebysig newslot abstract virtual 
          instance void  GetRegisterSet([out] native int&  marshal( interface ) ppRegisters) cil managed
  {
  } // end of method ICorDebugThread::GetRegisterSet

  .method public hidebysig newslot abstract virtual 
          instance void  CreateEval([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval&  marshal( interface ) ppEval) cil managed
  {
  } // end of method ICorDebugThread::CreateEval

  .method public hidebysig newslot abstract virtual 
          instance int32  GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppObject) cil managed preservesig
  {
  } // end of method ICorDebugThread::GetObject

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 36 2D 38 41 36 38   // ..$CC7BCB06-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugThreadEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugThreadEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugThreadEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugThreadEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread[]  marshal([ + 0]) threads,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugThreadEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 44 43 33 46 41 30 31 2D 44 37 43 42   // ..$6DC3FA01-D7CB
                                                                                                  2D 31 31 44 32 2D 38 41 39 35 2D 30 30 38 30 43   // -11D2-8A95-0080C
                                                                                                  37 39 32 45 35 44 38 00 00 )                      // 792E5D8..
  .method public hidebysig newslot abstract virtual 
          instance void  CopyMetaData([in] class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream  marshal( interface ) pIStream,
                                      [out] valuetype [mscorlib]System.Guid& pMvid) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::CopyMetaData

  .method public hidebysig newslot abstract virtual 
          instance void  GetMvid([out] valuetype [mscorlib]System.Guid& pMvid) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::GetMvid

  .method public hidebysig newslot abstract virtual 
          instance void  GetRoDataRVA([out] uint32& pRoDataRVA) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::GetRoDataRVA

  .method public hidebysig newslot abstract virtual 
          instance void  GetRwDataRVA([out] uint32& pRwDataRVA) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::GetRwDataRVA

  .method public hidebysig newslot abstract virtual 
          instance void  SetPEBytes([in] class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream  marshal( interface ) pIStream) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::SetPEBytes

  .method public hidebysig newslot abstract virtual 
          instance void  SetILMap([in] uint32 mdFunction,
                                  [in] uint32 cMapSize,
                                  [in] valuetype Microsoft.VisualStudio.CorDebugInterop.COR_IL_MAP& map) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::SetILMap

  .method public hidebysig newslot abstract virtual 
          instance void  SetPESymbolBytes([in] class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream  marshal( interface ) pIStream) cil managed
  {
  } // end of method ICorDebugEditAndContinueSnapshot::SetPESymbolBytes

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 46 30 45 31 38 38 30 39 2D 37 32 42 35   // ..$F0E18809-72B5
                                                                                                  2D 31 31 44 32 2D 39 37 36 46 2D 30 30 41 30 43   // -11D2-976F-00A0C
                                                                                                  39 42 34 44 35 30 43 00 00 )                      // 9B4D50C..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugErrorInfoEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugErrorInfoEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugErrorInfoEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugErrorInfoEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] native int errors,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
    .param [2]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 23 49 43 6F 72 44 65 62 75 67 45 64 69 74   // ..#ICorDebugEdit
                                                                                                            41 6E 64 43 6F 6E 74 69 6E 75 65 45 72 72 6F 72   // AndContinueError
                                                                                                            49 6E 66 6F 2A 2A 00 00 )                         // Info**..
  } // end of method ICorDebugErrorInfoEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssemblyEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 41 32 41 31 45 43 39 2D 38 35 45 43   // ..$4A2A1EC9-85EC
                                                                                                  2D 34 42 46 42 2D 39 46 31 35 2D 41 38 39 46 44   // -4BFB-9F15-A89FD
                                                                                                  46 45 30 46 45 38 33 00 00 )                      // FE0FE83..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugAssemblyEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugAssemblyEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugAssemblyEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugAssemblyEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly[]  marshal([ + 0]) values,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugAssemblyEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssemblyEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpointEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 33 2D 38 41 36 38   // ..$CC7BCB03-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugBreakpointEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugBreakpointEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugBreakpointEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugBreakpointEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint[]  marshal([]) breakpoints,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugBreakpointEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpointEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepperEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 34 2D 38 41 36 38   // ..$CC7BCB04-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugStepperEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugStepperEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugStepperEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugStepperEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper[]  marshal([]) steppers,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugStepperEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepperEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 37 2D 38 41 36 38   // ..$CC7BCAF7-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugValue::CreateBreakpoint

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 39 36 45 38 31 44 35 2D 45 43 44 41   // ..$096E81D5-ECDA
                                                                                                  2D 34 32 30 32 2D 38 33 46 35 2D 43 36 35 39 38   // -4202-83F5-C6598
                                                                                                  30 41 39 45 46 37 35 00 00 )                      // 0A9EF75..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetArrayOrPointerType([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType,
                                               [in] uint32 nRank,
                                               [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType  marshal( interface ) pTypeArg,
                                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) ppType) cil managed
  {
  } // end of method ICorDebugAppDomain2::GetArrayOrPointerType

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionPointerType([in] uint32 nTypeArgs,
                                                [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 0]) ppTypeArgs,
                                                [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) ppType) cil managed
  {
  } // end of method ICorDebugAppDomain2::GetFunctionPointerType

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 44 36 31 33 46 30 42 42 2D 41 43 45 31   // ..$D613F0BB-ACE1
                                                                                                  2D 34 43 31 39 2D 42 44 37 32 2D 45 34 43 30 38   // -4C19-BD72-E4C08
                                                                                                  44 35 44 41 37 46 35 00 00 )                      // D5DA7F5..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& ty) cil managed
  {
  } // end of method ICorDebugType::GetType

  .method public hidebysig newslot abstract virtual 
          instance int32  GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass&  marshal( interface ) ppClass) cil managed preservesig
  {
  } // end of method ICorDebugType::GetClass

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateTypeParameters([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum&  marshal( interface ) ppTyParEnum) cil managed
  {
  } // end of method ICorDebugType::EnumerateTypeParameters

  .method public hidebysig newslot abstract virtual 
          instance void  GetFirstTypeParameter([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) 'value') cil managed
  {
  } // end of method ICorDebugType::GetFirstTypeParameter

  .method public hidebysig newslot abstract virtual 
          instance void  GetBase([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) pBase) cil managed
  {
  } // end of method ICorDebugType::GetBase

  .method public hidebysig newslot abstract virtual 
          instance int32  GetStaticFieldValue([in] uint32 fieldDef,
                                              [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame  marshal( interface ) pFrame,
                                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed preservesig
  {
  } // end of method ICorDebugType::GetStaticFieldValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetRank([out] uint32& pnRank) cil managed
  {
  } // end of method ICorDebugType::GetRank

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomainEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 33 43 41 31 42 32 34 2D 34 33 35 39   // ..$63CA1B24-4359
                                                                                                  2D 34 38 38 33 2D 42 44 35 37 2D 31 33 46 38 31   // -4883-BD57-13F81
                                                                                                  35 46 35 38 37 34 34 00 00 )                      // 5F58744..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugAppDomainEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugAppDomainEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugAppDomainEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugAppDomainEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain[]  marshal([ + 0]) values,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugAppDomainEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomainEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 31 2D 38 41 36 38   // ..$CC7BCB01-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugEnum::GetCount

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugArrayValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue,
                  Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 34 30 35 42 30 44 46 2D 41 36 36 30   // ..$0405B0DF-A660
                                                                                                  2D 31 31 44 32 2D 42 44 30 32 2D 30 30 30 30 46   // -11D2-BD02-0000F
                                                                                                  38 30 38 34 39 42 44 00 00 )                      // 80849BD..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugArrayValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugArrayValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugArrayValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugArrayValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsValid([out] int32& pbValid) cil managed
  {
  } // end of method ICorDebugArrayValue::IsValid

  .method public hidebysig newslot abstract virtual 
          instance void  CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugArrayValue::CreateRelocBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetElementType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugArrayValue::GetElementType

  .method public hidebysig newslot abstract virtual 
          instance void  GetRank([out] uint32& pnRank) cil managed
  {
  } // end of method ICorDebugArrayValue::GetRank

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pnCount) cil managed
  {
  } // end of method ICorDebugArrayValue::GetCount

  .method public hidebysig newslot abstract virtual 
          instance void  GetDimensions([in] uint32 cdim,
                                       [out] uint32[]  marshal([ + 0]) dims) cil managed
  {
  } // end of method ICorDebugArrayValue::GetDimensions

  .method public hidebysig newslot abstract virtual 
          instance void  HasBaseIndicies([out] int32& pbHasBaseIndicies) cil managed
  {
  } // end of method ICorDebugArrayValue::HasBaseIndicies

  .method public hidebysig newslot abstract virtual 
          instance void  GetBaseIndicies([in] uint32 cdim,
                                         [out] uint32[]  marshal([ + 0]) indicies) cil managed
  {
  } // end of method ICorDebugArrayValue::GetBaseIndicies

  .method public hidebysig newslot abstract virtual 
          instance void  GetElement([in] uint32 cdim,
                                    [in] int32[]  marshal([ + 0]) indices,
                                    [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugArrayValue::GetElement

  .method public hidebysig newslot abstract virtual 
          instance void  GetElementAtPosition([in] uint32 nPosition,
                                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugArrayValue::GetElementAtPosition

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugArrayValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 41 2D 38 41 36 38   // ..$CC7BCAFA-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugHeapValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugHeapValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugHeapValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugHeapValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsValid([out] int32& pbValid) cil managed
  {
  } // end of method ICorDebugHeapValue::IsValid

  .method public hidebysig newslot abstract virtual 
          instance void  CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugHeapValue::CreateRelocBreakpoint

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 42 2D 38 41 36 38   // ..$CC7BCAEB-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Activate([in] int32 bActive) cil managed
  {
  } // end of method ICorDebugValueBreakpoint::Activate

  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugValueBreakpoint::IsActive

  .method public hidebysig newslot abstract virtual 
          instance void  GetValue([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugValueBreakpoint::GetValue

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 44 46 35 39 35 30 37 43 2D 44 34 37 41   // ..$DF59507C-D47A
                                                                                                  2D 34 35 39 45 2D 42 43 45 32 2D 36 34 32 37 45   // -459E-BCE2-6427E
                                                                                                  41 43 38 46 44 30 36 00 00 )                      // AC8FD06..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetProcess([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess&  marshal( interface ) ppProcess) cil managed
  {
  } // end of method ICorDebugAssembly::GetProcess

  .method public hidebysig newslot abstract virtual 
          instance void  GetAppDomain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain&  marshal( interface ) ppAppDomain) cil managed
  {
  } // end of method ICorDebugAssembly::GetAppDomain

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateModules([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleEnum&  marshal( interface ) ppModules) cil managed
  {
  } // end of method ICorDebugAssembly::EnumerateModules

  .method public hidebysig newslot abstract virtual 
          instance void  GetCodeBase([in] uint32 cchName,
                                     [out] uint32& pcchName,
                                     char[]  marshal([]) szName) cil managed
  {
  } // end of method ICorDebugAssembly::GetCodeBase

  .method public hidebysig newslot abstract virtual 
          instance void  GetName([in] uint32 cchName,
                                 [out] uint32& pcchName,
                                 char[]  marshal([]) szName) cil managed
  {
  } // end of method ICorDebugAssembly::GetName

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugController
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 44 36 46 35 46 36 34 2D 37 35 33 38   // ..$3D6F5F64-7538
                                                                                                  2D 31 31 44 33 2D 38 44 35 42 2D 30 30 31 30 34   // -11D3-8D5B-00104
                                                                                                  42 33 35 45 37 45 46 00 00 )                      // B35E7EF..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Stop([in] uint32 dwTimeout) cil managed
  {
  } // end of method ICorDebugProcess::Stop

  .method public hidebysig newslot abstract virtual 
          instance void  Continue([in] int32 fIsOutOfBand) cil managed
  {
  } // end of method ICorDebugProcess::Continue

  .method public hidebysig newslot abstract virtual 
          instance void  IsRunning([out] int32& pbRunning) cil managed
  {
  } // end of method ICorDebugProcess::IsRunning

  .method public hidebysig newslot abstract virtual 
          instance void  HasQueuedCallbacks([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pThread,
                                            [out] int32& pbQueued) cil managed
  {
  } // end of method ICorDebugProcess::HasQueuedCallbacks

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateThreads([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThreadEnum&  marshal( interface ) ppThreads) cil managed
  {
  } // end of method ICorDebugProcess::EnumerateThreads

  .method public hidebysig newslot abstract virtual 
          instance void  SetAllThreadsDebugState([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugThreadState state,
                                                 [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread  marshal( interface ) pExceptThisThread) cil managed
  {
  } // end of method ICorDebugProcess::SetAllThreadsDebugState

  .method public hidebysig newslot abstract virtual 
          instance void  Detach() cil managed
  {
  } // end of method ICorDebugProcess::Detach

  .method public hidebysig newslot abstract virtual 
          instance void  Terminate([in] uint32 exitCode) cil managed
  {
  } // end of method ICorDebugProcess::Terminate

  .method public hidebysig newslot abstract virtual 
          instance void  CanCommitChanges([in] uint32 cSnapshots,
                                          [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugProcess::CanCommitChanges

  .method public hidebysig newslot abstract virtual 
          instance void  CommitChanges([in] uint32 cSnapshots,
                                       [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEditAndContinueSnapshot&  marshal( interface ) pSnapshots,
                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugErrorInfoEnum&  marshal( interface ) pError) cil managed
  {
  } // end of method ICorDebugProcess::CommitChanges

  .method public hidebysig newslot abstract virtual 
          instance void  GetID([out] uint32& pdwProcessId) cil managed
  {
  } // end of method ICorDebugProcess::GetID

  .method public hidebysig newslot abstract virtual 
          instance void  GetHandle([out] native int& phProcessHandle) cil managed
  {
    .param [1]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 09 48 50 52 4F 43 45 53 53 2A 00 00 )       // ...HPROCESS*..
  } // end of method ICorDebugProcess::GetHandle

  .method public hidebysig newslot abstract virtual 
          instance void  GetThread([in] uint32 dwThreadId,
                                   [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread&  marshal( interface ) ppThread) cil managed
  {
  } // end of method ICorDebugProcess::GetThread

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateObjects([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectEnum&  marshal( interface ) ppObjects) cil managed
  {
  } // end of method ICorDebugProcess::EnumerateObjects

  .method public hidebysig newslot abstract virtual 
          instance void  IsTransitionStub([in] uint64 address,
                                          [out] int32& pbTransitionStub) cil managed
  {
  } // end of method ICorDebugProcess::IsTransitionStub

  .method public hidebysig newslot abstract virtual 
          instance void  IsOSSuspended([in] uint32 threadID,
                                       [out] int32& pbSuspended) cil managed
  {
  } // end of method ICorDebugProcess::IsOSSuspended

  .method public hidebysig newslot abstract virtual 
          instance void  GetThreadContext([in] uint32 threadID,
                                          [in] uint32 contextSize,
                                          [in] native int context) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 05 42 59 54 45 2A 00 00 )                   // ...BYTE*..
  } // end of method ICorDebugProcess::GetThreadContext

  .method public hidebysig newslot abstract virtual 
          instance void  SetThreadContext([in] uint32 threadID,
                                          [in] uint32 contextSize,
                                          [in] native int context) cil managed
  {
    .param [3]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 05 42 59 54 45 2A 00 00 )                   // ...BYTE*..
  } // end of method ICorDebugProcess::SetThreadContext

  .method public hidebysig newslot abstract virtual 
          instance int32  ReadMemory([in] uint64 address,
                                     [in] uint32 size,
                                     [out] uint8[]  marshal([ + 1]) buffer,
                                     [out] native int& read) cil managed preservesig
  {
    .param [4]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 07 53 49 5A 45 5F 54 2A 00 00 )             // ...SIZE_T*..
  } // end of method ICorDebugProcess::ReadMemory

  .method public hidebysig newslot abstract virtual 
          instance void  WriteMemory([in] uint64 address,
                                     [in] uint32 size,
                                     [in] uint8[]  marshal([ + 1]) buffer,
                                     [out] native int& written) cil managed
  {
    .param [4]
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComAliasNameAttribute::.ctor(string) = ( 01 00 07 53 49 5A 45 5F 54 2A 00 00 )             // ...SIZE_T*..
  } // end of method ICorDebugProcess::WriteMemory

  .method public hidebysig newslot abstract virtual 
          instance void  ClearCurrentException([in] uint32 threadID) cil managed
  {
  } // end of method ICorDebugProcess::ClearCurrentException

  .method public hidebysig newslot abstract virtual 
          instance void  EnableLogMessages([in] int32 fOnOff) cil managed
  {
  } // end of method ICorDebugProcess::EnableLogMessages

  .method public hidebysig newslot abstract virtual 
          instance void  ModifyLogSwitch([in] string  marshal( lpwstr) pLogSwitchName,
                                         [in] int32 lLevel) cil managed
  {
  } // end of method ICorDebugProcess::ModifyLogSwitch

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateAppDomains([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomainEnum&  marshal( interface ) ppAppDomains) cil managed
  {
  } // end of method ICorDebugProcess::EnumerateAppDomains

  .method public hidebysig newslot abstract virtual 
          instance void  GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppObject) cil managed
  {
  } // end of method ICorDebugProcess::GetObject

  .method public hidebysig newslot abstract virtual 
          instance void  ThreadForFiberCookie([in] uint32 fiberCookie,
                                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread&  marshal( interface ) ppThread) cil managed
  {
  } // end of method ICorDebugProcess::ThreadForFiberCookie

  .method public hidebysig newslot abstract virtual 
          instance void  GetHelperThreadID([out] uint32& pThreadID) cil managed
  {
  } // end of method ICorDebugProcess::GetHelperThreadID

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 39 2D 38 41 36 38   // ..$CC7BCB09-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugModuleEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugModuleEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugModuleEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugModuleEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance void  Next([in] uint32 celt,
                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule[]  marshal([ + 0]) modules,
                              [out] uint32& pceltFetched) cil managed
  {
  } // end of method ICorDebugModuleEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 32 36 44 31 46 39 45 2D 36 44 44 34   // ..$426D1F9E-6DD4
                                                                                                  2D 34 34 43 38 2D 41 45 43 37 2D 32 36 43 44 42   // -44C8-AEC7-26CDB
                                                                                                  41 46 34 45 33 39 38 00 00 )                      // AF4E398..
  .method public hidebysig newslot abstract virtual 
          instance void  IsFullyTrusted([out] int32& pbFullyTrusted) cil managed
  {
  } // end of method ICorDebugAssembly2::IsFullyTrusted

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugBoxValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue,
                  Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 43 2D 38 41 36 38   // ..$CC7BCAFC-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugBoxValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugBoxValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugBoxValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugBoxValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsValid([out] int32& pbValid) cil managed
  {
  } // end of method ICorDebugBoxValue::IsValid

  .method public hidebysig newslot abstract virtual 
          instance void  CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugBoxValue::CreateRelocBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetObject([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue&  marshal( interface ) ppObject) cil managed
  {
  } // end of method ICorDebugBoxValue::GetObject

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBoxValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 38 41 44 33 44 36 45 2D 42 37 44 32   // ..$18AD3D6E-B7D2
                                                                                                  2D 31 31 44 32 2D 42 44 30 34 2D 30 30 30 30 46   // -11D2-BD04-0000F
                                                                                                  38 30 38 34 39 42 44 00 00 )                      // 80849BD..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugObjectValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugObjectValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugObjectValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugObjectValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance int32  GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass&  marshal( interface ) ppClass) cil managed preservesig
  {
  } // end of method ICorDebugObjectValue::GetClass

  .method public hidebysig newslot abstract virtual 
          instance int32  GetFieldValue([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pClass,
                                        [in] uint32 fieldDef,
                                        [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed preservesig
  {
  } // end of method ICorDebugObjectValue::GetFieldValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetVirtualMethod([in] uint32 memberRef,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugObjectValue::GetVirtualMethod

  .method public hidebysig newslot abstract virtual 
          instance void  GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext&  marshal( interface ) ppContext) cil managed
  {
  } // end of method ICorDebugObjectValue::GetContext

  .method public hidebysig newslot abstract virtual 
          instance void  IsValueClass([out] int32& pbIsValueClass) cil managed
  {
  } // end of method ICorDebugObjectValue::IsValueClass

  .method public hidebysig newslot abstract virtual 
          instance void  GetManagedCopy([out] object&  marshal( iunknown ) ppObject) cil managed
  {
  } // end of method ICorDebugObjectValue::GetManagedCopy

  .method public hidebysig newslot abstract virtual 
          instance void  SetFromManagedCopy([in] object  marshal( iunknown ) pObject) cil managed
  {
  } // end of method ICorDebugObjectValue::SetFromManagedCopy

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 38 2D 38 41 36 38   // ..$CC7BCAE8-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Activate([in] int32 bActive) cil managed
  {
  } // end of method ICorDebugBreakpoint::Activate

  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugBreakpoint::IsActive

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 45 2D 38 41 36 38   // ..$CC7BCAEE-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetThread([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread&  marshal( interface ) ppThread) cil managed
  {
  } // end of method ICorDebugChain::GetThread

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackRange([out] uint64& pStart,
                                       [out] uint64& pEnd) cil managed
  {
  } // end of method ICorDebugChain::GetStackRange

  .method public hidebysig newslot abstract virtual 
          instance void  GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext&  marshal( interface ) ppContext) cil managed
  {
  } // end of method ICorDebugChain::GetContext

  .method public hidebysig newslot abstract virtual 
          instance void  GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugChain::GetCaller

  .method public hidebysig newslot abstract virtual 
          instance void  GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugChain::GetCallee

  .method public hidebysig newslot abstract virtual 
          instance void  GetPrevious([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugChain::GetPrevious

  .method public hidebysig newslot abstract virtual 
          instance void  GetNext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugChain::GetNext

  .method public hidebysig newslot abstract virtual 
          instance void  IsManaged([out] int32& pManaged) cil managed
  {
  } // end of method ICorDebugChain::IsManaged

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateFrames([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrameEnum&  marshal( interface ) ppFrames) cil managed
  {
  } // end of method ICorDebugChain::EnumerateFrames

  .method public hidebysig newslot abstract virtual 
          instance void  GetActiveFrame([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugChain::GetActiveFrame

  .method public hidebysig newslot abstract virtual 
          instance void  GetRegisterSet([out] native int&  marshal( interface ) ppRegisters) cil managed
  {
  } // end of method ICorDebugChain::GetRegisterSet

  .method public hidebysig newslot abstract virtual 
          instance void  GetReason([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugChainReason& pReason) cil managed
  {
  } // end of method ICorDebugChain::GetReason

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue,
                  Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 30 2D 38 41 36 38   // ..$CC7BCB00-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugContext::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugContext::GetSize

  .method public hidebysig newslot abstract virtual 
          instance void  GetAddress([out] uint64& pAddress) cil managed
  {
  } // end of method ICorDebugContext::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugContext::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass&  marshal( interface ) ppClass) cil managed
  {
  } // end of method ICorDebugContext::GetClass

  .method public hidebysig newslot abstract virtual 
          instance int32  GetFieldValue([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pClass,
                                        [in] uint32 fieldDef,
                                        [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugContext::GetFieldValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetVirtualMethod([in] uint32 memberRef,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugContext::GetVirtualMethod

  .method public hidebysig newslot abstract virtual 
          instance void  GetContext([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext&  marshal( interface ) ppContext) cil managed
  {
  } // end of method ICorDebugContext::GetContext

  .method public hidebysig newslot abstract virtual 
          instance void  IsValueClass([out] int32& pbIsValueClass) cil managed
  {
  } // end of method ICorDebugContext::IsValueClass

  .method public hidebysig newslot abstract virtual 
          instance void  GetManagedCopy([out] object&  marshal( iunknown ) ppObject) cil managed
  {
  } // end of method ICorDebugContext::GetManagedCopy

  .method public hidebysig newslot abstract virtual 
          instance void  SetFromManagedCopy([in] object  marshal( iunknown ) pObject) cil managed
  {
  } // end of method ICorDebugContext::SetFromManagedCopy

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugContext

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrameEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 37 2D 38 41 36 38   // ..$CC7BCB07-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugFrameEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugFrameEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugFrameEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugFrameEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame[]  marshal([]) frames,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugFrameEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrameEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 46 2D 38 41 36 38   // ..$CC7BCAEF-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance int32  GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed preservesig
  {
  } // end of method ICorDebugFrame::GetChain

  .method public hidebysig newslot abstract virtual 
          instance void  GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed
  {
  } // end of method ICorDebugFrame::GetCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugFrame::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionToken([out] uint32& pToken) cil managed
  {
  } // end of method ICorDebugFrame::GetFunctionToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackRange([out] uint64& pStart,
                                       [out] uint64& pEnd) cil managed
  {
  } // end of method ICorDebugFrame::GetStackRange

  .method public hidebysig newslot abstract virtual 
          instance void  GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugFrame::GetCaller

  .method public hidebysig newslot abstract virtual 
          instance void  GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugFrame::GetCallee

  .method public hidebysig newslot abstract virtual 
          instance void  CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper&  marshal( interface ) ppStepper) cil managed
  {
  } // end of method ICorDebugFrame::CreateStepper

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugChainEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 38 2D 38 41 36 38   // ..$CC7BCB08-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugChainEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugChainEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugChainEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugChainEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain[]  marshal([]) chains,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugChainEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChainEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 35 2D 38 41 36 38   // ..$CC7BCAF5-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule&  marshal( interface ) pModule) cil managed
  {
  } // end of method ICorDebugClass::GetModule

  .method public hidebysig newslot abstract virtual 
          instance void  GetToken([out] uint32& pTypeDef) cil managed
  {
  } // end of method ICorDebugClass::GetToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetStaticFieldValue([in] uint32 fieldDef,
                                             [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame  marshal( interface ) pFrame,
                                             [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugClass::GetStaticFieldValue

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 42 30 30 38 45 41 38 44 2D 37 41 42 31   // ..$B008EA8D-7AB1
                                                                                                  2D 34 33 46 37 2D 42 42 32 30 2D 46 42 42 35 41   // -43F7-BB20-FBB5A
                                                                                                  30 34 30 33 38 41 45 00 00 )                      // 04038AE..
  .method public hidebysig newslot abstract virtual 
          instance void  GetParameterizedType([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType,
                                              [in] uint32 nTypeArgs,
                                              [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 1]) ppTypeArgs,
                                              [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) ppType) cil managed
  {
  } // end of method ICorDebugClass2::GetParameterizedType

  .method public hidebysig newslot abstract virtual 
          instance void  SetJMCStatus([in] int32 bIsJustMyCode) cil managed
  {
  } // end of method ICorDebugClass2::SetJMCStatus

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 34 2D 38 41 36 38   // ..$CC7BCAF4-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  IsIL([out] int32& pbIL) cil managed
  {
  } // end of method ICorDebugCode::IsIL

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugCode::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetAddress([out] uint64& pStart) cil managed
  {
  } // end of method ICorDebugCode::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pcBytes) cil managed
  {
  } // end of method ICorDebugCode::GetSize

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([in] uint32 offset,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugCode::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance int32  GetCode([in] uint32 startOffset,
                                  [in] uint32 endOffset,
                                  [in] uint32 cBufferAlloc,
                                  [out] uint8[]  marshal([ + 4]) buffer,
                                  [out] uint32& pcBufferSize) cil managed preservesig
  {
  } // end of method ICorDebugCode::GetCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetVersionNumber([out] uint32& nVersion) cil managed
  {
  } // end of method ICorDebugCode::GetVersionNumber

  .method public hidebysig newslot abstract virtual 
          instance void  GetILToNativeMapping([in] uint32 cMap,
                                              [out] uint32& pcMap,
                                              [out] valuetype Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_IL_TO_NATIVE_MAP[]  marshal([ + 1]) map) cil managed
  {
  } // end of method ICorDebugCode::GetILToNativeMapping

  .method public hidebysig newslot abstract virtual 
          instance void  GetEnCRemapSequencePoints([in] uint32 cMap,
                                                   [out] uint32& pcMap,
                                                   [out] uint32[]  marshal([]) offsets) cil managed
  {
  } // end of method ICorDebugCode::GetEnCRemapSequencePoints

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 33 2D 38 41 36 38   // ..$CC7BCAF3-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule&  marshal( interface ) ppModule) cil managed
  {
  } // end of method ICorDebugFunction::GetModule

  .method public hidebysig newslot abstract virtual 
          instance void  GetClass([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass&  marshal( interface ) ppClass) cil managed
  {
  } // end of method ICorDebugFunction::GetClass

  .method public hidebysig newslot abstract virtual 
          instance void  GetToken([out] uint32& pMethodDef) cil managed
  {
  } // end of method ICorDebugFunction::GetToken

  .method public hidebysig newslot abstract virtual 
          instance int32  GetILCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed preservesig
  {
  } // end of method ICorDebugFunction::GetILCode

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNativeCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed preservesig
  {
  } // end of method ICorDebugFunction::GetNativeCode

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugFunction::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalVarSigToken([out] uint32& pmdSig) cil managed
  {
  } // end of method ICorDebugFunction::GetLocalVarSigToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentVersionNumber([out] uint32& pnCurrentVersion) cil managed
  {
  } // end of method ICorDebugFunction::GetCurrentVersionNumber

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 39 2D 38 41 36 38   // ..$CC7BCAE9-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  Activate([in] int32 bActive) cil managed
  {
  } // end of method ICorDebugFunctionBreakpoint::Activate

  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugFunctionBreakpoint::IsActive

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugFunctionBreakpoint::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetOffset([out] uint32& pnOffset) cil managed
  {
  } // end of method ICorDebugFunctionBreakpoint::GetOffset

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunctionBreakpoint

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 46 36 39 36 35 30 39 2D 34 35 32 46   // ..$5F696509-452F
                                                                                                  2D 34 34 33 36 2D 41 33 46 45 2D 34 44 31 31 46   // -4436-A3FE-4D11F
                                                                                                  45 37 45 32 33 34 37 00 00 )                      // E7E2347..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetCodeChunks([in] uint32 cbufSize,
                                       [out] uint32& pcnumChunks,
                                       [out] valuetype Microsoft.VisualStudio.CorDebugInterop.CodeChunkInfo[]  marshal([ + 1]) chunks) cil managed
  {
  } // end of method ICorDebugCode2::GetCodeChunks

  .method public hidebysig newslot abstract virtual 
          instance void  GetCompilerFlags([out] uint32& pdwFlags) cil managed
  {
  } // end of method ICorDebugCode2::GetCompilerFlags

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugCodeEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 35 45 39 36 34 36 31 2D 39 36 34 35   // ..$55E96461-9645
                                                                                                  2D 34 35 45 34 2D 41 32 46 46 2D 30 33 36 37 38   // -45E4-A2FF-03678
                                                                                                  37 37 41 42 43 44 45 00 00 )                      // 77ABCDE..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugCodeEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugCodeEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugCodeEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugCodeEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode[]  marshal([]) values,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugCodeEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCodeEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 36 2D 38 41 36 38   // ..$CC7BCAF6-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  CallFunction([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction  marshal( interface ) pFunction,
                                      [in] uint32 nArgs,
                                      [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[]  marshal([ + 1]) ppArgs) cil managed
  {
  } // end of method ICorDebugEval::CallFunction

  .method public hidebysig newslot abstract virtual 
          instance void  NewObject([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction  marshal( interface ) pConstructor,
                                   [in] uint32 nArgs,
                                   [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[]  marshal([ + 1]) ppArgs) cil managed
  {
  } // end of method ICorDebugEval::NewObject

  .method public hidebysig newslot abstract virtual 
          instance void  NewObjectNoConstructor([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pClass) cil managed
  {
  } // end of method ICorDebugEval::NewObjectNoConstructor

  .method public hidebysig newslot abstract virtual 
          instance void  NewString([in] string  marshal( lpwstr) 'string') cil managed
  {
  } // end of method ICorDebugEval::NewString

  .method public hidebysig newslot abstract virtual 
          instance void  NewArray([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType,
                                  [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pElementClass,
                                  [in] uint32 rank,
                                  [in] uint32& dims,
                                  [in] uint32& lowBounds) cil managed
  {
  } // end of method ICorDebugEval::NewArray

  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugEval::IsActive

  .method public hidebysig newslot abstract virtual 
          instance void  Abort() cil managed
  {
  } // end of method ICorDebugEval::Abort

  .method public hidebysig newslot abstract virtual 
          instance void  GetResult([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppResult) cil managed
  {
  } // end of method ICorDebugEval::GetResult

  .method public hidebysig newslot abstract virtual 
          instance void  GetThread([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread&  marshal( interface ) ppThread) cil managed
  {
  } // end of method ICorDebugEval::GetThread

  .method public hidebysig newslot abstract virtual 
          instance void  CreateValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType elementType,
                                     [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pElementClass,
                                     [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugEval::CreateValue

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 46 42 30 44 39 43 45 37 2D 42 45 36 36   // ..$FB0D9CE7-BE66
                                                                                                  2D 34 36 38 33 2D 39 44 33 32 2D 41 34 32 41 30   // -4683-9D32-A42A0
                                                                                                  34 45 32 46 44 39 31 00 00 )                      // 4E2FD91..
  .method public hidebysig newslot abstract virtual 
          instance void  CallParameterizedFunction([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction  marshal( interface ) pFunction,
                                                   [in] uint32 nTypeArgs,
                                                   [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 1]) ppTypeArgs,
                                                   [in] uint32 nArgs,
                                                   [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[]  marshal([ + 3]) ppArgs) cil managed
  {
  } // end of method ICorDebugEval2::CallParameterizedFunction

  .method public hidebysig newslot abstract virtual 
          instance void  CreateValueForType([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType  marshal( interface ) pType,
                                            [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugEval2::CreateValueForType

  .method public hidebysig newslot abstract virtual 
          instance void  NewParameterizedObject([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction  marshal( interface ) pConstructor,
                                                [in] uint32 nTypeArgs,
                                                [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 1]) ppTypeArgs,
                                                [in] uint32 nArgs,
                                                [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[]  marshal([ + 3]) ppArgs) cil managed
  {
  } // end of method ICorDebugEval2::NewParameterizedObject

  .method public hidebysig newslot abstract virtual 
          instance void  NewParameterizedObjectNoConstructor([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugClass  marshal( interface ) pClass,
                                                             [in] uint32 nTypeArgs,
                                                             [in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 1]) ppTypeArgs) cil managed
  {
  } // end of method ICorDebugEval2::NewParameterizedObjectNoConstructor

  .method public hidebysig newslot abstract virtual 
          instance void  NewParameterizedArray([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType  marshal( interface ) pElementType,
                                               [in] uint32 rank,
                                               [in] uint32[]  marshal([ + 1]) dims,
                                               [in] uint32[]  marshal([ + 1]) lowBounds) cil managed
  {
  } // end of method ICorDebugEval2::NewParameterizedArray

  .method public hidebysig newslot abstract virtual 
          instance void  NewStringWithLength([in] char[]  marshal([ + 1]) chars,
                                             [in] uint32 uiLength) cil managed
  {
  } // end of method ICorDebugEval2::NewStringWithLength

  .method public hidebysig newslot abstract virtual 
          instance void  RudeAbort() cil managed
  {
  } // end of method ICorDebugEval2::RudeAbort

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 43 2D 38 41 36 38   // ..$CC7BCAEC-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugStepper::IsActive

  .method public hidebysig newslot abstract virtual 
          instance void  Deactivate() cil managed
  {
  } // end of method ICorDebugStepper::Deactivate

  .method public hidebysig newslot abstract virtual 
          instance void  SetInterceptMask([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugIntercept mask) cil managed
  {
  } // end of method ICorDebugStepper::SetInterceptMask

  .method public hidebysig newslot abstract virtual 
          instance void  SetUnmappedStopMask([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugUnmappedStop mask) cil managed
  {
  } // end of method ICorDebugStepper::SetUnmappedStopMask

  .method public hidebysig newslot abstract virtual 
          instance void  Step([in] int32 bStepIn) cil managed
  {
  } // end of method ICorDebugStepper::Step

  .method public hidebysig newslot abstract virtual 
          instance void  StepRange([in] int32 bStepIn,
                                   [in] valuetype Microsoft.VisualStudio.CorDebugInterop.COR_DEBUG_STEP_RANGE[]  marshal([]) ranges,
                                   [in] uint32 cRangeCount) cil managed
  {
  } // end of method ICorDebugStepper::StepRange

  .method public hidebysig newslot abstract virtual 
          instance void  StepOut() cil managed
  {
  } // end of method ICorDebugStepper::StepOut

  .method public hidebysig newslot abstract virtual 
          instance void  SetRangeIL([in] int32 bIL) cil managed
  {
  } // end of method ICorDebugStepper::SetRangeIL

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugGenericValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 38 2D 38 41 36 38   // ..$CC7BCAF8-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugGenericValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugGenericValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugGenericValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugGenericValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetValue([out] native int pTo) cil managed
  {
  } // end of method ICorDebugGenericValue::GetValue

  .method public hidebysig newslot abstract virtual 
          instance void  SetValue([in] native int pFrom) cil managed
  {
  } // end of method ICorDebugGenericValue::SetValue

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugGenericValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue,
                  Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 32 39 35 39 36 45 38 2D 32 37 36 42   // ..$029596E8-276B
                                                                                                  2D 34 36 41 31 2D 39 38 32 31 2D 37 33 32 45 39   // -46A1-9821-732E9
                                                                                                  36 42 42 42 30 30 42 00 00 )                      // 6BBB00B..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugHandleValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugHandleValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugHandleValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugHandleValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsNull([out] int32& pbNull) cil managed
  {
  } // end of method ICorDebugHandleValue::IsNull

  .method public hidebysig newslot abstract virtual 
          instance void  GetValue([out] uint64& pValue) cil managed
  {
  } // end of method ICorDebugHandleValue::GetValue

  .method public hidebysig newslot abstract virtual 
          instance void  SetValue([in] uint64 'value') cil managed
  {
  } // end of method ICorDebugHandleValue::SetValue

  .method public hidebysig newslot abstract virtual 
          instance int32  Dereference([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed preservesig
  {
  } // end of method ICorDebugHandleValue::Dereference

  .method public hidebysig newslot abstract virtual 
          instance void  DereferenceStrong([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugHandleValue::DereferenceStrong

  .method public hidebysig newslot abstract virtual 
          instance void  GetHandleType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType& pType) cil managed
  {
  } // end of method ICorDebugHandleValue::GetHandleType

  .method public hidebysig newslot abstract virtual 
          instance int32  Dispose() cil managed preservesig
  {
  } // end of method ICorDebugHandleValue::Dispose

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 39 2D 38 41 36 38   // ..$CC7BCAF9-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugReferenceValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugReferenceValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugReferenceValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugReferenceValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsNull([out] int32& pbNull) cil managed
  {
  } // end of method ICorDebugReferenceValue::IsNull

  .method public hidebysig newslot abstract virtual 
          instance void  GetValue([out] uint64& pValue) cil managed
  {
  } // end of method ICorDebugReferenceValue::GetValue

  .method public hidebysig newslot abstract virtual 
          instance void  SetValue([in] uint64 'value') cil managed
  {
  } // end of method ICorDebugReferenceValue::SetValue

  .method public hidebysig newslot abstract virtual 
          instance int32  Dereference([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed preservesig
  {
  } // end of method ICorDebugReferenceValue::Dereference

  .method public hidebysig newslot abstract virtual 
          instance void  DereferenceStrong([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugReferenceValue::DereferenceStrong

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 45 33 41 43 34 44 36 43 2D 39 43 42 37   // ..$E3AC4D6C-9CB7
                                                                                                  2D 34 33 45 36 2D 39 36 43 43 2D 42 32 31 35 34   // -43E6-96CC-B2154
                                                                                                  30 45 35 30 38 33 43 00 00 )                      // 0E5083C..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  CreateHandle([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugHandleType 'type',
                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue&  marshal( interface ) ppHandle) cil managed preservesig
  {
  } // end of method ICorDebugHeapValue2::CreateHandle

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugILFrame
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 33 45 32 36 33 31 31 2D 34 46 37 36   // ..$03E26311-4F76
                                                                                                  2D 31 31 44 33 2D 38 38 43 36 2D 30 30 36 30 39   // -11D3-88C6-00609
                                                                                                  37 39 34 35 34 31 38 00 00 )                      // 7945418..
  .method public hidebysig newslot abstract virtual 
          instance int32  GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed preservesig
  {
  } // end of method ICorDebugILFrame::GetChain

  .method public hidebysig newslot abstract virtual 
          instance void  GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed
  {
  } // end of method ICorDebugILFrame::GetCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugILFrame::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionToken([out] uint32& pToken) cil managed
  {
  } // end of method ICorDebugILFrame::GetFunctionToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackRange([out] uint64& pStart,
                                       [out] uint64& pEnd) cil managed
  {
  } // end of method ICorDebugILFrame::GetStackRange

  .method public hidebysig newslot abstract virtual 
          instance void  GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugILFrame::GetCaller

  .method public hidebysig newslot abstract virtual 
          instance void  GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugILFrame::GetCallee

  .method public hidebysig newslot abstract virtual 
          instance void  CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper&  marshal( interface ) ppStepper) cil managed
  {
  } // end of method ICorDebugILFrame::CreateStepper

  .method public hidebysig newslot abstract virtual 
          instance void  GetIP([out] uint32& pnOffset,
                               [out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugMappingResult& pMappingResult) cil managed
  {
  } // end of method ICorDebugILFrame::GetIP

  .method public hidebysig newslot abstract virtual 
          instance void  SetIP([in] uint32 nOffset) cil managed
  {
  } // end of method ICorDebugILFrame::SetIP

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateLocalVariables([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum&  marshal( interface ) ppValueEnum) cil managed
  {
  } // end of method ICorDebugILFrame::EnumerateLocalVariables

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalVariable([in] uint32 dwIndex,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugILFrame::GetLocalVariable

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateArguments([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum&  marshal( interface ) ppValueEnum) cil managed
  {
  } // end of method ICorDebugILFrame::EnumerateArguments

  .method public hidebysig newslot abstract virtual 
          instance int32  GetArgument([in] uint32 dwIndex,
                                      [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed preservesig
  {
  } // end of method ICorDebugILFrame::GetArgument

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackDepth([out] uint32& pDepth) cil managed
  {
  } // end of method ICorDebugILFrame::GetStackDepth

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackValue([in] uint32 dwIndex,
                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugILFrame::GetStackValue

  .method public hidebysig newslot abstract virtual 
          instance int32  CanSetIP([in] uint32 nOffset) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugILFrame::CanSetIP

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugILFrame

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 41 2D 38 41 36 38   // ..$CC7BCB0A-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugValueEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugValueEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugValueEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugValueEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue[]  marshal([]) values,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugValueEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugILFrame2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 44 38 38 41 39 39 34 2D 36 43 33 30   // ..$5D88A994-6C30
                                                                                                  2D 34 37 39 42 2D 38 39 30 46 2D 42 43 45 46 38   // -479B-890F-BCEF8
                                                                                                  38 42 31 32 39 41 35 00 00 )                      // 8B129A5..
  .method public hidebysig newslot abstract virtual 
          instance void  RemapFunction([in] uint32 newILOffset) cil managed
  {
  } // end of method ICorDebugILFrame2::RemapFunction

  .method public hidebysig newslot abstract virtual 
          instance void  EnumerateTypeParameters([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum&  marshal( interface ) ppTyParEnum) cil managed
  {
  } // end of method ICorDebugILFrame2::EnumerateTypeParameters

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugILFrame2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 30 46 32 37 34 39 39 2D 39 44 46 32   // ..$10F27499-9DF2
                                                                                                  2D 34 33 43 45 2D 38 33 33 33 2D 41 33 32 31 44   // -43CE-8333-A321D
                                                                                                  37 43 39 39 43 42 34 00 00 )                      // 7C99CB4..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugTypeEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugTypeEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugTypeEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugTypeEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType[]  marshal([ + 0]) values,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugTypeEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugTypeEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugInternalFrame
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 42 39 32 43 43 37 46 37 2D 39 44 32 44   // ..$B92CC7F7-9D2D
                                                                                                  2D 34 35 43 34 2D 42 43 32 42 2D 36 32 31 46 43   // -45C4-BC2B-621FC
                                                                                                  43 39 44 46 42 46 34 00 00 )                      // C9DFBF4..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetChain

  .method public hidebysig newslot abstract virtual 
          instance void  GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionToken([out] uint32& pToken) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetFunctionToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackRange([out] uint64& pStart,
                                       [out] uint64& pEnd) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetStackRange

  .method public hidebysig newslot abstract virtual 
          instance void  GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetCaller

  .method public hidebysig newslot abstract virtual 
          instance void  GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetCallee

  .method public hidebysig newslot abstract virtual 
          instance void  CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper&  marshal( interface ) ppStepper) cil managed
  {
  } // end of method ICorDebugInternalFrame::CreateStepper

  .method public hidebysig newslot abstract virtual 
          instance void  GetFrameType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugInternalFrameType& pType) cil managed
  {
  } // end of method ICorDebugInternalFrame::GetFrameType

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugInternalFrame

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleBreakpoint
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 45 41 2D 38 41 36 38   // ..$CC7BCAEA-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  Activate([in] int32 bActive) cil managed
  {
  } // end of method ICorDebugModuleBreakpoint::Activate

  .method public hidebysig newslot abstract virtual 
          instance void  IsActive([out] int32& pbActive) cil managed
  {
  } // end of method ICorDebugModuleBreakpoint::IsActive

  .method public hidebysig newslot abstract virtual 
          instance void  GetModule([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule&  marshal( interface ) ppModule) cil managed
  {
  } // end of method ICorDebugModuleBreakpoint::GetModule

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModuleBreakpoint

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 46 43 43 35 46 42 35 2D 34 39 43 30   // ..$7FCC5FB5-49C0
                                                                                                  2D 34 31 44 45 2D 39 39 33 38 2D 33 42 38 38 42   // -41DE-9938-3B88B
                                                                                                  35 42 39 41 44 44 37 00 00 )                      // 5B9ADD7..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  SetJMCStatus([in] int32 bIsJustMyCode,
                                      [in] uint32 cTokens,
                                      [in] uint32& pTokens) cil managed
  {
  } // end of method ICorDebugModule2::SetJMCStatus

  .method public hidebysig newslot abstract virtual 
          instance void  ApplyChanges([in] uint32 cbMetadata,
                                      [in] uint8[]  marshal([]) pbMetadata,
                                      [in] uint32 cbIL,
                                      [in] uint8[]  marshal([]) pbIL) cil managed
  {
  } // end of method ICorDebugModule2::ApplyChanges

  .method public hidebysig newslot abstract virtual 
          instance int32  SetJITCompilerFlags([in] uint32 dwFlags) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugModule2::SetJITCompilerFlags

  .method public hidebysig newslot abstract virtual 
          instance void  GetJITCompilerFlags([out] uint32& pdwFlags) cil managed
  {
  } // end of method ICorDebugModule2::GetJITCompilerFlags

  .method public hidebysig newslot abstract virtual 
          instance int32  ResolveAssembly([in] uint32 tkAssemblyRef,
                                          [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAssembly&  marshal( interface ) ppAssembly) cil managed preservesig
  {
  } // end of method ICorDebugModule2::ResolveAssembly

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugNativeFrame
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 33 45 32 36 33 31 34 2D 34 46 37 36   // ..$03E26314-4F76
                                                                                                  2D 31 31 44 33 2D 38 38 43 36 2D 30 30 36 30 39   // -11D3-88C6-00609
                                                                                                  37 39 34 35 34 31 38 00 00 )                      // 7945418..
  .method public hidebysig newslot abstract virtual 
          instance void  GetChain([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugChain&  marshal( interface ) ppChain) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetChain

  .method public hidebysig newslot abstract virtual 
          instance void  GetCode([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugCode&  marshal( interface ) ppCode) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetCode

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunction([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetFunction

  .method public hidebysig newslot abstract virtual 
          instance void  GetFunctionToken([out] uint32& pToken) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetFunctionToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetStackRange([out] uint64& pStart,
                                       [out] uint64& pEnd) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetStackRange

  .method public hidebysig newslot abstract virtual 
          instance void  GetCaller([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetCaller

  .method public hidebysig newslot abstract virtual 
          instance void  GetCallee([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame&  marshal( interface ) ppFrame) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetCallee

  .method public hidebysig newslot abstract virtual 
          instance void  CreateStepper([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper&  marshal( interface ) ppStepper) cil managed
  {
  } // end of method ICorDebugNativeFrame::CreateStepper

  .method public hidebysig newslot abstract virtual 
          instance void  GetIP([out] uint32& pnOffset) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetIP

  .method public hidebysig newslot abstract virtual 
          instance void  SetIP([in] uint32 nOffset) cil managed
  {
  } // end of method ICorDebugNativeFrame::SetIP

  .method public hidebysig newslot abstract virtual 
          instance void  GetRegisterSet([out] native int&  marshal( interface ) ppRegisters) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetRegisterSet

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalRegisterValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister reg,
                                               [in] uint32 cbSigBlob,
                                               [in] uint8[]  marshal([ + 1]) pvSigBlob,
                                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetLocalRegisterValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalDoubleRegisterValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister highWordReg,
                                                     [in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister lowWordReg,
                                                     [in] uint32 cbSigBlob,
                                                     [in] uint8[]  marshal([ + 2]) pvSigBlob,
                                                     [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetLocalDoubleRegisterValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalMemoryValue([in] uint64 address,
                                             [in] uint32 cbSigBlob,
                                             [in] uint8[]  marshal([ + 1]) pvSigBlob,
                                             [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetLocalMemoryValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalRegisterMemoryValue([in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister highWordReg,
                                                     [in] uint64 lowWordAddress,
                                                     [in] uint32 cbSigBlob,
                                                     [in] uint8[]  marshal([ + 2]) pvSigBlob,
                                                     [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetLocalRegisterMemoryValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetLocalMemoryRegisterValue([in] uint64 highWordAddress,
                                                     [in] valuetype Microsoft.VisualStudio.CorDebugInterop.CorDebugRegister lowWordRegister,
                                                     [in] uint32 cbSigBlob,
                                                     [in] uint8[]  marshal([ + 2]) pvSigBlob,
                                                     [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue&  marshal( interface ) ppValue) cil managed
  {
  } // end of method ICorDebugNativeFrame::GetLocalMemoryRegisterValue

  .method public hidebysig newslot abstract virtual 
          instance int32  CanSetIP([in] uint32 nOffset) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugNativeFrame::CanSetIP

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugNativeFrame

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 32 2D 38 41 36 38   // ..$CC7BCB02-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugObjectEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugObjectEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugObjectEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugObjectEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] uint64[]  marshal([]) objects,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugObjectEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 39 45 34 41 33 32 30 2D 34 41 39 42   // ..$49E4A320-4A9B
                                                                                                  2D 34 45 43 41 2D 42 31 30 35 2D 32 32 39 46 42   // -4ECA-B105-229FB
                                                                                                  37 44 35 30 30 39 46 00 00 )                      // 7D5009F..
  .method public hidebysig newslot abstract virtual 
          instance void  GetVirtualMethodAndType([in] uint32 memberRef,
                                                 [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction&  marshal( interface ) ppFunction,
                                                 [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) ppType) cil managed
  {
  } // end of method ICorDebugObjectValue2::GetVirtualMethodAndType

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugObjectValue2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 41 44 31 42 33 35 38 38 2D 30 45 46 30   // ..$AD1B3588-0EF0
                                                                                                  2D 34 37 34 34 2D 41 34 39 36 2D 41 41 30 39 41   // -4744-A496-AA09A
                                                                                                  39 46 38 30 33 37 31 00 00 )                      // 9F80371..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetThreadForTaskID([in] uint64 taskid,
                                            [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread2&  marshal( interface ) ppThread) cil managed
  {
  } // end of method ICorDebugProcess2::GetThreadForTaskID

  .method public hidebysig newslot abstract virtual 
          instance void  GetVersion([out] valuetype Microsoft.VisualStudio.CorDebugInterop.COR_VERSION& version) cil managed
  {
  } // end of method ICorDebugProcess2::GetVersion

  .method public hidebysig newslot abstract virtual 
          instance void  SetUnmanagedBreakpoint([in] uint64 address,
                                                [in] uint32 bufsize,
                                                [out] uint8[]  marshal([]) buffer,
                                                [out] uint32& bufLen) cil managed
  {
  } // end of method ICorDebugProcess2::SetUnmanagedBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  ClearUnmanagedBreakpoint([in] uint64 address) cil managed
  {
  } // end of method ICorDebugProcess2::ClearUnmanagedBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  SetDesiredNGENCompilerFlags([in] uint32 pdwFlags) cil managed
  {
  } // end of method ICorDebugProcess2::SetDesiredNGENCompilerFlags

  .method public hidebysig newslot abstract virtual 
          instance void  GetDesiredNGENCompilerFlags([out] uint32& pdwFlags) cil managed
  {
  } // end of method ICorDebugProcess2::GetDesiredNGENCompilerFlags

  .method public hidebysig newslot abstract virtual 
          instance void  GetReferenceValueFromGCHandle([in] native int handle,
                                                       [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugReferenceValue&  marshal( interface ) pOutValue) cil managed
  {
  } // end of method ICorDebugProcess2::GetReferenceValueFromGCHandle

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 42 44 39 35 36 44 39 2D 37 42 30 37   // ..$2BD956D9-7B07
                                                                                                  2D 34 42 45 46 2D 38 41 39 38 2D 31 32 41 41 38   // -4BEF-8A98-12AA8
                                                                                                  36 32 34 31 37 43 35 00 00 )                      // 62417C5..
  .method public hidebysig newslot abstract virtual 
          instance void  GetActiveFunctions([in] uint32 cFunctions,
                                            [out] uint32& pcFunctions,
                                            [out] valuetype Microsoft.VisualStudio.CorDebugInterop.COR_ACTIVE_FUNCTION[]  marshal([ + 1]) pFunctions) cil managed
  {
  } // end of method ICorDebugThread2::GetActiveFunctions

  .method public hidebysig newslot abstract virtual 
          instance void  GetConnectionID([out] uint32& pdwConnectionId) cil managed
  {
  } // end of method ICorDebugThread2::GetConnectionID

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskID([out] uint64& pTaskId) cil managed
  {
  } // end of method ICorDebugThread2::GetTaskID

  .method public hidebysig newslot abstract virtual 
          instance void  GetVolatileOSThreadID([out] uint32& pdwTid) cil managed
  {
  } // end of method ICorDebugThread2::GetVolatileOSThreadID

  .method public hidebysig newslot abstract virtual 
          instance void  InterceptCurrentException([in] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame  marshal( interface ) pFrame) cil managed
  {
  } // end of method ICorDebugThread2::InterceptCurrentException

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcessEnum
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 42 30 35 2D 38 41 36 38   // ..$CC7BCB05-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  Skip([in] uint32 celt) cil managed
  {
  } // end of method ICorDebugProcessEnum::Skip

  .method public hidebysig newslot abstract virtual 
          instance void  Reset() cil managed
  {
  } // end of method ICorDebugProcessEnum::Reset

  .method public hidebysig newslot abstract virtual 
          instance void  Clone([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEnum&  marshal( interface ) ppEnum) cil managed
  {
  } // end of method ICorDebugProcessEnum::Clone

  .method public hidebysig newslot abstract virtual 
          instance void  GetCount([out] uint32& pcelt) cil managed
  {
  } // end of method ICorDebugProcessEnum::GetCount

  .method public hidebysig newslot abstract virtual 
          instance int32  Next([in] uint32 celt,
                               [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess[]  marshal([]) processes,
                               [out] uint32& pceltFetched) runtime managed preservesig internalcall
  {
  } // end of method ICorDebugProcessEnum::Next

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcessEnum

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 35 42 36 45 39 43 33 2D 45 37 44 31   // ..$C5B6E9C3-E7D1
                                                                                                  2D 34 41 38 45 2D 38 37 33 42 2D 37 46 30 34 37   // -4A8E-873B-7F047
                                                                                                  46 30 37 30 36 46 37 00 00 )                      // F0706F7..
  .method public hidebysig newslot abstract virtual 
          instance void  SetJMC([in] int32 fIsJMCStepper) cil managed
  {
  } // end of method ICorDebugStepper2::SetJMC

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStepper2

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugStringValue
       implements Microsoft.VisualStudio.CorDebugInterop.ICorDebugHeapValue,
                  Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 43 43 37 42 43 41 46 44 2D 38 41 36 38   // ..$CC7BCAFD-8A68
                                                                                                  2D 31 31 44 32 2D 39 38 33 43 2D 30 30 30 30 46   // -11D2-983C-0000F
                                                                                                  38 30 38 33 34 32 44 00 00 )                      // 808342D..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComConversionLossAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetType([out] valuetype Microsoft.VisualStudio.CorDebugInterop.CorElementType& pType) cil managed
  {
  } // end of method ICorDebugStringValue::GetType

  .method public hidebysig newslot abstract virtual 
          instance void  GetSize([out] uint32& pSize) cil managed
  {
  } // end of method ICorDebugStringValue::GetSize

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddress([out] uint64& pAddress) cil managed preservesig
  {
  } // end of method ICorDebugStringValue::GetAddress

  .method public hidebysig newslot abstract virtual 
          instance void  CreateBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugStringValue::CreateBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  IsValid([out] int32& pbValid) cil managed
  {
  } // end of method ICorDebugStringValue::IsValid

  .method public hidebysig newslot abstract virtual 
          instance void  CreateRelocBreakpoint([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValueBreakpoint&  marshal( interface ) ppBreakpoint) cil managed
  {
  } // end of method ICorDebugStringValue::CreateRelocBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  GetLength([out] uint32& pcchString) cil managed
  {
  } // end of method ICorDebugStringValue::GetLength

  .method public hidebysig newslot abstract virtual 
          instance void  GetString([in] uint32 cchString,
                                   [out] uint32& pcchString,
                                   [out] char[]  marshal([ + 0]) str) cil managed
  {
  } // end of method ICorDebugStringValue::GetString

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugStringValue

.class interface public abstract auto ansi import Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue2
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 45 30 42 35 34 45 37 2D 44 38 38 41   // ..$5E0B54E7-D88A
                                                                                                  2D 34 36 32 36 2D 39 34 32 30 2D 41 36 39 31 45   // -4626-9420-A691E
                                                                                                  30 41 37 38 42 34 39 00 00 )                      // 0A78B49..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(int16) = ( 01 00 01 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance void  GetExactType([out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType&  marshal( interface ) ppType) cil managed
  {
  } // end of method ICorDebugValue2::GetExactType

} // end of class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue2

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmApiVersion
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS11FeaturePack1 = int32(0x0B000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS11RTM = int32(0x0B000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS11Update2 = int32(0x0B000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS12RTM = int32(0x0C000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS12Update2 = int32(0x0C000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS12Update3 = int32(0x0C000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion VS14RTM = int32(0x0E000001)
} // end of class Microsoft.VisualStudio.Debugger.DkmApiVersion

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus ActiveBreak = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus FrozenBreak = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus ImmediateBreak = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_WindowsProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_WindowsProcess

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrVirtualMachine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_ClrVirtualMachine

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DumpFile() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_DumpFile

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_ActiveScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_GpuVirtualMachine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_GpuVirtualMachine

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_InProcessManagedNativeInterop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_InProcessManagedNativeInterop

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DumpFileInterop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBaseDebugMonitorId::get_DumpFileInterop

  .property valuetype [mscorlib]System.Guid
          ActiveScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_ActiveScript()
  } // end of property DkmBaseDebugMonitorId::ActiveScript
  .property valuetype [mscorlib]System.Guid
          ClrVirtualMachine()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_ClrVirtualMachine()
  } // end of property DkmBaseDebugMonitorId::ClrVirtualMachine
  .property valuetype [mscorlib]System.Guid
          DumpFile()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_DumpFile()
  } // end of property DkmBaseDebugMonitorId::DumpFile
  .property valuetype [mscorlib]System.Guid
          DumpFileInterop()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_DumpFileInterop()
  } // end of property DkmBaseDebugMonitorId::DumpFileInterop
  .property valuetype [mscorlib]System.Guid
          GpuVirtualMachine()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_GpuVirtualMachine()
  } // end of property DkmBaseDebugMonitorId::GpuVirtualMachine
  .property valuetype [mscorlib]System.Guid
          InProcessManagedNativeInterop()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_InProcessManagedNativeInterop()
  } // end of property DkmBaseDebugMonitorId::InProcessManagedNativeInterop
  .property valuetype [mscorlib]System.Guid
          WindowsProcess()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId::get_WindowsProcess()
  } // end of property DkmBaseDebugMonitorId::WindowsProcess
} // end of class Microsoft.VisualStudio.Debugger.DkmBaseDebugMonitorId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype .ctor ([mscorlib]System.ValueType) TResult>
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method DkmCompletionRoutine`1::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(!TResult result) runtime managed
  {
  } // end of method DkmCompletionRoutine`1::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(!TResult result,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method DkmCompletionRoutine`1::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method DkmCompletionRoutine`1::EndInvoke

} // end of class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmComponentManager
       extends [mscorlib]System.Object
{
  .method public hidebysig static void  InitializeThread(valuetype [mscorlib]System.Guid componentId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::InitializeThread

  .method public hidebysig static void  InitializeThread(valuetype [mscorlib]System.Guid componentId,
                                                         [out] bool& alreadyInitialized) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::InitializeThread

  .method public hidebysig static void  InitializeThread(native int componentHandle,
                                                         [out] bool& alreadyInitialized) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::InitializeThread

  .method public hidebysig static native int 
          FindComponentHandle(valuetype [mscorlib]System.Guid componentGuid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::FindComponentHandle

  .method public hidebysig static void  PushComponentTransition(native int componentHandle) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::PushComponentTransition

  .method public hidebysig static void  PopComponentTransition(native int componentHandle) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::PopComponentTransition

  .method public hidebysig static void  UninitializeThread(native int componentHandle) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::UninitializeThread

  .method public hidebysig static void  UninitializeThread(valuetype [mscorlib]System.Guid componentId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::UninitializeThread

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_CurrentComponentId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::get_CurrentComponentId

  .method public hidebysig static void  AllowComponentReentrancy() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::AllowComponentReentrancy

  .method public hidebysig static void  DisableComponentReentrancy() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::DisableComponentReentrancy

  .method public hidebysig static bool  IsApiVersionSupported(valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion apiVersion) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::IsApiVersionSupported

  .method public hidebysig static bool  ReportCurrentNonFatalException(class [mscorlib]System.Exception currentException,
                                                                       string implementationName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComponentManager::ReportCurrentNonFatalException

  .property valuetype [mscorlib]System.Guid
          CurrentComponentId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmComponentManager::get_CurrentComponentId()
  } // end of property DkmComponentManager::CurrentComponentId
} // end of class Microsoft.VisualStudio.Debugger.DkmComponentManager

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmCustomMessage
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 33 30 38 61 36 65 64 2D 38 65 32 31   // ..$d308a6ed-8e21
                                                                                                  2D 65 37 64 64 2D 61 62 66 61 2D 39 61 65 32 32   // -e7dd-abfa-9ae22
                                                                                                  34 33 34 66 39 62 63 00 00 )                      // 434f9bc..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_Connection

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_Process

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_SourceId

  .method public hidebysig specialname instance int32 
          get_MessageCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_MessageCode

  .method public hidebysig specialname instance object 
          get_Parameter1() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_Parameter1

  .method public hidebysig specialname instance object 
          get_Parameter2() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::get_Parameter2

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid SourceId,
                 int32 MessageCode,
                 object Parameter1,
                 object Parameter2) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::Create

  .method public hidebysig instance void 
          OnCustomStop(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                       valuetype [mscorlib]System.Guid VsService) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::OnCustomStop

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          SendHigher() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::SendHigher

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          SendLower() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::SendLower

  .method public hidebysig instance void 
          SendLower(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::SendLower

  .method public hidebysig instance void 
          SendToVsService(valuetype [mscorlib]System.Guid VsService,
                          bool IsBlocking) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomMessage::SendToVsService

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Connection()
  } // end of property DkmCustomMessage::Connection
  .property instance int32 MessageCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_MessageCode()
  } // end of property DkmCustomMessage::MessageCode
  .property instance object Parameter1()
  {
    .get instance object Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Parameter1()
  } // end of property DkmCustomMessage::Parameter1
  .property instance object Parameter2()
  {
    .get instance object Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Parameter2()
  } // end of property DkmCustomMessage::Parameter2
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_Process()
  } // end of property DkmCustomMessage::Process
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmCustomMessage::get_SourceId()
  } // end of property DkmCustomMessage::SourceId
} // end of class Microsoft.VisualStudio.Debugger.DkmCustomMessage

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 37 66 37 35 36 62 36 2D 39 65 61 30   // ..$37f756b6-9ea0
                                                                                                  2D 34 63 30 32 2D 33 66 30 61 2D 39 39 66 62 33   // -4c02-3f0a-99fb3
                                                                                                  61 30 66 37 61 37 37 00 00 )                      // a0f7a77..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::get_UniqueId

  .method public hidebysig specialname instance string 
          get_Qualifier() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::get_Qualifier

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_Kind() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::get_Kind

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion 
          get_ProtocolVersion() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::get_ProtocolVersion

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          FindConnection(valuetype [mscorlib]System.Guid UniqueId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::FindConnection

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection[] 
          GetConnections() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetConnections

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          FindProcess(valuetype [mscorlib]System.Guid UniqueId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::FindProcess

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess[] 
          GetProcesses() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetProcesses

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          FindLiveProcess(int32 Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::FindLiveProcess

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess[] 
          GetLiveProcesses() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetLiveProcesses

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest[] 
          GetRequests() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetRequests

  .method public hidebysig instance void 
          ActivateAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform,
                             string ActivationName,
                             bool LaunchForDebugging,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ActivateAppPackage

  .method public hidebysig instance void 
          SuspendAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                            int32 SessionId,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::SuspendAppPackage

  .method public hidebysig instance void 
          ResumeAppPackage(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                           int32 SessionId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ResumeAppPackage

  .method public hidebysig instance void 
          ShutDownAppPackage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                             int32 SessionId,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ShutDownAppPackage

  .method public hidebysig instance string 
          GetIsolatedStorageRootForApplication(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetIsolatedStorageRootForApplication

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState 
          GetAppPackageExecutionState(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                                      int32 SessionId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetAppPackageExecutionState

  .method public hidebysig instance void 
          EnumerateBackgroundTasks(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                   class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                                   int32 SessionId,
                                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::EnumerateBackgroundTasks

  .method public hidebysig instance void 
          ActivateBackgroundTask(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                                 int32 SessionId,
                                 valuetype [mscorlib]System.Guid TaskId,
                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ActivateBackgroundTask

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo[] 
          EnumPackages() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::EnumPackages

  .method public hidebysig instance void 
          DeployFile(string LocalFilePath,
                     string RemoteFilePath,
                     bool OverwriteExisting) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::DeployFile

  .method public hidebysig instance void 
          DownloadFile(string RemoteFilePath,
                       string LocalFilePath,
                       bool OverwriteExisting) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::DownloadFile

  .method public hidebysig instance void 
          DownloadFile(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                       string RemoteFilePath,
                       string LocalFilePath,
                       bool OverwriteExisting,
                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::DownloadFile

  .method public hidebysig instance void 
          DeleteFile(string RemoteFilePath) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::DeleteFile

  .method public hidebysig instance string 
          GetDNSName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetDNSName

  .method public hidebysig instance void 
          CreateDirectory(string RemoteDirectoryPath) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::CreateDirectory

  .method public hidebysig instance void 
          RemoveDirectory(string RemoteDirectoryPath,
                          bool Recursive) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::RemoveDirectory

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo[] 
          GetFileListing(string RootDirectoryPath,
                         string SearchWildcard,
                         bool Recursive) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetFileListing

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo[] 
          EnumRunningProcesses(bool IncludeFromAllUsers,
                               valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask RequestedPropertyMask) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::EnumRunningProcesses

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo 
          GetRunningProcessInfo(int32 Id,
                                int64 StartTime,
                                bool IsDebuggee,
                                valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask RequestedPropertyMask) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetRunningProcessInfo

  .method public hidebysig instance void 
          TerminateRunningProcess(int32 Id,
                                  int64 StartTime,
                                  int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::TerminateRunningProcess

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          GetSystemInformation(bool NativeSystemInfo) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetSystemInformation

  .method public hidebysig instance string 
          GetClrVersionOfExecutable(string ExePath) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetClrVersionOfExecutable

  .method public hidebysig instance bool 
          QueryIsWOW64Executable(string ExePath) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::QueryIsWOW64Executable

  .method public hidebysig instance string 
          GetDefaultClrVersion() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::GetDefaultClrVersion

  .method public hidebysig instance void 
          FlushClosedObjectQueue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::FlushClosedObjectQueue

  .method public hidebysig instance int32 
          TriggerPrefetch(string PackageFullName,
                          valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform Platform) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::TriggerPrefetch

  .method public hidebysig instance void 
          RemoveAppPackageFromTaskbar(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                                      uint32 SessionId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::RemoveAppPackageFromTaskbar

  .method public hidebysig instance void 
          ActivateAppPackageOnTargetMonitor(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                            valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform,
                                            string ActivationName,
                                            bool LaunchForDebugging,
                                            uint32 Monitor,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ActivateAppPackageOnTargetMonitor

  .method public hidebysig instance void 
          ActivateAppPackageWithStartupTask(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                            string ActivationName,
                                            bool LaunchForDebugging,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportConnection::ActivateAppPackageWithStartupTask

  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Flags()
  } // end of property DkmTransportConnection::Flags
  .property instance valuetype [mscorlib]System.Guid
          Kind()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Kind()
  } // end of property DkmTransportConnection::Kind
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion
          ProtocolVersion()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmApiVersion Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_ProtocolVersion()
  } // end of property DkmTransportConnection::ProtocolVersion
  .property instance string Qualifier()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_Qualifier()
  } // end of property DkmTransportConnection::Qualifier
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection::get_UniqueId()
  } // end of property DkmTransportConnection::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmProcess
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 36 65 61 66 36 32 62 2D 36 64 62 31   // ..$a6eaf62b-6db1
                                                                                                  2D 34 66 33 38 2D 36 33 35 39 2D 34 36 65 39 32   // -4f38-6359-46e92
                                                                                                  36 32 64 37 61 30 61 00 00 )                      // 62d7a0a..
  .class auto ansi sealed nested public Live
         extends [mscorlib]System.Object
  {
    .field public initonly int32 Id
    .field public initonly int64 StartTime
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 Id,
                                 int64 StartTime) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Live::.ctor

  } // end of class Live

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live 
          get_LivePart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_LivePart

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_Connection

  .method public hidebysig specialname instance string 
          get_Path() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_Path

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_UniqueId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod 
          get_StartMethod() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_StartMethod

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings 
          get_EngineSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_EngineSettings

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings 
          get_DebugLaunchSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_DebugLaunchSettings

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          get_SystemInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_SystemInformation

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_BaseDebugMonitorId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_BaseDebugMonitorId

  .method public hidebysig specialname instance bool 
          get_IsAppPackage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_IsAppPackage

  .method public hidebysig specialname instance bool 
          get_IsNativeDebuggingEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::get_IsNativeDebuggingEnabled

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmProcess 
          FindProcess(valuetype [mscorlib]System.Guid UniqueId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FindProcess

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmProcess[] 
          GetProcesses() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetProcesses

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmProcess 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 string Path,
                 valuetype [mscorlib]System.Guid UniqueId,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation,
                 valuetype [mscorlib]System.Guid BaseDebugMonitorId,
                 bool IsNativeDebuggingEnabled,
                 class Microsoft.VisualStudio.Debugger.DkmProcess/Live Live,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmProcess 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 string Path,
                 valuetype [mscorlib]System.Guid UniqueId,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation SystemInformation,
                 valuetype [mscorlib]System.Guid BaseDebugMonitorId,
                 bool IsAppPackage,
                 bool IsNativeDebuggingEnabled,
                 class Microsoft.VisualStudio.Debugger.DkmProcess/Live Live,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmThread[] 
          GetThreads() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetThreads

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmThread 
          FindSystemThread(int32 Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FindSystemThread

  .method public hidebysig instance void 
          OnAsyncBreakComplete(valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus Status,
                               class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnAsyncBreakComplete

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint[] 
          GetPendingBreakpoints() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetPendingBreakpoints

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          FindRuntimeInstance(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FindRuntimeInstance

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance[] 
          GetRuntimeInstances() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetRuntimeInstances

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel[] 
          GetComputeKernels() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetComputeKernels

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest[] 
          GetRuntimeFunctionResolutionRequests() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetRuntimeFunctionResolutionRequests

  .method public hidebysig instance void 
          OnEntryPoint(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnEntryPoint

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          CreateNativeInstructionAddress(uint64 InstructionPointer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::CreateNativeInstructionAddress

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance 
          FindNativeModule(uint64 Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FindNativeModule

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance 
          FindNativeModule(uint64 Address,
                           bool IncludeDisabledModules) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FindNativeModule

  .method public hidebysig instance void 
          AsyncBreak(bool StopImmediately) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::AsyncBreak

  .method public hidebysig instance string 
          LocateBinary(string ApplicationPath,
                       string DumpPath,
                       string OriginalPath,
                       uint32 TimeDateStamp,
                       uint32 ImageSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::LocateBinary

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] 
          Disassemble(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address,
                      uint32 Count) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Disassemble

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartAddress,
                                int32 InstructionOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetInstructionAddress

  .method public hidebysig instance void 
          WriteDump(valuetype Microsoft.VisualStudio.Debugger.DkmDumpType DumpType,
                    string Path,
                    class Microsoft.VisualStudio.Debugger.DkmThread TargetThread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::WriteDump

  .method public hidebysig instance void 
          AddExceptionTrigger(valuetype [mscorlib]System.Guid SourceId,
                              class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::AddExceptionTrigger

  .method public hidebysig instance void 
          AddExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                              valuetype [mscorlib]System.Guid SourceId,
                              class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger Trigger,
                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::AddExceptionTrigger

  .method public hidebysig instance void 
          ClearExceptionTriggers(valuetype [mscorlib]System.Guid SourceId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::ClearExceptionTriggers

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          SearchRuntimeFunctionTable(uint64 Address,
                                     [out] uint64& BaseAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::SearchRuntimeFunctionTable

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags 
          GetGPUBreakpointBehavior() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetGPUBreakpointBehavior

  .method public hidebysig instance void 
          SetGPUMemoryAccessWarning(int32 WarningCode,
                                    bool Enable) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::SetGPUMemoryAccessWarning

  .method public hidebysig instance void 
          ClearAllGPUMemoryAccessWarnings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::ClearAllGPUMemoryAccessWarnings

  .method public hidebysig instance void 
          GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                uint64 InstructionPointer,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetInstructionAddress

  .method public hidebysig instance void 
          OnInstructionPatchInserted(uint64 Address,
                                     uint8[] OriginalMemory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnInstructionPatchInserted

  .method public hidebysig instance void 
          OnInstructionPatchRemoved(uint64 Address,
                                    uint8[] OriginalMemory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnInstructionPatchRemoved

  .method public hidebysig instance int32 
          ReadMemory(uint64 Address,
                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                     void* Buffer,
                     int32 Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::ReadMemory

  .method public hidebysig instance int32 
          ReadMemory(uint64 Address,
                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                     uint8[] Buffer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::ReadMemory

  .method public hidebysig instance uint8[] 
          ReadMemoryString(uint64 Address,
                           valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                           uint16 CharacterSize,
                           int32 MaxCharacters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::ReadMemoryString

  .method public hidebysig instance void 
          WriteMemory(uint64 Address,
                      uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::WriteMemory

  .method public hidebysig instance void 
          InvisibleWriteMemory(uint64 Address,
                               uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::InvisibleWriteMemory

  .method public hidebysig instance uint32 
          GetHandleCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetHandleCount

  .method public hidebysig instance uint64 
          GetRunningTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetRunningTime

  .method public hidebysig instance void 
          SetRunningTime(uint64 RunningTime) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::SetRunningTime

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance 
          GetNativeRuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetNativeRuntimeInstance

  .method public hidebysig instance void 
          Detach() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Detach

  .method public hidebysig instance void 
          Terminate(int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Terminate

  .method public hidebysig instance void 
          StoppingEventProcessingBegin(bool ForceQueue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::StoppingEventProcessingBegin

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction 
          StoppingEventProcessingContinue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::StoppingEventProcessingContinue

  .method public hidebysig instance void 
          AbortingFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::AbortingFuncEvalExecution

  .method public hidebysig instance bool 
          IsStopped() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::IsStopped

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmThread[] 
          GetSystemThreads() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetSystemThreads

  .method public hidebysig instance uint64 
          AllocateVirtualMemory(uint64 Address,
                                int32 Size,
                                int32 AllocationType,
                                int32 PageProtection) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::AllocateVirtualMemory

  .method public hidebysig instance void 
          FreeVirtualMemory(uint64 Address,
                            int32 Size,
                            int32 FreeType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::FreeVirtualMemory

  .method public hidebysig instance void 
          VolatileReadMemory(uint64 Address,
                             void* Buffer,
                             int32 Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::VolatileReadMemory

  .method public hidebysig instance void 
          VolatileReadMemory(uint64 Address,
                             uint8[] Buffer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::VolatileReadMemory

  .method public hidebysig instance void 
          VolatileWriteMemory(uint64 Address,
                              uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::VolatileWriteMemory

  .method public hidebysig instance void 
          OnLoadComplete() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnLoadComplete

  .method public hidebysig instance void 
          Unload(int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::Unload

  .method public hidebysig instance string 
          TryLocateBinary(string ApplicationPath,
                          string DumpPath,
                          string OriginalPath,
                          uint32 TimeDateStamp,
                          uint32 ImageSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::TryLocateBinary

  .method public hidebysig instance string 
          GetDumpExePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetDumpExePath

  .method public hidebysig instance bool 
          IsLoadComplete() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::IsLoadComplete

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation[] 
          GetStowedExceptions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetStowedExceptions

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation 
          GetNativeStowedException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetNativeStowedException

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation 
          GetManagedStowedException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::GetManagedStowedException

  .method public hidebysig instance void 
          OnHiddenEntryPoint(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::OnHiddenEntryPoint

  .method public hidebysig instance void 
          BeforeStopDebugging() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::BeforeStopDebugging

  .method public hidebysig instance void 
          QueryPerformanceCounters(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcess::QueryPerformanceCounters

  .property instance valuetype [mscorlib]System.Guid
          BaseDebugMonitorId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmProcess::get_BaseDebugMonitorId()
  } // end of property DkmProcess::BaseDebugMonitorId
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmProcess::get_Connection()
  } // end of property DkmProcess::Connection
  .property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings
          DebugLaunchSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.DkmProcess::get_DebugLaunchSettings()
  } // end of property DkmProcess::DebugLaunchSettings
  .property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings
          EngineSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.DkmProcess::get_EngineSettings()
  } // end of property DkmProcess::EngineSettings
  .property instance bool IsAppPackage()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmProcess::get_IsAppPackage()
  } // end of property DkmProcess::IsAppPackage
  .property instance bool IsNativeDebuggingEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmProcess::get_IsNativeDebuggingEnabled()
  } // end of property DkmProcess::IsNativeDebuggingEnabled
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live
          LivePart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess/Live Microsoft.VisualStudio.Debugger.DkmProcess::get_LivePart()
  } // end of property DkmProcess::LivePart
  .property instance string Path()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmProcess::get_Path()
  } // end of property DkmProcess::Path
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod
          StartMethod()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Microsoft.VisualStudio.Debugger.DkmProcess::get_StartMethod()
  } // end of property DkmProcess::StartMethod
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation
          SystemInformation()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Microsoft.VisualStudio.Debugger.DkmProcess::get_SystemInformation()
  } // end of property DkmProcess::SystemInformation
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmProcess::get_UniqueId()
  } // end of property DkmProcess::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.DkmProcess

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmThread
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 63 34 32 30 61 32 33 2D 62 37 32 31   // ..$ac420a23-b721
                                                                                                  2D 35 37 63 31 2D 33 37 35 64 2D 61 35 30 35 33   // -57c1-375d-a5053
                                                                                                  66 39 30 66 39 34 63 00 00 )                      // f90f94c..
  .class auto ansi sealed nested public System
         extends [mscorlib]System.Object
  {
    .field public initonly int32 Id
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 Id) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method System::.ctor

  } // end of class System

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread/System 
          get_SystemPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_SystemPart

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_Process

  .method public hidebysig specialname instance uint64 
          get_NativeStartAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_NativeStartAddress

  .method public hidebysig specialname instance uint64 
          get_TebAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_TebAddress

  .method public hidebysig specialname instance bool 
          get_IsMainThread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_IsMainThread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_Connection

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          get_SystemInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::get_SystemInformation

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmThread 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 uint64 NativeStartAddress,
                 uint64 TebAddress,
                 bool IsMainThread,
                 class Microsoft.VisualStudio.Debugger.DkmThread/System System,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper[] 
          GetSteppers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetSteppers

  .method public hidebysig instance void 
          OnEmbeddedBreakpointHit(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                                  bool ShowAsException) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::OnEmbeddedBreakpointHit

  .method public hidebysig instance void 
          BeginFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::BeginFuncEvalExecution

  .method public hidebysig instance void 
          RaiseExecutionControlException(uint32 ExceptionCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::RaiseExecutionControlException

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] 
          GetExtendedRegisters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetExtendedRegisters

  .method public hidebysig instance void 
          SetExtendedRegisterValue(int32 RegisterIndex,
                                   class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::SetExtendedRegisterValue

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters 
          CreateFrameRegisters(class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] UnwoundRegisters,
                               uint32 VFrame) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::CreateFrameRegisters

  .method public hidebysig instance void 
          GetManagedThreadProperties([out] int32& ManagedThreadId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetManagedThreadProperties

  .method public hidebysig instance void 
          GetManagedThreadProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetManagedThreadProperties

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          GetTopStackWalkFrame(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetTopStackWalkFrame

  .method public hidebysig instance void 
          GetCurrentFrameInfo([out] uint64& ReturnAddress,
                              [out] uint64& FrameBase,
                              [out] uint64& VFrame) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetCurrentFrameInfo

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          GetTopStackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetTopStackFrame

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters 
          GetCurrentRegisters(class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] PseudoRegisters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetCurrentRegisters

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters 
          CreateRegistersObject(uint8[] ThreadContext,
                                class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] PseudoRegisters,
                                class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] ExtendedRegisters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::CreateRegistersObject

  .method public hidebysig instance bool 
          OnContinueExecution() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::OnContinueExecution

  .method public hidebysig instance bool 
          OnBeginFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::OnBeginFuncEvalExecution

  .method public hidebysig instance void 
          EndFuncEvalExecution(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::EndFuncEvalExecution

  .method public hidebysig instance bool 
          IsStoppingEventQueued(bool IgnoreAsyncBreakEvents) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::IsStoppingEventQueued

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode 
          GetCurrentFuncEvalMode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetCurrentFuncEvalMode

  .method public hidebysig instance void 
          SetContext(uint8[] Context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::SetContext

  .method public hidebysig instance void 
          GetContext(int32 ContextFlags,
                     void* Context,
                     int32 ContextSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetContext

  .method public hidebysig instance void 
          GetContext(int32 ContextFlags,
                     uint8[] Context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetContext

  .method public hidebysig instance void 
          GetCurrentLocation(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetCurrentLocation

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange 
          GetStackAddressRange() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetStackAddressRange

  .method public hidebysig instance uint32 
          Suspend(bool InternalSuspension) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::Suspend

  .method public hidebysig instance uint32 
          Resume(bool InternalSuspension) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::Resume

  .method public hidebysig instance uint32 
          GetSuspensionCount(bool ShowInternal) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetSuspensionCount

  .method public hidebysig instance uint32 
          GetDebuggerSuspensionCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetDebuggerSuspensionCount

  .method public hidebysig instance uint64 
          GetTlsValue(int32 TlsIndex) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetTlsValue

  .method public hidebysig instance void 
          SetTlsValue(int32 TlsIndex,
                      uint64 Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::SetTlsValue

  .method public hidebysig instance void 
          GetVolatileProperties([out] int32& Priority,
                                [out] uint64& AffinityMask) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetVolatileProperties

  .method public hidebysig instance void 
          GetVolatileProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetVolatileProperties

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags 
          GetVolatileFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetVolatileFlags

  .method public hidebysig instance void 
          GetVolatileFlags(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetVolatileFlags

  .method public hidebysig instance void 
          OnInterceptExceptionCompleted(uint64 Cookie) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::OnInterceptExceptionCompleted

  .method public hidebysig instance void 
          Unload(int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::Unload

  .method public hidebysig instance uint64 
          GetThreadCurrentWinRtErrorInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThread::GetThreadCurrentWinRtErrorInfo

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmThread::get_Connection()
  } // end of property DkmThread::Connection
  .property instance bool IsMainThread()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmThread::get_IsMainThread()
  } // end of property DkmThread::IsMainThread
  .property instance uint64 NativeStartAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmThread::get_NativeStartAddress()
  } // end of property DkmThread::NativeStartAddress
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmThread::get_Process()
  } // end of property DkmThread::Process
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation
          SystemInformation()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation Microsoft.VisualStudio.Debugger.DkmThread::get_SystemInformation()
  } // end of property DkmThread::SystemInformation
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread/System
          SystemPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread/System Microsoft.VisualStudio.Debugger.DkmThread::get_SystemPart()
  } // end of property DkmThread::SystemPart
  .property instance uint64 TebAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmThread::get_TebAddress()
  } // end of property DkmThread::TebAddress
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmThread::get_UniqueId()
  } // end of property DkmThread::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.DkmThread

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmWorkList
       extends [mscorlib]System.MarshalByRefObject
{
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmWorkList 
          Create(class Microsoft.VisualStudio.Debugger.DkmWorkListCompletionRoutine CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::Create

  .method public hidebysig specialname static 
          bool  get_IsCurrentInstanceCanceled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::get_IsCurrentInstanceCanceled

  .method public hidebysig specialname instance bool 
          get_IsCanceled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::get_IsCanceled

  .method public hidebysig instance void 
          BeginExecution() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::BeginExecution

  .method public hidebysig instance void 
          Execute() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::Execute

  .method public hidebysig instance void 
          Cancel() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWorkList::Cancel

  .property instance bool IsCanceled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmWorkList::get_IsCanceled()
  } // end of property DkmWorkList::IsCanceled
  .property bool IsCurrentInstanceCanceled()
  {
    .get bool Microsoft.VisualStudio.Debugger.DkmWorkList::get_IsCurrentInstanceCanceled()
  } // end of property DkmWorkList::IsCurrentInstanceCanceled
} // end of class Microsoft.VisualStudio.Debugger.DkmWorkList

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSendLowerAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSendLowerAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          get_ReplyMessage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSendLowerAsyncResult::get_ReplyMessage

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmCustomMessage ReplyMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSendLowerAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult::get_ErrorCode()
  } // end of property DkmSendLowerAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage
          ReplyMessage()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult::get_ReplyMessage()
  } // end of property DkmSendLowerAsyncResult::ReplyMessage
} // end of class Microsoft.VisualStudio.Debugger.DkmSendLowerAsyncResult

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.DkmDataContainer
       extends [mscorlib]System.MarshalByRefObject
{
  .method public hidebysig instance void 
          SetDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) T>(valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreationDisposition,
                                                                       !!T item) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataContainer::SetDataItem

  .method public hidebysig instance !!T  GetDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) T>() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataContainer::GetDataItem

  .method public hidebysig instance bool 
          RemoveDataItem<(Microsoft.VisualStudio.Debugger.DkmDataItem) T>() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataContainer::RemoveDataItem

  .method public hidebysig specialname instance bool 
          get_IsUnloaded() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataContainer::get_IsUnloaded

  .property instance bool IsUnloaded()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmDataContainer::get_IsUnloaded()
  } // end of property DkmDataContainer::IsUnloaded
} // end of class Microsoft.VisualStudio.Debugger.DkmDataContainer

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.DkmDataItem
       extends [mscorlib]System.Object
{
  .method family hidebysig newslot virtual 
          instance void  OnClose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataItem::OnClose

  .method family hidebysig newslot virtual 
          instance void  OnContainerCreated(class Microsoft.VisualStudio.Debugger.DkmDataContainer container) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataItem::OnContainerCreated

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataItem::.ctor

} // end of class Microsoft.VisualStudio.Debugger.DkmDataItem

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreateAlways = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition CreateNew = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DkmDataCreationDisposition

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags LockInitialized = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags ObjectAlive = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags ObjectUnloaded = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RemoteMarshalled = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RestrictVisibilityAboveCreationLevel = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags RestrictVisibilityBelowCreationLevel = int32(0x00000010)
} // end of class Microsoft.VisualStudio.Debugger.DkmDispatcherObjectFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisplayUserMessagePromptAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisplayUserMessagePromptAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance uint32 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisplayUserMessagePromptAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisplayUserMessagePromptAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult::get_ErrorCode()
  } // end of property DkmDisplayUserMessagePromptAsyncResult::ErrorCode
  .property instance uint32 Result()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult::get_Result()
  } // end of property DkmDisplayUserMessagePromptAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmDumpType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDumpType Minidump = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmDumpType MinidumpWithFullMemory = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.DkmDumpType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmEngineFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags JustMyCodeSupported = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags NativeCodeSupported = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DkmEngineFlags

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmEngineId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_NativeEng() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_NativeEng

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_COMPlusNativeEng() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_COMPlusNativeEng

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_COMPlusOnlyEng2() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_COMPlusOnlyEng2

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_COMPlusOnlyEng4() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_COMPlusOnlyEng4

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_COMPlusSQLLocalEng() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_COMPlusSQLLocalEng

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_SilverlightEng() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_SilverlightEng

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_EmbeddedClrEngV1() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_EmbeddedClrEngV1

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_EmbeddedClrEngV2() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_EmbeddedClrEngV2

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_MacSilverlightEng() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_MacSilverlightEng

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Script() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_Script

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_CoreSystemClr() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_CoreSystemClr

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_InteropEngineV2() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_InteropEngineV2

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_InteropEngineV4() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_InteropEngineV4

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrNativeCompilation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineId::get_ClrNativeCompilation

  .property valuetype [mscorlib]System.Guid
          COMPlusNativeEng()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusNativeEng()
  } // end of property DkmEngineId::COMPlusNativeEng
  .property valuetype [mscorlib]System.Guid
          COMPlusOnlyEng2()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusOnlyEng2()
  } // end of property DkmEngineId::COMPlusOnlyEng2
  .property valuetype [mscorlib]System.Guid
          COMPlusOnlyEng4()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusOnlyEng4()
  } // end of property DkmEngineId::COMPlusOnlyEng4
  .property valuetype [mscorlib]System.Guid
          COMPlusSQLLocalEng()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_COMPlusSQLLocalEng()
  } // end of property DkmEngineId::COMPlusSQLLocalEng
  .property valuetype [mscorlib]System.Guid
          ClrNativeCompilation()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_ClrNativeCompilation()
  } // end of property DkmEngineId::ClrNativeCompilation
  .property valuetype [mscorlib]System.Guid
          CoreSystemClr()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_CoreSystemClr()
  } // end of property DkmEngineId::CoreSystemClr
  .property valuetype [mscorlib]System.Guid
          EmbeddedClrEngV1()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_EmbeddedClrEngV1()
  } // end of property DkmEngineId::EmbeddedClrEngV1
  .property valuetype [mscorlib]System.Guid
          EmbeddedClrEngV2()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_EmbeddedClrEngV2()
  } // end of property DkmEngineId::EmbeddedClrEngV2
  .property valuetype [mscorlib]System.Guid
          InteropEngineV2()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_InteropEngineV2()
  } // end of property DkmEngineId::InteropEngineV2
  .property valuetype [mscorlib]System.Guid
          InteropEngineV4()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_InteropEngineV4()
  } // end of property DkmEngineId::InteropEngineV4
  .property valuetype [mscorlib]System.Guid
          MacSilverlightEng()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_MacSilverlightEng()
  } // end of property DkmEngineId::MacSilverlightEng
  .property valuetype [mscorlib]System.Guid
          NativeEng()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_NativeEng()
  } // end of property DkmEngineId::NativeEng
  .property valuetype [mscorlib]System.Guid
          Script()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_Script()
  } // end of property DkmEngineId::Script
  .property valuetype [mscorlib]System.Guid
          SilverlightEng()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineId::get_SilverlightEng()
  } // end of property DkmEngineId::SilverlightEng
} // end of class Microsoft.VisualStudio.Debugger.DkmEngineId

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmEngineSettings
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 63 31 66 32 32 64 66 2D 35 35 36 63   // ..$3c1f22df-556c
                                                                                                  2D 31 38 62 66 2D 37 35 38 34 2D 63 32 63 36 34   // -18bf-7584-c2c64
                                                                                                  39 37 37 37 62 66 65 00 00 )                      // 9777bfe..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_EngineId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_EngineId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId 
          get_ClrDebuggingServicesId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_ClrDebuggingServicesId

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage> 
          get_Languages() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_Languages

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat> 
          get_ImageDebugDirectoryFormats() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_ImageDebugDirectoryFormats

  .method public hidebysig specialname instance bool 
          get_EnableFuncEvalQuickAbort() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_EnableFuncEvalQuickAbort

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_FuncEvalQuickAbortExcludeList() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_FuncEvalQuickAbortExcludeList

  .method public hidebysig specialname instance bool 
          get_EnableAsyncDebugging() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_EnableAsyncDebugging

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_RemoteClrPdbNamePatterns() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_RemoteClrPdbNamePatterns

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_BaseDebugMonitorId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_BaseDebugMonitorId

  .method public hidebysig specialname instance uint32 
          get_MaxCallStackFrames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_MaxCallStackFrames

  .method public hidebysig specialname instance bool 
          get_IsEditAndContinue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsEditAndContinue

  .method public hidebysig specialname instance bool 
          get_ValidateFilesForMinidumps() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_ValidateFilesForMinidumps

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak> 
          get_RegistryTweaks() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_RegistryTweaks

  .method public hidebysig specialname instance bool 
          get_IsJustMyCodeEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsJustMyCodeEnabled

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings 
          get_SymbolPaths() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_SymbolPaths

  .method public hidebysig specialname instance bool 
          get_IsSuppressOptimizationsEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsSuppressOptimizationsEnabled

  .method public hidebysig specialname instance bool 
          get_IsStepOverPropertiesAndOperatorsEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsStepOverPropertiesAndOperatorsEnabled

  .method public hidebysig specialname instance bool 
          get_IsNativeExportsEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsNativeExportsEnabled

  .method public hidebysig specialname instance bool 
          get_IsGpuRaceHazardsAllowSameSettingEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_IsGpuRaceHazardsAllowSameSettingEnabled

  .method public hidebysig specialname instance bool 
          get_RequireFullTrustForSourceServer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_RequireFullTrustForSourceServer

  .method public hidebysig specialname instance string 
          get_TraceSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::get_TraceSettings

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmEngineSettings 
          FindSettings(valuetype [mscorlib]System.Guid EngineId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::FindSettings

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmEngineSettings[] 
          GetSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::GetSettings

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          FindProcess(valuetype [mscorlib]System.Guid UniqueId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::FindProcess

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess[] 
          GetProcesses() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::GetProcesses

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          GetLanguage(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::GetLanguage

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId[] 
          GetCodeViewCompilers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::GetCodeViewCompilers

  .method public hidebysig instance string 
          GetUserDocumentPath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSettings::GetUserDocumentPath

  .property instance valuetype [mscorlib]System.Guid
          BaseDebugMonitorId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_BaseDebugMonitorId()
  } // end of property DkmEngineSettings::BaseDebugMonitorId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId
          ClrDebuggingServicesId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ClrDebuggingServicesId()
  } // end of property DkmEngineSettings::ClrDebuggingServicesId
  .property instance bool EnableAsyncDebugging()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EnableAsyncDebugging()
  } // end of property DkmEngineSettings::EnableAsyncDebugging
  .property instance bool EnableFuncEvalQuickAbort()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EnableFuncEvalQuickAbort()
  } // end of property DkmEngineSettings::EnableFuncEvalQuickAbort
  .property instance valuetype [mscorlib]System.Guid
          EngineId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_EngineId()
  } // end of property DkmEngineSettings::EngineId
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmEngineFlags Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_Flags()
  } // end of property DkmEngineSettings::Flags
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          FuncEvalQuickAbortExcludeList()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_FuncEvalQuickAbortExcludeList()
  } // end of property DkmEngineSettings::FuncEvalQuickAbortExcludeList
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat>
          ImageDebugDirectoryFormats()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ImageDebugDirectoryFormats()
  } // end of property DkmEngineSettings::ImageDebugDirectoryFormats
  .property instance bool IsEditAndContinue()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsEditAndContinue()
  } // end of property DkmEngineSettings::IsEditAndContinue
  .property instance bool IsGpuRaceHazardsAllowSameSettingEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsGpuRaceHazardsAllowSameSettingEnabled()
  } // end of property DkmEngineSettings::IsGpuRaceHazardsAllowSameSettingEnabled
  .property instance bool IsJustMyCodeEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsJustMyCodeEnabled()
  } // end of property DkmEngineSettings::IsJustMyCodeEnabled
  .property instance bool IsNativeExportsEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsNativeExportsEnabled()
  } // end of property DkmEngineSettings::IsNativeExportsEnabled
  .property instance bool IsStepOverPropertiesAndOperatorsEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsStepOverPropertiesAndOperatorsEnabled()
  } // end of property DkmEngineSettings::IsStepOverPropertiesAndOperatorsEnabled
  .property instance bool IsSuppressOptimizationsEnabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_IsSuppressOptimizationsEnabled()
  } // end of property DkmEngineSettings::IsSuppressOptimizationsEnabled
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage>
          Languages()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_Languages()
  } // end of property DkmEngineSettings::Languages
  .property instance uint32 MaxCallStackFrames()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_MaxCallStackFrames()
  } // end of property DkmEngineSettings::MaxCallStackFrames
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak>
          RegistryTweaks()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmRegistryTweak> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RegistryTweaks()
  } // end of property DkmEngineSettings::RegistryTweaks
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          RemoteClrPdbNamePatterns()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RemoteClrPdbNamePatterns()
  } // end of property DkmEngineSettings::RemoteClrPdbNamePatterns
  .property instance bool RequireFullTrustForSourceServer()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_RequireFullTrustForSourceServer()
  } // end of property DkmEngineSettings::RequireFullTrustForSourceServer
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings
          SymbolPaths()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_SymbolPaths()
  } // end of property DkmEngineSettings::SymbolPaths
  .property instance string TraceSettings()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_TraceSettings()
  } // end of property DkmEngineSettings::TraceSettings
  .property instance bool ValidateFilesForMinidumps()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmEngineSettings::get_ValidateFilesForMinidumps()
  } // end of property DkmEngineSettings::ValidateFilesForMinidumps
} // end of class Microsoft.VisualStudio.Debugger.DkmEngineSettings

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId CoreSystemClr = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DesktopClrV2 = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DesktopClrV4 = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId DevicesClr = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId OutOfProcessPipeline = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId SilverlightMac = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId SilverlightWindows = int32(0x00000003)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrDebuggingServicesId

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 64 62 62 64 35 37 33 2D 30 61 32 39   // ..$7dbbd573-0a29
                                                                                                  2D 33 62 61 33 2D 36 66 35 64 2D 34 32 63 38 66   // -3ba3-6f5d-42c8f
                                                                                                  61 66 39 33 33 65 30 00 00 )                      // af933e0..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::get_Name

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::get_Id

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          Create(string Name,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::Create

  .method public hidebysig instance void 
          GetLanguageSettings([out] class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[]& Settings) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::GetLanguageSettings

  .method public hidebysig instance void 
          GetLanguageSettings(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::GetLanguageSettings

  .method public hidebysig instance string 
          GetEEMetricFile(string MetricName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguage::GetEEMetricFile

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          Id()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage::get_Id()
  } // end of property DkmLanguage::Id
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage::get_Name()
  } // end of property DkmLanguage::Name
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 36 62 64 63 66 37 65 2D 61 63 34 33   // ..$66bdcf7e-ac43
                                                                                                  2D 62 36 32 39 2D 37 32 30 35 2D 35 37 63 65 63   // -b629-7205-57cec
                                                                                                  30 36 39 39 61 33 35 00 00 )                      // 0699a35..
  .field public initonly int32 TypeValue
  .field public initonly valuetype [mscorlib]System.Guid SymbolProvider
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 TypeValue,
                               valuetype [mscorlib]System.Guid SymbolProvider) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmImageDebugDirectoryFormat::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmImageDebugDirectoryFormat

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmRegistryTweak
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 63 32 33 62 39 35 66 2D 35 33 66 62   // ..$cc23b95f-53fb
                                                                                                  2D 62 63 35 61 2D 34 35 34 63 2D 39 33 34 35 35   // -bc5a-454c-93455
                                                                                                  35 38 66 61 30 66 65 00 00 )                      // 58fa0fe..
  .method public hidebysig specialname instance string 
          get_ValueName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRegistryTweak::get_ValueName

  .method public hidebysig specialname instance uint32 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRegistryTweak::get_Data

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmRegistryTweak 
          Create(string ValueName,
                 uint32 Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRegistryTweak::Create

  .property instance uint32 Data()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmRegistryTweak::get_Data()
  } // end of property DkmRegistryTweak::Data
  .property instance string ValueName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmRegistryTweak::get_ValueName()
  } // end of property DkmRegistryTweak::ValueName
} // end of class Microsoft.VisualStudio.Debugger.DkmRegistryTweak

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 65 30 61 63 35 62 62 2D 39 31 36 39   // ..$1e0ac5bb-9169
                                                                                                  2D 33 35 39 64 2D 37 36 38 39 2D 63 31 34 30 37   // -359d-7689-c1407
                                                                                                  62 32 34 34 66 36 32 00 00 )                      // b244f62..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_SymbolPaths() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_SymbolPaths

  .method public hidebysig specialname instance string 
          get_SymbolCachePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_SymbolCachePath

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_IncludeList() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_IncludeList

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_ExcludeList() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_ExcludeList

  .method public hidebysig specialname instance bool 
          get_ManualLoading() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_ManualLoading

  .method public hidebysig specialname instance bool 
          get_LoadAdjacentSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::get_LoadAdjacentSymbols

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> SymbolPaths,
                 string SymbolCachePath,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> IncludeList,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> ExcludeList,
                 bool ManualLoading,
                 bool LoadAdjacentSymbols) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEngineSymbolSettings::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          ExcludeList()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_ExcludeList()
  } // end of property DkmEngineSymbolSettings::ExcludeList
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          IncludeList()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_IncludeList()
  } // end of property DkmEngineSymbolSettings::IncludeList
  .property instance bool LoadAdjacentSymbols()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_LoadAdjacentSymbols()
  } // end of property DkmEngineSymbolSettings::LoadAdjacentSymbols
  .property instance bool ManualLoading()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_ManualLoading()
  } // end of property DkmEngineSymbolSettings::ManualLoading
  .property instance string SymbolCachePath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_SymbolCachePath()
  } // end of property DkmEngineSymbolSettings::SymbolCachePath
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          SymbolPaths()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings::get_SymbolPaths()
  } // end of property DkmEngineSymbolSettings::SymbolPaths
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmEngineSymbolSettings

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 30 38 37 33 31 39 34 2D 63 34 37 66   // ..$b0873194-c47f
                                                                                                  2D 61 36 35 61 2D 35 64 65 66 2D 31 36 36 34 34   // -a65a-5def-16644
                                                                                                  65 62 65 32 33 62 38 00 00 )                      // ebe23b8..
  .field public initonly valuetype [mscorlib]System.Guid VendorId
  .field public initonly valuetype [mscorlib]System.Guid LanguageId
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                              valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                               valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib]System.Guid VendorId,
                               valuetype [mscorlib]System.Guid LanguageId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompilerId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 34 37 63 63 33 33 62 2D 35 39 37 38   // ..$a47cc33b-5978
                                                                                                  2D 61 31 63 62 2D 63 30 30 36 2D 63 31 38 36 39   // -a1cb-c006-c1869
                                                                                                  63 36 37 37 38 66 30 00 00 )                      // c6778f0..
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId
  .field public initonly string CompilerName
  .field public initonly uint8 LanguageEnumeration
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint8 LanguageEnumeration,
                               string CompilerName,
                               valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCodeViewCompilerId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmEventCode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode AsyncBreakComplete = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BinaryLoaded = int32(0x00000024)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BinaryReloadOpportunity = int32(0x00000026)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode BoundBreakpointHit = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ClrDebugMonitorExceptionCaught = int32(0x00000025)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ComputeKernelExit = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode CustomStop = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode DebugMonitorException = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode EmbeddedBreakpointHit = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode EntryPoint = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ExceptionContinued = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ExceptionTriggerHit = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode FuncEvalCompleted = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode FuncEvalStarting = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode GPUSingleStepComplete = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode HiddenEntryPoint = int32(0x00000028)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode InterceptExceptionCompleted = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode LoadComplete = int32(0x0000000D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleCreate = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleInstanceLoad = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleInstanceUnload = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleSymbolsLoaded = int32(0x00000011)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ModuleSymbolsUpdated = int32(0x00000012)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode OutOfBandException = int32(0x00000023)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ProcessCreate = int32(0x00000013)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ProcessExit = int32(0x00000014)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ReturnValues = int32(0x00000015)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeBreakpoint = int32(0x00000016)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceLoad = int32(0x00000017)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceLoadComplete = int32(0x00000027)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode RuntimeInstanceUnload = int32(0x00000018)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentContentInsert = int32(0x00000019)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentContentRemove = int32(0x0000001A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentTreeNodeCreate = int32(0x0000001B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptDocumentTreeNodeUnload = int32(0x0000001C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ScriptSymbolsUpdated = int32(0x0000001D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode SingleStepComplete = int32(0x0000001E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode StepComplete = int32(0x0000001F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode TaskProviderCreate = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ThreadCreate = int32(0x00000021)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmEventCode ThreadExit = int32(0x00000022)
} // end of class Microsoft.VisualStudio.Debugger.DkmEventCode

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmEventDescriptor
       extends [mscorlib]System.Object
{
  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.DkmEventCode 
          Code() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEventDescriptor::Code

  .method public hidebysig instance int32 
          Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEventDescriptor::Id

  .method public hidebysig instance uint64 
          GetTimeStamp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEventDescriptor::GetTimeStamp

} // end of class Microsoft.VisualStudio.Debugger.DkmEventDescriptor

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmEventDescriptorS
       extends Microsoft.VisualStudio.Debugger.DkmEventDescriptor
{
  .method public hidebysig instance void 
          Suppress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEventDescriptorS::Suppress

} // end of class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS

.class public auto ansi serializable Microsoft.VisualStudio.Debugger.DkmException
       extends [mscorlib]System.ApplicationException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode code) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmException::.ctor

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode 
          get_Code() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmException::get_Code

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmException::.ctor

  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode
          Code()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode Microsoft.VisualStudio.Debugger.DkmException::get_Code()
  } // end of property DkmException::Code
} // end of class Microsoft.VisualStudio.Debugger.DkmException

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmExceptionCode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode COR_E_OPERATIONCANCELED = int32(0x8013153B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_64BIT_CLR_NOT_SUPPORTED = int32(0x80040017)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_64BIT_COMPONENTS_NOT_INSTALLED = int32(0x80040750)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ACCESS_DENIED_ON_CALLBACK = int32(0x800405A4)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ALL_THREADS_SUSPENDED = int32(0x80040207)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_APPX_REGISTRATION_NOT_FOUND = int32(0x80040C17)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_APP_PACKAGE_NEVER_SUSPENDED = int32(0x92330049)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ARMDUMP_NOT_SUPPORTED_PRE_WIN8 = int32(0x80040D14)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ASP_USER_ACCESS_DENIED = int32(0x80040125)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ASYNCBREAK_DEBUGGEE_NOT_INITIALIZED = int32(0x80040111)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ASYNCBREAK_NO_PROGRAMS = int32(0x80040110)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ASYNCBREAK_UNABLE_TO_PROCESS = int32(0x80040112)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_CANNOT_ATTACH_TO_DESKTOP = int32(0x80040003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_DEBUGGEE_PROCESS_SECURITY_VIOLATION = int32(0x80040002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_DEBUGGER_ALREADY_ATTACHED = int32(0x80040001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_FAILED_ABORT_SILENTLY = int32(0x80040A07)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_NOT_ENABLED = int32(0x80040402)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_NO_CLR_PROGRAMS = int32(0x8004000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_REQUIRES_ELEVATION = int32(0x80040039)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ATTACH_USER_CANCELED = int32(0x80040760)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTOATTACH_WEBSERVER_NOT_FOUND = int32(0x80040901)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTO_ATTACH_CLASSNOTREG = int32(0x80040129)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTO_ATTACH_COCREATE_FAILURE = int32(0x80040128)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTO_ATTACH_DCOM_ERROR = int32(0x80040127)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTO_ATTACH_NOT_REGISTERED = int32(0x80040126)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_AUTO_LAUNCH_EXEC_FAILURE = int32(0x80040028)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BAD_CLR_DIASYMREADER = int32(0x80040802)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BAD_NETCF_VERSION = int32(0x80040408)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BAD_SYMBOL_DATA = int32(0x92330059)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BG_TASK_ACTIVATION_FAILED = int32(0x80040D0E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_CLR_ERROR = int32(0x92330006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_CLR_EXTERN_FUNCTION = int32(0x92330007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_DELETED = int32(0x80040060)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_INVALID_ADDRESS = int32(0x92330002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_IN_OPTIMIZED_CODE = int32(0x92330004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_IN_RUNTIME_MODULE_BLOCKED = int32(0x92330063)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BP_MODULE_UNLOADED = int32(0x92330008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_BREAK_ALL_FAILED = int32(0x80040404)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_AUTOATTACH_TO_SQLSERVER = int32(0x80040D02)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_CONTINUE_DURING_PENDING_EXPR_EVAL = int32(0x80040130)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_DEBUG_APP_PACKAGE_IN_RDBSERVICE = int32(0x92330044)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_DEBUG_MULTI_GPU_PROCS = int32(0x80040D05)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_DEBUG_WIN32 = int32(0x8004021B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_DEBUG_WIN64 = int32(0x8004021C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_DETACH_WHILE_TERMINATE_IN_PROGRESS = int32(0x80040D15)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_EMULATE_RESULTS_VIEW = int32(0x92330060)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_FIND_INTERNET_EXPLORER = int32(0x80040139)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_FIND_REMOTE_RESOURCES = int32(0x92330018)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_GET_UNMANAGED_MEMORY_CONTEXT = int32(0x80040561)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_LAUNCH_IN_RDBSERVICE = int32(0x92330045)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_MIX_MINDUMP_DEBUGGING = int32(0x80040018)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_REMOTE_DEBUG_MIXED = int32(0x80040D0D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SETIP_TO_DIFFERENT_FUNCTION = int32(0x80040104)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_GENERAL = int32(0x8004010B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_CATCH = int32(0x8004010A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_FINALLY = int32(0x80040108)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_INTO_OR_OUT_OF_FILTER = int32(0x8004010C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_IN_OPTIMIZED_CODE = int32(0x80040D13)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_ON_EXCEPTION = int32(0x80040105)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_ON_NONLEAF_FRAME = int32(0x80040100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CANNOT_SET_NEXT_STATEMENT_OUT_OF_FINALLY = int32(0x80040109)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_BREAKPOINT_BIND_ERROR = int32(0x80040923)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_BREAKPOINT_NOT_HIT = int32(0x80040922)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_BRIDGE_ALREADY_INITIALIZED = int32(0x92330046)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_NO_SERVER_RESPONSE = int32(0x80040920)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_PROJECT_DISABLED = int32(0x80040924)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CAUSALITY_REMOTE_NOT_REGISTERED = int32(0x80040921)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CLIENT_NOT_LOGGED_ON = int32(0x800405A7)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CLR_CANNOT_DEBUG_FIBER_PROCESS = int32(0x80040034)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CLR_INCOMPATIBLE_PROTOCOL = int32(0x80040033)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CLR_NOT_SUPPORTED = int32(0x80040016)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CLR_SHIM_ERROR = int32(0x80040803)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CODE_CONTEXT_OUT_OF_SCOPE = int32(0x800405A1)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_COMPARE_CANNOT_COMPARE = int32(0x800400A0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CONTEXT_CONTROL_REQUIRED = int32(0x92330026)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CORRUPT_MINIDUMP = int32(0x80040C13)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CRASHDUMP_ACTIVE = int32(0x80040206)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CRASHDUMP_DEPRECATED = int32(0x80040227)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_CRASHDUMP_UNSUPPORTED = int32(0x80040211)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DATABPS_NOTSUPPORTED = int32(0x9233004E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DBGEXTENSION_FAULTED = int32(0x80040912)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DBGEXTENSION_FUNCTION_NOT_FOUND = int32(0x80040911)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DBGEXTENSION_NOT_FOUND = int32(0x80040910)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DBGEXTENSION_RESULT_INVALID = int32(0x80040913)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DBGSHIM_INIT_ERROR = int32(0x92330062)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DCOM_ACCESS_DENIED = int32(0x8004002C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEBUGGEE_BLOCKED = int32(0x80040216)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEBUGGER_NOT_REGISTERED_PROPERLY = int32(0x80040023)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEBUGGING_BLOCKED_ON_TARGET = int32(0x80040D17)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEBUG_ENGINE_NOT_REGISTERED = int32(0x80040019)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEBUG_PROCESS_REQUEST_FAILED = int32(0x9233004F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEPLOY_APPX_SHUTDOWN_WRONG_TIME = int32(0x92330047)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEPLOY_FILE_NOT_EXIST = int32(0x92330041)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEPLOY_FILE_PATH_INVALID = int32(0x92330039)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEPLOY_FILE_TOO_LARGE = int32(0x92330038)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DESTROYED = int32(0x80040201)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DETACH_IMPERSONATE_FAILURE = int32(0x800400F0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DETACH_NO_PROXY = int32(0x800400D0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DETACH_TS_UNSUPPORTED = int32(0x800400E0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEVICEBITS_NOT_SIGNED = int32(0x80040401)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEVICE_ACCESS_DENIED = int32(0x80040406)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEVICE_ACCESS_DENIED_SELECT_YES = int32(0x80040405)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DEVICE_CONNRESET = int32(0x80040407)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DE_CLR_DBG_SERVICES_NOT_INSTALLED = int32(0x8004000D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DE_NOT_SUPPORTED_PRE_8_0 = int32(0x80040B00)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DISASM_BADADDRESS = int32(0x80040042)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DISASM_NOTAVAILABLE = int32(0x80040043)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DISASM_NOTSUPPORTED = int32(0x80040041)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DOTNETNATIVE_SDK_NOT_INSTALLED = int32(0x80040D18)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMPS_DO_NOT_SUPPORT_BREAKPOINTS = int32(0x92330022)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMP_ALREADY_LAUNCHED = int32(0x80040D12)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMP_ARM_ARCHITECTURE = int32(0x92330023)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMP_CORRUPTED = int32(0x80040224)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMP_NO_THREADS = int32(0x9233005C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_DUMP_UNKNOWN_ARCHITECTURE = int32(0x92330024)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ENABLE_SCRIPT_DEBUGGING_FAILED = int32(0x9233005A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_ENC_SETIP_REQUIRES_CONTINUE = int32(0x80040107)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_EVALUATE_BUSY_WITH_EVALUATION = int32(0x80040030)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_EVALUATE_TIMEOUT = int32(0x80040031)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_EXCEPTION_CANNOT_BE_INTERCEPTED = int32(0x80040140)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_EXCEPTION_CANNOT_UNWIND_ABOVE_CALLBACK = int32(0x80040141)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_EXECUTE_COMMAND_IN_PROGRESS = int32(0x92330042)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FAIL = int32(0x80004005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FAILED_TO_INITIALIZE_SCRIPT_PROXY = int32(0x8004001B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FIBER_NOT_SUPPORTED = int32(0x80040103)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FIREWALL_CANNOT_OPEN_APPLICATION = int32(0x8004075B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FIREWALL_CANNOT_OPEN_FILE_SHARING = int32(0x8004075D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FIREWALL_CANNOT_OPEN_PORT = int32(0x8004075C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FIREWALL_NO_EXCEPTIONS = int32(0x8004075A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FORCE_GUEST_MODE_ENABLED = int32(0x80040024)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_FUNCTION_NOT_JITTED = int32(0x80040800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GETREFERENCE_NO_REFERENCE = int32(0x80040581)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GET_IWAM_USER_FAILURE = int32(0x80040025)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GLOBAL_INTERFACE_POINTER_FAILURE = int32(0x92330016)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_ADAPTOR_NOT_FOUND = int32(0x80040D06)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_BARRIER_BREAKPOINT_NOT_SUPPORTED = int32(0x9233004D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_DEBUG_CONFIG_ISSUE = int32(0x80040D09)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_DEBUG_NOT_SUPPORTED_PRE_DX_11_1 = int32(0x80040D08)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_LOAD_VSD3D_FAILURE = int32(0x80040D0B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_LOCAL_DEBUGGING_ERROR = int32(0x80040D0A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_GPU_TDR_ENABLED_FAILURE = int32(0x80040D0C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_ACCESS_DENIED = int32(0x80040708)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_APP_NOT_FOUND = int32(0x8004070D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_BAD_REQUEST = int32(0x80040707)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_CONNECT_FAILED = int32(0x80040709)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_EXCEPTION = int32(0x8004070A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_FORBIDDEN = int32(0x80040703)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_GENERAL = int32(0x80040765)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_MANAGEMENT_API_MISSING = int32(0x8004070E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_NOT_FOUND = int32(0x80040706)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_NOT_SUPPORTED = int32(0x80040704)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_NO_CONTENT = int32(0x80040705)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_NO_PROCESS = int32(0x8004070F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_SENDREQUEST_FAILED = int32(0x80040702)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_SERVERERROR = int32(0x80040700)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_SITE_NOT_FOUND = int32(0x8004070C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_TIMEOUT = int32(0x8004070B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_HTTP_UNAUTHORIZED = int32(0x80040701)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_IMAGE_NOT_LOADED = int32(0x80040102)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INSTRUCTION_NO_SOURCE = int32(0x92330011)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTERCEPT_CANNOT_UNWIND_LASTCHANCE_INTEROP = int32(0x80040143)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTERCEPT_CURRENT_EXCEPTION_NOT_SUPPORTED = int32(0x80040142)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTEROP_CLR_TOO_OLD = int32(0x80040032)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTEROP_IA64 = int32(0x80040764)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTEROP_NOT_SUPPORTED = int32(0x80040009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTEROP_ORPC_INIT = int32(0x80040219)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INTEROP_X64 = int32(0x80040225)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_CLR_INSTRUCTION_NATIVE_OFFSET = int32(0x92330055)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_DATABP_ALLREGSUSED = int32(0x92330021)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_DATABP_SIZE = int32(0x92330020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_FULL_PATH = int32(0x92330043)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_MEMORY_ADDRESS = int32(0x92330010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_MEMORY_PROTECT = int32(0x92330032)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_PE_FORMAT = int32(0x80040D11)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_REGISTER_SIZE = int32(0x92330027)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_RUNTIME = int32(0x92330034)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_SESSIONID = int32(0x800405A2)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_INVALID_WORKING_DIRECTORY = int32(0x80040136)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_IOREDIR_BADFILE = int32(0x8004020E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_IOREDIR_BADSYNTAX = int32(0x8004020F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_JIT_APPID_NOT_REGISTERED = int32(0x800400B4)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_JIT_INVALID_PID = int32(0x800400B1)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_JIT_RUNTIME_VERSION_UNSUPPORTED = int32(0x800400B6)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_JIT_VSJITDEBUGGER_NOT_REGISTERED = int32(0x800400B3)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_JMC_CANNOT_SET_STATUS = int32(0x80040145)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_64BIT_MANAGEDMINIDUMP_UNSUPPORTED = int32(0x80040229)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_DEBUGGING_NOT_POSSIBLE = int32(0x80040006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_ELEVATION_REQUIRED = int32(0x80040138)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_FAILED_WITH_ELEVATION = int32(0x80040137)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_KERNEL_DEBUGGER_ENABLED = int32(0x80040007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_KERNEL_DEBUGGER_PRESENT = int32(0x80040008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_MANAGEDONLYMINIDUMP_UNSUPPORTED = int32(0x80040228)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_NO_INTEROP = int32(0x80040005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LAUNCH_SXS_ERROR = int32(0x8004001A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_COMPLETE_ALREADY_SENT = int32(0x9233005D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_COMPLETE_DEFERRAL_NOT_FOUND = int32(0x9233005E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_DIA = int32(0x80040223)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_DM = int32(0x8004020C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_DM_INCORRECT_VERSION = int32(0x80040221)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_EE = int32(0x8004020B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_EM = int32(0x8004020A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_MD = int32(0x8004020D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_SH = int32(0x80040209)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_TL = int32(0x80040208)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_DLL_TL_INCORRECT_VERSION = int32(0x80040220)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_SCRIPT_AGENT_LOCAL_FAILURE = int32(0x80040C14)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_SCRIPT_AGENT_REMOTE_FAILURE = int32(0x80040C16)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_VSDEBUGENG_CONFIG_ERROR = int32(0x80040C12)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_VSDEBUGENG_FAILED = int32(0x80040C10)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOAD_VSDEBUGENG_IMPORTS_FAILED = int32(0x80040C11)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_LOGON_FAILURE_ON_CALLBACK = int32(0x80040756)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MANAGED_FEATURE_NOTSUPPORTED = int32(0x80040BAD)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MANAGED_HEAP_ENUMERATION_TARGET_NOT_STOPPED = int32(0x92330061)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MANAGED_HEAP_NOT_ENUMERABLE = int32(0x92330056)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MARSHALLING_SIZE_TOO_LARGE = int32(0x9233005F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MEMORY_NOTSUPPORTED = int32(0x80040040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MINIDUMP_READ_WIN9X = int32(0x8004021D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MSENC_INSTALL_ERROR = int32(0x80040D19)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_MSHTML_SCRIPT_DEBUGGING_DISABLED = int32(0x8004000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NOT_SUPPORTED_INTEROP = int32(0x9233004C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NO_ATTACH_WHILE_DDD = int32(0x80040A00)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NO_CHECKSUM = int32(0x92330025)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NO_CODE_CONTEXT = int32(0x80040801)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NO_FRAME = int32(0x9233004B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_NO_SESSION_AVAILABLE = int32(0x800405A6)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OBJECT_OUT_OF_SYNC = int32(0x80040D03)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OPERATION_REQUIRES_ELEVATION = int32(0x80040038)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OPERATION_UNAVAILABLE_CLR_NC = int32(0x92330058)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OPERATION_UNAVAILABLE_SCRIPT_INTEROP = int32(0x92330057)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OS_PERSONAL = int32(0x80040C00)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_OTHER_USERS_SESSION = int32(0x800405A8)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PORTSUPPLIER_NO_PORT = int32(0x80040080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PORT_NO_REQUEST = int32(0x80040090)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_ALREADY_CONTINUED = int32(0x80040D04)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_DEBUGGER_IS_DEBUGGEE = int32(0x80040071)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_DESTROYED = int32(0x80040070)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_OBJECT_ACCESS_DENIED = int32(0x80040035)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_TOKEN_ACCESS_DENIED = int32(0x80040036)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROCESS_TOKEN_ACCESS_DENIED_NO_TS = int32(0x80040037)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROGRAM_DESTROY_PENDING = int32(0x80040B01)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROGRAM_IN_RUNMODE = int32(0x80040914)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PROPERTY_NOT_VALID = int32(0x80040511)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_PSEUDOREMOTE_NO_LOCALHOST_TCPIP_CONNECTION = int32(0x8004076C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REFERENCE_NOT_VALID = int32(0x80040501)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REGISTER_NOT_FOUND = int32(0x92330028)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REGISTER_READONLY = int32(0x92330029)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REG_NOT_TOP_STACK = int32(0x92330030)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_ATTACH_REQUIRES_ELEVATION = int32(0x8004013B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_AUTHENTICATION_ERROR = int32(0x92330017)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_BADIPADDRESS = int32(0x80040203)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_BADVERSION = int32(0x80040210)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_BAD_CLR_VERSION = int32(0x80040212)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_BAD_MSDBG2 = int32(0x8004075F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_CONNECT_USER_CANCELED = int32(0x80040758)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_CREDENTIALS_PROHIBITED = int32(0x80040759)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_DEBUGGING_UNSUPPORTED = int32(0x8004075E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_DISCONNECT = int32(0x80040403)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_IDE_TOO_OLD = int32(0x80040D1B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_INVALID_PROXY_SERVER_NAME = int32(0x80040767)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_LAUNCH_ELEVATION_REQUIRED = int32(0x8004013C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_MACHINEDOWN = int32(0x80040204)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_MACHINEUNSPECIFIED = int32(0x80040205)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_MSVSMON_TOO_OLD = int32(0x80040D1A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_NOMSVCMON = int32(0x80040202)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_NOMSVCMON_PIPE = int32(0x80040222)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_NOUSERMSVCMON = int32(0x80040217)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_NO_CONNECTION = int32(0x80040766)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_PACKET_TOO_BIG = int32(0x80040761)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_PROCESS_OBJECT_ACCESS_DENIED = int32(0x8004013A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_PROGRAM_PROVIDERS_UNSUPPORTED = int32(0x80040769)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_REDIRECTION_UNSUPPORTED = int32(0x80040135)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_REJECTED_NO_AUTH_REQUEST = int32(0x8004076A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_REJECTED_WIN_AUTH_REQUEST = int32(0x8004076B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_ACCESS_DENIED = int32(0x80040021)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_CLOSED = int32(0x80040010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_DOES_NOT_EXIST = int32(0x80040020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_INVALID_NAME = int32(0x80040026)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_MACHINE_DOES_NOT_EXIST = int32(0x80040022)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_SERVER_UNAVAILABLE = int32(0x80040757)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_UNSUPPORTED_OPERATION_ON_PLATFORM = int32(0x80040C02)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_VERSION = int32(0x80040D0F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_WEAK_CONNECTION = int32(0x80040768)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_WWS_INSTALL_REQUIRES_ADMIN = int32(0x8004076E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_REMOTE_WWS_NOT_INSTALLED = int32(0x8004076D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_RPC_REQUIRES_AUTHENTICATION = int32(0x80040755)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_ASYNC_FRAME_EE_UNAVAILABLE = int32(0x9233005B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_CLR_EE_DISABLED = int32(0x800405B0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_DEBUGGING_DISABLED_WWAHOST_ATTACH_FAILED = int32(0x92330040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_FILE_DIFFERENT_CONTENT = int32(0x9233004A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_PDM_NOT_REGISTERED = int32(0x8004000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SCRIPT_SPAN_MAPPING_FAILED = int32(0x92330037)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SERVER_UNAVAILABLE_ON_CALLBACK = int32(0x800405A3)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SESSION_TERMINATE_DETACH_FAILED = int32(0x800400C2)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SESSION_TERMINATE_FAILED = int32(0x800400C3)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SETVALUEASREFERENCE_NOTSUPPORTED = int32(0x80040523)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SETVALUE_VALUE_CANNOT_BE_SET = int32(0x80040521)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SETVALUE_VALUE_IS_READONLY = int32(0x80040522)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SHARE_LEVEL_ACCESS_CONTROL_ENABLED = int32(0x8004002D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SOURCE_SERVER_DISABLE_PARTIAL_TRUST = int32(0x80040C01)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQLLE_ACCESSDENIED = int32(0x80040A01)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_CANT_FIND_SSDEBUGPS_ON_CLIENT = int32(0x80040A04)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_DEBUGGING_NOT_ENABLED_ON_SERVER = int32(0x80040A03)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_EXECUTED_BUT_NOT_DEBUGGED = int32(0x80040A05)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_REGISTER_FAILED = int32(0x80040A08)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_SP_ENABLE_PERMISSION_DENIED = int32(0x80040A02)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SQL_VDT_INIT_RETURNED_SQL_ERROR = int32(0x80040A06)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_STEP_BP_SET_FAILED = int32(0x8004021F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_STEP_WIN9xSYSCODE = int32(0x80040218)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_STOPPING_EVENT_REJECTED = int32(0x92330009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_STRING_TOO_LONG = int32(0x92330031)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SYMBOLS_NOT_LOADED = int32(0x92330000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SYMBOLS_STRIPPED = int32(0x92330001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_SYMBOL_LOCATOR_INSTALL_ERROR = int32(0x80040D10)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TARGET_ALREADY_STOPPED = int32(0x9233000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TARGET_FILE_MISMATCH = int32(0x80040101)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TARGET_NOT_STOPPED = int32(0x9233000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TERMINATE_FORBIDDEN = int32(0x80040072)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TEXT_SPAN_NOT_LOADED = int32(0x92330036)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_THREAD_DESTROYED = int32(0x80040075)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_THREAD_NOT_FOUND = int32(0x80040D01)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_TOO_MANY_PROCESSES = int32(0x8004000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNKNOWN_AUTHN_SERVICE_ON_CALLBACK = int32(0x800405A5)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNKNOWN_CPU_INSTRUCTION = int32(0x92330033)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNMARSHALLABLE_VARIANT = int32(0x92330013)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNMARSHAL_CALLBACK_FAILED = int32(0x80040752)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNMARSHAL_SERVER_FAILED = int32(0x80040751)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNSUPPORTED_BINARY = int32(0x80040215)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNSUPPORTED_CLR_V1 = int32(0x80040763)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_UNSUPPORTED_FUTURE_CLR_VERSION = int32(0x80040762)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_USER_LEVEL_ACCESS_CONTROL_REQUIRED = int32(0x800405A9)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_VARIABLE_OPTIMIZED_AWAY = int32(0x92330035)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_VSDEBUGENG_DEPLOYMENT_ERROR = int32(0x92330014)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_VSDEBUGENG_RESOURCE_LOAD_FAILURE = int32(0x92330012)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_VSDEBUGLAUNCHNOTIFY_NOT_INSTALLED = int32(0x80040C18)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WEBDBG_DEBUG_VERB_BLOCKED = int32(0x80040121)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WEBSERVICES_LOAD_FAILURE = int32(0x92330015)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WIN8_TOO_OLD = int32(0x80040C1C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WINAUTH_CONNECT_NOT_SUPPORTED = int32(0x8004002F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WINDOWS_GRAPHICAL_SHELL_UNINSTALLED_ERROR = int32(0x80040D07)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WINDOWS_REG_ERROR = int32(0x92330048)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WLDP_NOT_FOUND = int32(0x80040D16)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WORKGROUP_REMOTE_LOGON_FAILURE = int32(0x8004002E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WRONG_COMPONENT = int32(0x9233000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WRONG_METHOD_VERSION = int32(0x9233000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WRONG_THREAD = int32(0x9233000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_WRONG_TIME = int32(0x9233000D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_ALREADY_INITIALIZED = int32(0x8EDE0002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_BAD_CONFIG = int32(0x8EDE0006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_BAD_QUERY_INTERFACE = int32(0x8EDE0004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_CALL_EXCEPTION_THROWN = int32(0x8EDE0025)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_CLIENT_ONLY_METHOD = int32(0x8EDE0021)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_COMPLETION_ROUTINE_RELEASED = int32(0x8EDE000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_COMPONENTID_NOT_FOUND = int32(0x8EDE000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_COMPONENT_DLL_NOT_FOUND = int32(0x8EDE0023)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_COMPONENT_LOAD_FAILURE = int32(0x8EDE0000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_CREATOR_REQUIRED = int32(0x8EDE0009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_DATA_ITEM_ALREADY_EXISTS = int32(0x8EDE0017)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_DATA_ITEM_NOT_FOUND = int32(0x8EDE0018)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_DURING_CREATE_EVENT_REQUIRED = int32(0x8EDE0008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_INCOMPATIBLE_PROTOCOL = int32(0x8EDE0013)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_MANAGED_DISPATCHER_CONNECT_FAILURE = int32(0x8EDE0007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_MANAGED_DISPATCHER_SIGNATURE_ERROR = int32(0x8EDE0020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_MAX_PACKET_EXCEEDED = int32(0x8EDE0014)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_METHOD_NOT_REMOTED = int32(0x8EDE0010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_NOT_INITIALIZED = int32(0x8EDE0001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_NULL_OUT_PARAM = int32(0x8EDE0019)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_OBJECT_ALREADY_EXISTS = int32(0x8EDE0015)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_OBJECT_NOT_FOUND = int32(0x8EDE0016)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_REMOTE_CLOSED = int32(0x8EDE0012)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_REMOTE_DISCONNECTED = int32(0x8EDE0011)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_REMOTE_NEW_VER_REQUIRED = int32(0x8EDE0024)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_SERVER_ONLY_METHOD = int32(0x8EDE0022)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_STA_THREADS_NOT_SUPPORTED = int32(0x8EDE0026)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_THREAD_ABORTED = int32(0x8EDE0003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_UNAVAILABLE_OBJECT = int32(0x8EDE0005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_WORKLIST_ALREADY_STARTED = int32(0x8EDE000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_WORK_LIST_COMPLETE = int32(0x8EDE000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_WRONG_CONNECTION_OBJECT = int32(0x8EDE000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmExceptionCode E_XAPI_WRONG_THREAD = int32(0x8EDE000D)
} // end of class Microsoft.VisualStudio.Debugger.DkmExceptionCode

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmFuncEvalMode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode EvaluatingWithStoppingEvents = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode EvaluatingWithoutStoppingEvents = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmFuncEvalMode NotEvaluating = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DkmFuncEvalMode

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentCPUAddressAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentCPUAddressAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance uint64[] 
          get_InstructionPointers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentCPUAddressAsyncResult::get_InstructionPointers

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64[] InstructionPointers) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentCPUAddressAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult::get_ErrorCode()
  } // end of property DkmGetCurrentCPUAddressAsyncResult::ErrorCode
  .property instance uint64[] InstructionPointers()
  {
    .get instance uint64[] Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult::get_InstructionPointers()
  } // end of property DkmGetCurrentCPUAddressAsyncResult::InstructionPointers
} // end of class Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetInstructionAddressAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetInstructionAddressAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_AddressObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetInstructionAddressAsyncResult::get_AddressObject

  .method public hidebysig specialname instance bool 
          get_FirstAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetInstructionAddressAsyncResult::get_FirstAddress

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject,
                               bool FirstAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetInstructionAddressAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          AddressObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_AddressObject()
  } // end of property DkmGetInstructionAddressAsyncResult::AddressObject
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_ErrorCode()
  } // end of property DkmGetInstructionAddressAsyncResult::ErrorCode
  .property instance bool FirstAddress()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult::get_FirstAddress()
  } // end of property DkmGetInstructionAddressAsyncResult::FirstAddress
} // end of class Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.DkmInstructionAddress
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 65 32 61 32 31 39 66 2D 33 61 31 34   // ..$6e2a219f-3a14
                                                                                                  2D 33 34 31 30 2D 65 37 35 35 2D 64 30 30 63 65   // -3410-e755-d00ce
                                                                                                  31 66 32 66 35 65 36 00 00 )                      // 1f2f5e6..
  .class auto ansi sealed nested public CPUInstruction
         extends [mscorlib]System.Object
  {
    .field public initonly uint64 InstructionPointer
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(uint64 InstructionPointer) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CPUInstruction::.ctor

  } // end of class CPUInstruction

  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag ClrAddress = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag CustomAddress = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag NativeAddress = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag ScriptAddress = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag UnknownAddress = int32(0x00000004)
  } // end of class Tag

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction 
          get_CPUInstructionPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::get_CPUInstructionPart

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::get_ModuleInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::get_Process

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol 
          GetSymbol() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::GetSymbol

  .method public hidebysig instance int32 
          CompareTo(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::CompareTo

  .method public hidebysig instance bool 
          IsInSameFunction(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::IsInSameFunction

  .method public hidebysig instance uint64[] 
          GetCurrentCPUAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::GetCurrentCPUAddress

  .method public hidebysig instance void 
          GetCurrentCPUAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmGetCurrentCPUAddressAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::GetCurrentCPUAddress

  .method public hidebysig instance void 
          IsUserCode(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionAddress::IsUserCode

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction
          CPUInstructionPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_CPUInstructionPart()
  } // end of property DkmInstructionAddress::CPUInstructionPart
  .property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_ModuleInstance()
  } // end of property DkmInstructionAddress::ModuleInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_Process()
  } // end of property DkmInstructionAddress::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_RuntimeInstance()
  } // end of property DkmInstructionAddress::RuntimeInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmInstructionAddress/Tag Microsoft.VisualStudio.Debugger.DkmInstructionAddress::get_TagValue()
  } // end of property DkmInstructionAddress::TagValue
} // end of class Microsoft.VisualStudio.Debugger.DkmInstructionAddress

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmGlobalSettings
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          class [mscorlib]System.Globalization.CultureInfo 
          get_Culture() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGlobalSettings::get_Culture

  .method public hidebysig specialname static 
          string  get_RegistryRoot() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGlobalSettings::get_RegistryRoot

  .method public hidebysig specialname static 
          int32  get_RootProcessId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGlobalSettings::get_RootProcessId

  .property class [mscorlib]System.Globalization.CultureInfo
          Culture()
  {
    .get class [mscorlib]System.Globalization.CultureInfo Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_Culture()
  } // end of property DkmGlobalSettings::Culture
  .property string RegistryRoot()
  {
    .get string Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_RegistryRoot()
  } // end of property DkmGlobalSettings::RegistryRoot
  .property int32 RootProcessId()
  {
    .get int32 Microsoft.VisualStudio.Debugger.DkmGlobalSettings::get_RootProcessId()
  } // end of property DkmGlobalSettings::RootProcessId
} // end of class Microsoft.VisualStudio.Debugger.DkmGlobalSettings

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 62 33 32 61 31 37 35 2D 36 65 33 35   // ..$9b32a175-6e35
                                                                                                  2D 31 61 65 35 2D 31 34 39 38 2D 63 39 33 61 62   // -1ae5-1498-c93ab
                                                                                                  33 32 33 65 32 63 38 00 00 )                      // 323e2c8..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag ClrRuntimeInstance = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag CustomRuntimeInstance = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag NativeRuntimeInstance = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag ScriptRuntimeInstance = int32(0x00000002)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_Process

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_Id

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities 
          get_Capabilities() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_Capabilities

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_ParentRuntime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_ParentRuntime

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::get_Connection

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode[] 
          GetScriptDocumentTreeNodes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetScriptDocumentTreeNodes

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] 
          GetModuleInstances() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetModuleInstances

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider[] 
          GetTaskProviders() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetTaskProviders

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          ResolveCPUInstructionAddress(uint64 InstructionPointer,
                                       [out] bool& FirstAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::ResolveCPUInstructionAddress

  .method public hidebysig instance void 
          ResolveCPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                       uint64 InstructionPointer,
                                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::ResolveCPUInstructionAddress

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] 
          FindModulesByName(string SearchKey) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::FindModulesByName

  .method public hidebysig instance void 
          SetRegisterValue(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackWalkFrame,
                           int32 RegisterIndex,
                           class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::SetRegisterValue

  .method public hidebysig instance void 
          BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::BeforeEnableNewStepper

  .method public hidebysig instance bool 
          OwnsCurrentExecutionLocation(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
                                       valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::OwnsCurrentExecutionLocation

  .method public hidebysig instance void 
          Step(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
               valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::Step

  .method public hidebysig instance void 
          StopStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::StopStep

  .method public hidebysig instance void 
          AfterSteppingArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
                                   valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                                   class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance NewControllingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::AfterSteppingArbitration

  .method public hidebysig instance void 
          OnNewControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
                                          valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                                          class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ControllingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::OnNewControllingRuntimeInstance

  .method public hidebysig instance bool 
          StepControlRequested(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
                               valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                               class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::StepControlRequested

  .method public hidebysig instance void 
          TakeStepControl(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper,
                          bool LeaveGuardsInPlace,
                          valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                          class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::TakeStepControl

  .method public hidebysig instance void 
          NotifyStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Stepper) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::NotifyStepComplete

  .method public hidebysig instance void 
          GetThreadDisplayProperties(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                     class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetThreadDisplayProperties

  .method public hidebysig instance string 
          GetThreadName(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetThreadName

  .method public hidebysig instance void 
          GetThreadName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                        class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetThreadName

  .method public hidebysig instance void 
          Unload() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::Unload

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler[] 
          GetManagedHeapSamplers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetManagedHeapSamplers

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker[] 
          GetManagedHeapWalkers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetManagedHeapWalkers

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] 
          GetCodePathsInRange(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame CorFrame,
                              uint32 StartILOffset,
                              uint32 EndILOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetCodePathsInRange

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] 
          Disassemble(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address,
                      uint32 Count) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::Disassemble

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartAddress,
                                int32 InstructionOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::GetInstructionAddress

  .method public hidebysig instance void 
          OnLoadComplete() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstance::OnLoadComplete

  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities
          Capabilities()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Capabilities()
  } // end of property DkmRuntimeInstance::Capabilities
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Connection()
  } // end of property DkmRuntimeInstance::Connection
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId
          Id()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Id()
  } // end of property DkmRuntimeInstance::Id
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          ParentRuntime()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_ParentRuntime()
  } // end of property DkmRuntimeInstance::ParentRuntime
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_Process()
  } // end of property DkmRuntimeInstance::Process
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstance/Tag Microsoft.VisualStudio.Debugger.DkmRuntimeInstance::get_TagValue()
  } // end of property DkmRuntimeInstance::TagValue
} // end of class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.DkmModuleInstance
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 34 38 35 37 62 36 66 2D 36 31 38 64   // ..$74857b6f-618d
                                                                                                  2D 36 36 65 33 2D 31 34 39 65 2D 36 63 65 62 66   // -66e3-149e-6cebf
                                                                                                  34 63 34 31 32 33 65 00 00 )                      // 4c4123e..
  .class auto ansi sealed nested public MinidumpInfo
         extends [mscorlib]System.Object
  {
    .field public initonly string OriginalPath
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(string OriginalPath) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MinidumpInfo::.ctor

  } // end of class MinidumpInfo

  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag ClrModuleInstance = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag ClrNcContainerModuleInstance = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag CustomModuleInstance = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag NativeModuleInstance = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo 
          get_MinidumpInfoPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_MinidumpInfoPart

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_TagValue

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_UniqueId

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Name

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_FullName

  .method public hidebysig specialname instance uint64 
          get_TimeDateStamp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_TimeDateStamp

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion 
          get_Version() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Version

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId 
          get_SymbolFileId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_SymbolFileId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout 
          get_MemoryLayout() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_MemoryLayout

  .method public hidebysig specialname instance uint64 
          get_BaseAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_BaseAddress

  .method public hidebysig specialname instance uint32 
          get_LoadOrder() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_LoadOrder

  .method public hidebysig specialname instance uint32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Size

  .method public hidebysig specialname instance string 
          get_LoadContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_LoadContext

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Process

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Connection

  .method public hidebysig specialname instance bool 
          get_IsDisabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_IsDisabled

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::get_Module

  .method public hidebysig instance void 
          SetDisabled(bool IsDisabled) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::SetDisabled

  .method public hidebysig instance uint8[] 
          GetGPUDisassembly(uint64 Address,
                            uint32 Count,
                            bool IsForward,
                            [out] bool& IsEnd) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::GetGPUDisassembly

  .method public hidebysig instance uint64 
          GetGPUDisassemblySize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::GetGPUDisassemblySize

  .method public hidebysig instance uint64 
          GetNextGPUInstructionAddress(uint64 StartAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::GetNextGPUInstructionAddress

  .method public hidebysig instance void 
          OnSymbolsLoaded(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                          bool IsReload) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::OnSymbolsLoaded

  .method public hidebysig instance void 
          SetModule(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                    bool IsReload) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::SetModule

  .method public hidebysig instance void 
          FlagAsTransitionModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::FlagAsTransitionModule

  .method public hidebysig instance void 
          ClearTransitionModuleFlag() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::ClearTransitionModuleFlag

  .method public hidebysig instance bool 
          IsTransitionModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::IsTransitionModule

  .method public hidebysig instance void 
          TryLoadBinary() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::TryLoadBinary

  .method public hidebysig instance void 
          TryLoadSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::TryLoadSymbols

  .method public hidebysig instance string 
          GetSymbolStatusMessage(bool ExcludeCommonErrors) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::GetSymbolStatusMessage

  .method public hidebysig instance string 
          GetSymbolLoadInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::GetSymbolLoadInformation

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          ReadSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::ReadSymbols

  .method public hidebysig instance void 
          Unload() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::Unload

  .method public hidebysig instance void 
          OnSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::OnSymbolsUpdated

  .method public hidebysig instance void 
          OnBinaryLoaded(string Path) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::OnBinaryLoaded

  .method public hidebysig instance bool 
          IsUserCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::IsUserCode

  .method public hidebysig instance void 
          OnBinaryReloadOpportunity() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::OnBinaryReloadOpportunity

  .method public hidebysig instance bool 
          IsSuppressed() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::IsSuppressed

  .method public hidebysig instance void 
          OnModuleModified() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleInstance::OnModuleModified

  .property instance uint64 BaseAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_BaseAddress()
  } // end of property DkmModuleInstance::BaseAddress
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Connection()
  } // end of property DkmModuleInstance::Connection
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Flags()
  } // end of property DkmModuleInstance::Flags
  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_FullName()
  } // end of property DkmModuleInstance::FullName
  .property instance bool IsDisabled()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_IsDisabled()
  } // end of property DkmModuleInstance::IsDisabled
  .property instance string LoadContext()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_LoadContext()
  } // end of property DkmModuleInstance::LoadContext
  .property instance uint32 LoadOrder()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_LoadOrder()
  } // end of property DkmModuleInstance::LoadOrder
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout
          MemoryLayout()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_MemoryLayout()
  } // end of property DkmModuleInstance::MemoryLayout
  .property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo
          MinidumpInfoPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_MinidumpInfoPart()
  } // end of property DkmModuleInstance::MinidumpInfoPart
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Module()
  } // end of property DkmModuleInstance::Module
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Name()
  } // end of property DkmModuleInstance::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Process()
  } // end of property DkmModuleInstance::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_RuntimeInstance()
  } // end of property DkmModuleInstance::RuntimeInstance
  .property instance uint32 Size()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Size()
  } // end of property DkmModuleInstance::Size
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
          SymbolFileId()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_SymbolFileId()
  } // end of property DkmModuleInstance::SymbolFileId
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmModuleInstance/Tag Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_TagValue()
  } // end of property DkmModuleInstance::TagValue
  .property instance uint64 TimeDateStamp()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_TimeDateStamp()
  } // end of property DkmModuleInstance::TimeDateStamp
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_UniqueId()
  } // end of property DkmModuleInstance::UniqueId
  .property instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion
          Version()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmModuleVersion Microsoft.VisualStudio.Debugger.DkmModuleInstance::get_Version()
  } // end of property DkmModuleInstance::Version
} // end of class Microsoft.VisualStudio.Debugger.DkmModuleInstance

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 35 35 64 37 62 34 64 2D 32 34 36 66   // ..$c55d7b4d-246f
                                                                                                  2D 30 65 35 61 2D 65 33 37 65 2D 63 39 64 39 66   // -0e5a-e37e-c9d9f
                                                                                                  32 64 39 39 36 63 36 00 00 )                      // 2d996c6..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag ClrInstruction = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag CustomInstruction = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag NativeInstruction = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag ScriptInstruction = int32(0x00000002)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::get_Module

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_RuntimeType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::get_RuntimeType

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          Bind(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::Bind

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType 
          GetGPUInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                                            class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol NextInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetGPUInstructionMetadataCallback

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetNoSourceRanges() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetNoSourceRanges

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetUserCodeSourcePositionCallback

  .method public hidebysig instance void 
          GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetUserCodeSourcePositionCallback

  .method public hidebysig instance string 
          GetDisassemblyLabel(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetDisassemblyLabel

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          GetCompilerId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetCompilerId

  .method public hidebysig instance void 
          IsHiddenCode(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                       class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                       class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::IsHiddenCode

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetSteppingRanges(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary RangeBoundary,
                            bool IncludeInline) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetSteppingRanges

  .method public hidebysig instance bool 
          HasLineInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::HasLineInfo

  .method public hidebysig instance void 
          HasLineInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::HasLineInfo

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange 
          GetCurrentStatementRange() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetCurrentStatementRange

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetSourcePosition(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags,
                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                            [out] bool& StartOfLine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetSourcePosition

  .method public hidebysig instance void 
          GetSourcePosition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags,
                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetSourcePosition

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetSourcePositionCallback(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags,
                                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                                    [out] bool& StartOfLine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetSourcePositionCallback

  .method public hidebysig instance void 
          GetSourcePositionCallback(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                    valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags,
                                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetSourcePositionCallback

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetAlternateSourcePosition(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstructionSymbol::GetAlternateSourcePosition

  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_Module()
  } // end of property DkmInstructionSymbol::Module
  .property instance valuetype [mscorlib]System.Guid
          RuntimeType()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_RuntimeType()
  } // end of property DkmInstructionSymbol::RuntimeType
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol/Tag Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol::get_TagValue()
  } // end of property DkmInstructionSymbol::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsUserCodeAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsUserCodeAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance bool 
          get_UserCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsUserCodeAsyncResult::get_UserCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(bool UserCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsUserCodeAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult::get_ErrorCode()
  } // end of property DkmIsUserCodeAsyncResult::ErrorCode
  .property instance bool UserCode()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult::get_UserCode()
  } // end of property DkmIsUserCodeAsyncResult::UserCode
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 30 32 37 31 66 66 30 2D 37 63 62 35   // ..$e0271ff0-7cb5
                                                                                                  2D 36 66 34 39 2D 65 39 34 38 2D 61 38 32 38 36   // -6f49-e948-a8286
                                                                                                  34 66 35 37 34 34 62 00 00 )                      // 4f5744b..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageRegistrySetting::get_Name

  .method public hidebysig specialname instance object 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageRegistrySetting::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting 
          Create(string Name,
                 object Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageRegistrySetting::Create

  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting::get_Name()
  } // end of property DkmLanguageRegistrySetting::Name
  .property instance object Value()
  {
    .get instance object Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting::get_Value()
  } // end of property DkmLanguageRegistrySetting::Value
} // end of class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmModuleFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Editable = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags FileBacked = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags FileResolved = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags MissingBinary = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Optimized = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Relocated = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Unoptimized = int32(0x00000020)
} // end of class Microsoft.VisualStudio.Debugger.DkmModuleFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmModuleVersion
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 37 30 39 34 66 61 64 2D 39 37 65 30   // ..$c7094fad-97e0
                                                                                                  2D 65 33 65 62 2D 34 33 33 37 2D 36 30 63 62 62   // -e3eb-4337-60cbb
                                                                                                  33 39 34 61 61 33 35 00 00 )                      // 394aa35..
  .method public hidebysig specialname instance string 
          get_FileVersionString() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_FileVersionString

  .method public hidebysig specialname instance string 
          get_CompanyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_CompanyName

  .method public hidebysig specialname instance uint32 
          get_FileVersionMS() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_FileVersionMS

  .method public hidebysig specialname instance uint32 
          get_FileVersionLS() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_FileVersionLS

  .method public hidebysig specialname instance uint32 
          get_ProductVersionMS() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_ProductVersionMS

  .method public hidebysig specialname instance uint32 
          get_ProductVersionLS() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_ProductVersionLS

  .method public hidebysig specialname instance uint32 
          get_VersionFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::get_VersionFlags

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmModuleVersion 
          Create(string FileVersionString,
                 string CompanyName,
                 uint32 FileVersionMS,
                 uint32 FileVersionLS,
                 uint32 ProductVersionMS,
                 uint32 ProductVersionLS,
                 uint32 VersionFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleVersion::Create

  .property instance string CompanyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_CompanyName()
  } // end of property DkmModuleVersion::CompanyName
  .property instance uint32 FileVersionLS()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionLS()
  } // end of property DkmModuleVersion::FileVersionLS
  .property instance uint32 FileVersionMS()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionMS()
  } // end of property DkmModuleVersion::FileVersionMS
  .property instance string FileVersionString()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_FileVersionString()
  } // end of property DkmModuleVersion::FileVersionString
  .property instance uint32 ProductVersionLS()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_ProductVersionLS()
  } // end of property DkmModuleVersion::ProductVersionLS
  .property instance uint32 ProductVersionMS()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_ProductVersionMS()
  } // end of property DkmModuleVersion::ProductVersionMS
  .property instance uint32 VersionFlags()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmModuleVersion::get_VersionFlags()
  } // end of property DkmModuleVersion::VersionFlags
} // end of class Microsoft.VisualStudio.Debugger.DkmModuleVersion

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 35 30 65 62 36 64 37 2D 38 36 66 64   // ..$950eb6d7-86fd
                                                                                                  2D 65 33 31 31 2D 36 64 36 38 2D 64 38 62 31 32   // -e311-6d68-d8b12
                                                                                                  37 30 35 66 61 37 65 00 00 )                      // 705fa7e..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag CustomSymbolFileId = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag DynamicSymbolFileId = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag PdbFileId = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFileId::get_TagValue

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SymbolProviderId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFileId::get_SymbolProviderId

  .property instance valuetype [mscorlib]System.Guid
          SymbolProviderId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId::get_SymbolProviderId()
  } // end of property DkmSymbolFileId::SymbolProviderId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId/Tag Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId::get_TagValue()
  } // end of property DkmSymbolFileId::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout DiskPE = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryPE = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout Unknown = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmModule
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 66 64 66 37 64 39 66 2D 65 35 61 62   // ..$9fdf7d9f-e5ab
                                                                                                  2D 62 33 36 33 2D 36 32 38 32 2D 31 64 61 31 37   // -b363-6282-1da17
                                                                                                  30 31 37 33 33 34 33 00 00 )                      // 0173343..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::get_Id

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::get_Name

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::get_CompilerId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::get_Connection

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          FindModule(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::FindModule

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmModule[] 
          GetModules() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetModules

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          Create(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Id,
                 string Name,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] 
          GetScriptDocuments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetScriptDocuments

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodSymbolStoreData(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetMethodSymbolStoreData

  .method public hidebysig instance void 
          GetMethodSymbolStoreData(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                   valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetMethodSymbolStoreData

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          GetFirstMethodInFirstDocument() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetFirstMethodInFirstDocument

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodSymbolStoreDataPreRemap(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                                           [out] int32& RemapToken) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetMethodSymbolStoreDataPreRemap

  .method public hidebysig instance void 
          GetMethodSymbolStoreDataPreRemap(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                           valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetMethodSymbolStoreDataPreRemap

  .method public hidebysig instance uint8[] 
          GetTokenSymbolStoreAttribute(int32 ParentToken,
                                       bool IsPreRemap,
                                       string AttributeName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetTokenSymbolStoreAttribute

  .method public hidebysig instance void 
          GetTokenSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                       int32 ParentToken,
                                       bool IsPreRemap,
                                       string AttributeName,
                                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetTokenSymbolStoreAttribute

  .method public hidebysig instance void 
          TranslateAcceleratorTagByIP(uint32 InputTag,
                                      uint32 InstructionPointer,
                                      [out] uint32& RegisterType,
                                      [out] uint32& RegisterIndex,
                                      [out] uint32& FirstElement,
                                      [out] uint32& VectorElements,
                                      [out] uint32& ByteOffset,
                                      [out] uint32& VectorElementSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::TranslateAcceleratorTagByIP

  .method public hidebysig instance string 
          GetCompilerOptions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetCompilerOptions

  .method public hidebysig instance void 
          TranslateAcceleratorTagByRva(uint32 InputTag,
                                       uint32 Rva,
                                       [out] uint32& RegisterType,
                                       [out] uint32& RegisterIndex,
                                       [out] uint32& FirstElement,
                                       [out] uint32& VectorElements,
                                       [out] uint32& ByteOffset,
                                       [out] uint32& VectorElementSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::TranslateAcceleratorTagByRva

  .method public hidebysig instance bool 
          IsValidAcceleratorTag(uint32 InputTag,
                                uint32 Rva) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::IsValidAcceleratorTag

  .method public hidebysig instance uint64 
          GetPointerToHLSLRegister(int32 RegisterType,
                                   uint32 RegisterIndex,
                                   uint32 FirstElement,
                                   uint32 VectorElements,
                                   uint32 ByteOffset,
                                   uint32 VectorElementSize,
                                   uint32 Rva,
                                   uint32 StartLiveRange,
                                   uint32 EndLiveRange,
                                   [out] bool& IsNewDynamicTag) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetPointerToHLSLRegister

  .method public hidebysig instance void 
          SetPointerToHLSLRegister(uint64 Address,
                                   int32 RegisterType,
                                   uint32 RegisterIndex,
                                   uint32 FirstElement,
                                   uint32 VectorElements,
                                   uint32 ByteOffset,
                                   uint32 VectorElementSize,
                                   uint32 StartLiveRange,
                                   uint32 EndLiveRange) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::SetPointerToHLSLRegister

  .method public hidebysig instance uint32 
          GetAcceleratorTagTableSize([out] uint32& SizeOfForwardedTags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetAcceleratorTagTableSize

  .method public hidebysig instance uint32 
          GetInstructionOffsetForRva(uint32 RVA) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetInstructionOffsetForRva

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance[] 
          GetModuleInstances() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetModuleInstances

  .method public hidebysig instance string 
          UndecorateName(string DecoratedName,
                         uint32 Options) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::UndecorateName

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol 
          GetPublicSymbolByNameCallback(string PublicName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetPublicSymbolByNameCallback

  .method public hidebysig instance uint8[] 
          GetSourceServerData(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetSourceServerData

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] 
          FindDocuments(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::FindDocuments

  .method public hidebysig instance void 
          FindDocuments(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                        class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId,
                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::FindDocuments

  .method public hidebysig instance string 
          GetSymbolFilePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetSymbolFilePath

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          GetEntryPointSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetEntryPointSymbols

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] 
          GetFunctionInfo(string FunctionName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetFunctionInfo

  .method public hidebysig instance void 
          GetFunctionInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                          string FunctionName,
                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetFunctionInfo

  .method public hidebysig instance object 
          GetSymbolInterface(valuetype [mscorlib]System.Guid InterfaceID) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModule::GetSymbolInterface

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_CompilerId()
  } // end of property DkmModule::CompilerId
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Connection()
  } // end of property DkmModule::Connection
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId
          Id()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Id()
  } // end of property DkmModule::Id
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmModule::get_Name()
  } // end of property DkmModule::Name
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmModule

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmPerformanceCounters
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 30 30 30 32 39 64 31 2D 35 35 62 62   // ..$c00029d1-55bb
                                                                                                  2D 35 35 33 36 2D 63 37 32 35 2D 61 37 61 32 62   // -5536-c725-a7a2b
                                                                                                  63 66 30 37 34 38 31 00 00 )                      // cf07481..
  .method public hidebysig specialname instance uint32 
          get_StartStopCounter() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_StartStopCounter

  .method public hidebysig specialname instance uint64 
          get_SystemTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_SystemTime

  .method public hidebysig specialname instance uint64 
          get_UserTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_UserTime

  .method public hidebysig specialname instance uint64 
          get_KernelTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_KernelTime

  .method public hidebysig specialname instance uint64 
          get_RuntimeOverhead() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_RuntimeOverhead

  .method public hidebysig specialname instance uint64 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::get_Id

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters 
          Create(uint32 StartStopCounter,
                 uint64 SystemTime,
                 uint64 UserTime,
                 uint64 KernelTime,
                 uint64 RuntimeOverhead,
                 uint64 Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCounters::Create

  .property instance uint64 Id()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_Id()
  } // end of property DkmPerformanceCounters::Id
  .property instance uint64 KernelTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_KernelTime()
  } // end of property DkmPerformanceCounters::KernelTime
  .property instance uint64 RuntimeOverhead()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_RuntimeOverhead()
  } // end of property DkmPerformanceCounters::RuntimeOverhead
  .property instance uint32 StartStopCounter()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_StartStopCounter()
  } // end of property DkmPerformanceCounters::StartStopCounter
  .property instance uint64 SystemTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_SystemTime()
  } // end of property DkmPerformanceCounters::SystemTime
  .property instance uint64 UserTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmPerformanceCounters::get_UserTime()
  } // end of property DkmPerformanceCounters::UserTime
} // end of class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCountersAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCountersAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters 
          get_Counters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCountersAsyncResult::get_Counters

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Counters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPerformanceCountersAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters
          Counters()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmPerformanceCounters Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult::get_Counters()
  } // end of property DkmPerformanceCountersAsyncResult::Counters
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult::get_ErrorCode()
  } // end of property DkmPerformanceCountersAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmStartMethod
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Attach = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod AttachForHostingLaunch = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod AttachForSuspendedLaunch = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Launch = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmStartMethod

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 62 63 34 64 35 63 63 2D 65 39 33 36   // ..$bbc4d5cc-e936
                                                                                                  2D 66 63 32 61 2D 36 34 62 37 2D 62 61 37 31 36   // -fc2a-64b7-ba716
                                                                                                  64 64 61 39 30 32 30 00 00 )                      // dda9020..
  .method public hidebysig specialname instance string 
          get_OptionsString() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugLaunchSettings::get_OptionsString

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> 
          get_EngineFilter() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugLaunchSettings::get_EngineFilter

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings 
          Create(string OptionsString,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> EngineFilter) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugLaunchSettings::Create

  .method public hidebysig instance string 
          GetGPUAdditionalEnvironmentVariables(valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario Scenario) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugLaunchSettings::GetGPUAdditionalEnvironmentVariables

  .method public hidebysig instance bool 
          IsNativeCodeSupported(class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugLaunchSettings::IsNativeCodeSupported

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid>
          EngineFilter()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings::get_EngineFilter()
  } // end of property DkmDebugLaunchSettings::EngineFilter
  .property instance string OptionsString()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings::get_OptionsString()
  } // end of property DkmDebugLaunchSettings::OptionsString
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 62 35 33 39 64 62 61 2D 30 37 37 61   // ..$0b539dba-077a
                                                                                                  2D 37 30 35 35 2D 62 37 38 63 2D 34 34 65 33 62   // -7055-b78c-44e3b
                                                                                                  31 64 33 35 62 62 61 00 00 )                      // 1d35bba..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture 
          get_ProcessorArchitecture() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_ProcessorArchitecture

  .method public hidebysig specialname instance int32 
          get_PageSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_PageSize

  .method public hidebysig specialname instance int32 
          get_OperatingSystemVersion() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_OperatingSystemVersion

  .method public hidebysig specialname instance uint16 
          get_SuiteMask() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_SuiteMask

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures 
          get_ProcessorFeatures() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_ProcessorFeatures

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags 
          get_MinidumpFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_MinidumpFlags

  .method public hidebysig specialname instance string 
          get_SystemDirectory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_SystemDirectory

  .method public hidebysig specialname instance string 
          get_SystemWow64Directory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::get_SystemWow64Directory

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          Create(valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture,
                 int32 PageSize,
                 int32 OperatingSystemVersion,
                 uint16 SuiteMask,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          Create(valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture ProcessorArchitecture,
                 int32 PageSize,
                 int32 OperatingSystemVersion,
                 uint16 SuiteMask,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures ProcessorFeatures,
                 valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MinidumpFlags,
                 string SystemDirectory,
                 string SystemWow64Directory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSystemInformation::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_Flags()
  } // end of property DkmSystemInformation::Flags
  .property instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags
          MinidumpFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_MinidumpFlags()
  } // end of property DkmSystemInformation::MinidumpFlags
  .property instance int32 OperatingSystemVersion()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_OperatingSystemVersion()
  } // end of property DkmSystemInformation::OperatingSystemVersion
  .property instance int32 PageSize()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_PageSize()
  } // end of property DkmSystemInformation::PageSize
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture
          ProcessorArchitecture()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_ProcessorArchitecture()
  } // end of property DkmSystemInformation::ProcessorArchitecture
  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures
          ProcessorFeatures()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_ProcessorFeatures()
  } // end of property DkmSystemInformation::ProcessorFeatures
  .property instance uint16 SuiteMask()
  {
    .get instance uint16 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SuiteMask()
  } // end of property DkmSystemInformation::SuiteMask
  .property instance string SystemDirectory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SystemDirectory()
  } // end of property DkmSystemInformation::SystemDirectory
  .property instance string SystemWow64Directory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation::get_SystemWow64Directory()
  } // end of property DkmSystemInformation::SystemWow64Directory
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 39 65 31 66 66 61 34 2D 66 39 34 33   // ..$c9e1ffa4-f943
                                                                                                  2D 31 34 62 63 2D 35 35 36 36 2D 30 30 61 38 30   // -14bc-5566-00a80
                                                                                                  32 64 66 63 36 36 66 00 00 )                      // 2dfc66f..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag AddressBreakpoint = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag AddressNameBreakpoint = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag DataBreakpoint = int32(0x00000004)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag FileLineBreakpoint = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag FunctionBreakpoint = int32(0x00000001)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_Process

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_UniqueId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_SourceId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_CompilerId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_Thread

  .method public hidebysig specialname instance bool 
          get_IsBarrier() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::get_IsBarrier

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::Close

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] 
          GetBoundBreakpoints() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::GetBoundBreakpoints

  .method public hidebysig instance void 
          Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::Enable

  .method public hidebysig instance void 
          Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::Disable

  .method public hidebysig instance void 
          Enroll(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::Enroll

  .method public hidebysig instance void 
          SetCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                       class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition,
                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::SetCondition

  .method public hidebysig instance void 
          SetHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::SetHitCountCondition

  .method public hidebysig instance void 
          OnBreakpointBound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] BoundBreakpoints) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::OnBreakpointBound

  .method public hidebysig instance void 
          OnBreakpointUnbound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] BoundBreakpoints,
                              valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason Reason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::OnBreakpointUnbound

  .method public hidebysig instance void 
          OnBreakpointMessage(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level,
                              string Message) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingBreakpoint::OnBreakpointMessage

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_CompilerId()
  } // end of property DkmPendingBreakpoint::CompilerId
  .property instance bool IsBarrier()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_IsBarrier()
  } // end of property DkmPendingBreakpoint::IsBarrier
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_Process()
  } // end of property DkmPendingBreakpoint::Process
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_SourceId()
  } // end of property DkmPendingBreakpoint::SourceId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint/Tag Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_TagValue()
  } // end of property DkmPendingBreakpoint::TagValue
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_Thread()
  } // end of property DkmPendingBreakpoint::Thread
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint::get_UniqueId()
  } // end of property DkmPendingBreakpoint::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 38 61 62 39 30 66 35 2D 64 64 38 33   // ..$38ab90f5-dd83
                                                                                                  2D 62 32 34 37 2D 34 64 34 35 2D 62 64 34 31 35   // -b247-4d45-bd415
                                                                                                  63 39 30 39 62 32 31 00 00 )                      // c909b21..
  .field public initonly valuetype [mscorlib]System.Guid RuntimeType
  .field public initonly uint64 InstanceId
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                              valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                            valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                               valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                            valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                                      valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element0,
                                   valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib]System.Guid RuntimeType,
                               uint64 InstanceId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstanceId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId

.class public auto ansi Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 34 34 63 63 38 36 37 2D 38 36 65 37   // ..$944cc867-86e7
                                                                                                  2D 39 63 37 38 2D 37 32 34 63 2D 64 39 32 39 64   // -9c78-724c-d929d
                                                                                                  39 38 63 65 38 32 64 00 00 )                      // 98ce82d..
  .method public hidebysig specialname instance int32 
          get_DispatchId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_DispatchId

  .method public hidebysig specialname instance int64 
          get_GPUDevice() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_GPUDevice

  .method public hidebysig specialname instance int64 
          get_GPUShader() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_GPUShader

  .method public hidebysig specialname instance int64 
          get_GPUShaderDispatch() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_GPUShaderDispatch

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> 
          get_GroupDimensions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_GroupDimensions

  .method public hidebysig specialname instance int64 
          get_NumberOfGroups() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_NumberOfGroups

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> 
          get_ThreadDimensions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_ThreadDimensions

  .method public hidebysig specialname instance int32 
          get_NumberOfThreads() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_NumberOfThreads

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_Process

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::get_Connection

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel 
          Create(int32 DispatchId,
                 int64 GPUDevice,
                 int64 GPUShader,
                 int64 GPUShaderDispatch,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> GroupDimensions,
                 int64 NumberOfGroups,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> ThreadDimensions,
                 int32 NumberOfThreads,
                 class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::Create

  .method public hidebysig instance void 
          Unload(int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::Unload

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread 
          FindComputeThread(int64 GlobalThreadIndex) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::FindComputeThread

  .method public hidebysig instance void 
          GetComputeVectorWidth([out] int32& Width) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetComputeVectorWidth

  .method public hidebysig instance void 
          GetActiveThreadGroups([out] int64[]& ActiveThreadGroups,
                                [out] int32& NumberOfGroups) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetActiveThreadGroups

  .method public hidebysig instance void 
          GetCurrentThreadDimensions([out] int32[]& ThreadDimensions,
                                     [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetCurrentThreadDimensions

  .method public hidebysig instance void 
          GetCurrentGroupDimensions([out] int32[]& GroupDimensions,
                                    [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetCurrentGroupDimensions

  .method public hidebysig instance string 
          GetComputeKernelName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetComputeKernelName

  .method public hidebysig instance void 
          GetComputeKernelProperties([out] valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty[]& ComputeProperties,
                                     [out] int32& NumberOfProperties) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetComputeKernelProperties

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo[] 
          Select(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> From,
                 valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause Where) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::Select

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo[] 
          GroupBy(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags GroupByFlags,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> From,
                  valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause Where) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GroupBy

  .method public hidebysig instance uint64[] 
          GetStoppedThreads() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetStoppedThreads

  .method public hidebysig instance void 
          GetThreadFromId(uint64 ThreadId,
                          [out] class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread& Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetThreadFromId

  .method public hidebysig instance void 
          UpdateFlaggedState(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause Where,
                             bool Flagged) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::UpdateFlaggedState

  .method public hidebysig instance void 
          UpdateFrozenState(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause Where,
                            bool Frozen) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::UpdateFrozenState

  .method public hidebysig instance void 
          GetFlatComputeKernelDimensions([out] int32[]& FlatThreadDimensions,
                                         [out] int32[]& FlatIndexBase,
                                         [out] int32& NumberOfDimensions,
                                         [out] valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel& Model) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeKernel::GetFlatComputeKernelDimensions

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_Connection()
  } // end of property DkmGPUComputeKernel::Connection
  .property instance int32 DispatchId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_DispatchId()
  } // end of property DkmGPUComputeKernel::DispatchId
  .property instance int64 GPUDevice()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_GPUDevice()
  } // end of property DkmGPUComputeKernel::GPUDevice
  .property instance int64 GPUShader()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_GPUShader()
  } // end of property DkmGPUComputeKernel::GPUShader
  .property instance int64 GPUShaderDispatch()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_GPUShaderDispatch()
  } // end of property DkmGPUComputeKernel::GPUShaderDispatch
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32>
          GroupDimensions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_GroupDimensions()
  } // end of property DkmGPUComputeKernel::GroupDimensions
  .property instance int64 NumberOfGroups()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_NumberOfGroups()
  } // end of property DkmGPUComputeKernel::NumberOfGroups
  .property instance int32 NumberOfThreads()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_NumberOfThreads()
  } // end of property DkmGPUComputeKernel::NumberOfThreads
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_Process()
  } // end of property DkmGPUComputeKernel::Process
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32>
          ThreadDimensions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint32> Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_ThreadDimensions()
  } // end of property DkmGPUComputeKernel::ThreadDimensions
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel::get_UniqueId()
  } // end of property DkmGPUComputeKernel::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel

.class public auto ansi Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 31 30 32 63 32 32 35 2D 65 61 33 38   // ..$b102c225-ea38
                                                                                                  2D 38 32 34 32 2D 37 37 38 37 2D 66 34 38 63 64   // -8242-7787-f48cd
                                                                                                  61 31 65 31 32 65 39 00 00 )                      // a1e12e9..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_Process

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_CompilerId

  .method public hidebysig specialname instance string 
          get_FunctionName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_FunctionName

  .method public hidebysig specialname instance uint32 
          get_LineOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_LineOffset

  .method public hidebysig specialname instance string 
          get_ModuleName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_ModuleName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags 
          get_SearchFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::get_SearchFlags

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 string FunctionName,
                 uint32 LineOffset,
                 string ModuleName,
                 valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::Create

  .method public hidebysig instance void 
          EnableResolution(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::EnableResolution

  .method public hidebysig instance void 
          OnFunctionResolved(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::OnFunctionResolved

  .method public hidebysig instance void 
          OnFunctionResolved(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::OnFunctionResolved

  .method public hidebysig instance void 
          OnResolverMessage(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level,
                            string Message) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::OnResolverMessage

  .method public hidebysig instance void 
          OnResolverMessage(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel Level,
                            string Message,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeFunctionResolutionRequest::OnResolverMessage

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_CompilerId()
  } // end of property DkmRuntimeFunctionResolutionRequest::CompilerId
  .property instance string FunctionName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_FunctionName()
  } // end of property DkmRuntimeFunctionResolutionRequest::FunctionName
  .property instance uint32 LineOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_LineOffset()
  } // end of property DkmRuntimeFunctionResolutionRequest::LineOffset
  .property instance string ModuleName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_ModuleName()
  } // end of property DkmRuntimeFunctionResolutionRequest::ModuleName
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_Process()
  } // end of property DkmRuntimeFunctionResolutionRequest::Process
  .property instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags
          SearchFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_SearchFlags()
  } // end of property DkmRuntimeFunctionResolutionRequest::SearchFlags
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest::get_UniqueId()
  } // end of property DkmRuntimeFunctionResolutionRequest::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance
       extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 64 65 37 62 65 62 2D 61 63 61 62   // ..$b7de7beb-acab
                                                                                                  2D 37 36 63 34 2D 62 64 37 38 2D 66 62 62 61 36   // -76c4-bd78-fbba6
                                                                                                  39 38 65 34 62 36 35 00 00 )                      // 98e4b65..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::get_RuntimeInstance

  .method public hidebysig specialname instance uint64 
          get_BaseAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::get_BaseAddress

  .method public hidebysig specialname instance uint32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::get_Size

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus 
          get_ClrHeaderStatus() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::get_ClrHeaderStatus

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance 
          Create(string Name,
                 string FullName,
                 uint64 TimeDateStamp,
                 class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout,
                 uint32 LoadOrder,
                 string LoadContext,
                 class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance,
                 uint64 BaseAddress,
                 uint32 Size,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus ClrHeaderStatus,
                 bool IsDisabled,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::Create

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetFunctionTableEntry(uint64 Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::GetFunctionTableEntry

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          FindExportName(string Name,
                         bool IgnoreDataExports) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::FindExportName

  .method public hidebysig instance void 
          FindExportName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                         string Name,
                         bool IgnoreDataExports,
                         class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeModuleInstance::FindExportName

  .property instance uint64 BaseAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_BaseAddress()
  } // end of property DkmNativeModuleInstance::BaseAddress
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus
          ClrHeaderStatus()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_ClrHeaderStatus()
  } // end of property DkmNativeModuleInstance::ClrHeaderStatus
  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_RuntimeInstance()
  } // end of property DkmNativeModuleInstance::RuntimeInstance
  .property instance uint32 Size()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance::get_Size()
  } // end of property DkmNativeModuleInstance::Size
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 64 38 30 38 36 37 31 2D 35 63 34 37   // ..$0d808671-5c47
                                                                                                  2D 61 39 63 35 2D 66 66 66 62 2D 35 61 65 63 62   // -a9c5-fffb-5aecb
                                                                                                  35 35 38 62 32 62 34 00 00 )                      // 558b2b4..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_Process

  .method public hidebysig specialname instance uint64 
          get_InstructionPointer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_InstructionPointer

  .method public hidebysig specialname instance uint32 
          get_InstructionLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_InstructionLength

  .method public hidebysig specialname instance string 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_Address

  .method public hidebysig specialname instance string 
          get_AddressOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_AddressOffset

  .method public hidebysig specialname instance string 
          get_CodeBytes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_CodeBytes

  .method public hidebysig specialname instance string 
          get_RawOpcode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_RawOpcode

  .method public hidebysig specialname instance string 
          get_RawOperands() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_RawOperands

  .method public hidebysig specialname instance string 
          get_FormattedOpcode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_FormattedOpcode

  .method public hidebysig specialname instance string 
          get_FormattedOperands() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_FormattedOperands

  .method public hidebysig specialname instance string 
          get_Symbol() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_Symbol

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_DocumentPosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_DocumentPosition

  .method public hidebysig specialname instance uint32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_ByteOffset

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> 
          get_RegisterOperands() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_RegisterOperands

  .method public hidebysig specialname instance bool 
          get_ValidInstruction() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::get_ValidInstruction

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 uint64 InstructionPointer,
                 uint32 InstructionLength,
                 string Address,
                 string AddressOffset,
                 string CodeBytes,
                 string RawOpcode,
                 string RawOperands,
                 string FormattedOpcode,
                 string FormattedOperands,
                 string Symbol,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition DocumentPosition,
                 uint32 ByteOffset,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> RegisterOperands,
                 bool ValidInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisassembledInstruction::Create

  .property instance string Address()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Address()
  } // end of property DkmDisassembledInstruction::Address
  .property instance string AddressOffset()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_AddressOffset()
  } // end of property DkmDisassembledInstruction::AddressOffset
  .property instance uint32 ByteOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_ByteOffset()
  } // end of property DkmDisassembledInstruction::ByteOffset
  .property instance string CodeBytes()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_CodeBytes()
  } // end of property DkmDisassembledInstruction::CodeBytes
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          DocumentPosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_DocumentPosition()
  } // end of property DkmDisassembledInstruction::DocumentPosition
  .property instance string FormattedOpcode()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_FormattedOpcode()
  } // end of property DkmDisassembledInstruction::FormattedOpcode
  .property instance string FormattedOperands()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_FormattedOperands()
  } // end of property DkmDisassembledInstruction::FormattedOperands
  .property instance uint32 InstructionLength()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_InstructionLength()
  } // end of property DkmDisassembledInstruction::InstructionLength
  .property instance uint64 InstructionPointer()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_InstructionPointer()
  } // end of property DkmDisassembledInstruction::InstructionPointer
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Process()
  } // end of property DkmDisassembledInstruction::Process
  .property instance string RawOpcode()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RawOpcode()
  } // end of property DkmDisassembledInstruction::RawOpcode
  .property instance string RawOperands()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RawOperands()
  } // end of property DkmDisassembledInstruction::RawOperands
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32>
          RegisterOperands()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_RegisterOperands()
  } // end of property DkmDisassembledInstruction::RegisterOperands
  .property instance string Symbol()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_Symbol()
  } // end of property DkmDisassembledInstruction::Symbol
  .property instance bool ValidInstruction()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction::get_ValidInstruction()
  } // end of property DkmDisassembledInstruction::ValidInstruction
} // end of class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 33 36 62 65 38 63 32 2D 62 34 34 61   // ..$736be8c2-b44a
                                                                                                  2D 33 64 35 39 2D 32 34 62 31 2D 65 31 33 32 66   // -3d59-24b1-e132f
                                                                                                  62 65 32 32 35 66 63 00 00 )                      // be225fc..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag CategoryTrigger = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag CodeTrigger = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag GlobalTrigger = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag NameTrigger = int32(0x00000002)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTrigger::get_TagValue

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage 
          get_ProcessingStage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTrigger::get_ProcessingStage

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTrigger::get_Thread

  .property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage
          ProcessingStage()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_ProcessingStage()
  } // end of property DkmExceptionTrigger::ProcessingStage
  .property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger/Tag Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_TagValue()
  } // end of property DkmExceptionTrigger::TagValue
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger::get_Thread()
  } // end of property DkmExceptionTrigger::Thread
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAddExceptionTriggerAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAddExceptionTriggerAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult::get_ErrorCode()
  } // end of property DkmAddExceptionTriggerAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmAddExceptionTriggerAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags BreakForEveryThread = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags BreakOnFirstDefaultWarp = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags BreakOncePerWarp = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags AllowPartialRead = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags ExecutableOnly = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags ReadGPUPointer = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 37 64 37 35 61 37 32 2D 35 34 37 37   // ..$d7d75a72-5477
                                                                                                  2D 64 63 63 33 2D 65 33 30 36 2D 38 65 33 31 61   // -dcc3-e306-8e31a
                                                                                                  38 65 37 66 64 37 65 00 00 )                      // 8e7fd7e..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance 
          FindNativeModuleInstance(uint64 BaseAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::FindNativeModuleInstance

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance[] 
          GetNativeModuleInstances() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::GetNativeModuleInstances

  .method public hidebysig instance void 
          BackupSourceFiles(string[] EditSourceFilePaths,
                            string[] BackupSourceFilePaths) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::BackupSourceFiles

  .method public hidebysig instance void 
          ApplyCodeChange(uint32 CurrentLineNumberHint,
                          [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& Warnings,
                          [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& Errors) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::ApplyCodeChange

  .method public hidebysig instance void 
          CommitCodeChange([out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& Warnings,
                           [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& Errors) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRuntimeInstance::CommitCodeChange

} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction EnterStoppedState = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ForceQueueModeComplete = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ResumeTarget = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction ResumeUnclaimedThreads = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction SlipTarget = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.DkmStoppingEventProcessingNextAction

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags AllowStoppingEvents = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags RunAllThreads = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 65 32 32 34 66 64 37 2D 36 62 33 35   // ..$8e224fd7-6b35
                                                                                                  2D 32 39 65 32 2D 31 31 39 62 2D 30 32 30 64 34   // -29e2-119b-020d4
                                                                                                  64 66 34 64 63 61 63 00 00 )                      // df4dcac..
  .class auto ansi sealed nested public NestedException
         extends [mscorlib]System.Object
  {
    .field public initonly uint64 NestedExceptionAddress
    .field public initonly valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType NestedExceptionType
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(uint64 NestedExceptionAddress,
                                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType NestedExceptionType) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NestedException::.ctor

  } // end of class NestedException

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException 
          get_NestedExceptionPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_NestedExceptionPart

  .method public hidebysig specialname instance int32 
          get_ResultCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_ResultCode

  .method public hidebysig specialname instance uint32 
          get_ThreadId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_ThreadId

  .method public hidebysig specialname instance string 
          get_ErrorText() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_ErrorText

  .method public hidebysig specialname instance uint64 
          get_ExceptionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_ExceptionAddress

  .method public hidebysig specialname instance uint32 
          get_StackTraceWordSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_StackTraceWordSize

  .method public hidebysig specialname instance uint32 
          get_StackTraceWords() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_StackTraceWords

  .method public hidebysig specialname instance uint64 
          get_StackTrace() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::get_StackTrace

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation 
          Create(int32 ResultCode,
                 uint32 ThreadId,
                 string ErrorText,
                 uint64 ExceptionAddress,
                 uint32 StackTraceWordSize,
                 uint32 StackTraceWords,
                 uint64 StackTrace,
                 class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException NestedException) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStowedExceptionInformation::Create

  .property instance string ErrorText()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ErrorText()
  } // end of property DkmStowedExceptionInformation::ErrorText
  .property instance uint64 ExceptionAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ExceptionAddress()
  } // end of property DkmStowedExceptionInformation::ExceptionAddress
  .property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException
          NestedExceptionPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation/NestedException Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_NestedExceptionPart()
  } // end of property DkmStowedExceptionInformation::NestedExceptionPart
  .property instance int32 ResultCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ResultCode()
  } // end of property DkmStowedExceptionInformation::ResultCode
  .property instance uint64 StackTrace()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTrace()
  } // end of property DkmStowedExceptionInformation::StackTrace
  .property instance uint32 StackTraceWordSize()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTraceWordSize()
  } // end of property DkmStowedExceptionInformation::StackTraceWordSize
  .property instance uint32 StackTraceWords()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_StackTraceWords()
  } // end of property DkmStowedExceptionInformation::StackTraceWords
  .property instance uint32 ThreadId()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation::get_ThreadId()
  } // end of property DkmStowedExceptionInformation::ThreadId
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 64 37 31 63 34 37 66 2D 64 63 30 39   // ..$ed71c47f-dc09
                                                                                                  2D 32 61 62 62 2D 64 36 31 62 2D 62 35 35 61 37   // -2abb-d61b-b55a7
                                                                                                  34 62 64 62 37 31 30 00 00 )                      // 4bdb710..
  .method public hidebysig specialname instance uint64 
          get_QueryPerformanceCounterTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessExecutionCounters::get_QueryPerformanceCounterTime

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters 
          Create(uint64 QueryPerformanceCounterTime) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessExecutionCounters::Create

  .property instance uint64 QueryPerformanceCounterTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters::get_QueryPerformanceCounterTime()
  } // end of property DkmProcessExecutionCounters::QueryPerformanceCounterTime
} // end of class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname uint16 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture PROCESSOR_ARCHITECTURE_AMD64 = uint16(0x0009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture PROCESSOR_ARCHITECTURE_ARM = uint16(0x0005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture PROCESSOR_ARCHITECTURE_INTEL = uint16(0x0000)
} // end of class Microsoft.VisualStudio.Debugger.DkmProcessorArchitecture

.class public auto ansi serializable sealed Microsoft.VisualStudio.Debugger.DkmReadOnlyByteCollection
       extends class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
       implements [mscorlib]System.Runtime.Serialization.ISerializable
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                               valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReadOnlyByteCollection::.ctor

  .method public hidebysig specialname instance native int 
          get_ItemsPtr() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReadOnlyByteCollection::get_ItemsPtr

  .method public hidebysig newslot virtual final 
          instance void  GetObjectData(class [mscorlib]System.Runtime.Serialization.SerializationInfo info,
                                       valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmReadOnlyByteCollection::GetObjectData

  .property instance native int ItemsPtr()
  {
    .get instance native int Microsoft.VisualStudio.Debugger.DkmReadOnlyByteCollection::get_ItemsPtr()
  } // end of property DkmReadOnlyByteCollection::ItemsPtr
} // end of class Microsoft.VisualStudio.Debugger.DkmReadOnlyByteCollection

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolveCPUInstructionAddressAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolveCPUInstructionAddressAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_AddressObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolveCPUInstructionAddressAsyncResult::get_AddressObject

  .method public hidebysig specialname instance bool 
          get_FirstAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolveCPUInstructionAddressAsyncResult::get_FirstAddress

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress AddressObject,
                               bool FirstAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolveCPUInstructionAddressAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          AddressObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_AddressObject()
  } // end of property DkmResolveCPUInstructionAddressAsyncResult::AddressObject
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_ErrorCode()
  } // end of property DkmResolveCPUInstructionAddressAsyncResult::ErrorCode
  .property instance bool FirstAddress()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult::get_FirstAddress()
  } // end of property DkmResolveCPUInstructionAddressAsyncResult::FirstAddress
} // end of class Microsoft.VisualStudio.Debugger.DkmResolveCPUInstructionAddressAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities AllowStackCaching = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities PreventDetach = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities ProhibitsStoppingInNonUserCode = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities SupportsJustMyCode = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmRuntimeId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Native() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_Native

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Clr() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_Clr

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Gpu() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_Gpu

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_ActiveScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScriptInterop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_ActiveScriptInterop

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrNativeCompilation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_ClrNativeCompilation

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_GpuInterop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeId::get_GpuInterop

  .property valuetype [mscorlib]System.Guid
          ActiveScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ActiveScript()
  } // end of property DkmRuntimeId::ActiveScript
  .property valuetype [mscorlib]System.Guid
          ActiveScriptInterop()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ActiveScriptInterop()
  } // end of property DkmRuntimeId::ActiveScriptInterop
  .property valuetype [mscorlib]System.Guid
          Clr()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Clr()
  } // end of property DkmRuntimeId::Clr
  .property valuetype [mscorlib]System.Guid
          ClrNativeCompilation()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_ClrNativeCompilation()
  } // end of property DkmRuntimeId::ClrNativeCompilation
  .property valuetype [mscorlib]System.Guid
          Gpu()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Gpu()
  } // end of property DkmRuntimeId::Gpu
  .property valuetype [mscorlib]System.Guid
          GpuInterop()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_GpuInterop()
  } // end of property DkmRuntimeId::GpuInterop
  .property valuetype [mscorlib]System.Guid
          Native()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmRuntimeId::get_Native()
  } // end of property DkmRuntimeId::Native
} // end of class Microsoft.VisualStudio.Debugger.DkmRuntimeId

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 66 36 35 66 62 37 33 2D 64 33 37 35   // ..$df65fb73-d375
                                                                                                  2D 34 39 65 37 2D 30 36 66 39 2D 30 65 35 36 31   // -49e7-06f9-0e561
                                                                                                  33 64 62 61 33 66 33 00 00 )                      // 3dba3f3..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode 
          get_Parent() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::get_Parent

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::get_UniqueId

  .method public hidebysig specialname instance string 
          get_Title() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::get_Title

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::get_Process

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent,
                 string Title,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::Create

  .method public hidebysig instance void 
          Unload() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocumentTreeNode::Unload

  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode
          Parent()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Parent()
  } // end of property DkmScriptDocumentTreeNode::Parent
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Process()
  } // end of property DkmScriptDocumentTreeNode::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_RuntimeInstance()
  } // end of property DkmScriptDocumentTreeNode::RuntimeInstance
  .property instance string Title()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_Title()
  } // end of property DkmScriptDocumentTreeNode::Title
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode::get_UniqueId()
  } // end of property DkmScriptDocumentTreeNode::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode

.class public auto ansi Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 64 66 33 33 64 37 31 2D 66 62 33 30   // ..$9df33d71-fb30
                                                                                                  2D 39 31 62 36 2D 34 33 66 64 2D 31 35 63 32 62   // -91b6-43fd-15c2b
                                                                                                  64 64 61 37 32 33 36 00 00 )                      // dda7236..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_TaskProviderId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_TaskProviderId

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_Name

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags 
          get_AdditionalCapabilities() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_AdditionalCapabilities

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::get_Process

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider 
          Create(valuetype [mscorlib]System.Guid TaskProviderId,
                 string Name,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider 
          Create(valuetype [mscorlib]System.Guid TaskProviderId,
                 string Name,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags AdditionalCapabilities,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask 
          FindTask(uint64 TaskId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::FindTask

  .method public hidebysig instance void 
          GetTasks(bool IsRoot,
                   uint32 RequestCount,
                   [out] uint32& ScheduledTaskCount,
                   [out] class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[]& Items,
                   [out] uint32& TaskEnumFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::GetTasks

  .method public hidebysig instance string[] 
          GetPropertyNames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProvider::GetPropertyNames

  .property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags
          AdditionalCapabilities()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_AdditionalCapabilities()
  } // end of property DkmTaskProvider::AdditionalCapabilities
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_Name()
  } // end of property DkmTaskProvider::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_Process()
  } // end of property DkmTaskProvider::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_RuntimeInstance()
  } // end of property DkmTaskProvider::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          TaskProviderId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_TaskProviderId()
  } // end of property DkmTaskProvider::TaskProviderId
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider::get_UniqueId()
  } // end of property DkmTaskProvider::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 38 62 35 35 30 33 30 2D 65 63 61 63   // ..$48b55030-ecac
                                                                                                  2D 32 33 38 37 2D 34 65 36 33 2D 62 66 64 63 33   // -2387-4e63-bfdc3
                                                                                                  63 31 37 32 35 39 38 00 00 )                      // c172598..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_InstructionAddress

  .method public hidebysig specialname instance uint64 
          get_FrameBase() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_FrameBase

  .method public hidebysig specialname instance uint32 
          get_FrameSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_FrameSize

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Flags

  .method public hidebysig specialname instance string 
          get_Description() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Description

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters 
          get_Registers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Registers

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> 
          get_Annotations() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Annotations

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance 
          get_AnnotatedModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_AnnotatedModule

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext 
          get_AsyncContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_AsyncContext

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Data

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_ModuleInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Process

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::get_Connection

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 uint64 FrameBase,
                 uint32 FrameSize,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags,
                 string Description,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Annotations) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 uint64 FrameBase,
                 uint32 FrameSize,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags,
                 string Description,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Annotations,
                 class Microsoft.VisualStudio.Debugger.DkmModuleInstance AnnotatedModule,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::Create

  .method public hidebysig instance void 
          OnSetNextStatementCompleted(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::OnSetNextStatementCompleted

  .method public hidebysig instance void 
          InterceptCurrentException(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags InterceptAction,
                                    [out] uint64& Cookie) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::InterceptCurrentException

  .method public hidebysig instance void 
          GetUnwindAddress([out] class Microsoft.VisualStudio.Debugger.DkmInstructionAddress& NewAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::GetUnwindAddress

  .method public hidebysig instance void 
          SetNextStatement(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::SetNextStatement

  .method public hidebysig instance uint32 
          CanSetNextStatement(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStatement) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::CanSetNextStatement

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame 
          Format(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Options) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::Format

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol 
          GetInstructionSymbol() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::GetInstructionSymbol

  .method public hidebysig instance object 
          GetInspectionInterface(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Session,
                                 valuetype [mscorlib]System.Guid InterfaceID) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::GetInspectionInterface

  .method public hidebysig instance bool 
          ComputeUserStatus(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                            [out] bool& ExceptionImplementation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::ComputeUserStatus

  .method public hidebysig instance string[] 
          GetClrGenericParameters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::GetClrGenericParameters

  .method public hidebysig instance void 
          GetClrGenericParameters(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrame::GetClrGenericParameters

  .property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance
          AnnotatedModule()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_AnnotatedModule()
  } // end of property DkmStackWalkFrame::AnnotatedModule
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation>
          Annotations()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation> Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Annotations()
  } // end of property DkmStackWalkFrame::Annotations
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext
          AsyncContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_AsyncContext()
  } // end of property DkmStackWalkFrame::AsyncContext
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Connection()
  } // end of property DkmStackWalkFrame::Connection
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData
          Data()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Data()
  } // end of property DkmStackWalkFrame::Data
  .property instance string Description()
  {
    .get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Description()
  } // end of property DkmStackWalkFrame::Description
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Flags()
  } // end of property DkmStackWalkFrame::Flags
  .property instance uint64 FrameBase()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_FrameBase()
  } // end of property DkmStackWalkFrame::FrameBase
  .property instance uint32 FrameSize()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_FrameSize()
  } // end of property DkmStackWalkFrame::FrameSize
  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_InstructionAddress()
  } // end of property DkmStackWalkFrame::InstructionAddress
  .property instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmModuleInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_ModuleInstance()
  } // end of property DkmStackWalkFrame::ModuleInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Process()
  } // end of property DkmStackWalkFrame::Process
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
          Registers()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Registers()
  } // end of property DkmStackWalkFrame::Registers
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_RuntimeInstance()
  } // end of property DkmStackWalkFrame::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame::get_Thread()
  } // end of property DkmStackWalkFrame::Thread
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame

.class public auto ansi Microsoft.VisualStudio.Debugger.Stepping.DkmStepper
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 61 61 65 39 37 36 34 2D 33 33 61 33   // ..$2aae9764-33a3
                                                                                                  2D 38 66 63 37 2D 32 32 66 66 2D 65 32 37 63 39   // -8fc7-22ff-e27c9
                                                                                                  64 65 39 31 62 64 61 00 00 )                      // de91bda..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_StartingAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_StartingAddress

  .method public hidebysig specialname instance uint64 
          get_FrameBase() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_FrameBase

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind 
          get_StepKind() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_StepKind

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit 
          get_StepUnit() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_StepUnit

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_SourceId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath 
          get_CodePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_CodePath

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper 
          get_CrossThreadParent() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_CrossThreadParent

  .method public hidebysig specialname instance bool 
          get_ShouldCaptureReturnValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_ShouldCaptureReturnValue

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> 
          get_CurrentCodePaths() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_CurrentCodePaths

  .method public hidebysig specialname instance string 
          get_CurrentMethodName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::get_CurrentMethodName

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartingAddress,
                 uint64 FrameBase,
                 valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepKind,
                 valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath CodePath,
                 class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper CrossThreadParent,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StartingAddress,
                 uint64 FrameBase,
                 valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepKind,
                 valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath CodePath,
                 class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper CrossThreadParent,
                 bool ShouldCaptureReturnValue,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> CurrentCodePaths,
                 string CurrentMethodName,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::Create

  .method public hidebysig instance void 
          BeforeEnable() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::BeforeEnable

  .method public hidebysig instance void 
          Enable(bool RemoveOtherSteppers) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::Enable

  .method public hidebysig instance void 
          CancelStepper(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::CancelStepper

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          GetControllingRuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::GetControllingRuntimeInstance

  .method public hidebysig instance bool 
          StepControlRequested(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                               class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::StepControlRequested

  .method public hidebysig instance void 
          TakeStepControl(bool LeaveGuardsInPlace,
                          valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                          class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CallingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::TakeStepControl

  .method public hidebysig instance void 
          OnStepArbitration(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                            class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CurrentControllingRuntimeInstance) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::OnStepArbitration

  .method public hidebysig instance void 
          OnCrossThreadStepArbitration(valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Reason,
                                       class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance CurrentControllingRuntimeInstance,
                                       class Microsoft.VisualStudio.Debugger.DkmThread NewThread,
                                       class Microsoft.VisualStudio.Debugger.DkmInstructionAddress NewStartingInstructionAddress,
                                       [out] class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper& NewStepper) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::OnCrossThreadStepArbitration

  .method public hidebysig instance void 
          OnReturnValues(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue> ReturnValues,
                         bool LastValueInCurrentContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::OnReturnValues

  .method public hidebysig instance void 
          OnStepComplete(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                         bool HasException) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::OnStepComplete

  .method public hidebysig instance void 
          SetExceptionInFlight(bool Enable) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::SetExceptionInFlight

  .method public hidebysig instance bool 
          IsExceptionInFlight() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStepper::IsExceptionInFlight

  .property instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath
          CodePath()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CodePath()
  } // end of property DkmStepper::CodePath
  .property instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper
          CrossThreadParent()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CrossThreadParent()
  } // end of property DkmStepper::CrossThreadParent
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath>
          CurrentCodePaths()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath> Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CurrentCodePaths()
  } // end of property DkmStepper::CurrentCodePaths
  .property instance string CurrentMethodName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_CurrentMethodName()
  } // end of property DkmStepper::CurrentMethodName
  .property instance uint64 FrameBase()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_FrameBase()
  } // end of property DkmStepper::FrameBase
  .property instance bool ShouldCaptureReturnValue()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_ShouldCaptureReturnValue()
  } // end of property DkmStepper::ShouldCaptureReturnValue
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_SourceId()
  } // end of property DkmStepper::SourceId
  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          StartingAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StartingAddress()
  } // end of property DkmStepper::StartingAddress
  .property instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind
          StepKind()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StepKind()
  } // end of property DkmStepper::StepKind
  .property instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit
          StepUnit()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_StepUnit()
  } // end of property DkmStepper::StepUnit
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_Thread()
  } // end of property DkmStepper::Thread
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmStepper::get_UniqueId()
  } // end of property DkmStepper::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason AsyncStep = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason EnterRuntime = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason ExceptionHandlerFound = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason ExitRuntime = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason InstructionLevelOverride = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NewStep = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NoSource = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason NoSymbols = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason TransitionModule = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason Unknown = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason UnknownModule = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_DisplayName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayName

  .method public hidebysig specialname instance int32 
          get_DisplayNamePriority() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayNamePriority

  .method public hidebysig specialname instance int32 
          get_ThreadCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::get_ThreadCategory

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string DisplayName,
                               int32 DisplayNamePriority,
                               int32 ThreadCategory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadDisplayPropertiesAsyncResult::.ctor

  .property instance string DisplayName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayName()
  } // end of property DkmGetThreadDisplayPropertiesAsyncResult::DisplayName
  .property instance int32 DisplayNamePriority()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_DisplayNamePriority()
  } // end of property DkmGetThreadDisplayPropertiesAsyncResult::DisplayNamePriority
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_ErrorCode()
  } // end of property DkmGetThreadDisplayPropertiesAsyncResult::ErrorCode
  .property instance int32 ThreadCategory()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult::get_ThreadCategory()
  } // end of property DkmGetThreadDisplayPropertiesAsyncResult::ThreadCategory
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadNameAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadNameAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadNameAsyncResult::get_Name

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string Name) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetThreadNameAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult::get_ErrorCode()
  } // end of property DkmGetThreadNameAsyncResult::ErrorCode
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult::get_Name()
  } // end of property DkmGetThreadNameAsyncResult::Name
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadNameAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 34 35 33 37 30 34 32 2D 61 36 37 34   // ..$14537042-a674
                                                                                                  2D 30 66 36 33 2D 32 30 62 61 2D 61 39 66 61 62   // -0f63-20ba-a9fab
                                                                                                  34 31 31 64 34 36 61 00 00 )                      // 411d46a..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::Create

  .method public hidebysig instance void 
          InitializeHeapObjectWalk(uint32 TargetObjectCount,
                                   bool LiveObjectStatsOnly) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::InitializeHeapObjectWalk

  .method public hidebysig instance uint32 
          NextObjects(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::NextObjects

  .method public hidebysig instance uint32 
          NextReferences(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::NextReferences

  .method public hidebysig instance uint32 
          NextRoots(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::NextRoots

  .method public hidebysig instance uint8[] 
          GetSampledHeapData(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::GetSampledHeapData

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo[] 
          GetSampledHeapTypeStats() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::GetSampledHeapTypeStats

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] 
          GetRoots() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSampler::GetRoots

  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler::get_RuntimeInstance()
  } // end of property DkmManagedHeapSampler::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler::get_UniqueId()
  } // end of property DkmManagedHeapSampler::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 63 61 38 65 35 65 30 2D 36 62 66 63   // ..$dca8e5e0-6bfc
                                                                                                  2D 31 61 38 37 2D 35 61 65 38 2D 34 63 31 36 35   // -1a87-5ae8-4c165
                                                                                                  38 35 36 63 33 63 62 00 00 )                      // 856c3cb..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::Create

  .method public hidebysig instance void 
          InitializeHeapObjectWalk() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::InitializeHeapObjectWalk

  .method public hidebysig instance void 
          InitializeHeapReferenceWalk() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::InitializeHeapReferenceWalk

  .method public hidebysig instance void 
          InitializeHeapRootsWalk() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::InitializeHeapRootsWalk

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo[] 
          NextObjects(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::NextObjects

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo[] 
          NextReferences(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::NextReferences

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] 
          NextRoots(uint32 RequestCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::NextRoots

  .method public hidebysig instance string[] 
          GetTypeNames(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId[] TypeIds) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::GetTypeNames

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo[] 
          GetSegments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapWalker::GetSegments

  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker::get_RuntimeInstance()
  } // end of property DkmManagedHeapWalker::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker::get_UniqueId()
  } // end of property DkmManagedHeapWalker::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker

.class public auto ansi Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 34 63 39 66 34 30 64 2D 66 34 39 32   // ..$14c9f40d-f492
                                                                                                  2D 35 33 32 65 2D 65 61 37 35 2D 66 30 64 31 61   // -532e-ea75-f0d1a
                                                                                                  62 30 65 39 66 66 66 00 00 )                      // b0e9fff..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePath::get_Name

  .method public hidebysig specialname instance int32 
          get_CodePathOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePath::get_CodePathOffset

  .method public hidebysig specialname instance int32 
          get_EndOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePath::get_EndOffset

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePath::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath 
          Create(string Name,
                 int32 CodePathOffset,
                 int32 EndOffset,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePath::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_AdditionalData()
  } // end of property DkmSteppingCodePath::AdditionalData
  .property instance int32 CodePathOffset()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_CodePathOffset()
  } // end of property DkmSteppingCodePath::CodePathOffset
  .property instance int32 EndOffset()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_EndOffset()
  } // end of property DkmSteppingCodePath::EndOffset
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath::get_Name()
  } // end of property DkmSteppingCodePath::Name
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DkmSourceId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_AD7BreakpointId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_AD7BreakpointId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_MSBreakpointManagerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_MSBreakpointManagerId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_NativeBaseDmRequest() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_NativeBaseDmRequest

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_AD7ExceptionSetting() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_AD7ExceptionSetting

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_AD7ExceptionBoundary() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_AD7ExceptionBoundary

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_AD7Stepper() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_AD7Stepper

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ManagedDmSymbolsUpdateId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_ManagedDmSymbolsUpdateId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ManagedDmStepper() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_ManagedDmStepper

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_GpuDebugMonitorRequest() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_GpuDebugMonitorRequest

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_AD7DeploymentId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_AD7DeploymentId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_BaseDMServicesId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_BaseDMServicesId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_SteppingManagerStepper() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_SteppingManagerStepper

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClientCppEE() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_ClientCppEE

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ServerCppEE() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceId::get_ServerCppEE

  .property valuetype [mscorlib]System.Guid
          AD7BreakpointId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7BreakpointId()
  } // end of property DkmSourceId::AD7BreakpointId
  .property valuetype [mscorlib]System.Guid
          AD7DeploymentId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7DeploymentId()
  } // end of property DkmSourceId::AD7DeploymentId
  .property valuetype [mscorlib]System.Guid
          AD7ExceptionBoundary()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7ExceptionBoundary()
  } // end of property DkmSourceId::AD7ExceptionBoundary
  .property valuetype [mscorlib]System.Guid
          AD7ExceptionSetting()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7ExceptionSetting()
  } // end of property DkmSourceId::AD7ExceptionSetting
  .property valuetype [mscorlib]System.Guid
          AD7Stepper()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_AD7Stepper()
  } // end of property DkmSourceId::AD7Stepper
  .property valuetype [mscorlib]System.Guid
          BaseDMServicesId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_BaseDMServicesId()
  } // end of property DkmSourceId::BaseDMServicesId
  .property valuetype [mscorlib]System.Guid
          ClientCppEE()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ClientCppEE()
  } // end of property DkmSourceId::ClientCppEE
  .property valuetype [mscorlib]System.Guid
          GpuDebugMonitorRequest()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_GpuDebugMonitorRequest()
  } // end of property DkmSourceId::GpuDebugMonitorRequest
  .property valuetype [mscorlib]System.Guid
          MSBreakpointManagerId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_MSBreakpointManagerId()
  } // end of property DkmSourceId::MSBreakpointManagerId
  .property valuetype [mscorlib]System.Guid
          ManagedDmStepper()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ManagedDmStepper()
  } // end of property DkmSourceId::ManagedDmStepper
  .property valuetype [mscorlib]System.Guid
          ManagedDmSymbolsUpdateId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ManagedDmSymbolsUpdateId()
  } // end of property DkmSourceId::ManagedDmSymbolsUpdateId
  .property valuetype [mscorlib]System.Guid
          NativeBaseDmRequest()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_NativeBaseDmRequest()
  } // end of property DkmSourceId::NativeBaseDmRequest
  .property valuetype [mscorlib]System.Guid
          ServerCppEE()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_ServerCppEE()
  } // end of property DkmSourceId::ServerCppEE
  .property valuetype [mscorlib]System.Guid
          SteppingManagerStepper()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DkmSourceId::get_SteppingManagerStepper()
  } // end of property DkmSourceId::SteppingManagerStepper
} // end of class Microsoft.VisualStudio.Debugger.DkmSourceId

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 30 61 62 63 36 65 38 2D 63 33 39 34   // ..$00abc6e8-c394
                                                                                                  2D 66 61 65 66 2D 63 63 66 34 2D 65 33 31 38 30   // -faef-ccf4-e3180
                                                                                                  32 32 31 63 63 36 30 00 00 )                      // 221cc60..
  .method public hidebysig specialname instance int32 
          get_Identifier() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUnwoundRegister::get_Identifier

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUnwoundRegister::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister 
          Create(int32 Identifier,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUnwoundRegister::Create

  .property instance int32 Identifier()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister::get_Identifier()
  } // end of property DkmUnwoundRegister::Identifier
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Value()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister::get_Value()
  } // end of property DkmUnwoundRegister::Value
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 62 36 34 61 62 37 32 2D 38 64 34 65   // ..$bb64ab72-8d4e
                                                                                                  2D 36 39 39 37 2D 39 66 38 39 2D 37 39 34 33 36   // -6997-9f89-79436
                                                                                                  66 33 38 31 33 33 65 00 00 )                      // f38133e..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag ArmRegisters = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag X64Registers = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag X86Registers = int32(0x00000001)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::get_TagValue

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister> 
          get_UnwoundRegisters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::get_UnwoundRegisters

  .method public hidebysig instance uint64 
          GetInstructionPointer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::GetInstructionPointer

  .method public hidebysig instance uint64 
          GetStackPointer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::GetStackPointer

  .method public hidebysig instance int32 
          GetRegisterValue(uint32 Id,
                           void* Buffer,
                           int32 Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::GetRegisterValue

  .method public hidebysig instance int32 
          GetRegisterValue(uint32 Id,
                           uint8[] Buffer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameRegisters::GetRegisterValue

  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters/Tag Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters::get_TagValue()
  } // end of property DkmFrameRegisters::TagValue
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister>
          UnwoundRegisters()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister> Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters::get_UnwoundRegisters()
  } // end of property DkmFrameRegisters::UnwoundRegisters
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedThreadPropertiesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedThreadPropertiesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_ManagedThreadId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedThreadPropertiesAsyncResult::get_ManagedThreadId

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 ManagedThreadId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedThreadPropertiesAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult::get_ErrorCode()
  } // end of property DkmGetManagedThreadPropertiesAsyncResult::ErrorCode
  .property instance int32 ManagedThreadId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult::get_ManagedThreadId()
  } // end of property DkmGetManagedThreadPropertiesAsyncResult::ManagedThreadId
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetManagedThreadPropertiesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentLocationAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentLocationAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_LocationName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentLocationAsyncResult::get_LocationName

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string LocationName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetCurrentLocationAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult::get_ErrorCode()
  } // end of property DkmGetCurrentLocationAsyncResult::ErrorCode
  .property instance string LocationName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult::get_LocationName()
  } // end of property DkmGetCurrentLocationAsyncResult::LocationName
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 35 62 39 66 33 32 31 2D 64 61 37 65   // ..$25b9f321-da7e
                                                                                                  2D 37 62 35 32 2D 61 63 38 63 2D 33 38 31 64 39   // -7b52-ac8c-381d9
                                                                                                  63 62 62 63 31 37 36 00 00 )                      // cbbc176..
  .field public initonly uint64 StackBase
  .field public initonly uint64 StackLimit
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                              valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                            valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                               valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                            valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                                      valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element0,
                                   valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 StackBase,
                               uint64 StackLimit) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackMemoryRange::.ctor

} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatilePropertiesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatilePropertiesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_Priority() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatilePropertiesAsyncResult::get_Priority

  .method public hidebysig specialname instance uint64 
          get_AffinityMask() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatilePropertiesAsyncResult::get_AffinityMask

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 Priority,
                               uint64 AffinityMask) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatilePropertiesAsyncResult::.ctor

  .property instance uint64 AffinityMask()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_AffinityMask()
  } // end of property DkmGetVolatilePropertiesAsyncResult::AffinityMask
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_ErrorCode()
  } // end of property DkmGetVolatilePropertiesAsyncResult::ErrorCode
  .property instance int32 Priority()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult::get_Priority()
  } // end of property DkmGetVolatilePropertiesAsyncResult::Priority
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatilePropertiesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags UserModeScheduled = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatileFlagsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatileFlagsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatileFlagsAsyncResult::get_Flags

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetVolatileFlagsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult::get_ErrorCode()
  } // end of property DkmGetVolatileFlagsAsyncResult::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult::get_Flags()
  } // end of property DkmGetVolatileFlagsAsyncResult::Flags
} // end of class Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetVolatileFlagsAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmUnknownInstructionAddress
       extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 33 36 66 33 31 34 30 2D 62 63 64 64   // ..$a36f3140-bcdd
                                                                                                  2D 66 63 64 66 2D 61 33 36 33 2D 38 36 39 66 62   // -fcdf-a363-869fb
                                                                                                  61 65 61 39 39 30 36 00 00 )                      // aea9906..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmUnknownInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUnknownInstructionAddress::Create

} // end of class Microsoft.VisualStudio.Debugger.DkmUnknownInstructionAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.DkmUserMessage
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 61 31 36 36 63 37 63 2D 34 61 65 36   // ..$1a166c7c-4ae6
                                                                                                  2D 30 39 39 32 2D 38 32 65 32 2D 63 37 35 35 35   // -0992-82e2-c7555
                                                                                                  35 65 64 38 30 35 35 00 00 )                      // 5ed8055..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_Connection

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_Process

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind 
          get_OutputKind() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_OutputKind

  .method public hidebysig specialname instance string 
          get_MessageText() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_MessageText

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags 
          get_MessageBoxFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_MessageBoxFlags

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_ErrorCode

  .method public hidebysig specialname instance uint64 
          get_TimeStamp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::get_TimeStamp

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmUserMessage 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind OutputKind,
                 string MessageText,
                 valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MessageBoxFlags,
                 int32 ErrorCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DkmUserMessage 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind OutputKind,
                 string MessageText,
                 valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MessageBoxFlags,
                 int32 ErrorCode,
                 uint64 TimeStamp) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::Create

  .method public hidebysig instance void 
          Post() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::Post

  .method public hidebysig instance uint32 
          DisplayPrompt() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::DisplayPrompt

  .method public hidebysig instance void 
          DisplayPrompt(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmUserMessage::DisplayPrompt

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DkmUserMessage::get_Connection()
  } // end of property DkmUserMessage::Connection
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DkmUserMessage::get_ErrorCode()
  } // end of property DkmUserMessage::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags
          MessageBoxFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags Microsoft.VisualStudio.Debugger.DkmUserMessage::get_MessageBoxFlags()
  } // end of property DkmUserMessage::MessageBoxFlags
  .property instance string MessageText()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DkmUserMessage::get_MessageText()
  } // end of property DkmUserMessage::MessageText
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind
          OutputKind()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind Microsoft.VisualStudio.Debugger.DkmUserMessage::get_OutputKind()
  } // end of property DkmUserMessage::OutputKind
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.DkmUserMessage::get_Process()
  } // end of property DkmUserMessage::Process
  .property instance uint64 TimeStamp()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DkmUserMessage::get_TimeStamp()
  } // end of property DkmUserMessage::TimeStamp
} // end of class Microsoft.VisualStudio.Debugger.DkmUserMessage

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind ExceptionOutputWindowMessage = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind FatalError = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind FatalOperationAbortOutputMessage = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind JustMyCodePrompt = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind MessageBox = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind NewDebuggerCompatibilityWarning = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind ProgramOutput = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind StepFilterOutputWindowMessage = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind StepFilterPrompt = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind UnfilteredOutputWindowMessage = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DkmUserMessageOutputKind

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.MessageBoxFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ABORTRETRYIGNORE = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_APPLMODAL = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_CANCELTRYCONTINUE = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFAULT_DESKTOP_ONLY = int32(0x00020000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFBUTTON1 = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFBUTTON2 = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFBUTTON3 = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFBUTTON4 = int32(0x00000300)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_DEFMASK = int32(0x00000F00)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_HELP = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONASTERISK = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONERROR = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONEXCLAMATION = int32(0x00000030)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONHAND = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONINFORMATION = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONMASK = int32(0x000000F0)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONQUESTION = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONSTOP = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_ICONWARNING = int32(0x00000030)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_MISCMASK = int32(0x0000C000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_MODEMASK = int32(0x00003000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_NOFOCUS = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_OK = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_OKCANCEL = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_RETRYCANCEL = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_RIGHT = int32(0x00080000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_RTLREADING = int32(0x00100000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_SERVICE_NOTIFICATION = int32(0x00200000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_SERVICE_NOTIFICATION_NT3X = int32(0x00040000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_SETFOREGROUND = int32(0x00010000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_SYSTEMMODAL = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_TASKMODAL = int32(0x00002000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_TOPMOST = int32(0x00040000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_TYPEMASK = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_USERICON = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_YESNO = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags MB_YESNOCANCEL = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MessageBoxFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.MessageBoxFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DkmWorkListCompletionRoutine
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method DkmWorkListCompletionRoutine::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(class Microsoft.VisualStudio.Debugger.DkmWorkList workList) runtime managed
  {
  } // end of method DkmWorkListCompletionRoutine::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method DkmWorkListCompletionRoutine::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method DkmWorkListCompletionRoutine::EndInvoke

} // end of class Microsoft.VisualStudio.Debugger.DkmWorkListCompletionRoutine

.class public explicit ansi sealed Microsoft.VisualStudio.Debugger.DkmXmm128
       extends [mscorlib]System.ValueType
{
  .pack 0
  .size 0
  .field [0] public initonly uint64 u64v0
  .field [8] public initonly uint64 u64v1
  .field [0] public initonly uint32 u32v0
  .field [4] public initonly uint32 u32v1
  .field [8] public initonly uint32 u32v2
  .field [12] public initonly uint32 u32v3
  .field [0] public initonly float64 Double0
  .field [8] public initonly float64 Double1
  .field [0] public initonly float32 Single0
  .field [4] public initonly float32 Single1
  .field [8] public initonly float32 Single2
  .field [12] public initonly float32 Single3
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 arg0,
                               uint64 arg1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmXmm128::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 arg0,
                               uint32 arg1,
                               uint32 arg2,
                               uint32 arg3) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmXmm128::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(float64 arg0,
                               float64 arg1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmXmm128::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(float32 arg0,
                               float32 arg1,
                               float32 arg2,
                               float32 arg3) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmXmm128::.ctor

} // end of class Microsoft.VisualStudio.Debugger.DkmXmm128

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GCReferenceType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname uint32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleAll = uint32(0x7FFFFFFF)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrong = uint32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongAsyncPinned = uint32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongDependent = uint32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongOnly = uint32(0x000001E3)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongPinning = uint32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongRefCount = uint32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleStrongSizedByref = uint32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakLong = uint32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakOnly = uint32(0x0000001C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakRefCount = uint32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorHandleWeakShort = uint32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorReferenceFinalizer = uint32(0x04C4B402)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GCReferenceType CorReferenceStack = uint32(0x80000001)
} // end of class Microsoft.VisualStudio.Debugger.GCReferenceType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.MinidumpFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterMemory = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterModulePaths = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpFilterTriage = int32(0x00100000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpIgnoreInaccessibleMemory = int32(0x00020000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpNormal = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpScanMemory = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpValidTypeFlags = int32(0x001FFFFF)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithCodeSegs = int32(0x00002000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithDataSegs = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullAuxiliaryState = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullMemory = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithFullMemoryInfo = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithHandleData = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithIndirectlyReferencedMemory = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithModuleHeaders = int32(0x00080000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithPrivateReadWriteMemory = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithPrivateWriteCopyMemory = int32(0x00010000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithProcessThreadData = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithThreadInfo = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithTokenInformation = int32(0x00040000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithUnloadedModules = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithoutAuxiliaryState = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.MinidumpFlags MiniDumpWithoutOptionalData = int32(0x00000400)
} // end of class Microsoft.VisualStudio.Debugger.MinidumpFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 31 63 38 39 35 32 63 2D 34 65 31 38   // ..$91c8952c-4e18
                                                                                                  2D 30 30 66 37 2D 61 63 37 31 2D 38 64 30 64 33   // -00f7-ac71-8d0d3
                                                                                                  38 36 39 34 65 34 63 00 00 )                      // 8694e4c..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint 
          get_PendingBreakpoint() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_PendingBreakpoint

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint 
          get_Target() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_Target

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_SourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_SourcePosition

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_SourceId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_CompilerId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::get_Process

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint PendingBreakpoint,
                 class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Target,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::Create

  .method public hidebysig instance void 
          OnHit(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                bool HasException) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::OnHit

  .method public hidebysig instance void 
          Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::Enable

  .method public hidebysig instance void 
          Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::Disable

  .method public hidebysig instance bool 
          IsEnabled() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::IsEnabled

  .method public hidebysig instance void 
          SetCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::SetCondition

  .method public hidebysig instance void 
          SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::SetHitCountCondition

  .method public hidebysig instance void 
          SetHitCountValue(int32 NewValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::SetHitCountValue

  .method public hidebysig instance void 
          GetHitCountValue(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBoundBreakpoint::GetHitCountValue

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_CompilerId()
  } // end of property DkmBoundBreakpoint::CompilerId
  .property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
          PendingBreakpoint()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_PendingBreakpoint()
  } // end of property DkmBoundBreakpoint::PendingBreakpoint
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_Process()
  } // end of property DkmBoundBreakpoint::Process
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_SourceId()
  } // end of property DkmBoundBreakpoint::SourceId
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          SourcePosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_SourcePosition()
  } // end of property DkmBoundBreakpoint::SourcePosition
  .property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
          Target()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_Target()
  } // end of property DkmBoundBreakpoint::Target
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint::get_UniqueId()
  } // end of property DkmBoundBreakpoint::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 34 38 31 35 32 31 39 2D 63 35 66 64   // ..$c4815219-c5fd
                                                                                                  2D 33 65 39 36 2D 39 62 38 36 2D 66 64 36 61 33   // -3e96-9b86-fd6a3
                                                                                                  36 65 65 66 34 36 34 00 00 )                      // 6eef464..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag InstructionBreakpoint = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag NativeDataBreakpoint = int32(0x00000001)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_UniqueId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_SourceId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::get_Process

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Close

  .method public hidebysig instance void 
          SetCompiledConditionPending() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetCompiledConditionPending

  .method public hidebysig instance void 
          SetCompiledConditionPending(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetCompiledConditionPending

  .method public hidebysig instance void 
          SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition,
                                 [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetEvaluationCondition

  .method public hidebysig instance void 
          SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                 class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition,
                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetEvaluationCondition

  .method public hidebysig instance void 
          ClearConditions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::ClearConditions

  .method public hidebysig instance void 
          ClearConditions(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::ClearConditions

  .method public hidebysig instance void 
          SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition,
                               int32 HitCountValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetHitCountCondition

  .method public hidebysig instance void 
          SetHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition,
                               int32 HitCountValue,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::SetHitCountCondition

  .method public hidebysig instance void 
          ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition,
                                 [out] int32& CurrentHitCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::ClearHitCountCondition

  .method public hidebysig instance void 
          ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                 class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition Condition,
                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::ClearHitCountCondition

  .method public hidebysig instance void 
          GetHitCountConditionStatus([out] int32& CurrentHitCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::GetHitCountConditionStatus

  .method public hidebysig instance void 
          GetHitCountConditionStatus(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::GetHitCountConditionStatus

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery 
          GetCompiledCondition(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                               [out] valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator& ConditionOperator) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::GetCompiledCondition

  .method public hidebysig instance void 
          OnBreakpointConditionFailed(string ErrorMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::OnBreakpointConditionFailed

  .method public hidebysig instance void 
          RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.DkmThread ModifiedBreakThread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::RequestBreakpointEventOnModifiedThread

  .method public hidebysig instance void 
          RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                                 class Microsoft.VisualStudio.Debugger.DkmThread ModifiedBreakThread,
                                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::RequestBreakpointEventOnModifiedThread

  .method public hidebysig instance void 
          Enable() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Enable

  .method public hidebysig instance void 
          Enable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Enable

  .method public hidebysig instance void 
          Test() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Test

  .method public hidebysig instance void 
          Test(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Test

  .method public hidebysig instance void 
          Disable() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Disable

  .method public hidebysig instance void 
          Disable(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::Disable

  .method public hidebysig instance void 
          OnHit(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                bool HasException) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::OnHit

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmThread 
          EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.DkmThread FirstStoppedThread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::EvaluateConditionAndSelectThread

  .method public hidebysig instance void 
          EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                           class Microsoft.VisualStudio.Debugger.DkmThread FirstStoppedThread,
                                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::EvaluateConditionAndSelectThread

  .method public hidebysig instance void 
          OnBreakpointConditionFailed(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason ErrorCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeBreakpoint::OnBreakpointConditionFailed

  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_Process()
  } // end of property DkmRuntimeBreakpoint::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_RuntimeInstance()
  } // end of property DkmRuntimeBreakpoint::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_SourceId()
  } // end of property DkmRuntimeBreakpoint::SourceId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint/Tag Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_TagValue()
  } // end of property DkmRuntimeBreakpoint::TagValue
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_Thread()
  } // end of property DkmRuntimeBreakpoint::Thread
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint::get_UniqueId()
  } // end of property DkmRuntimeBreakpoint::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 39 39 35 62 36 63 38 2D 39 33 64 63   // ..$7995b6c8-93dc
                                                                                                  2D 61 63 37 37 2D 64 35 39 62 2D 62 39 39 63 65   // -ac77-d59b-b99ce
                                                                                                  36 65 63 39 65 34 38 00 00 )                      // 6ec9e48..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId 
          get_SourceFileId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourcePosition::get_SourceFileId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan 
          get_TextSpan() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourcePosition::get_TextSpan

  .method public hidebysig specialname instance string 
          get_DocumentName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourcePosition::get_DocumentName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourcePosition::Create

  .property instance string DocumentName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_DocumentName()
  } // end of property DkmSourcePosition::DocumentName
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId
          SourceFileId()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_SourceFileId()
  } // end of property DkmSourcePosition::SourceFileId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan
          TextSpan()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition::get_TextSpan()
  } // end of property DkmSourcePosition::TextSpan
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnableBoundBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnableBoundBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmEnableBoundBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisableBoundBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisableBoundBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmDisableBoundBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 66 34 37 65 35 30 62 2D 38 35 65 66   // ..$6f47e50b-85ef
                                                                                                  2D 62 61 36 64 2D 65 33 36 61 2D 38 31 32 31 66   // -ba6d-e36a-8121f
                                                                                                  61 31 39 35 62 62 32 00 00 )                      // a195bb2..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator 
          get_Operator() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::get_Operator

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::get_CompilerId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags 
          get_CompilationFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::get_CompilationFlags

  .method public hidebysig specialname instance string 
          get_Text() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::get_Text

  .method public hidebysig specialname instance uint32 
          get_Timeout() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::get_Timeout

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition 
          Create(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator Operator,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags,
                 string Text,
                 uint32 Timeout) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointCondition::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags
          CompilationFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_CompilationFlags()
  } // end of property DkmBreakpointCondition::CompilationFlags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_CompilerId()
  } // end of property DkmBreakpointCondition::CompilerId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator
          Operator()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Operator()
  } // end of property DkmBreakpointCondition::Operator
  .property instance string Text()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Text()
  } // end of property DkmBreakpointCondition::Text
  .property instance uint32 Timeout()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition::get_Timeout()
  } // end of property DkmBreakpointCondition::Timeout
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 61 30 64 31 39 64 35 2D 62 38 61 64   // ..$2a0d19d5-b8ad
                                                                                                  2D 36 66 62 65 2D 35 64 65 63 2D 61 39 31 38 66   // -6fbe-5dec-a918f
                                                                                                  30 38 33 63 61 34 62 00 00 )                      // 083ca4b..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator 
          get_Operator() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointHitCountCondition::get_Operator

  .method public hidebysig specialname instance int32 
          get_Operand() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointHitCountCondition::get_Operand

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition 
          Create(valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Operator,
                 int32 Operand) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointHitCountCondition::Create

  .property instance int32 Operand()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition::get_Operand()
  } // end of property DkmBreakpointHitCountCondition::Operand
  .property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator
          Operator()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition::get_Operator()
  } // end of property DkmBreakpointHitCountCondition::Operator
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetBoundBreakpointHitCountValueAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetBoundBreakpointHitCountValueAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_CurrentHitCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetBoundBreakpointHitCountValueAsyncResult::get_CurrentHitCount

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 CurrentHitCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetBoundBreakpointHitCountValueAsyncResult::.ctor

  .property instance int32 CurrentHitCount()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult::get_CurrentHitCount()
  } // end of property DkmGetBoundBreakpointHitCountValueAsyncResult::CurrentHitCount
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult::get_ErrorCode()
  } // end of property DkmGetBoundBreakpointHitCountValueAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator BreakWhenChanged = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator BreakWhenTrue = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags AllowImplicitVariables = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags DesignTime = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags DynamicView = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ForceEvaluationNow = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ForceRealFuncEval = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags HideNonPublicMembers = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoExpansion = int32(0x00010000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoFormatting = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoFuncEval = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoQuotes = int32(0x00002000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoRawView = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoSideEffects = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags NoToString = int32(0x00000400)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ResultsOnly = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags ShowValueRaw = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags TreatAsExpression = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags TreatFunctionAsAddress = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 64 64 65 35 36 35 62 2D 63 33 38 32   // ..$2dde565b-c382
                                                                                                  2D 37 64 62 62 2D 32 38 34 31 2D 36 34 37 61 37   // -7dbb-2841-647a7
                                                                                                  33 32 32 62 36 34 65 00 00 )                      // 322b64e..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_FilePaths() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointFileUpdateNotification::get_FilePaths

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> FilePaths) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointFileUpdateNotification::Create

  .method public hidebysig instance void 
          Send(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmBreakpointFileUpdateNotification::Send

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          FilePaths()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification::get_FilePaths()
  } // end of property DkmBreakpointFileUpdateNotification::FilePaths
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Equal = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator EqualOrGreater = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator Modulo = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountConditionOperator

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel HighestError = int32(0x00000011)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel LowError = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel StandardError = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel1 = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel10 = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel11 = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel12 = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel13 = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel14 = int32(0x0000000D)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel15 = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel2 = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel3 = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel4 = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel5 = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel6 = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel7 = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel8 = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel WarningLevel9 = int32(0x00000008)
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason CodeUnload = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason Rebind = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointConditionsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointConditionsAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult::get_ErrorCode()
  } // end of property DkmClearRuntimeBreakpointConditionsAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointConditionsAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointHitCountConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_CurrentHitCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 CurrentHitCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClearRuntimeBreakpointHitCountConditionAsyncResult::.ctor

  .property instance int32 CurrentHitCount()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount()
  } // end of property DkmClearRuntimeBreakpointHitCountConditionAsyncResult::CurrentHitCount
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
  } // end of property DkmClearRuntimeBreakpointHitCountConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmClearRuntimeBreakpointHitCountConditionAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Execute = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask ReadWrite = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Write = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisablePendingBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisablePendingBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmDisablePendingBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisableRuntimeBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDisableRuntimeBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmDisableRuntimeBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableRuntimeBreakpointAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnablePendingBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnablePendingBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmEnablePendingBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnableRuntimeBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnableRuntimeBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmEnableRuntimeBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableRuntimeBreakpointAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnrollPendingBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnrollPendingBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmEnrollPendingBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateConditionAndSelectThreadAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateConditionAndSelectThreadAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_ConditionMetThread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateConditionAndSelectThreadAsyncResult::get_ConditionMetThread

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmThread ConditionMetThread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateConditionAndSelectThreadAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          ConditionMetThread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult::get_ConditionMetThread()
  } // end of property DkmEvaluateConditionAndSelectThreadAsyncResult::ConditionMetThread
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluateConditionAndSelectThreadAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluateConditionAndSelectThreadAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 38 33 38 65 62 31 64 2D 39 65 63 37   // ..$d838eb1d-9ec7
                                                                                                  2D 37 35 31 63 2D 31 38 39 36 2D 35 30 35 37 62   // -751c-1896-5057b
                                                                                                  66 35 39 37 33 37 36 00 00 )                      // f597376..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint 
          get_RuntimeBreakpoint() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::get_RuntimeBreakpoint

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition 
          get_Source() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::get_Source

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::get_Language

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition 
          Create(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint RuntimeBreakpoint,
                 class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Source,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::Create

  .method public hidebysig instance void 
          Parse([out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::Parse

  .method public hidebysig instance void 
          Evaluate(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                   [out] bool& Stop,
                   [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationBreakpointCondition::Evaluate

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_Language()
  } // end of property DkmEvaluationBreakpointCondition::Language
  .property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
          RuntimeBreakpoint()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_RuntimeBreakpoint()
  } // end of property DkmEvaluationBreakpointCondition::RuntimeBreakpoint
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_RuntimeInstance()
  } // end of property DkmEvaluationBreakpointCondition::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition
          Source()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_Source()
  } // end of property DkmEvaluationBreakpointCondition::Source
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition::get_UniqueId()
  } // end of property DkmEvaluationBreakpointCondition::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetRuntimeBreakpointHitCountConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_CurrentHitCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 CurrentHitCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetRuntimeBreakpointHitCountConditionAsyncResult::.ctor

  .property instance int32 CurrentHitCount()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_CurrentHitCount()
  } // end of property DkmGetRuntimeBreakpointHitCountConditionAsyncResult::CurrentHitCount
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
  } // end of property DkmGetRuntimeBreakpointHitCountConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetRuntimeBreakpointHitCountConditionAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 65 34 64 65 35 31 62 2D 38 64 38 32   // ..$5e4de51b-8d82
                                                                                                  2D 35 64 33 38 2D 38 30 34 31 2D 33 61 34 32 63   // -5d38-8041-3a42c
                                                                                                  31 38 64 33 66 34 37 00 00 )                      // 18d3f47..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressBreakpoint::get_InstructionAddress

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 bool IsBarrier,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressBreakpoint::Create

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint::get_InstructionAddress()
  } // end of property DkmPendingAddressBreakpoint::InstructionAddress
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressBreakpoint

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 34 33 37 31 32 62 30 2D 61 39 33 35   // ..$243712b0-a935
                                                                                                  2D 36 63 39 32 2D 37 66 63 34 2D 36 66 66 62 34   // -6c92-7fc4-6ffb4
                                                                                                  36 31 31 32 36 61 63 00 00 )                      // 61126ac..
  .method public hidebysig specialname instance string 
          get_ModuleName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressNameBreakpoint::get_ModuleName

  .method public hidebysig specialname instance string 
          get_AddressName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressNameBreakpoint::get_AddressName

  .method public hidebysig specialname instance string 
          get_FunctionName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressNameBreakpoint::get_FunctionName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid SourceId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 bool IsBarrier,
                 string ModuleName,
                 string AddressName,
                 string FunctionName,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingAddressNameBreakpoint::Create

  .property instance string AddressName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_AddressName()
  } // end of property DkmPendingAddressNameBreakpoint::AddressName
  .property instance string FunctionName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_FunctionName()
  } // end of property DkmPendingAddressNameBreakpoint::FunctionName
  .property instance string ModuleName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint::get_ModuleName()
  } // end of property DkmPendingAddressNameBreakpoint::ModuleName
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingAddressNameBreakpoint

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetPendingBreakpointConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetPendingBreakpointConditionAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult::get_ErrorCode()
  } // end of property DkmSetPendingBreakpointConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetPendingBreakpointHitCountConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetPendingBreakpointHitCountConditionAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult::get_ErrorCode()
  } // end of property DkmSetPendingBreakpointHitCountConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 66 64 37 61 32 38 31 2D 64 62 66 33   // ..$afd7a281-dbf3
                                                                                                  2D 39 34 36 62 2D 39 34 36 34 2D 38 63 61 31 32   // -946b-9464-8ca12
                                                                                                  32 38 37 36 31 36 62 00 00 )                      // 287616b..
  .method public hidebysig specialname instance string 
          get_DataElementLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingDataBreakpoint::get_DataElementLocation

  .method public hidebysig specialname instance int32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingDataBreakpoint::get_Size

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid SourceId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 bool IsBarrier,
                 string DataElementLocation,
                 int32 Size,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingDataBreakpoint::Create

  .property instance string DataElementLocation()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint::get_DataElementLocation()
  } // end of property DkmPendingDataBreakpoint::DataElementLocation
  .property instance int32 Size()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint::get_Size()
  } // end of property DkmPendingDataBreakpoint::Size
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingDataBreakpoint

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 61 37 62 30 61 65 65 2D 31 63 63 35   // ..$ea7b0aee-1cc5
                                                                                                  2D 61 38 38 37 2D 34 64 66 66 2D 39 33 30 66 63   // -a887-4dff-930fc
                                                                                                  32 33 61 36 32 37 38 00 00 )                      // 23a6278..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid SourceId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 bool IsBarrier,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFileLineBreakpoint::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetCurrentSourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFileLineBreakpoint::GetCurrentSourcePosition

  .method public hidebysig instance string 
          GetCurrentSourceText() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFileLineBreakpoint::GetCurrentSourceText

} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 34 36 33 62 39 65 33 2D 35 62 39 66   // ..$b463b9e3-5b9f
                                                                                                  2D 65 30 65 34 2D 66 30 65 39 2D 34 66 33 38 63   // -e0e4-f0e9-4f38c
                                                                                                  36 33 65 66 34 34 33 00 00 )                      // 63ef443..
  .method public hidebysig specialname instance string 
          get_ModuleName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFunctionBreakpoint::get_ModuleName

  .method public hidebysig specialname instance string 
          get_FunctionName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFunctionBreakpoint::get_FunctionName

  .method public hidebysig specialname instance uint32 
          get_LineOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFunctionBreakpoint::get_LineOffset

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid SourceId,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 bool IsBarrier,
                 string ModuleName,
                 string FunctionName,
                 uint32 LineOffset,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPendingFunctionBreakpoint::Create

  .property instance string FunctionName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_FunctionName()
  } // end of property DkmPendingFunctionBreakpoint::FunctionName
  .property instance uint32 LineOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_LineOffset()
  } // end of property DkmPendingFunctionBreakpoint::LineOffset
  .property instance string ModuleName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint::get_ModuleName()
  } // end of property DkmPendingFunctionBreakpoint::ModuleName
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFunctionBreakpoint

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRequestBreakpointEventOnModifiedThreadAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRequestBreakpointEventOnModifiedThreadAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult::get_ErrorCode()
  } // end of property DkmRequestBreakpointEventOnModifiedThreadAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRequestBreakpointEventOnModifiedThreadAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetCompiledConditionPendingAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetCompiledConditionPendingAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult::get_ErrorCode()
  } // end of property DkmSetCompiledConditionPendingAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionPendingAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetEvaluationConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetEvaluationConditionAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_ErrorText() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetEvaluationConditionAsyncResult::get_ErrorText

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetEvaluationConditionAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult::get_ErrorCode()
  } // end of property DkmSetEvaluationConditionAsyncResult::ErrorCode
  .property instance string ErrorText()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult::get_ErrorText()
  } // end of property DkmSetEvaluationConditionAsyncResult::ErrorText
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetEvaluationConditionAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetRuntimeBreakpointHitCountConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult::get_ErrorCode()
  } // end of property DkmSetRuntimeBreakpointHitCountConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetRuntimeBreakpointHitCountConditionAsyncResult

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 37 61 30 39 63 63 39 2D 65 31 32 32   // ..$47a09cc9-e122
                                                                                                  2D 31 36 65 31 2D 39 31 33 32 2D 62 65 64 61 34   // -16e1-9132-beda4
                                                                                                  65 37 62 38 30 32 35 00 00 )                      // e7b8025..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CompiledClrInspectionQuery = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CompiledClrLocalsQuery = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag CustomQuery = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag DkmILQuery = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_QueryKind() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::get_QueryKind

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer 
          get_DataContainer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::get_DataContainer

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_LanguageId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::get_LanguageId

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          Execute(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> Parameters,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  uint32 Timeout,
                  valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                  [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& FailureReason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::Execute

  .method public hidebysig instance void 
          Execute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> Parameters,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  uint32 Timeout,
                  valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::Execute

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::Close

  .method public hidebysig instance string 
          ResolveILFailureReason(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason ErrorCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQuery::ResolveILFailureReason

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer
          DataContainer()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_DataContainer()
  } // end of property DkmCompiledInspectionQuery::DataContainer
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          LanguageId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_LanguageId()
  } // end of property DkmCompiledInspectionQuery::LanguageId
  .property instance valuetype [mscorlib]System.Guid
          QueryKind()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_QueryKind()
  } // end of property DkmCompiledInspectionQuery::QueryKind
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_RuntimeInstance()
  } // end of property DkmCompiledInspectionQuery::RuntimeInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery::get_TagValue()
  } // end of property DkmCompiledInspectionQuery::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTestRuntimeBreakpointAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTestRuntimeBreakpointAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult::get_ErrorCode()
  } // end of property DkmTestRuntimeBreakpointAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmTestRuntimeBreakpointAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason AbortFailed = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason AbortUnhandledException = int32(0x0000000C)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Aborted = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason ByteExtractionOutOfBounds = int32(0x0000000E)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason DivideByZero = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason InvalidPseudoAddressOperation = int32(0x0000000F)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason MemoryReadError = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason MemoryWriteError = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason MinidumpNotSupported = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason RegisterReadError = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason RegisterWriteError = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason StringTooLong = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Timeout = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason TooManyFuncEval = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason UserModeScheduledNotSupported = int32(0x0000000D)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 33 34 36 31 30 33 64 2D 37 63 33 30   // ..$3346103d-7c30
                                                                                                  2D 34 65 65 39 2D 63 33 64 64 2D 65 38 65 37 65   // -4ee9-c3dd-e8e7e
                                                                                                  39 66 36 36 61 35 65 00 00 )                      // 9f66a5e..
  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeHardwareDataBreakpoint::get_Address

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask 
          get_Access() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeHardwareDataBreakpoint::get_Access

  .method public hidebysig specialname instance int32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeHardwareDataBreakpoint::get_Size

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint64 Address,
                 valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Access,
                 int32 Size,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeHardwareDataBreakpoint::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask
          Access()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDataAccessStopMask Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Access()
  } // end of property DkmRuntimeHardwareDataBreakpoint::Access
  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Address()
  } // end of property DkmRuntimeHardwareDataBreakpoint::Address
  .property instance int32 Size()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint::get_Size()
  } // end of property DkmRuntimeHardwareDataBreakpoint::Size
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeHardwareDataBreakpoint

.class public auto ansi Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint
       extends Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 63 30 62 31 65 36 35 2D 39 64 39 63   // ..$4c0b1e65-9d9c
                                                                                                  2D 32 61 34 62 2D 39 65 61 30 2D 38 62 39 65 61   // -2a4b-9ea0-8b9ea
                                                                                                  64 32 37 63 61 33 39 00 00 )                      // d27ca39..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::get_InstructionAddress

  .method public hidebysig specialname instance bool 
          get_IsBarrier() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::get_IsBarrier

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 bool IsBarrier,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::Create

  .method public hidebysig instance void 
          SetCompiledCondition(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition,
                               valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::SetCompiledCondition

  .method public hidebysig instance void 
          SetCompiledCondition(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition,
                               valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::SetCompiledCondition

  .method public hidebysig instance void 
          TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition,
                                         valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::TryPushConditionToTargetDevice

  .method public hidebysig instance void 
          TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery CompiledCondition,
                                         valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator ConditionOperator,
                                         class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::TryPushConditionToTargetDevice

  .method public hidebysig instance void 
          TryClearConditionOnTargetDevice() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::TryClearConditionOnTargetDevice

  .method public hidebysig instance void 
          TryClearConditionOnTargetDevice(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeInstructionBreakpoint::TryClearConditionOnTargetDevice

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint::get_InstructionAddress()
  } // end of property DkmRuntimeInstructionBreakpoint::InstructionAddress
  .property instance bool IsBarrier()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint::get_IsBarrier()
  } // end of property DkmRuntimeInstructionBreakpoint::IsBarrier
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetCompiledConditionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetCompiledConditionAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult::get_ErrorCode()
  } // end of property DkmSetCompiledConditionAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetCompiledConditionAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTryPushConditionToTargetDeviceAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTryPushConditionToTargetDeviceAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult::get_ErrorCode()
  } // end of property DkmTryPushConditionToTargetDeviceAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryPushConditionToTargetDeviceAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTryClearConditionOnTargetDeviceAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTryClearConditionOnTargetDeviceAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult::get_ErrorCode()
  } // end of property DkmTryClearConditionOnTargetDeviceAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Breakpoints.DkmTryClearConditionOnTargetDeviceAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters
       extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 39 31 65 66 66 35 34 2D 34 62 38 39   // ..$991eff54-4b89
                                                                                                  2D 66 63 38 65 2D 33 64 35 39 2D 66 36 62 38 64   // -fc8e-3d59-f6b8d
                                                                                                  61 65 36 37 32 36 35 00 00 )                      // ae67265..
  .method public hidebysig specialname instance uint32 
          get_Pc() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmArmFrameRegisters::get_Pc

  .method public hidebysig specialname instance uint32 
          get_Sp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmArmFrameRegisters::get_Sp

  .property instance uint32 Pc()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters::get_Pc()
  } // end of property DkmArmFrameRegisters::Pc
  .property instance uint32 Sp()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters::get_Sp()
  } // end of property DkmArmFrameRegisters::Sp
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmArmFrameRegisters

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 65 33 37 32 64 65 30 2D 32 37 66 38   // ..$be372de0-27f8
                                                                                                  2D 66 63 62 33 2D 36 61 33 35 2D 32 37 31 32 38   // -fcb3-6a35-27128
                                                                                                  31 31 31 63 64 31 37 00 00 )                      // 111cd17..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_InspectionSession

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_TaskProviderId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_TaskProviderId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_TaskIdentityStackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_TaskIdentityStackFrame

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_InternalStackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_InternalStackFrame

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult 
          get_FrameObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_FrameObject

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask 
          get_Task() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_Task

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> 
          get_ReturnStackFunctions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_ReturnStackFunctions

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::get_UniqueId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 valuetype [mscorlib]System.Guid TaskProviderId,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame TaskIdentityStackFrame,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame InternalStackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult FrameObject,
                 class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> ReturnStackFunctions,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::Create

  .method public hidebysig instance void 
          GetTaskCreationStack(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::GetTaskCreationStack

  .method public hidebysig instance void 
          GetTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                    class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::GetTaskContinuationFrames

  .method public hidebysig instance void 
          GetAsyncCallStack(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAsyncStackWalkContext::GetAsyncCallStack

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult
          FrameObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_FrameObject()
  } // end of property DkmAsyncStackWalkContext::FrameObject
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_InspectionSession()
  } // end of property DkmAsyncStackWalkContext::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          InternalStackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_InternalStackFrame()
  } // end of property DkmAsyncStackWalkContext::InternalStackFrame
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult>
          ReturnStackFunctions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult> Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_ReturnStackFunctions()
  } // end of property DkmAsyncStackWalkContext::ReturnStackFunctions
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_RuntimeInstance()
  } // end of property DkmAsyncStackWalkContext::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask
          Task()
  {
    .get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_Task()
  } // end of property DkmAsyncStackWalkContext::Task
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          TaskIdentityStackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_TaskIdentityStackFrame()
  } // end of property DkmAsyncStackWalkContext::TaskIdentityStackFrame
  .property instance valuetype [mscorlib]System.Guid
          TaskProviderId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_TaskProviderId()
  } // end of property DkmAsyncStackWalkContext::TaskProviderId
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext::get_UniqueId()
  } // end of property DkmAsyncStackWalkContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 39 30 33 35 66 65 33 2D 63 32 35 66   // ..$79035fe3-c25f
                                                                                                  2D 31 35 33 35 2D 36 35 39 35 2D 32 62 36 62 37   // -1535-6595-2b6b7
                                                                                                  39 36 32 31 66 35 30 00 00 )                      // 9621f50..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::get_Process

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::get_UniqueId

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer 
          FindReturnValueContainer(int32 Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::FindReturnValueContainer

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer[] 
          GetReturnValueContainers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionSession::GetReturnValueContainers

  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession::get_Process()
  } // end of property DkmInspectionSession::Process
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession::get_UniqueId()
  } // end of property DkmInspectionSession::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 64 39 34 38 39 39 36 2D 35 38 30 35   // ..$5d948996-5805
                                                                                                  2D 31 37 39 35 2D 38 62 36 62 2D 35 33 35 66 30   // -1795-8b6b-535f0
                                                                                                  62 63 33 32 62 64 65 00 00 )                      // bc32bde..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Flags

  .method public hidebysig specialname instance string 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Value

  .method public hidebysig specialname instance string 
          get_EditableValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_EditableValue

  .method public hidebysig specialname instance string 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Type

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory 
          get_Category() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Category

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType 
          get_Access() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Access

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType 
          get_StorageType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_StorageType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags 
          get_TypeModifierFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_TypeModifierFlags

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_Address

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> 
          get_CustomUIVisualizers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_CustomUIVisualizers

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> 
          get_ExternalModules() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::get_ExternalModules

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 string Name,
                 string FullName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags,
                 string Value,
                 string EditableValue,
                 string Type,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> ExternalModules,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::Create

  .method public hidebysig instance void 
          CreateDebuggeeSideVisualizerObject(uint32 SelectedVisualizerIndex,
                                             [out] string& ExceptionType,
                                             [out] string& ExceptionStackTrace,
                                             [out] string& ExceptionMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::CreateDebuggeeSideVisualizerObject

  .method public hidebysig instance bool 
          DestroyDebuggeeSideVisualizerObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::DestroyDebuggeeSideVisualizerObject

  .method public hidebysig instance void 
          ResolveAssembly(string AssemblyName,
                          [out] string& AssemblyPath,
                          [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& AssemblyBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::ResolveAssembly

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetDataFromDebuggeeSideVisualizer([out] string& ExceptionType,
                                            [out] string& ExceptionStackTrace,
                                            [out] string& ExceptionMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::GetDataFromDebuggeeSideVisualizer

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          TransferDataToDebuggeeSideVisualizer(uint8[] DataIn,
                                               [out] string& ExceptionType,
                                               [out] string& ExceptionStackTrace,
                                               [out] string& ExceptionMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::TransferDataToDebuggeeSideVisualizer

  .method public hidebysig instance void 
          CreateReplacementObjectOnDebuggeeSideVisualizer(uint8[] DataIn,
                                                          [out] string& ExceptionType,
                                                          [out] string& ExceptionStackTrace,
                                                          [out] string& ExceptionMessage) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::CreateReplacementObjectOnDebuggeeSideVisualizer

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetClrValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessEvaluationResult::GetClrValue

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType
          Access()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Access()
  } // end of property DkmSuccessEvaluationResult::Access
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress
          Address()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Address()
  } // end of property DkmSuccessEvaluationResult::Address
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
          Category()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Category()
  } // end of property DkmSuccessEvaluationResult::Category
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo>
          CustomUIVisualizers()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_CustomUIVisualizers()
  } // end of property DkmSuccessEvaluationResult::CustomUIVisualizers
  .property instance string EditableValue()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_EditableValue()
  } // end of property DkmSuccessEvaluationResult::EditableValue
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmModuleInstance>
          ExternalModules()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmModuleInstance> Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_ExternalModules()
  } // end of property DkmSuccessEvaluationResult::ExternalModules
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Flags()
  } // end of property DkmSuccessEvaluationResult::Flags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType
          StorageType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_StorageType()
  } // end of property DkmSuccessEvaluationResult::StorageType
  .property instance string Type()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Type()
  } // end of property DkmSuccessEvaluationResult::Type
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags
          TypeModifierFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_TypeModifierFlags()
  } // end of property DkmSuccessEvaluationResult::TypeModifierFlags
  .property instance string Value()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult::get_Value()
  } // end of property DkmSuccessEvaluationResult::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult

.class public auto ansi Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 31 34 37 30 33 32 34 2D 63 38 34 33   // ..$91470324-c843
                                                                                                  2D 62 65 63 33 2D 32 30 35 30 2D 37 63 39 65 36   // -bec3-2050-7c9e6
                                                                                                  34 34 63 32 38 64 37 00 00 )                      // 44c28d7..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider 
          get_TaskProvider() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_TaskProvider

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_Thread

  .method public hidebysig specialname instance uint64 
          get_TaskId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_TaskId

  .method public hidebysig specialname instance uint64 
          get_ParentTaskId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_ParentTaskId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment 
          get_StackSegment() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_StackSegment

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus 
          get_ReturnStatus() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_ReturnStatus

  .method public hidebysig specialname instance float64 
          get_StartTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_StartTime

  .method public hidebysig specialname instance float64 
          get_CompletedTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_CompletedTime

  .method public hidebysig specialname instance float64 
          get_Duration() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::get_Duration

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask 
          Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider TaskProvider,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint64 TaskId,
                 uint64 ParentTaskId,
                 valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment StackSegment,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask 
          Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider TaskProvider,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint64 TaskId,
                 uint64 ParentTaskId,
                 valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment StackSegment,
                 valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus ReturnStatus,
                 float64 StartTime,
                 float64 CompletedTime,
                 float64 Duration,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[] 
          GetChildTasks() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::GetChildTasks

  .method public hidebysig instance void 
          GetTaskProperties(uint32 Radix,
                            int32 Fields,
                            [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties& Properties) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::GetTaskProperties

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject[] 
          GetSynchronizationObjects() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTask::GetSynchronizationObjects

  .property instance float64 CompletedTime()
  {
    .get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_CompletedTime()
  } // end of property DkmTask::CompletedTime
  .property instance float64 Duration()
  {
    .get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_Duration()
  } // end of property DkmTask::Duration
  .property instance uint64 ParentTaskId()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_ParentTaskId()
  } // end of property DkmTask::ParentTaskId
  .property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus
          ReturnStatus()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_ReturnStatus()
  } // end of property DkmTask::ReturnStatus
  .property instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment
          StackSegment()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_StackSegment()
  } // end of property DkmTask::StackSegment
  .property instance float64 StartTime()
  {
    .get instance float64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_StartTime()
  } // end of property DkmTask::StartTime
  .property instance uint64 TaskId()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_TaskId()
  } // end of property DkmTask::TaskId
  .property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider
          TaskProvider()
  {
    .get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_TaskProvider()
  } // end of property DkmTask::TaskProvider
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask::get_Thread()
  } // end of property DkmTask::Thread
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskCreationStackAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskCreationStackAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_CreationStack() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskCreationStackAsyncResult::get_CreationStack

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] CreationStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskCreationStackAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          CreationStack()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult::get_CreationStack()
  } // end of property DkmGetTaskCreationStackAsyncResult::CreationStack
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult::get_ErrorCode()
  } // end of property DkmGetTaskCreationStackAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskContinuationFramesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskContinuationFramesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_ContinuationFrames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskContinuationFramesAsyncResult::get_ContinuationFrames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] ContinuationFrames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTaskContinuationFramesAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          ContinuationFrames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult::get_ContinuationFrames()
  } // end of property DkmGetTaskContinuationFramesAsyncResult::ContinuationFrames
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult::get_ErrorCode()
  } // end of property DkmGetTaskContinuationFramesAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncCallStackAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncCallStackAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncCallStackAsyncResult::get_Frames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncCallStackAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult::get_ErrorCode()
  } // end of property DkmGetAsyncCallStackAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          Frames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult::get_Frames()
  } // end of property DkmGetAsyncCallStackAsyncResult::Frames
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCallStackFilterList::get_Count

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          FilterNextFrame(int32 ImplementationIndex,
                          class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext StackContext,
                          class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Input) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCallStackFilterList::FilterNextFrame

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCallStackFilterList::Create

  .property instance int32 Count()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList::get_Count()
  } // end of property DkmCallStackFilterList::Count
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterList

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 30 66 38 63 61 32 38 2D 36 31 37 66   // ..$90f8ca28-617f
                                                                                                  2D 30 62 31 33 2D 66 34 32 31 2D 66 61 36 66 31   // -0b13-f421-fa6f1
                                                                                                  31 35 39 39 37 33 65 00 00 )                      // 159973e..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_Thread

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions 
          get_FilterOptions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_FilterOptions

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions 
          get_FormatOptions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_FormatOptions

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ThreadContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_ThreadContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext 
          get_AsyncContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_AsyncContext

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation 
          get_Operation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::get_Operation

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ThreadContext,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ThreadContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Operation,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::Create

  .method public hidebysig instance void 
          GetNextFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                        int32 RequestSize,
                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackContext::GetNextFrames

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext
          AsyncContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_AsyncContext()
  } // end of property DkmStackContext::AsyncContext
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions
          FilterOptions()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_FilterOptions()
  } // end of property DkmStackContext::FilterOptions
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions
          FormatOptions()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_FormatOptions()
  } // end of property DkmStackContext::FormatOptions
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_InspectionSession()
  } // end of property DkmStackContext::InspectionSession
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation
          Operation()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_Operation()
  } // end of property DkmStackContext::Operation
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_Thread()
  } // end of property DkmStackContext::Thread
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ThreadContext()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_ThreadContext()
  } // end of property DkmStackContext::ThreadContext
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext::get_UniqueId()
  } // end of property DkmStackContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterHiddenFrames = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterNonuserCode = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions HideNonUserExceptionImplementationFrames = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions IncludeAsyncFrames = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions ShowTopNonUserBlock = int32(0x00000008)
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 36 35 63 38 62 33 37 2D 35 64 66 30   // ..$b65c8b37-5df0
                                                                                                  2D 61 39 63 61 2D 34 34 39 32 2D 65 64 61 33 38   // -a9ca-4492-eda38
                                                                                                  39 36 32 65 35 62 30 00 00 )                      // 962e5b0..
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions FrameNameFormat
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags
  .field public initonly uint32 Timeout
  .field public initonly uint32 Radix
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags,
                               valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions FrameNameFormat,
                               valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags,
                               uint32 Timeout,
                               uint32 Radix) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFrameFormatOptions::.ctor

} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags FullNames = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Names = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags TypeAliases = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Types = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags Values = int32(0x00000010)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ByteOffsets = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions DocumentPositionField = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions Lines = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions Module = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ReturnType = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions ReturnTypeField = int32(0x00000010)
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameNameFormatOptions

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetClrGenericParametersAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetClrGenericParametersAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string[] 
          get_ParameterTypeNames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetClrGenericParametersAsyncResult::get_ParameterTypeNames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] ParameterTypeNames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetClrGenericParametersAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult::get_ErrorCode()
  } // end of property DkmGetClrGenericParametersAsyncResult::ErrorCode
  .property instance string[] ParameterTypeNames()
  {
    .get instance string[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult::get_ParameterTypeNames()
  } // end of property DkmGetClrGenericParametersAsyncResult::ParameterTypeNames
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetClrGenericParametersAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetContinuationFramesFromTaskObjectAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] 
          get_ContinuationFrames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ContinuationFrames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetContinuationFramesFromTaskObjectAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[]
          ContinuationFrames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ContinuationFrames()
  } // end of property DkmGetContinuationFramesFromTaskObjectAsyncResult::ContinuationFrames
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult::get_ErrorCode()
  } // end of property DkmGetContinuationFramesFromTaskObjectAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 34 36 36 30 63 30 39 2D 65 61 66 31   // ..$b4660c09-eaf1
                                                                                                  2D 38 37 64 64 2D 62 62 64 66 2D 38 32 31 30 34   // -87dd-bbdf-82104
                                                                                                  37 38 32 38 31 61 36 00 00 )                      // 78281a6..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_Thread

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          get_Method() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_Method

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_ModuleInstance

  .method public hidebysig specialname instance int32 
          get_AwaitIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_AwaitIndex

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext 
          get_AsyncStackWalkContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_AsyncStackWalkContext

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::get_Data

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Method,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance,
                 int32 AwaitIndex,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncStackWalkContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnStackFrame::Create

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext
          AsyncStackWalkContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_AsyncStackWalkContext()
  } // end of property DkmManagedReturnStackFrame::AsyncStackWalkContext
  .property instance int32 AwaitIndex()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_AwaitIndex()
  } // end of property DkmManagedReturnStackFrame::AwaitIndex
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData
          Data()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Data()
  } // end of property DkmManagedReturnStackFrame::Data
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Flags()
  } // end of property DkmManagedReturnStackFrame::Flags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId
          Method()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Method()
  } // end of property DkmManagedReturnStackFrame::Method
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_ModuleInstance()
  } // end of property DkmManagedReturnStackFrame::ModuleInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame::get_Thread()
  } // end of property DkmManagedReturnStackFrame::Thread
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedTaskContinuationFramesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedTaskContinuationFramesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] 
          get_ContinuationFrames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedTaskContinuationFramesAsyncResult::get_ContinuationFrames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] ContinuationFrames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetManagedTaskContinuationFramesAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[]
          ContinuationFrames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult::get_ContinuationFrames()
  } // end of property DkmGetManagedTaskContinuationFramesAsyncResult::ContinuationFrames
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult::get_ErrorCode()
  } // end of property DkmGetManagedTaskContinuationFramesAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextFramesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextFramesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextFramesAsyncResult::get_Frames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] Frames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextFramesAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult::get_ErrorCode()
  } // end of property DkmGetNextFramesAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[]
          Frames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult::get_Frames()
  } // end of property DkmGetNextFramesAsyncResult::Frames
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame
       extends Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 65 33 32 66 65 31 31 2D 31 39 36 65   // ..$9e32fe11-196e
                                                                                                  2D 61 30 65 63 2D 62 38 33 63 2D 30 37 39 32 34   // -a0ec-b83c-07924
                                                                                                  32 37 65 39 31 61 32 00 00 )                      // 27e91a2..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions 
          get_Options() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::get_Options

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          get_CompilerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::get_CompilerId

  .method public hidebysig specialname instance string 
          get_FrameName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::get_FrameName

  .method public hidebysig specialname instance string 
          get_ReturnType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::get_ReturnType

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_SourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::get_SourcePosition

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame 
          Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Options,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId CompilerId,
                 string FrameName,
                 string ReturnType,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::Create

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress> 
          GetEffectiveAddresses(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackFrame::GetEffectiveAddresses

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId
          CompilerId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_CompilerId()
  } // end of property DkmStackFrame::CompilerId
  .property instance string FrameName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_FrameName()
  } // end of property DkmStackFrame::FrameName
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions
          Options()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_Options()
  } // end of property DkmStackFrame::Options
  .property instance string ReturnType()
  {
    .get instance string Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_ReturnType()
  } // end of property DkmStackFrame::ReturnType
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          SourcePosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame::get_SourcePosition()
  } // end of property DkmStackFrame::SourcePosition
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::get_Frames

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters 
          get_NextRegisters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::get_NextRegisters

  .method public hidebysig specialname instance bool 
          get_EndOfStack() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::get_EndOfStack

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters,
                               bool EndOfStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHeuristicWalkFramesAsyncResult::.ctor

  .property instance bool EndOfStack()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_EndOfStack()
  } // end of property DkmHeuristicWalkFramesAsyncResult::EndOfStack
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_ErrorCode()
  } // end of property DkmHeuristicWalkFramesAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          Frames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_Frames()
  } // end of property DkmHeuristicWalkFramesAsyncResult::Frames
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
          NextRegisters()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult::get_NextRegisters()
  } // end of property DkmHeuristicWalkFramesAsyncResult::NextRegisters
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 63 65 32 66 38 35 64 2D 35 62 34 30   // ..$4ce2f85d-5b40
                                                                                                  2D 34 61 34 63 2D 35 65 62 61 2D 37 39 65 39 32   // -4a4c-5eba-79e92
                                                                                                  32 38 65 34 38 62 31 00 00 )                      // 28e48b1..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::get_Thread

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ThreadContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::get_ThreadContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::get_UniqueId

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ThreadContext,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::Create

  .method public hidebysig instance void 
          Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                     uint32 StackRangeSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::Initialize

  .method public hidebysig instance void 
          UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                         uint32 StackRangeSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::UpdatePosition

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult 
          WalkNextFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkContext::WalkNextFrame

  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_RuntimeInstance()
  } // end of property DkmMonitorStackWalkContext::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_Thread()
  } // end of property DkmMonitorStackWalkContext::Thread
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ThreadContext()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_ThreadContext()
  } // end of property DkmMonitorStackWalkContext::ThreadContext
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext::get_UniqueId()
  } // end of property DkmMonitorStackWalkContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 34 64 64 37 66 31 33 2D 65 34 35 65   // ..$d4dd7f13-e45e
                                                                                                  2D 31 30 34 35 2D 38 32 31 61 2D 34 35 38 32 37   // -1045-821a-45827
                                                                                                  38 34 36 65 61 64 36 00 00 )                      // 846ead6..
  .field public initonly class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame FrameObject
  .field public initonly class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters
  .field public initonly uint64 NextStackPointer
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus Status
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus Status,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters NextRegisters,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame FrameObject,
                               uint64 NextStackPointer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMonitorStackWalkResult::.ctor

} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus EndOfStack = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus FrameFound = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus OutsideOfRuntime = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkStatus

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_Frames

  .method public hidebysig specialname instance bool 
          get_EndOfStack() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_EndOfStack

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash 
          get_ActualStackHash() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackHash

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext 
          get_ActualStackWalkContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackWalkContext

  .method public hidebysig specialname instance bool 
          get_IsCacheValid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_IsCacheValid

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames,
                               bool EndOfStack,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash ActualStackHash,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext ActualStackWalkContext,
                               bool IsCacheValid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash
          ActualStackHash()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackHash()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::ActualStackHash
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext
          ActualStackWalkContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ActualStackWalkContext()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::ActualStackWalkContext
  .property instance bool EndOfStack()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_EndOfStack()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::EndOfStack
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_ErrorCode()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          Frames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_Frames()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::Frames
  .property instance bool IsCacheValid()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::get_IsCacheValid()
  } // end of property DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult::IsCacheValid
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 65 38 34 30 65 32 62 2D 62 31 62 35   // ..$de840e2b-b1b5
                                                                                                  2D 66 39 38 31 2D 38 38 61 61 2D 62 39 64 65 35   // -f981-88aa-b9de5
                                                                                                  39 34 30 63 37 36 32 00 00 )                      // 940c762..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackHash::get_Thread

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange 
          get_StackMemoryRange() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackHash::get_StackMemoryRange

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue 
          get_RegisterHash() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackHash::get_RegisterHash

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue 
          get_MemoryHash() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackHash::get_MemoryHash

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange StackMemoryRange,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue RegisterHash,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue MemoryHash) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackHash::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue
          MemoryHash()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_MemoryHash()
  } // end of property DkmStackHash::MemoryHash
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue
          RegisterHash()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_RegisterHash()
  } // end of property DkmStackHash::RegisterHash
  .property instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange
          StackMemoryRange()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_StackMemoryRange()
  } // end of property DkmStackHash::StackMemoryRange
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash::get_Thread()
  } // end of property DkmStackHash::Thread
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 33 65 62 62 32 38 32 2D 37 33 34 62   // ..$33ebb282-734b
                                                                                                  2D 63 32 66 33 2D 36 36 63 64 2D 63 34 32 65 62   // -c2f3-66cd-c42eb
                                                                                                  38 61 33 64 34 39 30 00 00 )                      // 8a3d490..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::get_Thread

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ThreadContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::get_ThreadContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::get_Process

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ThreadContext,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext 
          FindSymbolStackWalkContext(valuetype [mscorlib]System.Guid SymbolProviderId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::FindSymbolStackWalkContext

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                              uint32 RequestSize,
                              uint64 EndStackPointer,
                              [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& NextRegisters,
                              [out] bool& EndOfStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::HeuristicWalkFrames

  .method public hidebysig instance void 
          HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                              class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                              uint32 RequestSize,
                              uint64 EndStackPointer,
                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmHeuristicWalkFramesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::HeuristicWalkFrames

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          RuntimeWalkNextFramesAndCheckCache(uint32 RequestSizeHintIfCacheIsValid,
                                             uint32 RequestSizeHintIfCacheIsInvalid,
                                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash CachedHash,
                                             [out] bool& EndOfStack,
                                             [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash& ActualStackHash,
                                             [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext& ActualStackWalkContext,
                                             [out] bool& IsCacheValid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::RuntimeWalkNextFramesAndCheckCache

  .method public hidebysig instance void 
          RuntimeWalkNextFramesAndCheckCache(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                             uint32 RequestSizeHintIfCacheIsValid,
                                             uint32 RequestSizeHintIfCacheIsInvalid,
                                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash CachedHash,
                                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAndCheckCacheAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::RuntimeWalkNextFramesAndCheckCache

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          RuntimeWalkNextFrames(uint32 RequestSizeHint,
                                [out] bool& EndOfStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::RuntimeWalkNextFrames

  .method public hidebysig instance void 
          RuntimeWalkNextFrames(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                uint32 RequestSizeHint,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkContext::RuntimeWalkNextFrames

  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_Process()
  } // end of property DkmStackWalkContext::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_Thread()
  } // end of property DkmStackWalkContext::Thread
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ThreadContext()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_ThreadContext()
  } // end of property DkmStackWalkContext::ThreadContext
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext::get_UniqueId()
  } // end of property DkmStackWalkContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAsyncResult::get_Frames

  .method public hidebysig specialname instance bool 
          get_EndOfStack() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAsyncResult::get_EndOfStack

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Frames,
                               bool EndOfStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRuntimeWalkNextFramesAsyncResult::.ctor

  .property instance bool EndOfStack()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_EndOfStack()
  } // end of property DkmRuntimeWalkNextFramesAsyncResult::EndOfStack
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_ErrorCode()
  } // end of property DkmRuntimeWalkNextFramesAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[]
          Frames()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult::get_Frames()
  } // end of property DkmRuntimeWalkNextFramesAsyncResult::Frames
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmRuntimeWalkNextFramesAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Async = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation StackTrace = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Standard = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation TaskContinuations = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation TaskCreation = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 34 33 65 32 34 66 63 2D 38 64 63 64   // ..$143e24fc-8dcd
                                                                                                  2D 38 32 36 63 2D 31 30 30 38 2D 61 33 35 37 38   // -826c-1008-a3578
                                                                                                  66 36 31 37 61 37 39 00 00 )                      // f617a79..
  .field public initonly uint64 EffectiveAddress
  .field public initonly uint32 OperandSize
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags Flags
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 EffectiveAddress,
                               uint32 OperandSize,
                               valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEffectiveAddress::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 38 30 34 38 34 33 61 2D 33 37 37 34   // ..$9804843a-3774
                                                                                                  2D 38 61 31 33 2D 30 38 37 62 2D 64 63 36 38 38   // -8a13-087b-dc688
                                                                                                  61 34 39 32 61 66 39 00 00 )                      // a492af9..
  .field public initonly int32 Value0
  .field public initonly int32 Value1
  .field public initonly int32 Value2
  .field public initonly int32 Value3
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                              valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                               valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 Value0,
                               int32 Value1,
                               int32 Value2,
                               int32 Value3) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmMD5HashValue::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext
       extends Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 39 65 64 34 38 65 2D 35 65 65 65   // ..$b79ed48e-5eee
                                                                                                  2D 38 39 63 38 2D 64 36 37 37 2D 38 38 33 33 34   // -89c8-d677-88334
                                                                                                  31 38 39 34 36 31 39 00 00 )                      // 1894619..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> 
          get_Frames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackTraceContext::get_Frames

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmCallStackFilterOptions FilterOptions,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions FormatOptions,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ThreadContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext AsyncContext,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkOperation Operation,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Frames,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackTraceContext::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress>
          Frames()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext::get_Frames()
  } // end of property DkmStackTraceContext::Frames
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackTraceContext

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 61 36 39 30 35 63 61 2D 64 66 64 65   // ..$ca6905ca-dfde
                                                                                                  2D 62 61 63 63 2D 33 31 65 36 2D 66 65 66 30 61   // -bacc-31e6-fef0a
                                                                                                  64 37 66 65 65 37 65 00 00 )                      // d7fee7e..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext 
          get_StackWalkContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::get_StackWalkContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SymbolProviderId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::get_SymbolProviderId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::get_Thread

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ThreadContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::get_ThreadContext

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext 
          Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext StackWalkContext,
                 valuetype [mscorlib]System.Guid SymbolProviderId,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::Create

  .method public hidebysig instance void 
          Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                     uint32 StackRangeSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::Initialize

  .method public hidebysig instance void 
          UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters Registers,
                         uint32 StackRangeSize,
                         class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::UpdatePosition

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          WalkNextFrame([out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& NextRegisters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolStackWalkContext::WalkNextFrame

  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext
          StackWalkContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_StackWalkContext()
  } // end of property DkmSymbolStackWalkContext::StackWalkContext
  .property instance valuetype [mscorlib]System.Guid
          SymbolProviderId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_SymbolProviderId()
  } // end of property DkmSymbolStackWalkContext::SymbolProviderId
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_Thread()
  } // end of property DkmSymbolStackWalkContext::Thread
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ThreadContext()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext::get_ThreadContext()
  } // end of property DkmSymbolStackWalkContext::ThreadContext
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags AsyncCallAnnotatedFrame = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags AsyncContinuationAnnotatedFrame = int32(0x00002000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags BinaryNotLoadedAnnotation = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags ExceptionUnwindTarget = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags FakeFrame = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags FuncEvalFrame = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags Hidden = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags InlineOptimized = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags MaxFramesExceeded = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags NonUserExceptionImplementation = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags NonuserCode = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags ReturnStackFrame = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags SymbolsNotLoadedAnnotation = int32(0x00000400)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags TaskCreationStackFrame = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags TopFrame = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags UserStatusNotDetermined = int32(0x00000200)
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 33 62 33 38 31 33 31 2D 34 62 63 62   // ..$b3b38131-4bcb
                                                                                                  2D 34 64 62 61 2D 61 34 30 39 2D 34 62 64 62 61   // -4dba-a409-4bdba
                                                                                                  31 39 65 37 33 32 33 00 00 )                      // 19e7323..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameAnnotation::get_Id

  .method public hidebysig specialname instance uint64 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameAnnotation::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation 
          Create(valuetype [mscorlib]System.Guid Id,
                 uint64 Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameAnnotation::Create

  .property instance valuetype [mscorlib]System.Guid
          Id()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation::get_Id()
  } // end of property DkmStackWalkFrameAnnotation::Id
  .property instance uint64 Value()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation::get_Value()
  } // end of property DkmStackWalkFrameAnnotation::Value
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameAnnotation

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 35 65 61 31 34 37 65 2D 62 34 38 62   // ..$15ea147e-b48b
                                                                                                  2D 32 64 35 63 2D 62 35 32 61 2D 61 32 66 65 65   // -2d5c-b52a-a2fee
                                                                                                  38 37 37 31 33 62 32 00 00 )                      // 87713b2..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameData::get_InspectionSession

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameData::get_UniqueId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStackWalkFrameData::Create

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData::get_InspectionSession()
  } // end of property DkmStackWalkFrameData::InspectionSession
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData::get_UniqueId()
  } // end of property DkmStackWalkFrameData::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrameData

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags CancelIntercept = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags Intercept = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters
       extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 33 63 66 62 33 31 37 2D 61 31 31 65   // ..$23cfb317-a11e
                                                                                                  2D 34 32 31 33 2D 62 31 39 32 2D 32 64 61 36 61   // -4213-b192-2da6a
                                                                                                  37 38 66 35 61 39 61 00 00 )                      // 78f5a9a..
  .method public hidebysig specialname instance uint64 
          get_Rip() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmX64FrameRegisters::get_Rip

  .method public hidebysig specialname instance uint64 
          get_Rsp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmX64FrameRegisters::get_Rsp

  .property instance uint64 Rip()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters::get_Rip()
  } // end of property DkmX64FrameRegisters::Rip
  .property instance uint64 Rsp()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters::get_Rsp()
  } // end of property DkmX64FrameRegisters::Rsp
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmX64FrameRegisters

.class public auto ansi Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters
       extends Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 65 37 36 38 63 37 36 2D 64 31 37 39   // ..$6e768c76-d179
                                                                                                  2D 65 31 33 62 2D 64 37 34 35 2D 65 34 62 62 32   // -e13b-d745-e4bb2
                                                                                                  62 36 38 37 65 31 36 00 00 )                      // b687e16..
  .method public hidebysig specialname instance uint32 
          get_Eip() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmX86FrameRegisters::get_Eip

  .method public hidebysig specialname instance uint32 
          get_Esp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmX86FrameRegisters::get_Esp

  .method public hidebysig specialname instance uint32 
          get_VFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmX86FrameRegisters::get_VFrame

  .property instance uint32 Eip()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_Eip()
  } // end of property DkmX86FrameRegisters::Eip
  .property instance uint32 Esp()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_Esp()
  } // end of property DkmX86FrameRegisters::Esp
  .property instance uint32 VFrame()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters::get_VFrame()
  } // end of property DkmX86FrameRegisters::VFrame
} // end of class Microsoft.VisualStudio.Debugger.CallStack.DkmX86FrameRegisters

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 33 37 33 36 30 64 62 2D 34 34 61 66   // ..$337360db-44af
                                                                                                  2D 65 34 35 39 2D 31 33 32 33 2D 66 31 36 64 64   // -e459-1323-f16dd
                                                                                                  61 63 66 38 62 37 39 00 00 )                      // acf8b79..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::get_UniqueId

  .method public hidebysig specialname instance int32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::get_Id

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::get_Process

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::get_Name

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain 
          Create(int32 Id,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 string Name,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          FindClrModuleInstance(valuetype [mscorlib]System.Guid Mvid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::FindClrModuleInstance

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance[] 
          GetClrModuleInstances() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::GetClrModuleInstances

  .method public hidebysig instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain 
          GetCorObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::GetCorObject

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          GetManagedRuntimeModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::GetManagedRuntimeModule

  .method public hidebysig instance native int 
          GetMetaDataBytesPtr(string AssemblyName,
                              [out] uint32& Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::GetMetaDataBytesPtr

  .method public hidebysig instance uint8[] 
          GetMetaDataBytes(string AssemblyName,
                           [out] valuetype [mscorlib]System.Guid& Mvid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::GetMetaDataBytes

  .method public hidebysig instance valuetype [mscorlib]System.Guid 
          ResolveMvidByAssemblyName(string AssemblyName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAppDomain::ResolveMvidByAssemblyName

  .property instance int32 Id()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Id()
  } // end of property DkmClrAppDomain::Id
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Name()
  } // end of property DkmClrAppDomain::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_Process()
  } // end of property DkmClrAppDomain::Process
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_RuntimeInstance()
  } // end of property DkmClrAppDomain::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain::get_UniqueId()
  } // end of property DkmClrAppDomain::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 61 32 33 34 37 37 30 2D 63 38 36 66   // ..$ea234770-c86f
                                                                                                  2D 31 37 30 36 2D 38 38 34 32 2D 63 36 66 62 35   // -1706-8842-c6fb5
                                                                                                  33 31 31 62 61 37 39 00 00 )                      // 311ba79..
  .method public hidebysig specialname instance string 
          get_CORSystemDirectory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::get_CORSystemDirectory

  .method public hidebysig specialname instance string 
          get_RuntimeVersion() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::get_RuntimeVersion

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 string CORSystemDirectory,
                 string RuntimeVersion,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime,
                 string CORSystemDirectory,
                 string RuntimeVersion,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain 
          FindAppDomain(int32 Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::FindAppDomain

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain[] 
          GetAppDomains() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetAppDomains

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          FindClrModuleInstance(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule CorModule) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::FindClrModuleInstance

  .method public hidebysig instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread 
          GetCorThread(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetCorThread

  .method public hidebysig instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess 
          GetCorProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetCorProcess

  .method public hidebysig instance void 
          PrepareForFuncEvalQuickAbort(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                                       [out] bool& SkipLoad,
                                       [out] uint64& MemoryAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::PrepareForFuncEvalQuickAbort

  .method public hidebysig instance void 
          OnFuncEvalQuickAbortDllLoaded(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                                        bool Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::OnFuncEvalQuickAbortDllLoaded

  .method public hidebysig instance int32 
          ContinueForFuncEval(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                              class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval CorEval,
                              valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                              uint32 Timeout,
                              string EvaluationString) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::ContinueForFuncEval

  .method public hidebysig instance int32 
          CanDoFuncEval(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::CanDoFuncEval

  .method public hidebysig instance string 
          GetObjectTypeByAlias(string Alias) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetObjectTypeByAlias

  .method public hidebysig instance native int 
          GetIntrinsicAssemblyMetaDataBytesPtr([out] uint32& Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetIntrinsicAssemblyMetaDataBytesPtr

  .method public hidebysig instance object 
          GetCorFrame(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                      uint64 FrameBase,
                      valuetype [mscorlib]System.Guid InterfaceID) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrRuntimeInstance::GetCorFrame

  .property instance string CORSystemDirectory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance::get_CORSystemDirectory()
  } // end of property DkmClrRuntimeInstance::CORSystemDirectory
  .property instance string RuntimeVersion()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance::get_RuntimeVersion()
  } // end of property DkmClrRuntimeInstance::RuntimeVersion
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
       extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 39 64 61 34 66 66 61 2D 36 30 36 33   // ..$29da4ffa-6063
                                                                                                  2D 36 32 33 32 2D 34 36 64 64 2D 36 34 64 31 34   // -6232-46dd-64d14
                                                                                                  63 66 35 36 64 64 66 00 00 )                      // cf56ddf..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_Mvid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::get_Mvid

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags 
          get_ClrFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::get_ClrFlags

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain 
          get_AppDomain() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::get_AppDomain

  .method public hidebysig specialname instance uint32 
          get_ILImageSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::get_ILImageSize

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          Create(string Name,
                 string FullName,
                 uint64 TimeDateStamp,
                 class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout,
                 uint64 BaseAddress,
                 uint32 LoadOrder,
                 uint32 Size,
                 string LoadContext,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid Mvid,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags ClrFlags,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain,
                 bool IsDisabled,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          Create(string Name,
                 string FullName,
                 uint64 TimeDateStamp,
                 class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout,
                 uint64 BaseAddress,
                 uint32 LoadOrder,
                 uint32 Size,
                 string LoadContext,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid Mvid,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags ClrFlags,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain AppDomain,
                 uint32 ILImageSize,
                 bool IsDisabled,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::Create

  .method public hidebysig instance object 
          GetMetaDataImport() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMetaDataImport

  .method public hidebysig instance uint8[] 
          GetMetaDataBytes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMetaDataBytes

  .method public hidebysig instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule 
          GetCorObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetCorObject

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          ResolveTypeName(string TypeName,
                          class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericParameters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::ResolveTypeName

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue 
          InterpretManagedMethod(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Method,
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericTypeParameters,
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericMethodParameters,
                                 class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue ThisParameter,
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue> Parameters,
                                 int32 MaxInstructionCount,
                                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions Options,
                                 [out] string& ExceptionType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::InterpretManagedMethod

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus 
          GetMetadataStatus() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMetadataStatus

  .method public hidebysig instance native int 
          GetMetaDataBytesPtr([out] uint32& Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMetaDataBytesPtr

  .method public hidebysig instance int32 
          GetLocalSignatureToken(int32 MethodToken) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetLocalSignatureToken

  .method public hidebysig instance void 
          GetMethodTokens(string ClassName,
                          string MethodName,
                          [out] int32[]& Tokens) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMethodTokens

  .method public hidebysig instance void 
          GetMethodTokens(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                          string ClassName,
                          string MethodName,
                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrModuleInstance::GetMethodTokens

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain
          AppDomain()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_AppDomain()
  } // end of property DkmClrModuleInstance::AppDomain
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags
          ClrFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_ClrFlags()
  } // end of property DkmClrModuleInstance::ClrFlags
  .property instance uint32 ILImageSize()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_ILImageSize()
  } // end of property DkmClrModuleInstance::ILImageSize
  .property instance valuetype [mscorlib]System.Guid
          Mvid()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_Mvid()
  } // end of property DkmClrModuleInstance::Mvid
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance::get_RuntimeInstance()
  } // end of property DkmClrModuleInstance::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation AtYield = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation BeforeYield = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation FirstStatement = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation LastStatement = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation NonAwaitStatement = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 32 32 39 34 32 65 64 2D 32 65 39 35   // ..$f22942ed-2e95
                                                                                                  2D 64 62 61 36 2D 30 34 66 32 2D 64 34 32 66 33   // -dba6-04f2-d42f3
                                                                                                  34 33 39 61 66 33 36 00 00 )                      // 439af36..
  .field public initonly uint32 YieldOffset
  .field public initonly uint32 ResumeOffset
  .field public initonly uint32 ResumeMethodToken
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 YieldOffset,
                               uint32 ResumeOffset,
                               uint32 ResumeMethodToken) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrAwaitExpressionInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 35 35 30 64 39 31 34 2D 32 36 66 65   // ..$0550d914-26fe
                                                                                                  2D 62 62 65 37 2D 32 64 31 39 2D 61 34 33 32 62   // -bbe7-2d19-a432b
                                                                                                  62 66 65 61 36 38 35 00 00 )                      // bfea685..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_Thread

  .method public hidebysig specialname instance int64 
          get_FrameStart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_FrameStart

  .method public hidebysig specialname instance int64 
          get_FrameEnd() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_FrameEnd

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_InstructionAddress

  .method public hidebysig specialname instance uint32 
          get_CatchHandlerILOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_CatchHandlerILOffset

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_Name

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::get_Process

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 int64 FrameStart,
                 int64 FrameEnd,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 uint32 CatchHandlerILOffset,
                 string Name) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::Create

  .method public hidebysig instance void 
          OnClrDebugMonitorExceptionCaught() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrCaughtExceptionInformation::OnClrDebugMonitorExceptionCaught

  .property instance uint32 CatchHandlerILOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_CatchHandlerILOffset()
  } // end of property DkmClrCaughtExceptionInformation::CatchHandlerILOffset
  .property instance int64 FrameEnd()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_FrameEnd()
  } // end of property DkmClrCaughtExceptionInformation::FrameEnd
  .property instance int64 FrameStart()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_FrameStart()
  } // end of property DkmClrCaughtExceptionInformation::FrameStart
  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_InstructionAddress()
  } // end of property DkmClrCaughtExceptionInformation::InstructionAddress
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Name()
  } // end of property DkmClrCaughtExceptionInformation::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Process()
  } // end of property DkmClrCaughtExceptionInformation::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation::get_Thread()
  } // end of property DkmClrCaughtExceptionInformation::Thread
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 32 64 39 63 63 66 30 2D 62 66 37 66   // ..$42d9ccf0-bf7f
                                                                                                  2D 31 30 36 34 2D 33 37 37 61 2D 34 61 61 38 30   // -1064-377a-4aa80
                                                                                                  61 63 38 35 38 31 32 00 00 )                      // ac85812..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrExceptionInformation::get_Name

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrExceptionInformation::get_InstructionAddress

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 string Name,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrExceptionInformation::Create

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation::get_InstructionAddress()
  } // end of property DkmClrExceptionInformation::InstructionAddress
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation::get_Name()
  } // end of property DkmClrExceptionInformation::Name
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrExceptionInformation

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 32 65 30 64 33 36 64 2D 65 37 65 63   // ..$02e0d36d-e7ec
                                                                                                  2D 65 62 62 38 2D 31 30 35 65 2D 31 62 36 61 63   // -ebb8-105e-1b6ac
                                                                                                  37 33 37 30 31 66 66 00 00 )                      // 73701ff..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag ClrException = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag CppException = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag CustomException = int32(0x00000004)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag GPUMemoryAccessException = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag Win32Exception = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_RuntimeInstance

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_ExceptionCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_ExceptionCategory

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_InstructionAddress

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_Name

  .method public hidebysig specialname instance uint32 
          get_Code() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_Code

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage 
          get_ProcessingStage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_ProcessingStage

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation 
          get_ImplementationException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_ImplementationException

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::get_Process

  .method public hidebysig instance void 
          OnDebugMonitorException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::OnDebugMonitorException

  .method public hidebysig instance void 
          OnContinued() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::OnContinued

  .method public hidebysig instance bool 
          CanModifyProcessing() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::CanModifyProcessing

  .method public hidebysig instance void 
          SquashProcessing() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::SquashProcessing

  .method public hidebysig instance string 
          GetDescription() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::GetDescription

  .method public hidebysig instance string 
          GetAdditionalInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::GetAdditionalInformation

  .method public hidebysig instance void 
          GetWinRTErrorInfo([out] string& RestrictedDescription,
                            [out] string& RestrictedErrorReference,
                            [out] string& RestrictedCapabilitySid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::GetWinRTErrorInfo

  .method public hidebysig instance void 
          OnOutOfBandException() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::OnOutOfBandException

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> 
          GetExceptionStackTrace() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionInformation::GetExceptionStackTrace

  .property instance uint32 Code()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Code()
  } // end of property DkmExceptionInformation::Code
  .property instance valuetype [mscorlib]System.Guid
          ExceptionCategory()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ExceptionCategory()
  } // end of property DkmExceptionInformation::ExceptionCategory
  .property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
          ImplementationException()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ImplementationException()
  } // end of property DkmExceptionInformation::ImplementationException
  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_InstructionAddress()
  } // end of property DkmExceptionInformation::InstructionAddress
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Name()
  } // end of property DkmExceptionInformation::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Process()
  } // end of property DkmExceptionInformation::Process
  .property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage
          ProcessingStage()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_ProcessingStage()
  } // end of property DkmExceptionInformation::ProcessingStage
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_RuntimeInstance()
  } // end of property DkmExceptionInformation::RuntimeInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation/Tag Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_TagValue()
  } // end of property DkmExceptionInformation::TagValue
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation::get_Thread()
  } // end of property DkmExceptionInformation::Thread
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress
       extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 66 37 61 39 37 37 33 2D 30 33 61 31   // ..$ef7a9773-03a1
                                                                                                  2D 30 61 61 62 2D 35 35 62 62 2D 65 65 36 62 38   // -0aab-55bb-ee6b8
                                                                                                  37 30 65 36 32 34 36 00 00 )                      // 70e6246..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::get_ModuleInstance

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          get_MethodId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::get_MethodId

  .method public hidebysig specialname instance uint32 
          get_NativeOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::get_NativeOffset

  .method public hidebysig specialname instance uint32 
          get_ILOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::get_ILOffset

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                 uint32 NativeOffset,
                 uint32 ILOffset,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::Create

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags 
          GetNonUserCodeMetadataFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::GetNonUserCodeMetadataFlags

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry[] 
          GetNativeCodeMap(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::GetNativeCodeMap

  .method public hidebysig instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction 
          GetCorFunction() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::GetCorFunction

  .method public hidebysig instance bool 
          IsUserCodeWithoutCheckingLineInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionAddress::IsUserCodeWithoutCheckingLineInfo

  .property instance uint32 ILOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_ILOffset()
  } // end of property DkmClrInstructionAddress::ILOffset
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId
          MethodId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_MethodId()
  } // end of property DkmClrInstructionAddress::MethodId
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_ModuleInstance()
  } // end of property DkmClrInstructionAddress::ModuleInstance
  .property instance uint32 NativeOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_NativeOffset()
  } // end of property DkmClrInstructionAddress::NativeOffset
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress::get_RuntimeInstance()
  } // end of property DkmClrInstructionAddress::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage AppDomainTransition = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ManagedUnmanagedTransition = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Thrown = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage Unhandled = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserCodeSearch = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserUnhandled = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage UserVisible = int32(0x00000040)
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus ManagedOnlyBinary = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus MixedModeBinary = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus NGenBinary = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus NativeBinary = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrHeaderStatus

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 32 33 64 65 33 36 63 2D 30 62 64 38   // ..$023de36c-0bd8
                                                                                                  2D 61 38 61 63 2D 62 36 64 34 2D 62 31 38 37 30   // -a8ac-b6d4-b1870
                                                                                                  61 61 65 37 34 37 31 00 00 )                      // aae7471..
  .field public initonly int32 Token
  .field public initonly uint32 Version
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                              valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                               valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 Token,
                               uint32 Version) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags HiddenAttribute = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags NonUserCodeAttribute = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags StepThroughAttribute = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 66 32 38 66 31 61 64 2D 63 32 66 35   // ..$ff28f1ad-c2f5
                                                                                                  2D 31 36 38 34 2D 66 33 35 38 2D 65 65 66 36 37   // -1684-f358-eef67
                                                                                                  32 35 37 63 30 37 34 00 00 )                      // 257c074..
  .field public initonly uint64 NativeAddress
  .field public initonly uint32 NativeSize
  .field public initonly uint32 NativeOffset
  .field public initonly uint32 ILOffset
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 NativeAddress,
                               uint32 NativeSize,
                               uint32 NativeOffset,
                               uint32 ILOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNativeCodeMapEntry::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 65 37 33 38 38 61 65 2D 65 33 65 32   // ..$8e7388ae-e3e2
                                                                                                  2D 31 32 32 63 2D 35 35 36 30 2D 30 39 66 37 37   // -122c-5560-09f77
                                                                                                  64 66 61 65 64 39 64 00 00 )                      // dfaed9d..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          get_MethodId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::get_MethodId

  .method public hidebysig specialname instance uint32 
          get_ILOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::get_ILOffset

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                 uint32 ILOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::Create

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation 
          GetAsyncMethodLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAsyncMethodLocation

  .method public hidebysig instance void 
          GetAsyncMethodLocation(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAsyncMethodLocation

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] 
          GetAllAwaitExpressionInfoForStatement() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAllAwaitExpressionInfoForStatement

  .method public hidebysig instance void 
          GetAllAwaitExpressionInfoForStatement(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAllAwaitExpressionInfoForStatement

  .method public hidebysig instance bool 
          GetAsyncMethodCatchHandlerILOffset([out] uint32& CatchHandlerILOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAsyncMethodCatchHandlerILOffset

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo 
          GetNextAwaitExpressionInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetNextAwaitExpressionInfo

  .method public hidebysig instance void 
          GetNextAwaitExpressionInfo(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetNextAwaitExpressionInfo

  .method public hidebysig instance int32 
          GetAsyncKickoffMethod() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAsyncKickoffMethod

  .method public hidebysig instance void 
          GetAsyncKickoffMethod(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetAsyncKickoffMethod

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodLocalSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetMethodLocalSymbols

  .method public hidebysig instance void 
          GetMethodLocalSymbols(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetMethodLocalSymbols

  .method public hidebysig instance uint8[] 
          GetMethodSymbolStoreAttribute(string AttributeName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetMethodSymbolStoreAttribute

  .method public hidebysig instance void 
          GetMethodSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                        string AttributeName,
                                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrInstructionSymbol::GetMethodSymbolStoreAttribute

  .property instance uint32 ILOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol::get_ILOffset()
  } // end of property DkmClrInstructionSymbol::ILOffset
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId
          MethodId()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol::get_MethodId()
  } // end of property DkmClrInstructionSymbol::MethodId
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncMethodLocationAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncMethodLocationAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation 
          get_AsyncLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncMethodLocationAsyncResult::get_AsyncLocation

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation AsyncLocation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncMethodLocationAsyncResult::.ctor

  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation
          AsyncLocation()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult::get_AsyncLocation()
  } // end of property DkmGetAsyncMethodLocationAsyncResult::AsyncLocation
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult::get_ErrorCode()
  } // end of property DkmGetAsyncMethodLocationAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncMethodLocationAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAllAwaitExpressionInfoForStatementAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] 
          get_AsyncExpressionInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_AsyncExpressionInfo

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] AsyncExpressionInfo) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAllAwaitExpressionInfoForStatementAsyncResult::.ctor

  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[]
          AsyncExpressionInfo()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_AsyncExpressionInfo()
  } // end of property DkmGetAllAwaitExpressionInfoForStatementAsyncResult::AsyncExpressionInfo
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult::get_ErrorCode()
  } // end of property DkmGetAllAwaitExpressionInfoForStatementAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetAllAwaitExpressionInfoForStatementAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextAwaitExpressionInfoAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextAwaitExpressionInfoAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo 
          get_AwaitExpressionInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextAwaitExpressionInfoAsyncResult::get_AwaitExpressionInfo

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo AwaitExpressionInfo) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetNextAwaitExpressionInfoAsyncResult::.ctor

  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo
          AwaitExpressionInfo()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult::get_AwaitExpressionInfo()
  } // end of property DkmGetNextAwaitExpressionInfoAsyncResult::AwaitExpressionInfo
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult::get_ErrorCode()
  } // end of property DkmGetNextAwaitExpressionInfoAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetNextAwaitExpressionInfoAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncKickoffMethodAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncKickoffMethodAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_KickoffMethodToken() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncKickoffMethodAsyncResult::get_KickoffMethodToken

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 KickoffMethodToken) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetAsyncKickoffMethodAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult::get_ErrorCode()
  } // end of property DkmGetAsyncKickoffMethodAsyncResult::ErrorCode
  .property instance int32 KickoffMethodToken()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult::get_KickoffMethodToken()
  } // end of property DkmGetAsyncKickoffMethodAsyncResult::KickoffMethodToken
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetAsyncKickoffMethodAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 37 65 64 36 64 30 30 2D 65 37 65 61   // ..$97ed6d00-e7ea
                                                                                                  2D 35 62 64 34 2D 61 36 32 37 2D 64 65 31 32 30   // -5bd4-a627-de120
                                                                                                  65 32 65 39 38 65 64 00 00 )                      // e2e98ed..
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILRange ILRange
  .field public initonly class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant> LocalConstants
  .field public initonly class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable> LocalVariables
  .field public initonly class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Namespaces
  .field public initonly int32 ParentScope
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILRange ILRange,
                               int32 ParentScope,
                               class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable> LocalVariables,
                               class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant> LocalConstants,
                               class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Namespaces) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrMethodScopeData::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodLocalSymbolsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodLocalSymbolsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          get_Scopes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodLocalSymbolsAsyncResult::get_Scopes

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodLocalSymbolsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult::get_ErrorCode()
  } // end of property DkmGetMethodLocalSymbolsAsyncResult::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[]
          Scopes()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult::get_Scopes()
  } // end of property DkmGetMethodLocalSymbolsAsyncResult::Scopes
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodLocalSymbolsAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreAttributeAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreAttributeAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance uint8[] 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreAttributeAsyncResult::get_Data

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreAttributeAsyncResult::.ctor

  .property instance uint8[] Data()
  {
    .get instance uint8[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult::get_Data()
  } // end of property DkmGetMethodSymbolStoreAttributeAsyncResult::Data
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult::get_ErrorCode()
  } // end of property DkmGetMethodSymbolStoreAttributeAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodSymbolStoreAttributeAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 65 37 36 33 62 66 34 2D 35 64 35 34   // ..$be763bf4-5d54
                                                                                                  2D 65 63 65 38 2D 38 64 63 62 2D 36 66 35 65 64   // -ece8-8dcb-6f5ed
                                                                                                  34 61 65 33 35 30 36 00 00 )                      // 4ae3506..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::get_Module

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::get_Name

  .method public hidebysig specialname instance object 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::get_Value

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Name,
                 object Value,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::Create

  .method public hidebysig instance uint8[] 
          GetSignature() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalConstant::GetSignature

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_AdditionalData()
  } // end of property DkmClrLocalConstant::AdditionalData
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Module()
  } // end of property DkmClrLocalConstant::Module
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Name()
  } // end of property DkmClrLocalConstant::Name
  .property instance object Value()
  {
    .get instance object Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant::get_Value()
  } // end of property DkmClrLocalConstant::Value
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 65 61 31 65 33 31 63 2D 32 39 35 64   // ..$8ea1e31c-295d
                                                                                                  2D 33 64 36 33 2D 66 37 39 30 2D 38 66 30 65 63   // -3d63-f790-8f0ec
                                                                                                  61 39 31 35 38 63 35 00 00 )                      // a9158c5..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::get_Module

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::get_Name

  .method public hidebysig specialname instance uint32 
          get_Attributes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::get_Attributes

  .method public hidebysig specialname instance int32 
          get_Slot() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::get_Slot

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Name,
                 uint32 Attributes,
                 int32 Slot,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::Create

  .method public hidebysig instance uint8[] 
          GetSignature() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariable::GetSignature

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_AdditionalData()
  } // end of property DkmClrLocalVariable::AdditionalData
  .property instance uint32 Attributes()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Attributes()
  } // end of property DkmClrLocalVariable::Attributes
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Module()
  } // end of property DkmClrLocalVariable::Module
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Name()
  } // end of property DkmClrLocalVariable::Name
  .property instance int32 Slot()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable::get_Slot()
  } // end of property DkmClrLocalVariable::Slot
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmILRange
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 64 63 38 64 39 39 39 2D 62 34 39 36   // ..$0dc8d999-b496
                                                                                                  2D 63 64 39 35 2D 30 34 36 39 2D 30 36 64 31 31   // -cd95-0469-06d11
                                                                                                  64 34 64 38 62 32 33 00 00 )                      // d4d8b23..
  .field public initonly uint32 StartOffset
  .field public initonly uint32 EndOffset
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 StartOffset,
                               uint32 EndOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRange::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmILRange

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags Dynamic = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags FullyTrusted = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags RuntimeModule = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmClrType
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 33 37 64 32 31 64 65 2D 35 66 34 63   // ..$837d21de-5f4c
                                                                                                  2D 65 30 37 63 2D 30 66 31 64 2D 32 32 37 66 36   // -e07c-0f1d-227f6
                                                                                                  34 32 32 64 36 37 61 00 00 )                      // 422d67a..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain,
                 class [Microsoft.VisualStudio.Debugger.Metadata]Microsoft.VisualStudio.Debugger.Metadata.Type 'type') cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::Create

  .method public hidebysig instance class [Microsoft.VisualStudio.Debugger.Metadata]Microsoft.VisualStudio.Debugger.Metadata.Type 
          GetLmrType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::GetLmrType

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_ModuleInstance

  .method public hidebysig specialname instance int32 
          get_Token() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_Token

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> 
          get_GenericArguments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_GenericArguments

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          get_ElementType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_ElementType

  .method public hidebysig specialname instance uint32 
          get_CorElementType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_CorElementType

  .method public hidebysig specialname instance int32 
          get_ArrayRank() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_ArrayRank

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SyntheticMvid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_SyntheticMvid

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain 
          get_AppDomain() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_AppDomain

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::get_RuntimeInstance

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance,
                 int32 Token,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericArguments) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance,
                 int32 Token,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> GenericArguments,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ElementType,
                 uint32 CorElementType,
                 int32 ArrayRank,
                 valuetype [mscorlib]System.Guid SyntheticMvid) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::Create

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          ResolveMethodName(string MethodName,
                            class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> ParameterTypes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::ResolveMethodName

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute> 
          GetEvalAttributes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrType::GetEvalAttributes

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain
          AppDomain()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_AppDomain()
  } // end of property DkmClrType::AppDomain
  .property instance int32 ArrayRank()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ArrayRank()
  } // end of property DkmClrType::ArrayRank
  .property instance uint32 CorElementType()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_CorElementType()
  } // end of property DkmClrType::CorElementType
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType
          ElementType()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ElementType()
  } // end of property DkmClrType::ElementType
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType>
          GenericArguments()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_GenericArguments()
  } // end of property DkmClrType::GenericArguments
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_ModuleInstance()
  } // end of property DkmClrType::ModuleInstance
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_RuntimeInstance()
  } // end of property DkmClrType::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          SyntheticMvid()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_SyntheticMvid()
  } // end of property DkmClrType::SyntheticMvid
  .property instance int32 Token()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmClrType::get_Token()
  } // end of property DkmClrType::Token
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmClrType

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 38 35 31 62 32 64 36 2D 38 39 66 32   // ..$4851b2d6-89f2
                                                                                                  2D 34 36 66 35 2D 31 61 35 36 2D 66 32 35 37 31   // -46f5-1a56-f2571
                                                                                                  33 35 63 33 62 34 62 00 00 )                      // 35c3b4b..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag PrimitiveValue = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag ReferenceValue = int32(0x00000001)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterValue::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterValue::get_RuntimeInstance

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue::get_RuntimeInstance()
  } // end of property DkmILInterpreterValue::RuntimeInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue/Tag Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue::get_TagValue()
  } // end of property DkmILInterpreterValue::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions ResolveVirtual = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus NotDetermined = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus NotPresent = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus Present = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodTokensAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodTokensAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32[] 
          get_Tokens() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodTokensAsyncResult::get_Tokens

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32[] Tokens) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodTokensAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult::get_ErrorCode()
  } // end of property DkmGetMethodTokensAsyncResult::ErrorCode
  .property instance int32[] Tokens()
  {
    .get instance int32[] Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult::get_Tokens()
  } // end of property DkmGetMethodTokensAsyncResult::Tokens
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmGetMethodTokensAsyncResult

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 34 31 32 31 62 33 61 2D 63 39 61 32   // ..$24121b3a-c9a2
                                                                                                  2D 33 39 37 37 2D 30 39 62 64 2D 31 61 32 63 64   // -3977-09bd-1a2cd
                                                                                                  63 35 35 30 35 33 37 00 00 )                      // c550537..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerBrowsableAttribute = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerDisplayAttribute = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerTypeProxyAttribute = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag DebuggerVisualizerAttribute = int32(0x00000003)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrEvalAttribute::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          get_TargetType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrEvalAttribute::get_TargetType

  .method public hidebysig specialname instance string 
          get_TargetMember() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrEvalAttribute::get_TargetMember

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrEvalAttribute::get_ModuleInstance

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_ModuleInstance()
  } // end of property DkmClrEvalAttribute::ModuleInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute/Tag Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TagValue()
  } // end of property DkmClrEvalAttribute::TagValue
  .property instance string TargetMember()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TargetMember()
  } // end of property DkmClrEvalAttribute::TargetMember
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType
          TargetType()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute::get_TargetType()
  } // end of property DkmClrEvalAttribute::TargetType
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue
       extends Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 64 30 39 64 31 30 32 2D 36 30 66 35   // ..$dd09d102-60f5
                                                                                                  2D 61 37 31 66 2D 36 61 39 31 2D 36 64 39 37 37   // -a71f-6a91-6d977
                                                                                                  30 64 39 30 37 63 61 00 00 )                      // 0d907ca..
  .method public hidebysig specialname instance object 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterPrimitiveValue::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 object Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterPrimitiveValue::Create

  .property instance object Value()
  {
    .get instance object Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue::get_Value()
  } // end of property DkmILInterpreterPrimitiveValue::Value
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterPrimitiveValue

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue
       extends Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 64 37 32 34 61 38 66 2D 61 62 64 36   // ..$cd724a8f-abd6
                                                                                                  2D 38 32 39 37 2D 63 32 66 32 2D 34 65 35 33 39   // -8297-c2f2-4e539
                                                                                                  65 31 35 31 32 66 64 00 00 )                      // e1512fd..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterReferenceValue::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInterpreterReferenceValue::Create

  .property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue
          Value()
  {
    .get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue::get_Value()
  } // end of property DkmILInterpreterReferenceValue::Value
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterReferenceValue

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 30 36 35 30 35 64 36 2D 38 38 35 64   // ..$606505d6-885d
                                                                                                  2D 36 31 30 65 2D 39 63 38 66 2D 32 30 62 37 32   // -610e-9c8f-20b72
                                                                                                  31 37 31 30 64 63 38 00 00 )                      // 1710dc8..
  .field public initonly uint64 Address
  .field public initonly uint64 Size
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId TypeId
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 Address,
                               uint64 Size,
                               valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId TypeId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapObjectInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 36 30 65 33 31 31 36 2D 64 30 66 38   // ..$e60e3116-d0f8
                                                                                                  2D 65 66 62 39 2D 65 66 33 36 2D 61 33 37 33 32   // -efb9-ef36-a3732
                                                                                                  37 31 61 64 36 36 39 00 00 )                      // 71ad669..
  .field public initonly uint64 Token1
  .field public initonly uint64 Token2
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                              valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                               valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 Token1,
                               uint64 Token2) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTypeId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 63 63 64 30 35 65 66 2D 39 31 32 37   // ..$7ccd05ef-9127
                                                                                                  2D 36 31 36 30 2D 66 37 36 36 2D 61 63 30 64 35   // -6160-f766-ac0d5
                                                                                                  63 37 62 62 37 65 63 00 00 )                      // c7bb7ec..
  .field public initonly uint64 Address
  .field public initonly uint64 ExtraData
  .field public initonly string RootName
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.GCReferenceType RootType
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 Address,
                               valuetype Microsoft.VisualStudio.Debugger.GCReferenceType RootType,
                               string RootName,
                               uint64 ExtraData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapRootInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 63 32 37 39 30 61 36 2D 36 35 62 64   // ..$5c2790a6-65bd
                                                                                                  2D 35 36 38 63 2D 37 39 36 62 2D 37 35 30 39 65   // -568c-796b-7509e
                                                                                                  65 62 62 36 65 66 31 00 00 )                      // ebb6ef1..
  .field public initonly string Name
  .field public initonly uint32 TotalCount
  .field public initonly uint64 TotalSize
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string Name,
                               uint32 TotalCount,
                               uint64 TotalSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapTypeInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 39 37 62 61 62 37 36 2D 61 30 38 33   // ..$e97bab76-a083
                                                                                                  2D 36 31 36 36 2D 35 64 33 61 2D 64 32 32 62 64   // -6166-5d3a-d22bd
                                                                                                  36 35 37 36 37 38 32 00 00 )                      // 6576782..
  .field public initonly uint64 StartAddress
  .field public initonly uint64 EndAddress
  .field public initonly uint8 Generation
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 StartAddress,
                               uint64 EndAddress,
                               uint8 Generation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedHeapSegmentInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 31 61 37 39 63 65 62 2D 65 36 62 37   // ..$11a79ceb-e6b7
                                                                                                  2D 65 36 34 32 2D 38 31 64 31 2D 31 65 37 62 65   // -e642-81d1-1e7be
                                                                                                  36 61 34 32 61 35 62 00 00 )                      // 6a42a5b..
  .field public initonly uint64 From
  .field public initonly uint64 To
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 From,
                               uint64 To) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedObjectReferenceInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 35 35 30 63 61 32 37 2D 61 63 36 35   // ..$5550ca27-ac65
                                                                                                  2D 30 61 33 34 2D 66 36 66 62 2D 35 61 30 36 38   // -0a34-f6fb-5a068
                                                                                                  38 62 62 38 33 61 61 00 00 )                      // 8bb83aa..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_Runtime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::get_Runtime

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::get_Address

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::get_Name

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::get_FullName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext 
          Create(class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Runtime,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Address,
                 string Name,
                 string FullName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo 
          GetReturnValueInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueContext::GetReturnValueInfo

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress
          Address()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Address()
  } // end of property DkmManagedReturnValueContext::Address
  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_FullName()
  } // end of property DkmManagedReturnValueContext::FullName
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Name()
  } // end of property DkmManagedReturnValueContext::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          Runtime()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Runtime()
  } // end of property DkmManagedReturnValueContext::Runtime
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext::get_Thread()
  } // end of property DkmManagedReturnValueContext::Thread
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 37 32 62 30 33 39 33 2D 66 66 32 61   // ..$d72b0393-ff2a
                                                                                                  2D 39 61 32 30 2D 35 33 31 63 2D 36 38 64 32 62   // -9a20-531c-68d2b
                                                                                                  64 62 61 61 65 62 39 00 00 )                      // dbaaeb9..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag ManagedReturnValueCopy = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag ManagedReturnValueReference = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueInfo::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType 
          get_CorType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueInfo::get_CorType

  .property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType
          CorType()
  {
    .get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo::get_CorType()
  } // end of property DkmManagedReturnValueInfo::CorType
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo/Tag Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo::get_TagValue()
  } // end of property DkmManagedReturnValueInfo::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy
       extends Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 38 39 38 36 66 30 64 2D 31 65 65 63   // ..$78986f0d-1eec
                                                                                                  2D 35 64 33 34 2D 35 31 66 64 2D 38 38 65 34 38   // -5d34-51fd-88e48
                                                                                                  65 30 34 62 35 62 32 00 00 )                      // e04b5b2..
  .method public hidebysig specialname instance uint32 
          get_CorElementType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueCopy::get_CorElementType

  .method public hidebysig specialname instance uint32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueCopy::get_Size

  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueCopy::get_Address

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ValueBuffer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueCopy::get_ValueBuffer

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy 
          Create(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType CorType,
                 uint32 CorElementType,
                 uint32 Size,
                 uint64 Address,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ValueBuffer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueCopy::Create

  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_Address()
  } // end of property DkmManagedReturnValueCopy::Address
  .property instance uint32 CorElementType()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_CorElementType()
  } // end of property DkmManagedReturnValueCopy::CorElementType
  .property instance uint32 Size()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_Size()
  } // end of property DkmManagedReturnValueCopy::Size
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ValueBuffer()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy::get_ValueBuffer()
  } // end of property DkmManagedReturnValueCopy::ValueBuffer
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueCopy

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference
       extends Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 39 62 34 35 61 30 37 2D 36 61 35 66   // ..$59b45a07-6a5f
                                                                                                  2D 36 39 33 38 2D 34 30 33 39 2D 65 34 65 33 38   // -6938-4039-e4e38
                                                                                                  32 61 61 61 30 35 65 00 00 )                      // 2aaa05e..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue 
          get_CorValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueReference::get_CorValue

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference 
          Create(class Microsoft.VisualStudio.CorDebugInterop.ICorDebugType CorType,
                 class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue CorValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedReturnValueReference::Create

  .property instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue
          CorValue()
  {
    .get instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugValue Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference::get_CorValue()
  } // end of property DkmManagedReturnValueReference::CorValue
} // end of class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueReference

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance
       extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 37 39 63 38 38 38 38 2D 38 33 65 62   // ..$a79c8888-83eb
                                                                                                  2D 35 66 61 32 2D 31 34 33 66 2D 37 65 39 62 34   // -5fa2-143f-7e9b4
                                                                                                  32 66 37 37 62 65 64 00 00 )                      // 2f77bed..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::get_RuntimeInstance

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance 
          FindEmbeddedModule(uint32 Index) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::FindEmbeddedModule

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance[] 
          GetEmbeddedModules() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::GetEmbeddedModules

  .method public hidebysig instance uint8[] 
          GetAssemblyImageBytes(uint32 RVA,
                                uint32 BytesRequested) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::GetAssemblyImageBytes

  .method public hidebysig instance void 
          GetClassInfo(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ClassSignature,
                       [out] class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol[]& InstanceFields,
                       [out] uint32& Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::GetClassInfo

  .method public hidebysig instance uint8[] 
          GetGenericDictionaryInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::GetGenericDictionaryInfo

  .method public hidebysig instance void 
          CreateInstructionAddressFromRva(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                          uint32 Rva,
                                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcContainerModuleInstance::CreateInstructionAddressFromRva

  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance::get_RuntimeInstance()
  } // end of property DkmClrNcContainerModuleInstance::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 31 61 33 35 35 65 38 2D 63 34 32 62   // ..$a1a355e8-c42b
                                                                                                  2D 63 31 38 66 2D 63 35 65 36 2D 34 32 66 30 36   // -c18f-c5e6-42f06
                                                                                                  64 36 61 61 38 63 35 00 00 )                      // d6aa8c5..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime,
                 string RuntimeVersion,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcRuntimeInstance::Create

} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance
       extends Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 38 35 61 31 37 33 62 2D 36 31 36 62   // ..$f85a173b-616b
                                                                                                  2D 39 31 64 33 2D 33 31 39 64 2D 32 34 63 66 39   // -91d3-319d-24cf9
                                                                                                  30 33 30 63 30 32 33 00 00 )                      // 030c023..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcModuleInstance::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance 
          get_ContainerModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcModuleInstance::get_ContainerModule

  .method public hidebysig specialname instance uint32 
          get_Index() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcModuleInstance::get_Index

  .method public hidebysig instance void 
          CreateInstructionAddressesFromILAddress(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                                  valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                                                  uint32 ILOffset,
                                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcModuleInstance::CreateInstructionAddressesFromILAddress

  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance
          ContainerModule()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_ContainerModule()
  } // end of property DkmClrNcModuleInstance::ContainerModule
  .property instance uint32 Index()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_Index()
  } // end of property DkmClrNcModuleInstance::Index
  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance::get_RuntimeInstance()
  } // end of property DkmClrNcModuleInstance::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 62 39 32 38 33 64 35 2D 62 38 64 39   // ..$bb9283d5-b8d9
                                                                                                  2D 63 31 66 63 2D 66 63 64 63 2D 63 37 39 38 35   // -c1fc-fcdc-c7985
                                                                                                  36 31 62 32 34 38 65 00 00 )                      // 61b248e..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstanceFieldSymbol::get_Name

  .method public hidebysig specialname instance uint32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstanceFieldSymbol::get_Size

  .method public hidebysig specialname instance uint32 
          get_Offset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstanceFieldSymbol::get_Offset

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol 
          Create(string Name,
                 uint32 Size,
                 uint32 Offset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstanceFieldSymbol::Create

  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Name()
  } // end of property DkmClrNcInstanceFieldSymbol::Name
  .property instance uint32 Offset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Offset()
  } // end of property DkmClrNcInstanceFieldSymbol::Offset
  .property instance uint32 Size()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol::get_Size()
  } // end of property DkmClrNcInstanceFieldSymbol::Size
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstanceFieldSymbol

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressFromRvaAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressFromRvaAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressFromRvaAsyncResult::get_InstructionAddress

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress InstructionAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressFromRvaAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult::get_ErrorCode()
  } // end of property DkmCreateInstructionAddressFromRvaAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult::get_InstructionAddress()
  } // end of property DkmCreateInstructionAddressFromRvaAsyncResult::InstructionAddress
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressFromRvaAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress
       extends Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 37 37 65 63 65 35 61 2D 65 39 66 66   // ..$377ece5a-e9ff
                                                                                                  2D 62 62 36 61 2D 31 36 31 32 2D 62 35 64 39 63   // -bb6a-1612-b5d9c
                                                                                                  63 35 34 37 35 35 66 00 00 )                      // c54755f..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionAddress::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionAddress::get_ModuleInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance 
          get_ContainerModule() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionAddress::get_ContainerModule

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_GenericParameters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionAddress::get_GenericParameters

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress 
          Create(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                 uint32 NativeOffset,
                 uint32 ILOffset,
                 class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance ModuleInstance,
                 class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance ContainerModule,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> GenericParameters,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionAddress::Create

  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance
          ContainerModule()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcContainerModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_ContainerModule()
  } // end of property DkmClrNcInstructionAddress::ContainerModule
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          GenericParameters()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_GenericParameters()
  } // end of property DkmClrNcInstructionAddress::GenericParameters
  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcModuleInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_ModuleInstance()
  } // end of property DkmClrNcInstructionAddress::ModuleInstance
  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcRuntimeInstance Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress::get_RuntimeInstance()
  } // end of property DkmClrNcInstructionAddress::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol
       extends Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 39 64 38 61 38 30 37 2D 33 38 63 38   // ..$19d8a807-38c8
                                                                                                  2D 34 62 36 64 2D 61 38 39 61 2D 34 65 34 62 30   // -4b6d-a89a-4e4b0
                                                                                                  30 61 36 30 34 64 37 00 00 )                      // 0a604d7..
  .method public hidebysig specialname instance uint32 
          get_EmbeddedModuleIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionSymbol::get_EmbeddedModuleIndex

  .method public hidebysig specialname instance uint32 
          get_NativeOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionSymbol::get_NativeOffset

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_GenericParameters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionSymbol::get_GenericParameters

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId MethodId,
                 uint32 ILOffset,
                 uint32 EmbeddedModuleIndex,
                 uint32 NativeOffset,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> GenericParameters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrNcInstructionSymbol::Create

  .property instance uint32 EmbeddedModuleIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_EmbeddedModuleIndex()
  } // end of property DkmClrNcInstructionSymbol::EmbeddedModuleIndex
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          GenericParameters()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_GenericParameters()
  } // end of property DkmClrNcInstructionSymbol::GenericParameters
  .property instance uint32 NativeOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol::get_NativeOffset()
  } // end of property DkmClrNcInstructionSymbol::NativeOffset
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionSymbol

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressesFromILAddressAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressesFromILAddressAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] 
          get_InstructionAddresses() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressesFromILAddressAsyncResult::get_InstructionAddresses

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] InstructionAddresses) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCreateInstructionAddressesFromILAddressAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult::get_ErrorCode()
  } // end of property DkmCreateInstructionAddressesFromILAddressAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[]
          InstructionAddresses()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmClrNcInstructionAddress[] Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult::get_InstructionAddresses()
  } // end of property DkmCreateInstructionAddressesFromILAddressAsyncResult::InstructionAddresses
} // end of class Microsoft.VisualStudio.Debugger.Clr.NativeCompilation.DkmCreateInstructionAddressesFromILAddressAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmActiveScriptDebugMonitor
{
  .method public hidebysig newslot abstract virtual 
          instance object  GetRemoteDebugApplication(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance) cil managed
  {
  } // end of method IDkmActiveScriptDebugMonitor::GetRemoteDebugApplication

  .method public hidebysig newslot abstract virtual 
          instance void  AbortExecutionOnResume(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance) cil managed
  {
  } // end of method IDkmActiveScriptDebugMonitor::AbortExecutionOnResume

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmActiveScriptDebugMonitor

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 36 63 62 31 35 36 63 2D 39 61 64 39   // ..$f6cb156c-9ad9
                                                                                                  2D 63 30 31 64 2D 32 39 65 30 2D 63 62 37 37 65   // -c01d-29e0-cb77e
                                                                                                  34 35 66 61 32 35 34 00 00 )                      // 45fa254..
  .method public hidebysig specialname instance int32 
          get_LoadOrderIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::get_LoadOrderIndex

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 int32 LoadOrderIndex,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime,
                 int32 LoadOrderIndex,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::Create

  .method public hidebysig instance object 
          GetRemoteDebugApplication() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::GetRemoteDebugApplication

  .method public hidebysig instance void 
          AbortExecutionOnResume() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::AbortExecutionOnResume

  .method public hidebysig instance void 
          OnScriptCriticalError(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                string Source,
                                int32 MessageId,
                                string Message,
                                class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress InstructionAddress,
                                class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::OnScriptCriticalError

  .method public hidebysig instance void 
          OnScriptSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] Documents) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptRuntimeInstance::OnScriptSymbolsUpdated

  .property instance int32 LoadOrderIndex()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance::get_LoadOrderIndex()
  } // end of property DkmScriptRuntimeInstance::LoadOrderIndex
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAfterSetNextStatementNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSetNextStatementCompleted(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                                     class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement) cil managed
  {
  } // end of method IDkmAfterSetNextStatementNotification::OnSetNextStatementCompleted

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAfterSetNextStatementNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAppPackageInfo
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo[] 
          EnumPackages(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection) cil managed
  {
  } // end of method IDkmAppPackageInfo::EnumPackages

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAppPackageInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 38 36 64 35 36 63 65 2D 30 35 63 66   // ..$686d56ce-05cf
                                                                                                  2D 66 37 34 62 2D 63 37 32 33 2D 37 62 30 62 34   // -f74b-c723-7b0b4
                                                                                                  65 32 63 64 30 39 64 00 00 )                      // e2cd09d..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId 
          get_AppPackageId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::get_AppPackageId

  .method public hidebysig specialname instance string 
          get_DisplayName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::get_DisplayName

  .method public hidebysig specialname instance string 
          get_Version() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::get_Version

  .method public hidebysig specialname instance string 
          get_LogoPath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::get_LogoPath

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> 
          get_Applications() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::get_Applications

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                 string DisplayName,
                 string Version,
                 string LogoPath,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> Applications) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledAppPackageInfo::Create

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId
          AppPackageId()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_AppPackageId()
  } // end of property DkmInstalledAppPackageInfo::AppPackageId
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo>
          Applications()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo> Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_Applications()
  } // end of property DkmInstalledAppPackageInfo::Applications
  .property instance string DisplayName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_DisplayName()
  } // end of property DkmInstalledAppPackageInfo::DisplayName
  .property instance string LogoPath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_LogoPath()
  } // end of property DkmInstalledAppPackageInfo::LogoPath
  .property instance string Version()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo::get_Version()
  } // end of property DkmInstalledAppPackageInfo::Version
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledAppPackageInfo

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreak
{
  .method public hidebysig newslot abstract virtual 
          instance void  AsyncBreak(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                    bool stopImmediately) cil managed
  {
  } // end of method IDkmAsyncBreak::AsyncBreak

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreak

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreakCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnAsyncBreakComplete(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                              valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus status,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmAsyncBreakCompleteNotification::OnAsyncBreakComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreakCompleteNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreakCompleteReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnAsyncBreakCompleteReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                      valuetype Microsoft.VisualStudio.Debugger.DkmAsyncBreakStatus status,
                                                      class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmAsyncBreakCompleteReceived::OnAsyncBreakCompleteReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncBreakCompleteReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncTaskDecoder
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskCreationStack(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext,
                                              class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskCreationStackAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmAsyncTaskDecoder::GetTaskCreationStack

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext,
                                                   class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                   class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetTaskContinuationFramesAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmAsyncTaskDecoder::GetTaskContinuationFrames

  .method public hidebysig newslot abstract virtual 
          instance void  GetAsyncCallStack(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext,
                                           class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                           class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetAsyncCallStackAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmAsyncTaskDecoder::GetAsyncCallStack

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmAsyncTaskDecoder

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBaseFuncEvalService
{
  .method public hidebysig newslot abstract virtual 
          instance void  BeginFuncEvalExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags') cil managed
  {
  } // end of method IDkmBaseFuncEvalService::BeginFuncEvalExecution

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBaseFuncEvalService

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBaseNativeExecutionController
{
  .method public hidebysig newslot abstract virtual 
          instance void  RaiseExecutionControlException(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                        uint32 exceptionCode) cil managed
  {
  } // end of method IDkmBaseNativeExecutionController::RaiseExecutionControlException

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBaseNativeExecutionController

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBeforeContinueExecutionNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  BeforeContinueExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmBeforeContinueExecutionNotification::BeforeContinueExecution

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBeforeContinueExecutionNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBeforeStopDebuggingNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  BeforeStopDebugging(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmBeforeStopDebuggingNotification::BeforeStopDebugging

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBeforeStopDebuggingNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLoadedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBinaryLoaded(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                        string path,
                                        class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmBinaryLoadedNotification::OnBinaryLoaded

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLoadedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLocator
{
  .method public hidebysig newslot abstract virtual 
          instance string  LocateBinary(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                        string applicationPath,
                                        string dumpPath,
                                        string originalPath,
                                        uint32 timeDateStamp,
                                        uint32 imageSize) cil managed
  {
  } // end of method IDkmBinaryLocator::LocateBinary

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLocator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLocator11a
{
  .method public hidebysig newslot abstract virtual 
          instance string  TryLocateBinary(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                           string applicationPath,
                                           string dumpPath,
                                           string originalPath,
                                           uint32 timeDateStamp,
                                           uint32 imageSize) cil managed
  {
  } // end of method IDkmBinaryLocator11a::TryLocateBinary

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryLocator11a

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryReloadOpportunityNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBinaryReloadOpportunity(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                   class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                   class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmBinaryReloadOpportunityNotification::OnBinaryReloadOpportunity

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBinaryReloadOpportunityNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBoundBreakpointHitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBoundBreakpointHit(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              bool hasException,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmBoundBreakpointHitNotification::OnBoundBreakpointHit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBoundBreakpointHitNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBoundBreakpointHitReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBoundBreakpointHitReceived(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                      class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                      bool hasException,
                                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmBoundBreakpointHitReceived::OnBoundBreakpointHitReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBoundBreakpointHitReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessor
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetCompiledCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint,
                                              class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery compiledCondition,
                                              valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator conditionOperator) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::SetCompiledCondition

  .method public hidebysig newslot abstract virtual 
          instance void  SetCompiledConditionPending(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::SetCompiledConditionPending

  .method public hidebysig newslot abstract virtual 
          instance void  SetEvaluationCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition,
                                                [out] string& errorText) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::SetEvaluationCondition

  .method public hidebysig newslot abstract virtual 
          instance void  ClearConditions(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::ClearConditions

  .method public hidebysig newslot abstract virtual 
          instance void  SetHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                              class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition,
                                              int32 hitCountValue) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::SetHitCountCondition

  .method public hidebysig newslot abstract virtual 
          instance void  ClearHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition,
                                                [out] int32& currentHitCount) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::ClearHitCountCondition

  .method public hidebysig newslot abstract virtual 
          instance void  GetHitCountConditionStatus(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                    [out] int32& currentHitCount) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessor::GetHitCountConditionStatus

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessor

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorClient
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery 
          GetCompiledCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                               class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                               [out] valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator& conditionOperator) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorClient::GetCompiledCondition

  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointConditionFailed(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                     string errorMessage) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorClient::OnBreakpointConditionFailed

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorClient

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorClient140
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointConditionFailed(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                     valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason errorCode) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorClient140::OnBreakpointConditionFailed

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorClient140

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorGpuExtension
{
  .method public hidebysig newslot abstract virtual 
          instance void  TryPushConditionToTargetDevice(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint,
                                                        class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery compiledCondition,
                                                        valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointConditionOperator conditionOperator) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorGpuExtension::TryPushConditionToTargetDevice

  .method public hidebysig newslot abstract virtual 
          instance void  TryClearConditionOnTargetDevice(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeInstructionBreakpoint instructionBreakpoint) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorGpuExtension::TryClearConditionOnTargetDevice

  .method public hidebysig newslot abstract virtual 
          instance void  RequestBreakpointEventOnModifiedThread(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                                class Microsoft.VisualStudio.Debugger.DkmThread modifiedBreakThread) cil managed
  {
  } // end of method IDkmBreakpointConditionProcessorGpuExtension::RequestBreakpointEventOnModifiedThread

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionProcessorGpuExtension

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionThreadSelectorForGpu
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmThread 
          EvaluateConditionAndSelectThread(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                           class Microsoft.VisualStudio.Debugger.DkmThread firstStoppedThread) cil managed
  {
  } // end of method IDkmBreakpointConditionThreadSelectorForGpu::EvaluateConditionAndSelectThread

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointConditionThreadSelectorForGpu

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManager
{
  .method public hidebysig newslot abstract virtual 
          instance void  EnablePendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                                 class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnablePendingBreakpointAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::EnablePendingBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  DisablePendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisablePendingBreakpointAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::DisablePendingBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  EnrollPendingBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                                 class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                 class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnrollPendingBreakpointAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::EnrollPendingBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  SetPendingBreakpointCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                                       class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                       class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition,
                                                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointConditionAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::SetPendingBreakpointCondition

  .method public hidebysig newslot abstract virtual 
          instance void  SetPendingBreakpointHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                                               class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                               class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition,
                                                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmSetPendingBreakpointHitCountConditionAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::SetPendingBreakpointHitCountCondition

  .method public hidebysig newslot abstract virtual 
          instance void  EnableBoundBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                               class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmEnableBoundBreakpointAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::EnableBoundBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  DisableBoundBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmDisableBoundBreakpointAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::DisableBoundBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance bool  IsBoundBreakpointEnabled(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint) cil managed
  {
  } // end of method IDkmBreakpointManager::IsBoundBreakpointEnabled

  .method public hidebysig newslot abstract virtual 
          instance void  SetBoundBreakpointCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                     class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition) cil managed
  {
  } // end of method IDkmBreakpointManager::SetBoundBreakpointCondition

  .method public hidebysig newslot abstract virtual 
          instance void  SetBoundBreakpointHitCountCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                             class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointHitCountCondition condition) cil managed
  {
  } // end of method IDkmBreakpointManager::SetBoundBreakpointHitCountCondition

  .method public hidebysig newslot abstract virtual 
          instance void  SetBoundBreakpointHitCountValue(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                         int32 newValue) cil managed
  {
  } // end of method IDkmBreakpointManager::SetBoundBreakpointHitCountValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetBoundBreakpointHitCountValue(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint boundBreakpoint,
                                                         class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                         class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmGetBoundBreakpointHitCountValueAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmBreakpointManager::GetBoundBreakpointHitCountValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManager

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManagerFileUpdate
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointFilesUpdated(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointFileUpdateNotification fileUpdateNotification,
                                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList) cil managed
  {
  } // end of method IDkmBreakpointManagerFileUpdate::OnBreakpointFilesUpdated

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManagerFileUpdate

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManagerNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointBound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                           class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] boundBreakpoints) cil managed
  {
  } // end of method IDkmBreakpointManagerNotification::OnBreakpointBound

  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointUnbound(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                             class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBoundBreakpoint[] boundBreakpoints,
                                             valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointUnboundReason reason) cil managed
  {
  } // end of method IDkmBreakpointManagerNotification::OnBreakpointUnbound

  .method public hidebysig newslot abstract virtual 
          instance void  OnBreakpointMessage(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingBreakpoint pendingBreakpoint,
                                             valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel level,
                                             string message) cil managed
  {
  } // end of method IDkmBreakpointManagerNotification::OnBreakpointMessage

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmBreakpointManagerNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCallStackFilter
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          FilterNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext stackContext,
                          class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame input) cil managed
  {
  } // end of method IDkmCallStackFilter::FilterNextFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCallStackFilter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrAppDomainNameChanged
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnAppDomainNameChanged(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain) cil managed
  {
  } // end of method IDkmClrAppDomainNameChanged::OnAppDomainNameChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrAppDomainNameChanged

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrCustomVisualizerObjectProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  CreateDebuggeeSideVisualizerObject(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult,
                                                            uint32 selectedVisualizerIndex,
                                                            [out] string& exceptionType,
                                                            [out] string& exceptionStackTrace,
                                                            [out] string& exceptionMessage) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::CreateDebuggeeSideVisualizerObject

  .method public hidebysig newslot abstract virtual 
          instance bool  DestroyDebuggeeSideVisualizerObject(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::DestroyDebuggeeSideVisualizerObject

  .method public hidebysig newslot abstract virtual 
          instance void  ResolveAssembly(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult,
                                         string assemblyName,
                                         [out] string& assemblyPath,
                                         [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& assemblyBytes) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::ResolveAssembly

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetDataFromDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult,
                                            [out] string& exceptionType,
                                            [out] string& exceptionStackTrace,
                                            [out] string& exceptionMessage) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::GetDataFromDebuggeeSideVisualizer

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          TransferDataToDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult,
                                               uint8[] dataIn,
                                               [out] string& exceptionType,
                                               [out] string& exceptionStackTrace,
                                               [out] string& exceptionMessage) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::TransferDataToDebuggeeSideVisualizer

  .method public hidebysig newslot abstract virtual 
          instance void  CreateReplacementObjectOnDebuggeeSideVisualizer(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult,
                                                                         uint8[] dataIn,
                                                                         [out] string& exceptionType,
                                                                         [out] string& exceptionStackTrace,
                                                                         [out] string& exceptionMessage) cil managed
  {
  } // end of method IDkmClrCustomVisualizerObjectProvider::CreateReplacementObjectOnDebuggeeSideVisualizer

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrCustomVisualizerObjectProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrDebugMonitorExceptionCaughtNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnClrDebugMonitorExceptionCaught(class Microsoft.VisualStudio.Debugger.Clr.DkmClrCaughtExceptionInformation clrCaughtException,
                                                          class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                          class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmClrDebugMonitorExceptionCaughtNotification::OnClrDebugMonitorExceptionCaught

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrDebugMonitorExceptionCaughtNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrExpressionCompiler
{
  .method public hidebysig newslot abstract virtual 
          instance void  CompileExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                           class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress,
                                           class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                           [out] string& 'error',
                                           [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result) cil managed
  {
  } // end of method IDkmClrExpressionCompiler::CompileExpression

  .method public hidebysig newslot abstract virtual 
          instance void  CompileAssignment(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                           class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress,
                                           class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult lValue,
                                           [out] string& 'error',
                                           [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result) cil managed
  {
  } // end of method IDkmClrExpressionCompiler::CompileAssignment

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery 
          GetClrLocalVariableQuery(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                   class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress instructionAddress,
                                   bool argumentsOnly) cil managed
  {
  } // end of method IDkmClrExpressionCompiler::GetClrLocalVariableQuery

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrExpressionCompiler

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 63 65 37 61 64 34 63 2D 34 35 62 33   // ..$dce7ad4c-45b3
                                                                                                  2D 31 32 32 30 2D 38 36 64 61 2D 61 32 63 64 34   // -1220-86da-a2cd4
                                                                                                  63 61 36 34 61 62 30 00 00 )                      // ca64ab0..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::get_Language

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags 
          get_CompilationFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::get_CompilationFlags

  .method public hidebysig specialname instance string 
          get_Text() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::get_Text

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::get_UniqueId

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags CompilationFlags,
                 string Text,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::Create

  .method public hidebysig instance void 
          CompileExpression(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress,
                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                            [out] string& Error,
                            [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::CompileExpression

  .method public hidebysig instance void 
          CompileAssignment(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress,
                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult LValue,
                            [out] string& Error,
                            [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::CompileAssignment

  .method public hidebysig instance void 
          CompileDisplayAttribute(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance ModuleInstance,
                                  int32 Token,
                                  [out] string& Error,
                                  [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageExpression::CompileDisplayAttribute

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags
          CompilationFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_CompilationFlags()
  } // end of property DkmLanguageExpression::CompilationFlags
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_Language()
  } // end of property DkmLanguageExpression::Language
  .property instance string Text()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_Text()
  } // end of property DkmLanguageExpression::Text
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression::get_UniqueId()
  } // end of property DkmLanguageExpression::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 38 30 37 63 38 32 36 2D 33 33 33 38   // ..$0807c826-3338
                                                                                                  2D 64 64 39 39 2D 32 66 33 61 2D 32 30 32 62 61   // -dd99-2f3a-202ba
                                                                                                  38 66 62 39 64 61 37 00 00 )                      // 8fb9da7..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_Thread

  .method public hidebysig specialname instance uint32 
          get_Timeout() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_Timeout

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags 
          get_EvaluationFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_EvaluationFlags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 
          get_FuncEvalFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_FuncEvalFlags

  .method public hidebysig specialname instance uint32 
          get_Radix() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_Radix

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue 
          get_ReturnValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_ReturnValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData 
          get_AdditionalVisualizationData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_AdditionalVisualizationData

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority 
          get_AdditionalVisualizationDataPriority() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_AdditionalVisualizationDataPriority

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> 
          get_ReturnValues() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::get_ReturnValues

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint32 Timeout,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                 uint32 Radix,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint32 Timeout,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                 uint32 Radix,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData AdditionalVisualizationData,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority AdditionalVisualizationDataPriority) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 uint32 Timeout,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags EvaluationFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags FuncEvalFlags,
                 uint32 Radix,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue ReturnValue,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData AdditionalVisualizationData,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority AdditionalVisualizationDataPriority,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> ReturnValues) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::Create

  .method public hidebysig instance void 
          EvaluateExpressionOnThreads(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                      class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> Threads,
                                      class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression,
                                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::EvaluateExpressionOnThreads

  .method public hidebysig instance void 
          EvaluateExpression(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression,
                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::EvaluateExpression

  .method public hidebysig instance void 
          GetFrameLocals(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                         class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                         class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetFrameLocals

  .method public hidebysig instance void 
          GetFrameArguments(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetFrameArguments

  .method public hidebysig instance void 
          GetFrameName(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                       class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame,
                       valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags,
                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetFrameName

  .method public hidebysig instance void 
          GetFrameReturnType(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Frame,
                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetFrameReturnType

  .method public hidebysig instance void 
          EvaluateReturnValue(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                              class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                              class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue RawReturnValue,
                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::EvaluateReturnValue

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery 
          GetClrLocalVariableQuery(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress InstructionAddress,
                                   bool ArgumentsOnly) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetClrLocalVariableQuery

  .method public hidebysig instance string 
          GetTypeName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ClrType,
                      class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> FormatSpecifiers) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetTypeName

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext 
          EnumClrDebuggerGeneratedLocals(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::EnumClrDebuggerGeneratedLocals

  .method public hidebysig instance string 
          GetClrReturnValueType(int32 Index) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetClrReturnValueType

  .method public hidebysig instance string 
          GetClrExceptionType(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetClrExceptionType

  .method public hidebysig instance string 
          GetClrStowedExceptionType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::GetClrStowedExceptionType

  .method public hidebysig instance void 
          EvaluateReturnValue2(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer RawReturnValue,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInspectionContext::EvaluateReturnValue2

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData
          AdditionalVisualizationData()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_AdditionalVisualizationData()
  } // end of property DkmInspectionContext::AdditionalVisualizationData
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority
          AdditionalVisualizationDataPriority()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_AdditionalVisualizationDataPriority()
  } // end of property DkmInspectionContext::AdditionalVisualizationDataPriority
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags
          EvaluationFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_EvaluationFlags()
  } // end of property DkmInspectionContext::EvaluationFlags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags
          FuncEvalFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_FuncEvalFlags()
  } // end of property DkmInspectionContext::FuncEvalFlags
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_InspectionSession()
  } // end of property DkmInspectionContext::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Language()
  } // end of property DkmInspectionContext::Language
  .property instance uint32 Radix()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Radix()
  } // end of property DkmInspectionContext::Radix
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
          ReturnValue()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_ReturnValue()
  } // end of property DkmInspectionContext::ReturnValue
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer>
          ReturnValues()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer> Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_ReturnValues()
  } // end of property DkmInspectionContext::ReturnValues
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_RuntimeInstance()
  } // end of property DkmInspectionContext::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Thread()
  } // end of property DkmInspectionContext::Thread
  .property instance uint32 Timeout()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext::get_Timeout()
  } // end of property DkmInspectionContext::Timeout
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 62 35 33 31 38 65 62 2D 34 32 37 32   // ..$db5318eb-4272
                                                                                                  2D 32 66 37 64 2D 30 61 39 32 2D 33 36 39 37 37   // -2f7d-0a92-36977
                                                                                                  36 39 61 62 61 36 62 00 00 )                      // 69aba6b..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Binary() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_Binary

  .method public hidebysig specialname instance string 
          get_TypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_TypeName

  .method public hidebysig specialname instance string 
          get_MethodName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_MethodName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_FormatSpecifiers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_FormatSpecifiers

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags 
          get_CompilationFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_CompilationFlags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory 
          get_ResultCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_ResultCategory

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType 
          get_Access() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_Access

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType 
          get_StorageType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_StorageType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags 
          get_TypeModifierFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_TypeModifierFlags

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::get_UniqueId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Binary,
                 string TypeName,
                 string MethodName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> FormatSpecifiers,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  string ExpressionName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::Execute

  .method public hidebysig instance void 
          Execute(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  string ExpressionName,
                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrInspectionQuery::Execute

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType
          Access()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_Access()
  } // end of property DkmCompiledClrInspectionQuery::Access
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Binary()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_Binary()
  } // end of property DkmCompiledClrInspectionQuery::Binary
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags
          CompilationFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_CompilationFlags()
  } // end of property DkmCompiledClrInspectionQuery::CompilationFlags
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          FormatSpecifiers()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_FormatSpecifiers()
  } // end of property DkmCompiledClrInspectionQuery::FormatSpecifiers
  .property instance string MethodName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_MethodName()
  } // end of property DkmCompiledClrInspectionQuery::MethodName
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
          ResultCategory()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_ResultCategory()
  } // end of property DkmCompiledClrInspectionQuery::ResultCategory
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType
          StorageType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_StorageType()
  } // end of property DkmCompiledClrInspectionQuery::StorageType
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags
          TypeModifierFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_TypeModifierFlags()
  } // end of property DkmCompiledClrInspectionQuery::TypeModifierFlags
  .property instance string TypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_TypeName()
  } // end of property DkmCompiledClrInspectionQuery::TypeName
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery::get_UniqueId()
  } // end of property DkmCompiledClrInspectionQuery::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 30 31 37 66 37 39 30 2D 31 65 39 34   // ..$a017f790-1e94
                                                                                                  2D 37 33 66 63 2D 61 34 62 35 2D 35 33 32 37 38   // -73fc-a4b5-53278
                                                                                                  65 63 35 35 34 38 62 00 00 )                      // ec5548b..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag FailedResult = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag IntermediateResult = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag SuccessResult = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          get_InspectionContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_InspectionContext

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_StackFrame

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_Name

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_FullName

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::Close

  .method public hidebysig instance void 
          GetChildren(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                      int32 InitialRequestSize,
                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::GetChildren

  .method public hidebysig instance void 
          SetValueAsString(string Value,
                           int32 Timeout,
                           [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::SetValueAsString

  .method public hidebysig instance string 
          GetUnderlyingString() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::GetUnderlyingString

  .method public hidebysig instance void 
          CreateObjectId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::CreateObjectId

  .method public hidebysig instance void 
          DestroyObjectId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResult::DestroyObjectId

  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_FullName()
  } // end of property DkmEvaluationResult::FullName
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext
          InspectionContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_InspectionContext()
  } // end of property DkmEvaluationResult::InspectionContext
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_InspectionSession()
  } // end of property DkmEvaluationResult::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_Language()
  } // end of property DkmEvaluationResult::Language
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_Name()
  } // end of property DkmEvaluationResult::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_RuntimeInstance()
  } // end of property DkmEvaluationResult::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_StackFrame()
  } // end of property DkmEvaluationResult::StackFrame
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_TagValue()
  } // end of property DkmEvaluationResult::TagValue
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult::get_UniqueId()
  } // end of property DkmEvaluationResult::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 66 66 33 65 62 37 38 2D 61 65 37 36   // ..$cff3eb78-ae76
                                                                                                  2D 61 30 31 33 2D 30 38 38 33 2D 62 36 64 61 33   // -a013-0883-b6da3
                                                                                                  35 39 34 30 34 38 65 00 00 )                      // 594048e..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Binary() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::get_Binary

  .method public hidebysig specialname instance string 
          get_TypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::get_TypeName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> 
          get_LocalInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::get_LocalInfo

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::get_UniqueId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Binary,
                 string TypeName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> LocalInfo) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          GetLocalValues(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                         int32 FirstLocalIndex,
                         int32 Count) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::GetLocalValues

  .method public hidebysig instance void 
          GetLocalValues(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                         int32 FirstLocalIndex,
                         int32 Count,
                         class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledClrLocalsQuery::GetLocalValues

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Binary()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_Binary()
  } // end of property DkmCompiledClrLocalsQuery::Binary
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo>
          LocalInfo()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_LocalInfo()
  } // end of property DkmCompiledClrLocalsQuery::LocalInfo
  .property instance string TypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_TypeName()
  } // end of property DkmCompiledClrLocalsQuery::TypeName
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery::get_UniqueId()
  } // end of property DkmCompiledClrLocalsQuery::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrExpressionCompilerCallback
{
  .method public hidebysig newslot abstract virtual 
          instance void  CompileDisplayAttribute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance moduleInstance,
                                                 int32 token,
                                                 [out] string& 'error',
                                                 [out] class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery& result) cil managed
  {
  } // end of method IDkmClrExpressionCompilerCallback::CompileDisplayAttribute

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrExpressionCompilerCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrFormatter
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetValueString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                          class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                          class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> formatSpecifiers) cil managed
  {
  } // end of method IDkmClrFormatter::GetValueString

  .method public hidebysig newslot abstract virtual 
          instance string  GetTypeName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                       class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType,
                                       class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> formatSpecifiers) cil managed
  {
  } // end of method IDkmClrFormatter::GetTypeName

  .method public hidebysig newslot abstract virtual 
          instance bool  HasUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                             class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrFormatter::HasUnderlyingString

  .method public hidebysig newslot abstract virtual 
          instance string  GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrFormatter::GetUnderlyingString

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrFormatter

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 31 38 36 35 37 30 63 2D 32 35 32 39   // ..$8186570c-2529
                                                                                                  2D 65 64 62 35 2D 65 66 30 62 2D 34 65 34 38 35   // -edb5-ef0b-4e485
                                                                                                  66 39 30 32 65 38 39 00 00 )                      // f902e89..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Type

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory 
          get_Category() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Category

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType 
          get_Access() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Access

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType 
          get_StorageType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_StorageType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags 
          get_TypeModifierFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_TypeModifierFlags

  .method public hidebysig specialname instance bool 
          get_IsNull() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_IsNull

  .method public hidebysig specialname instance object 
          get_HostObjectValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_HostObjectValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_StackFrame

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags 
          get_EvalFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_EvalFlags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags 
          get_ValueFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_ValueFlags

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Address

  .method public hidebysig specialname instance string 
          get_Alias() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_Alias

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> 
          get_ArrayDimensions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_ArrayDimensions

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> 
          get_ArrayLowerBounds() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_ArrayLowerBounds

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::get_UniqueId

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Type,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags,
                 bool IsNull,
                 object HostObjectValue,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags EvalFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags ValueFlags,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Address,
                 string Alias,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> ArrayDimensions,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> ArrayLowerBounds,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::Create

  .method public hidebysig instance string 
          GetValueString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                         class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> FormatSpecifiers) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::GetValueString

  .method public hidebysig instance bool 
          HasUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::HasUnderlyingString

  .method public hidebysig instance string 
          GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::GetUnderlyingString

  .method public hidebysig instance void 
          GetResult(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                    class Microsoft.VisualStudio.Debugger.Clr.DkmClrType DeclaredType,
                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                    class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> FormatSpecifiers,
                    string ResultName,
                    string ResultFullName,
                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::GetResult

  .method public hidebysig instance string 
          EvaluateToString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::EvaluateToString

  .method public hidebysig instance void 
          EvaluateDebuggerDisplayString(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                        class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                                        class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType,
                                        string FormatString,
                                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::EvaluateDebuggerDisplayString

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          InstantiateProxyType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                               class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::InstantiateProxyType

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          InstantiateResultsViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                                      class Microsoft.VisualStudio.Debugger.Clr.DkmClrType EnumerableType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::InstantiateResultsViewProxy

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetMemberValue(string MemberName,
                         int32 MemberType,
                         string ParentTypeName,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::GetMemberValue

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetArrayElement(int32[] Index,
                          class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::GetArrayElement

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          Dereference(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrValue::Dereference

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType
          Access()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Access()
  } // end of property DkmClrValue::Access
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress
          Address()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Address()
  } // end of property DkmClrValue::Address
  .property instance string Alias()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Alias()
  } // end of property DkmClrValue::Alias
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32>
          ArrayDimensions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ArrayDimensions()
  } // end of property DkmClrValue::ArrayDimensions
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32>
          ArrayLowerBounds()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<int32> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ArrayLowerBounds()
  } // end of property DkmClrValue::ArrayLowerBounds
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
          Category()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Category()
  } // end of property DkmClrValue::Category
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags
          EvalFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_EvalFlags()
  } // end of property DkmClrValue::EvalFlags
  .property instance object HostObjectValue()
  {
    .get instance object Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_HostObjectValue()
  } // end of property DkmClrValue::HostObjectValue
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_InspectionSession()
  } // end of property DkmClrValue::InspectionSession
  .property instance bool IsNull()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_IsNull()
  } // end of property DkmClrValue::IsNull
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Language()
  } // end of property DkmClrValue::Language
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_StackFrame()
  } // end of property DkmClrValue::StackFrame
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType
          StorageType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_StorageType()
  } // end of property DkmClrValue::StorageType
  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType
          Type()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_Type()
  } // end of property DkmClrValue::Type
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags
          TypeModifierFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_TypeModifierFlags()
  } // end of property DkmClrValue::TypeModifierFlags
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_UniqueId()
  } // end of property DkmClrValue::UniqueId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags
          ValueFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue::get_ValueFlags()
  } // end of property DkmClrValue::ValueFlags
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrFrameGenericParameterProvider
{
  .method public hidebysig newslot abstract virtual 
          instance string[]  GetClrGenericParameters(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame) cil managed
  {
  } // end of method IDkmClrFrameGenericParameterProvider::GetClrGenericParameters

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrFrameGenericParameterProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrInspectionQueryProcessor
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrInspectionQuery compiledClrInspectionQuery,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                  string expressionName) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::Execute

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          GetLocalValues(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmCompiledClrLocalsQuery compiledClrLocalsQuery,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                         int32 firstLocalIndex,
                         int32 count) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetLocalValues

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext 
          EnumClrDebuggerGeneratedLocals(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                         class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::EnumClrDebuggerGeneratedLocals

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          GetItemsForLocalsEnum(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext clrDebuggerGeneratedLocalEnumContext,
                                int32 startIndex,
                                int32 count) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetItemsForLocalsEnum

  .method public hidebysig newslot abstract virtual 
          instance string  GetClrReturnValueType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                                 int32 index) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetClrReturnValueType

  .method public hidebysig newslot abstract virtual 
          instance string  GetObjectTypeByAlias(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                string alias) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetObjectTypeByAlias

  .method public hidebysig newslot abstract virtual 
          instance string  GetClrExceptionType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                               class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetClrExceptionType

  .method public hidebysig newslot abstract virtual 
          instance string  GetClrStowedExceptionType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrInspectionQueryProcessor::GetClrStowedExceptionType

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrInspectionQueryProcessor

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 37 39 31 64 65 64 64 2D 63 66 35 33   // ..$0791dedd-cf53
                                                                                                  2D 66 62 34 38 2D 33 30 61 64 2D 36 36 62 39 62   // -fb48-30ad-66b9b
                                                                                                  62 38 36 39 39 61 36 00 00 )                      // b8699a6..
  .class auto ansi sealed nested public ThreadOverride
         extends [mscorlib]System.Object
  {
    .field public initonly uint64 ThreadId
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(uint64 ThreadId) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ThreadOverride::.ctor

  } // end of class ThreadOverride

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride 
          get_ThreadOverridePart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::get_ThreadOverridePart

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::get_StackFrame

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer 
          get_DataContainer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::get_DataContainer

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext 
          Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride ThreadOverride) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext 
          Create(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride ThreadOverride) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::Create

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILContext::Close

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer
          DataContainer()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_DataContainer()
  } // end of property DkmILContext::DataContainer
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_StackFrame()
  } // end of property DkmILContext::StackFrame
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride
          ThreadOverridePart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext/ThreadOverride Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext::get_ThreadOverridePart()
  } // end of property DkmILContext::ThreadOverridePart
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 64 36 65 62 34 61 34 2D 38 31 35 35   // ..$7d6eb4a4-8155
                                                                                                  2D 33 62 39 62 2D 34 36 37 65 2D 34 61 31 31 64   // -3b9b-467e-4a11d
                                                                                                  36 30 63 37 30 32 31 00 00 )                      // 60c7021..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          get_InspectionContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_InspectionContext

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_StackFrame

  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_Count

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 int32 Count,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          GetItems(int32 StartIndex,
                   int32 Count) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::GetItems

  .method public hidebysig instance void 
          GetItems(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                   int32 StartIndex,
                   int32 Count,
                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalEnumContext::GetItems

  .property instance int32 Count()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_Count()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::Count
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext
          InspectionContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_InspectionContext()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::InspectionContext
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_InspectionSession()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_RuntimeInstance()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_StackFrame()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::StackFrame
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext::get_UniqueId()
  } // end of property DkmClrDebuggerGeneratedLocalEnumContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalEnumContext

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrIntrinsicAssemblyProvider
{
  .method public hidebysig newslot abstract virtual 
          instance native int  GetIntrinsicAssemblyMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                                    [out] uint32& size) cil managed
  {
  } // end of method IDkmClrIntrinsicAssemblyProvider::GetIntrinsicAssemblyMetaDataBytesPtr

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrIntrinsicAssemblyProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataLoader
{
  .method public hidebysig newslot abstract virtual 
          instance native int  GetMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain,
                                                   string assemblyName,
                                                   [out] uint32& size) cil managed
  {
  } // end of method IDkmClrMetaDataLoader::GetMetaDataBytesPtr

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetMetaDataBytes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain,
                                             string assemblyName,
                                             [out] valuetype [mscorlib]System.Guid& mvid) cil managed
  {
  } // end of method IDkmClrMetaDataLoader::GetMetaDataBytes

  .method public hidebysig newslot abstract virtual 
          instance valuetype [mscorlib]System.Guid 
          ResolveMvidByAssemblyName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain,
                                    string assemblyName) cil managed
  {
  } // end of method IDkmClrMetaDataLoader::ResolveMvidByAssemblyName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataLoader

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataProvider
{
  .method public hidebysig newslot abstract virtual 
          instance object  GetMetaDataImport(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance) cil managed
  {
  } // end of method IDkmClrMetaDataProvider::GetMetaDataImport

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataProvider140
{
  .method public hidebysig newslot abstract virtual 
          instance native int  GetMetaDataBytesPtr(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance,
                                                   [out] uint32& size) cil managed
  {
  } // end of method IDkmClrMetaDataProvider140::GetMetaDataBytesPtr

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMetaDataProvider140

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMethodSignatureHelper
{
  .method public hidebysig newslot abstract virtual 
          instance int32  GetLocalSignatureToken(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance,
                                                 int32 methodToken) cil managed
  {
  } // end of method IDkmClrMethodSignatureHelper::GetLocalSignatureToken

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrMethodSignatureHelper

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrModuleLookup
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance 
          FindClrModuleInstance(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule corModule) cil managed
  {
  } // end of method IDkmClrModuleLookup::FindClrModuleInstance

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrModuleLookup

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrResultProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetResult(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                   class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                   class Microsoft.VisualStudio.Debugger.Clr.DkmClrType declaredType,
                                   class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                   class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> formatSpecifiers,
                                   string resultName,
                                   string resultFullName,
                                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmClrResultProvider::GetResult

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetClrValue(class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult successResult) cil managed
  {
  } // end of method IDkmClrResultProvider::GetClrValue

  .method public hidebysig newslot abstract virtual 
          instance void  GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result,
                                     class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                     int32 initialRequestSize,
                                     class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmClrResultProvider::GetChildren

  .method public hidebysig newslot abstract virtual 
          instance void  GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext,
                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                  int32 startIndex,
                                  int32 count,
                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmClrResultProvider::GetItems

  .method public hidebysig newslot abstract virtual 
          instance string  GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result) cil managed
  {
  } // end of method IDkmClrResultProvider::GetUnderlyingString

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrResultProvider

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluationAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          Result()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult::get_Result()
  } // end of property DkmEvaluationAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluationAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetChildrenAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetChildrenAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          get_InitialChildren() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetChildrenAsyncResult::get_InitialChildren

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext 
          get_EnumContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetChildrenAsyncResult::get_EnumContext

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] InitialChildren,
                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetChildrenAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext
          EnumContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_EnumContext()
  } // end of property DkmGetChildrenAsyncResult::EnumContext
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_ErrorCode()
  } // end of property DkmGetChildrenAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]
          InitialChildren()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult::get_InitialChildren()
  } // end of property DkmGetChildrenAsyncResult::InitialChildren
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 61 37 37 63 31 38 36 2D 65 37 61 36   // ..$8a77c186-e7a6
                                                                                                  2D 33 31 62 63 2D 62 32 31 38 2D 64 37 65 61 36   // -31bc-b218-d7ea6
                                                                                                  36 32 31 32 66 38 62 00 00 )                      // 6212f8b..
  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_Count

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_StackFrame

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          get_InspectionContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_InspectionContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext 
          Create(int32 Count,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::Create

  .method public hidebysig instance void 
          GetItems(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                   int32 StartIndex,
                   int32 Count,
                   class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationResultEnumContext::GetItems

  .property instance int32 Count()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_Count()
  } // end of property DkmEvaluationResultEnumContext::Count
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext
          InspectionContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_InspectionContext()
  } // end of property DkmEvaluationResultEnumContext::InspectionContext
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_InspectionSession()
  } // end of property DkmEvaluationResultEnumContext::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_Language()
  } // end of property DkmEvaluationResultEnumContext::Language
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_RuntimeInstance()
  } // end of property DkmEvaluationResultEnumContext::RuntimeInstance
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_StackFrame()
  } // end of property DkmEvaluationResultEnumContext::StackFrame
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext::get_UniqueId()
  } // end of property DkmEvaluationResultEnumContext::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationEnumAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationEnumAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          get_Items() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationEnumAsyncResult::get_Items

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluationEnumAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluationEnumAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]
          Items()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult::get_Items()
  } // end of property DkmEvaluationEnumAsyncResult::Items
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrRuntimeDebugMonitor
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags 
          GetNonUserCodeMetadataFlags(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitor::GetNonUserCodeMetadataFlags

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrNativeCodeMapEntry[] 
          GetNativeCodeMap(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress,
                           class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitor::GetNativeCodeMap

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetMetaDataBytes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitor::GetMetaDataBytes

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrRuntimeDebugMonitor

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrRuntimeDebugMonitorDirect
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugAppDomain 
          GetCorAppDomain(class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitorDirect::GetCorAppDomain

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugThread 
          GetCorThread(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                       class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitorDirect::GetCorThread

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugProcess 
          GetCorProcess(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitorDirect::GetCorProcess

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugModule 
          GetCorModule(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitorDirect::GetCorModule

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFunction 
          GetCorFunction(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionAddress clrAddress) cil managed
  {
  } // end of method IDkmClrRuntimeDebugMonitorDirect::GetCorFunction

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrRuntimeDebugMonitorDirect

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolCallback
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodSymbolStoreData(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                   valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId methodId) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetMethodSymbolStoreData

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          GetFirstMethodInFirstDocument(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetFirstMethodInFirstDocument

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodSymbolStoreDataPreRemap(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                           valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId methodId,
                                           [out] int32& remapToken) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetMethodSymbolStoreDataPreRemap

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetTokenSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                         int32 parentToken,
                                                         bool isPreRemap,
                                                         string attributeName) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetTokenSymbolStoreAttribute

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAsyncMethodLocation 
          GetAsyncMethodLocation(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetAsyncMethodLocation

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo[] 
          GetAllAwaitExpressionInfoForStatement(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetAllAwaitExpressionInfoForStatement

  .method public hidebysig newslot abstract virtual 
          instance bool  GetAsyncMethodCatchHandlerILOffset(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction,
                                                            [out] uint32& catchHandlerILOffset) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetAsyncMethodCatchHandlerILOffset

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrAwaitExpressionInfo 
          GetNextAwaitExpressionInfo(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetNextAwaitExpressionInfo

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAsyncKickoffMethod(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction) cil managed
  {
  } // end of method IDkmClrSymbolCallback::GetAsyncKickoffMethod

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolCallback120
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          GetMethodLocalSymbols(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction) cil managed
  {
  } // end of method IDkmClrSymbolCallback120::GetMethodLocalSymbols

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetMethodSymbolStoreAttribute(class Microsoft.VisualStudio.Debugger.Clr.DkmClrInstructionSymbol clrInstruction,
                                                          string attributeName) cil managed
  {
  } // end of method IDkmClrSymbolCallback120::GetMethodSymbolStoreAttribute

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolCallback120

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolSignatureCallback
{
  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetSignatureForConstant(class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalConstant clrLocalConstant) cil managed
  {
  } // end of method IDkmClrSymbolSignatureCallback::GetSignatureForConstant

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetSignatureForVariable(class Microsoft.VisualStudio.Debugger.Clr.DkmClrLocalVariable clrLocalVariable) cil managed
  {
  } // end of method IDkmClrSymbolSignatureCallback::GetSignatureForVariable

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrSymbolSignatureCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrTypeResolver
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 
          ResolveMethodName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType,
                            string methodName,
                            class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> parameterTypes) cil managed
  {
  } // end of method IDkmClrTypeResolver::ResolveMethodName

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          ResolveTypeName(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance,
                          string typeName,
                          class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericParameters) cil managed
  {
  } // end of method IDkmClrTypeResolver::ResolveTypeName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrTypeResolver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrUIVisualizerService
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          InitSourceDataProvider(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy) cil managed
  {
  } // end of method IDkmClrUIVisualizerService::InitSourceDataProvider

  .method public hidebysig newslot abstract virtual 
          instance void  GetManagedViewerCreationData(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy,
                                                      [out] string& assemblyName,
                                                      [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& assemblyBytes,
                                                      [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& assemblyPdb,
                                                      [out] string& className,
                                                      [out] uint32& assemblyResolution,
                                                      [out] bool& replacementOk) cil managed
  {
  } // end of method IDkmClrUIVisualizerService::GetManagedViewerCreationData

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          InPlaceUpdateObject(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy,
                              uint8[] dataIn) cil managed
  {
  } // end of method IDkmClrUIVisualizerService::InPlaceUpdateObject

  .method public hidebysig newslot abstract virtual 
          instance void  ResolveAssemblyReference(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy,
                                                  string assemblyName,
                                                  uint32 'flags',
                                                  [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& assemblyBytes,
                                                  [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& assemblyPdb,
                                                  [out] string& assemblyLocation,
                                                  [out] uint32& assemblyResolution) cil managed
  {
  } // end of method IDkmClrUIVisualizerService::ResolveAssemblyReference

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrUIVisualizerService

.class public auto ansi Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 36 61 37 36 31 65 32 2D 30 39 61 64   // ..$26a761e2-09ad
                                                                                                  2D 32 61 33 65 2D 36 63 39 66 2D 63 63 37 39 39   // -2a3e-6c9f-cc799
                                                                                                  64 66 33 30 38 32 38 00 00 )                      // df30828..
  .method public hidebysig specialname instance uint32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::get_Id

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult 
          get_EvaluationResult() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::get_EvaluationResult

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::get_UniqueId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy 
          Create(uint32 Id,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult EvaluationResult,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::Create

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          InitSourceDataProvider() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::InitSourceDataProvider

  .method public hidebysig instance void 
          GetManagedViewerCreationData([out] string& AssemblyName,
                                       [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& AssemblyBytes,
                                       [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& AssemblyPdb,
                                       [out] string& ClassName,
                                       [out] uint32& AssemblyResolution,
                                       [out] bool& ReplacementOk) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::GetManagedViewerCreationData

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          InPlaceUpdateObject(uint8[] DataIn) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::InPlaceUpdateObject

  .method public hidebysig instance void 
          ResolveAssemblyReference(string AssemblyName,
                                   uint32 Flags,
                                   [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& AssemblyBytes,
                                   [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>& AssemblyPdb,
                                   [out] string& AssemblyLocation,
                                   [out] uint32& AssemblyResolution) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::ResolveAssemblyReference

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetInitialData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::GetInitialData

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          CreateReplacementObject(uint8[] DataIn) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPropertyProxy::CreateReplacementObject

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult
          EvaluationResult()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmSuccessEvaluationResult Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_EvaluationResult()
  } // end of property DkmPropertyProxy::EvaluationResult
  .property instance uint32 Id()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_Id()
  } // end of property DkmPropertyProxy::Id
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy::get_UniqueId()
  } // end of property DkmPropertyProxy::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrUIVisualizerService120
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetInitialData(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy) cil managed
  {
  } // end of method IDkmClrUIVisualizerService120::GetInitialData

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          CreateReplacementObject(class Microsoft.VisualStudio.Debugger.Internal.DkmPropertyProxy propertyProxy,
                                  uint8[] dataIn) cil managed
  {
  } // end of method IDkmClrUIVisualizerService120::CreateReplacementObject

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrUIVisualizerService120

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrValueInspectionCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute> 
          GetEvalAttributes(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType clrType) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::GetEvalAttributes

  .method public hidebysig newslot abstract virtual 
          instance string  EvaluateToString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::EvaluateToString

  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateDebuggerDisplayString(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                                       class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                       class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                                       class Microsoft.VisualStudio.Debugger.Clr.DkmClrType targetType,
                                                       string formatString,
                                                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::EvaluateDebuggerDisplayString

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          InstantiateProxyType(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                               class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 'type') cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::InstantiateProxyType

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          InstantiateResultsViewProxy(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                      class Microsoft.VisualStudio.Debugger.Clr.DkmClrType enumerableType) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::InstantiateResultsViewProxy

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetMemberValue(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                         string memberName,
                         int32 memberType,
                         string parentTypeName,
                         class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::GetMemberValue

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          GetArrayElement(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                          int32[] index,
                          class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::GetArrayElement

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue 
          Dereference(class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrValue clrValue,
                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext) cil managed
  {
  } // end of method IDkmClrValueInspectionCallback::Dereference

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmClrValueInspectionCallback

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateDebuggerDisplayStringAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateDebuggerDisplayStringAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateDebuggerDisplayStringAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateDebuggerDisplayStringAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluateDebuggerDisplayStringAsyncResult::ErrorCode
  .property instance string Result()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult::get_Result()
  } // end of property DkmEvaluateDebuggerDisplayStringAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmEvaluateDebuggerDisplayStringAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCompiledInspectionQueryProcessor
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          ExecuteQuery(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery query,
                       class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> parameters,
                       class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                       uint32 timeout,
                       valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags funcEvalFlags,
                       [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& failureReason) cil managed
  {
  } // end of method IDkmCompiledInspectionQueryProcessor::ExecuteQuery

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCompiledInspectionQueryProcessor

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 39 32 61 64 38 38 36 2D 32 32 33 35   // ..$892ad886-2235
                                                                                                  2D 39 34 31 31 2D 62 35 38 38 2D 61 31 64 61 32   // -9411-b588-a1da2
                                                                                                  30 38 38 37 37 32 39 00 00 )                      // 0887729..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::get_SourceId

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ResultBytes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::get_ResultBytes

  .method public hidebysig specialname instance bool 
          get_IsPseudoAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::get_IsPseudoAddress

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_DereferencedBytes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::get_DereferencedBytes

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ResultBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ResultBytes,
                 bool IsPseudoAddress,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> DereferencedBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEvaluationResult::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          DereferencedBytes()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult::get_DereferencedBytes()
  } // end of property DkmILEvaluationResult::DereferencedBytes
  .property instance bool IsPseudoAddress()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult::get_IsPseudoAddress()
  } // end of property DkmILEvaluationResult::IsPseudoAddress
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ResultBytes()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult::get_ResultBytes()
  } // end of property DkmILEvaluationResult::ResultBytes
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult::get_SourceId()
  } // end of property DkmILEvaluationResult::SourceId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 61 61 36 35 35 31 65 2D 61 39 63 63   // ..$2aa6551e-a9cc
                                                                                                  2D 62 31 64 35 2D 64 38 38 30 2D 35 65 61 30 66   // -b1d5-d880-5ea0f
                                                                                                  32 31 66 64 35 65 36 00 00 )                      // 21fd5e6..
  .method public hidebysig specialname instance uint32 
          get_LocalIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValue::get_LocalIndex

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_ValueBytes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValue::get_ValueBytes

  .method public hidebysig specialname instance bool 
          get_IsByRef() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValue::get_IsByRef

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue 
          Create(uint32 LocalIndex,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ValueBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValue::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue 
          Create(uint32 LocalIndex,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> ValueBytes,
                 bool IsByRef) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValue::Create

  .property instance bool IsByRef()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue::get_IsByRef()
  } // end of property DkmILParameterValue::IsByRef
  .property instance uint32 LocalIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue::get_LocalIndex()
  } // end of property DkmILParameterValue::LocalIndex
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          ValueBytes()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue::get_ValueBytes()
  } // end of property DkmILParameterValue::ValueBytes
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmComputeKernelExitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnComputeKernelExit(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                             int32 exitCode,
                                             class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmComputeKernelExitNotification::OnComputeKernelExit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmComputeKernelExitNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmContinueExecution
{
  .method public hidebysig newslot abstract virtual 
          instance void  ContinueExecution(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmContinueExecution::ContinueExecution

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmContinueExecution

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomMessageCallbackReceiver
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          SendHigher(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage) cil managed
  {
  } // end of method IDkmCustomMessageCallbackReceiver::SendHigher

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomMessageCallbackReceiver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomMessageForwardReceiver
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmCustomMessage 
          SendLower(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage) cil managed
  {
  } // end of method IDkmCustomMessageForwardReceiver::SendLower

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomMessageForwardReceiver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomStopNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnCustomStop(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage,
                                      class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                      valuetype [mscorlib]System.Guid vsService,
                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmCustomStopNotification::OnCustomStop

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomStopNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomStopReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnCustomStopReceived(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              valuetype [mscorlib]System.Guid vsService,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmCustomStopReceived::OnCustomStopReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomStopReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomVisualizer
{
  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateVisualizedExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                      [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& resultObject) cil managed
  {
  } // end of method IDkmCustomVisualizer::EvaluateVisualizedExpression

  .method public hidebysig newslot abstract virtual 
          instance void  UseDefaultEvaluationBehavior(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                      [out] bool& useDefaultEvaluationBehavior,
                                                      [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& defaultEvaluationResult) cil managed
  {
  } // end of method IDkmCustomVisualizer::UseDefaultEvaluationBehavior

  .method public hidebysig newslot abstract virtual 
          instance void  GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                     int32 initialRequestSize,
                                     class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                     [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& initialChildren,
                                     [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& enumContext) cil managed
  {
  } // end of method IDkmCustomVisualizer::GetChildren

  .method public hidebysig newslot abstract virtual 
          instance void  GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext,
                                  int32 startIndex,
                                  int32 count,
                                  [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& items) cil managed
  {
  } // end of method IDkmCustomVisualizer::GetItems

  .method public hidebysig newslot abstract virtual 
          instance void  SetValueAsString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                          string 'value',
                                          int32 timeout,
                                          [out] string& errorText) cil managed
  {
  } // end of method IDkmCustomVisualizer::SetValueAsString

  .method public hidebysig newslot abstract virtual 
          instance string  GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression) cil managed
  {
  } // end of method IDkmCustomVisualizer::GetUnderlyingString

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomVisualizer

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 64 62 31 31 33 32 64 2D 37 37 61 36   // ..$2db1132d-77a6
                                                                                                  2D 61 65 30 30 2D 61 37 66 37 2D 62 32 63 39 31   // -ae00-a7f7-b2c91
                                                                                                  30 33 32 37 62 35 36 00 00 )                      // 0327b56..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag ChildVisualizedExpression = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag RootVisualizedExpression = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext 
          get_InspectionContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_InspectionContext

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_UniqueId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_VisualizerId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_VisualizerId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_SourceId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          get_StackFrame() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_StackFrame

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome 
          get_ValueHome() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_ValueHome

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_InspectionSession

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::Close

  .method public hidebysig instance void 
          EvaluateVisualizedExpression([out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& ResultObject) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::EvaluateVisualizedExpression

  .method public hidebysig instance void 
          UseDefaultEvaluationBehavior([out] bool& UseDefaultEvaluationBehavior,
                                       [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& DefaultEvaluationResult) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::UseDefaultEvaluationBehavior

  .method public hidebysig instance void 
          GetChildren(int32 InitialRequestSize,
                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                      [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& InitialChildren,
                      [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& EnumContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetChildren

  .method public hidebysig instance void 
          GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext,
                   int32 StartIndex,
                   int32 Count,
                   [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression[]& Items) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetItems

  .method public hidebysig instance void 
          SetValueAsString(string Value,
                           int32 Timeout,
                           [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::SetValueAsString

  .method public hidebysig instance string 
          GetUnderlyingString() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetUnderlyingString

  .method public hidebysig instance void 
          GetSymbolInterface(valuetype [mscorlib]System.Guid TypeSymbolInterfaceId,
                             [out] object& TypeSymbolInterface) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetSymbolInterface

  .method public hidebysig instance void 
          EvaluateExpressionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                                     class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression,
                                     class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                                     [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& ResultObject) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::EvaluateExpressionCallback

  .method public hidebysig instance string 
          CreateDefaultChildFullName(int32 Index) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::CreateDefaultChildFullName

  .method public hidebysig instance void 
          GetChildrenCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult,
                              int32 InitialRequestSize,
                              class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                              [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& InitialChildren,
                              [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& EnumContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetChildrenCallback

  .method public hidebysig instance void 
          GetItemsCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext,
                           int32 StartIndex,
                           int32 Count,
                           [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& Items) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetItemsCallback

  .method public hidebysig instance void 
          SetValueAsStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult,
                                   string Value,
                                   int32 Timeout,
                                   [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::SetValueAsStringCallback

  .method public hidebysig instance string 
          GetUnderlyingStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult DefaultEvaluationResult) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVisualizedExpression::GetUnderlyingStringCallback

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext
          InspectionContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_InspectionContext()
  } // end of property DkmVisualizedExpression::InspectionContext
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_InspectionSession()
  } // end of property DkmVisualizedExpression::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_RuntimeInstance()
  } // end of property DkmVisualizedExpression::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_SourceId()
  } // end of property DkmVisualizedExpression::SourceId
  .property instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame
          StackFrame()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_StackFrame()
  } // end of property DkmVisualizedExpression::StackFrame
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_TagValue()
  } // end of property DkmVisualizedExpression::TagValue
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_UniqueId()
  } // end of property DkmVisualizedExpression::UniqueId
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
          ValueHome()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_ValueHome()
  } // end of property DkmVisualizedExpression::ValueHome
  .property instance valuetype [mscorlib]System.Guid
          VisualizerId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression::get_VisualizerId()
  } // end of property DkmVisualizedExpression::VisualizerId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 38 65 36 66 66 32 37 2D 30 63 64 66   // ..$08e6ff27-0cdf
                                                                                                  2D 65 61 36 37 2D 64 63 31 61 2D 34 66 61 39 35   // -ea67-dc1a-4fa95
                                                                                                  38 64 33 66 62 62 64 00 00 )                      // 8d3fbbd..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_EvaluationResult() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmChildVisualizedExpression::get_EvaluationResult

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression 
          get_Parent() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmChildVisualizedExpression::get_Parent

  .method public hidebysig specialname instance uint32 
          get_Index() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmChildVisualizedExpression::get_Index

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 valuetype [mscorlib]System.Guid VisualizerId,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult EvaluationResult,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression Parent,
                 uint32 Index,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmChildVisualizedExpression::Create

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          EvaluationResult()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_EvaluationResult()
  } // end of property DkmChildVisualizedExpression::EvaluationResult
  .property instance uint32 Index()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_Index()
  } // end of property DkmChildVisualizedExpression::Index
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
          Parent()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression::get_Parent()
  } // end of property DkmChildVisualizedExpression::Parent
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmChildVisualizedExpression

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomVisualizerCallback
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetSymbolInterface(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                            valuetype [mscorlib]System.Guid typeSymbolInterfaceId,
                                            [out] object& typeSymbolInterface) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::GetSymbolInterface

  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateExpressionCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                                    class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                                    [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult& resultObject) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::EvaluateExpressionCallback

  .method public hidebysig newslot abstract virtual 
          instance string  CreateDefaultChildFullName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                      int32 index) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::CreateDefaultChildFullName

  .method public hidebysig newslot abstract virtual 
          instance void  GetChildrenCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                             class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult,
                                             int32 initialRequestSize,
                                             class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                             [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& initialChildren,
                                             [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext& enumContext) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::GetChildrenCallback

  .method public hidebysig newslot abstract virtual 
          instance void  GetItemsCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                          class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext,
                                          int32 startIndex,
                                          int32 count,
                                          [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]& items) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::GetItemsCallback

  .method public hidebysig newslot abstract virtual 
          instance void  SetValueAsStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult,
                                                  string 'value',
                                                  int32 timeout,
                                                  [out] string& errorText) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::SetValueAsStringCallback

  .method public hidebysig newslot abstract virtual 
          instance string  GetUnderlyingStringCallback(class Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression visualizedExpression,
                                                       class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult defaultEvaluationResult) cil managed
  {
  } // end of method IDkmCustomVisualizerCallback::GetUnderlyingStringCallback

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmCustomVisualizerCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDebugMonitorExceptionNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnDebugMonitorException(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception,
                                                 class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                 class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmDebugMonitorExceptionNotification::OnDebugMonitorException

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDebugMonitorExceptionNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDeploymentCommandCallback
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessExit(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand,
                                       int32 exitCode) cil managed
  {
  } // end of method IDkmDeploymentCommandCallback::OnProcessExit

  .method public hidebysig newslot abstract virtual 
          instance void  OnStdOut(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand,
                                  string text) cil managed
  {
  } // end of method IDkmDeploymentCommandCallback::OnStdOut

  .method public hidebysig newslot abstract virtual 
          instance void  OnStdErr(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand deploymentCommand,
                                  string text) cil managed
  {
  } // end of method IDkmDeploymentCommandCallback::OnStdErr

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDeploymentCommandCallback

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 30 31 34 38 34 62 32 2D 34 34 32 62   // ..$301484b2-442b
                                                                                                  2D 61 36 66 37 2D 66 32 35 38 2D 34 38 64 62 33   // -a6f7-f258-48db3
                                                                                                  64 39 64 31 32 31 61 00 00 )                      // d9d121a..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_Connection

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_SourceId

  .method public hidebysig specialname instance string 
          get_RemoteExecutable() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_RemoteExecutable

  .method public hidebysig specialname instance string 
          get_Arguments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_Arguments

  .method public hidebysig specialname instance string 
          get_CurrentDirectory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_CurrentDirectory

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::get_Flags

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 valuetype [mscorlib]System.Guid SourceId,
                 string RemoteExecutable,
                 string Arguments,
                 string CurrentDirectory,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Flags,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::Create

  .method public hidebysig instance void 
          OnProcessExit(int32 ExitCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::OnProcessExit

  .method public hidebysig instance void 
          OnStdOut(string Text) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::OnStdOut

  .method public hidebysig instance void 
          OnStdErr(string Text) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::OnStdErr

  .method public hidebysig instance void 
          Start() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::Start

  .method public hidebysig instance void 
          Abort() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDeploymentCommand::Abort

  .property instance string Arguments()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Arguments()
  } // end of property DkmDeploymentCommand::Arguments
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Connection()
  } // end of property DkmDeploymentCommand::Connection
  .property instance string CurrentDirectory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_CurrentDirectory()
  } // end of property DkmDeploymentCommand::CurrentDirectory
  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_Flags()
  } // end of property DkmDeploymentCommand::Flags
  .property instance string RemoteExecutable()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_RemoteExecutable()
  } // end of property DkmDeploymentCommand::RemoteExecutable
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_SourceId()
  } // end of property DkmDeploymentCommand::SourceId
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand::get_UniqueId()
  } // end of property DkmDeploymentCommand::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommand

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDisassemblyProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] 
          Disassemble(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                      class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address,
                      uint32 count) cil managed
  {
  } // end of method IDkmDisassemblyProvider::Disassemble

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                class Microsoft.VisualStudio.Debugger.DkmInstructionAddress startAddress,
                                int32 instructionOffset) cil managed
  {
  } // end of method IDkmDisassemblyProvider::GetInstructionAddress

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddress> 
          GetEffectiveAddresses(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame frame,
                                class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address) cil managed
  {
  } // end of method IDkmDisassemblyProvider::GetEffectiveAddresses

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDisassemblyProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDumpWriter
{
  .method public hidebysig newslot abstract virtual 
          instance void  WriteDump(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                   valuetype Microsoft.VisualStudio.Debugger.DkmDumpType dumpType,
                                   string path,
                                   class Microsoft.VisualStudio.Debugger.DkmThread targetThread) cil managed
  {
  } // end of method IDkmDumpWriter::WriteDump

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmDumpWriter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEditAndContinueService
{
  .method public hidebysig newslot abstract virtual 
          instance bool  IsStaleCode(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                     class Microsoft.VisualStudio.Debugger.DkmModuleInstance module,
                                     bool isLeafFrame) cil managed
  {
  } // end of method IDkmEditAndContinueService::IsStaleCode

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEditAndContinueService

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEmbeddedBreakpointHitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnEmbeddedBreakpointHit(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                                 bool showAsException,
                                                 class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmEmbeddedBreakpointHitNotification::OnEmbeddedBreakpointHit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEmbeddedBreakpointHitNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEmbeddedBreakpointHitReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnEmbeddedBreakpointHitReceived(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                         class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                                         bool showAsException,
                                                         class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmEmbeddedBreakpointHitReceived::OnEmbeddedBreakpointHitReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEmbeddedBreakpointHitReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEntryPointNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnEntryPoint(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                      class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmEntryPointNotification::OnEntryPoint

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEntryPointNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEntryPointReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnEntryPointReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmEntryPointReceived::OnEntryPointReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmEntryPointReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionContinuedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnExceptionContinued(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception,
                                              class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmExceptionContinuedNotification::OnExceptionContinued

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionContinuedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionController
{
  .method public hidebysig newslot abstract virtual 
          instance bool  CanModifyProcessing(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception) cil managed
  {
  } // end of method IDkmExceptionController::CanModifyProcessing

  .method public hidebysig newslot abstract virtual 
          instance void  SquashProcessing(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception) cil managed
  {
  } // end of method IDkmExceptionController::SquashProcessing

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionController

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionFormatter
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetDescription(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception) cil managed
  {
  } // end of method IDkmExceptionFormatter::GetDescription

  .method public hidebysig newslot abstract virtual 
          instance string  GetAdditionalInformation(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception) cil managed
  {
  } // end of method IDkmExceptionFormatter::GetAdditionalInformation

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionFormatter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionManager
{
  .method public hidebysig newslot abstract virtual 
          instance void  AddExceptionTrigger(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                             valuetype [mscorlib]System.Guid sourceId,
                                             class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger trigger) cil managed
  {
  } // end of method IDkmExceptionManager::AddExceptionTrigger

  .method public hidebysig newslot abstract virtual 
          instance void  ClearExceptionTriggers(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                valuetype [mscorlib]System.Guid sourceId) cil managed
  {
  } // end of method IDkmExceptionManager::ClearExceptionTriggers

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionManager

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionStackTraceProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> 
          GetExceptionStackTrace(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception) cil managed
  {
  } // end of method IDkmExceptionStackTraceProvider::GetExceptionStackTrace

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionStackTraceProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionTriggerHitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnExceptionTriggerHit(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit hit,
                                               class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmExceptionTriggerHitNotification::OnExceptionTriggerHit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionTriggerHitNotification

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 64 37 61 65 65 36 30 2D 64 63 38 64   // ..$4d7aee60-dc8d
                                                                                                  2D 37 39 34 63 2D 39 38 63 32 2D 37 66 34 37 30   // -794c-98c2-7f470
                                                                                                  34 65 65 62 35 64 31 00 00 )                      // 4eeb5d1..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation 
          get_Exception() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_Exception

  .method public hidebysig specialname instance string 
          get_Description() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_Description

  .method public hidebysig specialname instance string 
          get_RestrictedErrorDescription() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_RestrictedErrorDescription

  .method public hidebysig specialname instance string 
          get_CapabilitySid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_CapabilitySid

  .method public hidebysig specialname instance string 
          get_RestrictedReference() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_RestrictedReference

  .method public hidebysig specialname instance string 
          get_AdditionalInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_AdditionalInformation

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_SourceId

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> 
          get_StackTrace() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_StackTrace

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_Process

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_Thread

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::get_RuntimeInstance

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit 
          Create(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Exception,
                 string Description,
                 string RestrictedErrorDescription,
                 string CapabilitySid,
                 string RestrictedReference,
                 string AdditionalInformation,
                 valuetype [mscorlib]System.Guid SourceId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit 
          Create(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Exception,
                 string Description,
                 string RestrictedErrorDescription,
                 string CapabilitySid,
                 string RestrictedReference,
                 string AdditionalInformation,
                 valuetype [mscorlib]System.Guid SourceId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> StackTrace) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::Create

  .method public hidebysig instance void 
          Send() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionTriggerHit::Send

  .property instance string AdditionalInformation()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_AdditionalInformation()
  } // end of property DkmExceptionTriggerHit::AdditionalInformation
  .property instance string CapabilitySid()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_CapabilitySid()
  } // end of property DkmExceptionTriggerHit::CapabilitySid
  .property instance string Description()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Description()
  } // end of property DkmExceptionTriggerHit::Description
  .property instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
          Exception()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Exception()
  } // end of property DkmExceptionTriggerHit::Exception
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Process()
  } // end of property DkmExceptionTriggerHit::Process
  .property instance string RestrictedErrorDescription()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RestrictedErrorDescription()
  } // end of property DkmExceptionTriggerHit::RestrictedErrorDescription
  .property instance string RestrictedReference()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RestrictedReference()
  } // end of property DkmExceptionTriggerHit::RestrictedReference
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_RuntimeInstance()
  } // end of property DkmExceptionTriggerHit::RuntimeInstance
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_SourceId()
  } // end of property DkmExceptionTriggerHit::SourceId
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress>
          StackTrace()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_StackTrace()
  } // end of property DkmExceptionTriggerHit::StackTrace
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit::get_Thread()
  } // end of property DkmExceptionTriggerHit::Thread
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionTriggerHitReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnExceptionTriggerHitReceived(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTriggerHit hit,
                                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmExceptionTriggerHitReceived::OnExceptionTriggerHitReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionTriggerHitReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionWinRTErrorExtractor
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetWinRTErrorInfo(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception,
                                           [out] string& restrictedDescription,
                                           [out] string& restrictedErrorReference,
                                           [out] string& restrictedCapabilitySid) cil managed
  {
  } // end of method IDkmExceptionWinRTErrorExtractor::GetWinRTErrorInfo

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExceptionWinRTErrorExtractor

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExtendedRegisters
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmUnwoundRegister[] 
          GetExtendedRegisters(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmExtendedRegisters::GetExtendedRegisters

  .method public hidebysig newslot abstract virtual 
          instance void  SetExtendedRegisterValue(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                  int32 registerIndex,
                                                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 'value') cil managed
  {
  } // end of method IDkmExtendedRegisters::SetExtendedRegisterValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmExtendedRegisters

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFrameExceptionInterceptProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  InterceptCurrentException(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                                   valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInterceptActionFlags interceptAction,
                                                   [out] uint64& cookie) cil managed
  {
  } // end of method IDkmFrameExceptionInterceptProvider::InterceptCurrentException

  .method public hidebysig newslot abstract virtual 
          instance void  GetUnwindAddress(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                          [out] class Microsoft.VisualStudio.Debugger.DkmInstructionAddress& newAddress) cil managed
  {
  } // end of method IDkmFrameExceptionInterceptProvider::GetUnwindAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFrameExceptionInterceptProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFuncEvalCompletedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnFuncEvalCompleted(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                             valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags',
                                             class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmFuncEvalCompletedNotification::OnFuncEvalCompleted

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFuncEvalCompletedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFuncEvalStartingNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnFuncEvalStarting(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                            valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags 'flags',
                                            class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmFuncEvalStartingNotification::OnFuncEvalStarting

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFuncEvalStartingNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFunctionTableProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          GetFunctionTableEntry(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance,
                                uint64 address) cil managed
  {
  } // end of method IDkmFunctionTableProvider::GetFunctionTableEntry

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          SearchRuntimeFunctionTable(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                     uint64 address,
                                     [out] uint64& baseAddress) cil managed
  {
  } // end of method IDkmFunctionTableProvider::SearchRuntimeFunctionTable

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmFunctionTableProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUBreakpointBehaviorQuery
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUBreakpointBehaviorFlags 
          GetGPUBreakpointBehavior(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmGPUBreakpointBehaviorQuery::GetGPUBreakpointBehavior

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUBreakpointBehaviorQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUComputeKernelOperation
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetComputeVectorWidth(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                               [out] int32& width) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetComputeVectorWidth

  .method public hidebysig newslot abstract virtual 
          instance void  GetActiveThreadGroups(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                               [out] int64[]& activeThreadGroups,
                                               [out] int32& numberOfGroups) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetActiveThreadGroups

  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentThreadDimensions(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                                    [out] int32[]& threadDimensions,
                                                    [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetCurrentThreadDimensions

  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentGroupDimensions(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                                   [out] int32[]& groupDimensions,
                                                   [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetCurrentGroupDimensions

  .method public hidebysig newslot abstract virtual 
          instance void  GetThisThreadDimension(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                                [out] int32[]& threadDimensions,
                                                [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetThisThreadDimension

  .method public hidebysig newslot abstract virtual 
          instance void  GetThisGroupDimension(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                               [out] int32[]& groupDimensions,
                                               [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetThisGroupDimension

  .method public hidebysig newslot abstract virtual 
          instance string  GetComputeKernelName(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetComputeKernelName

  .method public hidebysig newslot abstract virtual 
          instance void  GetComputeKernelProperties(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                                    [out] valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty[]& computeProperties,
                                                    [out] int32& numberOfProperties) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetComputeKernelProperties

  .method public hidebysig newslot abstract virtual 
          instance void  GetThreadId(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                     [out] int32[]& threadDimensions,
                                     [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetThreadId

  .method public hidebysig newslot abstract virtual 
          instance void  GetGroupId(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                    [out] int32[]& groupDimensions,
                                    [out] int32& numberOfDimensions) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetGroupId

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo[] 
          Select(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> from,
                 valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause where) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::Select

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo[] 
          GroupBy(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                  valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags groupByFlags,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> from,
                  valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause where) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GroupBy

  .method public hidebysig newslot abstract virtual 
          instance uint64[]  GetStoppedThreads(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetStoppedThreads

  .method public hidebysig newslot abstract virtual 
          instance void  GetThreadFromId(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                         uint64 threadId,
                                         [out] class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread& thread) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetThreadFromId

  .method public hidebysig newslot abstract virtual 
          instance void  UpdateFlaggedState(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                            valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause where,
                                            bool flagged) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::UpdateFlaggedState

  .method public hidebysig newslot abstract virtual 
          instance void  UpdateFrozenState(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                           valuetype Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause where,
                                           bool frozen) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::UpdateFrozenState

  .method public hidebysig newslot abstract virtual 
          instance void  GetFlatComputeKernelDimensions(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel computeKernel,
                                                        [out] int32[]& flatThreadDimensions,
                                                        [out] int32[]& flatIndexBase,
                                                        [out] int32& numberOfDimensions,
                                                        [out] valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel& model) cil managed
  {
  } // end of method IDkmGPUComputeKernelOperation::GetFlatComputeKernelDimensions

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUComputeKernelOperation

.class public auto ansi Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread
       extends Microsoft.VisualStudio.Debugger.DkmThread
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 30 63 62 62 32 36 64 2D 30 35 66 35   // ..$40cbb26d-05f5
                                                                                                  2D 64 63 33 30 2D 34 39 66 39 2D 37 39 37 62 31   // -dc30-49f9-797b1
                                                                                                  37 66 32 61 62 39 65 00 00 )                      // 7f2ab9e..
  .method public hidebysig specialname instance int64 
          get_GlobalThreadIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::get_GlobalThreadIndex

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel 
          get_ComputeKernel() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::get_ComputeKernel

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_NativeThread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::get_NativeThread

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 uint64 NativeStartAddress,
                 bool IsMainThread,
                 int64 GlobalThreadIndex,
                 class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel ComputeKernel,
                 class Microsoft.VisualStudio.Debugger.DkmThread/System System,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 uint64 NativeStartAddress,
                 bool IsMainThread,
                 int64 GlobalThreadIndex,
                 class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel ComputeKernel,
                 class Microsoft.VisualStudio.Debugger.DkmThread NativeThread,
                 class Microsoft.VisualStudio.Debugger.DkmThread/System System,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::Create

  .method public hidebysig instance void 
          GetThisThreadDimension([out] int32[]& ThreadDimensions,
                                 [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::GetThisThreadDimension

  .method public hidebysig instance void 
          GetThisGroupDimension([out] int32[]& GroupDimensions,
                                [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::GetThisGroupDimension

  .method public hidebysig instance void 
          GetThreadId([out] int32[]& ThreadDimensions,
                      [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::GetThreadId

  .method public hidebysig instance void 
          GetGroupId([out] int32[]& GroupDimensions,
                     [out] int32& NumberOfDimensions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::GetGroupId

  .method public hidebysig instance int32 
          ReadMemory(uint64 Address,
                     uint64 InstructionPointer,
                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                     void* Buffer,
                     int32 Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::ReadMemory

  .method public hidebysig instance int32 
          ReadMemory(uint64 Address,
                     uint64 InstructionPointer,
                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                     uint8[] Buffer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::ReadMemory

  .method public hidebysig instance void 
          WriteMemory(uint64 Address,
                      uint64 InstructionPointer,
                      uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::WriteMemory

  .method public hidebysig instance uint32 
          UpdateBufferTag(uint32 InputTag) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::UpdateBufferTag

  .method public hidebysig instance bool 
          ValidateAddress(uint64 Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::ValidateAddress

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription[] 
          GetRegisterDescriptions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::GetRegisterDescriptions

  .method public hidebysig instance void 
          SetRegisterValue(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription RegisterDescription,
                           class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> RegisterValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUComputeThread::SetRegisterValue

  .property instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel
          ComputeKernel()
  {
    .get instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeKernel Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread::get_ComputeKernel()
  } // end of property DkmGPUComputeThread::ComputeKernel
  .property instance int64 GlobalThreadIndex()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread::get_GlobalThreadIndex()
  } // end of property DkmGPUComputeThread::GlobalThreadIndex
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          NativeThread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread::get_NativeThread()
  } // end of property DkmGPUComputeThread::NativeThread
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 36 37 39 32 65 64 65 2D 31 64 36 39   // ..$a6792ede-1d69
                                                                                                  2D 37 37 32 39 2D 34 65 35 62 2D 66 36 64 65 30   // -7729-4e5b-f6de0
                                                                                                  65 33 61 66 62 33 62 00 00 )                      // e3afb3b..
  .field public initonly string Name
  .field public initonly string Value
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string Name,
                               string Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComputeProperty::.ctor

} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmComputeProperty

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 30 36 34 35 36 39 32 2D 66 36 62 65   // ..$30645692-f6be
                                                                                                  2D 65 62 36 35 2D 61 32 62 38 2D 37 31 39 66 62   // -eb65-a2b8-719fb
                                                                                                  30 33 33 65 30 32 30 00 00 )                      // 033e020..
  .field public initonly uint32 ThreadCount
  .field public initonly uint32 VectorId
  .field public initonly uint64 ThreadGroupId
  .field public initonly uint64 ThreadId
  .field public initonly uint64 InstructionPointer
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState ThreadState
  .field public initonly  marshal( unsigned int8) bool FlaggedState
  .field public initonly  marshal( unsigned int8) bool FrozenState
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 ThreadCount,
                               uint32 VectorId,
                               uint64 ThreadGroupId,
                               uint64 ThreadId,
                               uint64 InstructionPointer,
                               valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState ThreadState,
                               bool FlaggedState,
                               bool FrozenState) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmComputeThreadInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 33 36 35 35 31 33 64 2D 34 64 33 63   // ..$0365513d-4d3c
                                                                                                  2D 38 36 37 34 2D 66 30 32 65 2D 61 66 39 64 62   // -8674-f02e-af9db
                                                                                                  33 38 64 31 32 66 35 00 00 )                      // 38d12f5..
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags ColumnFlags
  .field public initonly valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo Values
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags ColumnFlags,
                               valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadInfo Values) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWhereClause::.ctor

} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmWhereClause

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags FlaggedState = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags FrozenState = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags InstructionPointer = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags ThreadGroupId = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags ThreadId = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags ThreadState = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags VectorId = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmQueryComputeThreadInfoFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel Flat = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel HLSL = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel Tile = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmComputeKernelModel

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUDisassemblyQuery
{
  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetGPUDisassembly(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                              uint64 address,
                                              uint32 count,
                                              bool isForward,
                                              [out] bool& isEnd) cil managed
  {
  } // end of method IDkmGPUDisassemblyQuery::GetGPUDisassembly

  .method public hidebysig newslot abstract virtual 
          instance uint64  GetGPUDisassemblySize(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmGPUDisassemblyQuery::GetGPUDisassemblySize

  .method public hidebysig newslot abstract virtual 
          instance uint64  GetNextGPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                        uint64 startAddress) cil managed
  {
  } // end of method IDkmGPUDisassemblyQuery::GetNextGPUInstructionAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUDisassemblyQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUEnvironmentFilter
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetGPUAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings debugLaunchSettings,
                                                                valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario scenario) cil managed
  {
  } // end of method IDkmGPUEnvironmentFilter::GetGPUAdditionalEnvironmentVariables

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUEnvironmentFilter

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario AppPackageLaunch = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario ClassicLaunch = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUMemoryOperation
{
  .method public hidebysig newslot abstract virtual 
          instance int32  ReadMemory(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                     uint64 address,
                                     uint64 instructionPointer,
                                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags',
                                     uint8[] buffer) cil managed
  {
  } // end of method IDkmGPUMemoryOperation::ReadMemory

  .method public hidebysig newslot abstract virtual 
          instance void  WriteMemory(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                     uint64 address,
                                     uint64 instructionPointer,
                                     uint8[] data) cil managed
  {
  } // end of method IDkmGPUMemoryOperation::WriteMemory

  .method public hidebysig newslot abstract virtual 
          instance uint32  UpdateBufferTag(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                           uint32 inputTag) cil managed
  {
  } // end of method IDkmGPUMemoryOperation::UpdateBufferTag

  .method public hidebysig newslot abstract virtual 
          instance bool  ValidateAddress(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                         uint64 address) cil managed
  {
  } // end of method IDkmGPUMemoryOperation::ValidateAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUMemoryOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPURegisterOperation
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription[] 
          GetRegisterDescriptions(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread) cil managed
  {
  } // end of method IDkmGPURegisterOperation::GetRegisterDescriptions

  .method public hidebysig newslot abstract virtual 
          instance void  SetRegisterValue(class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread computeThread,
                                          valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription registerDescription,
                                          class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> registerValue) cil managed
  {
  } // end of method IDkmGPURegisterOperation::SetRegisterValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPURegisterOperation

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 62 34 66 39 62 65 61 2D 31 62 34 33   // ..$5b4f9bea-1b43
                                                                                                  2D 36 34 61 34 2D 65 34 34 31 2D 38 62 36 31 66   // -64a4-e441-8b61f
                                                                                                  33 37 37 64 34 31 37 00 00 )                      // 377d417..
  .field public initonly uint32 RegisterIndex
  .field public initonly uint64 RegisterSize
  .field public initonly uint32 RegisterType
  .field public initonly class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> RegisterValue
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 RegisterType,
                               uint32 RegisterIndex,
                               uint64 RegisterSize,
                               class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> RegisterValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPURegisterDescription::.ctor

} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPURegisterDescription

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSetMemoryAccessWarningOperation
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetGPUMemoryAccessWarning(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                   int32 warningCode,
                                                   bool enable) cil managed
  {
  } // end of method IDkmGPUSetMemoryAccessWarningOperation::SetGPUMemoryAccessWarning

  .method public hidebysig newslot abstract virtual 
          instance void  ClearAllGPUMemoryAccessWarnings(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmGPUSetMemoryAccessWarningOperation::ClearAllGPUMemoryAccessWarnings

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSetMemoryAccessWarningOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSingleStepCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnGPUSingleStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest,
                                                 class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                 class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmGPUSingleStepCompleteNotification::OnGPUSingleStepComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSingleStepCompleteNotification

.class public auto ansi Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 35 65 63 32 62 36 62 2D 35 36 31 64   // ..$15ec2b6b-561d
                                                                                                  2D 39 33 64 33 2D 66 37 62 34 2D 35 30 66 62 61   // -93d3-f7b4-50fba
                                                                                                  34 63 62 38 62 62 35 00 00 )                      // 4cb8bb5..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::get_SourceId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_Thread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::get_Thread

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::Create

  .method public hidebysig instance void 
          OnGPUSingleStepComplete(class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::OnGPUSingleStepComplete

  .method public hidebysig instance void 
          EnableTempBreak(int64[] TempBreakInstructions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::EnableTempBreak

  .method public hidebysig instance void 
          ClearTempBreak() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::ClearTempBreak

  .method public hidebysig instance void 
          EnableSingleStep() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::EnableSingleStep

  .method public hidebysig instance void 
          ClearSingleStep() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::ClearSingleStep

  .method public hidebysig instance void 
          OnSingleStepComplete() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSingleStepRequest::OnSingleStepComplete

  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest::get_SourceId()
  } // end of property DkmSingleStepRequest::SourceId
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          Thread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest::get_Thread()
  } // end of property DkmSingleStepRequest::Thread
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSingleStepCompleteReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnGPUSingleStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest,
                                                         class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                         class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmGPUSingleStepCompleteReceived::OnGPUSingleStepCompleteReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSingleStepCompleteReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolProviderCallback
{
  .method public hidebysig newslot abstract virtual 
          instance void  TranslateAcceleratorTagByIP(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                     uint32 inputTag,
                                                     uint32 instructionPointer,
                                                     [out] uint32& registerType,
                                                     [out] uint32& registerIndex,
                                                     [out] uint32& firstElement,
                                                     [out] uint32& vectorElements,
                                                     [out] uint32& byteOffset,
                                                     [out] uint32& vectorElementSize) cil managed
  {
  } // end of method IDkmGPUSymbolProviderCallback::TranslateAcceleratorTagByIP

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType 
          GetGPUInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                            class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                            class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol nextInstruction) cil managed
  {
  } // end of method IDkmGPUSymbolProviderCallback::GetGPUInstructionMetadataCallback

  .method public hidebysig newslot abstract virtual 
          instance string  GetCompilerOptions(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module) cil managed
  {
  } // end of method IDkmGPUSymbolProviderCallback::GetCompilerOptions

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetNoSourceRanges(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction) cil managed
  {
  } // end of method IDkmGPUSymbolProviderCallback::GetNoSourceRanges

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolProviderCallback

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType FunctionCall = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType NoStepInto = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType None = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUAddressType

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 37 30 37 30 35 32 65 2D 62 31 34 65   // ..$1707052e-b14e
                                                                                                  2D 39 30 64 66 2D 64 39 36 61 2D 38 32 38 30 37   // -90df-d96a-82807
                                                                                                  33 31 38 66 30 31 37 00 00 )                      // 318f017..
  .field public initonly uint32 StartOffset
  .field public initonly uint32 Length
  .field public initonly uint32 LineNumber
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 StartOffset,
                               uint32 Length,
                               uint32 LineNumber) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingRange::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolQuery
{
  .method public hidebysig newslot abstract virtual 
          instance void  TranslateAcceleratorTagByRva(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                      uint32 inputTag,
                                                      uint32 rva,
                                                      [out] uint32& registerType,
                                                      [out] uint32& registerIndex,
                                                      [out] uint32& firstElement,
                                                      [out] uint32& vectorElements,
                                                      [out] uint32& byteOffset,
                                                      [out] uint32& vectorElementSize) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::TranslateAcceleratorTagByRva

  .method public hidebysig newslot abstract virtual 
          instance bool  IsValidAcceleratorTag(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                               uint32 inputTag,
                                               uint32 rva) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::IsValidAcceleratorTag

  .method public hidebysig newslot abstract virtual 
          instance uint64  GetPointerToHLSLRegister(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                    int32 registerType,
                                                    uint32 registerIndex,
                                                    uint32 firstElement,
                                                    uint32 vectorElements,
                                                    uint32 byteOffset,
                                                    uint32 vectorElementSize,
                                                    uint32 rva,
                                                    uint32 startLiveRange,
                                                    uint32 endLiveRange,
                                                    [out] bool& isNewDynamicTag) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::GetPointerToHLSLRegister

  .method public hidebysig newslot abstract virtual 
          instance void  SetPointerToHLSLRegister(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                  uint64 address,
                                                  int32 registerType,
                                                  uint32 registerIndex,
                                                  uint32 firstElement,
                                                  uint32 vectorElements,
                                                  uint32 byteOffset,
                                                  uint32 vectorElementSize,
                                                  uint32 startLiveRange,
                                                  uint32 endLiveRange) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::SetPointerToHLSLRegister

  .method public hidebysig newslot abstract virtual 
          instance uint32  GetAcceleratorTagTableSize(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                      [out] uint32& sizeOfForwardedTags) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::GetAcceleratorTagTableSize

  .method public hidebysig newslot abstract virtual 
          instance uint32  GetInstructionOffsetForRva(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                      uint32 rVA) cil managed
  {
  } // end of method IDkmGPUSymbolQuery::GetInstructionOffsetForRva

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolQueryCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetUserCodeSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession) cil managed
  {
  } // end of method IDkmGPUSymbolQueryCallback::GetUserCodeSourcePositionCallback

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUSymbolQueryCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUTempBreakStepper
{
  .method public hidebysig newslot abstract virtual 
          instance void  EnableTempBreak(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest,
                                         int64[] tempBreakInstructions) cil managed
  {
  } // end of method IDkmGPUTempBreakStepper::EnableTempBreak

  .method public hidebysig newslot abstract virtual 
          instance void  ClearTempBreak(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest) cil managed
  {
  } // end of method IDkmGPUTempBreakStepper::ClearTempBreak

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGPUTempBreakStepper

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGpuRaceHazardsAllowSameNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnGpuRaceHazardAllowSameSettingChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmGpuRaceHazardsAllowSameNotification::OnGpuRaceHazardAllowSameSettingChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGpuRaceHazardsAllowSameNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGroupCompiledInspectionQueryProcessor
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult 
          ExecuteQueryOnThreads(class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery dkmILQuery,
                                class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> threads,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> parameters) cil managed
  {
  } // end of method IDkmGroupCompiledInspectionQueryProcessor::ExecuteQueryOnThreads

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGroupCompiledInspectionQueryProcessor

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 62 65 64 30 66 34 35 2D 37 61 62 65   // ..$2bed0f45-7abe
                                                                                                  2D 35 37 31 30 2D 34 33 34 63 2D 33 61 32 35 34   // -5710-434c-3a254
                                                                                                  64 62 36 38 38 39 38 00 00 )                      // db68898..
  .method public hidebysig specialname instance int32 
          get_EvaluationResults() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationILResult::get_EvaluationResults

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> 
          get_ResultData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationILResult::get_ResultData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult 
          Create(int32 EvaluationResults,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> ResultData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationILResult::Create

  .property instance int32 EvaluationResults()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult::get_EvaluationResults()
  } // end of property DkmContextGroupEvaluationILResult::EvaluationResults
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection>
          ResultData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult::get_ResultData()
  } // end of property DkmContextGroupEvaluationILResult::ResultData
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 30 30 34 65 31 65 64 2D 31 38 39 30   // ..$b004e1ed-1890
                                                                                                  2D 61 64 63 61 2D 63 33 35 38 2D 64 34 66 64 37   // -adca-c358-d4fd7
                                                                                                  32 32 65 63 64 39 38 00 00 )                      // 22ecd98..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction> 
          get_Instructions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledILInspectionQuery::get_Instructions

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction> Instructions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledILInspectionQuery::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction> Instructions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledILInspectionQuery::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult 
          ExecuteQueryOnThreads(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> Threads,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> Parameters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledILInspectionQuery::ExecuteQueryOnThreads

  .method public hidebysig instance void 
          ExecuteQueryOnThreads(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                                class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> Threads,
                                class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection> Parameters,
                                class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledILInspectionQuery::ExecuteQueryOnThreads

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction>
          Instructions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery::get_Instructions()
  } // end of property DkmCompiledILInspectionQuery::Instructions
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 39 63 35 32 65 37 37 2D 39 36 66 61   // ..$79c52e77-96fa
                                                                                                  2D 36 37 30 39 2D 63 61 39 34 2D 38 35 64 33 61   // -6709-ca94-85d3a
                                                                                                  38 61 65 36 61 35 65 00 00 )                      // 8ae6a5e..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> 
          get_Parameters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValueCollection::get_Parameters

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> Parameters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILParameterValueCollection::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue>
          Parameters()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILParameterValue> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection::get_Parameters()
  } // end of property DkmILParameterValueCollection::Parameters
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmILParameterValueCollection

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGroupLanguageExpressionEvaluator
{
  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateExpressionOnThreads(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                                     class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                     class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> threads,
                                                     class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                                     class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmGroupLanguageExpressionEvaluator::EvaluateExpressionOnThreads

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmGroupLanguageExpressionEvaluator

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionOnThreadsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionOnThreadsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> 
          get_Results() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionOnThreadsAsyncResult::get_Results

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> Results) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionOnThreadsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluateExpressionOnThreadsAsyncResult::ErrorCode
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult>
          Results()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult::get_Results()
  } // end of property DkmEvaluateExpressionOnThreadsAsyncResult::Results
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmEvaluateExpressionOnThreadsAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHeuristicStackWalker
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          HeuristicWalkFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext,
                              class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers,
                              uint32 requestSize,
                              uint64 endStackPointer,
                              [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& nextRegisters,
                              [out] bool& endOfStack) cil managed
  {
  } // end of method IDkmHeuristicStackWalker::HeuristicWalkFrames

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHeuristicStackWalker

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHiddenEntryPointNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnHiddenEntryPoint(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                            class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                            class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmHiddenEntryPointNotification::OnHiddenEntryPoint

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHiddenEntryPointNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHiddenEntryPointReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnHiddenEntryPointReceived(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                    class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                    class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmHiddenEntryPointReceived::OnHiddenEntryPointReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHiddenEntryPointReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHostingProcessShowNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnHostingProcessShow(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmHostingProcessShowNotification::OnHostingProcessShow

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmHostingProcessShowNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIISDebuggingServices
{
  .method public hidebysig newslot abstract virtual 
          instance void  DiagnoseRemoteWebDebuggingError(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                                         string url) cil managed
  {
  } // end of method IDkmIISDebuggingServices::DiagnoseRemoteWebDebuggingError

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIISDebuggingServices

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIISResolver
{
  .method public hidebysig newslot abstract virtual 
          instance int32[]  ResolveUrlToProcessIds(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                                   string url,
                                                   string dnsNames,
                                                   [out] string& exceptionText) cil managed
  {
  } // end of method IDkmIISResolver::ResolveUrlToProcessIds

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIISResolver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmILFailureReasonResolver
{
  .method public hidebysig newslot abstract virtual 
          instance string  ResolveILFailureReason(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery query,
                                                  valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason errorCode) cil managed
  {
  } // end of method IDkmILFailureReasonResolver::ResolveILFailureReason

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmILFailureReasonResolver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmILInterpreter
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue 
          InterpretManagedMethod(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance,
                                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodId 'method',
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericTypeParameters,
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmClrType> genericMethodParameters,
                                 class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue thisParameter,
                                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterValue> parameters,
                                 int32 maxInstructionCount,
                                 valuetype Microsoft.VisualStudio.Debugger.Clr.DkmILInterpreterOptions options,
                                 [out] string& exceptionType) cil managed
  {
  } // end of method IDkmILInterpreter::InterpretManagedMethod

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmILInterpreter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressOperator
{
  .method public hidebysig newslot abstract virtual 
          instance bool  IsInSameFunction(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                          class Microsoft.VisualStudio.Debugger.DkmInstructionAddress other) cil managed
  {
  } // end of method IDkmInstructionAddressOperator::IsInSameFunction

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressOperator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                               class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                               uint64 instructionPointer,
                                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmGetInstructionAddressAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmInstructionAddressProvider::GetInstructionAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressResolver
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          ResolveCPUInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                       uint64 instructionPointer,
                                       [out] bool& firstAddress) cil managed
  {
  } // end of method IDkmInstructionAddressResolver::ResolveCPUInstructionAddress

  .method public hidebysig newslot abstract virtual 
          instance uint64[]  GetCurrentCPUAddress(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress) cil managed
  {
  } // end of method IDkmInstructionAddressResolver::GetCurrentCPUAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionAddressResolver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionPatchNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnInstructionPatchInserted(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                    uint64 address,
                                                    uint8[] originalMemory) cil managed
  {
  } // end of method IDkmInstructionPatchNotification::OnInstructionPatchInserted

  .method public hidebysig newslot abstract virtual 
          instance void  OnInstructionPatchRemoved(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                   uint64 address,
                                                   uint8[] originalMemory) cil managed
  {
  } // end of method IDkmInstructionPatchNotification::OnInstructionPatchRemoved

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionPatchNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionStepper
{
  .method public hidebysig newslot abstract virtual 
          instance void  EnableSingleStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest) cil managed
  {
  } // end of method IDkmInstructionStepper::EnableSingleStep

  .method public hidebysig newslot abstract virtual 
          instance void  ClearSingleStep(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest) cil managed
  {
  } // end of method IDkmInstructionStepper::ClearSingleStep

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInstructionStepper

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInterceptExceptionCompletedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnInterceptExceptionCompleted(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                       uint64 cookie,
                                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmInterceptExceptionCompletedNotification::OnInterceptExceptionCompleted

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInterceptExceptionCompletedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInterceptExceptionCompletedReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnInterceptExceptionCompletedReceived(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                               uint64 cookie,
                                                               class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmInterceptExceptionCompletedReceived::OnInterceptExceptionCompletedReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmInterceptExceptionCompletedReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIntrinsicFunctionEvaluator
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic executeIntrinsic,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] arguments,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> subroutines,
                  [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& failureReason) cil managed
  {
  } // end of method IDkmIntrinsicFunctionEvaluator::Execute

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIntrinsicFunctionEvaluator

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 38 30 33 30 66 36 2D 32 64 30 35   // ..$b78030f6-2d05
                                                                                                  2D 32 33 31 61 2D 63 30 64 36 2D 62 66 35 35 34   // -231a-c0d6-bf554
                                                                                                  30 31 30 38 32 34 65 00 00 )                      // 010824e..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_SourceId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::get_SourceId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_LanguageId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::get_LanguageId

  .method public hidebysig specialname instance uint32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::get_Id

  .method public hidebysig specialname instance uint32 
          get_ArgumentCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::get_ArgumentCount

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> 
          get_Subroutines() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::get_Subroutines

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic 
          Create(valuetype [mscorlib]System.Guid SourceId,
                 valuetype [mscorlib]System.Guid LanguageId,
                 uint32 Id,
                 uint32 ArgumentCount,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] Arguments,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines,
                  [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& FailureReason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::Execute

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext ILContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery InspectionQuery,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] Arguments,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Subroutines,
                  [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& FailureReason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteIntrinsic::Execute

  .property instance uint32 ArgumentCount()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic::get_ArgumentCount()
  } // end of property DkmILExecuteIntrinsic::ArgumentCount
  .property instance uint32 Id()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic::get_Id()
  } // end of property DkmILExecuteIntrinsic::Id
  .property instance valuetype [mscorlib]System.Guid
          LanguageId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic::get_LanguageId()
  } // end of property DkmILExecuteIntrinsic::LanguageId
  .property instance valuetype [mscorlib]System.Guid
          SourceId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic::get_SourceId()
  } // end of property DkmILExecuteIntrinsic::SourceId
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery>
          Subroutines()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic::get_Subroutines()
  } // end of property DkmILExecuteIntrinsic::Subroutines
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIntrinsicFunctionEvaluator140
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          Execute(class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteIntrinsic executeIntrinsic,
                  class Microsoft.VisualStudio.Debugger.Evaluation.DkmILContext iLContext,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmCompiledILInspectionQuery inspectionQuery,
                  class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] arguments,
                  class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery> subroutines,
                  [out] valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason& failureReason) cil managed
  {
  } // end of method IDkmIntrinsicFunctionEvaluator140::Execute

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmIntrinsicFunctionEvaluator140

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmJustMyCodeEnableNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnJustMyCodeChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmJustMyCodeEnableNotification::OnJustMyCodeChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmJustMyCodeEnableNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmJustMyCodeProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  IsUserCode(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                    class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsUserCodeAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmJustMyCodeProvider::IsUserCode

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmJustMyCodeProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageAsyncStepper
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue 
          GetAsyncMethodIdentity(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress,
                                 class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmLanguageAsyncStepper::GetAsyncMethodIdentity

  .method public hidebysig newslot abstract virtual 
          instance void  SetStepOutFlag(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress,
                                        class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                        bool 'value') cil managed
  {
  } // end of method IDkmLanguageAsyncStepper::SetStepOutFlag

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageAsyncStepper

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 32 37 34 35 37 33 37 2D 33 38 34 32   // ..$42745737-3842
                                                                                                  2D 31 66 39 34 2D 31 65 61 38 2D 32 63 33 31 30   // -1f94-1ea8-2c310
                                                                                                  61 33 61 36 31 63 31 00 00 )                      // a3a61c1..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::get_Address

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::get_RuntimeInstance

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::Create

  .method public hidebysig instance void 
          Compile(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression Expression,
                  [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult& Error) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::Compile

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery 
          CompileCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition Condition,
                           [out] string& ErrorText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::CompileCondition

  .method public hidebysig instance string 
          GetMethodName(valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags ArgumentFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::GetMethodName

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags 
          GetStepIntoFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageInstructionAddress::GetStepIntoFlags

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          Address()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_Address()
  } // end of property DkmLanguageInstructionAddress::Address
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_Language()
  } // end of property DkmLanguageInstructionAddress::Language
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress::get_RuntimeInstance()
  } // end of property DkmLanguageInstructionAddress::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageConditionEvaluator
{
  .method public hidebysig newslot abstract virtual 
          instance void  ParseCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition evaluationCondition,
                                        [out] string& errorText) cil managed
  {
  } // end of method IDkmLanguageConditionEvaluator::ParseCondition

  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateCondition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmEvaluationBreakpointCondition evaluationCondition,
                                           class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                           [out] bool& stop,
                                           [out] string& errorText) cil managed
  {
  } // end of method IDkmLanguageConditionEvaluator::EvaluateCondition

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageConditionEvaluator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageExpressionCompiler
{
  .method public hidebysig newslot abstract virtual 
          instance void  Compile(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress,
                                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                 [out] class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult& 'error') cil managed
  {
  } // end of method IDkmLanguageExpressionCompiler::Compile

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery 
          CompileCondition(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress,
                           class Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointCondition condition,
                           [out] string& errorText) cil managed
  {
  } // end of method IDkmLanguageExpressionCompiler::CompileCondition

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageExpressionCompiler

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 36 36 66 64 63 64 35 2D 65 31 64 35   // ..$066fdcd5-e1d5
                                                                                                  2D 61 30 62 61 2D 39 35 63 34 2D 66 34 63 34 39   // -a0ba-95c4-f4c49
                                                                                                  37 33 35 35 37 66 63 00 00 )                      // 73557fc..
  .method public hidebysig specialname instance string 
          get_ErrorMessage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedEvaluationResult::get_ErrorMessage

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedEvaluationResult::get_Flags

  .method public hidebysig specialname instance string 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedEvaluationResult::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 string Name,
                 string FullName,
                 string ErrorMessage,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedEvaluationResult::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 string Name,
                 string FullName,
                 string ErrorMessage,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags,
                 string Type,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedEvaluationResult::Create

  .property instance string ErrorMessage()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_ErrorMessage()
  } // end of property DkmFailedEvaluationResult::ErrorMessage
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_Flags()
  } // end of property DkmFailedEvaluationResult::Flags
  .property instance string Type()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult::get_Type()
  } // end of property DkmFailedEvaluationResult::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmFailedEvaluationResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageExpressionEvaluator
{
  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateExpression(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                            class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageExpression expression,
                                            class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::EvaluateExpression

  .method public hidebysig newslot abstract virtual 
          instance void  GetChildren(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result,
                                     class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                     int32 initialRequestSize,
                                     class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                     class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetChildrenAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::GetChildren

  .method public hidebysig newslot abstract virtual 
          instance void  GetFrameLocals(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                        class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                        class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                        class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::GetFrameLocals

  .method public hidebysig newslot abstract virtual 
          instance void  GetFrameArguments(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                           class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                           class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                           class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::GetFrameArguments

  .method public hidebysig newslot abstract virtual 
          instance void  GetItems(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext enumContext,
                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                  int32 startIndex,
                                  int32 count,
                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationEnumAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::GetItems

  .method public hidebysig newslot abstract virtual 
          instance void  SetValueAsString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result,
                                          string 'value',
                                          int32 timeout,
                                          [out] string& errorText) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::SetValueAsString

  .method public hidebysig newslot abstract virtual 
          instance string  GetUnderlyingString(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result) cil managed
  {
  } // end of method IDkmLanguageExpressionEvaluator::GetUnderlyingString

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageExpressionEvaluator

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_ResultObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionAsyncResult::get_ResultObject

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateExpressionAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluateExpressionAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          ResultObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult::get_ResultObject()
  } // end of property DkmEvaluateExpressionAsyncResult::ResultObject
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateExpressionAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameLocalsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameLocalsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext 
          get_EnumContext() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameLocalsAsyncResult::get_EnumContext

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext EnumContext) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameLocalsAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext
          EnumContext()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultEnumContext Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult::get_EnumContext()
  } // end of property DkmGetFrameLocalsAsyncResult::EnumContext
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult::get_ErrorCode()
  } // end of property DkmGetFrameLocalsAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameLocalsAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameArgumentsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameArgumentsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          get_Arguments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameArgumentsAsyncResult::get_Arguments

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Arguments) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameArgumentsAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]
          Arguments()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult::get_Arguments()
  } // end of property DkmGetFrameArgumentsAsyncResult::Arguments
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult::get_ErrorCode()
  } // end of property DkmGetFrameArgumentsAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameArgumentsAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageFrameDecoder
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetFrameName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                      class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                      class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                      valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags argumentFlags,
                                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageFrameDecoder::GetFrameName

  .method public hidebysig newslot abstract virtual 
          instance void  GetFrameReturnType(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                            class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                            class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageFrameDecoder::GetFrameReturnType

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageFrameDecoder

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameNameAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameNameAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_FrameName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameNameAsyncResult::get_FrameName

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string FrameName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameNameAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult::get_ErrorCode()
  } // end of property DkmGetFrameNameAsyncResult::ErrorCode
  .property instance string FrameName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult::get_FrameName()
  } // end of property DkmGetFrameNameAsyncResult::FrameName
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameNameAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameReturnTypeAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameReturnTypeAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_ReturnType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameReturnTypeAsyncResult::get_ReturnType

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string ReturnType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFrameReturnTypeAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult::get_ErrorCode()
  } // end of property DkmGetFrameReturnTypeAsyncResult::ErrorCode
  .property instance string ReturnType()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult::get_ReturnType()
  } // end of property DkmGetFrameReturnTypeAsyncResult::ReturnType
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetFrameReturnTypeAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageInstructionDecoder
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetMethodName(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress,
                                         valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmVariableInfoFlags argumentFlags) cil managed
  {
  } // end of method IDkmLanguageInstructionDecoder::GetMethodName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageInstructionDecoder

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageObjectIdProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  CreateObjectId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result) cil managed
  {
  } // end of method IDkmLanguageObjectIdProvider::CreateObjectId

  .method public hidebysig newslot abstract virtual 
          instance void  DestroyObjectId(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult result) cil managed
  {
  } // end of method IDkmLanguageObjectIdProvider::DestroyObjectId

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageObjectIdProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageReturnValueEvaluator
{
  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateReturnValue(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                             class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                             class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue rawReturnValue,
                                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageReturnValueEvaluator::EvaluateReturnValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageReturnValueEvaluator

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 65 63 63 38 64 32 64 2D 38 31 63 33   // ..$eecc8d2d-81c3
                                                                                                  2D 39 38 32 33 2D 65 38 39 66 2D 31 34 33 38 34   // -9823-e89f-14384
                                                                                                  37 31 65 35 37 39 64 00 00 )                      // 71e579d..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag CustomRawReturnValue = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag ManagedReturnValue = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag NativeRawReturnValue = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValue::get_TagValue

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_ReturnFrom() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValue::get_ReturnFrom

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          ReturnFrom()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue::get_ReturnFrom()
  } // end of property DkmRawReturnValue::ReturnFrom
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue::get_TagValue()
  } // end of property DkmRawReturnValue::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_ResultObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult::get_ResultObject

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult::get_ErrorCode()
  } // end of property DkmEvaluateReturnValueAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          ResultObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult::get_ResultObject()
  } // end of property DkmEvaluateReturnValueAsyncResult::ResultObject
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageReturnValueEvaluator2
{
  .method public hidebysig newslot abstract virtual 
          instance void  EvaluateReturnValue2(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext inspectionContext,
                                              class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                              class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                              class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer rawReturnValue,
                                              class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2> completionRoutine) cil managed
  {
  } // end of method IDkmLanguageReturnValueEvaluator2::EvaluateReturnValue2

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageReturnValueEvaluator2

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 34 37 38 62 37 39 2D 32 65 39 66   // ..$b7478b79-2e9f
                                                                                                  2D 30 38 33 64 2D 32 37 35 37 2D 66 31 62 32 66   // -083d-2757-f1b2f
                                                                                                  32 30 64 66 31 66 35 00 00 )                      // 20df1f5..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValueContainer::get_InspectionSession

  .method public hidebysig specialname instance int32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValueContainer::get_Id

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue 
          get_RawReturnValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValueContainer::get_RawReturnValue

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 int32 Id,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue RawReturnValue,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawReturnValueContainer::Create

  .property instance int32 Id()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_Id()
  } // end of property DkmRawReturnValueContainer::Id
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_InspectionSession()
  } // end of property DkmRawReturnValueContainer::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
          RawReturnValue()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer::get_RawReturnValue()
  } // end of property DkmRawReturnValueContainer::RawReturnValue
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValueContainer

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult2::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult2::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_ResultObject() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult2::get_ResultObject

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult ResultObject) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEvaluateReturnValueAsyncResult2::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2::get_ErrorCode()
  } // end of property DkmEvaluateReturnValueAsyncResult2::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          ResultObject()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2::get_ResultObject()
  } // end of property DkmEvaluateReturnValueAsyncResult2::ResultObject
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluateReturnValueAsyncResult2

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageStepIntoFilterCallback
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags 
          GetStepIntoFlags(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageInstructionAddress languageInstructionAddress) cil managed
  {
  } // end of method IDkmLanguageStepIntoFilterCallback::GetStepIntoFlags

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLanguageStepIntoFilterCallback

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags NoStepInto = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmLanguageStepIntoFlags

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLaunchResumeProcess
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo 
          LaunchProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request',
                        int32 additionalWin32Flags) cil managed
  {
  } // end of method IDkmLaunchResumeProcess::LaunchProcess

  .method public hidebysig newslot abstract virtual 
          instance void  ResumeProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request') cil managed
  {
  } // end of method IDkmLaunchResumeProcess::ResumeProcess

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLaunchResumeProcess

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 66 33 63 36 63 31 66 2D 36 37 36 62   // ..$df3c6c1f-676b
                                                                                                  2D 39 32 64 63 2D 32 38 36 62 2D 62 33 36 34 61   // -92dc-286b-b364a
                                                                                                  32 34 33 34 32 61 65 00 00 )                      // 24342ae..
  .field public initonly int32 ProcessId
  .field public initonly int64 StartTime
  .field public initonly int32 ThreadId
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 ProcessId,
                               int64 StartTime,
                               int32 ThreadId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLaunchedProcessInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 31 30 37 66 63 35 36 2D 33 34 37 37   // ..$7107fc56-3477
                                                                                                  2D 32 37 30 38 2D 66 63 30 30 2D 31 37 34 66 33   // -2708-fc00-174f3
                                                                                                  33 63 30 34 62 30 38 00 00 )                      // 3c04b08..
  .method public hidebysig specialname instance string 
          get_FileName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_FileName

  .method public hidebysig specialname instance string 
          get_Arguments() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_Arguments

  .method public hidebysig specialname instance string 
          get_WorkingDirectory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_WorkingDirectory

  .method public hidebysig specialname instance string 
          get_Environment() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_Environment

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo 
          get_StartupInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_StartupInfo

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags 
          get_ModeFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_ModeFlags

  .method public hidebysig specialname instance int32 
          get_Win32Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_Win32Flags

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_Connection

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings 
          get_EngineSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_EngineSettings

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings 
          get_DebugLaunchSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_DebugLaunchSettings

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags 
          get_LaunchFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::get_LaunchFlags

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 
          Create(string FileName,
                 string Arguments,
                 string WorkingDirectory,
                 string Environment,
                 class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo StartupInfo,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags ModeFlags,
                 int32 Win32Flags,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 
          Create(string FileName,
                 string Arguments,
                 string WorkingDirectory,
                 string Environment,
                 class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo StartupInfo,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags ModeFlags,
                 int32 Win32Flags,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::Create

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo 
          LaunchProcess(int32 AdditionalWin32Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::LaunchProcess

  .method public hidebysig instance void 
          ResumeProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::ResumeProcess

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo 
          LaunchDebuggedProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::LaunchDebuggedProcess

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          ResumeDebuggedProcess(valuetype [mscorlib]System.Guid UniqueProcessId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchRequest::ResumeDebuggedProcess

  .property instance string Arguments()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Arguments()
  } // end of property DkmProcessLaunchRequest::Arguments
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Connection()
  } // end of property DkmProcessLaunchRequest::Connection
  .property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings
          DebugLaunchSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_DebugLaunchSettings()
  } // end of property DkmProcessLaunchRequest::DebugLaunchSettings
  .property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings
          EngineSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_EngineSettings()
  } // end of property DkmProcessLaunchRequest::EngineSettings
  .property instance string Environment()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Environment()
  } // end of property DkmProcessLaunchRequest::Environment
  .property instance string FileName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_FileName()
  } // end of property DkmProcessLaunchRequest::FileName
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags
          LaunchFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_LaunchFlags()
  } // end of property DkmProcessLaunchRequest::LaunchFlags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags
          ModeFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_ModeFlags()
  } // end of property DkmProcessLaunchRequest::ModeFlags
  .property instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo
          StartupInfo()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_StartupInfo()
  } // end of property DkmProcessLaunchRequest::StartupInfo
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_UniqueId()
  } // end of property DkmProcessLaunchRequest::UniqueId
  .property instance int32 Win32Flags()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_Win32Flags()
  } // end of property DkmProcessLaunchRequest::Win32Flags
  .property instance string WorkingDirectory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest::get_WorkingDirectory()
  } // end of property DkmProcessLaunchRequest::WorkingDirectory
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLoadCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnLoadComplete(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                        class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmLoadCompleteNotification::OnLoadComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmLoadCompleteNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedAsyncTaskDecoder
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetManagedTaskContinuationFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext,
                                                          class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                          class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                          class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetManagedTaskContinuationFramesAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmManagedAsyncTaskDecoder::GetManagedTaskContinuationFrames

  .method public hidebysig newslot abstract virtual 
          instance void  GetContinuationFramesFromTaskObject(class Microsoft.VisualStudio.Debugger.CallStack.DkmAsyncStackWalkContext asyncStackWalkContext,
                                                             class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                             class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                             class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue taskObject,
                                                             class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain taskAppDomain,
                                                             class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetContinuationFramesFromTaskObjectAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmManagedAsyncTaskDecoder::GetContinuationFramesFromTaskObject

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskHandleFromManagedReturnFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnStackFrame managedReturnStackFrame,
                                                             [out] class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue& taskHandle) cil managed
  {
  } // end of method IDkmManagedAsyncTaskDecoder::GetTaskHandleFromManagedReturnFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedAsyncTaskDecoder

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedFuncEvalQuickAbortServices
{
  .method public hidebysig newslot abstract virtual 
          instance void  PrepareForFuncEvalQuickAbort(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                      class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                      [out] bool& skipLoad,
                                                      [out] uint64& memoryAddress) cil managed
  {
  } // end of method IDkmManagedFuncEvalQuickAbortServices::PrepareForFuncEvalQuickAbort

  .method public hidebysig newslot abstract virtual 
          instance void  OnFuncEvalQuickAbortDllLoaded(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                       class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                       bool result) cil managed
  {
  } // end of method IDkmManagedFuncEvalQuickAbortServices::OnFuncEvalQuickAbortDllLoaded

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedFuncEvalQuickAbortServices

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedFuncEvalServices
{
  .method public hidebysig newslot abstract virtual 
          instance int32  ContinueForFuncEval(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                              class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              class Microsoft.VisualStudio.CorDebugInterop.ICorDebugEval corEval,
                                              valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmFuncEvalFlags funcEvalFlags,
                                              uint32 timeout,
                                              string evaluationString) cil managed
  {
  } // end of method IDkmManagedFuncEvalServices::ContinueForFuncEval

  .method public hidebysig newslot abstract virtual 
          instance int32  CanDoFuncEval(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                        class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmManagedFuncEvalServices::CanDoFuncEval

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedFuncEvalServices

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedHeapSampler
{
  .method public hidebysig newslot abstract virtual 
          instance void  InitializeHeapObjectWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler,
                                                  uint32 targetObjectCount,
                                                  bool liveObjectStatsOnly) cil managed
  {
  } // end of method IDkmManagedHeapSampler::InitializeHeapObjectWalk

  .method public hidebysig newslot abstract virtual 
          instance uint32  NextObjects(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler,
                                       uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapSampler::NextObjects

  .method public hidebysig newslot abstract virtual 
          instance uint32  NextReferences(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler,
                                          uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapSampler::NextReferences

  .method public hidebysig newslot abstract virtual 
          instance uint32  NextRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler,
                                     uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapSampler::NextRoots

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetSampledHeapData(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler,
                                               uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapSampler::GetSampledHeapData

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapTypeInfo[] 
          GetSampledHeapTypeStats(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler) cil managed
  {
  } // end of method IDkmManagedHeapSampler::GetSampledHeapTypeStats

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] 
          GetRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSampler managedHeapSampler) cil managed
  {
  } // end of method IDkmManagedHeapSampler::GetRoots

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedHeapSampler

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedHeapWalker
{
  .method public hidebysig newslot abstract virtual 
          instance void  InitializeHeapObjectWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker) cil managed
  {
  } // end of method IDkmManagedHeapWalker::InitializeHeapObjectWalk

  .method public hidebysig newslot abstract virtual 
          instance void  InitializeHeapReferenceWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker) cil managed
  {
  } // end of method IDkmManagedHeapWalker::InitializeHeapReferenceWalk

  .method public hidebysig newslot abstract virtual 
          instance void  InitializeHeapRootsWalk(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker) cil managed
  {
  } // end of method IDkmManagedHeapWalker::InitializeHeapRootsWalk

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapObjectInfo[] 
          NextObjects(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker,
                      uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapWalker::NextObjects

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedObjectReferenceInfo[] 
          NextReferences(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker,
                         uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapWalker::NextReferences

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapRootInfo[] 
          NextRoots(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker,
                    uint32 requestCount) cil managed
  {
  } // end of method IDkmManagedHeapWalker::NextRoots

  .method public hidebysig newslot abstract virtual 
          instance string[]  GetTypeNames(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker,
                                          valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedTypeId[] typeIds) cil managed
  {
  } // end of method IDkmManagedHeapWalker::GetTypeNames

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapSegmentInfo[] 
          GetSegments(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedHeapWalker managedHeapWalker) cil managed
  {
  } // end of method IDkmManagedHeapWalker::GetSegments

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedHeapWalker

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedReturnValueFetcher
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueInfo 
          GetReturnValueInfo(class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext managedReturnValueContext) cil managed
  {
  } // end of method IDkmManagedReturnValueFetcher::GetReturnValueInfo

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedReturnValueFetcher

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedSteppingCodePathProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] 
          GetCodePathsInRange(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                              class Microsoft.VisualStudio.CorDebugInterop.ICorDebugFrame corFrame,
                              uint32 startILOffset,
                              uint32 endILOffset) cil managed
  {
  } // end of method IDkmManagedSteppingCodePathProvider::GetCodePathsInRange

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedSteppingCodePathProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedTaskServices
{
  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodMetadataToken(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                 string className,
                                                 string methodName,
                                                 string[] methodArguments) cil managed
  {
  } // end of method IDkmManagedTaskServices::GetMethodMetadataToken

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskInfoFromFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                              class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                              int32 argumentIndex,
                                              [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo& taskInfo) cil managed
  {
  } // end of method IDkmManagedTaskServices::GetTaskInfoFromFrame

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskInfoArrayFromFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                   class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                                                   int32 argumentIndex,
                                                   [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo[]& taskInfoArray) cil managed
  {
  } // end of method IDkmManagedTaskServices::GetTaskInfoArrayFromFrame

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskInfoFromHandle(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                               class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue taskHandle,
                                               class Microsoft.VisualStudio.Debugger.Clr.DkmClrAppDomain appDomain,
                                               [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo& taskInfo) cil managed
  {
  } // end of method IDkmManagedTaskServices::GetTaskInfoFromHandle

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedTaskServices

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 30 30 38 33 63 66 37 2D 38 33 61 36   // ..$00083cf7-83a6
                                                                                                  2D 38 38 63 35 2D 62 66 36 65 2D 63 34 66 63 34   // -88c5-bf6e-c4fc4
                                                                                                  35 31 66 61 34 39 63 00 00 )                      // 51fa49c..
  .field public initonly string AsyncState
  .field public initonly int32 Id
  .field public initonly int32 ParentId
  .field public initonly int32 StateFlags
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 Id,
                               int32 ParentId,
                               string AsyncState,
                               int32 StateFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmManagedTaskInfo::.ctor

} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmManagedTaskInfo

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedThreadProperties
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetManagedThreadProperties(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                    [out] int32& managedThreadId) cil managed
  {
  } // end of method IDkmManagedThreadProperties::GetManagedThreadProperties

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmManagedThreadProperties

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMemoryOperation
{
  .method public hidebysig newslot abstract virtual 
          instance int32  ReadMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                     uint64 address,
                                     valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags',
                                     uint8[] buffer) cil managed
  {
  } // end of method IDkmMemoryOperation::ReadMemory

  .method public hidebysig newslot abstract virtual 
          instance uint8[]  ReadMemoryString(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                             uint64 address,
                                             valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 'flags',
                                             uint16 characterSize,
                                             int32 maxCharacters) cil managed
  {
  } // end of method IDkmMemoryOperation::ReadMemoryString

  .method public hidebysig newslot abstract virtual 
          instance void  WriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                     uint64 address,
                                     uint8[] data) cil managed
  {
  } // end of method IDkmMemoryOperation::WriteMemory

  .method public hidebysig newslot abstract virtual 
          instance void  InvisibleWriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                              uint64 address,
                                              uint8[] data) cil managed
  {
  } // end of method IDkmMemoryOperation::InvisibleWriteMemory

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMemoryOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMergedMonitorStackWalk
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          RuntimeWalkNextFramesAndCheckCache(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext,
                                             uint32 requestSizeHintIfCacheIsValid,
                                             uint32 requestSizeHintIfCacheIsInvalid,
                                             class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash cachedHash,
                                             [out] bool& endOfStack,
                                             [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackHash& actualStackHash,
                                             [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext& actualStackWalkContext,
                                             [out] bool& isCacheValid) cil managed
  {
  } // end of method IDkmMergedMonitorStackWalk::RuntimeWalkNextFramesAndCheckCache

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame[] 
          RuntimeWalkNextFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkContext stackWalkContext,
                                uint32 requestSizeHint,
                                [out] bool& endOfStack) cil managed
  {
  } // end of method IDkmMergedMonitorStackWalk::RuntimeWalkNextFrames

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          GetTopStackWalkFrame(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                               class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance) cil managed
  {
  } // end of method IDkmMergedMonitorStackWalk::GetTopStackWalkFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMergedMonitorStackWalk

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMinidumpQuery
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetDumpExePath(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmMinidumpQuery::GetDumpExePath

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMinidumpQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleCreateNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleCreate(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmModuleCreateNotification::OnModuleCreate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleCreateNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceDisabledNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnDisabledChanged(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmModuleInstanceDisabledNotification::OnDisabledChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceDisabledNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceLoadNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleInstanceLoad(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                              class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmModuleInstanceLoadNotification::OnModuleInstanceLoad

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceLoadNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceUnloadNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleInstanceUnload(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmModuleInstanceUnloadNotification::OnModuleInstanceUnload

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleInstanceUnloadNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleLocator
{
  .method public hidebysig newslot abstract virtual 
          instance void  TryLoadBinary(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmModuleLocator::TryLoadBinary

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleLocator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleMetadataStatusQuery
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmMetadataStatus 
          GetMetadataStatus(class Microsoft.VisualStudio.Debugger.Clr.DkmClrModuleInstance clrModuleInstance) cil managed
  {
  } // end of method IDkmModuleMetadataStatusQuery::GetMetadataStatus

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleMetadataStatusQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleModifiedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleModified(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmModuleModifiedNotification::OnModuleModified

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleModifiedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsLoaded
{
  .method public hidebysig newslot abstract virtual 
          instance void  RaiseSymbolsLoadedEvent(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                 bool isReload) cil managed
  {
  } // end of method IDkmModuleSymbolsLoaded::RaiseSymbolsLoadedEvent

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsLoaded

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsLoadedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleSymbolsLoaded(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                               class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                               bool isReload,
                                               class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                               class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmModuleSymbolsLoadedNotification::OnModuleSymbolsLoaded

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsLoadedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsUpdatedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnModuleSymbolsUpdated(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmModuleSymbolsUpdatedNotification::OnModuleSymbolsUpdated

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleSymbolsUpdatedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleUserCodeDeterminer
{
  .method public hidebysig newslot abstract virtual 
          instance bool  IsUserCode(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmModuleUserCodeDeterminer::IsUserCode

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmModuleUserCodeDeterminer

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMonitorStackWalk
{
  .method public hidebysig newslot abstract virtual 
          instance void  Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext,
                                    class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers,
                                    uint32 stackRangeSize) cil managed
  {
  } // end of method IDkmMonitorStackWalk::Initialize

  .method public hidebysig newslot abstract virtual 
          instance void  UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext,
                                        class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers,
                                        uint32 stackRangeSize) cil managed
  {
  } // end of method IDkmMonitorStackWalk::UpdatePosition

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkResult 
          WalkNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmMonitorStackWalkContext monitorStackWalkContext) cil managed
  {
  } // end of method IDkmMonitorStackWalk::WalkNextFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmMonitorStackWalk

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNameUndecorator
{
  .method public hidebysig newslot abstract virtual 
          instance string  UndecorateName(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                          string decoratedName,
                                          uint32 options) cil managed
  {
  } // end of method IDkmNameUndecorator::UndecorateName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNameUndecorator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeCppEditAndContinueNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnNativeCppEditAndContinueAfterCommitEdit(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance) cil managed
  {
  } // end of method IDkmNativeCppEditAndContinueNotification::OnNativeCppEditAndContinueAfterCommitEdit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeCppEditAndContinueNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeDebuggingEnableNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnNativeDebuggingEnabledChanged(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmNativeDebuggingEnableNotification::OnNativeDebuggingEnabledChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeDebuggingEnableNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeEditAndContinueUpdate
{
  .method public hidebysig newslot abstract virtual 
          instance void  BackupSourceFiles(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance nativeRuntimeInstance,
                                           string[] editSourceFilePaths,
                                           string[] backupSourceFilePaths) cil managed
  {
  } // end of method IDkmNativeEditAndContinueUpdate::BackupSourceFiles

  .method public hidebysig newslot abstract virtual 
          instance void  ApplyCodeChange(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance nativeRuntimeInstance,
                                         uint32 currentLineNumberHint,
                                         [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& warnings,
                                         [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& errors) cil managed
  {
  } // end of method IDkmNativeEditAndContinueUpdate::ApplyCodeChange

  .method public hidebysig newslot abstract virtual 
          instance void  CommitCodeChange(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance nativeRuntimeInstance,
                                          [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& warnings,
                                          [out] class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>& errors) cil managed
  {
  } // end of method IDkmNativeEditAndContinueUpdate::CommitCodeChange

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeEditAndContinueUpdate

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeExportTableDecoder
{
  .method public hidebysig newslot abstract virtual 
          instance string  FindNearestExport(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress nativeAddress,
                                             [out] int32& byteOffset) cil managed
  {
  } // end of method IDkmNativeExportTableDecoder::FindNearestExport

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          FindExportName(class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance nativeModuleInstance,
                         string name,
                         bool ignoreDataExports) cil managed
  {
  } // end of method IDkmNativeExportTableDecoder::FindExportName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeExportTableDecoder

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress
       extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 31 65 32 65 34 61 62 2D 34 36 33 61   // ..$a1e2e4ab-463a
                                                                                                  2D 65 38 61 31 2D 33 65 36 38 2D 31 66 34 39 65   // -e8a1-3e68-1f49e
                                                                                                  36 39 34 35 64 39 65 00 00 )                      // 6945d9e..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::get_ModuleInstance

  .method public hidebysig specialname instance uint32 
          get_RVA() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::get_RVA

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance ModuleInstance,
                 uint32 RVA,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::Create

  .method public hidebysig instance string 
          FindNearestExport([out] int32& ByteOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::FindNearestExport

  .method public hidebysig instance void 
          FindNearestExport(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::FindNearestExport

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite[] 
          GetSteppingCallSites(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] SteppingRanges) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionAddress::GetSteppingCallSites

  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeModuleInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_ModuleInstance()
  } // end of property DkmNativeInstructionAddress::ModuleInstance
  .property instance uint32 RVA()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_RVA()
  } // end of property DkmNativeInstructionAddress::RVA
  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeRuntimeInstance Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress::get_RuntimeInstance()
  } // end of property DkmNativeInstructionAddress::RuntimeInstance
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeExportsEnableNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnNativeExportsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmNativeExportsEnableNotification::OnNativeExportsChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeExportsEnableNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeStackCallback
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentFrameInfo(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                             [out] uint64& returnAddress,
                                             [out] uint64& frameBase,
                                             [out] uint64& vFrame) cil managed
  {
  } // end of method IDkmNativeStackCallback::GetCurrentFrameInfo

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeStackCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSteppingCallSiteProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite[] 
          GetSteppingCallSites(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress nativeAddress,
                               valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] steppingRanges) cil managed
  {
  } // end of method IDkmNativeSteppingCallSiteProvider::GetSteppingCallSites

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSteppingCallSiteProvider

.class public auto ansi Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 39 62 37 36 31 30 63 2D 64 32 32 39   // ..$49b7610c-d229
                                                                                                  2D 65 31 32 33 2D 39 66 33 61 2D 62 30 30 64 66   // -e123-9f3a-b00df
                                                                                                  32 65 66 34 63 32 34 00 00 )                      // 2ef4c24..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          get_CallSite() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeSteppingCallSite::get_CallSite

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          get_CallTarget() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeSteppingCallSite::get_CallTarget

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          get_CallTargetAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeSteppingCallSite::get_CallTargetAddress

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite 
          Create(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallSite,
                 class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTarget,
                 class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress CallTargetAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeSteppingCallSite::Create

  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress
          CallSite()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallSite()
  } // end of property DkmNativeSteppingCallSite::CallSite
  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress
          CallTarget()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallTarget()
  } // end of property DkmNativeSteppingCallSite::CallTarget
  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress
          CallTargetAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite::get_CallTargetAddress()
  } // end of property DkmNativeSteppingCallSite::CallTargetAddress
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmNativeSteppingCallSite

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSymbolProviderCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata 
          GetNativeInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction,
                                               class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress) cil managed
  {
  } // end of method IDkmNativeSymbolProviderCallback::GetNativeInstructionMetadataCallback

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol 
          GetPublicSymbolByNameCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                        string publicName) cil managed
  {
  } // end of method IDkmNativeSymbolProviderCallback::GetPublicSymbolByNameCallback

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSymbolProviderCallback

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 64 31 37 65 38 31 63 2D 63 66 66 32   // ..$4d17e81c-cff2
                                                                                                  2D 35 38 66 37 2D 37 39 37 33 2D 38 37 66 34 30   // -58f7-7973-87f40
                                                                                                  62 65 35 31 66 63 30 00 00 )                      // be51fc0..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType 
          get_AddressType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeAddressMetadata::get_AddressType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType 
          get_StepType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeAddressMetadata::get_StepType

  .method public hidebysig specialname instance uint32 
          get_AddressTypeLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeAddressMetadata::get_AddressTypeLength

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata 
          Create(valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType AddressType,
                 valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType StepType,
                 uint32 AddressTypeLength) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeAddressMetadata::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType
          AddressType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_AddressType()
  } // end of property DkmNativeAddressMetadata::AddressType
  .property instance uint32 AddressTypeLength()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_AddressTypeLength()
  } // end of property DkmNativeAddressMetadata::AddressTypeLength
  .property instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType
          StepType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata::get_StepType()
  } // end of property DkmNativeAddressMetadata::StepType
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 65 62 38 33 34 63 61 2D 63 35 39 31   // ..$0eb834ca-c591
                                                                                                  2D 34 34 39 63 2D 36 36 61 64 2D 65 30 31 36 30   // -449c-66ad-e0160
                                                                                                  39 33 39 37 37 64 32 00 00 )                      // 93977d2..
  .method public hidebysig specialname instance uint32 
          get_RVA() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionSymbol::get_RVA

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 uint32 RVA) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionSymbol::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata 
          GetNativeInstructionMetadataCallback(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionSymbol::GetNativeInstructionMetadataCallback

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetSteppingRanges(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance,
                            class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StepStartingAddress,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary RangeBoundary,
                            bool IncludeInline) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionSymbol::GetSteppingRanges

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata 
          GetSteppingNativeInstructionMetadata(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance,
                                               class Microsoft.VisualStudio.Debugger.DkmInstructionAddress StepStartingAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeInstructionSymbol::GetSteppingNativeInstructionMetadata

  .property instance uint32 RVA()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol::get_RVA()
  } // end of property DkmNativeInstructionSymbol::RVA
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSymbolProviderCallback120a
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetSteppingRanges(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction,
                            class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                            class Microsoft.VisualStudio.Debugger.DkmInstructionAddress stepStartingAddress,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary rangeBoundary,
                            bool includeInline) cil managed
  {
  } // end of method IDkmNativeSymbolProviderCallback120a::GetSteppingRanges

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressMetadata 
          GetSteppingNativeInstructionMetadata(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionSymbol nativeInstruction,
                                               class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                               class Microsoft.VisualStudio.Debugger.DkmInstructionAddress stepStartingAddress) cil managed
  {
  } // end of method IDkmNativeSymbolProviderCallback120a::GetSteppingNativeInstructionMetadata

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmNativeSymbolProviderCallback120a

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary FunctionStart = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary InlineFunctionOut = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary NextLine = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary NextStatement = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmOutOfBandExceptionNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnOutOfBandException(class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation exception,
                                              class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmOutOfBandExceptionNotification::OnOutOfBandException

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmOutOfBandExceptionNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmOutOfBandProcessContinueNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OutOfBandProcessContinue(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmOutOfBandProcessContinueNotification::OutOfBandProcessContinue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmOutOfBandProcessContinueNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmPendingFileLineBreakpointCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetCurrentSourcePosition(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint fileLineBreakpoint) cil managed
  {
  } // end of method IDkmPendingFileLineBreakpointCallback::GetCurrentSourcePosition

  .method public hidebysig newslot abstract virtual 
          instance string  GetCurrentSourceText(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmPendingFileLineBreakpoint fileLineBreakpoint) cil managed
  {
  } // end of method IDkmPendingFileLineBreakpointCallback::GetCurrentSourceText

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmPendingFileLineBreakpointCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmPerformanceMeasurement140
{
  .method public hidebysig newslot abstract virtual 
          instance void  QueryPerformanceCounters(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmPerformanceCountersAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmPerformanceMeasurement140::QueryPerformanceCounters

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmPerformanceMeasurement140

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessContinueNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessContinue(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmProcessContinueNotification::OnProcessContinue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessContinueNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessCreateNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessCreate(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                         class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                         class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmProcessCreateNotification::OnProcessCreate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessCreateNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessDebuggerInitializeWaiter
{
  .method public hidebysig newslot abstract virtual 
          instance void  WaitForDebuggerInitialize(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmProcessDebuggerInitializeWaiter::WaitForDebuggerInitialize

  .method public hidebysig newslot abstract virtual 
          instance void  SetDebuggerInitialized(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmProcessDebuggerInitializeWaiter::SetDebuggerInitialized

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessDebuggerInitializeWaiter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessExecutionNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessPause(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                        class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters processCounters) cil managed
  {
  } // end of method IDkmProcessExecutionNotification::OnProcessPause

  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessResume(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                         class Microsoft.VisualStudio.Debugger.DkmProcessExecutionCounters processCounters) cil managed
  {
  } // end of method IDkmProcessExecutionNotification::OnProcessResume

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessExecutionNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessExitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnProcessExit(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                       int32 exitCode,
                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmProcessExitNotification::OnProcessExit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessExitNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessLaunchEnvironmentFilter
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings debugLaunchSettings,
                                                             valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario scenario) cil managed
  {
  } // end of method IDkmProcessLaunchEnvironmentFilter::GetAdditionalEnvironmentVariables

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessLaunchEnvironmentFilter

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessLaunchEnvironmentFilter140
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetAdditionalEnvironmentVariables(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData inputData) cil managed
  {
  } // end of method IDkmProcessLaunchEnvironmentFilter140::GetAdditionalEnvironmentVariables

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessLaunchEnvironmentFilter140

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 36 34 36 65 35 65 66 2D 35 62 61 32   // ..$e646e5ef-5ba2
                                                                                                  2D 65 30 32 31 2D 34 66 33 64 2D 37 30 66 38 35   // -e021-4f3d-70f85
                                                                                                  30 31 35 62 66 66 36 00 00 )                      // 015bff6..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::get_Connection

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings 
          get_DebugLaunchSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::get_DebugLaunchSettings

  .method public hidebysig specialname instance string 
          get_ExecutablePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::get_ExecutablePath

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId 
          get_AppPackageId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::get_AppPackageId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags 
          get_LaunchFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::get_LaunchFlags

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 string ExecutablePath,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags LaunchFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterInputData::Create

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId
          AppPackageId()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_AppPackageId()
  } // end of property DkmProcessLaunchEnvironmentFilterInputData::AppPackageId
  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_Connection()
  } // end of property DkmProcessLaunchEnvironmentFilterInputData::Connection
  .property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings
          DebugLaunchSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_DebugLaunchSettings()
  } // end of property DkmProcessLaunchEnvironmentFilterInputData::DebugLaunchSettings
  .property instance string ExecutablePath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_ExecutablePath()
  } // end of property DkmProcessLaunchEnvironmentFilterInputData::ExecutablePath
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags
          LaunchFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData::get_LaunchFlags()
  } // end of property DkmProcessLaunchEnvironmentFilterInputData::LaunchFlags
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessQueryOperation
{
  .method public hidebysig newslot abstract virtual 
          instance uint32  GetHandleCount(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmProcessQueryOperation::GetHandleCount

  .method public hidebysig newslot abstract virtual 
          instance uint64  GetRunningTime(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmProcessQueryOperation::GetRunningTime

  .method public hidebysig newslot abstract virtual 
          instance void  SetRunningTime(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                        uint64 runningTime) cil managed
  {
  } // end of method IDkmProcessQueryOperation::SetRunningTime

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmProcessQueryOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRegisterWrite
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetRegisterValue(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                          class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackWalkFrame,
                                          int32 registerIndex,
                                          class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 'value') cil managed
  {
  } // end of method IDkmRegisterWrite::SetRegisterValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRegisterWrite

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRequireFullTrustForSourceServerNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRequireFullTrustForSourceServerChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmRequireFullTrustForSourceServerNotification::OnRequireFullTrustForSourceServerChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRequireFullTrustForSourceServerNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmReturnValuesNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnReturnValues(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                        class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue> returnValues,
                                        bool lastValueInCurrentContext,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmReturnValuesNotification::OnReturnValues

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmReturnValuesNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRunningProcessInfoProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo[] 
          EnumRunningProcesses(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                               bool includeFromAllUsers,
                               valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::EnumRunningProcesses

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo 
          GetRunningProcessInfo(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                int32 id,
                                int64 startTime,
                                bool isDebuggee,
                                valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::GetRunningProcessInfo

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo 
          PrepareForDebuggingProcess(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                     int32 id,
                                     int64 startTime,
                                     valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask requestedPropertyMask) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::PrepareForDebuggingProcess

  .method public hidebysig newslot abstract virtual 
          instance void  TerminateRunningProcess(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                                 int32 id,
                                                 int64 startTime,
                                                 int32 exitCode) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::TerminateRunningProcess

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformation 
          GetSystemInformation(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                               bool nativeSystemInfo) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::GetSystemInformation

  .method public hidebysig newslot abstract virtual 
          instance string  GetClrVersionOfExecutable(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                                     string exePath) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::GetClrVersionOfExecutable

  .method public hidebysig newslot abstract virtual 
          instance bool  QueryIsWOW64Executable(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection,
                                                string exePath) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::QueryIsWOW64Executable

  .method public hidebysig newslot abstract virtual 
          instance string  GetDefaultClrVersion(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection connection) cil managed
  {
  } // end of method IDkmRunningProcessInfoProvider::GetDefaultClrVersion

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRunningProcessInfoProvider

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 62 39 39 61 36 34 2D 61 31 32 39   // ..$b7b99a64-a129
                                                                                                  2D 33 33 35 36 2D 65 32 37 36 2D 31 61 37 38 37   // -3356-e276-1a787
                                                                                                  33 39 30 35 63 65 62 00 00 )                      // 3905ceb..
  .method public hidebysig specialname instance int32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_Id

  .method public hidebysig specialname instance int64 
          get_StartTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_StartTime

  .method public hidebysig specialname instance int32 
          get_SessionId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_SessionId

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_Name

  .method public hidebysig specialname instance string 
          get_Title() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_Title

  .method public hidebysig specialname instance string 
          get_UserName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_UserName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_ClrVersions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_ClrVersions

  .method public hidebysig specialname instance string 
          get_CommandLine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_CommandLine

  .method public hidebysig specialname instance string 
          get_CurrentDirectory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_CurrentDirectory

  .method public hidebysig specialname instance string 
          get_EnvironmentBlock() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_EnvironmentBlock

  .method public hidebysig specialname instance int32 
          get_IntegrityLevel() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_IntegrityLevel

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> 
          get_PublishedPrograms() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_PublishedPrograms

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_Flags

  .method public hidebysig specialname instance uint16 
          get_ProcessorArchitecture() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_ProcessorArchitecture

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId 
          get_AppPackageId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::get_AppPackageId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo 
          Create(int32 Id,
                 int64 StartTime,
                 int32 SessionId,
                 string Name,
                 string Title,
                 string UserName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> ClrVersions,
                 string CommandLine,
                 string CurrentDirectory,
                 string EnvironmentBlock,
                 int32 IntegrityLevel,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> PublishedPrograms,
                 valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Flags,
                 uint16 ProcessorArchitecture,
                 class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId AppPackageId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRunningProcessInfo::Create

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId
          AppPackageId()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_AppPackageId()
  } // end of property DkmRunningProcessInfo::AppPackageId
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          ClrVersions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_ClrVersions()
  } // end of property DkmRunningProcessInfo::ClrVersions
  .property instance string CommandLine()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_CommandLine()
  } // end of property DkmRunningProcessInfo::CommandLine
  .property instance string CurrentDirectory()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_CurrentDirectory()
  } // end of property DkmRunningProcessInfo::CurrentDirectory
  .property instance string EnvironmentBlock()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_EnvironmentBlock()
  } // end of property DkmRunningProcessInfo::EnvironmentBlock
  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Flags()
  } // end of property DkmRunningProcessInfo::Flags
  .property instance int32 Id()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Id()
  } // end of property DkmRunningProcessInfo::Id
  .property instance int32 IntegrityLevel()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_IntegrityLevel()
  } // end of property DkmRunningProcessInfo::IntegrityLevel
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Name()
  } // end of property DkmRunningProcessInfo::Name
  .property instance uint16 ProcessorArchitecture()
  {
    .get instance uint16 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_ProcessorArchitecture()
  } // end of property DkmRunningProcessInfo::ProcessorArchitecture
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo>
          PublishedPrograms()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo> Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_PublishedPrograms()
  } // end of property DkmRunningProcessInfo::PublishedPrograms
  .property instance int32 SessionId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_SessionId()
  } // end of property DkmRunningProcessInfo::SessionId
  .property instance int64 StartTime()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_StartTime()
  } // end of property DkmRunningProcessInfo::StartTime
  .property instance string Title()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_Title()
  } // end of property DkmRunningProcessInfo::Title
  .property instance string UserName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo::get_UserName()
  } // end of property DkmRunningProcessInfo::UserName
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask AppPackageId = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask BasicInfoFlags = int32(0x00000400)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask ClrVersions = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CommandLine = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CoreClrPublishedProgram = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask CurrentDirectory = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Empty = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask EnvironmentBlock = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask FilterFlags = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask IntegrityLevel = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Name = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask PublishedPrograms = int32(0x00002000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask SessionId = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask StartTime = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask Title = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask UserIdentityFlags = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask UserName = int32(0x00000010)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessInfoPropertyMask

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeBreakpointNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                             class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                             bool hasException,
                                             class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmRuntimeBreakpointNotification::OnRuntimeBreakpoint

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeBreakpointNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeBreakpointReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRuntimeBreakpointReceived(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint,
                                                     class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                     bool hasException,
                                                     class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmRuntimeBreakpointReceived::OnRuntimeBreakpointReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeBreakpointReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeDisassemblyProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Disassembly.DkmDisassembledInstruction[] 
          Disassemble(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                      class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address,
                      uint32 count) cil managed
  {
  } // end of method IDkmRuntimeDisassemblyProvider::Disassemble

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          GetInstructionAddress(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                class Microsoft.VisualStudio.Debugger.DkmInstructionAddress startAddress,
                                int32 instructionOffset) cil managed
  {
  } // end of method IDkmRuntimeDisassemblyProvider::GetInstructionAddress

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeDisassemblyProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeFunctionResolver
{
  .method public hidebysig newslot abstract virtual 
          instance void  EnableResolution(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest,
                                          class Microsoft.VisualStudio.Debugger.DkmWorkList workList) cil managed
  {
  } // end of method IDkmRuntimeFunctionResolver::EnableResolution

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeFunctionResolver

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeFunctionResolverClient
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnFunctionResolved(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest,
                                            class Microsoft.VisualStudio.Debugger.DkmInstructionAddress address) cil managed
  {
  } // end of method IDkmRuntimeFunctionResolverClient::OnFunctionResolved

  .method public hidebysig newslot abstract virtual 
          instance void  OnResolverMessage(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmRuntimeFunctionResolutionRequest runtimeFunctionResolutionRequest,
                                           valuetype Microsoft.VisualStudio.Debugger.Breakpoints.DkmBreakpointMessageLevel level,
                                           string message) cil managed
  {
  } // end of method IDkmRuntimeFunctionResolverClient::OnResolverMessage

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeFunctionResolverClient

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeHandleComparer
{
  .method public hidebysig newslot abstract virtual 
          instance bool  CompareHandleValuesThroughVil(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                                       class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue handleValue1,
                                                       class Microsoft.VisualStudio.CorDebugInterop.ICorDebugHandleValue handleValue2) cil managed
  {
  } // end of method IDkmRuntimeHandleComparer::CompareHandleValuesThroughVil

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeHandleComparer

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceLoadCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRuntimeInstanceLoadComplete(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                       class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmRuntimeInstanceLoadCompleteNotification::OnRuntimeInstanceLoadComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceLoadCompleteNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceLoadNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRuntimeInstanceLoad(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                               class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmRuntimeInstanceLoadNotification::OnRuntimeInstanceLoad

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceLoadNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceUnloadNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnRuntimeInstanceUnload(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                 class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmRuntimeInstanceUnloadNotification::OnRuntimeInstanceUnload

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeInstanceUnloadNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeMonitorBreakpointHandler
{
  .method public hidebysig newslot abstract virtual 
          instance void  EnableRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint) cil managed
  {
  } // end of method IDkmRuntimeMonitorBreakpointHandler::EnableRuntimeBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  TestRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint) cil managed
  {
  } // end of method IDkmRuntimeMonitorBreakpointHandler::TestRuntimeBreakpoint

  .method public hidebysig newslot abstract virtual 
          instance void  DisableRuntimeBreakpoint(class Microsoft.VisualStudio.Debugger.Breakpoints.DkmRuntimeBreakpoint runtimeBreakpoint) cil managed
  {
  } // end of method IDkmRuntimeMonitorBreakpointHandler::DisableRuntimeBreakpoint

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeMonitorBreakpointHandler

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeSetNextStatement
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetNextStatement(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                          class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement) cil managed
  {
  } // end of method IDkmRuntimeSetNextStatement::SetNextStatement

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeSetNextStatement

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeStepper
{
  .method public hidebysig newslot abstract virtual 
          instance void  BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmRuntimeStepper::BeforeEnableNewStepper

  .method public hidebysig newslot abstract virtual 
          instance bool  OwnsCurrentExecutionLocation(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                      class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                                      valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason) cil managed
  {
  } // end of method IDkmRuntimeStepper::OwnsCurrentExecutionLocation

  .method public hidebysig newslot abstract virtual 
          instance void  Step(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                              class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                              valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason) cil managed
  {
  } // end of method IDkmRuntimeStepper::Step

  .method public hidebysig newslot abstract virtual 
          instance void  StopStep(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                  class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmRuntimeStepper::StopStep

  .method public hidebysig newslot abstract virtual 
          instance void  AfterSteppingArbitration(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                  class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                                  valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                                  class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance newControllingRuntimeInstance) cil managed
  {
  } // end of method IDkmRuntimeStepper::AfterSteppingArbitration

  .method public hidebysig newslot abstract virtual 
          instance void  OnNewControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                         class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                                         valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                                         class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance controllingRuntimeInstance) cil managed
  {
  } // end of method IDkmRuntimeStepper::OnNewControllingRuntimeInstance

  .method public hidebysig newslot abstract virtual 
          instance bool  StepControlRequested(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                              class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                              valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                              class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance) cil managed
  {
  } // end of method IDkmRuntimeStepper::StepControlRequested

  .method public hidebysig newslot abstract virtual 
          instance void  TakeStepControl(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                         class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                         bool leaveGuardsInPlace,
                                         valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                         class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance) cil managed
  {
  } // end of method IDkmRuntimeStepper::TakeStepControl

  .method public hidebysig newslot abstract virtual 
          instance void  NotifyStepComplete(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                            class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmRuntimeStepper::NotifyStepComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmRuntimeStepper

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentContentInsertNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnScriptDocumentContentInsert(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                                                       valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan span,
                                                       string newText,
                                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmScriptDocumentContentInsertNotification::OnScriptDocumentContentInsert

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentContentInsertNotification

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument
       extends Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 64 66 37 30 39 32 64 2D 31 35 33 65   // ..$5df7092d-153e
                                                                                                  2D 33 61 39 65 2D 36 61 39 63 2D 30 31 64 37 30   // -3a9e-6a9c-01d70
                                                                                                  61 65 35 37 31 34 38 00 00 )                      // ae57148..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_Module

  .method public hidebysig specialname instance string 
          get_Url() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_Url

  .method public hidebysig specialname instance string 
          get_FilePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_FilePath

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_Flags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType 
          get_ContentType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_ContentType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind 
          get_EmbeddedDocumentKind() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_EmbeddedDocumentKind

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem 
          get_SourceProjectItem() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_SourceProjectItem

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState 
          get_JmcState() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::get_JmcState

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent,
                 string Title,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Url,
                 string FilePath,
                 valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Flags,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem SourceProjectItem,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode Parent,
                 string Title,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Url,
                 string FilePath,
                 valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType ContentType,
                 valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind EmbeddedDocumentKind,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem SourceProjectItem,
                 valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState JmcState,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::Create

  .method public hidebysig instance string 
          GetContent(bool EnableContentEvents,
                     [out] uint32[]& SectionDividers) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::GetContent

  .method public hidebysig instance void 
          SetRaiseContentEvents(bool Enable) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::SetRaiseContentEvents

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument 
          TryResolve(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId SourceFileId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::TryResolve

  .method public hidebysig instance void 
          SetRaiseSymbolEvents(bool Enable) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::SetRaiseSymbolEvents

  .method public hidebysig instance void 
          SetRaiseSymbolEvents(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                               bool Enable,
                               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::SetRaiseSymbolEvents

  .method public hidebysig instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> 
          GetProjectItemScriptBlocks() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::GetProjectItemScriptBlocks

  .method public hidebysig instance void 
          OnContentInsert(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Span,
                          string NewText) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::OnContentInsert

  .method public hidebysig instance void 
          OnContentRemove(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Span,
                          int32 CharsToRemove) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::OnContentRemove

  .method public hidebysig instance void 
          SetJmcState(valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState NewValue) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptDocument::SetJmcState

  .property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType
          ContentType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_ContentType()
  } // end of property DkmScriptDocument::ContentType
  .property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind
          EmbeddedDocumentKind()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_EmbeddedDocumentKind()
  } // end of property DkmScriptDocument::EmbeddedDocumentKind
  .property instance string FilePath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_FilePath()
  } // end of property DkmScriptDocument::FilePath
  .property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Flags()
  } // end of property DkmScriptDocument::Flags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState
          JmcState()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_JmcState()
  } // end of property DkmScriptDocument::JmcState
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Module()
  } // end of property DkmScriptDocument::Module
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem
          SourceProjectItem()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_SourceProjectItem()
  } // end of property DkmScriptDocument::SourceProjectItem
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_UniqueId()
  } // end of property DkmScriptDocument::UniqueId
  .property instance string Url()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument::get_Url()
  } // end of property DkmScriptDocument::Url
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 31 39 36 35 33 33 65 2D 31 31 65 38   // ..$5196533e-11e8
                                                                                                  2D 35 33 62 30 2D 36 36 32 30 2D 62 61 34 35 34   // -53b0-6620-ba454
                                                                                                  38 33 30 65 33 33 62 00 00 )                      // 830e33b..
  .field public initonly int32 StartLine
  .field public initonly int32 EndLine
  .field public initonly int32 StartColumn
  .field public initonly int32 EndColumn
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                              valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                               valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 StartLine,
                               int32 EndLine,
                               int32 StartColumn,
                               int32 EndColumn) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTextSpan::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentContentRemoveNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnScriptDocumentContentRemove(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                                                       valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan span,
                                                       int32 charsToRemove,
                                                       class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmScriptDocumentContentRemoveNotification::OnScriptDocumentContentRemove

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentContentRemoveNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentProvider
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetContent(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                                      bool enableContentEvents,
                                      [out] uint32[]& sectionDividers) cil managed
  {
  } // end of method IDkmScriptDocumentProvider::GetContent

  .method public hidebysig newslot abstract virtual 
          instance void  SetRaiseContentEvents(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                                               bool enable) cil managed
  {
  } // end of method IDkmScriptDocumentProvider::SetRaiseContentEvents

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentQuery
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument 
          TryResolve(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                     class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId sourceFileId) cil managed
  {
  } // end of method IDkmScriptDocumentQuery::TryResolve

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentQuery

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 39 62 61 61 36 30 62 2D 31 65 39 37   // ..$79baa60b-1e97
                                                                                                  2D 61 63 39 36 2D 30 64 39 35 2D 39 39 36 65 36   // -ac96-0d95-996e6
                                                                                                  62 39 39 37 63 33 33 00 00 )                      // b997c33..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_Module

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_UniqueId

  .method public hidebysig specialname instance string 
          get_DocumentName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_DocumentName

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          get_ScriptDocument() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_ScriptDocument

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength 
          get_MatchStrength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_MatchStrength

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning 
          get_Warning() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_Warning

  .method public hidebysig specialname instance bool 
          get_TextRequested() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::get_TextRequested

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string DocumentName,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength MatchStrength,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Warning,
                 bool TextRequested,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          FindSymbols(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan,
                      string Text,
                      [out] class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[]& SymbolLocation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::FindSymbols

  .method public hidebysig instance void 
          FindSymbols(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan,
                      string Text,
                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedDocument::FindSymbols

  .property instance string DocumentName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_DocumentName()
  } // end of property DkmResolvedDocument::DocumentName
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength
          MatchStrength()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_MatchStrength()
  } // end of property DkmResolvedDocument::MatchStrength
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_Module()
  } // end of property DkmResolvedDocument::Module
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument
          ScriptDocument()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_ScriptDocument()
  } // end of property DkmResolvedDocument::ScriptDocument
  .property instance bool TextRequested()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_TextRequested()
  } // end of property DkmResolvedDocument::TextRequested
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_UniqueId()
  } // end of property DkmResolvedDocument::UniqueId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning
          Warning()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument::get_Warning()
  } // end of property DkmResolvedDocument::Warning
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 38 39 32 64 38 63 66 2D 62 36 66 64   // ..$a892d8cf-b6fd
                                                                                                  2D 37 65 32 30 2D 65 30 64 61 2D 36 63 65 63 61   // -7e20-e0da-6ceca
                                                                                                  36 61 37 63 30 63 34 00 00 )                      // 6a7c0c4..
  .class auto ansi sealed nested public MD5Hash
         extends [mscorlib]System.Object
  {
    .field public initonly valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Value
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmMD5HashValue Value) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MD5Hash::.ctor

  } // end of class MD5Hash

  .class auto ansi sealed nested public SHA1Hash
         extends [mscorlib]System.Object
  {
    .field public initonly valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue Value
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue Value) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SHA1Hash::.ctor

  } // end of class SHA1Hash

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash 
          get_MD5HashPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceFileId::get_MD5HashPart

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash 
          get_SHA1HashPart() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceFileId::get_SHA1HashPart

  .method public hidebysig specialname instance string 
          get_DocumentName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceFileId::get_DocumentName

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          get_ScriptDocument() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceFileId::get_ScriptDocument

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId 
          Create(string DocumentName,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash MD5Hash,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash SHA1Hash) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSourceFileId::Create

  .property instance string DocumentName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_DocumentName()
  } // end of property DkmSourceFileId::DocumentName
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash
          MD5HashPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/MD5Hash Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_MD5HashPart()
  } // end of property DkmSourceFileId::MD5HashPart
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash
          SHA1HashPart()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId/SHA1Hash Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_SHA1HashPart()
  } // end of property DkmSourceFileId::SHA1HashPart
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument
          ScriptDocument()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId::get_ScriptDocument()
  } // end of property DkmSourceFileId::ScriptDocument
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentSourceProjectItemChanged
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSourceProjectItemChanged(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument) cil managed
  {
  } // end of method IDkmScriptDocumentSourceProjectItemChanged::OnSourceProjectItemChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentSourceProjectItemChanged

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentSymbolProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetRaiseSymbolEvents(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument,
                                              bool enable) cil managed
  {
  } // end of method IDkmScriptDocumentSymbolProvider::SetRaiseSymbolEvents

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentSymbolProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentTreeNodeCreateNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnScriptDocumentTreeNodeCreate(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode scriptDocumentTreeNode,
                                                        class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmScriptDocumentTreeNodeCreateNotification::OnScriptDocumentTreeNodeCreate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentTreeNodeCreateNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentTreeNodeUnloadNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnScriptDocumentTreeNodeUnload(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentTreeNode scriptDocumentTreeNode,
                                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmScriptDocumentTreeNodeUnloadNotification::OnScriptDocumentTreeNodeUnload

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptDocumentTreeNodeUnloadNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptJmcStateChangeNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnJmcStateChanged(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument) cil managed
  {
  } // end of method IDkmScriptJmcStateChangeNotification::OnJmcStateChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptJmcStateChangeNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptSymbolCallback
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction 
          GetNextSteppingAction(class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol scriptInstruction,
                                class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol startingInstruction,
                                bool isSteppingByLine) cil managed
  {
  } // end of method IDkmScriptSymbolCallback::GetNextSteppingAction

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptSymbolCallback

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction CompleteStep = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipCurrentMethod = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipMethodCall = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction SkipStatement = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 65 62 61 61 30 61 66 2D 36 34 33 37   // ..$aebaa0af-6437
                                                                                                  2D 32 65 63 66 2D 61 61 66 31 2D 38 36 63 35 38   // -2ecf-aaf1-86c58
                                                                                                  65 62 61 39 34 34 37 00 00 )                      // eba9447..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          get_Document() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::get_Document

  .method public hidebysig specialname instance int32 
          get_Revision() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::get_Revision

  .method public hidebysig specialname instance int32 
          get_StartIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::get_StartIndex

  .method public hidebysig specialname instance int32 
          get_StatementLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::get_StatementLength

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 valuetype [mscorlib]System.Guid RuntimeType,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document,
                 int32 Revision,
                 int32 StartIndex,
                 int32 StatementLength,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::Create

  .method public hidebysig instance valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptSymbolNextSteppingAction 
          GetNextSteppingAction(class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol StartingInstruction,
                                bool IsSteppingByLine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionSymbol::GetNextSteppingAction

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_AdditionalData()
  } // end of property DkmScriptInstructionSymbol::AdditionalData
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument
          Document()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_Document()
  } // end of property DkmScriptInstructionSymbol::Document
  .property instance int32 Revision()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_Revision()
  } // end of property DkmScriptInstructionSymbol::Revision
  .property instance int32 StartIndex()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_StartIndex()
  } // end of property DkmScriptInstructionSymbol::StartIndex
  .property instance int32 StatementLength()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol::get_StatementLength()
  } // end of property DkmScriptInstructionSymbol::StatementLength
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionSymbol

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptSymbolsUpdatedNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnScriptSymbolsUpdated(class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance scriptRuntimeInstance,
                                                class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument[] documents,
                                                class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmScriptSymbolsUpdatedNotification::OnScriptSymbolsUpdated

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmScriptSymbolsUpdatedNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSetNextStatementQuery
{
  .method public hidebysig newslot abstract virtual 
          instance uint32  CanSetNextStatement(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                               class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStatement) cil managed
  {
  } // end of method IDkmSetNextStatementQuery::CanSetNextStatement

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSetNextStatementQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSingleStepCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSingleStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmSingleStepCompleteNotification::OnSingleStepComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSingleStepCompleteNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSingleStepCompleteReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSingleStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmSingleStepRequest singleStepRequest,
                                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmSingleStepCompleteReceived::OnSingleStepCompleteReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSingleStepCompleteReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSourceServerSymbolQuery
{
  .method public hidebysig newslot abstract virtual 
          instance uint8[]  GetSourceServerData(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                                class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmSourceServerSymbolQuery::GetSourceServerData

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSourceServerSymbolQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetNextFrames(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackContext stackContext,
                                       class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                       int32 requestSize,
                                       class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetNextFramesAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmStackProvider::GetNextFrames

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackFrame 
          Format(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession,
                 valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmFrameFormatOptions options) cil managed
  {
  } // end of method IDkmStackProvider::Format

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          GetTopStackFrame(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmStackProvider::GetTopStackFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackWalkFrameInterfaceProvider
{
  .method public hidebysig newslot abstract virtual 
          instance object  GetFrameInspectionInterface(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                                       class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession session,
                                                       valuetype [mscorlib]System.Guid interfaceID) cil managed
  {
  } // end of method IDkmStackWalkFrameInterfaceProvider::GetFrameInspectionInterface

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackWalkFrameInterfaceProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackWalkFrameInterfaceProvider2
{
  .method public hidebysig newslot abstract virtual 
          instance object  GetCorFrame(class Microsoft.VisualStudio.Debugger.Clr.DkmClrRuntimeInstance clrRuntimeInstance,
                                       class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                       uint64 frameBase,
                                       valuetype [mscorlib]System.Guid interfaceID) cil managed
  {
  } // end of method IDkmStackWalkFrameInterfaceProvider2::GetCorFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStackWalkFrameInterfaceProvider2

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStartDebuggingOperations
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          AttachToProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest 'request') cil managed
  {
  } // end of method IDkmStartDebuggingOperations::AttachToProcess

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmLaunchedProcessInfo 
          LaunchDebuggedProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request') cil managed
  {
  } // end of method IDkmStartDebuggingOperations::LaunchDebuggedProcess

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          ResumeDebuggedProcess(class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchRequest 'request',
                                valuetype [mscorlib]System.Guid uniqueProcessId) cil managed
  {
  } // end of method IDkmStartDebuggingOperations::ResumeDebuggedProcess

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStartDebuggingOperations

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 63 30 61 64 61 35 34 2D 64 31 37 65   // ..$7c0ada54-d17e
                                                                                                  2D 30 30 36 37 2D 63 62 35 65 2D 35 61 38 31 36   // -0067-cb5e-5a816
                                                                                                  39 35 30 37 36 36 33 00 00 )                      // 9507663..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_Connection

  .method public hidebysig specialname instance string 
          get_Path() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_Path

  .method public hidebysig specialname instance int32 
          get_ProcessId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_ProcessId

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueProcessId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_UniqueProcessId

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod 
          get_StartMethod() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_StartMethod

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_HostingProcessLanguage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_HostingProcessLanguage

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings 
          get_EngineSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_EngineSettings

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings 
          get_DebugLaunchSettings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_DebugLaunchSettings

  .method public hidebysig specialname instance int64 
          get_StartTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::get_StartTime

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 string Path,
                 int32 ProcessId,
                 valuetype [mscorlib]System.Guid UniqueProcessId,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod,
                 valuetype [mscorlib]System.Guid HostingProcessLanguage,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 string Path,
                 int32 ProcessId,
                 valuetype [mscorlib]System.Guid UniqueProcessId,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod StartMethod,
                 valuetype [mscorlib]System.Guid HostingProcessLanguage,
                 class Microsoft.VisualStudio.Debugger.DkmEngineSettings EngineSettings,
                 class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                 int64 StartTime) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          AttachToProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessAttachRequest::AttachToProcess

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_Connection()
  } // end of property DkmProcessAttachRequest::Connection
  .property instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings
          DebugLaunchSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_DebugLaunchSettings()
  } // end of property DkmProcessAttachRequest::DebugLaunchSettings
  .property instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings
          EngineSettings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmEngineSettings Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_EngineSettings()
  } // end of property DkmProcessAttachRequest::EngineSettings
  .property instance valuetype [mscorlib]System.Guid
          HostingProcessLanguage()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_HostingProcessLanguage()
  } // end of property DkmProcessAttachRequest::HostingProcessLanguage
  .property instance string Path()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_Path()
  } // end of property DkmProcessAttachRequest::Path
  .property instance int32 ProcessId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_ProcessId()
  } // end of property DkmProcessAttachRequest::ProcessId
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod
          StartMethod()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmStartMethod Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_StartMethod()
  } // end of property DkmProcessAttachRequest::StartMethod
  .property instance int64 StartTime()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_StartTime()
  } // end of property DkmProcessAttachRequest::StartTime
  .property instance valuetype [mscorlib]System.Guid
          UniqueProcessId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest::get_UniqueProcessId()
  } // end of property DkmProcessAttachRequest::UniqueProcessId
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessAttachRequest

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepCompleteNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnStepComplete(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                        class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                        bool hasException,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmStepCompleteNotification::OnStepComplete

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepCompleteNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepCompleteReceived
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnStepCompleteReceived(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                                class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                bool hasException,
                                                class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmStepCompleteReceived::OnStepCompleteReceived

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepCompleteReceived

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepOverPropertiesAndOperatorsEnableNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnStepOverPropertiesAndOperatorsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmStepOverPropertiesAndOperatorsEnableNotification::OnStepOverPropertiesAndOperatorsChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStepOverPropertiesAndOperatorsEnableNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingCodePathProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] 
          GetCodePaths(class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource steppingCodePathSource,
                       class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame stackFrame,
                       valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit stepUnit) cil managed
  {
  } // end of method IDkmSteppingCodePathProvider::GetCodePaths

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingCodePathProvider

.class public auto ansi Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 34 66 37 61 38 31 61 2D 36 32 62 39   // ..$b4f7a81a-62b9
                                                                                                  2D 64 65 32 39 2D 31 30 36 64 2D 35 66 30 35 35   // -de29-106d-5f055
                                                                                                  31 31 34 38 31 30 61 00 00 )                      // 114810a..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol 
          get_InstructionSymbol() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePathSource::get_InstructionSymbol

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePathSource::get_InstructionAddress

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePathSource::get_Language

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol InstructionSymbol,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePathSource::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePath[] 
          GetCodePaths(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                       valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit StepUnit) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSteppingCodePathSource::GetCodePaths

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_InstructionAddress()
  } // end of property DkmSteppingCodePathSource::InstructionAddress
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
          InstructionSymbol()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_InstructionSymbol()
  } // end of property DkmSteppingCodePathSource::InstructionSymbol
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource::get_Language()
  } // end of property DkmSteppingCodePathSource::Language
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmSteppingCodePathSource

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Instruction = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Line = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit Statement = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmStepUnit

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManager
{
  .method public hidebysig newslot abstract virtual 
          instance void  BeforeEnableNewStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmSteppingManager::BeforeEnableNewStepper

  .method public hidebysig newslot abstract virtual 
          instance void  EnableStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                       bool removeOtherSteppers) cil managed
  {
  } // end of method IDkmSteppingManager::EnableStepper

  .method public hidebysig newslot abstract virtual 
          instance void  CancelStepper(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                       class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance) cil managed
  {
  } // end of method IDkmSteppingManager::CancelStepper

  .method public hidebysig newslot abstract virtual 
          instance void  ClearSteppers(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmSteppingManager::ClearSteppers

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManager

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManagerCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          GetControllingRuntimeInstance(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmSteppingManagerCallback::GetControllingRuntimeInstance

  .method public hidebysig newslot abstract virtual 
          instance bool  StepControlRequested(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                              valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                              class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance) cil managed
  {
  } // end of method IDkmSteppingManagerCallback::StepControlRequested

  .method public hidebysig newslot abstract virtual 
          instance void  TakeStepControl(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                         bool leaveGuardsInPlace,
                                         valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                         class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance callingRuntimeInstance) cil managed
  {
  } // end of method IDkmSteppingManagerCallback::TakeStepControl

  .method public hidebysig newslot abstract virtual 
          instance void  OnStepArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                           valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                           class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance currentControllingRuntimeInstance) cil managed
  {
  } // end of method IDkmSteppingManagerCallback::OnStepArbitration

  .method public hidebysig newslot abstract virtual 
          instance void  OnCrossThreadStepArbitration(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                                      valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepArbitrationReason reason,
                                                      class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance currentControllingRuntimeInstance,
                                                      class Microsoft.VisualStudio.Debugger.DkmThread newThread,
                                                      class Microsoft.VisualStudio.Debugger.DkmInstructionAddress newStartingInstructionAddress,
                                                      [out] class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper& newStepper) cil managed
  {
  } // end of method IDkmSteppingManagerCallback::OnCrossThreadStepArbitration

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManagerCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManagerCallback11a
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetExceptionInFlight(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper,
                                              bool enable) cil managed
  {
  } // end of method IDkmSteppingManagerCallback11a::SetExceptionInFlight

  .method public hidebysig newslot abstract virtual 
          instance bool  IsExceptionInFlight(class Microsoft.VisualStudio.Debugger.Stepping.DkmStepper stepper) cil managed
  {
  } // end of method IDkmSteppingManagerCallback11a::IsExceptionInFlight

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSteppingManagerCallback11a

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStopDebuggingOperations
{
  .method public hidebysig newslot abstract virtual 
          instance void  Detach(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmStopDebuggingOperations::Detach

  .method public hidebysig newslot abstract virtual 
          instance void  Terminate(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                   int32 exitCode) cil managed
  {
  } // end of method IDkmStopDebuggingOperations::Terminate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStopDebuggingOperations

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStowedExceptionProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation[] 
          GetStowedExceptions(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmStowedExceptionProvider::GetStowedExceptions

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation 
          GetNativeStowedException(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmStowedExceptionProvider::GetNativeStowedException

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionInformation 
          GetManagedStowedException(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmStowedExceptionProvider::GetManagedStowedException

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmStowedExceptionProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSuppressOptimizationsEnableNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSuppressOptimizationsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmSuppressOptimizationsEnableNotification::OnSuppressOptimizationsChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSuppressOptimizationsEnableNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolAlternateSourcePositionQuery
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetAlternateSourcePosition(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                     valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags') cil managed
  {
  } // end of method IDkmSymbolAlternateSourcePositionQuery::GetAlternateSourcePosition

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolAlternateSourcePositionQuery

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags ExtendedSourceRange = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolCompilerIdQuery
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          GetCompilerId(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                        class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession) cil managed
  {
  } // end of method IDkmSymbolCompilerIdQuery::GetCompilerId

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolCompilerIdQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolCompilerIdQueryCallback
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId 
          GetCompilerIdCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession) cil managed
  {
  } // end of method IDkmSymbolCompilerIdQueryCallback::GetCompilerIdCallback

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolCompilerIdQueryCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDisassemblyQuery
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetDisassemblyLabel(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                               class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession) cil managed
  {
  } // end of method IDkmSymbolDisassemblyQuery::GetDisassemblyLabel

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDisassemblyQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDocumentCollectionQuery
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] 
          FindDocuments(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                        class Microsoft.VisualStudio.Debugger.Symbols.DkmSourceFileId sourceFileId) cil managed
  {
  } // end of method IDkmSymbolDocumentCollectionQuery::FindDocuments

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDocumentCollectionQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDocumentSpanQuery
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          FindSymbols(class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument resolvedDocument,
                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan textSpan,
                      string text,
                      [out] class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[]& symbolLocation) cil managed
  {
  } // end of method IDkmSymbolDocumentSpanQuery::FindSymbols

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolDocumentSpanQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolFunctionResolver
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          Resolve(class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest symbolFunctionResolutionRequest) cil managed
  {
  } // end of method IDkmSymbolFunctionResolver::Resolve

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolFunctionResolver

.class public auto ansi Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 36 35 62 64 34 61 32 2D 36 31 61 62   // ..$365bd4a2-61ab
                                                                                                  2D 62 37 30 64 2D 34 38 66 34 2D 65 64 34 31 62   // -b70d-48f4-ed41b
                                                                                                  66 64 66 39 61 38 37 00 00 )                      // fdf9a87..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_Process

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_Module

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_Language

  .method public hidebysig specialname instance string 
          get_FunctionName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_FunctionName

  .method public hidebysig specialname instance uint32 
          get_LineOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_LineOffset

  .method public hidebysig specialname instance string 
          get_ModuleName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_ModuleName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags 
          get_SearchFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::get_SearchFlags

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 string FunctionName,
                 uint32 LineOffset,
                 string ModuleName,
                 valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags SearchFlags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::Create

  .method public hidebysig instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          Resolve() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolFunctionResolutionRequest::Resolve

  .property instance string FunctionName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_FunctionName()
  } // end of property DkmSymbolFunctionResolutionRequest::FunctionName
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Language()
  } // end of property DkmSymbolFunctionResolutionRequest::Language
  .property instance uint32 LineOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_LineOffset()
  } // end of property DkmSymbolFunctionResolutionRequest::LineOffset
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Module()
  } // end of property DkmSymbolFunctionResolutionRequest::Module
  .property instance string ModuleName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_ModuleName()
  } // end of property DkmSymbolFunctionResolutionRequest::ModuleName
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_Process()
  } // end of property DkmSymbolFunctionResolutionRequest::Process
  .property instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags
          SearchFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest::get_SearchFlags()
  } // end of property DkmSymbolFunctionResolutionRequest::SearchFlags
} // end of class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmSymbolFunctionResolutionRequest

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolHiddenAttributeQuery
{
  .method public hidebysig newslot abstract virtual 
          instance void  IsHiddenCode(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                      class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                      class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession,
                                      class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress,
                                      class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmSymbolHiddenAttributeQuery::IsHiddenCode

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolHiddenAttributeQuery

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsHiddenCodeAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsHiddenCodeAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags 
          get_NonUserCodeFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsHiddenCodeAsyncResult::get_NonUserCodeFlags

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol 
          get_NextLine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsHiddenCodeAsyncResult::get_NextLine

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags NonUserCodeFlags,
                               class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol NextLine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIsHiddenCodeAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_ErrorCode()
  } // end of property DkmIsHiddenCodeAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
          NextLine()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_NextLine()
  } // end of property DkmIsHiddenCodeAsyncResult::NextLine
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags
          NonUserCodeFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmNonUserCodeFlags Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult::get_NonUserCodeFlags()
  } // end of property DkmIsHiddenCodeAsyncResult::NonUserCodeFlags
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmIsHiddenCodeAsyncResult

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolLocator
{
  .method public hidebysig newslot abstract virtual 
          instance void  TryLoadSymbols(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmSymbolLocator::TryLoadSymbols

  .method public hidebysig newslot abstract virtual 
          instance string  GetSymbolFilePath(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module) cil managed
  {
  } // end of method IDkmSymbolLocator::GetSymbolFilePath

  .method public hidebysig newslot abstract virtual 
          instance string  GetSymbolStatusMessage(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance,
                                                  bool excludeCommonErrors) cil managed
  {
  } // end of method IDkmSymbolLocator::GetSymbolStatusMessage

  .method public hidebysig newslot abstract virtual 
          instance string  GetSymbolLoadInformation(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmSymbolLocator::GetSymbolLoadInformation

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolLocator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolMemoryReader
{
  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          ReadSymbols(class Microsoft.VisualStudio.Debugger.DkmModuleInstance moduleInstance) cil managed
  {
  } // end of method IDkmSymbolMemoryReader::ReadSymbols

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolMemoryReader

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolPathChangeNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnSymbolPathChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmSymbolPathChangeNotification::OnSymbolPathChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolPathChangeNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolProviderCallback
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange[] 
          GetSteppingRanges(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRangeBoundary rangeBoundary,
                            bool includeInline) cil managed
  {
  } // end of method IDkmSymbolProviderCallback::GetSteppingRanges

  .method public hidebysig newslot abstract virtual 
          instance bool  HasLineInfo(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction) cil managed
  {
  } // end of method IDkmSymbolProviderCallback::HasLineInfo

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          GetEntryPointSymbols(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module) cil managed
  {
  } // end of method IDkmSymbolProviderCallback::GetEntryPointSymbols

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSteppingRange 
          GetCurrentStatementRange(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction) cil managed
  {
  } // end of method IDkmSymbolProviderCallback::GetCurrentStatementRange

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] 
          GetFunctionInfo(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                          string functionName) cil managed
  {
  } // end of method IDkmSymbolProviderCallback::GetFunctionInfo

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolProviderCallback

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 62 65 65 66 63 39 30 2D 62 31 34 31   // ..$dbeefc90-b141
                                                                                                  2D 31 61 36 65 2D 31 62 34 37 2D 37 62 34 63 64   // -1a6e-1b47-7b4cd
                                                                                                  32 30 66 36 66 62 61 00 00 )                      // 20f6fba..
  .field public initonly uint32 RVA
  .field public initonly uint32 Size
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint32 RVA,
                               uint32 Size) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRVASizePair::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolQuery
{
  .method public hidebysig newslot abstract virtual 
          instance object  GetSymbolInterface(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule module,
                                              valuetype [mscorlib]System.Guid interfaceID) cil managed
  {
  } // end of method IDkmSymbolQuery::GetSymbolInterface

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetSourcePosition(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags',
                            class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession,
                            [out] bool& startOfLine) cil managed
  {
  } // end of method IDkmSymbolQuery::GetSourcePosition

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolQueryCallback
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          GetSourcePositionCallback(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol instruction,
                                    valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePositionFlags 'flags',
                                    class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession,
                                    [out] bool& startOfLine) cil managed
  {
  } // end of method IDkmSymbolQueryCallback::GetSourcePositionCallback

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolQueryCallback

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolStackWalk
{
  .method public hidebysig newslot abstract virtual 
          instance void  Initialize(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext,
                                    class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers,
                                    uint32 stackRangeSize) cil managed
  {
  } // end of method IDkmSymbolStackWalk::Initialize

  .method public hidebysig newslot abstract virtual 
          instance void  UpdatePosition(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext,
                                        class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters registers,
                                        uint32 stackRangeSize,
                                        class Microsoft.VisualStudio.Debugger.DkmInstructionAddress instructionAddress) cil managed
  {
  } // end of method IDkmSymbolStackWalk::UpdatePosition

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame 
          WalkNextFrame(class Microsoft.VisualStudio.Debugger.CallStack.DkmSymbolStackWalkContext symbolStackWalkContext,
                        [out] class Microsoft.VisualStudio.Debugger.CallStack.DkmFrameRegisters& nextRegisters) cil managed
  {
  } // end of method IDkmSymbolStackWalk::WalkNextFrame

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmSymbolStackWalk

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetTasks(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider,
                                  bool isRoot,
                                  uint32 requestCount,
                                  [out] uint32& scheduledTaskCount,
                                  [out] class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[]& items,
                                  [out] uint32& taskEnumFlags) cil managed
  {
  } // end of method IDkmTaskProvider::GetTasks

  .method public hidebysig newslot abstract virtual 
          instance string[]  GetPropertyNames(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider) cil managed
  {
  } // end of method IDkmTaskProvider::GetPropertyNames

  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask[] 
          GetChildTasks(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task) cil managed
  {
  } // end of method IDkmTaskProvider::GetChildTasks

  .method public hidebysig newslot abstract virtual 
          instance void  GetTaskProperties(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task,
                                           uint32 radix,
                                           int32 fields,
                                           [out] valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties& properties) cil managed
  {
  } // end of method IDkmTaskProvider::GetTaskProperties

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProvider

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 30 66 63 32 30 35 33 2D 38 36 36 31   // ..$d0fc2053-8661
                                                                                                  2D 32 36 30 32 2D 30 37 38 65 2D 31 33 32 30 37   // -2602-078e-13207
                                                                                                  61 38 62 36 37 32 37 00 00 )                      // a8b6727..
  .field public initonly int32 Fields
  .field public initonly int32 Flags
  .field public initonly string Location
  .field public initonly string Name
  .field public initonly string Property1
  .field public initonly string Property2
  .field public initonly string Property3
  .field public initonly int32 State
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string Name,
                               string Location,
                               string Property1,
                               string Property2,
                               string Property3,
                               int32 State,
                               int32 Flags,
                               int32 Fields) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProperties::.ctor

} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProperties

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProviderCreateNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnTaskProviderCreate(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProvider taskProvider,
                                              class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmTaskProviderCreateNotification::OnTaskProviderCreate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProviderCreateNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProviderInitialize
{
  .method public hidebysig newslot abstract virtual 
          instance void  InitializeTaskProviders(class Microsoft.VisualStudio.Debugger.DkmProcess process) cil managed
  {
  } // end of method IDkmTaskProviderInitialize::InitializeTaskProviders

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskProviderInitialize

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskSynchronizationObjectProvider
{
  .method public hidebysig newslot abstract virtual 
          instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject[] 
          GetSynchronizationObjects(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask task) cil managed
  {
  } // end of method IDkmTaskSynchronizationObjectProvider::GetSynchronizationObjects

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTaskSynchronizationObjectProvider

.class public auto ansi Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 65 65 65 62 39 36 38 2D 33 31 37 65   // ..$ceeeb968-317e
                                                                                                  2D 34 37 65 37 2D 66 30 65 37 2D 34 32 64 31 32   // -47e7-f0e7-42d12
                                                                                                  66 35 62 62 34 30 36 00 00 )                      // f5bb406..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask 
          get_Task() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_Task

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmThread 
          get_OwningThread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_OwningThread

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_UniqueId

  .method public hidebysig specialname instance string 
          get_DecimalName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_DecimalName

  .method public hidebysig specialname instance string 
          get_HexidecimalName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_HexidecimalName

  .method public hidebysig specialname instance string 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_Type

  .method public hidebysig specialname instance int32 
          get_WaitTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_WaitTime

  .method public hidebysig specialname instance int32 
          get_Timeout() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::get_Timeout

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject 
          Create(class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Task,
                 class Microsoft.VisualStudio.Debugger.DkmThread OwningThread,
                 string DecimalName,
                 string HexidecimalName,
                 string Type,
                 int32 WaitTime,
                 int32 Timeout,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskSynchronizationObject::Create

  .property instance string DecimalName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_DecimalName()
  } // end of property DkmTaskSynchronizationObject::DecimalName
  .property instance string HexidecimalName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_HexidecimalName()
  } // end of property DkmTaskSynchronizationObject::HexidecimalName
  .property instance class Microsoft.VisualStudio.Debugger.DkmThread
          OwningThread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmThread Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_OwningThread()
  } // end of property DkmTaskSynchronizationObject::OwningThread
  .property instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask
          Task()
  {
    .get instance class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTask Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Task()
  } // end of property DkmTaskSynchronizationObject::Task
  .property instance int32 Timeout()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Timeout()
  } // end of property DkmTaskSynchronizationObject::Timeout
  .property instance string Type()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_Type()
  } // end of property DkmTaskSynchronizationObject::Type
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_UniqueId()
  } // end of property DkmTaskSynchronizationObject::UniqueId
  .property instance int32 WaitTime()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject::get_WaitTime()
  } // end of property DkmTaskSynchronizationObject::WaitTime
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskSynchronizationObject

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadContextOperation
{
  .method public hidebysig newslot abstract virtual 
          instance void  SetContext(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                    uint8[] context) cil managed
  {
  } // end of method IDkmThreadContextOperation::SetContext

  .method public hidebysig newslot abstract virtual 
          instance void  GetContext(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                    int32 contextFlags,
                                    uint8[] context) cil managed
  {
  } // end of method IDkmThreadContextOperation::GetContext

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadContextOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadCreateNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnThreadCreate(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                        class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                        class Microsoft.VisualStudio.Debugger.DkmEventDescriptorS eventDescriptor) cil managed
  {
  } // end of method IDkmThreadCreateNotification::OnThreadCreate

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadCreateNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadCurrentWinRtExceptionQuery
{
  .method public hidebysig newslot abstract virtual 
          instance uint64  GetThreadCurrentWinRtErrorInfo(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmThreadCurrentWinRtExceptionQuery::GetThreadCurrentWinRtErrorInfo

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadCurrentWinRtExceptionQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadDisplayPropertiesQuery
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetThreadDisplayProperties(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                                    class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                    class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                                    class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmGetThreadDisplayPropertiesAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmThreadDisplayPropertiesQuery::GetThreadDisplayProperties

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadDisplayPropertiesQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadExitNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnThreadExit(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                      int32 exitCode,
                                      class Microsoft.VisualStudio.Debugger.DkmEventDescriptor eventDescriptor) cil managed
  {
  } // end of method IDkmThreadExitNotification::OnThreadExit

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadExitNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadLocationProvider
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetCurrentLocation(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                            class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                            class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmGetCurrentLocationAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmThreadLocationProvider::GetCurrentLocation

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadLocationProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadNameQuery
{
  .method public hidebysig newslot abstract virtual 
          instance string  GetThreadName(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance runtimeInstance,
                                         class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmThreadNameQuery::GetThreadName

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadNameQuery

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadStackRangeProvider
{
  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.CallStack.DkmStackMemoryRange 
          GetStackAddressRange(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmThreadStackRangeProvider::GetStackAddressRange

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadStackRangeProvider

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadSuspension
{
  .method public hidebysig newslot abstract virtual 
          instance uint32  Suspend(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                   bool internalSuspension) cil managed
  {
  } // end of method IDkmThreadSuspension::Suspend

  .method public hidebysig newslot abstract virtual 
          instance uint32  Resume(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                  bool internalSuspension) cil managed
  {
  } // end of method IDkmThreadSuspension::Resume

  .method public hidebysig newslot abstract virtual 
          instance uint32  GetSuspensionCount(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                              bool showInternal) cil managed
  {
  } // end of method IDkmThreadSuspension::GetSuspensionCount

  .method public hidebysig newslot abstract virtual 
          instance uint32  GetDebuggerSuspensionCount(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmThreadSuspension::GetDebuggerSuspensionCount

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmThreadSuspension

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTlsReadWrite
{
  .method public hidebysig newslot abstract virtual 
          instance uint64  GetTlsValue(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                       int32 tlsIndex) cil managed
  {
  } // end of method IDkmTlsReadWrite::GetTlsValue

  .method public hidebysig newslot abstract virtual 
          instance void  SetTlsValue(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                     int32 tlsIndex,
                                     uint64 'value') cil managed
  {
  } // end of method IDkmTlsReadWrite::SetTlsValue

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTlsReadWrite

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTraceSettingsNotification
{
  .method public hidebysig newslot abstract virtual 
          instance void  OnTraceSettingsChanged(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmTraceSettingsNotification::OnTraceSettingsChanged

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmTraceSettingsNotification

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmUserCodeDeterminer
{
  .method public hidebysig newslot abstract virtual 
          instance bool  ComputeUserStatus(class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame frame,
                                           class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession inspectionSession,
                                           [out] bool& exceptionImplementation) cil managed
  {
  } // end of method IDkmUserCodeDeterminer::ComputeUserStatus

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmUserCodeDeterminer

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVirtualMemoryAllocator
{
  .method public hidebysig newslot abstract virtual 
          instance uint64  AllocateVirtualMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                                 uint64 address,
                                                 int32 size,
                                                 int32 allocationType,
                                                 int32 pageProtection) cil managed
  {
  } // end of method IDkmVirtualMemoryAllocator::AllocateVirtualMemory

  .method public hidebysig newslot abstract virtual 
          instance void  FreeVirtualMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                           uint64 address,
                                           int32 size,
                                           int32 freeType) cil managed
  {
  } // end of method IDkmVirtualMemoryAllocator::FreeVirtualMemory

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVirtualMemoryAllocator

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualStudioServices
{
  .method public hidebysig newslot abstract virtual 
          instance void  PostUserMessage(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage) cil managed
  {
  } // end of method IDkmVisualStudioServices::PostUserMessage

  .method public hidebysig newslot abstract virtual 
          instance uint32  DisplayUserMessagePrompt(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage) cil managed
  {
  } // end of method IDkmVisualStudioServices::DisplayUserMessagePrompt

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmCodeViewCompilerId[] 
          GetCodeViewCompilers(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmVisualStudioServices::GetCodeViewCompilers

  .method public hidebysig newslot abstract virtual 
          instance void  SendToVsService(class Microsoft.VisualStudio.Debugger.DkmCustomMessage customMessage,
                                         valuetype [mscorlib]System.Guid vsService,
                                         bool isBlocking) cil managed
  {
  } // end of method IDkmVisualStudioServices::SendToVsService

  .method public hidebysig newslot abstract virtual 
          instance void  GetLanguageSettings(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage language,
                                             [out] class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[]& settings) cil managed
  {
  } // end of method IDkmVisualStudioServices::GetLanguageSettings

  .method public hidebysig newslot abstract virtual 
          instance string  GetUserDocumentPath(class Microsoft.VisualStudio.Debugger.DkmEngineSettings settings) cil managed
  {
  } // end of method IDkmVisualStudioServices::GetUserDocumentPath

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> 
          GetProjectItemScriptBlocks(class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument scriptDocument) cil managed
  {
  } // end of method IDkmVisualStudioServices::GetProjectItemScriptBlocks

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualStudioServices

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 35 65 31 35 63 66 66 2D 64 39 65 62   // ..$95e15cff-d9eb
                                                                                                  2D 38 30 33 30 2D 30 62 34 33 2D 64 61 35 32 63   // -8030-0b43-da52c
                                                                                                  64 31 62 39 37 37 62 00 00 )                      // d1b977b..
  .method public hidebysig specialname instance string 
          get_CodeText() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptBlockMappingInfo::get_CodeText

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan 
          get_TextSpan() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptBlockMappingInfo::get_TextSpan

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo 
          Create(string CodeText,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan TextSpan) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptBlockMappingInfo::Create

  .property instance string CodeText()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo::get_CodeText()
  } // end of property DkmScriptBlockMappingInfo::CodeText
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan
          TextSpan()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmTextSpan Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo::get_TextSpan()
  } // end of property DkmScriptBlockMappingInfo::TextSpan
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualStudioServices120
{
  .method public hidebysig newslot abstract virtual 
          instance void  DisplayUserMessagePrompt(class Microsoft.VisualStudio.Debugger.DkmUserMessage userMessage,
                                                  class Microsoft.VisualStudio.Debugger.DkmWorkList workList,
                                                  class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.DkmDisplayUserMessagePromptAsyncResult> completionRoutine) cil managed
  {
  } // end of method IDkmVisualStudioServices120::DisplayUserMessagePrompt

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualStudioServices120

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualizationDataCompiler
{
  .method public hidebysig newslot abstract virtual 
          instance void  InitializeVisualizationData(class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData visualizationDataObject,
                                                     string[] visualizationFiles) cil managed
  {
  } // end of method IDkmVisualizationDataCompiler::InitializeVisualizationData

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVisualizationDataCompiler

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 33 34 37 63 35 33 34 2D 35 33 33 63   // ..$3347c534-533c
                                                                                                  2D 32 37 35 62 2D 31 38 32 38 2D 64 31 64 64 37   // -275b-1828-d1dd7
                                                                                                  33 62 61 32 66 63 30 00 00 )                      // 3ba2fc0..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_Language() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::get_Language

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession 
          get_InspectionSession() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::get_InspectionSession

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::get_UniqueId

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Language,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession InspectionSession,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::Create

  .method public hidebysig instance void 
          Initialize(string[] VisualizationFiles) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledVisualizationData::Initialize

  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession
          InspectionSession()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionSession Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_InspectionSession()
  } // end of property DkmCompiledVisualizationData::InspectionSession
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          Language()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_Language()
  } // end of property DkmCompiledVisualizationData::Language
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData::get_UniqueId()
  } // end of property DkmCompiledVisualizationData::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationData

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVolatileMemoryOperation
{
  .method public hidebysig newslot abstract virtual 
          instance void  VolatileReadMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                            uint64 address,
                                            uint8[] buffer) cil managed
  {
  } // end of method IDkmVolatileMemoryOperation::VolatileReadMemory

  .method public hidebysig newslot abstract virtual 
          instance void  VolatileWriteMemory(class Microsoft.VisualStudio.Debugger.DkmProcess process,
                                             uint64 address,
                                             uint8[] data) cil managed
  {
  } // end of method IDkmVolatileMemoryOperation::VolatileWriteMemory

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVolatileMemoryOperation

.class interface public abstract auto ansi Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVolatileThreadProperties
{
  .method public hidebysig newslot abstract virtual 
          instance void  GetVolatileProperties(class Microsoft.VisualStudio.Debugger.DkmThread thread,
                                               [out] int32& priority,
                                               [out] uint64& affinityMask) cil managed
  {
  } // end of method IDkmVolatileThreadProperties::GetVolatileProperties

  .method public hidebysig newslot abstract virtual 
          instance valuetype Microsoft.VisualStudio.Debugger.ThreadProperties.DkmVolatileThreadFlags 
          GetVolatileFlags(class Microsoft.VisualStudio.Debugger.DkmThread thread) cil managed
  {
  } // end of method IDkmVolatileThreadProperties::GetVolatileFlags

} // end of class Microsoft.VisualStudio.Debugger.ComponentInterfaces.IDkmVolatileThreadProperties

.class public auto ansi Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 35 37 32 63 30 38 64 2D 65 66 33 31   // ..$7572c08d-ef31
                                                                                                  2D 34 33 38 61 2D 39 33 32 34 2D 32 31 64 37 32   // -438a-9324-21d72
                                                                                                  61 64 39 39 63 36 35 00 00 )                      // ad99c65..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalInformation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomExceptionInformation::get_AdditionalInformation

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid ExceptionCategory,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 string Name,
                 uint32 Code,
                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation ImplementationException,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalInformation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomExceptionInformation::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalInformation()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation::get_AdditionalInformation()
  } // end of property DkmCustomExceptionInformation::AdditionalInformation
} // end of class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress
       extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 32 30 35 66 30 63 36 2D 33 34 37 31   // ..$9205f0c6-3471
                                                                                                  2D 38 33 64 63 2D 62 64 30 38 2D 35 34 63 34 63   // -83dc-bd08-54c4c
                                                                                                  37 64 35 64 62 63 38 00 00 )                      // 7d5dbc8..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance 
          get_ModuleInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionAddress::get_ModuleInstance

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_EntityId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionAddress::get_EntityId

  .method public hidebysig specialname instance uint64 
          get_Offset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionAddress::get_Offset

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionAddress::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance ModuleInstance,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> EntityId,
                 uint64 Offset,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionAddress::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_AdditionalData()
  } // end of property DkmCustomInstructionAddress::AdditionalData
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          EntityId()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_EntityId()
  } // end of property DkmCustomInstructionAddress::EntityId
  .property instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance
          ModuleInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_ModuleInstance()
  } // end of property DkmCustomInstructionAddress::ModuleInstance
  .property instance uint64 Offset()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress::get_Offset()
  } // end of property DkmCustomInstructionAddress::Offset
} // end of class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance
       extends Microsoft.VisualStudio.Debugger.DkmModuleInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 38 61 32 65 65 30 37 2D 62 64 63 66   // ..$28a2ee07-bdcf
                                                                                                  2D 33 31 66 38 2D 36 36 65 39 2D 30 39 62 39 35   // -31f8-66e9-09b95
                                                                                                  38 65 36 36 66 65 38 00 00 )                      // 8e66fe8..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance 
          Create(string Name,
                 string FullName,
                 uint64 TimeDateStamp,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmModuleVersion Version,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId SymbolFileId,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleFlags Flags,
                 valuetype Microsoft.VisualStudio.Debugger.DkmModuleMemoryLayout MemoryLayout,
                 uint64 BaseAddress,
                 uint32 LoadOrder,
                 uint32 Size,
                 string LoadContext,
                 bool IsDisabled,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 class Microsoft.VisualStudio.Debugger.DkmModuleInstance/MinidumpInfo MinidumpInfo,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomModuleInstance::Create

} // end of class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomModuleInstance

.class public auto ansi Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 31 35 34 63 64 65 39 2D 38 32 61 37   // ..$c154cde9-82a7
                                                                                                  2D 36 65 36 66 2D 66 34 66 34 2D 38 64 62 62 37   // -6e6f-f4f4-8dbb7
                                                                                                  37 36 64 61 30 36 38 00 00 )                      // 76da068..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_EntityId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionSymbol::get_EntityId

  .method public hidebysig specialname instance uint64 
          get_Offset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionSymbol::get_Offset

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionSymbol::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 valuetype [mscorlib]System.Guid RuntimeType,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> EntityId,
                 uint64 Offset,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomInstructionSymbol::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_AdditionalData()
  } // end of property DkmCustomInstructionSymbol::AdditionalData
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          EntityId()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_EntityId()
  } // end of property DkmCustomInstructionSymbol::EntityId
  .property instance uint64 Offset()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol::get_Offset()
  } // end of property DkmCustomInstructionSymbol::Offset
} // end of class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomInstructionSymbol

.class public auto ansi Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance
       extends Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 33 65 34 34 64 65 61 2D 35 63 61 63   // ..$83e44dea-5cac
                                                                                                  2D 33 65 37 64 2D 63 39 38 30 2D 31 31 38 37 32   // -3e7d-c980-11872
                                                                                                  38 37 31 36 36 32 33 00 00 )                      // 8716623..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomRuntimeInstance::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeInstanceId Id,
                 valuetype Microsoft.VisualStudio.Debugger.DkmRuntimeCapabilities Capabilities,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance ParentRuntime,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomRuntimeInstance::Create

} // end of class Microsoft.VisualStudio.Debugger.CustomRuntimes.DkmCustomRuntimeInstance

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmActivateBackgroundTaskAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmActivateBackgroundTaskAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult::get_ErrorCode()
  } // end of property DkmActivateBackgroundTaskAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmActivateBackgroundTaskAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 30 66 35 65 30 32 65 2D 62 62 63 34   // ..$40f5e02e-bbc4
                                                                                                  2D 33 62 32 61 2D 35 35 39 35 2D 35 31 64 33 32   // -3b2a-5595-51d32
                                                                                                  30 38 66 62 37 32 66 00 00 )                      // 08fb72f..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform 
          get_AppPlatform() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAppPackageId::get_AppPlatform

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAppPackageId::get_FullName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId 
          Create(valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform AppPlatform,
                 string FullName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmAppPackageId::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform
          AppPlatform()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId::get_AppPlatform()
  } // end of property DkmAppPackageId::AppPlatform
  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId::get_FullName()
  } // end of property DkmAppPackageId::FullName
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmAppPackageId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform WindowsAppx = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform WindowsPhoneXAP = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackagedAppPlatform

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags CombineStdErr = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags ConsoleCodePage = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags Default = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags ShowUI = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDeploymentCommandFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDownloadFileAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDownloadFileAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult::get_ErrorCode()
  } // end of property DkmDownloadFileAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmDownloadFileAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnumerateBackgroundTasksAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnumerateBackgroundTasksAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid[] 
          get_TaskIds() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnumerateBackgroundTasksAsyncResult::get_TaskIds

  .method public hidebysig specialname instance string[] 
          get_TaskNames() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnumerateBackgroundTasksAsyncResult::get_TaskNames

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib]System.Guid[] TaskIds,
                               string[] TaskNames) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEnumerateBackgroundTasksAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_ErrorCode()
  } // end of property DkmEnumerateBackgroundTasksAsyncResult::ErrorCode
  .property instance valuetype [mscorlib]System.Guid[]
          TaskIds()
  {
    .get instance valuetype [mscorlib]System.Guid[] Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_TaskIds()
  } // end of property DkmEnumerateBackgroundTasksAsyncResult::TaskIds
  .property instance string[] TaskNames()
  {
    .get instance string[] Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult::get_TaskNames()
  } // end of property DkmEnumerateBackgroundTasksAsyncResult::TaskNames
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmEnumerateBackgroundTasksAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 32 35 35 64 31 31 63 2D 65 34 30 66   // ..$c255d11c-e40f
                                                                                                  2D 39 62 65 30 2D 31 31 61 63 2D 30 66 35 64 61   // -9be0-11ac-0f5da
                                                                                                  38 34 32 37 37 38 32 00 00 )                      // 8427782..
  .method public hidebysig specialname instance string 
          get_FileName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_FileName

  .method public hidebysig specialname instance string 
          get_FilePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_FilePath

  .method public hidebysig specialname instance int32 
          get_Attributes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_Attributes

  .method public hidebysig specialname instance uint64 
          get_CreationTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_CreationTime

  .method public hidebysig specialname instance uint64 
          get_LastAccessTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_LastAccessTime

  .method public hidebysig specialname instance uint64 
          get_LastWriteTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_LastWriteTime

  .method public hidebysig specialname instance uint64 
          get_FileSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::get_FileSize

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo 
          Create(string FileName,
                 string FilePath,
                 int32 Attributes,
                 uint64 CreationTime,
                 uint64 LastAccessTime,
                 uint64 LastWriteTime,
                 uint64 FileSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileInfo::Create

  .property instance int32 Attributes()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_Attributes()
  } // end of property DkmFileInfo::Attributes
  .property instance uint64 CreationTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_CreationTime()
  } // end of property DkmFileInfo::CreationTime
  .property instance string FileName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FileName()
  } // end of property DkmFileInfo::FileName
  .property instance string FilePath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FilePath()
  } // end of property DkmFileInfo::FilePath
  .property instance uint64 FileSize()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_FileSize()
  } // end of property DkmFileInfo::FileSize
  .property instance uint64 LastAccessTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_LastAccessTime()
  } // end of property DkmFileInfo::LastAccessTime
  .property instance uint64 LastWriteTime()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo::get_LastWriteTime()
  } // end of property DkmFileInfo::LastWriteTime
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 66 65 61 62 66 34 30 2D 37 61 62 32   // ..$cfeabf40-7ab2
                                                                                                  2D 37 64 34 34 2D 63 31 36 64 2D 65 66 32 33 64   // -7d44-c16d-ef23d
                                                                                                  34 35 37 39 65 38 63 00 00 )                      // 4579e8c..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection 
          get_Connection() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::get_Connection

  .method public hidebysig specialname instance string 
          get_RemoteFilePath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::get_RemoteFilePath

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream 
          Create(class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Connection,
                 string RemoteFilePath,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::Create

  .method public hidebysig instance void 
          WriteFirst(uint8[] Content,
                     uint64 TotalFileSize,
                     uint64 LastWriteTime,
                     bool OverwriteExisting) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::WriteFirst

  .method public hidebysig instance void 
          WriteNext(uint8[] Content) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::WriteNext

  .method public hidebysig instance void 
          ReadFirst(void* ContentBuffer,
                    int32 BufferSize,
                    [out] int32& BytesRead,
                    [out] uint64& LastWriteTime,
                    [out] uint64& TotalFileSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::ReadFirst

  .method public hidebysig instance void 
          ReadFirst(uint8[] ContentBuffer,
                    [out] int32& BytesRead,
                    [out] uint64& LastWriteTime,
                    [out] uint64& TotalFileSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::ReadFirst

  .method public hidebysig instance void 
          ReadNext(void* ContentBuffer,
                   int32 BufferSize,
                   [out] int32& BytesRead) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::ReadNext

  .method public hidebysig instance void 
          ReadNext(uint8[] ContentBuffer,
                   [out] int32& BytesRead) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFileTransferStream::ReadNext

  .property instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
          Connection()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_Connection()
  } // end of property DkmFileTransferStream::Connection
  .property instance string RemoteFilePath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_RemoteFilePath()
  } // end of property DkmFileTransferStream::RemoteFilePath
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream::get_UniqueId()
  } // end of property DkmFileTransferStream::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmFileTransferStream

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 32 30 39 31 38 66 63 2D 62 33 33 35   // ..$220918fc-b335
                                                                                                  2D 37 32 63 38 2D 31 36 64 32 2D 34 62 66 65 61   // -72c8-16d2-4bfea
                                                                                                  63 65 65 65 31 38 31 00 00 )                      // ceee181..
  .method public hidebysig specialname instance string 
          get_AppUserModelId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_AppUserModelId

  .method public hidebysig specialname instance string 
          get_DisplayName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_DisplayName

  .method public hidebysig specialname instance string 
          get_Executable() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_Executable

  .method public hidebysig specialname instance string 
          get_SmallLogoPath() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_SmallLogoPath

  .method public hidebysig specialname instance string 
          get_BackgroundColor() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_BackgroundColor

  .method public hidebysig specialname instance string 
          get_Description() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_Description

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_DefaultDebugEngine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::get_DefaultDebugEngine

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo 
          Create(string AppUserModelId,
                 string DisplayName,
                 string Executable,
                 string SmallLogoPath,
                 string BackgroundColor,
                 string Description,
                 valuetype [mscorlib]System.Guid DefaultDebugEngine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmInstalledApplicationInfo::Create

  .property instance string AppUserModelId()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_AppUserModelId()
  } // end of property DkmInstalledApplicationInfo::AppUserModelId
  .property instance string BackgroundColor()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_BackgroundColor()
  } // end of property DkmInstalledApplicationInfo::BackgroundColor
  .property instance valuetype [mscorlib]System.Guid
          DefaultDebugEngine()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_DefaultDebugEngine()
  } // end of property DkmInstalledApplicationInfo::DefaultDebugEngine
  .property instance string Description()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_Description()
  } // end of property DkmInstalledApplicationInfo::Description
  .property instance string DisplayName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_DisplayName()
  } // end of property DkmInstalledApplicationInfo::DisplayName
  .property instance string Executable()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_Executable()
  } // end of property DkmInstalledApplicationInfo::Executable
  .property instance string SmallLogoPath()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo::get_SmallLogoPath()
  } // end of property DkmInstalledApplicationInfo::SmallLogoPath
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmInstalledApplicationInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Running = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Suspended = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Suspending = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Terminated = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState Unknown = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPackageExecutionState

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures AMD3DNow = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures AVX = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures MMX = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures SSE = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures SSE2 = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures VFP32 = int32(0x00000020)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmProcessorFeatures

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 61 65 62 33 32 31 37 2D 61 66 30 31   // ..$eaeb3217-af01
                                                                                                  2D 64 63 64 61 2D 37 64 30 38 2D 32 63 61 62 62   // -dcda-7d08-2cabb
                                                                                                  64 64 63 32 33 35 31 00 00 )                      // ddc2351..
  .method public hidebysig specialname instance string 
          get_FriendlyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPublishedProgramInfo::get_FriendlyName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> 
          get_EngineIds() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPublishedProgramInfo::get_EngineIds

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo 
          Create(string FriendlyName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> EngineIds) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPublishedProgramInfo::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid>
          EngineIds()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo::get_EngineIds()
  } // end of property DkmPublishedProgramInfo::EngineIds
  .property instance string FriendlyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo::get_FriendlyName()
  } // end of property DkmPublishedProgramInfo::FriendlyName
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmPublishedProgramInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Custom = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Kerberos = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode NTLM = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode None = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode WindowsNegotiate = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags AppContainer = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags ClrNativeCompilationRuntimeLoaded = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags DebuggerAttached = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags HideFromDefaultProcessList = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags OtherUser = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags SecurityWarningOnAttach = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags Wow64 = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmRunningProcessFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmShutDownAppPackageAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmShutDownAppPackageAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult::get_ErrorCode()
  } // end of property DkmShutDownAppPackageAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmShutDownAppPackageAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection
       extends Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnection
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 37 61 30 34 36 34 64 2D 61 38 30 65   // ..$97a0464d-a80e
                                                                                                  2D 61 62 34 30 2D 32 33 33 62 2D 65 35 35 62 34   // -ab40-233b-e55b4
                                                                                                  39 65 33 64 66 64 39 00 00 )                      // 9e3dfd9..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode 
          get_AuthenticationMode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStandardRemoteTransportConnection::get_AuthenticationMode

  .method public hidebysig specialname instance string 
          get_ProxyServer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStandardRemoteTransportConnection::get_ProxyServer

  .method public hidebysig instance void 
          Abort() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmStandardRemoteTransportConnection::Abort

  .property instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode
          AuthenticationMode()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmRemoteAuthenticationMode Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection::get_AuthenticationMode()
  } // end of property DkmStandardRemoteTransportConnection::AuthenticationMode
  .property instance string ProxyServer()
  {
    .get instance string Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection::get_ProxyServer()
  } // end of property DkmStandardRemoteTransportConnection::ProxyServer
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmStandardRemoteTransportConnection

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuspendAppPackageAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuspendAppPackageAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult::get_ErrorCode()
  } // end of property DkmSuspendAppPackageAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSuspendAppPackageAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags CanAccessFileSystem = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags CoreSystem = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Default = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags DumpFile = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags Is64Bit = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmSystemInformationFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags DefaultConnectionToTarget = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags LocalComputer = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags MarshallingRequired = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportConnectionFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmActivateAppPackageAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmActivateAppPackageAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult::get_ErrorCode()
  } // end of property DkmActivateAppPackageAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmActivateAppPackageAsyncResult

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Local() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportKind::get_Local

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_PseudoRemote() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportKind::get_PseudoRemote

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_StandardRemote() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTransportKind::get_StandardRemote

  .property valuetype [mscorlib]System.Guid
          Local()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_Local()
  } // end of property DkmTransportKind::Local
  .property valuetype [mscorlib]System.Guid
          PseudoRemote()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_PseudoRemote()
  } // end of property DkmTransportKind::PseudoRemote
  .property valuetype [mscorlib]System.Guid
          StandardRemote()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind::get_StandardRemote()
  } // end of property DkmTransportKind::StandardRemote
} // end of class Microsoft.VisualStudio.Debugger.DefaultPort.DkmTransportKind

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags SegmentIsFS = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Disassembly.DkmEffectiveAddressFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify CompileEnd = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify CompileStart = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Enc.DkmNativeEncNotify

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 33 39 61 33 34 33 32 2D 66 37 33 36   // ..$b39a3432-f736
                                                                                                  2D 61 30 39 39 2D 61 39 39 39 2D 30 38 62 30 62   // -a099-a999-08b0b
                                                                                                  64 33 63 31 33 62 66 00 00 )                      // d3c13bf..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag FakeValueHome = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag PointerValueHome = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExpressionValueHome::get_TagValue

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome/Tag Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome::get_TagValue()
  } // end of property DkmExpressionValueHome::TagValue
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Debuggee = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation SharedDirectory = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Unknown = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UserDirectory = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Error = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Synthetic = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags Void = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmClrValueFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQuery
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 35 31 65 38 64 35 65 2D 65 35 66 33   // ..$951e8d5e-e5f3
                                                                                                  2D 37 38 64 38 2D 33 34 39 32 2D 30 62 32 36 31   // -78d8-3492-0b261
                                                                                                  35 62 30 36 65 34 32 00 00 )                      // 5b06e42..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Instructions() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledCustomInspectionQuery::get_Instructions

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid QueryKind,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Instructions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledCustomInspectionQuery::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype [mscorlib]System.Guid QueryKind,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer DataContainer,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompilerId LanguageId,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Instructions) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledCustomInspectionQuery::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Instructions()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery::get_Instructions()
  } // end of property DkmCompiledCustomInspectionQuery::Instructions
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledCustomInspectionQuery

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 39 66 38 36 31 31 64 2D 65 32 63 61   // ..$f9f8611d-e2ca
                                                                                                  2D 33 35 63 30 2D 36 39 36 61 2D 65 62 34 66 37   // -35c0-696a-eb4f7
                                                                                                  66 33 38 65 65 31 33 00 00 )                      // f38ee13..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomDataContainer::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomDataContainer::get_Process

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomDataContainer::Close

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomDataContainer::Create

  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer::get_Process()
  } // end of property DkmCustomDataContainer::Process
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer::get_UniqueId()
  } // end of property DkmCustomDataContainer::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomDataContainer

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] 
          get_Results() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryAsyncResult::get_Results

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason 
          get_FailureReason() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryAsyncResult::get_FailureReason

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] Results,
                               valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason FailureReason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_ErrorCode()
  } // end of property DkmExecuteQueryAsyncResult::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason
          FailureReason()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_FailureReason()
  } // end of property DkmExecuteQueryAsyncResult::FailureReason
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[]
          Results()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult::get_Results()
  } // end of property DkmExecuteQueryAsyncResult::Results
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmExecuteQueryAsyncResult

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DkmIL() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQueryKind::get_DkmIL

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DkmClrIL() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCompiledInspectionQueryKind::get_DkmClrIL

  .property valuetype [mscorlib]System.Guid
          DkmClrIL()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind::get_DkmClrIL()
  } // end of property DkmCompiledInspectionQueryKind::DkmClrIL
  .property valuetype [mscorlib]System.Guid
          DkmIL()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind::get_DkmIL()
  } // end of property DkmCompiledInspectionQueryKind::DkmIL
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledInspectionQueryKind

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Exclusive = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority High = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority Low = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCompiledVisualizationDataPriority

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 31 31 63 32 66 64 38 2D 39 36 63 33   // ..$911c2fd8-96c3
                                                                                                  2D 65 35 32 37 2D 33 65 36 30 2D 63 32 64 63 39   // -e527-3e60-c2dc9
                                                                                                  63 34 32 39 64 32 31 00 00 )                      // c429d21..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomRawReturnValue::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue 
          Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomRawReturnValue::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Value()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue::get_Value()
  } // end of property DkmCustomRawReturnValue::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomRawReturnValue

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 64 66 64 66 61 62 39 2D 37 64 63 39   // ..$4dfdfab9-7dc9
                                                                                                  2D 39 62 35 37 2D 66 30 34 36 2D 34 36 33 63 34   // -9b57-f046-463c4
                                                                                                  31 37 61 64 64 31 63 00 00 )                      // 17add1c..
  .method public hidebysig specialname instance uint32 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_Id

  .method public hidebysig specialname instance string 
          get_MenuName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_MenuName

  .method public hidebysig specialname instance string 
          get_Description() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_Description

  .method public hidebysig specialname instance string 
          get_Metric() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_Metric

  .method public hidebysig specialname instance string 
          get_UISideVisualizerTypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_UISideVisualizerTypeName

  .method public hidebysig specialname instance string 
          get_UISideVisualizerAssemblyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation 
          get_UISideVisualizerAssemblyLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyLocation

  .method public hidebysig specialname instance string 
          get_DebuggeeSideVisualizerTypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerTypeName

  .method public hidebysig specialname instance string 
          get_DebuggeeSideVisualizerAssemblyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerAssemblyName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo 
          Create(uint32 Id,
                 string MenuName,
                 string Description,
                 string Metric) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo 
          Create(uint32 Id,
                 string MenuName,
                 string Description,
                 string Metric,
                 string UISideVisualizerTypeName,
                 string UISideVisualizerAssemblyName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation,
                 string DebuggeeSideVisualizerTypeName,
                 string DebuggeeSideVisualizerAssemblyName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomUIVisualizerInfo::Create

  .property instance string DebuggeeSideVisualizerAssemblyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerAssemblyName()
  } // end of property DkmCustomUIVisualizerInfo::DebuggeeSideVisualizerAssemblyName
  .property instance string DebuggeeSideVisualizerTypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_DebuggeeSideVisualizerTypeName()
  } // end of property DkmCustomUIVisualizerInfo::DebuggeeSideVisualizerTypeName
  .property instance string Description()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Description()
  } // end of property DkmCustomUIVisualizerInfo::Description
  .property instance uint32 Id()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Id()
  } // end of property DkmCustomUIVisualizerInfo::Id
  .property instance string MenuName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_MenuName()
  } // end of property DkmCustomUIVisualizerInfo::MenuName
  .property instance string Metric()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_Metric()
  } // end of property DkmCustomUIVisualizerInfo::Metric
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation
          UISideVisualizerAssemblyLocation()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyLocation()
  } // end of property DkmCustomUIVisualizerInfo::UISideVisualizerAssemblyLocation
  .property instance string UISideVisualizerAssemblyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerAssemblyName()
  } // end of property DkmCustomUIVisualizerInfo::UISideVisualizerAssemblyName
  .property instance string UISideVisualizerTypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo::get_UISideVisualizerTypeName()
  } // end of property DkmCustomUIVisualizerInfo::UISideVisualizerTypeName
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 30 64 33 61 64 63 34 2D 66 33 34 62   // ..$90d3adc4-f34b
                                                                                                  2D 34 62 39 65 2D 38 33 64 33 2D 34 63 65 36 66   // -4b9e-83d3-4ce6f
                                                                                                  36 62 63 62 64 65 32 00 00 )                      // 6bcbde2..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataAddress::get_RuntimeInstance

  .method public hidebysig specialname instance uint64 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataAddress::get_Value

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress 
          get_InstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataAddress::get_InstructionAddress

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataAddress::get_Process

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 uint64 Value,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDataAddress::Create

  .property instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress
          InstructionAddress()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmInstructionAddress Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_InstructionAddress()
  } // end of property DkmDataAddress::InstructionAddress
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_Process()
  } // end of property DkmDataAddress::Process
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_RuntimeInstance()
  } // end of property DkmDataAddress::RuntimeInstance
  .property instance uint64 Value()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress::get_Value()
  } // end of property DkmDataAddress::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Final = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Internal = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Private = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Protected = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Public = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory BaseClass = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Class = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Data = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Event = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory InnerClass = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Interface = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Method = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory MostDerivedClass = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Other = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Property = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Address = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Boolean = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags BooleanTrue = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags CanHaveObjectId = int32(0x00000400)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags CrossThreadDependency = int32(0x00000800)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ExceptionThrown = int32(0x00008000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Expandable = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ExpandableError = int32(0x00004000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags HasObjectId = int32(0x00000200)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ILInterpreter = int32(0x00000080)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Invalid = int32(0x00001000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags IsBuiltInType = int32(0x00020000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags RawString = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ReadOnly = int32(0x00000040)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags ReturnValue = int32(0x00010000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags SideEffect = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags UnflushedSideEffects = int32(0x00000100)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Visualized = int32(0x00002000)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Global = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Register = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Static = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Constant = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Synchronized = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Virtual = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Volatile = int32(0x00000008)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 39 65 65 33 66 66 36 2D 64 35 37 65   // ..$c9ee3ff6-d57e
                                                                                                  2D 38 30 65 34 2D 66 35 37 65 2D 65 30 30 66 61   // -80e4-f57e-e00fa
                                                                                                  64 32 66 37 66 61 62 00 00 )                      // d2f7fab..
  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFakeValueHome::get_Address

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome 
          Create(uint64 Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFakeValueHome::Create

  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome::get_Address()
  } // end of property DkmFakeValueHome::Address
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmFakeValueHome

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLanguageSettingsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLanguageSettingsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] 
          get_Settings() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLanguageSettingsAsyncResult::get_Settings

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] Settings) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLanguageSettingsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult::get_ErrorCode()
  } // end of property DkmGetLanguageSettingsAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[]
          Settings()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmLanguageRegistrySetting[] Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult::get_Settings()
  } // end of property DkmGetLanguageSettingsAsyncResult::Settings
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmGetLanguageSettingsAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 66 65 33 38 66 31 32 2D 31 36 65 33   // ..$1fe38f12-16e3
                                                                                                  2D 30 63 39 64 2D 37 62 64 62 2D 39 31 61 61 62   // -0c9d-7bdb-91aab
                                                                                                  66 33 32 34 32 32 31 00 00 )                      // f324221..
  .method public hidebysig specialname instance string 
          get_Expression() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIntermediateEvaluationResult::get_Expression

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage 
          get_IntermediateLanguage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIntermediateEvaluationResult::get_IntermediateLanguage

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_TargetRuntime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIntermediateEvaluationResult::get_TargetRuntime

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 string Name,
                 string FullName,
                 string Expression,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage IntermediateLanguage,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance TargetRuntime,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmIntermediateEvaluationResult::Create

  .property instance string Expression()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_Expression()
  } // end of property DkmIntermediateEvaluationResult::Expression
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage
          IntermediateLanguage()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguage Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_IntermediateLanguage()
  } // end of property DkmIntermediateEvaluationResult::IntermediateLanguage
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          TargetRuntime()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult::get_TargetRuntime()
  } // end of property DkmIntermediateEvaluationResult::TargetRuntime
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmIntermediateEvaluationResult

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_VB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_VB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_JScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_JScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_C() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_C

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Cpp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Cpp

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_SQL() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_SQL

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Script() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Script

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_CSharp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_CSharp

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Fortran() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Fortran

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Cobol() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Cobol

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Pascal() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Pascal

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Java() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_Java

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ILAssembly() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_ILAssembly

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_CausalityBreakpoint() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_CausalityBreakpoint

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_MethodId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_MethodId

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClientScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_ClientScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_HLSL() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLanguageId::get_HLSL

  .property valuetype [mscorlib]System.Guid
          C()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_C()
  } // end of property DkmLanguageId::C
  .property valuetype [mscorlib]System.Guid
          CSharp()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_CSharp()
  } // end of property DkmLanguageId::CSharp
  .property valuetype [mscorlib]System.Guid
          CausalityBreakpoint()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_CausalityBreakpoint()
  } // end of property DkmLanguageId::CausalityBreakpoint
  .property valuetype [mscorlib]System.Guid
          ClientScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_ClientScript()
  } // end of property DkmLanguageId::ClientScript
  .property valuetype [mscorlib]System.Guid
          Cobol()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Cobol()
  } // end of property DkmLanguageId::Cobol
  .property valuetype [mscorlib]System.Guid
          Cpp()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Cpp()
  } // end of property DkmLanguageId::Cpp
  .property valuetype [mscorlib]System.Guid
          Fortran()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Fortran()
  } // end of property DkmLanguageId::Fortran
  .property valuetype [mscorlib]System.Guid
          HLSL()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_HLSL()
  } // end of property DkmLanguageId::HLSL
  .property valuetype [mscorlib]System.Guid
          ILAssembly()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_ILAssembly()
  } // end of property DkmLanguageId::ILAssembly
  .property valuetype [mscorlib]System.Guid
          JScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_JScript()
  } // end of property DkmLanguageId::JScript
  .property valuetype [mscorlib]System.Guid
          Java()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Java()
  } // end of property DkmLanguageId::Java
  .property valuetype [mscorlib]System.Guid
          MethodId()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_MethodId()
  } // end of property DkmLanguageId::MethodId
  .property valuetype [mscorlib]System.Guid
          Pascal()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Pascal()
  } // end of property DkmLanguageId::Pascal
  .property valuetype [mscorlib]System.Guid
          SQL()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_SQL()
  } // end of property DkmLanguageId::SQL
  .property valuetype [mscorlib]System.Guid
          Script()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_Script()
  } // end of property DkmLanguageId::Script
  .property valuetype [mscorlib]System.Guid
          VB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId::get_VB()
  } // end of property DkmLanguageId::VB
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmLanguageId

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 39 34 64 62 64 63 64 2D 38 30 62 32   // ..$694dbdcd-80b2
                                                                                                  2D 39 37 34 33 2D 61 36 32 34 2D 33 36 32 39 64   // -9743-a624-3629d
                                                                                                  31 39 35 66 35 62 34 00 00 )                      // 195f5b4..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> 
          get_Registers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRawReturnValue::get_Registers

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Memory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRawReturnValue::get_Memory

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue 
          Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> Registers,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Memory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeRawReturnValue::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Memory()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue::get_Memory()
  } // end of property DkmNativeRawReturnValue::Memory
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister>
          Registers()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue::get_Registers()
  } // end of property DkmNativeRawReturnValue::Registers
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeRawReturnValue

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 32 63 30 65 64 30 62 2D 36 61 39 36   // ..$b2c0ed0b-6a96
                                                                                                  2D 63 31 33 38 2D 30 33 34 61 2D 34 39 61 36 37   // -c138-034a-49a67
                                                                                                  61 62 38 37 31 30 34 00 00 )                      // ab87104..
  .method public hidebysig specialname instance int32 
          get_Identifier() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeReturnValueRegister::get_Identifier

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeReturnValueRegister::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister 
          Create(int32 Identifier,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNativeReturnValueRegister::Create

  .property instance int32 Identifier()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister::get_Identifier()
  } // end of property DkmNativeReturnValueRegister::Identifier
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Value()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister::get_Value()
  } // end of property DkmNativeReturnValueRegister::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmNativeReturnValueRegister

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 65 61 37 34 38 66 33 2D 36 31 66 30   // ..$bea748f3-61f0
                                                                                                  2D 35 31 37 35 2D 65 66 39 31 2D 31 62 34 62 31   // -5175-ef91-1b4b1
                                                                                                  66 36 65 34 63 63 61 00 00 )                      // f6e4cca..
  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPointerValueHome::get_Address

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome 
          Create(uint64 Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPointerValueHome::Create

  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome::get_Address()
  } // end of property DkmPointerValueHome::Address
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmPointerValueHome

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmRawReturnValue
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 61 63 31 39 34 34 66 2D 64 32 34 61   // ..$bac1944f-d24a
                                                                                                  2D 65 31 37 37 2D 38 62 38 30 2D 34 38 64 30 32   // -e177-8b80-48d02
                                                                                                  64 35 62 34 38 33 39 00 00 )                      // d5b4839..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext 
          get_Context() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawManagedReturnValue::get_Context

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue 
          Create(class Microsoft.VisualStudio.Debugger.DkmInstructionAddress ReturnFrom,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Context) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRawManagedReturnValue::Create

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext
          Context()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmManagedReturnValueContext Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue::get_Context()
  } // end of property DkmRawManagedReturnValue::Context
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmRawManagedReturnValue

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmVisualizedExpression
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 38 61 64 30 38 35 63 2D 37 62 37 33   // ..$78ad085c-7b73
                                                                                                  2D 35 39 33 37 2D 61 30 36 33 2D 65 32 63 37 66   // -5937-a063-e2c7f
                                                                                                  34 65 65 36 35 35 36 00 00 )                      // 4ee6556..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule 
          get_Module() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_Module

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_Name

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_FullName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_Flags

  .method public hidebysig specialname instance uint32 
          get_ArrayLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_ArrayLength

  .method public hidebysig specialname instance string 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 valuetype [mscorlib]System.Guid VisualizerId,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Name,
                 string FullName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Flags,
                 uint32 ArrayLength,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression 
          Create(class Microsoft.VisualStudio.Debugger.Evaluation.DkmInspectionContext InspectionContext,
                 valuetype [mscorlib]System.Guid VisualizerId,
                 valuetype [mscorlib]System.Guid SourceId,
                 class Microsoft.VisualStudio.Debugger.CallStack.DkmStackWalkFrame StackFrame,
                 class Microsoft.VisualStudio.Debugger.Evaluation.DkmExpressionValueHome ValueHome,
                 class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string Name,
                 string FullName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Flags,
                 uint32 ArrayLength,
                 string Type,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmRootVisualizedExpression::Create

  .property instance uint32 ArrayLength()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_ArrayLength()
  } // end of property DkmRootVisualizedExpression::ArrayLength
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Flags()
  } // end of property DkmRootVisualizedExpression::Flags
  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_FullName()
  } // end of property DkmRootVisualizedExpression::FullName
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule
          Module()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Module()
  } // end of property DkmRootVisualizedExpression::Module
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Name()
  } // end of property DkmRootVisualizedExpression::Name
  .property instance string Type()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression::get_Type()
  } // end of property DkmRootVisualizedExpression::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpression

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsArray = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsPointer = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags IsReference = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags None = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmRootVisualizedExpressionFlags

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.DkmVendorId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Microsoft() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmVendorId::get_Microsoft

  .property valuetype [mscorlib]System.Guid
          Microsoft()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.DkmVendorId::get_Microsoft()
  } // end of property DkmVendorId::Microsoft
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.DkmVendorId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags BoolResult = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags PotentialSideEffect = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags ReadOnlyResult = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute
       extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 33 65 62 33 61 37 38 2D 33 31 30 31   // ..$43eb3a78-3101
                                                                                                  2D 66 30 36 66 2D 36 63 38 63 2D 61 65 64 33 64   // -f06f-6c8c-aed3d
                                                                                                  63 36 31 62 36 31 36 00 00 )                      // c61b616..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState 
          get_State() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerBrowsableAttribute::get_State

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType,
                 string TargetMember,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState State) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerBrowsableAttribute::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState
          State()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute::get_State()
  } // end of property DkmClrDebuggerBrowsableAttribute::State
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttribute

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Collapsed = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState Never = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState RootHidden = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerBrowsableAttributeState

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute
       extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 63 34 30 35 66 63 65 2D 35 36 38 38   // ..$dc405fce-5688
                                                                                                  2D 64 30 35 35 2D 36 33 37 38 2D 34 63 34 62 34   // -d055-6378-4c4b4
                                                                                                  30 66 30 66 39 35 63 00 00 )                      // 0f0f95c..
  .method public hidebysig specialname instance string 
          get_OriginatingAssemblyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_OriginatingAssemblyPublicKeyToken() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyPublicKeyToken

  .method public hidebysig specialname instance string 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::get_Value

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::get_Name

  .method public hidebysig specialname instance string 
          get_TypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::get_TypeName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType,
                 string TargetMember,
                 string OriginatingAssemblyName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> OriginatingAssemblyPublicKeyToken,
                 string Value,
                 string Name,
                 string TypeName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerDisplayAttribute::Create

  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_Name()
  } // end of property DkmClrDebuggerDisplayAttribute::Name
  .property instance string OriginatingAssemblyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyName()
  } // end of property DkmClrDebuggerDisplayAttribute::OriginatingAssemblyName
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          OriginatingAssemblyPublicKeyToken()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_OriginatingAssemblyPublicKeyToken()
  } // end of property DkmClrDebuggerDisplayAttribute::OriginatingAssemblyPublicKeyToken
  .property instance string TypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_TypeName()
  } // end of property DkmClrDebuggerDisplayAttribute::TypeName
  .property instance string Value()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute::get_Value()
  } // end of property DkmClrDebuggerDisplayAttribute::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerDisplayAttribute

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          get_Items() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalsAsyncResult::get_Items

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerGeneratedLocalsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult::get_ErrorCode()
  } // end of property DkmClrDebuggerGeneratedLocalsAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]
          Items()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult::get_Items()
  } // end of property DkmClrDebuggerGeneratedLocalsAsyncResult::Items
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerGeneratedLocalsAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute
       extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 36 64 33 38 30 66 62 2D 66 32 61 66   // ..$76d380fb-f2af
                                                                                                  2D 35 36 64 63 2D 32 32 38 61 2D 38 36 65 62 66   // -56dc-228a-86ebf
                                                                                                  63 35 65 65 63 36 31 00 00 )                      // c5eec61..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType 
          get_ProxyType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerTypeProxyAttribute::get_ProxyType

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType,
                 string TargetMember,
                 class Microsoft.VisualStudio.Debugger.Clr.DkmClrType ProxyType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerTypeProxyAttribute::Create

  .property instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType
          ProxyType()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Clr.DkmClrType Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute::get_ProxyType()
  } // end of property DkmClrDebuggerTypeProxyAttribute::ProxyType
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerTypeProxyAttribute

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute
       extends Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrEvalAttribute
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 64 33 33 65 35 61 32 2D 62 34 34 65   // ..$cd33e5a2-b44e
                                                                                                  2D 32 38 39 63 2D 36 37 62 30 2D 39 37 61 30 35   // -289c-67b0-97a05
                                                                                                  34 36 32 31 36 38 39 00 00 )                      // 4621689..
  .method public hidebysig specialname instance string 
          get_UISideVisualizerTypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerTypeName

  .method public hidebysig specialname instance string 
          get_UISideVisualizerAssemblyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation 
          get_UISideVisualizerAssemblyLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyLocation

  .method public hidebysig specialname instance string 
          get_DebuggeeSideVisualizerTypeName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerTypeName

  .method public hidebysig specialname instance string 
          get_DebuggeeSideVisualizerAssemblyName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerAssemblyName

  .method public hidebysig specialname instance string 
          get_VisualizerDescription() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::get_VisualizerDescription

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute 
          Create(class Microsoft.VisualStudio.Debugger.Clr.DkmClrType TargetType,
                 string TargetMember,
                 string UISideVisualizerTypeName,
                 string UISideVisualizerAssemblyName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation UISideVisualizerAssemblyLocation,
                 string DebuggeeSideVisualizerTypeName,
                 string DebuggeeSideVisualizerAssemblyName,
                 string VisualizerDescription) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrDebuggerVisualizerAttribute::Create

  .property instance string DebuggeeSideVisualizerAssemblyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerAssemblyName()
  } // end of property DkmClrDebuggerVisualizerAttribute::DebuggeeSideVisualizerAssemblyName
  .property instance string DebuggeeSideVisualizerTypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_DebuggeeSideVisualizerTypeName()
  } // end of property DkmClrDebuggerVisualizerAttribute::DebuggeeSideVisualizerTypeName
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation
          UISideVisualizerAssemblyLocation()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmClrCustomVisualizerAssemblyLocation Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyLocation()
  } // end of property DkmClrDebuggerVisualizerAttribute::UISideVisualizerAssemblyLocation
  .property instance string UISideVisualizerAssemblyName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerAssemblyName()
  } // end of property DkmClrDebuggerVisualizerAttribute::UISideVisualizerAssemblyName
  .property instance string UISideVisualizerTypeName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_UISideVisualizerTypeName()
  } // end of property DkmClrDebuggerVisualizerAttribute::UISideVisualizerTypeName
  .property instance string VisualizerDescription()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute::get_VisualizerDescription()
  } // end of property DkmClrDebuggerVisualizerAttribute::VisualizerDescription
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrDebuggerVisualizerAttribute

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 31 66 35 63 33 36 61 2D 64 36 36 39   // ..$d1f5c36a-d669
                                                                                                  2D 32 62 31 34 2D 63 39 39 36 2D 61 36 66 64 32   // -2b14-c996-a6fd2
                                                                                                  38 65 30 38 63 64 61 00 00 )                      // 8e08cda..
  .method public hidebysig specialname instance string 
          get_VariableName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariableInfo::get_VariableName

  .method public hidebysig specialname instance string 
          get_MethodName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariableInfo::get_MethodName

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags 
          get_CompilationFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariableInfo::get_CompilationFlags

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory 
          get_ResultCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariableInfo::get_ResultCategory

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo 
          Create(string VariableName,
                 string MethodName,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags CompilationFlags,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory ResultCategory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmClrLocalVariableInfo::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags
          CompilationFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrCompilationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_CompilationFlags()
  } // end of property DkmClrLocalVariableInfo::CompilationFlags
  .property instance string MethodName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_MethodName()
  } // end of property DkmClrLocalVariableInfo::MethodName
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
          ResultCategory()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_ResultCategory()
  } // end of property DkmClrLocalVariableInfo::ResultCategory
  .property instance string VariableName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo::get_VariableName()
  } // end of property DkmClrLocalVariableInfo::VariableName
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmClrLocalVariableInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult::get_ErrorCode()
  } // end of property DkmExecuteAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult
          Result()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult::get_Result()
  } // end of property DkmExecuteAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmExecuteAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLocalValuesAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLocalValuesAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] 
          get_Items() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLocalValuesAsyncResult::get_Items

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Items) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetLocalValuesAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult::get_ErrorCode()
  } // end of property DkmGetLocalValuesAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[]
          Items()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResult[] Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult::get_Items()
  } // end of property DkmGetLocalValuesAsyncResult::Items
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.ClrCompilation.DkmGetLocalValuesAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 61 62 65 64 33 34 30 2D 33 38 36 34   // ..$5abed340-3864
                                                                                                  2D 34 31 63 35 2D 61 66 33 63 2D 34 38 36 66 30   // -41c5-af3c-486f0
                                                                                                  64 30 63 62 31 30 31 00 00 )                      // d0cb101..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult> 
          get_Results() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThreadEvaluationResultCollection::get_Results

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason 
          get_FailureReason() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThreadEvaluationResultCollection::get_FailureReason

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult> Results,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason FailureReason) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmThreadEvaluationResultCollection::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason
          FailureReason()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection::get_FailureReason()
  } // end of property DkmThreadEvaluationResultCollection::FailureReason
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult>
          Results()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEvaluationResult> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection::get_Results()
  } // end of property DkmThreadEvaluationResultCollection::Results
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmThreadEvaluationResultCollection

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
       implements [mscorlib]System.IDisposable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 62 38 39 31 31 39 30 2D 31 30 36 34   // ..$bb891190-1064
                                                                                                  2D 63 31 62 39 2D 31 33 32 65 2D 66 32 65 36 33   // -c1b9-132e-f2e63
                                                                                                  37 63 35 39 37 65 30 00 00 )                      // 7c597e0..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag FailedContextGroupEvalResult = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag SuccessContextGroupEvalResult = int32(0x00000000)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_TagValue

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> 
          get_ThreadIds() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_ThreadIds

  .method public hidebysig specialname instance int32 
          get_EvaluationResults() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_EvaluationResults

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_Name

  .method public hidebysig specialname instance string 
          get_FullName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_FullName

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::get_RuntimeInstance

  .method public hidebysig instance void 
          Close() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmContextGroupEvaluationResult::Close

  .property instance int32 EvaluationResults()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_EvaluationResults()
  } // end of property DkmContextGroupEvaluationResult::EvaluationResults
  .property instance string FullName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_FullName()
  } // end of property DkmContextGroupEvaluationResult::FullName
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_Name()
  } // end of property DkmContextGroupEvaluationResult::Name
  .property instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_RuntimeInstance()
  } // end of property DkmContextGroupEvaluationResult::RuntimeInstance
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult/Tag Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_TagValue()
  } // end of property DkmContextGroupEvaluationResult::TagValue
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64>
          ThreadIds()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_ThreadIds()
  } // end of property DkmContextGroupEvaluationResult::ThreadIds
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult::get_UniqueId()
  } // end of property DkmContextGroupEvaluationResult::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryOnThreadsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryOnThreadsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryOnThreadsAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExecuteQueryOnThreadsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult::get_ErrorCode()
  } // end of property DkmExecuteQueryOnThreadsAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult
          Result()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationILResult Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult::get_Result()
  } // end of property DkmExecuteQueryOnThreadsAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmExecuteQueryOnThreadsAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult
       extends Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 63 62 66 35 36 35 32 2D 38 35 30 31   // ..$bcbf5652-8501
                                                                                                  2D 37 37 65 30 2D 32 32 35 36 2D 30 65 36 34 35   // -77e0-2256-0e645
                                                                                                  35 65 37 39 30 39 61 00 00 )                      // 5e7909a..
  .method public hidebysig specialname instance string 
          get_ErrorMessage() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedContextGroupEvaluationResult::get_ErrorMessage

  .method public hidebysig specialname instance bool 
          get_HasSideEffects() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedContextGroupEvaluationResult::get_HasSideEffects

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> ThreadIds,
                 int32 EvaluationResults,
                 string Name,
                 string FullName,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 string ErrorMessage,
                 bool HasSideEffects,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFailedContextGroupEvaluationResult::Create

  .property instance string ErrorMessage()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult::get_ErrorMessage()
  } // end of property DkmFailedContextGroupEvaluationResult::ErrorMessage
  .property instance bool HasSideEffects()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult::get_HasSideEffects()
  } // end of property DkmFailedContextGroupEvaluationResult::HasSideEffects
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmFailedContextGroupEvaluationResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult
       extends Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmContextGroupEvaluationResult
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 66 39 31 31 61 35 66 2D 66 33 32 63   // ..$0f911a5f-f32c
                                                                                                  2D 32 36 34 37 2D 34 37 30 63 2D 35 35 32 34 62   // -2647-470c-5524b
                                                                                                  61 63 34 62 33 35 31 00 00 )                      // ac4b351..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_Flags

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> 
          get_Values() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_Values

  .method public hidebysig specialname instance string 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_Type

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory 
          get_Category() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_Category

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType 
          get_Access() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_Access

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType 
          get_StorageType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_StorageType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags 
          get_TypeModifierFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_TypeModifierFlags

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> 
          get_CustomUIVisualizers() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::get_CustomUIVisualizers

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> ThreadIds,
                 int32 EvaluationResults,
                 string Name,
                 string FullName,
                 class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Flags,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Values,
                 string Type,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Category,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Access,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType StorageType,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags TypeModifierFlags,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> CustomUIVisualizers,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSuccessContextGroupEvaluationResult::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType
          Access()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultAccessType Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Access()
  } // end of property DkmSuccessContextGroupEvaluationResult::Access
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory
          Category()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultCategory Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Category()
  } // end of property DkmSuccessContextGroupEvaluationResult::Category
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo>
          CustomUIVisualizers()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.DkmCustomUIVisualizerInfo> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_CustomUIVisualizers()
  } // end of property DkmSuccessContextGroupEvaluationResult::CustomUIVisualizers
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultFlags Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Flags()
  } // end of property DkmSuccessContextGroupEvaluationResult::Flags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType
          StorageType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultStorageType Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_StorageType()
  } // end of property DkmSuccessContextGroupEvaluationResult::StorageType
  .property instance string Type()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Type()
  } // end of property DkmSuccessContextGroupEvaluationResult::Type
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags
          TypeModifierFlags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.DkmEvaluationResultTypeModifierFlags Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_TypeModifierFlags()
  } // end of property DkmSuccessContextGroupEvaluationResult::TypeModifierFlags
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string>
          Values()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<string> Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult::get_Values()
  } // end of property DkmSuccessContextGroupEvaluationResult::Values
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.Group.DkmSuccessContextGroupEvaluationResult

.class public abstract auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 62 35 61 35 36 34 39 2D 36 33 32 63   // ..$fb5a5649-632c
                                                                                                  2D 64 37 31 39 2D 32 31 39 65 2D 64 34 32 61 37   // -d719-219e-d42a7
                                                                                                  66 66 66 66 64 63 39 00 00 )                      // ffffdc9..
  .class auto ansi sealed nested public Tag
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Add = int32(0x0000000E)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag AmpAdjustBufferTag = int32(0x00000034)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BeginTry = int32(0x0000002C)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitAnd = int32(0x00000017)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitFieldRead = int32(0x00000006)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitFieldReadFromBytes = int32(0x00000015)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitFieldWrite = int32(0x00000007)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitFieldWriteToBytes = int32(0x00000016)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitNot = int32(0x0000001C)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitOr = int32(0x00000018)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitShiftLeft = int32(0x0000001A)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitShiftRight = int32(0x0000001B)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag BitXor = int32(0x00000019)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CheckTimeout = int32(0x00000037)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareEqual = int32(0x0000001F)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareGreaterThan = int32(0x00000021)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareGreaterThanOrEqual = int32(0x00000022)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareLessThan = int32(0x00000023)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareLessThanOrEqual = int32(0x00000024)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag CompareNotEqual = int32(0x00000020)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Convert = int32(0x00000025)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Divide = int32(0x00000011)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag DuplicateTop = int32(0x00000009)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag EndTry = int32(0x0000002D)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag ExecuteFunction = int32(0x0000002E)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag ExecuteIntrinsic = int32(0x0000002B)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag ExtractBytes = int32(0x00000013)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag ExtractBytesPopArguments = int32(0x00000035)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag HlslBufferRead = int32(0x00000031)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag HlslGetGroupId = int32(0x00000033)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag HlslGetThreadId = int32(0x00000032)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag HlslIndexedRegisterRead = int32(0x00000030)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag HlslRegisterRead = int32(0x0000002F)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag IsFalse = int32(0x0000001E)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag IsTrue = int32(0x0000001D)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Jump = int32(0x00000028)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag JumpIfFalse = int32(0x0000002A)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag JumpIfTrue = int32(0x00000029)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Load = int32(0x0000000C)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag MemoryRead = int32(0x00000002)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag MemoryStringRead = int32(0x00000004)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag MemoryWrite = int32(0x00000003)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Multiply = int32(0x00000010)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Nop = int32(0x0000000D)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Pop = int32(0x0000000A)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag PushConstant = int32(0x00000008)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag PushLocalVariablePseudoAddress = int32(0x00000036)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag RegisterRead = int32(0x00000000)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag RegisterWrite = int32(0x00000001)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Remainder = int32(0x00000012)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag ReturnTop = int32(0x00000026)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Save = int32(0x0000000B)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag SetBytesRegion = int32(0x00000014)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Subtract = int32(0x0000000F)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Throw = int32(0x00000027)
    .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag TlsGetValue = int32(0x00000005)
  } // end of class Tag

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag 
          get_TagValue() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInstruction::get_TagValue

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILInstruction::get_UniqueId

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag
          TagValue()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction/Tag Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction::get_TagValue()
  } // end of property DkmILInstruction::TagValue
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction::get_UniqueId()
  } // end of property DkmILInstruction::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 63 65 61 32 65 35 63 2D 36 61 30 34   // ..$8cea2e5c-6a04
                                                                                                  2D 34 35 32 33 2D 34 64 61 64 2D 62 35 35 66 34   // -4523-4dad-b55f4
                                                                                                  30 35 32 66 63 33 33 00 00 )                      // 052fc33..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILAdd::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILAdd::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd::get_Type()
  } // end of property DkmILAdd::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAdd

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Double = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Float = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Int16 = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Int32 = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Int64 = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Int8 = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType LongDouble = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType UInt16 = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType UInt32 = int32(0x00000005)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType UInt64 = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType UInt8 = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAmpAdjustBufferTag
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 30 32 34 32 39 61 39 2D 30 31 31 62   // ..$502429a9-011b
                                                                                                  2D 37 39 66 32 2D 63 64 33 30 2D 61 35 64 30 35   // -79f2-cd30-a5d05
                                                                                                  33 36 63 30 33 37 36 00 00 )                      // 36c0376..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAmpAdjustBufferTag 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILAmpAdjustBufferTag::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILAmpAdjustBufferTag

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 36 66 37 32 37 61 36 2D 31 61 32 34   // ..$16f727a6-1a24
                                                                                                  2D 39 63 32 33 2D 31 31 62 33 2D 31 61 34 63 66   // -9c23-11b3-1a4cf
                                                                                                  65 36 36 36 63 63 36 00 00 )                      // e666cc6..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock> 
          get_CatchBlocks() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBeginTry::get_CatchBlocks

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock> CatchBlocks) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBeginTry::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock>
          CatchBlocks()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry::get_CatchBlocks()
  } // end of property DkmILBeginTry::CatchBlocks
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBeginTry

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 65 38 64 64 33 66 66 2D 65 38 35 39   // ..$1e8dd3ff-e859
                                                                                                  2D 66 30 63 37 2D 31 37 61 34 2D 61 35 39 65 30   // -f0c7-17a4-a59e0
                                                                                                  62 37 64 37 63 36 32 00 00 )                      // b7d7c62..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCatchBlock::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_Target() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCatchBlock::get_Target

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason ErrorCode,
                 int32 Target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCatchBlock::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason
          ErrorCode()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock::get_ErrorCode()
  } // end of property DkmILCatchBlock::ErrorCode
  .property instance int32 Target()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock::get_Target()
  } // end of property DkmILCatchBlock::Target
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCatchBlock

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 63 30 34 36 63 33 38 2D 34 36 36 37   // ..$1c046c38-4667
                                                                                                  2D 33 62 30 63 2D 33 33 38 37 2D 36 65 66 63 39   // -3b0c-3387-6efc9
                                                                                                  62 36 36 63 37 34 65 00 00 )                      // b66c74e..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitAnd::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitAnd::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd::get_Type()
  } // end of property DkmILBitAnd::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitAnd

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 62 37 39 34 32 66 66 2D 39 61 63 34   // ..$9b7942ff-9ac4
                                                                                                  2D 65 66 66 62 2D 34 36 61 39 2D 38 66 30 36 36   // -effb-46a9-8f066
                                                                                                  38 32 64 38 34 37 32 00 00 )                      // 82d8472..
  .method public hidebysig specialname instance uint32 
          get_BitPosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldRead::get_BitPosition

  .method public hidebysig specialname instance uint32 
          get_NumBits() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldRead::get_NumBits

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldRead::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead 
          Create(uint32 BitPosition,
                 uint32 NumBits,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldRead::Create

  .property instance uint32 BitPosition()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead::get_BitPosition()
  } // end of property DkmILBitFieldRead::BitPosition
  .property instance uint32 NumBits()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead::get_NumBits()
  } // end of property DkmILBitFieldRead::NumBits
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead::get_Type()
  } // end of property DkmILBitFieldRead::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 39 35 33 36 35 62 36 2D 36 35 39 65   // ..$795365b6-659e
                                                                                                  2D 36 31 39 61 2D 61 64 31 33 2D 33 37 39 34 32   // -619a-ad13-37942
                                                                                                  62 33 66 37 37 38 38 00 00 )                      // b3f7788..
  .method public hidebysig specialname instance uint32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldReadFromBytes::get_ByteOffset

  .method public hidebysig specialname instance uint32 
          get_BitPosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldReadFromBytes::get_BitPosition

  .method public hidebysig specialname instance uint32 
          get_NumBits() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldReadFromBytes::get_NumBits

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldReadFromBytes::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes 
          Create(uint32 ByteOffset,
                 uint32 BitPosition,
                 uint32 NumBits,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldReadFromBytes::Create

  .property instance uint32 BitPosition()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes::get_BitPosition()
  } // end of property DkmILBitFieldReadFromBytes::BitPosition
  .property instance uint32 ByteOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes::get_ByteOffset()
  } // end of property DkmILBitFieldReadFromBytes::ByteOffset
  .property instance uint32 NumBits()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes::get_NumBits()
  } // end of property DkmILBitFieldReadFromBytes::NumBits
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes::get_Type()
  } // end of property DkmILBitFieldReadFromBytes::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldReadFromBytes

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 62 65 38 35 66 66 65 2D 35 63 39 63   // ..$2be85ffe-5c9c
                                                                                                  2D 37 66 34 31 2D 63 65 66 36 2D 63 64 32 63 30   // -7f41-cef6-cd2c0
                                                                                                  35 31 65 32 65 65 37 00 00 )                      // 51e2ee7..
  .method public hidebysig specialname instance uint32 
          get_BitPosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWrite::get_BitPosition

  .method public hidebysig specialname instance uint32 
          get_NumBits() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWrite::get_NumBits

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite 
          Create(uint32 BitPosition,
                 uint32 NumBits) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWrite::Create

  .property instance uint32 BitPosition()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite::get_BitPosition()
  } // end of property DkmILBitFieldWrite::BitPosition
  .property instance uint32 NumBits()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite::get_NumBits()
  } // end of property DkmILBitFieldWrite::NumBits
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWrite

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 37 30 64 62 37 63 31 2D 33 65 34 31   // ..$470db7c1-3e41
                                                                                                  2D 33 64 64 65 2D 61 63 34 33 2D 62 66 35 32 63   // -3dde-ac43-bf52c
                                                                                                  34 34 31 38 34 37 64 00 00 )                      // 441847d..
  .method public hidebysig specialname instance uint32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWriteToBytes::get_ByteOffset

  .method public hidebysig specialname instance uint32 
          get_BitPosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWriteToBytes::get_BitPosition

  .method public hidebysig specialname instance uint32 
          get_NumBits() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWriteToBytes::get_NumBits

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes 
          Create(uint32 ByteOffset,
                 uint32 BitPosition,
                 uint32 NumBits) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitFieldWriteToBytes::Create

  .property instance uint32 BitPosition()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes::get_BitPosition()
  } // end of property DkmILBitFieldWriteToBytes::BitPosition
  .property instance uint32 ByteOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes::get_ByteOffset()
  } // end of property DkmILBitFieldWriteToBytes::ByteOffset
  .property instance uint32 NumBits()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes::get_NumBits()
  } // end of property DkmILBitFieldWriteToBytes::NumBits
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitFieldWriteToBytes

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 61 64 31 36 34 32 62 2D 64 61 30 61   // ..$ead1642b-da0a
                                                                                                  2D 33 65 30 65 2D 30 66 38 63 2D 61 62 31 63 33   // -3e0e-0f8c-ab1c3
                                                                                                  32 37 39 66 62 30 66 00 00 )                      // 279fb0f..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitNot::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitNot::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot::get_Type()
  } // end of property DkmILBitNot::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitNot

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 39 63 33 33 61 61 32 2D 32 38 66 33   // ..$59c33aa2-28f3
                                                                                                  2D 30 64 61 33 2D 65 64 33 61 2D 36 37 36 61 65   // -0da3-ed3a-676ae
                                                                                                  35 37 66 36 34 37 30 00 00 )                      // 57f6470..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitOr::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitOr::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr::get_Type()
  } // end of property DkmILBitOr::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitOr

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 65 30 32 62 35 32 36 2D 61 33 64 33   // ..$9e02b526-a3d3
                                                                                                  2D 31 65 62 33 2D 65 61 66 35 2D 30 65 38 31 37   // -1eb3-eaf5-0e817
                                                                                                  61 66 34 65 34 37 64 00 00 )                      // af4e47d..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitShiftLeft::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitShiftLeft::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft::get_Type()
  } // end of property DkmILBitShiftLeft::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftLeft

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 62 34 36 34 35 65 39 2D 31 39 61 38   // ..$8b4645e9-19a8
                                                                                                  2D 62 61 30 38 2D 39 35 35 34 2D 33 66 31 37 66   // -ba08-9554-3f17f
                                                                                                  31 39 37 66 34 37 38 00 00 )                      // 197f478..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitShiftRight::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitShiftRight::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight::get_Type()
  } // end of property DkmILBitShiftRight::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitShiftRight

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 66 30 65 62 39 38 35 2D 34 32 63 30   // ..$9f0eb985-42c0
                                                                                                  2D 66 62 63 30 2D 31 64 38 35 2D 32 33 37 31 61   // -fbc0-1d85-2371a
                                                                                                  63 61 37 65 37 63 31 00 00 )                      // ca7e7c1..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitXor::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILBitXor::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor::get_Type()
  } // end of property DkmILBitXor::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILBitXor

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention CDecl = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention FastCall = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention StdCall = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention ThisCall = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCheckTimeout
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 37 32 66 31 64 33 61 2D 32 33 63 39   // ..$172f1d3a-23c9
                                                                                                  2D 36 32 37 31 2D 64 35 64 32 2D 36 36 34 36 62   // -6271-d5d2-6646b
                                                                                                  66 37 30 35 34 63 61 00 00 )                      // f7054ca..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCheckTimeout 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCheckTimeout::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCheckTimeout

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 64 37 64 37 35 62 2D 30 35 34 65   // ..$b7d7d75b-054e
                                                                                                  2D 31 36 64 65 2D 65 37 61 63 2D 31 35 37 37 32   // -16de-e7ac-15772
                                                                                                  35 64 64 66 35 31 63 00 00 )                      // 5ddf51c..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareEqual::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareEqual::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual::get_Type()
  } // end of property DkmILCompareEqual::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareEqual

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 37 64 61 37 61 35 39 2D 64 33 63 35   // ..$87da7a59-d3c5
                                                                                                  2D 32 61 39 63 2D 30 39 38 61 2D 62 30 33 36 64   // -2a9c-098a-b036d
                                                                                                  35 31 63 32 62 62 36 00 00 )                      // 51c2bb6..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareGreaterThan::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareGreaterThan::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan::get_Type()
  } // end of property DkmILCompareGreaterThan::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThan

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 62 35 38 39 32 31 66 2D 64 65 61 37   // ..$8b58921f-dea7
                                                                                                  2D 34 63 62 63 2D 62 35 33 33 2D 38 32 31 31 65   // -4cbc-b533-8211e
                                                                                                  37 34 65 30 64 34 36 00 00 )                      // 74e0d46..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareGreaterThanOrEqual::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareGreaterThanOrEqual::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual::get_Type()
  } // end of property DkmILCompareGreaterThanOrEqual::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareGreaterThanOrEqual

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 64 34 37 36 37 34 62 2D 61 36 32 38   // ..$ed47674b-a628
                                                                                                  2D 65 65 34 30 2D 38 65 32 63 2D 61 37 32 38 32   // -ee40-8e2c-a7282
                                                                                                  65 38 32 66 35 39 33 00 00 )                      // e82f593..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareLessThan::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareLessThan::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan::get_Type()
  } // end of property DkmILCompareLessThan::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThan

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 38 34 33 39 65 61 39 2D 65 39 65 30   // ..$a8439ea9-e9e0
                                                                                                  2D 37 36 36 39 2D 38 64 38 65 2D 33 38 37 38 30   // -7669-8d8e-38780
                                                                                                  33 37 39 66 30 34 35 00 00 )                      // 379f045..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareLessThanOrEqual::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareLessThanOrEqual::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual::get_Type()
  } // end of property DkmILCompareLessThanOrEqual::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareLessThanOrEqual

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 36 37 31 34 30 36 33 2D 35 64 33 63   // ..$26714063-5d3c
                                                                                                  2D 64 38 66 35 2D 61 39 34 38 2D 64 39 30 33 63   // -d8f5-a948-d903c
                                                                                                  33 63 64 38 37 30 32 00 00 )                      // 3cd8702..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareNotEqual::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILCompareNotEqual::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual::get_Type()
  } // end of property DkmILCompareNotEqual::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCompareNotEqual

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 65 39 33 35 37 65 30 2D 32 31 65 33   // ..$fe9357e0-21e3
                                                                                                  2D 62 38 66 62 2D 39 39 33 65 2D 39 61 62 63 33   // -b8fb-993e-9abc3
                                                                                                  31 32 66 61 39 33 34 00 00 )                      // 12fa934..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_OriginalType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILConvert::get_OriginalType

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_TargetType() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILConvert::get_TargetType

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType OriginalType,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType TargetType) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILConvert::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          OriginalType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert::get_OriginalType()
  } // end of property DkmILConvert::OriginalType
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          TargetType()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert::get_TargetType()
  } // end of property DkmILConvert::TargetType
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILConvert

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 31 61 31 31 65 30 37 2D 34 31 35 38   // ..$71a11e07-4158
                                                                                                  2D 38 32 35 39 2D 39 66 35 30 2D 66 37 36 34 62   // -8259-9f50-f764b
                                                                                                  38 36 62 30 38 33 35 00 00 )                      // 86b0835..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILDivide::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILDivide::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide::get_Type()
  } // end of property DkmILDivide::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDivide

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDuplicateTop
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 35 61 65 61 37 65 37 2D 63 36 61 31   // ..$75aea7e7-c6a1
                                                                                                  2D 37 38 63 66 2D 62 65 65 30 2D 63 36 30 32 35   // -78cf-bee0-c6025
                                                                                                  62 33 37 61 38 36 38 00 00 )                      // b37a868..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDuplicateTop 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILDuplicateTop::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILDuplicateTop

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEndTry
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 36 37 63 61 39 62 30 2D 34 32 33 65   // ..$e67ca9b0-423e
                                                                                                  2D 31 31 65 32 2D 66 61 37 32 2D 66 65 66 32 33   // -11e2-fa72-fef23
                                                                                                  37 37 31 37 61 39 61 00 00 )                      // 7717a9a..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEndTry 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILEndTry::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILEndTry

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 64 32 36 63 35 37 61 2D 37 62 66 33   // ..$2d26c57a-7bf3
                                                                                                  2D 30 32 64 63 2D 33 62 63 62 2D 61 35 39 33 62   // -02dc-3bcb-a593b
                                                                                                  63 38 65 35 63 61 30 00 00 )                      // c8e5ca0..
  .method public hidebysig specialname instance uint32 
          get_ArgumentCount() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_ArgumentCount

  .method public hidebysig specialname instance uint32 
          get_ReturnValueSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_ReturnValueSize

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention 
          get_CallingConvention() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_CallingConvention

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_Flags

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags> 
          get_ArgumentFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_ArgumentFlags

  .method public hidebysig specialname instance uint32 
          get_UniformComplexReturnElementSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::get_UniformComplexReturnElementSize

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction 
          Create(uint32 ArgumentCount,
                 uint32 ReturnValueSize,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention CallingConvention,
                 valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags Flags,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags> ArgumentFlags,
                 uint32 UniformComplexReturnElementSize) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExecuteFunction::Create

  .property instance uint32 ArgumentCount()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_ArgumentCount()
  } // end of property DkmILExecuteFunction::ArgumentCount
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags>
          ArgumentFlags()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_ArgumentFlags()
  } // end of property DkmILExecuteFunction::ArgumentFlags
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention
          CallingConvention()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILCallingConvention Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_CallingConvention()
  } // end of property DkmILExecuteFunction::CallingConvention
  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_Flags()
  } // end of property DkmILExecuteFunction::Flags
  .property instance uint32 ReturnValueSize()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_ReturnValueSize()
  } // end of property DkmILExecuteFunction::ReturnValueSize
  .property instance uint32 UniformComplexReturnElementSize()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction::get_UniformComplexReturnElementSize()
  } // end of property DkmILExecuteFunction::UniformComplexReturnElementSize
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExecuteFunction

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags Default = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags EnregisteredComplexReturn = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags FloatingPointReturn = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags HasThisPointer = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags NoEnregisteredReturn = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags ReturnAddressOfValue = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags ScalarReturn = int32(0x00000002)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags CopyToDebuggee = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags Default = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags FloatingPoint = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags Scalar = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags ThisPointer = int32(0x00000008)
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFunctionEvaluationArgumentFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 65 31 32 31 37 63 39 2D 62 64 34 30   // ..$fe1217c9-bd40
                                                                                                  2D 34 36 39 31 2D 63 39 31 32 2D 37 32 35 37 37   // -4691-c912-72577
                                                                                                  63 30 35 36 65 65 31 00 00 )                      // c056ee1..
  .method public hidebysig specialname instance int32 
          get_Offset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExtractBytes::get_Offset

  .method public hidebysig specialname instance int32 
          get_Length() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExtractBytes::get_Length

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes 
          Create(int32 Offset,
                 int32 Length) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExtractBytes::Create

  .property instance int32 Length()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes::get_Length()
  } // end of property DkmILExtractBytes::Length
  .property instance int32 Offset()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes::get_Offset()
  } // end of property DkmILExtractBytes::Offset
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytes

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytesPopArguments
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 65 61 37 61 63 62 62 39 2D 30 31 31 32   // ..$ea7acbb9-0112
                                                                                                  2D 65 37 35 61 2D 62 36 32 34 2D 39 37 36 32 34   // -e75a-b624-97624
                                                                                                  31 32 36 61 65 64 38 00 00 )                      // 126aed8..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytesPopArguments 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILExtractBytesPopArguments::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILExtractBytesPopArguments

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 36 65 34 36 36 35 34 2D 30 36 38 36   // ..$d6e46654-0686
                                                                                                  2D 34 34 31 63 2D 33 64 38 36 2D 66 66 36 62 66   // -441c-3d86-ff6bf
                                                                                                  35 30 66 34 64 66 36 00 00 )                      // 50f4df6..
  .method public hidebysig specialname instance int32 
          get_RegisterId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslBufferRead::get_RegisterId

  .method public hidebysig specialname instance uint32 
          get_RegisterIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslBufferRead::get_RegisterIndex

  .method public hidebysig specialname instance uint32 
          get_BytesToRead() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslBufferRead::get_BytesToRead

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead 
          Create(int32 RegisterId,
                 uint32 RegisterIndex,
                 uint32 BytesToRead) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslBufferRead::Create

  .property instance uint32 BytesToRead()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead::get_BytesToRead()
  } // end of property DkmILHlslBufferRead::BytesToRead
  .property instance int32 RegisterId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead::get_RegisterId()
  } // end of property DkmILHlslBufferRead::RegisterId
  .property instance uint32 RegisterIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead::get_RegisterIndex()
  } // end of property DkmILHlslBufferRead::RegisterIndex
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslBufferRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 64 35 38 61 62 32 39 2D 38 33 64 32   // ..$dd58ab29-83d2
                                                                                                  2D 63 34 64 34 2D 65 34 39 39 2D 65 38 35 65 35   // -c4d4-e499-e85e5
                                                                                                  62 66 39 39 32 37 37 00 00 )                      // bf99277..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents 
          get_GroupIdComponents() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetGroupId::get_GroupIdComponents

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId 
          Create(valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents GroupIdComponents) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetGroupId::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents
          GroupIdComponents()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId::get_GroupIdComponents()
  } // end of property DkmILHlslGetGroupId::GroupIdComponents
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetGroupId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents X = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents Y = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents Z = int32(0x00000004)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 63 34 32 35 31 39 33 2D 30 34 33 66   // ..$2c425193-043f
                                                                                                  2D 33 64 30 32 2D 35 39 62 31 2D 63 65 64 64 35   // -3d02-59b1-cedd5
                                                                                                  30 33 36 33 63 61 36 00 00 )                      // 0363ca6..
  .method public hidebysig specialname instance bool 
          get_UseDispatchId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetThreadId::get_UseDispatchId

  .method public hidebysig specialname instance bool 
          get_UseFlatModel() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetThreadId::get_UseFlatModel

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents 
          get_ThreadIdComponents() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetThreadId::get_ThreadIdComponents

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId 
          Create(bool UseDispatchId,
                 bool UseFlatModel,
                 valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents ThreadIdComponents) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslGetThreadId::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents
          ThreadIdComponents()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.GPU.DkmHlslThreadIdComponents Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId::get_ThreadIdComponents()
  } // end of property DkmILHlslGetThreadId::ThreadIdComponents
  .property instance bool UseDispatchId()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId::get_UseDispatchId()
  } // end of property DkmILHlslGetThreadId::UseDispatchId
  .property instance bool UseFlatModel()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId::get_UseFlatModel()
  } // end of property DkmILHlslGetThreadId::UseFlatModel
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslGetThreadId

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 34 64 61 66 32 30 30 2D 33 37 62 31   // ..$64daf200-37b1
                                                                                                  2D 33 37 39 66 2D 62 36 39 38 2D 34 61 31 38 31   // -379f-b698-4a181
                                                                                                  32 30 30 62 38 64 62 00 00 )                      // 200b8db..
  .method public hidebysig specialname instance int32 
          get_RegisterId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::get_RegisterId

  .method public hidebysig specialname instance uint32 
          get_RegisterIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::get_RegisterIndex

  .method public hidebysig specialname instance uint32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::get_ByteOffset

  .method public hidebysig specialname instance uint32 
          get_BytesToRead() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::get_BytesToRead

  .method public hidebysig specialname instance uint32 
          get_VectorElements() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::get_VectorElements

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead 
          Create(int32 RegisterId,
                 uint32 RegisterIndex,
                 uint32 ByteOffset,
                 uint32 BytesToRead,
                 uint32 VectorElements) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslIndexedRegisterRead::Create

  .property instance uint32 ByteOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead::get_ByteOffset()
  } // end of property DkmILHlslIndexedRegisterRead::ByteOffset
  .property instance uint32 BytesToRead()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead::get_BytesToRead()
  } // end of property DkmILHlslIndexedRegisterRead::BytesToRead
  .property instance int32 RegisterId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead::get_RegisterId()
  } // end of property DkmILHlslIndexedRegisterRead::RegisterId
  .property instance uint32 RegisterIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead::get_RegisterIndex()
  } // end of property DkmILHlslIndexedRegisterRead::RegisterIndex
  .property instance uint32 VectorElements()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead::get_VectorElements()
  } // end of property DkmILHlslIndexedRegisterRead::VectorElements
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslIndexedRegisterRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 36 37 63 36 38 33 35 2D 36 38 32 35   // ..$967c6835-6825
                                                                                                  2D 38 61 34 33 2D 31 64 32 33 2D 63 34 62 35 66   // -8a43-1d23-c4b5f
                                                                                                  39 66 62 32 37 31 39 00 00 )                      // 9fb2719..
  .method public hidebysig specialname instance int32 
          get_RegisterId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_RegisterId

  .method public hidebysig specialname instance uint32 
          get_RegisterIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_RegisterIndex

  .method public hidebysig specialname instance uint32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_ByteOffset

  .method public hidebysig specialname instance uint32 
          get_BytesToRead() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_BytesToRead

  .method public hidebysig specialname instance uint32 
          get_FirstElement() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_FirstElement

  .method public hidebysig specialname instance uint32 
          get_VectorElements() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::get_VectorElements

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead 
          Create(int32 RegisterId,
                 uint32 RegisterIndex,
                 uint32 ByteOffset,
                 uint32 BytesToRead,
                 uint32 FirstElement,
                 uint32 VectorElements) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILHlslRegisterRead::Create

  .property instance uint32 ByteOffset()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_ByteOffset()
  } // end of property DkmILHlslRegisterRead::ByteOffset
  .property instance uint32 BytesToRead()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_BytesToRead()
  } // end of property DkmILHlslRegisterRead::BytesToRead
  .property instance uint32 FirstElement()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_FirstElement()
  } // end of property DkmILHlslRegisterRead::FirstElement
  .property instance int32 RegisterId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_RegisterId()
  } // end of property DkmILHlslRegisterRead::RegisterId
  .property instance uint32 RegisterIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_RegisterIndex()
  } // end of property DkmILHlslRegisterRead::RegisterIndex
  .property instance uint32 VectorElements()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead::get_VectorElements()
  } // end of property DkmILHlslRegisterRead::VectorElements
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILHlslRegisterRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 38 36 37 31 35 33 34 2D 38 65 34 39   // ..$58671534-8e49
                                                                                                  2D 39 63 34 38 2D 63 32 61 38 2D 32 30 31 64 32   // -9c48-c2a8-201d2
                                                                                                  39 62 61 63 35 65 66 00 00 )                      // 9bac5ef..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILIsFalse::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILIsFalse::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse::get_Type()
  } // end of property DkmILIsFalse::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsFalse

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 65 66 65 66 34 65 37 2D 64 38 31 32   // ..$fefef4e7-d812
                                                                                                  2D 35 30 30 35 2D 66 31 63 32 2D 65 38 31 37 62   // -5005-f1c2-e817b
                                                                                                  36 33 65 30 65 35 63 00 00 )                      // 63e0e5c..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILIsTrue::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILIsTrue::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue::get_Type()
  } // end of property DkmILIsTrue::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILIsTrue

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 36 62 62 32 31 61 34 2D 36 32 39 62   // ..$36bb21a4-629b
                                                                                                  2D 64 33 66 65 2D 37 63 62 61 2D 39 37 31 39 31   // -d3fe-7cba-97191
                                                                                                  66 30 30 37 33 34 39 00 00 )                      // f007349..
  .method public hidebysig specialname instance uint32 
          get_Target() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJump::get_Target

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump 
          Create(uint32 Target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJump::Create

  .property instance uint32 Target()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump::get_Target()
  } // end of property DkmILJump::Target
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJump

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 30 63 63 38 36 31 36 2D 65 66 31 35   // ..$80cc8616-ef15
                                                                                                  2D 36 37 30 65 2D 31 36 64 63 2D 38 64 31 64 38   // -670e-16dc-8d1d8
                                                                                                  35 32 65 38 30 62 31 00 00 )                      // 52e80b1..
  .method public hidebysig specialname instance uint32 
          get_Target() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJumpIfFalse::get_Target

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse 
          Create(uint32 Target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJumpIfFalse::Create

  .property instance uint32 Target()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse::get_Target()
  } // end of property DkmILJumpIfFalse::Target
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfFalse

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 31 61 61 66 36 39 63 2D 39 61 39 38   // ..$01aaf69c-9a98
                                                                                                  2D 30 33 64 39 2D 32 62 62 64 2D 34 39 62 37 34   // -03d9-2bbd-49b74
                                                                                                  64 65 37 38 30 32 38 00 00 )                      // de78028..
  .method public hidebysig specialname instance uint32 
          get_Target() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJumpIfTrue::get_Target

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue 
          Create(uint32 Target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILJumpIfTrue::Create

  .property instance uint32 Target()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue::get_Target()
  } // end of property DkmILJumpIfTrue::Target
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILJumpIfTrue

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 34 32 65 64 65 32 32 2D 34 61 66 61   // ..$242ede22-4afa
                                                                                                  2D 64 63 62 30 2D 36 65 37 35 2D 65 35 62 37 31   // -dcb0-6e75-e5b71
                                                                                                  38 38 31 35 62 65 65 00 00 )                      // 8815bee..
  .method public hidebysig specialname instance uint32 
          get_Index() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILLoad::get_Index

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad 
          Create(uint32 Index) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILLoad::Create

  .property instance uint32 Index()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad::get_Index()
  } // end of property DkmILLoad::Index
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILLoad

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 37 33 61 34 32 30 36 2D 38 39 61 38   // ..$773a4206-89a8
                                                                                                  2D 38 30 63 34 2D 61 38 32 38 2D 36 65 61 36 37   // -80c4-a828-6ea67
                                                                                                  32 38 39 33 35 61 61 00 00 )                      // 28935aa..
  .method public hidebysig specialname instance uint32 
          get_Size() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryRead::get_Size

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryRead::get_Flags

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead 
          Create(uint32 Size,
                 valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryRead::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead::get_Flags()
  } // end of property DkmILMemoryRead::Flags
  .property instance uint32 Size()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead::get_Size()
  } // end of property DkmILMemoryRead::Size
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 36 34 64 37 63 30 34 2D 34 65 35 61   // ..$a64d7c04-4e5a
                                                                                                  2D 34 61 37 35 2D 39 33 36 63 2D 35 65 65 65 62   // -4a75-936c-5eeeb
                                                                                                  37 31 32 31 66 36 35 00 00 )                      // 7121f65..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryStringRead::get_Flags

  .method public hidebysig specialname instance uint16 
          get_CharacterSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryStringRead::get_CharacterSize

  .method public hidebysig specialname instance int32 
          get_MaxCharacters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryStringRead::get_MaxCharacters

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead 
          Create(valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Flags,
                 uint16 CharacterSize,
                 int32 MaxCharacters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryStringRead::Create

  .property instance uint16 CharacterSize()
  {
    .get instance uint16 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead::get_CharacterSize()
  } // end of property DkmILMemoryStringRead::CharacterSize
  .property instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.DkmReadMemoryFlags Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead::get_Flags()
  } // end of property DkmILMemoryStringRead::Flags
  .property instance int32 MaxCharacters()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead::get_MaxCharacters()
  } // end of property DkmILMemoryStringRead::MaxCharacters
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryStringRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryWrite
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 62 35 66 36 65 62 63 2D 66 64 30 31   // ..$9b5f6ebc-fd01
                                                                                                  2D 66 63 61 32 2D 62 61 65 63 2D 39 64 30 32 39   // -fca2-baec-9d029
                                                                                                  35 37 62 66 66 63 34 00 00 )                      // 57bffc4..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryWrite 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMemoryWrite::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMemoryWrite

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 66 63 66 36 35 32 31 2D 34 35 65 39   // ..$3fcf6521-45e9
                                                                                                  2D 64 38 34 34 2D 62 65 31 36 2D 31 66 30 35 32   // -d844-be16-1f052
                                                                                                  33 63 39 38 66 66 33 00 00 )                      // 3c98ff3..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMultiply::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILMultiply::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply::get_Type()
  } // end of property DkmILMultiply::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILMultiply

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILNop
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 34 35 37 33 61 65 37 2D 61 36 66 61   // ..$54573ae7-a6fa
                                                                                                  2D 63 37 63 35 2D 34 34 37 33 2D 33 38 34 36 65   // -c7c5-4473-3846e
                                                                                                  38 61 37 36 66 31 66 00 00 )                      // 8a76f1f..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILNop 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILNop::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILNop

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPop
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 65 62 34 30 37 33 30 2D 37 63 38 31   // ..$6eb40730-7c81
                                                                                                  2D 62 65 62 35 2D 39 31 62 65 2D 62 66 33 36 39   // -beb5-91be-bf369
                                                                                                  64 33 34 66 37 34 31 00 00 )                      // d34f741..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPop 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPop::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPop

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 65 62 65 66 38 38 37 2D 39 64 61 39   // ..$debef887-9da9
                                                                                                  2D 30 34 65 32 2D 66 66 66 32 2D 36 65 35 31 30   // -04e2-fff2-6e510
                                                                                                  61 66 66 64 66 66 65 00 00 )                      // affdffe..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPushConstant::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant 
          Create(class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPushConstant::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Value()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant::get_Value()
  } // end of property DkmILPushConstant::Value
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushConstant

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 36 66 32 33 39 61 37 2D 63 63 36 38   // ..$56f239a7-cc68
                                                                                                  2D 61 61 31 61 2D 38 62 31 61 2D 65 65 30 63 62   // -aa1a-8b1a-ee0cb
                                                                                                  34 66 66 39 38 33 34 00 00 )                      // 4ff9834..
  .method public hidebysig specialname instance int32 
          get_Index() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPushLocalVariablePseudoAddress::get_Index

  .method public hidebysig specialname instance int32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPushLocalVariablePseudoAddress::get_ByteOffset

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress 
          Create(int32 Index,
                 int32 ByteOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILPushLocalVariablePseudoAddress::Create

  .property instance int32 ByteOffset()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress::get_ByteOffset()
  } // end of property DkmILPushLocalVariablePseudoAddress::ByteOffset
  .property instance int32 Index()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress::get_Index()
  } // end of property DkmILPushLocalVariablePseudoAddress::Index
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILPushLocalVariablePseudoAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 35 30 38 38 39 31 37 2D 64 64 35 62   // ..$65088917-dd5b
                                                                                                  2D 33 32 63 33 2D 62 33 30 30 2D 32 31 64 61 35   // -32c3-b300-21da5
                                                                                                  32 34 32 64 39 35 39 00 00 )                      // 242d959..
  .method public hidebysig specialname instance int32 
          get_RegisterId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRegisterRead::get_RegisterId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead 
          Create(int32 RegisterId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRegisterRead::Create

  .property instance int32 RegisterId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead::get_RegisterId()
  } // end of property DkmILRegisterRead::RegisterId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterRead

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 63 30 38 37 34 32 63 2D 32 35 30 65   // ..$6c08742c-250e
                                                                                                  2D 35 66 32 63 2D 39 38 62 62 2D 62 32 61 37 31   // -5f2c-98bb-b2a71
                                                                                                  34 39 30 31 65 61 62 00 00 )                      // 4901eab..
  .method public hidebysig specialname instance int32 
          get_RegisterId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRegisterWrite::get_RegisterId

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite 
          Create(int32 RegisterId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRegisterWrite::Create

  .property instance int32 RegisterId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite::get_RegisterId()
  } // end of property DkmILRegisterWrite::RegisterId
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRegisterWrite

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 66 63 31 36 32 32 30 2D 63 62 66 39   // ..$2fc16220-cbf9
                                                                                                  2D 31 35 65 38 2D 66 34 32 38 2D 38 34 36 32 38   // -15e8-f428-84628
                                                                                                  64 33 37 34 66 33 31 00 00 )                      // d374f31..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRemainder::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILRemainder::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder::get_Type()
  } // end of property DkmILRemainder::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILRemainder

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILReturnTop
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 65 62 31 33 34 31 31 2D 32 35 36 38   // ..$deb13411-2568
                                                                                                  2D 64 31 31 34 2D 30 61 62 31 2D 61 62 38 39 31   // -d114-0ab1-ab891
                                                                                                  63 65 31 31 61 32 63 00 00 )                      // ce11a2c..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILReturnTop 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILReturnTop::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILReturnTop

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 30 62 34 61 35 31 61 2D 30 32 35 63   // ..$60b4a51a-025c
                                                                                                  2D 33 34 61 33 2D 36 62 30 35 2D 32 38 34 63 66   // -34a3-6b05-284cf
                                                                                                  36 34 66 64 35 30 66 00 00 )                      // 64fd50f..
  .method public hidebysig specialname instance uint32 
          get_Index() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILSave::get_Index

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave 
          Create(uint32 Index) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILSave::Create

  .property instance uint32 Index()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave::get_Index()
  } // end of property DkmILSave::Index
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSave

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSetBytesRegion
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 34 39 66 38 65 63 34 2D 31 66 61 62   // ..$d49f8ec4-1fab
                                                                                                  2D 63 66 37 30 2D 38 36 63 34 2D 36 62 36 31 35   // -cf70-86c4-6b615
                                                                                                  34 36 30 63 30 37 39 00 00 )                      // 460c079..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSetBytesRegion 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILSetBytesRegion::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSetBytesRegion

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 64 64 35 38 37 64 33 2D 65 62 33 37   // ..$8dd587d3-eb37
                                                                                                  2D 61 62 61 36 2D 33 37 62 36 2D 62 36 63 61 65   // -aba6-37b6-b6cae
                                                                                                  31 39 35 30 63 33 65 00 00 )                      // 1950c3e..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILSubtract::get_Type

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILSubtract::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType
          Type()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmPrimitiveObjectType Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract::get_Type()
  } // end of property DkmILSubtract::Type
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILSubtract

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 62 37 38 36 61 30 61 31 2D 31 36 30 35   // ..$b786a0a1-1605
                                                                                                  2D 62 62 65 65 2D 32 33 38 64 2D 64 62 62 37 35   // -bbee-238d-dbb75
                                                                                                  39 34 39 37 64 66 62 00 00 )                      // 9497dfb..
  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason 
          get_FailureCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILThrow::get_FailureCode

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow 
          Create(valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason FailureCode) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILThrow::Create

  .property instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason
          FailureCode()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILFailureReason Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow::get_FailureCode()
  } // end of property DkmILThrow::FailureCode
} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILThrow

.class public auto ansi Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILTlsGetValue
       extends Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILInstruction
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 39 64 62 63 30 66 32 2D 63 37 62 65   // ..$a9dbc0f2-c7be
                                                                                                  2D 63 37 36 62 2D 35 63 66 66 2D 39 65 34 35 63   // -c76b-5cff-9e45c
                                                                                                  65 66 34 31 61 33 33 00 00 )                      // ef41a33..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILTlsGetValue 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmILTlsGetValue::Create

} // end of class Microsoft.VisualStudio.Debugger.Evaluation.IL.DkmILTlsGetValue

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Cpp() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_Cpp

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Win32() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_Win32

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Clr() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_Clr

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_NativeRuntimeCheck() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_NativeRuntimeCheck

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ManagedDebuggingAssistant() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_ManagedDebuggingAssistant

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_ActiveScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_Gpu() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategory::get_Gpu

  .property valuetype [mscorlib]System.Guid
          ActiveScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_ActiveScript()
  } // end of property DkmExceptionCategory::ActiveScript
  .property valuetype [mscorlib]System.Guid
          Clr()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Clr()
  } // end of property DkmExceptionCategory::Clr
  .property valuetype [mscorlib]System.Guid
          Cpp()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Cpp()
  } // end of property DkmExceptionCategory::Cpp
  .property valuetype [mscorlib]System.Guid
          Gpu()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Gpu()
  } // end of property DkmExceptionCategory::Gpu
  .property valuetype [mscorlib]System.Guid
          ManagedDebuggingAssistant()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_ManagedDebuggingAssistant()
  } // end of property DkmExceptionCategory::ManagedDebuggingAssistant
  .property valuetype [mscorlib]System.Guid
          NativeRuntimeCheck()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_NativeRuntimeCheck()
  } // end of property DkmExceptionCategory::NativeRuntimeCheck
  .property valuetype [mscorlib]System.Guid
          Win32()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory::get_Win32()
  } // end of property DkmExceptionCategory::Win32
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategory

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 34 39 39 34 61 39 34 2D 34 33 36 33   // ..$64994a94-4363
                                                                                                  2D 64 66 64 61 2D 30 64 63 31 2D 30 30 66 34 39   // -dfda-0dc1-00f49
                                                                                                  63 63 36 66 66 34 33 00 00 )                      // cc6ff43..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_ExceptionCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategoryTrigger::get_ExceptionCategory

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger 
          Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype [mscorlib]System.Guid ExceptionCategory) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCategoryTrigger::Create

  .property instance valuetype [mscorlib]System.Guid
          ExceptionCategory()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger::get_ExceptionCategory()
  } // end of property DkmExceptionCategoryTrigger::ExceptionCategory
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCategoryTrigger

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 38 36 32 32 35 30 62 2D 35 62 66 32   // ..$4862250b-5bf2
                                                                                                  2D 62 39 66 39 2D 34 64 61 36 2D 36 66 64 64 37   // -b9f9-4da6-6fdd7
                                                                                                  65 33 39 62 38 34 31 00 00 )                      // e39b841..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_ExceptionCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCodeTrigger::get_ExceptionCategory

  .method public hidebysig specialname instance uint32 
          get_Code() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCodeTrigger::get_Code

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger 
          Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype [mscorlib]System.Guid ExceptionCategory,
                 uint32 Code) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionCodeTrigger::Create

  .property instance uint32 Code()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger::get_Code()
  } // end of property DkmExceptionCodeTrigger::Code
  .property instance valuetype [mscorlib]System.Guid
          ExceptionCategory()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger::get_ExceptionCategory()
  } // end of property DkmExceptionCodeTrigger::ExceptionCategory
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionCodeTrigger

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionGlobalTrigger
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 37 65 37 35 36 33 30 31 2D 36 38 32 32   // ..$7e756301-6822
                                                                                                  2D 36 37 38 66 2D 34 66 64 66 2D 65 62 66 65 32   // -678f-4fdf-ebfe2
                                                                                                  35 62 64 63 30 32 31 00 00 )                      // 5bdc021..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionGlobalTrigger 
          Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionGlobalTrigger::Create

} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionGlobalTrigger

.class public auto ansi Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionTrigger
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 63 66 66 61 36 61 65 2D 65 34 35 64   // ..$dcffa6ae-e45d
                                                                                                  2D 66 64 34 66 2D 61 32 33 65 2D 38 32 37 37 39   // -fd4f-a23e-82779
                                                                                                  61 33 33 32 38 30 31 00 00 )                      // a332801..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_ExceptionCategory() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionNameTrigger::get_ExceptionCategory

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionNameTrigger::get_Name

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger 
          Create(valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 valuetype [mscorlib]System.Guid ExceptionCategory,
                 string Name) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmExceptionNameTrigger::Create

  .property instance valuetype [mscorlib]System.Guid
          ExceptionCategory()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger::get_ExceptionCategory()
  } // end of property DkmExceptionNameTrigger::ExceptionCategory
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger::get_Name()
  } // end of property DkmExceptionNameTrigger::Name
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionNameTrigger

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType LEO = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType Stowed = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType Win32 = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Exceptions.DkmStowedExceptionNestedType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags UseWildcard = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmAddressSearchFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnFunctionResolvedAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnFunctionResolvedAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult::get_ErrorCode()
  } // end of property DkmOnFunctionResolvedAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnFunctionResolvedAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnResolverMessageAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnResolverMessageAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult::get_ErrorCode()
  } // end of property DkmOnResolverMessageAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.FunctionResolution.DkmOnResolverMessageAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Active = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Blocked = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Completed = int32(0x00000020)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Divergent = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState NotStarted = int32(0x00000010)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Unknown = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState Unused = int32(0x00000008)
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmComputeThreadState

.class public auto ansi Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress
       extends Microsoft.VisualStudio.Debugger.Evaluation.DkmDataAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 64 37 61 65 34 36 61 2D 30 37 36 36   // ..$5d7ae46a-0766
                                                                                                  2D 39 32 62 37 2D 33 31 66 30 2D 34 36 36 64 61   // -92b7-31f0-466da
                                                                                                  62 63 30 37 35 38 32 00 00 )                      // bc07582..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread 
          get_ComputeThread() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUDataAddress::get_ComputeThread

  .method public hidebysig specialname instance uint64 
          get_InstructionPointer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUDataAddress::get_InstructionPointer

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 uint64 Value,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread ComputeThread,
                 uint64 InstructionPointer) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUDataAddress::Create

  .property instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread
          ComputeThread()
  {
    .get instance class Microsoft.VisualStudio.Debugger.GPU.DkmGPUComputeThread Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress::get_ComputeThread()
  } // end of property DkmGPUDataAddress::ComputeThread
  .property instance uint64 InstructionPointer()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress::get_InstructionPointer()
  } // end of property DkmGPUDataAddress::InstructionPointer
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUDataAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 31 39 33 30 63 39 32 32 2D 35 39 30 36   // ..$1930c922-5906
                                                                                                  2D 63 32 39 64 2D 64 35 31 62 2D 61 35 39 65 35   // -c29d-d51b-a59e5
                                                                                                  63 38 64 34 32 32 37 00 00 )                      // c8d4227..
  .method public hidebysig specialname instance uint64 
          get_ConflictingInstructionAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUMemoryAccessExceptionInformation::get_ConflictingInstructionAddress

  .method public hidebysig specialname instance uint64 
          get_ConflictingThreadGlobalIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUMemoryAccessExceptionInformation::get_ConflictingThreadGlobalIndex

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 string Name,
                 uint32 Code,
                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 uint64 ConflictingInstructionAddress,
                 uint64 ConflictingThreadGlobalIndex) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGPUMemoryAccessExceptionInformation::Create

  .property instance uint64 ConflictingInstructionAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation::get_ConflictingInstructionAddress()
  } // end of property DkmGPUMemoryAccessExceptionInformation::ConflictingInstructionAddress
  .property instance uint64 ConflictingThreadGlobalIndex()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation::get_ConflictingThreadGlobalIndex()
  } // end of property DkmGPUMemoryAccessExceptionInformation::ConflictingThreadGlobalIndex
} // end of class Microsoft.VisualStudio.Debugger.GPU.DkmGPUMemoryAccessExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject
       extends Microsoft.VisualStudio.Debugger.DkmDataContainer
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 31 34 39 32 32 32 37 2D 65 36 38 62   // ..$81492227-e68b
                                                                                                  2D 34 33 39 38 2D 65 65 61 32 2D 31 32 63 38 36   // -4398-eea2-12c86
                                                                                                  66 64 32 62 65 35 32 00 00 )                      // fd2be52..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_UniqueId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::get_UniqueId

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::get_Process

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::Create

  .method public hidebysig instance void 
          InitCache() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::InitCache

  .method public hidebysig instance void 
          GetTargetClass(string Name,
                         uint32 AssemblyCookie,
                         [out] uint32& Cookie,
                         [out] uint32& ValueAttributeCount,
                         [out] uint32& ViewerAttributeCount,
                         [out] uint32& VisualizerAttributeCount) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetTargetClass

  .method public hidebysig instance void 
          GetTargetAssembly(string Name,
                            [out] uint32& Cookie) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetTargetAssembly

  .method public hidebysig instance void 
          GetAssembly(uint32 AssemblyCookie,
                      uint32 Flags,
                      [out] uint32& FlagsOut,
                      [out] string& Name,
                      [out] uint8[]& AssemblyBytes,
                      [out] uint8[]& PdbBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetAssembly

  .method public hidebysig instance void 
          GetHostAssembly(uint32 Flags,
                          [out] uint8[]& AssemblyBytes,
                          [out] uint8[]& PdbBytes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetHostAssembly

  .method public hidebysig instance void 
          GetValueAttributeProps(uint32 ClassCookie,
                                 uint32 Ordinal,
                                 [out] string& TargetedAssembly,
                                 [out] uint32& AssemblyLocation,
                                 [out] string& Name,
                                 [out] string& Value,
                                 [out] string& Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetValueAttributeProps

  .method public hidebysig instance void 
          GetViewerAttributeProps(uint32 ClassCookie,
                                  uint32 Ordinal,
                                  [out] string& TargetedAssembly,
                                  [out] uint32& AssemblyLocation,
                                  [out] string& ClassName,
                                  [out] uint32& ClassAssemblyLocation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetViewerAttributeProps

  .method public hidebysig instance void 
          GetVisualizerAttributeProps(uint32 ClassCookie,
                                      uint32 Ordinal,
                                      [out] string& TargetedAssembly,
                                      [out] uint32& AssemblyLocation,
                                      [out] string& DisplayClassName,
                                      [out] uint32& DisplayClassAssemblyLocation,
                                      [out] string& ProxyClassName,
                                      [out] uint32& ProxyClassAssemblyLocation,
                                      [out] string& Description,
                                      [out] uint32& Type) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmEELocalObject::GetVisualizerAttributeProps

  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject::get_Process()
  } // end of property DkmEELocalObject::Process
  .property instance valuetype [mscorlib]System.Guid
          UniqueId()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject::get_UniqueId()
  } // end of property DkmEELocalObject::UniqueId
} // end of class Microsoft.VisualStudio.Debugger.Internal.DkmEELocalObject

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 64 39 65 33 63 34 66 2D 65 32 36 34   // ..$8d9e3c4f-e264
                                                                                                  2D 34 37 64 35 2D 30 65 30 32 2D 37 64 35 62 66   // -47d5-0e02-7d5bf
                                                                                                  39 33 63 34 36 35 39 00 00 )                      // 93c4659..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppExceptionInformation::get_Name

  .method public hidebysig specialname instance uint64 
          get_ExceptionObjectPointer() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppExceptionInformation::get_ExceptionObjectPointer

  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppExceptionInformation::get_Address

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation 
          get_WinRTExceptionInfo() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppExceptionInformation::get_WinRTExceptionInfo

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 class Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation ImplementationException,
                 string Name,
                 uint64 ExceptionObjectPointer,
                 uint64 Address,
                 class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation WinRTExceptionInfo) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppExceptionInformation::Create

  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_Address()
  } // end of property DkmCppExceptionInformation::Address
  .property instance uint64 ExceptionObjectPointer()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_ExceptionObjectPointer()
  } // end of property DkmCppExceptionInformation::ExceptionObjectPointer
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_Name()
  } // end of property DkmCppExceptionInformation::Name
  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation
          WinRTExceptionInfo()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation::get_WinRTExceptionInfo()
  } // end of property DkmCppExceptionInformation::WinRTExceptionInfo
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmCppExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 63 65 65 39 62 33 65 2D 31 33 38 62   // ..$dcee9b3e-138b
                                                                                                  2D 64 32 36 63 2D 34 32 66 64 2D 34 62 66 64 39   // -d26c-42fd-4bfd9
                                                                                                  39 61 33 39 35 35 62 00 00 )                      // 9a3955b..
  .method public hidebysig specialname instance string 
          get_Description() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_Description

  .method public hidebysig specialname instance string 
          get_RestrictedDescription() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_RestrictedDescription

  .method public hidebysig specialname instance string 
          get_RestrictedReference() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_RestrictedReference

  .method public hidebysig specialname instance string 
          get_RestrictedCapabilitySid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_RestrictedCapabilitySid

  .method public hidebysig specialname instance int32 
          get_ExceptionHR() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_ExceptionHR

  .method public hidebysig specialname instance uint64 
          get_ErrorInfoAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_ErrorInfoAddress

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> 
          get_CapturedStack() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::get_CapturedStack

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation 
          Create(string Description,
                 string RestrictedDescription,
                 string RestrictedReference,
                 string RestrictedCapabilitySid,
                 int32 ExceptionHR) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::Create

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation 
          Create(string Description,
                 string RestrictedDescription,
                 string RestrictedReference,
                 string RestrictedCapabilitySid,
                 int32 ExceptionHR,
                 uint64 ErrorInfoAddress,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> CapturedStack) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCppWinRTExceptionInformation::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress>
          CapturedStack()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.DkmInstructionAddress> Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_CapturedStack()
  } // end of property DkmCppWinRTExceptionInformation::CapturedStack
  .property instance string Description()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_Description()
  } // end of property DkmCppWinRTExceptionInformation::Description
  .property instance uint64 ErrorInfoAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_ErrorInfoAddress()
  } // end of property DkmCppWinRTExceptionInformation::ErrorInfoAddress
  .property instance int32 ExceptionHR()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_ExceptionHR()
  } // end of property DkmCppWinRTExceptionInformation::ExceptionHR
  .property instance string RestrictedCapabilitySid()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedCapabilitySid()
  } // end of property DkmCppWinRTExceptionInformation::RestrictedCapabilitySid
  .property instance string RestrictedDescription()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedDescription()
  } // end of property DkmCppWinRTExceptionInformation::RestrictedDescription
  .property instance string RestrictedReference()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation::get_RestrictedReference()
  } // end of property DkmCppWinRTExceptionInformation::RestrictedReference
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmCppWinRTExceptionInformation

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindExportNameAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindExportNameAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindExportNameAsyncResult::get_Address

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Address) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindExportNameAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress
          Address()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Native.DkmNativeInstructionAddress Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult::get_Address()
  } // end of property DkmFindExportNameAsyncResult::Address
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult::get_ErrorCode()
  } // end of property DkmFindExportNameAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmFindExportNameAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindNearestExportAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindNearestExportAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance string 
          get_ExportName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindNearestExportAsyncResult::get_ExportName

  .method public hidebysig specialname instance int32 
          get_ByteOffset() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindNearestExportAsyncResult::get_ByteOffset

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string ExportName,
                               int32 ByteOffset) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindNearestExportAsyncResult::.ctor

  .property instance int32 ByteOffset()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ByteOffset()
  } // end of property DkmFindNearestExportAsyncResult::ByteOffset
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ErrorCode()
  } // end of property DkmFindNearestExportAsyncResult::ErrorCode
  .property instance string ExportName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult::get_ExportName()
  } // end of property DkmFindNearestExportAsyncResult::ExportName
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmFindNearestExportAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType CompilerGeneratedGlueCode = int32(0x0000000B)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Custom = int32(0x00000008)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Epilog = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Native = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NativeNoSource = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NativeNoStepInto = int32(0x0000000A)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NlgReturn = int32(0x00000007)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NoNativeSymbols = int32(0x00000009)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType NonStopStepIntoCode = int32(0x00000006)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Prolog = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Thunk = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType Trampoline = int32(0x00000005)
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType ContinueStep = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmNativeAddressStepType

.class public auto ansi Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation
       extends Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionInformation
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 63 61 31 61 35 62 35 2D 35 63 62 62   // ..$8ca1a5b5-5cbb
                                                                                                  2D 66 33 33 66 2D 36 34 37 36 2D 61 65 36 37 61   // -f33f-6476-ae67a
                                                                                                  63 39 34 31 37 66 61 00 00 )                      // c9417fa..
  .method public hidebysig specialname instance uint32 
          get_ExceptionFlags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWin32ExceptionInformation::get_ExceptionFlags

  .method public hidebysig specialname instance uint64 
          get_ParentExceptionRecordAddress() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWin32ExceptionInformation::get_ParentExceptionRecordAddress

  .method public hidebysig specialname instance uint64 
          get_Address() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWin32ExceptionInformation::get_Address

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> 
          get_ExceptionParameters() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWin32ExceptionInformation::get_ExceptionParameters

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation 
          Create(class Microsoft.VisualStudio.Debugger.DkmRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.DkmThread Thread,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress InstructionAddress,
                 uint32 Code,
                 valuetype Microsoft.VisualStudio.Debugger.Exceptions.DkmExceptionProcessingStage ProcessingStage,
                 uint32 ExceptionFlags,
                 uint64 ParentExceptionRecordAddress,
                 uint64 Address,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> ExceptionParameters) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmWin32ExceptionInformation::Create

  .property instance uint64 Address()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_Address()
  } // end of property DkmWin32ExceptionInformation::Address
  .property instance uint32 ExceptionFlags()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ExceptionFlags()
  } // end of property DkmWin32ExceptionInformation::ExceptionFlags
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64>
          ExceptionParameters()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint64> Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ExceptionParameters()
  } // end of property DkmWin32ExceptionInformation::ExceptionParameters
  .property instance uint64 ParentExceptionRecordAddress()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation::get_ParentExceptionRecordAddress()
  } // end of property DkmWin32ExceptionInformation::ParentExceptionRecordAddress
} // end of class Microsoft.VisualStudio.Debugger.Native.DkmWin32ExceptionInformation

.class public auto ansi Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 66 32 37 31 38 34 34 32 2D 62 32 35 36   // ..$f2718442-b256
                                                                                                  2D 31 33 32 31 2D 61 35 38 30 2D 65 61 32 38 66   // -1321-a580-ea28f
                                                                                                  62 38 66 31 65 63 39 00 00 )                      // b8f1ec9..
  .method public hidebysig specialname instance uint64 
          get_DocumentId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmJsAsyncStackFrame::get_DocumentId

  .method public hidebysig specialname instance uint32 
          get_SourceLocationStartIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmJsAsyncStackFrame::get_SourceLocationStartIndex

  .method public hidebysig specialname instance uint32 
          get_SourceLocationLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmJsAsyncStackFrame::get_SourceLocationLength

  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmJsAsyncStackFrame::get_Name

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame 
          Create(uint64 DocumentId,
                 uint32 SourceLocationStartIndex,
                 uint32 SourceLocationLength,
                 string Name) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmJsAsyncStackFrame::Create

  .property instance uint64 DocumentId()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_DocumentId()
  } // end of property DkmJsAsyncStackFrame::DocumentId
  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_Name()
  } // end of property DkmJsAsyncStackFrame::Name
  .property instance uint32 SourceLocationLength()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_SourceLocationLength()
  } // end of property DkmJsAsyncStackFrame::SourceLocationLength
  .property instance uint32 SourceLocationStartIndex()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame::get_SourceLocationStartIndex()
  } // end of property DkmJsAsyncStackFrame::SourceLocationStartIndex
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmJsAsyncStackFrame

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment
       extends [mscorlib]System.ValueType
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 66 64 66 34 30 32 35 2D 38 36 34 65   // ..$9fdf4025-864e
                                                                                                  2D 35 38 65 33 2D 38 34 63 39 2D 35 66 30 65 35   // -58e3-84c9-5f0e5
                                                                                                  61 38 32 65 34 39 66 00 00 )                      // a82e49f..
  .field public initonly uint64 AddressMin
  .field public initonly uint64 AddressMax
  .field public initonly uint64 AddressOriginalMin
  .field public initonly uint64 AddressOriginalMax
  .field public initonly int32 ThreadId
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint64 AddressMin,
                               uint64 AddressMax,
                               uint64 AddressOriginalMin,
                               uint64 AddressOriginalMax,
                               int32 ThreadId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskStackSegment::.ctor

} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskStackSegment

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Cancelled = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Error = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Success = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus Unknown = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskReturnStatus

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags ReturnStatus = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags Timestamps = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderCapabilityFlags

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_TPL() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProviderId::get_TPL

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ConcurrencyRuntime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProviderId::get_ConcurrencyRuntime

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_JavaScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProviderId::get_JavaScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ManagedEtw() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProviderId::get_ManagedEtw

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_NativeEtw() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTaskProviderId::get_NativeEtw

  .property valuetype [mscorlib]System.Guid
          ConcurrencyRuntime()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_ConcurrencyRuntime()
  } // end of property DkmTaskProviderId::ConcurrencyRuntime
  .property valuetype [mscorlib]System.Guid
          JavaScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_JavaScript()
  } // end of property DkmTaskProviderId::JavaScript
  .property valuetype [mscorlib]System.Guid
          ManagedEtw()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_ManagedEtw()
  } // end of property DkmTaskProviderId::ManagedEtw
  .property valuetype [mscorlib]System.Guid
          NativeEtw()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_NativeEtw()
  } // end of property DkmTaskProviderId::NativeEtw
  .property valuetype [mscorlib]System.Guid
          TPL()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId::get_TPL()
  } // end of property DkmTaskProviderId::TPL
} // end of class Microsoft.VisualStudio.Debugger.ParallelTasks.DkmTaskProviderId

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnScriptCriticalErrorAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmOnScriptCriticalErrorAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult::get_ErrorCode()
  } // end of property DkmOnScriptCriticalErrorAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmOnScriptCriticalErrorAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags AggregateDocument = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentFlags

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Html = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Script = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType Unknown = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentContentType

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind EvalCode = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind FunctionCode = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind ScriptBlock = int32(0x00000003)
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptEmbeddedDocumentKind

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 35 34 61 33 62 33 31 2D 64 62 62 31   // ..$554a3b31-dbb1
                                                                                                  2D 31 62 38 32 2D 62 30 61 34 2D 38 38 35 34 35   // -1b82-b0a4-88545
                                                                                                  31 39 36 39 31 63 37 00 00 )                      // 19691c7..
  .method public hidebysig specialname instance string 
          get_Path() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptSourceProjectItem::get_Path

  .method public hidebysig specialname instance bool 
          get_IsGenerated() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptSourceProjectItem::get_IsGenerated

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem 
          Create(string Path,
                 bool IsGenerated) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptSourceProjectItem::Create

  .property instance bool IsGenerated()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem::get_IsGenerated()
  } // end of property DkmScriptSourceProjectItem::IsGenerated
  .property instance string Path()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem::get_Path()
  } // end of property DkmScriptSourceProjectItem::Path
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptSourceProjectItem

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState LibraryCode = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState MyCode = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState UnrelatedCode = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState Unsure = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocumentJmcState

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetRaiseSymbolEventsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSetRaiseSymbolEventsAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult::get_ErrorCode()
  } // end of property DkmSetRaiseSymbolEventsAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmSetRaiseSymbolEventsAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress
       extends Microsoft.VisualStudio.Debugger.DkmInstructionAddress
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 62 34 38 31 34 62 61 2D 38 32 37 65   // ..$6b4814ba-827e
                                                                                                  2D 31 39 63 66 2D 64 31 37 38 2D 65 63 61 62 31   // -19cf-d178-ecab1
                                                                                                  37 31 66 32 64 33 30 00 00 )                      // 71f2d30..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance 
          get_RuntimeInstance() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_RuntimeInstance

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument 
          get_Document() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_Document

  .method public hidebysig specialname instance int32 
          get_Revision() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_Revision

  .method public hidebysig specialname instance int32 
          get_StartIndex() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_StartIndex

  .method public hidebysig specialname instance int32 
          get_StatementLength() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_StatementLength

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_AdditionalData() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::get_AdditionalData

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress 
          Create(class Microsoft.VisualStudio.Debugger.DkmModuleInstance ModuleInstance,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance RuntimeInstance,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Document,
                 int32 Revision,
                 int32 StartIndex,
                 int32 StatementLength,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> AdditionalData,
                 class Microsoft.VisualStudio.Debugger.DkmInstructionAddress/CPUInstruction CPUInstruction) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmScriptInstructionAddress::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          AdditionalData()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_AdditionalData()
  } // end of property DkmScriptInstructionAddress::AdditionalData
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument
          Document()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_Document()
  } // end of property DkmScriptInstructionAddress::Document
  .property instance int32 Revision()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_Revision()
  } // end of property DkmScriptInstructionAddress::Revision
  .property instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance
          RuntimeInstance()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Script.DkmScriptRuntimeInstance Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_RuntimeInstance()
  } // end of property DkmScriptInstructionAddress::RuntimeInstance
  .property instance int32 StartIndex()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_StartIndex()
  } // end of property DkmScriptInstructionAddress::StartIndex
  .property instance int32 StatementLength()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress::get_StatementLength()
  } // end of property DkmScriptInstructionAddress::StatementLength
} // end of class Microsoft.VisualStudio.Debugger.Script.DkmScriptInstructionAddress

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 38 34 37 33 30 31 64 35 2D 32 36 39 63   // ..$847301d5-269c
                                                                                                  2D 37 34 36 31 2D 63 31 38 64 2D 39 30 64 66 39   // -7461-c18d-90df9
                                                                                                  31 37 35 66 65 30 38 00 00 )                      // 175fe08..
  .method public hidebysig specialname instance int32 
          get_ProcessId() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_ProcessId

  .method public hidebysig specialname instance int64 
          get_StartTime() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_StartTime

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_LogicalParentProcess() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_LogicalParentProcess

  .method public hidebysig specialname instance string 
          get_Path() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_Path

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> 
          get_EngineFilter() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_EngineFilter

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::get_Flags

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest 
          Create(int32 ProcessId,
                 int64 StartTime,
                 class Microsoft.VisualStudio.Debugger.DkmProcess LogicalParentProcess,
                 string Path,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> EngineFilter,
                 valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags Flags) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::Create

  .method public hidebysig instance void 
          Send(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequest::Send

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid>
          EngineFilter()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<valuetype [mscorlib]System.Guid> Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_EngineFilter()
  } // end of property DkmDebugProcessRequest::EngineFilter
  .property instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags
          Flags()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_Flags()
  } // end of property DkmDebugProcessRequest::Flags
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          LogicalParentProcess()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_LogicalParentProcess()
  } // end of property DkmDebugProcessRequest::LogicalParentProcess
  .property instance string Path()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_Path()
  } // end of property DkmDebugProcessRequest::Path
  .property instance int32 ProcessId()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_ProcessId()
  } // end of property DkmDebugProcessRequest::ProcessId
  .property instance int64 StartTime()
  {
    .get instance int64 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest::get_StartTime()
  } // end of property DkmDebugProcessRequest::StartTime
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequest

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags DetachOnStop = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestFlags

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequestAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDebugProcessRequestAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult::get_ErrorCode()
  } // end of property DkmDebugProcessRequestAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmDebugProcessRequestAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 35 65 34 66 33 35 31 37 2D 34 31 36 39   // ..$5e4f3517-4169
                                                                                                  2D 63 31 62 66 2D 36 66 31 33 2D 30 62 38 34 31   // -c1bf-6f13-0b841
                                                                                                  30 35 66 38 63 35 38 00 00 )                      // 05f8c58..
  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLoadCompleteEventDeferral::get_Process

  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_Id() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLoadCompleteEventDeferral::get_Id

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral 
          Create(class Microsoft.VisualStudio.Debugger.DkmProcess Process,
                 valuetype [mscorlib]System.Guid Id) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLoadCompleteEventDeferral::Create

  .method public hidebysig instance void 
          Add() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLoadCompleteEventDeferral::Add

  .method public hidebysig instance void 
          Remove() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmLoadCompleteEventDeferral::Remove

  .property instance valuetype [mscorlib]System.Guid
          Id()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral::get_Id()
  } // end of property DkmLoadCompleteEventDeferral::Id
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral::get_Process()
  } // end of property DkmLoadCompleteEventDeferral::Process
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmLoadCompleteEventDeferral

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags None = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags VsdebugengEngineUsed = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList::get_Count

  .method public hidebysig instance string 
          GetAdditionalEnvironmentVariables(int32 ImplementationIndex,
                                            class Microsoft.VisualStudio.Debugger.Start.DkmDebugLaunchSettings DebugLaunchSettings,
                                            valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterScenario Scenario) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList::GetAdditionalEnvironmentVariables

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList::Create

  .property instance int32 Count()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList::get_Count()
  } // end of property DkmProcessLaunchEnvironmentFilterList::Count
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname instance int32 
          get_Count() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList140::get_Count

  .method public hidebysig instance string 
          GetAdditionalEnvironmentVariables(int32 ImplementationIndex,
                                            class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterInputData InputData) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList140::GetAdditionalEnvironmentVariables

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140 
          Create() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessLaunchEnvironmentFilterList140::Create

  .property instance int32 Count()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140::get_Count()
  } // end of property DkmProcessLaunchEnvironmentFilterList140::Count
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchEnvironmentFilterList140

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags
       extends [mscorlib]System.Enum
{
  .custom instance void [mscorlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags EnableENC = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags MergeEnvironment = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags NoDebug = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessLaunchModeFlags

.class public auto ansi Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 65 35 38 38 31 64 62 2D 66 34 62 65   // ..$9e5881db-f4be
                                                                                                  2D 62 31 65 62 2D 32 62 61 35 2D 65 64 31 38 66   // -b1eb-2ba5-ed18f
                                                                                                  37 33 61 37 39 37 39 00 00 )                      // 73a7979..
  .method public hidebysig specialname instance string 
          get_Desktop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_Desktop

  .method public hidebysig specialname instance string 
          get_Title() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_Title

  .method public hidebysig specialname instance int32 
          get_X() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_X

  .method public hidebysig specialname instance int32 
          get_Y() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_Y

  .method public hidebysig specialname instance int32 
          get_XSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_XSize

  .method public hidebysig specialname instance int32 
          get_YSize() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_YSize

  .method public hidebysig specialname instance int32 
          get_XCountChars() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_XCountChars

  .method public hidebysig specialname instance int32 
          get_YCountChars() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_YCountChars

  .method public hidebysig specialname instance int32 
          get_FillAttribute() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_FillAttribute

  .method public hidebysig specialname instance int32 
          get_Flags() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_Flags

  .method public hidebysig specialname instance uint16 
          get_ShowWindow() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_ShowWindow

  .method public hidebysig specialname instance uint64 
          get_StdInputHandle() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_StdInputHandle

  .method public hidebysig specialname instance uint64 
          get_StdOutputHandle() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_StdOutputHandle

  .method public hidebysig specialname instance uint64 
          get_StdErrorHandle() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::get_StdErrorHandle

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo 
          Create(string Desktop,
                 string Title,
                 int32 X,
                 int32 Y,
                 int32 XSize,
                 int32 YSize,
                 int32 XCountChars,
                 int32 YCountChars,
                 int32 FillAttribute,
                 int32 Flags,
                 uint16 ShowWindow,
                 uint64 StdInputHandle,
                 uint64 StdOutputHandle,
                 uint64 StdErrorHandle) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmProcessStartupInfo::Create

  .property instance string Desktop()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Desktop()
  } // end of property DkmProcessStartupInfo::Desktop
  .property instance int32 FillAttribute()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_FillAttribute()
  } // end of property DkmProcessStartupInfo::FillAttribute
  .property instance int32 Flags()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Flags()
  } // end of property DkmProcessStartupInfo::Flags
  .property instance uint16 ShowWindow()
  {
    .get instance uint16 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_ShowWindow()
  } // end of property DkmProcessStartupInfo::ShowWindow
  .property instance uint64 StdErrorHandle()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdErrorHandle()
  } // end of property DkmProcessStartupInfo::StdErrorHandle
  .property instance uint64 StdInputHandle()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdInputHandle()
  } // end of property DkmProcessStartupInfo::StdInputHandle
  .property instance uint64 StdOutputHandle()
  {
    .get instance uint64 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_StdOutputHandle()
  } // end of property DkmProcessStartupInfo::StdOutputHandle
  .property instance string Title()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Title()
  } // end of property DkmProcessStartupInfo::Title
  .property instance int32 X()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_X()
  } // end of property DkmProcessStartupInfo::X
  .property instance int32 XCountChars()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_XCountChars()
  } // end of property DkmProcessStartupInfo::XCountChars
  .property instance int32 XSize()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_XSize()
  } // end of property DkmProcessStartupInfo::XSize
  .property instance int32 Y()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_Y()
  } // end of property DkmProcessStartupInfo::Y
  .property instance int32 YCountChars()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_YCountChars()
  } // end of property DkmProcessStartupInfo::YCountChars
  .property instance int32 YSize()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo::get_YSize()
  } // end of property DkmProcessStartupInfo::YSize
} // end of class Microsoft.VisualStudio.Debugger.Start.DkmProcessStartupInfo

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Into = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Out = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind Over = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind StepIntoSpecific = int32(0x00000003)
} // end of class Microsoft.VisualStudio.Debugger.Stepping.DkmStepKind

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 63 32 35 32 32 38 61 37 2D 64 65 34 33   // ..$c25228a7-de43
                                                                                                  2D 32 61 62 63 2D 31 64 61 38 2D 35 63 62 37 34   // -2abc-1da8-5cb74
                                                                                                  34 65 30 65 37 35 65 00 00 )                      // 4e0e75e..
  .method public hidebysig specialname instance int32 
          get_Type() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomSymbolFileId::get_Type

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomSymbolFileId::get_Data

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId 
          Create(valuetype [mscorlib]System.Guid SymbolProviderId,
                 int32 Type,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmCustomSymbolFileId::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8>
          Data()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<uint8> Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId::get_Data()
  } // end of property DkmCustomSymbolFileId::Data
  .property instance int32 Type()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId::get_Type()
  } // end of property DkmCustomSymbolFileId::Type
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmCustomSymbolFileId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength Checksum = int32(0x00000003)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength ExactURL = int32(0x00000004)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength FileName = int32(0x00000000)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength FullPath = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength SubPath = int32(0x00000001)
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmDynamicSymbolFileId
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 32 65 38 39 30 64 65 2D 34 30 66 39   // ..$22e890de-40f9
                                                                                                  2D 32 34 31 35 2D 65 64 66 30 2D 64 33 62 35 30   // -2415-edf0-d3b50
                                                                                                  31 34 61 63 64 32 32 00 00 )                      // 14acd22..
  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmDynamicSymbolFileId 
          Create(valuetype [mscorlib]System.Guid SymbolProviderId) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmDynamicSymbolFileId::Create

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmDynamicSymbolFileId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindDocumentsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindDocumentsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] 
          get_Documents() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindDocumentsAsyncResult::get_Documents

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] Documents) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindDocumentsAsyncResult::.ctor

  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[]
          Documents()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult::get_Documents()
  } // end of property DkmFindDocumentsAsyncResult::Documents
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult::get_ErrorCode()
  } // end of property DkmFindDocumentsAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmFindDocumentsAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindSymbolsAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindSymbolsAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] 
          get_InstructionSymbols() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindSymbolsAsyncResult::get_InstructionSymbols

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] 
          get_SymbolLocation() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindSymbolsAsyncResult::get_SymbolLocation

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] InstructionSymbols,
                               class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] SymbolLocation) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmFindSymbolsAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_ErrorCode()
  } // end of property DkmFindSymbolsAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[]
          InstructionSymbols()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmInstructionSymbol[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_InstructionSymbols()
  } // end of property DkmFindSymbolsAsyncResult::InstructionSymbols
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[]
          SymbolLocation()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition[] Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult::get_SymbolLocation()
  } // end of property DkmFindSymbolsAsyncResult::SymbolLocation
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmFindSymbolsAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFunctionInfoAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFunctionInfoAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] 
          get_Results() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFunctionInfoAsyncResult::get_Results

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] Results) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetFunctionInfoAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult::get_ErrorCode()
  } // end of property DkmGetFunctionInfoAsyncResult::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[]
          Results()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmRVASizePair[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult::get_Results()
  } // end of property DkmGetFunctionInfoAsyncResult::Results
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetFunctionInfoAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          get_Scopes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataAsyncResult::get_Scopes

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult::get_ErrorCode()
  } // end of property DkmGetMethodSymbolStoreDataAsyncResult::ErrorCode
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[]
          Scopes()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult::get_Scopes()
  } // end of property DkmGetMethodSymbolStoreDataAsyncResult::Scopes
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataPreRemapAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance int32 
          get_RemapToken() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_RemapToken

  .method public hidebysig specialname instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] 
          get_Scopes() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_Scopes

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 RemapToken,
                               valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Scopes) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetMethodSymbolStoreDataPreRemapAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_ErrorCode()
  } // end of property DkmGetMethodSymbolStoreDataPreRemapAsyncResult::ErrorCode
  .property instance int32 RemapToken()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_RemapToken()
  } // end of property DkmGetMethodSymbolStoreDataPreRemapAsyncResult::RemapToken
  .property instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[]
          Scopes()
  {
    .get instance valuetype Microsoft.VisualStudio.Debugger.Clr.DkmClrMethodScopeData[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult::get_Scopes()
  } // end of property DkmGetMethodSymbolStoreDataPreRemapAsyncResult::Scopes
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetMethodSymbolStoreDataPreRemapAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance bool 
          get_StartOfLine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionAsyncResult::get_StartOfLine

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_SourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionAsyncResult::get_SourcePosition

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(bool StartOfLine,
                               class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_ErrorCode()
  } // end of property DkmGetSourcePositionAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          SourcePosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_SourcePosition()
  } // end of property DkmGetSourcePositionAsyncResult::SourcePosition
  .property instance bool StartOfLine()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult::get_StartOfLine()
  } // end of property DkmGetSourcePositionAsyncResult::StartOfLine
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionCallbackAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionCallbackAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance bool 
          get_StartOfLine() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionCallbackAsyncResult::get_StartOfLine

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_SourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionCallbackAsyncResult::get_SourcePosition

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(bool StartOfLine,
                               class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetSourcePositionCallbackAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_ErrorCode()
  } // end of property DkmGetSourcePositionCallbackAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          SourcePosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_SourcePosition()
  } // end of property DkmGetSourcePositionCallbackAsyncResult::SourcePosition
  .property instance bool StartOfLine()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult::get_StartOfLine()
  } // end of property DkmGetSourcePositionCallbackAsyncResult::StartOfLine
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetSourcePositionCallbackAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTokenSymbolStoreAttributeAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTokenSymbolStoreAttributeAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance uint8[] 
          get_Data() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTokenSymbolStoreAttributeAsyncResult::get_Data

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(uint8[] Data) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetTokenSymbolStoreAttributeAsyncResult::.ctor

  .property instance uint8[] Data()
  {
    .get instance uint8[] Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult::get_Data()
  } // end of property DkmGetTokenSymbolStoreAttributeAsyncResult::Data
  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult::get_ErrorCode()
  } // end of property DkmGetTokenSymbolStoreAttributeAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetTokenSymbolStoreAttributeAsyncResult

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetUserCodeSourcePositionCallbackAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetUserCodeSourcePositionCallbackAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition 
          get_SourcePosition() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetUserCodeSourcePositionCallbackAsyncResult::get_SourcePosition

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition SourcePosition) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmGetUserCodeSourcePositionCallbackAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult::get_ErrorCode()
  } // end of property DkmGetUserCodeSourcePositionCallbackAsyncResult::ErrorCode
  .property instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition
          SourcePosition()
  {
    .get instance class Microsoft.VisualStudio.Debugger.Symbols.DkmSourcePosition Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult::get_SourcePosition()
  } // end of property DkmGetUserCodeSourcePositionCallbackAsyncResult::SourcePosition
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmGetUserCodeSourcePositionCallbackAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHasLineInfoAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHasLineInfoAsyncResult::get_ErrorCode

  .method public hidebysig specialname instance bool 
          get_Result() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHasLineInfoAsyncResult::get_Result

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(bool Result) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmHasLineInfoAsyncResult::.ctor

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult::get_ErrorCode()
  } // end of property DkmHasLineInfoAsyncResult::ErrorCode
  .property instance bool Result()
  {
    .get instance bool Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult::get_Result()
  } // end of property DkmHasLineInfoAsyncResult::Result
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmHasLineInfoAsyncResult

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 37 65 38 61 65 39 36 2D 66 65 38 38   // ..$67e8ae96-fe88
                                                                                                  2D 65 35 32 38 2D 35 31 39 30 2D 34 35 38 62 64   // -e528-5190-458bd
                                                                                                  39 35 64 64 39 66 32 00 00 )                      // 95dd9f2..
  .field public initonly valuetype [mscorlib]System.Guid Mvid
  .field public initonly valuetype [mscorlib]System.Guid SymbolProvider
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                              valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                               valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype [mscorlib]System.Guid Mvid,
                               valuetype [mscorlib]System.Guid SymbolProvider) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmModuleId::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmModuleId

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolFileId
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 33 63 31 62 66 31 30 64 2D 61 32 35 63   // ..$3c1bf10d-a25c
                                                                                                  2D 39 63 39 66 2D 33 66 32 30 2D 32 37 61 64 38   // -9c9f-3f20-27ad8
                                                                                                  31 36 35 64 31 64 66 00 00 )                      // 165d1df..
  .method public hidebysig specialname instance valuetype [mscorlib]System.Guid 
          get_Mvid() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPdbFileId::get_Mvid

  .method public hidebysig specialname instance uint32 
          get_Age() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPdbFileId::get_Age

  .method public hidebysig specialname instance string 
          get_PdbName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPdbFileId::get_PdbName

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId 
          Create(valuetype [mscorlib]System.Guid SymbolProviderId,
                 valuetype [mscorlib]System.Guid Mvid,
                 uint32 Age,
                 string PdbName) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPdbFileId::Create

  .property instance uint32 Age()
  {
    .get instance uint32 Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_Age()
  } // end of property DkmPdbFileId::Age
  .property instance valuetype [mscorlib]System.Guid
          Mvid()
  {
    .get instance valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_Mvid()
  } // end of property DkmPdbFileId::Mvid
  .property instance string PdbName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId::get_PdbName()
  } // end of property DkmPdbFileId::PdbName
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmPdbFileId

.class public auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning
       extends [mscorlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning ChecksumMismatch = int32(0x00000001)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning MultipleChecksums = int32(0x00000002)
  .field public static literal valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning None = int32(0x00000000)
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning

.class public auto ansi Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument
       extends Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocument
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 61 32 33 39 30 35 31 37 2D 38 32 37 33   // ..$a2390517-8273
                                                                                                  2D 66 64 34 37 2D 31 32 64 63 2D 66 63 30 64 39   // -fd47-12dc-fc0d9
                                                                                                  34 35 66 61 31 61 31 00 00 )                      // 45fa1a1..
  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> 
          get_ScriptBlocks() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedMappedDocument::get_ScriptBlocks

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument 
          Create(class Microsoft.VisualStudio.Debugger.Symbols.DkmModule Module,
                 string DocumentName,
                 class Microsoft.VisualStudio.Debugger.Script.DkmScriptDocument ScriptDocument,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmDocumentMatchStrength MatchStrength,
                 valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedDocumentWarning Warning,
                 bool TextRequested,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> ScriptBlocks,
                 class Microsoft.VisualStudio.Debugger.DkmDataItem DataItem) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmResolvedMappedDocument::Create

  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo>
          ScriptBlocks()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Script.DkmScriptBlockMappingInfo> Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument::get_ScriptBlocks()
  } // end of property DkmResolvedMappedDocument::ScriptBlocks
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmResolvedMappedDocument

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue
       extends [mscorlib]System.ValueType
       implements class [mscorlib]System.IComparable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue>,
                  class [mscorlib]System.IEquatable`1<valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue>
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 64 62 37 61 31 66 33 38 2D 63 62 36 33   // ..$db7a1f38-cb63
                                                                                                  2D 64 34 63 38 2D 37 30 61 61 2D 62 35 32 61 66   // -d4c8-70aa-b52af
                                                                                                  37 65 30 62 39 65 64 00 00 )                      // 7e0b9ed..
  .field public initonly int32 Value0
  .field public initonly int32 Value1
  .field public initonly int32 Value2
  .field public initonly int32 Value3
  .field public initonly int32 Value4
  .method public hidebysig newslot virtual final 
          instance int32  CompareTo(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::CompareTo

  .method public hidebysig newslot virtual final 
          instance bool  Equals(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue other) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::Equals

  .method public hidebysig specialname static 
          bool  op_Inequality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                              valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_Inequality

  .method public hidebysig specialname static 
          bool  op_Equality(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_Equality

  .method public hidebysig specialname static 
          bool  op_GreaterThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                               valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_GreaterThan

  .method public hidebysig specialname static 
          bool  op_LessThan(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                            valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_LessThan

  .method public hidebysig specialname static 
          bool  op_GreaterThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                                      valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_GreaterThanOrEqual

  .method public hidebysig specialname static 
          bool  op_LessThanOrEqual(valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element0,
                                   valuetype Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue element1) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::op_LessThanOrEqual

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::GetHashCode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 Value0,
                               int32 Value1,
                               int32 Value2,
                               int32 Value3,
                               int32 Value4) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSHA1HashValue::.ctor

} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSHA1HashValue

.class public abstract auto ansi sealed Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId
       extends [mscorlib]System.Object
{
  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_NativePDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_NativePDB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrPDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_ClrPDB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrRemoteSymbolStore() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_ClrRemoteSymbolStore

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScript() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_ActiveScript

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_HlslPDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_HlslPDB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DpcppPDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_DpcppPDB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ActiveScriptInterop() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_ActiveScriptInterop

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_ClrNcPDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_ClrNcPDB

  .method public hidebysig specialname static 
          valuetype [mscorlib]System.Guid 
          get_DpcppInteropPDB() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmSymbolProviderId::get_DpcppInteropPDB

  .property valuetype [mscorlib]System.Guid
          ActiveScript()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ActiveScript()
  } // end of property DkmSymbolProviderId::ActiveScript
  .property valuetype [mscorlib]System.Guid
          ActiveScriptInterop()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ActiveScriptInterop()
  } // end of property DkmSymbolProviderId::ActiveScriptInterop
  .property valuetype [mscorlib]System.Guid
          ClrNcPDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrNcPDB()
  } // end of property DkmSymbolProviderId::ClrNcPDB
  .property valuetype [mscorlib]System.Guid
          ClrPDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrPDB()
  } // end of property DkmSymbolProviderId::ClrPDB
  .property valuetype [mscorlib]System.Guid
          ClrRemoteSymbolStore()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_ClrRemoteSymbolStore()
  } // end of property DkmSymbolProviderId::ClrRemoteSymbolStore
  .property valuetype [mscorlib]System.Guid
          DpcppInteropPDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_DpcppInteropPDB()
  } // end of property DkmSymbolProviderId::DpcppInteropPDB
  .property valuetype [mscorlib]System.Guid
          DpcppPDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_DpcppPDB()
  } // end of property DkmSymbolProviderId::DpcppPDB
  .property valuetype [mscorlib]System.Guid
          HlslPDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_HlslPDB()
  } // end of property DkmSymbolProviderId::HlslPDB
  .property valuetype [mscorlib]System.Guid
          NativePDB()
  {
    .get valuetype [mscorlib]System.Guid Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId::get_NativePDB()
  } // end of property DkmSymbolProviderId::NativePDB
} // end of class Microsoft.VisualStudio.Debugger.Symbols.DkmSymbolProviderId

.class public auto ansi Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 35 63 33 37 38 38 30 2D 30 65 65 39   // ..$45c37880-0ee9
                                                                                                  2D 36 38 39 63 2D 66 62 32 36 2D 62 33 64 66 62   // -689c-fb26-b3dfb
                                                                                                  66 35 63 66 66 33 64 00 00 )                      // f5cff3d..
  .method public hidebysig specialname instance string 
          get_Name() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNameValuePair::get_Name

  .method public hidebysig specialname instance object 
          get_Value() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNameValuePair::get_Value

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair 
          Create(string Name,
                 object Value) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmNameValuePair::Create

  .property instance string Name()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair::get_Name()
  } // end of property DkmNameValuePair::Name
  .property instance object Value()
  {
    .get instance object Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair::get_Value()
  } // end of property DkmNameValuePair::Value
} // end of class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair

.class public sequential ansi sealed Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult
       extends [mscorlib]System.ValueType
{
  .method public hidebysig static valuetype Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult 
          CreateErrorResult(class [mscorlib]System.Exception exception) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPostAsyncResult::CreateErrorResult

  .method public hidebysig specialname instance int32 
          get_ErrorCode() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmPostAsyncResult::get_ErrorCode

  .property instance int32 ErrorCode()
  {
    .get instance int32 Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult::get_ErrorCode()
  } // end of property DkmPostAsyncResult::ErrorCode
} // end of class Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult

.class public auto ansi Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent
       extends [mscorlib]System.Object
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 32 32 33 37 62 37 34 2D 64 32 37 63   // ..$02237b74-d27c
                                                                                                  2D 64 62 39 34 2D 64 66 62 64 2D 31 38 62 66 61   // -db94-dfbd-18bfa
                                                                                                  38 33 38 64 37 66 35 00 00 )                      // 838d7f5..
  .method public hidebysig specialname instance string 
          get_EventName() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::get_EventName

  .method public hidebysig specialname instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> 
          get_Properties() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::get_Properties

  .method public hidebysig specialname instance class Microsoft.VisualStudio.Debugger.DkmProcess 
          get_Process() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::get_Process

  .method public hidebysig static class Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent 
          Create(string EventName,
                 class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> Properties,
                 class Microsoft.VisualStudio.Debugger.DkmProcess Process) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::Create

  .method public hidebysig instance void 
          Post() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::Post

  .method public hidebysig instance void 
          Post(class Microsoft.VisualStudio.Debugger.DkmWorkList WorkList,
               class Microsoft.VisualStudio.Debugger.DkmCompletionRoutine`1<valuetype Microsoft.VisualStudio.Debugger.Telemetry.DkmPostAsyncResult> CompletionRoutine) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method DkmTelemetryEvent::Post

  .property instance string EventName()
  {
    .get instance string Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_EventName()
  } // end of property DkmTelemetryEvent::EventName
  .property instance class Microsoft.VisualStudio.Debugger.DkmProcess
          Process()
  {
    .get instance class Microsoft.VisualStudio.Debugger.DkmProcess Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_Process()
  } // end of property DkmTelemetryEvent::Process
  .property instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair>
          Properties()
  {
    .get instance class [mscorlib]System.Collections.ObjectModel.ReadOnlyCollection`1<class Microsoft.VisualStudio.Debugger.Telemetry.DkmNameValuePair> Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent::get_Properties()
  } // end of property DkmTelemetryEvent::Properties
} // end of class Microsoft.VisualStudio.Debugger.Telemetry.DkmTelemetryEvent

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedConstant
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 38 42 32 35 45 44 38 2D 35 42 41 44   // ..$48B25ED8-5BAD
                                                                                                  2D 34 31 62 63 2D 39 43 45 45 2D 43 44 36 32 46   // -41bc-9CEE-CD62F
                                                                                                  41 42 43 37 34 45 39 00 00 )                      // ABC74E9..
  .method public hidebysig newslot abstract virtual 
          instance int32  GetName(int32 cchName,
                                  [out] int32& pcchName,
                                  [in][out] char[]  marshal([ + 0]) name) cil managed preservesig
  {
  } // end of method ISymUnmanagedConstant::GetName

  .method public hidebysig newslot abstract virtual 
          instance int32  GetValue([out] object& pValue) cil managed preservesig
  {
  } // end of method ISymUnmanagedConstant::GetValue

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSignature(int32 cSig,
                                       [out] int32& pcSig,
                                       [in][out] uint8[]  marshal([ + 0]) sig) cil managed preservesig
  {
  } // end of method ISymUnmanagedConstant::GetSignature

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedConstant

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDispose
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 36 39 37 30 38 44 32 2D 30 35 45 35   // ..$969708D2-05E5
                                                                                                  2D 34 38 36 31 2D 41 33 42 30 2D 39 36 45 34 37   // -4861-A3B0-96E47
                                                                                                  33 43 44 46 36 33 46 00 00 )                      // 3CDF63F..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  Destroy() cil managed preservesig
  {
  } // end of method ISymUnmanagedDispose::Destroy

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDispose

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 34 30 44 45 34 30 33 37 2D 37 43 38 31   // ..$40DE4037-7C81
                                                                                                  2D 33 45 31 45 2D 42 30 32 32 2D 41 45 31 41 42   // -3E1E-B022-AE1AB
                                                                                                  46 46 32 43 41 30 38 00 00 )                      // FF2CA08..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetURL(int32 cchUrl,
                                 [out] int32& pcchUrl,
                                 [in][out] char[]  marshal([ + 0]) szUrl) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetURL

  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocumentType(valuetype [mscorlib]System.Guid& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetDocumentType

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLanguage(valuetype [mscorlib]System.Guid& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetLanguage

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLanguageVendor(valuetype [mscorlib]System.Guid& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetLanguageVendor

  .method public hidebysig newslot abstract virtual 
          instance int32  GetCheckSumAlgorithmId(valuetype [mscorlib]System.Guid& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetCheckSumAlgorithmId

  .method public hidebysig newslot abstract virtual 
          instance int32  GetCheckSum(int32 cData,
                                      [out] int32& pcData,
                                      [in][out] uint8[]  marshal([ + 0]) data) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetCheckSum

  .method public hidebysig newslot abstract virtual 
          instance int32  FindClosestLine(int32 line,
                                          [out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::FindClosestLine

  .method public hidebysig newslot abstract virtual 
          instance int32  HasEmbeddedSource([out] bool& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::HasEmbeddedSource

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSourceLength([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetSourceLength

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSourceRange(int32 startLine,
                                         int32 startColumn,
                                         int32 endLine,
                                         int32 endColumn,
                                         int32 cSourceBytes,
                                         [out] int32& pcSourceBytes,
                                         [in][out] uint8[]  marshal([ + 4]) source) cil managed preservesig
  {
  } // end of method ISymUnmanagedDocument::GetSourceRange

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 42 36 32 42 39 32 33 43 2D 42 35 30 30   // ..$B62B923C-B500
                                                                                                  2D 33 31 35 38 2D 41 35 34 33 2D 32 34 46 33 30   // -3158-A543-24F30
                                                                                                  37 41 38 42 37 45 31 00 00 )                      // 7A8B7E1..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetToken([out] valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken& pToken) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetToken

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSequencePointCount([out] int32& retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetSequencePointCount

  .method public hidebysig newslot abstract virtual 
          instance int32  GetRootScope([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetRootScope

  .method public hidebysig newslot abstract virtual 
          instance int32  GetScopeFromOffset(int32 offset,
                                             [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetScopeFromOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetOffset(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                    int32 line,
                                    int32 column,
                                    [out] int32& retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetRanges(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                    int32 line,
                                    int32 column,
                                    int32 cRanges,
                                    [out] int32& pcRanges,
                                    [in][out] int32[]  marshal([ + 3]) ranges) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetRanges

  .method public hidebysig newslot abstract virtual 
          instance int32  GetParameters(int32 cParams,
                                        [out] int32& pcParams,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) parms) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetParameters

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespace([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetNamespace

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSourceStartEnd(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument[] docs,
                                            [in][out] int32[]  marshal([]) lines,
                                            [in][out] int32[]  marshal([]) columns,
                                            [out] bool& retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetSourceStartEnd

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSequencePoints(int32 cPoints,
                                            [out] int32& pcPoints,
                                            [in][out] int32[]  marshal([ + 0]) offsets,
                                            [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument[]  marshal([ + 0]) documents,
                                            [in][out] int32[]  marshal([ + 0]) lines,
                                            [in][out] int32[]  marshal([ + 0]) columns,
                                            [in][out] int32[]  marshal([ + 0]) endLines,
                                            [in][out] int32[]  marshal([ + 0]) endColumns) cil managed preservesig
  {
  } // end of method ISymUnmanagedMethod::GetSequencePoints

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 36 38 30 30 35 44 30 46 2D 42 38 45 30   // ..$68005D0F-B8E0
                                                                                                  2D 33 42 30 31 2D 38 34 44 35 2D 41 31 31 41 39   // -3B01-84D5-A11A9
                                                                                                  34 31 35 34 39 34 32 00 00 )                      // 4154942..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethod([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetMethod

  .method public hidebysig newslot abstract virtual 
          instance int32  GetParent([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope&  marshal( interface ) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetParent

  .method public hidebysig newslot abstract virtual 
          instance int32  GetChildren(int32 cChildren,
                                      [out] int32& pcChildren,
                                      [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope[]  marshal([ + 0]) children) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetChildren

  .method public hidebysig newslot abstract virtual 
          instance int32  GetStartOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetStartOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetEndOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetEndOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLocalCount([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetLocalCount

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLocals(int32 cLocals,
                                    [out] int32& pcLocals,
                                    [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) locals) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetLocals

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespaces(int32 cNameSpaces,
                                        [out] int32& pcNameSpaces,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace[]  marshal([ + 0]) namespaces) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope::GetNamespaces

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 39 46 36 30 45 45 42 45 2D 32 44 39 41   // ..$9F60EEBE-2D9A
                                                                                                  2D 33 46 37 43 2D 42 46 35 38 2D 38 30 42 43 39   // -3F7C-BF58-80BC9
                                                                                                  39 31 43 36 30 42 42 00 00 )                      // 91C60BB..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetName(int32 cchName,
                                  [out] int32& pcchName,
                                  [in][out] char[]  marshal([ + 0]) szName) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetName

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAttributes([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetAttributes

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSignature(int32 cSig,
                                       [out] int32& pcSig,
                                       [in][out] uint8[]  marshal([ + 0]) sig) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetSignature

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddressKind([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetAddressKind

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddressField1([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetAddressField1

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddressField2([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetAddressField2

  .method public hidebysig newslot abstract virtual 
          instance int32  GetAddressField3([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetAddressField3

  .method public hidebysig newslot abstract virtual 
          instance int32  GetStartOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetStartOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetEndOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedVariable::GetEndOffset

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 30 44 46 46 37 32 38 39 2D 35 34 46 38   // ..$0DFF7289-54F8
                                                                                                  2D 31 31 64 33 2D 42 44 32 38 2D 30 30 30 30 46   // -11d3-BD28-0000F
                                                                                                  38 30 38 34 39 42 44 00 00 )                      // 80849BD..
  .method public hidebysig newslot abstract virtual 
          instance int32  GetName(int32 cchName,
                                  [out] int32& pcchName,
                                  [in][out] char[]  marshal([ + 0]) szName) cil managed preservesig
  {
  } // end of method ISymUnmanagedNamespace::GetName

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespaces(int32 cNameSpaces,
                                        [out] int32& pcNameSpaces,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace[]  marshal([ + 0]) namespaces) cil managed preservesig
  {
  } // end of method ISymUnmanagedNamespace::GetNamespaces

  .method public hidebysig newslot abstract virtual 
          instance int32  GetVariables(int32 cVars,
                                       [out] int32& pcVars,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) pVars) cil managed preservesig
  {
  } // end of method ISymUnmanagedNamespace::GetVariables

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedReader
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 42 34 43 45 36 32 38 36 2D 32 41 36 42   // ..$B4CE6286-2A6B
                                                                                                  2D 33 37 31 32 2D 41 33 42 37 2D 31 45 45 31 44   // -3712-A3B7-1EE1D
                                                                                                  41 44 34 36 37 42 35 00 00 )                      // AD467B5..
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocument(string  marshal( lpwstr) url,
                                      valuetype [mscorlib]System.Guid language,
                                      valuetype [mscorlib]System.Guid languageVendor,
                                      valuetype [mscorlib]System.Guid documentType,
                                      [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetDocument

  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocuments(int32 cDocs,
                                       [out] int32& pcDocs,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument[]  marshal([ + 0]) pDocs) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetDocuments

  .method public hidebysig newslot abstract virtual 
          instance int32  GetUserEntryPoint([out] valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken& EntryPoint) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetUserEntryPoint

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethod(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken methodToken,
                                    [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetMethod

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodByVersion(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken methodToken,
                                             int32 version,
                                             [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetMethodByVersion

  .method public hidebysig newslot abstract virtual 
          instance int32  GetVariables(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken parent,
                                       int32 cVars,
                                       [out] int32& pcVars,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 1]) vars) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetVariables

  .method public hidebysig newslot abstract virtual 
          instance int32  GetGlobalVariables(int32 cVars,
                                             [out] int32& pcVars,
                                             [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) vars) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetGlobalVariables

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodFromDocumentPosition(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                                        int32 line,
                                                        int32 column,
                                                        [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetMethodFromDocumentPosition

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSymAttribute(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken parent,
                                          string  marshal( lpwstr) name,
                                          int32 sizeBuffer,
                                          [out] int32& lengthBuffer,
                                          [in][out] uint8[]  marshal([ + 2]) buffer) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetSymAttribute

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespaces(int32 cNameSpaces,
                                        [out] int32& pcNameSpaces,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace[]  marshal([ + 0]) namespaces) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetNamespaces

  .method public hidebysig newslot abstract virtual 
          instance int32  Initialize(object  marshal( interface ) importer,
                                     string  marshal( lpwstr) filename,
                                     string  marshal( lpwstr) searchPath,
                                     class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::Initialize

  .method public hidebysig newslot abstract virtual 
          instance int32  UpdateSymbolStore(string  marshal( lpwstr) filename,
                                            class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::UpdateSymbolStore

  .method public hidebysig newslot abstract virtual 
          instance int32  ReplaceSymbolStore(string  marshal( lpwstr) filename,
                                             class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::ReplaceSymbolStore

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSymbolStoreFileName(int32 cchName,
                                                 [out] int32& pcchName,
                                                 [in][out] char[]  marshal([ + 0]) szName) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetSymbolStoreFileName

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodsFromDocumentPosition(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                                         int32 line,
                                                         int32 column,
                                                         int32 cMethod,
                                                         [out] int32& pcMethod,
                                                         [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod[]  marshal([ + 3]) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetMethodsFromDocumentPosition

  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocumentVersion(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument pDoc,
                                             [out] int32& version,
                                             [out] bool& pbCurrent) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetDocumentVersion

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodVersion(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod pMethod,
                                           [out] int32& version) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader::GetMethodVersion

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedReader

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedReader2
       implements Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedReader
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 41 30 39 45 35 33 42 32 2D 32 41 35 37   // ..$A09E53B2-2A57
                                                                                                  2D 34 63 63 61 2D 38 46 36 33 2D 42 38 34 46 37   // -4cca-8F63-B84F7
                                                                                                  43 33 35 44 34 41 41 00 00 )                      // C35D4AA..
  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocument(string  marshal( lpwstr) url,
                                      valuetype [mscorlib]System.Guid language,
                                      valuetype [mscorlib]System.Guid languageVendor,
                                      valuetype [mscorlib]System.Guid documentType,
                                      [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetDocument

  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocuments(int32 cDocs,
                                       [out] int32& pcDocs,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument[]  marshal([ + 0]) pDocs) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetDocuments

  .method public hidebysig newslot abstract virtual 
          instance int32  GetUserEntryPoint([out] valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken& EntryPoint) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetUserEntryPoint

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethod(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken methodToken,
                                    [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethod

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodByVersion(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken methodToken,
                                             int32 version,
                                             [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodByVersion

  .method public hidebysig newslot abstract virtual 
          instance int32  GetVariables(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken parent,
                                       int32 cVars,
                                       [out] int32& pcVars,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 1]) vars) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetVariables

  .method public hidebysig newslot abstract virtual 
          instance int32  GetGlobalVariables(int32 cVars,
                                             [out] int32& pcVars,
                                             [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) vars) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetGlobalVariables

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodFromDocumentPosition(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                                        int32 line,
                                                        int32 column,
                                                        [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodFromDocumentPosition

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSymAttribute(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken parent,
                                          string  marshal( lpwstr) name,
                                          int32 sizeBuffer,
                                          [out] int32& lengthBuffer,
                                          [in][out] uint8[]  marshal([ + 2]) buffer) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetSymAttribute

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespaces(int32 cNameSpaces,
                                        [out] int32& pcNameSpaces,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace[]  marshal([ + 0]) namespaces) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetNamespaces

  .method public hidebysig newslot abstract virtual 
          instance int32  Initialize(object  marshal( interface ) importer,
                                     string  marshal( lpwstr) filename,
                                     string  marshal( lpwstr) searchPath,
                                     class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::Initialize

  .method public hidebysig newslot abstract virtual 
          instance int32  UpdateSymbolStore(string  marshal( lpwstr) filename,
                                            class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::UpdateSymbolStore

  .method public hidebysig newslot abstract virtual 
          instance int32  ReplaceSymbolStore(string  marshal( lpwstr) filename,
                                             class [mscorlib]System.Runtime.InteropServices.ComTypes.IStream 'stream') cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::ReplaceSymbolStore

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSymbolStoreFileName(int32 cchName,
                                                 [out] int32& pcchName,
                                                 [in][out] char[]  marshal([ + 0]) szName) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetSymbolStoreFileName

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodsFromDocumentPosition(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                                         int32 line,
                                                         int32 column,
                                                         int32 cMethod,
                                                         [out] int32& pcMethod,
                                                         [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod[]  marshal([ + 3]) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodsFromDocumentPosition

  .method public hidebysig newslot abstract virtual 
          instance int32  GetDocumentVersion(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument pDoc,
                                             [out] int32& version,
                                             [out] bool& pbCurrent) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetDocumentVersion

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodVersion(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod pMethod,
                                           [out] int32& version) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodVersion

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodByVersionPreRemap(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken methodToken,
                                                     int32 version,
                                                     [out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) retVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodByVersionPreRemap

  .method public hidebysig newslot abstract virtual 
          instance int32  GetSymAttributePreRemap(valuetype [mscorlib]System.Diagnostics.SymbolStore.SymbolToken parent,
                                                  string  marshal( lpwstr) name,
                                                  int32 sizeBuffer,
                                                  [out] int32& lengthBuffer,
                                                  [in][out] uint8[]  marshal([ + 2]) buffer) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetSymAttributePreRemap

  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethodsInDocument(class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedDocument document,
                                               uint32 cMethod,
                                               [out] uint32& pcMethod,
                                               [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod[]  marshal([ + 1]) methods) cil managed preservesig
  {
  } // end of method ISymUnmanagedReader2::GetMethodsInDocument

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedReader2

.class interface public abstract auto ansi import Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope2
       implements Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope
{
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 41 45 39 33 32 46 42 41 2D 33 46 44 38   // ..$AE932FBA-3FD8
                                                                                                  2D 34 64 62 61 2D 38 32 33 32 2D 33 30 41 32 33   // -4dba-8232-30A23
                                                                                                  30 39 42 30 32 44 42 00 00 )                      // 09B02DB..
  .custom instance void [mscorlib]System.Runtime.InteropServices.InterfaceTypeAttribute::.ctor(valuetype [mscorlib]System.Runtime.InteropServices.ComInterfaceType) = ( 01 00 01 00 00 00 00 00 ) 
  .method public hidebysig newslot abstract virtual 
          instance int32  GetMethod([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedMethod&  marshal( interface ) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetMethod

  .method public hidebysig newslot abstract virtual 
          instance int32  GetParent([out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope&  marshal( interface ) pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetParent

  .method public hidebysig newslot abstract virtual 
          instance int32  GetChildren(int32 cChildren,
                                      [out] int32& pcChildren,
                                      [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope[]  marshal([ + 0]) children) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetChildren

  .method public hidebysig newslot abstract virtual 
          instance int32  GetStartOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetStartOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetEndOffset([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetEndOffset

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLocalCount([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetLocalCount

  .method public hidebysig newslot abstract virtual 
          instance int32  GetLocals(int32 cLocals,
                                    [out] int32& pcLocals,
                                    [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedVariable[]  marshal([ + 0]) locals) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetLocals

  .method public hidebysig newslot abstract virtual 
          instance int32  GetNamespaces(int32 cNameSpaces,
                                        [out] int32& pcNameSpaces,
                                        [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedNamespace[]  marshal([ + 0]) namespaces) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetNamespaces

  .method public hidebysig newslot abstract virtual 
          instance int32  GetConstantCount([out] int32& pRetVal) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetConstantCount

  .method public hidebysig newslot abstract virtual 
          instance int32  GetConstants(int32 cConstants,
                                       [out] int32& pcConstants,
                                       [in][out] class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedConstant[]  marshal([ + 0]) constants) cil managed preservesig
  {
  } // end of method ISymUnmanagedScope2::GetConstants

} // end of class Microsoft.VisualStudio.SymReaderInterop.ISymUnmanagedScope2


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
