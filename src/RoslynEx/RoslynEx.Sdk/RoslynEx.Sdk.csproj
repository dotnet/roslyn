<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <DefineConstants>ROSLYNEX_INTERFACE</DefineConstants>
    <IsPackable>true</IsPackable>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <AssemblyName>RoslynEx.Interface</AssemblyName>
    <PackageId>RoslynEx.Sdk</PackageId>
    <PreReleaseVersionLabel>poc</PreReleaseVersionLabel>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <OfficialBuild>true</OfficialBuild>
    <OfficialBuildId>$([System.DateTime]::Now.ToString(yyyyMMdd)).1</OfficialBuildId>
  </PropertyGroup>

  <Import Project="..\RoslynEx.Shared\RoslynEx.Shared.projitems" Label="Shared" />

  <ItemGroup>
    <None Include="build\RoslynEx.Sdk.targets" Pack="true" PackagePath="build" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.7.0" />
  </ItemGroup>

  <!-- based on https://claires.site/2018/07/03/create-and-pack-reference-assemblies/ -->
  <Target Name="_GetReferenceAssemblies" DependsOnTargets="Build" Returns="@(ReferenceAssembliesOutput)">
    <ItemGroup>
      <ReferenceAssembliesOutput Include="@(IntermediateRefAssembly->'%(FullPath)')" TargetFramework="$(TargetFramework)" />
      <ReferenceAssembliesOutput Include="@(DocumentationProjectOutputGroupOutput->'%(FullPath)')" TargetFramework="$(TargetFramework)" />
    </ItemGroup>
  </Target>

  <Target Name="GetRefsForPackage" BeforeTargets="_GetPackageFiles" DependsOnTargets="_GetReferenceAssemblies">
    <ItemGroup>
      <None Include="@(ReferenceAssembliesOutput)" PackagePath="ref/$(TargetFramework)" Pack="true" />
    </ItemGroup>
  </Target>

</Project>
