<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.CodeAnalysis</RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TargetFramework>net472</TargetFramework>
    <DefineConstants>$(DefineConstants);WORKSPACE_DESKTOP</DefineConstants>

    <!-- NuGet -->
    <IsPackable>true</IsPackable>
    <PackageDescription>
      A shared package used by the .NET Compiler Platform ("Roslyn") including support for analyzing projects and solutions.
      Do not install this package manually, it will be added as a prerequisite by other packages that require it.
    </PackageDescription>

    <!-- 
      TODO: https://github.com/dotnet/roslyn/issues/29292
      We package Microsoft.CodeAnalysis.Workspaces and Microsoft.CodeAnalysis.Workspaces.Desktop in the same package,
      which is an unusal pattern that's not supported by NuGet Pack. We need to employ a trick to build the package this way.
      
      Workspaces project sets its PackageId used for Restore to Microsoft.CodeAnalysis.Workspaces.Common.
      Here we use NuspecPackageId instead, which the Arcade toolset uses to set the PackageId just for Pack build phase, but not the Restore phase
      (setting it for Restore phase would produce duplicate PackageId because we already used the same value in Workspaces project).
      This way all projects that depend on Workspaces will produce packages depending on Microsoft.CodeAnalysis.Workspaces.Common package
      (using the Restore PackageId), but they do not need to depend on Workspaces.Desktop project to do so.
      
      We also need to use hand-written NuSpec file in order to add netstandard1.3 dependency group without multi-targeting this project.
    -->
    <NuspecPackageId>Microsoft.CodeAnalysis.Workspaces.Common</NuspecPackageId>
    <NuspecFile>$(NuspecPackageId).nuspec</NuspecFile>
    <NuspecBasePath>$(ArtifactsConfigurationDir)</NuspecBasePath>
    
    <!-- SQLLite package imports content files. Do not include these in the package. -->
    <IncludeContentInPack>false</IncludeContentInPack>
  </PropertyGroup>
  <ItemGroup>
    <NuspecProperty Include="ThirdPartyNoticesFilePath=$(ThirdPartyNoticesFilePath)" />
    <NuspecProperty Include="SQLitePCLRawbundle_greenVersion=$(SQLitePCLRawbundle_greenVersion)" />
    <NuspecProperty Include="SystemCompositionVersion=$(SystemCompositionVersion)" />
    <NuspecProperty Include="SystemDiagnosticsContractsVersion=$(SystemDiagnosticsContractsVersion)" />
    <NuspecProperty Include="SystemLinqParallelVersion=$(SystemLinqParallelVersion)" />
    <NuspecProperty Include="SystemObjectModelVersion=$(SystemObjectModelVersion)" />
    <NuspecProperty Include="SystemTextRegularExpressionsVersion=$(SystemTextRegularExpressionsVersion)" />
    <NuspecProperty Include="SystemThreadingTasksParallelVersion=$(SystemThreadingTasksParallelVersion)" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'" />
  <ItemGroup>
    <Reference Include="System.ComponentModel.Composition" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="WorkspaceDesktopResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>WorkspaceDesktopResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.CSharp.EditorFeatures" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Features" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.CSharp" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.Implementation" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.Razor.RemoteClient" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.SolutionExplorer" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.VisualBasic" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.InteractiveServices" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.InteractiveFeatures" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.InteractiveEditorFeatures" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Remote.Workspaces" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Remote.Razor.ServiceHub" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Remote.ServiceHub" />
    <InternalsVisibleTo Include="Roslyn.Hosting.Diagnostics" />
    <InternalsVisibleTo Include="Roslyn.VisualStudio.Setup" />
    <InternalsVisibleTo Include="Roslyn.VisualStudio.DiagnosticsWindow" />
    <InternalsVisibleTo Include="Roslyn.VisualStudio.RemoteHostClientMock" />
    <InternalsVisibleTo Include="MonoDevelop.Ide" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.Refactoring" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.CSharpBinding" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.VBNetBinding" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.Ide.Tests" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.Refactoring.Tests" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.CSharpBinding.Tests" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="MonoDevelop.VBNetBinding.Tests" Key="$(MonoDevelopKey)" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures2.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.CSharp.EditorFeatures.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests" />
    <InternalsVisibleTo Include="Roslyn.Services.Test.Utilities" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures.Test.Utilities" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Workspaces.UnitTests" />
    <InternalsVisibleTo Include="Roslyn.Services.UnitTests.Utilities" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.CSharp.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.Test.Utilities2" />
    <InternalsVisibleTo Include="RoslynETAHost" />
    <InternalsVisibleTo Include="RoslynTaoActions" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\Compilers\Core\Portable\Microsoft.CodeAnalysis.csproj" />

    <!-- Use PrivateAssets=all to avoid creating circular dependency. -->
    <ProjectReference Include="..\Portable\Microsoft.CodeAnalysis.Workspaces.csproj" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <PublicAPI Include="PublicAPI.Shipped.txt" />
    <PublicAPI Include="PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="WorkspaceDesktopResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>WorkspaceDesktopResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
</Project>