<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <RootNamespace>Microsoft.CodeAnalysis</RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TargetFrameworks>$(SourceBuildTargetFrameworks);net472</TargetFrameworks>
    <!-- We'll always be running our build host with the same host that is used to launch the language server process directly, so we don't need to create another one -->
    <UseAppHost>false</UseAppHost>
    <!-- Set to false since it's also set in Microsoft.CodeAnalysis.LanguageServer -->
    <SelfContained>false</SelfContained>

    <!--
      We specifically reference Microsoft.Build 17.3.4, since it's the oldest version still compatible $(NetRoslynBuildHostNetCoreVersion).
      The version targeted is only used for build time, since we use MSBuildLocator to discover the proper version at runtime.
    -->
    <_MsbuildVersion>17.3.4</_MsbuildVersion>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\..\..\Compilers\Shared\GlobalAssemblyCacheHelpers\GlobalAssemblyCacheLocation.cs">
      <Link>InternalUtilities\GlobalAssemblyCache.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <PackageReference Include="Microsoft.Build" VersionOverride="$(_MsbuildVersion)" ExcludeAssets="Runtime" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Framework" VersionOverride="$(_MsbuildVersion)" ExcludeAssets="Runtime" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" VersionOverride="$(_MsbuildVersion)" ExcludeAssets="Runtime" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" VersionOverride="$(_MsbuildVersion)" ExcludeAssets="Runtime" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true' AND '$(TargetFrameworkIdentifier)' != '.NETCoreApp'">
    <!-- Reference MSBuild directly to avoid redistributing its package closure and including the dependencies in deps.json file. -->
    <PackageDownloadAndReference Include="Microsoft.Build" Version="$(_MsbuildVersion)" Folder="ref/$(TargetFramework)" />
    <PackageDownloadAndReference Include="Microsoft.Build.Framework" Version="$(_MsbuildVersion)" Folder="ref/$(TargetFramework)" />
    <PackageDownloadAndReference Include="Microsoft.Build.Tasks.Core" Version="$(_MsbuildVersion)" Folder="ref/$(TargetFramework)" />
    <PackageDownloadAndReference Include="Microsoft.Build.Utilities.Core" Version="$(_MsbuildVersion)" Folder="ref/$(TargetFramework)" />
  </ItemGroup>
  <!-- For net6.0 and net7.0 builds of the BuildHost we will reference the ref/net6.0 folder -->
  <ItemGroup Condition="'$(DotNetBuildFromSource)' != 'true' AND '$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <!-- Reference MSBuild directly to avoid redistributing its package closure and including the dependencies in deps.json file. -->
    <PackageDownloadAndReference Include="Microsoft.Build" Version="$(_MsbuildVersion)" Folder="ref/net6.0" />
    <PackageDownloadAndReference Include="Microsoft.Build.Framework" Version="$(_MsbuildVersion)" Folder="ref/net6.0" />
    <PackageDownloadAndReference Include="Microsoft.Build.Tasks.Core" Version="$(_MsbuildVersion)" Folder="ref/net6.0" />
    <PackageDownloadAndReference Include="Microsoft.Build.Utilities.Core" Version="$(_MsbuildVersion)" Folder="ref/net6.0" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Locator" Version="$(MicrosoftBuildLocatorVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="$(MicrosoftExtensionsLoggingConsoleVersion)" />
    <PackageReference Include="StreamJsonRpc" Version="$(StreamJsonRpcVersion)" Condition="'$(DotNetBuildFromSource)' != 'true'" />
    <PackageReference Include="System.CommandLine" Version="$(SystemCommandLineVersion)" />
    <PackageReference Include="System.Text.Json" Version="$(SystemTextJsonFixedVersion)" PrivateAssets="All" Condition="'$(DotNetBuildFromSource)' != 'true'"/>
    <PackageReference Include="System.Threading.Tasks.Dataflow" Version="$(SystemThreadingTasksDataflowVersion)" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\Compilers\Core\Portable\Microsoft.CodeAnalysis.csproj" />
    <ProjectReference Include="..\Portable\Microsoft.CodeAnalysis.Workspaces.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PublicAPI Include="PublicAPI.Shipped.txt" />
    <PublicAPI Include="PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="WorkspaceMSBuildResources.resx" GenerateSource="true" />
  </ItemGroup>
  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.LanguageServer" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Workspaces.Test.Utilities" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Workspaces.MSBuild" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Workspaces.MSBuild.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures2.UnitTests" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" LoadsWithinVisualStudio="false" />
  </ItemGroup>
  <Import Project="$(RepositoryEngineeringDir)targets\PackageDownloadAndReference.targets"/>
</Project>