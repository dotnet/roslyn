<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Acc_CreateAbst" xml:space="preserve">
    <value>Cannot create an abstract class.</value>
  </data>
  <data name="Acc_CreateAbstEx" xml:space="preserve">
    <value>Cannot create an instance of {0} because it is an abstract class.</value>
  </data>
  <data name="Acc_CreateArgIterator" xml:space="preserve">
    <value>Cannot dynamically create an instance of ArgIterator.</value>
  </data>
  <data name="Acc_CreateGeneric" xml:space="preserve">
    <value>Cannot create a type for which Type.ContainsGenericParameters is true.</value>
  </data>
  <data name="Acc_CreateGenericEx" xml:space="preserve">
    <value>Cannot create an instance of {0} because Type.ContainsGenericParameters is true.</value>
  </data>
  <data name="Acc_CreateInterface" xml:space="preserve">
    <value>Cannot create an instance of an interface.</value>
  </data>
  <data name="Acc_CreateInterfaceEx" xml:space="preserve">
    <value>Cannot create an instance of {0} because it is an interface.</value>
  </data>
  <data name="Acc_CreateVoid" xml:space="preserve">
    <value>Cannot dynamically create an instance of System.Void.</value>
  </data>
  <data name="Acc_NotClassInit" xml:space="preserve">
    <value>Type initializer was not callable.</value>
  </data>
  <data name="Acc_ReadOnly" xml:space="preserve">
    <value>Cannot set a constant field.</value>
  </data>
  <data name="Access_Void" xml:space="preserve">
    <value>Cannot create an instance of void.</value>
  </data>
  <data name="AggregateException_ctor_DefaultMessage" xml:space="preserve">
    <value>One or more errors occurred.</value>
  </data>
  <data name="AggregateException_ctor_InnerExceptionNull" xml:space="preserve">
    <value>An element of innerExceptions was null.</value>
  </data>
  <data name="AggregateException_DeserializationFailure" xml:space="preserve">
    <value>The serialization stream contains no inner exceptions.</value>
  </data>
  <data name="AggregateException_InnerException" xml:space="preserve">
    <value>(Inner Exception #{0}) </value>
    <comment>This text is prepended to each inner exception description during aggregate exception formatting</comment>
  </data>
  <data name="AppDomain_Name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="AppDomain_NoContextPolicies" xml:space="preserve">
    <value>There are no context policies.</value>
  </data>
  <data name="AppDomain_Policy_PrincipalTwice" xml:space="preserve">
    <value>Default principal object cannot be set twice.</value>
  </data>
  <data name="AmbiguousImplementationException_NullMessage" xml:space="preserve">
    <value>Ambiguous implementation found.</value>
  </data>
  <data name="Arg_AccessException" xml:space="preserve">
    <value>Cannot access member.</value>
  </data>
  <data name="Arg_AccessViolationException" xml:space="preserve">
    <value>Attempted to read or write protected memory. This is often an indication that other memory is corrupt.</value>
  </data>
  <data name="Arg_AmbiguousMatchException" xml:space="preserve">
    <value>Ambiguous match found.</value>
  </data>
  <data name="Arg_ApplicationException" xml:space="preserve">
    <value>Error in the application.</value>
  </data>
  <data name="Arg_ArgumentException" xml:space="preserve">
    <value>Value does not fall within the expected range.</value>
  </data>
  <data name="Arg_ArgumentOutOfRangeException" xml:space="preserve">
    <value>Specified argument was out of the range of valid values.</value>
  </data>
  <data name="Arg_ArithmeticException" xml:space="preserve">
    <value>Overflow or underflow in the arithmetic operation.</value>
  </data>
  <data name="Arg_ArrayLengthsDiffer" xml:space="preserve">
    <value>Array lengths must be the same.</value>
  </data>
  <data name="Arg_ArrayPlusOffTooSmall" xml:space="preserve">
    <value>Destination array is not long enough to copy all the items in the collection. Check array index and length.</value>
  </data>
  <data name="Arg_ArrayTypeMismatchException" xml:space="preserve">
    <value>Attempted to access an element as a type incompatible with the array.</value>
  </data>
  <data name="Arg_ArrayZeroError" xml:space="preserve">
    <value>Array must not be of length zero.</value>
  </data>
  <data name="Arg_BadDecimal" xml:space="preserve">
    <value>Read an invalid decimal value from the buffer.</value>
  </data>
  <data name="Arg_BadImageFormatException" xml:space="preserve">
    <value>Format of the executable (.exe) or library (.dll) is invalid.</value>
  </data>
  <data name="Arg_BadLiteralFormat" xml:space="preserve">
    <value>Encountered an invalid type for a default value.</value>
  </data>
  <data name="Arg_BogusIComparer" xml:space="preserve">
    <value>Unable to sort because the IComparer.Compare() method returns inconsistent results. Either a value does not compare equal to itself, or one value repeatedly compared to another value yields different results. IComparer: '{0}'.</value>
  </data>
  <data name="Arg_BufferTooSmall" xml:space="preserve">
    <value>Not enough space available in the buffer.</value>
  </data>
  <data name="Arg_CannotBeNaN" xml:space="preserve">
    <value>TimeSpan does not accept floating point Not-a-Number values.</value>
  </data>
  <data name="Arg_CannotHaveNegativeValue" xml:space="preserve">
    <value>String cannot contain a minus sign if the base is not 10.</value>
  </data>
  <data name="Arg_CannotMixComparisonInfrastructure" xml:space="preserve">
    <value>The usage of IKeyComparer and IHashCodeProvider/IComparer interfaces cannot be mixed; use one or the other.</value>
  </data>
  <data name="Arg_CannotUnloadAppDomainException" xml:space="preserve">
    <value>Attempt to unload the AppDomain failed.</value>
  </data>
  <data name="Arg_CATypeResolutionFailed" xml:space="preserve">
    <value>Failed to resolve type from string "{0}" which was embedded in custom attribute blob.</value>
  </data>
  <data name="Arg_COMAccess" xml:space="preserve">
    <value>Must specify property Set or Get or method call for a COM Object.</value>
  </data>
  <data name="Arg_COMException" xml:space="preserve">
    <value>Error HRESULT E_FAIL has been returned from a call to a COM component.</value>
  </data>
  <data name="Arg_COMPropSetPut" xml:space="preserve">
    <value>Only one of the following binding flags can be set: BindingFlags.SetProperty, BindingFlags.PutDispProperty,  BindingFlags.PutRefDispProperty.</value>
  </data>
  <data name="Arg_CreatInstAccess" xml:space="preserve">
    <value>Cannot specify both CreateInstance and another access type.</value>
  </data>
  <data name="Arg_CryptographyException" xml:space="preserve">
    <value>Error occurred during a cryptographic operation.</value>
  </data>
  <data name="Arg_CustomAttributeFormatException" xml:space="preserve">
    <value>Binary format of the specified custom attribute was invalid.</value>
  </data>
  <data name="Arg_DataMisalignedException" xml:space="preserve">
    <value>A datatype misalignment was detected in a load or store instruction.</value>
  </data>
  <data name="Arg_DateTimeRange" xml:space="preserve">
    <value>Combination of arguments to the DateTime constructor is out of the legal range.</value>
  </data>
  <data name="Arg_DecBitCtor" xml:space="preserve">
    <value>Decimal constructor requires an array or span of four valid decimal bytes.</value>
  </data>
  <data name="Arg_DirectoryNotFoundException" xml:space="preserve">
    <value>Attempted to access a path that is not on the disk.</value>
  </data>
  <data name="Arg_DivideByZero" xml:space="preserve">
    <value>Attempted to divide by zero.</value>
  </data>
  <data name="Arg_DlgtNullInst" xml:space="preserve">
    <value>Delegate to an instance method cannot have null 'this'.</value>
  </data>
  <data name="Arg_DlgtTargMeth" xml:space="preserve">
    <value>Cannot bind to the target method because its signature is not compatible with that of the delegate type.</value>
  </data>
  <data name="Arg_DlgtTypeMis" xml:space="preserve">
    <value>Delegates must be of the same type.</value>
  </data>
  <data name="Arg_DllNotFoundException" xml:space="preserve">
    <value>Dll was not found.</value>
  </data>
  <data name="Arg_DuplicateWaitObjectException" xml:space="preserve">
    <value>Duplicate objects in argument.</value>
  </data>
  <data name="Arg_EHClauseNotClause" xml:space="preserve">
    <value>This ExceptionHandlingClause is not a clause.</value>
  </data>
  <data name="Arg_EHClauseNotFilter" xml:space="preserve">
    <value>This ExceptionHandlingClause is not a filter.</value>
  </data>
  <data name="Arg_EmptyArray" xml:space="preserve">
    <value>Array may not be empty.</value>
  </data>
  <data name="Arg_EmptyOrNullString" xml:space="preserve">
    <value>String may not be empty or null.</value>
  </data>
  <data name="Arg_EndOfStreamException" xml:space="preserve">
    <value>Attempted to read past the end of the stream.</value>
  </data>
  <data name="Arg_EntryPointNotFoundException" xml:space="preserve">
    <value>Entry point was not found.</value>
  </data>
  <data name="Arg_EnumAndObjectMustBeSameType" xml:space="preserve">
    <value>Object must be the same type as the enum. The type passed in was '{0}'; the enum type was '{1}'.</value>
  </data>
  <data name="Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType" xml:space="preserve">
    <value>Enum underlying type and the object must be same type or object. Type passed in was '{0}'; the enum underlying type was '{1}'.</value>
  </data>
  <data name="Arg_EnumIllegalVal" xml:space="preserve">
    <value>Illegal enum value: {0}.</value>
  </data>
  <data name="Arg_EnumLitValueNotFound" xml:space="preserve">
    <value>Literal value was not found.</value>
  </data>
  <data name="Arg_EnumUnderlyingTypeAndObjectMustBeSameType" xml:space="preserve">
    <value>Enum underlying type and the object must be same type or object must be a String. Type passed in was '{0}'; the enum underlying type was '{1}'.</value>
  </data>
  <data name="Arg_EnumValueNotFound" xml:space="preserve">
    <value>Requested value '{0}' was not found.</value>
  </data>
  <data name="Arg_ExecutionEngineException" xml:space="preserve">
    <value>Internal error in the runtime.</value>
  </data>
  <data name="Arg_ExternalException" xml:space="preserve">
    <value>External component has thrown an exception.</value>
  </data>
  <data name="Arg_FieldAccessException" xml:space="preserve">
    <value>Attempted to access a field that is not accessible by the caller.</value>
  </data>
  <data name="Arg_FieldDeclTarget" xml:space="preserve">
    <value>Field '{0}' defined on type '{1}' is not a field on the target object which is of type '{2}'.</value>
  </data>
  <data name="Arg_FldGetArgErr" xml:space="preserve">
    <value>No arguments can be provided to Get a field value.</value>
  </data>
  <data name="Arg_FldGetPropSet" xml:space="preserve">
    <value>Cannot specify both GetField and SetProperty.</value>
  </data>
  <data name="Arg_FldSetArgErr" xml:space="preserve">
    <value>Only the field value can be specified to set a field value.</value>
  </data>
  <data name="Arg_FldSetGet" xml:space="preserve">
    <value>Cannot specify both Get and Set on a field.</value>
  </data>
  <data name="Arg_FldSetInvoke" xml:space="preserve">
    <value>Cannot specify Set on a Field and Invoke on a method.</value>
  </data>
  <data name="Arg_FldSetPropGet" xml:space="preserve">
    <value>Cannot specify both SetField and GetProperty.</value>
  </data>
  <data name="Arg_FormatException" xml:space="preserve">
    <value>One of the identified items was in an invalid format.</value>
  </data>
  <data name="Arg_GenericParameter" xml:space="preserve">
    <value>Method must be called on a Type for which Type.IsGenericParameter is false.</value>
  </data>
  <data name="Arg_GetMethNotFnd" xml:space="preserve">
    <value>Property Get method was not found.</value>
  </data>
  <data name="Arg_GuidArrayCtor" xml:space="preserve">
    <value>Byte array for GUID must be exactly {0} bytes long.</value>
  </data>
  <data name="Arg_HandleNotAsync" xml:space="preserve">
    <value>Handle does not support asynchronous operations. The parameters to the FileStream constructor may need to be changed to indicate that the handle was opened synchronously (that is, it was not opened for overlapped I/O).</value>
  </data>
  <data name="Arg_HandleNotSync" xml:space="preserve">
    <value>Handle does not support synchronous operations. The parameters to the FileStream constructor may need to be changed to indicate that the handle was opened asynchronously (that is, it was opened explicitly for overlapped I/O).</value>
  </data>
  <data name="Arg_HexStyleNotSupported" xml:space="preserve">
    <value>The number style AllowHexSpecifier is not supported on floating point data types.</value>
  </data>
  <data name="Arg_HTCapacityOverflow" xml:space="preserve">
    <value>Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.</value>
  </data>
  <data name="Arg_IndexMustBeInt" xml:space="preserve">
    <value>All indexes must be of type Int32.</value>
  </data>
  <data name="Arg_IndexOutOfRangeException" xml:space="preserve">
    <value>Index was outside the bounds of the array.</value>
  </data>
  <data name="Arg_InsufficientExecutionStackException" xml:space="preserve">
    <value>Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space.</value>
  </data>
  <data name="Arg_InvalidANSIString" xml:space="preserve">
    <value>The ANSI string passed in could not be converted from the default ANSI code page to Unicode.</value>
  </data>
  <data name="Arg_InvalidBase" xml:space="preserve">
    <value>Invalid Base.</value>
  </data>
  <data name="Arg_InvalidCastException" xml:space="preserve">
    <value>Specified cast is not valid.</value>
  </data>
  <data name="Arg_InvalidComObjectException" xml:space="preserve">
    <value>Attempt has been made to use a COM object that does not have a backing class factory.</value>
  </data>
  <data name="Arg_InvalidFilterCriteriaException" xml:space="preserve">
    <value>Specified filter criteria was invalid.</value>
  </data>
  <data name="Arg_InvalidHandle" xml:space="preserve">
    <value>Invalid handle.</value>
  </data>
  <data name="Arg_InvalidHexStyle" xml:space="preserve">
    <value>With the AllowHexSpecifier bit set in the enum bit field, the only other valid bits that can be combined into the enum value must be a subset of those in HexNumber.</value>
  </data>
  <data name="Arg_InvalidNeutralResourcesLanguage_Asm_Culture" xml:space="preserve">
    <value>The NeutralResourcesLanguageAttribute on the assembly "{0}" specifies an invalid culture name: "{1}".</value>
  </data>
  <data name="Arg_InvalidNeutralResourcesLanguage_FallbackLoc" xml:space="preserve">
    <value>The NeutralResourcesLanguageAttribute specifies an invalid or unrecognized ultimate resource fallback location: "{0}".</value>
  </data>
  <data name="Arg_InvalidSatelliteContract_Asm_Ver" xml:space="preserve">
    <value>Satellite contract version attribute on the assembly '{0}' specifies an invalid version: {1}.</value>
  </data>
  <data name="Arg_InvalidOleVariantTypeException" xml:space="preserve">
    <value>Specified OLE variant was invalid.</value>
  </data>
  <data name="Arg_InvalidOperationException" xml:space="preserve">
    <value>Operation is not valid due to the current state of the object.</value>
  </data>
  <data name="Arg_InvalidTypeInRetType" xml:space="preserve">
    <value>The return Type must be a type provided by the runtime.</value>
  </data>
  <data name="Arg_InvalidTypeInSignature" xml:space="preserve">
    <value>The signature Type array contains some invalid type (i.e. null, void)</value>
  </data>
  <data name="Arg_InvalidUTF8String" xml:space="preserve">
    <value>The UTF8 string passed in could not be converted to Unicode.</value>
  </data>
  <data name="Arg_IOException" xml:space="preserve">
    <value>I/O error occurred.</value>
  </data>
  <data name="Arg_KeyNotFound" xml:space="preserve">
    <value>The given key was not present in the dictionary.</value>
  </data>
  <data name="Arg_KeyNotFoundWithKey" xml:space="preserve">
    <value>The given key '{0}' was not present in the dictionary.</value>
  </data>
  <data name="Arg_LongerThanDestArray" xml:space="preserve">
    <value>Destination array was not long enough. Check the destination index, length, and the array's lower bounds.</value>
  </data>
  <data name="Arg_LongerThanSrcArray" xml:space="preserve">
    <value>Source array was not long enough. Check the source index, length, and the array's lower bounds.</value>
  </data>
  <data name="Arg_LongerThanSrcString" xml:space="preserve">
    <value>Source string was not long enough. Check sourceIndex and count.</value>
  </data>
  <data name="Arg_LowerBoundsMustMatch" xml:space="preserve">
    <value>The arrays' lower bounds must be identical.</value>
  </data>
  <data name="Arg_MarshalAsAnyRestriction" xml:space="preserve">
    <value>AsAny cannot be used on return types, ByRef parameters, ArrayWithOffset, or parameters passed from unmanaged to managed.</value>
  </data>
  <data name="Arg_MarshalDirectiveException" xml:space="preserve">
    <value>Marshaling directives are invalid.</value>
  </data>
  <data name="Arg_MethodAccessException" xml:space="preserve">
    <value>Attempt to access the method failed.</value>
  </data>
  <data name="Arg_MethodAccessException_WithMethodName" xml:space="preserve">
    <value>Attempt to access the method "{0}" on type "{1}" failed.</value>
  </data>
  <data name="Arg_MissingFieldException" xml:space="preserve">
    <value>Attempted to access a non-existing field.</value>
  </data>
  <data name="Arg_MissingManifestResourceException" xml:space="preserve">
    <value>Unable to find manifest resource.</value>
  </data>
  <data name="Arg_MissingMemberException" xml:space="preserve">
    <value>Attempted to access a missing member.</value>
  </data>
  <data name="Arg_MissingMethodException" xml:space="preserve">
    <value>Attempted to access a missing method.</value>
  </data>
  <data name="Arg_MulticastNotSupportedException" xml:space="preserve">
    <value>Attempted to add multiple callbacks to a delegate that does not support multicast.</value>
  </data>
  <data name="Arg_MustBeBoolean" xml:space="preserve">
    <value>Object must be of type Boolean.</value>
  </data>
  <data name="Arg_MustBeByte" xml:space="preserve">
    <value>Object must be of type Byte.</value>
  </data>
  <data name="Arg_MustBeChar" xml:space="preserve">
    <value>Object must be of type Char.</value>
  </data>
  <data name="Arg_MustBeDateTime" xml:space="preserve">
    <value>Object must be of type DateTime.</value>
  </data>
  <data name="Arg_MustBeDateTimeOffset" xml:space="preserve">
    <value>Object must be of type DateTimeOffset.</value>
  </data>
  <data name="Arg_MustBeDecimal" xml:space="preserve">
    <value>Object must be of type Decimal.</value>
  </data>
  <data name="Arg_MustBeDelegate" xml:space="preserve">
    <value>Type must derive from Delegate.</value>
  </data>
  <data name="Arg_MustBeDouble" xml:space="preserve">
    <value>Object must be of type Double.</value>
  </data>
  <data name="Arg_MustBeDriveLetterOrRootDir" xml:space="preserve">
    <value>Drive name must be a root directory (i.e. 'C:\') or a drive letter ('C').</value>
  </data>
  <data name="Arg_MustBeEnum" xml:space="preserve">
    <value>Type provided must be an Enum.</value>
  </data>
  <data name="Arg_MustBeEnumBaseTypeOrEnum" xml:space="preserve">
    <value>The value passed in must be an enum base or an underlying type for an enum, such as an Int32.</value>
  </data>
  <data name="Arg_MustBeGuid" xml:space="preserve">
    <value>Object must be of type GUID.</value>
  </data>
  <data name="Arg_MustBeInt16" xml:space="preserve">
    <value>Object must be of type Int16.</value>
  </data>
  <data name="Arg_MustBeInt32" xml:space="preserve">
    <value>Object must be of type Int32.</value>
  </data>
  <data name="Arg_MustBeInt64" xml:space="preserve">
    <value>Object must be of type Int64.</value>
  </data>
  <data name="Arg_MustBeIntPtr" xml:space="preserve">
    <value>Object must be of type IntPtr.</value>
  </data>
  <data name="Arg_MustBeInterface" xml:space="preserve">
    <value>Type passed must be an interface.</value>
  </data>
  <data name="Arg_MustBePointer" xml:space="preserve">
    <value>Type must be a Pointer.</value>
  </data>
  <data name="Arg_MustBePrimArray" xml:space="preserve">
    <value>Object must be an array of primitives.</value>
  </data>
  <data name="Arg_MustBeRuntimeAssembly" xml:space="preserve">
    <value>Object must be of type RuntimeAssembly.</value>
  </data>
  <data name="Arg_MustBeSByte" xml:space="preserve">
    <value>Object must be of type SByte.</value>
  </data>
  <data name="Arg_MustBeSingle" xml:space="preserve">
    <value>Object must be of type Single.</value>
  </data>
  <data name="Arg_MustBeString" xml:space="preserve">
    <value>Object must be of type String.</value>
  </data>
  <data name="Arg_MustBeTimeSpan" xml:space="preserve">
    <value>Object must be of type TimeSpan.</value>
  </data>
  <data name="Arg_MustBeType" xml:space="preserve">
    <value>Type must be a type provided by the runtime.</value>
  </data>
  <data name="Arg_MustBeTrue" xml:space="preserve">
    <value>Argument must be true.</value>
  </data>
  <data name="Arg_MustBeUInt16" xml:space="preserve">
    <value>Object must be of type UInt16.</value>
  </data>
  <data name="Arg_MustBeUInt32" xml:space="preserve">
    <value>Object must be of type UInt32.</value>
  </data>
  <data name="Arg_MustBeUInt64" xml:space="preserve">
    <value>Object must be of type UInt64.</value>
  </data>
  <data name="Arg_MustBeUIntPtr" xml:space="preserve">
    <value>Object must be of type UIntPtr.</value>
  </data>
  <data name="Arg_MustBeVersion" xml:space="preserve">
    <value>Object must be of type Version.</value>
  </data>
  <data name="Arg_MustContainEnumInfo" xml:space="preserve">
    <value>Must specify valid information for parsing in the string.</value>
  </data>
  <data name="Arg_NamedParamNull" xml:space="preserve">
    <value>Named parameter value must not be null.</value>
  </data>
  <data name="Arg_NamedParamTooBig" xml:space="preserve">
    <value>Named parameter array cannot be bigger than argument array.</value>
  </data>
  <data name="Arg_NDirectBadObject" xml:space="preserve">
    <value>No PInvoke conversion exists for value passed to Object-typed parameter.</value>
  </data>
  <data name="Arg_Need1DArray" xml:space="preserve">
    <value>Array was not a one-dimensional array.</value>
  </data>
  <data name="Arg_Need2DArray" xml:space="preserve">
    <value>Array was not a two-dimensional array.</value>
  </data>
  <data name="Arg_Need3DArray" xml:space="preserve">
    <value>Array was not a three-dimensional array.</value>
  </data>
  <data name="Arg_NeedAtLeast1Rank" xml:space="preserve">
    <value>Must provide at least one rank.</value>
  </data>
  <data name="Arg_NegativeArgCount" xml:space="preserve">
    <value>Argument count must not be negative.</value>
  </data>
  <data name="Arg_NoAccessSpec" xml:space="preserve">
    <value>Must specify binding flags describing the invoke operation required (BindingFlags.InvokeMethod CreateInstance GetField SetField GetProperty SetProperty).</value>
  </data>
  <data name="Arg_NoDefCTor" xml:space="preserve">
    <value>No parameterless constructor defined for type '{0}'.</value>
  </data>
  <data name="Arg_NoITypeInfo" xml:space="preserve">
    <value>Specified TypeInfo was invalid because it did not support the ITypeInfo interface.</value>
  </data>
  <data name="Arg_NoITypeLib" xml:space="preserve">
    <value>Specified TypeLib was invalid because it did not support the ITypeLib interface.</value>
  </data>
  <data name="Arg_NonZeroLowerBound" xml:space="preserve">
    <value>The lower bound of target array must be zero.</value>
  </data>
  <data name="Arg_NoStaticVirtual" xml:space="preserve">
    <value>Method cannot be both static and virtual.</value>
  </data>
  <data name="Arg_NotFiniteNumberException" xml:space="preserve">
    <value>Number encountered was not a finite quantity.</value>
  </data>
  <data name="Arg_NotFoundIFace" xml:space="preserve">
    <value>Interface not found.</value>
  </data>
  <data name="Arg_NotGenericMethodDefinition" xml:space="preserve">
    <value>{0} is not a GenericMethodDefinition. MakeGenericMethod may only be called on a method for which MethodBase.IsGenericMethodDefinition is true.</value>
  </data>
  <data name="Arg_NotGenericParameter" xml:space="preserve">
    <value>Method may only be called on a Type for which Type.IsGenericParameter is true.</value>
  </data>
  <data name="Arg_NotGenericTypeDefinition" xml:space="preserve">
    <value>{0} is not a GenericTypeDefinition. MakeGenericType may only be called on a type for which Type.IsGenericTypeDefinition is true.</value>
  </data>
  <data name="Arg_NotImplementedException" xml:space="preserve">
    <value>The method or operation is not implemented.</value>
  </data>
  <data name="Arg_NotSupportedException" xml:space="preserve">
    <value>Specified method is not supported.</value>
  </data>
  <data name="Arg_NullIndex" xml:space="preserve">
    <value>Arrays indexes must be set to an object instance.</value>
  </data>
  <data name="Arg_NullReferenceException" xml:space="preserve">
    <value>Object reference not set to an instance of an object.</value>
  </data>
  <data name="Arg_ObjObj" xml:space="preserve">
    <value>Object type cannot be converted to target type.</value>
  </data>
  <data name="Arg_ObjObjEx" xml:space="preserve">
    <value>Object of type '{0}' cannot be converted to type '{1}'.</value>
  </data>
  <data name="Arg_OleAutDateInvalid" xml:space="preserve">
    <value>Not a legal OleAut date.</value>
  </data>
  <data name="Arg_OleAutDateScale" xml:space="preserve">
    <value>OleAut date did not convert to a DateTime correctly.</value>
  </data>
  <data name="Arg_OverflowException" xml:space="preserve">
    <value>Arithmetic operation resulted in an overflow.</value>
  </data>
  <data name="Arg_OutOfMemoryException" xml:space="preserve">
    <value>Insufficient memory to continue the execution of the program.</value>
  </data>
  <data name="Arg_ParamName_Name" xml:space="preserve">
    <value>(Parameter '{0}')</value>
  </data>
  <data name="Arg_ParmArraySize" xml:space="preserve">
    <value>Must specify one or more parameters.</value>
  </data>
  <data name="Arg_ParmCnt" xml:space="preserve">
    <value>Parameter count mismatch.</value>
  </data>
  <data name="Arg_PathEmpty" xml:space="preserve">
    <value>The path is empty.</value>
  </data>
  <data name="Arg_PlatformNotSupported" xml:space="preserve">
    <value>Operation is not supported on this platform.</value>
  </data>
  <data name="Arg_PrimWiden" xml:space="preserve">
    <value>Cannot widen from source type to target type either because the source type is a not a primitive type or the conversion cannot be accomplished.</value>
  </data>
  <data name="Arg_PropSetGet" xml:space="preserve">
    <value>Cannot specify both Get and Set on a property.</value>
  </data>
  <data name="Arg_PropSetInvoke" xml:space="preserve">
    <value>Cannot specify Set on a property and Invoke on a method.</value>
  </data>
  <data name="Arg_RankException" xml:space="preserve">
    <value>Attempted to operate on an array with the incorrect number of dimensions.</value>
  </data>
  <data name="Arg_RankIndices" xml:space="preserve">
    <value>Indices length does not match the array rank.</value>
  </data>
  <data name="Arg_RankMultiDimNotSupported" xml:space="preserve">
    <value>Only single dimensional arrays are supported for the requested action.</value>
  </data>
  <data name="Arg_RanksAndBounds" xml:space="preserve">
    <value>Number of lengths and lowerBounds must match.</value>
  </data>
  <data name="Arg_RegGetOverflowBug" xml:space="preserve">
    <value>RegistryKey.GetValue does not allow a String that has a length greater than Int32.MaxValue.</value>
  </data>
  <data name="Arg_RegKeyNotFound" xml:space="preserve">
    <value>The specified registry key does not exist.</value>
  </data>
  <data name="Arg_RegSubKeyValueAbsent" xml:space="preserve">
    <value>No value exists with that name.</value>
  </data>
  <data name="Arg_RegValStrLenBug" xml:space="preserve">
    <value>Registry value names should not be greater than 16,383 characters.</value>
  </data>
  <data name="Arg_ResMgrNotResSet" xml:space="preserve">
    <value>Type parameter must refer to a subclass of ResourceSet.</value>
  </data>
  <data name="Arg_ResourceFileUnsupportedVersion" xml:space="preserve">
    <value>The ResourceReader class does not know how to read this version of .resources files. Expected version: {0}  This file: {1}</value>
  </data>
  <data name="Arg_ResourceNameNotExist" xml:space="preserve">
    <value>The specified resource name "{0}" does not exist in the resource file.</value>
  </data>
  <data name="Arg_SafeArrayRankMismatchException" xml:space="preserve">
    <value>Specified array was not of the expected rank.</value>
  </data>
  <data name="Arg_SafeArrayTypeMismatchException" xml:space="preserve">
    <value>Specified array was not of the expected type.</value>
  </data>
  <data name="Arg_SecurityException" xml:space="preserve">
    <value>Security error.</value>
  </data>
  <data name="SerializationException" xml:space="preserve">
    <value>Serialization error.</value>
  </data>
  <data name="Arg_SetMethNotFnd" xml:space="preserve">
    <value>Property set method not found.</value>
  </data>
  <data name="Arg_StackOverflowException" xml:space="preserve">
    <value>Operation caused a stack overflow.</value>
  </data>
  <data name="Arg_SurrogatesNotAllowedAsSingleChar" xml:space="preserve">
    <value>Unicode surrogate characters must be written out as pairs together in the same call, not individually. Consider passing in a character array instead.</value>
  </data>
  <data name="Arg_SynchronizationLockException" xml:space="preserve">
    <value>Object synchronization method was called from an unsynchronized block of code.</value>
  </data>
  <data name="Arg_SystemException" xml:space="preserve">
    <value>System error.</value>
  </data>
  <data name="Arg_TargetInvocationException" xml:space="preserve">
    <value>Exception has been thrown by the target of an invocation.</value>
  </data>
  <data name="Arg_TargetParameterCountException" xml:space="preserve">
    <value>Number of parameters specified does not match the expected number.</value>
  </data>
  <data name="Arg_ThreadStartException" xml:space="preserve">
    <value>Thread failed to start.</value>
  </data>
  <data name="Arg_ThreadStateException" xml:space="preserve">
    <value>Thread was in an invalid state for the operation being executed.</value>
  </data>
  <data name="Arg_TimeoutException" xml:space="preserve">
    <value>The operation has timed out.</value>
  </data>
  <data name="Arg_TypeAccessException" xml:space="preserve">
    <value>Attempt to access the type failed.</value>
  </data>
  <data name="Arg_TypedReference_Null" xml:space="preserve">
    <value>The TypedReference must be initialized.</value>
  </data>
  <data name="Arg_TypeLoadException" xml:space="preserve">
    <value>Failure has occurred while loading a type.</value>
  </data>
  <data name="Arg_TypeLoadNullStr" xml:space="preserve">
    <value>A null or zero length string does not represent a valid Type.</value>
  </data>
  <data name="Arg_TypeRefPrimitve" xml:space="preserve">
    <value>TypedReferences cannot be redefined as primitives. Field name '{0}'.</value>
  </data>
  <data name="Arg_TypeUnloadedException" xml:space="preserve">
    <value>Type had been unloaded.</value>
  </data>
  <data name="Arg_UnauthorizedAccessException" xml:space="preserve">
    <value>Attempted to perform an unauthorized operation.</value>
  </data>
  <data name="Arg_UnboundGenField" xml:space="preserve">
    <value>Late bound operations cannot be performed on fields with types for which Type.ContainsGenericParameters is true.</value>
  </data>
  <data name="Arg_UnboundGenParam" xml:space="preserve">
    <value>Late bound operations cannot be performed on types or methods for which ContainsGenericParameters is true.</value>
  </data>
  <data name="Arg_UnknownTypeCode" xml:space="preserve">
    <value>Unknown TypeCode value.</value>
  </data>
  <data name="Arg_VarMissNull" xml:space="preserve">
    <value>Missing parameter does not have a default value.</value>
  </data>
  <data name="Arg_VersionString" xml:space="preserve">
    <value>Version string portion was too short or too long.</value>
  </data>
  <data name="Arg_WrongAsyncResult" xml:space="preserve">
    <value>IAsyncResult object did not come from the corresponding async method on this type.</value>
  </data>
  <data name="Arg_WrongType" xml:space="preserve">
    <value>The value "{0}" is not of type "{1}" and cannot be used in this generic collection.</value>
  </data>
  <data name="Argument_AbsolutePathRequired" xml:space="preserve">
    <value>Path "{0}" is not an absolute path.</value>
  </data>
  <data name="Argument_AddingDuplicate" xml:space="preserve">
    <value>An item with the same key has already been added.</value>
  </data>
  <data name="Argument_AddingDuplicate__" xml:space="preserve">
    <value>Item has already been added. Key in dictionary: '{0}'  Key being added: '{1}'</value>
  </data>
  <data name="Argument_AddingDuplicateWithKey" xml:space="preserve">
    <value>An item with the same key has already been added. Key: {0}</value>
  </data>
  <data name="Argument_AdjustmentRulesNoNulls" xml:space="preserve">
    <value>The AdjustmentRule array cannot contain null elements.</value>
  </data>
  <data name="Argument_AdjustmentRulesOutOfOrder" xml:space="preserve">
    <value>The elements of the AdjustmentRule array must be in chronological order and must not overlap.</value>
  </data>
  <data name="Argument_AlreadyACCW" xml:space="preserve">
    <value>The object already has a CCW associated with it.</value>
  </data>
  <data name="Argument_AlreadyBoundOrSyncHandle" xml:space="preserve">
    <value>'handle' has already been bound to the thread pool, or was not opened for asynchronous I/O.</value>
  </data>
  <data name="Argument_ArrayGetInterfaceMap" xml:space="preserve">
    <value>Interface maps for generic interfaces on arrays cannot be retrieved.</value>
  </data>
  <data name="Argument_ArraysInvalid" xml:space="preserve">
    <value>Array or pointer types are not valid.</value>
  </data>
  <data name="Argument_AttributeNamesMustBeUnique" xml:space="preserve">
    <value>Attribute names must be unique.</value>
  </data>
  <data name="Argument_BadAttributeOnInterfaceMethod" xml:space="preserve">
    <value>Interface method must be abstract and virtual.</value>
  </data>
  <data name="Argument_BadConstantValue" xml:space="preserve">
    <value>Bad default value.</value>
  </data>
  <data name="Argument_BadConstructor" xml:space="preserve">
    <value>Cannot have private or static constructor.</value>
  </data>
  <data name="Argument_BadConstructorCallConv" xml:space="preserve">
    <value>Constructor must have standard calling convention.</value>
  </data>
  <data name="Argument_BadExceptionCodeGen" xml:space="preserve">
    <value>Incorrect code generation for exception block.</value>
  </data>
  <data name="Argument_BadFieldForConstructorBuilder" xml:space="preserve">
    <value>Field must be on the same type of the given ConstructorInfo.</value>
  </data>
  <data name="Argument_BadFieldSig" xml:space="preserve">
    <value>Field signatures do not have return types.</value>
  </data>
  <data name="Argument_BadFieldType" xml:space="preserve">
    <value>Bad field type in defining field.</value>
  </data>
  <data name="Argument_BadFormatSpecifier" xml:space="preserve">
    <value>Format specifier was invalid.</value>
  </data>
  <data name="Argument_BadImageFormatExceptionResolve" xml:space="preserve">
    <value>A BadImageFormatException has been thrown while parsing the signature. This is likely due to lack of a generic context. Ensure genericTypeArguments and genericMethodArguments are provided and contain enough context.</value>
  </data>
  <data name="Argument_BadLabel" xml:space="preserve">
    <value>Bad label in ILGenerator.</value>
  </data>
  <data name="Argument_BadLabelContent" xml:space="preserve">
    <value>Bad label content in ILGenerator.</value>
  </data>
  <data name="Argument_BadNestedTypeFlags" xml:space="preserve">
    <value>Visibility of interfaces must be one of the following: NestedAssembly, NestedFamANDAssem, NestedFamily, NestedFamORAssem, NestedPrivate or NestedPublic.</value>
  </data>
  <data name="Argument_BadObjRef" xml:space="preserve">
    <value>Invalid ObjRef provided to '{0}'.</value>
  </data>
  <data name="Argument_BadParameterCountsForConstructor" xml:space="preserve">
    <value>Parameter count does not match passed in argument value count.</value>
  </data>
  <data name="Argument_BadParameterTypeForCAB" xml:space="preserve">
    <value>Cannot emit a CustomAttribute with argument of type {0}.</value>
  </data>
  <data name="Argument_BadPropertyForConstructorBuilder" xml:space="preserve">
    <value>Property must be on the same type of the given ConstructorInfo.</value>
  </data>
  <data name="Argument_BadSigFormat" xml:space="preserve">
    <value>Incorrect signature format.</value>
  </data>
  <data name="Argument_BadSizeForData" xml:space="preserve">
    <value>Data size must be &gt; 1 and &lt; 0x3f0000</value>
  </data>
  <data name="Argument_BadTypeAttrInvalidLayout" xml:space="preserve">
    <value>Bad type attributes. Invalid layout attribute specified.</value>
  </data>
  <data name="Argument_BadTypeAttrNestedVisibilityOnNonNestedType" xml:space="preserve">
    <value>Bad type attributes. Nested visibility flag set on a non-nested type.</value>
  </data>
  <data name="Argument_BadTypeAttrNonNestedVisibilityNestedType" xml:space="preserve">
    <value>Bad type attributes. Non-nested visibility flag set on a nested type.</value>
  </data>
  <data name="Argument_BadTypeAttrReservedBitsSet" xml:space="preserve">
    <value>Bad type attributes. Reserved bits set on the type.</value>
  </data>
  <data name="Argument_BadTypeInCustomAttribute" xml:space="preserve">
    <value>An invalid type was used as a custom attribute constructor argument, field or property.</value>
  </data>
  <data name="Argument_CannotCreateTypedReference" xml:space="preserve">
    <value>Cannot use function evaluation to create a TypedReference object.</value>
  </data>
  <data name="Argument_CannotGetTypeTokenForByRef" xml:space="preserve">
    <value>Cannot get TypeToken for a ByRef type.</value>
  </data>
  <data name="Argument_CannotSetParentToInterface" xml:space="preserve">
    <value>Cannot set parent to an interface.</value>
  </data>
  <data name="Argument_CodepageNotSupported" xml:space="preserve">
    <value>{0} is not a supported code page.</value>
  </data>
  <data name="Argument_CompareOptionOrdinal" xml:space="preserve">
    <value>CompareOption.Ordinal cannot be used with other options.</value>
  </data>
  <data name="Argument_ConflictingDateTimeRoundtripStyles" xml:space="preserve">
    <value>The DateTimeStyles value RoundtripKind cannot be used with the values AssumeLocal, AssumeUniversal or AdjustToUniversal.</value>
  </data>
  <data name="Argument_ConflictingDateTimeStyles" xml:space="preserve">
    <value>The DateTimeStyles values AssumeLocal and AssumeUniversal cannot be used together.</value>
  </data>
  <data name="Argument_ConstantDoesntMatch" xml:space="preserve">
    <value>Constant does not match the defined type.</value>
  </data>
  <data name="Argument_ConstantNotSupported" xml:space="preserve">
    <value>{0} is not a supported constant type.</value>
  </data>
  <data name="Argument_ConstantNull" xml:space="preserve">
    <value>Null is not a valid constant value for this type.</value>
  </data>
  <data name="Argument_ConstructorNeedGenericDeclaringType" xml:space="preserve">
    <value>The specified constructor must be declared on a generic type definition.</value>
  </data>
  <data name="Argument_ConversionOverflow" xml:space="preserve">
    <value>Conversion buffer overflow.</value>
  </data>
  <data name="Argument_ConvertMismatch" xml:space="preserve">
    <value>The conversion could not be completed because the supplied DateTime did not have the Kind property set correctly.  For example, when the Kind property is DateTimeKind.Local, the source time zone must be TimeZoneInfo.Local.</value>
  </data>
  <data name="Argument_CORDBBadMethod" xml:space="preserve">
    <value>Cannot find the method on the object instance.</value>
  </data>
  <data name="Argument_CORDBBadVarArgCallConv" xml:space="preserve">
    <value>Cannot evaluate a VarArgs function.</value>
  </data>
  <data name="Argument_CultureIetfNotSupported" xml:space="preserve">
    <value>Culture IETF Name {0} is not a recognized IETF name.</value>
  </data>
  <data name="Argument_CultureInvalidIdentifier" xml:space="preserve">
    <value>{0} is an invalid culture identifier.</value>
  </data>
  <data name="Argument_CultureIsNeutral" xml:space="preserve">
    <value>Culture ID {0} (0x{0:X4}) is a neutral culture; a region cannot be created from it.</value>
  </data>
  <data name="Argument_CultureNotSupported" xml:space="preserve">
    <value>Culture is not supported.</value>
  </data>
  <data name="Argument_CustomAssemblyLoadContextRequestedNameMismatch" xml:space="preserve">
    <value>Resolved assembly's simple name should be the same as of the requested assembly.</value>
  </data>
  <data name="Argument_CustomCultureCannotBePassedByNumber" xml:space="preserve">
    <value>Customized cultures cannot be passed by LCID, only by name.</value>
  </data>
  <data name="Argument_DateTimeBadBinaryData" xml:space="preserve">
    <value>The binary data must result in a DateTime with ticks between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.</value>
  </data>
  <data name="Argument_DateTimeHasTicks" xml:space="preserve">
    <value>The supplied DateTime must have the Year, Month, and Day properties set to 1.  The time cannot be specified more precisely than whole milliseconds.</value>
  </data>
  <data name="Argument_DateTimeHasTimeOfDay" xml:space="preserve">
    <value>The supplied DateTime includes a TimeOfDay setting.   This is not supported.</value>
  </data>
  <data name="Argument_DateTimeIsInvalid" xml:space="preserve">
    <value>The supplied DateTime represents an invalid time.  For example, when the clock is adjusted forward, any time in the period that is skipped is invalid.</value>
  </data>
  <data name="Argument_DateTimeIsNotAmbiguous" xml:space="preserve">
    <value>The supplied DateTime is not in an ambiguous time range.</value>
  </data>
  <data name="Argument_DateTimeKindMustBeUnspecified" xml:space="preserve">
    <value>The supplied DateTime must have the Kind property set to DateTimeKind.Unspecified.</value>
  </data>
  <data name="Argument_DateTimeKindMustBeUnspecifiedOrUtc" xml:space="preserve">
    <value>The supplied DateTime must have the Kind property set to DateTimeKind.Unspecified or DateTimeKind.Utc.</value>
  </data>
  <data name="Argument_DateTimeOffsetInvalidDateTimeStyles" xml:space="preserve">
    <value>The DateTimeStyles value 'NoCurrentDateDefault' is not allowed when parsing DateTimeOffset.</value>
  </data>
  <data name="Argument_DateTimeOffsetIsNotAmbiguous" xml:space="preserve">
    <value>The supplied DateTimeOffset is not in an ambiguous time range.</value>
  </data>
  <data name="Argument_DestinationTooShort" xml:space="preserve">
    <value>Destination is too short.</value>
  </data>
  <data name="Argument_DuplicateTypeName" xml:space="preserve">
    <value>Duplicate type name within an assembly.</value>
  </data>
  <data name="Argument_EmitWriteLineType" xml:space="preserve">
    <value>EmitWriteLine does not support this field or local type.</value>
  </data>
  <data name="Argument_EmptyDecString" xml:space="preserve">
    <value>Decimal separator cannot be the empty string.</value>
  </data>
  <data name="Argument_EmptyFileName" xml:space="preserve">
    <value>Empty file name is not legal.</value>
  </data>
  <data name="Argument_EmptyName" xml:space="preserve">
    <value>Empty name is not legal.</value>
  </data>
  <data name="Argument_EmptyPath" xml:space="preserve">
    <value>Empty path name is not legal.</value>
  </data>
  <data name="Argument_EmptyWaithandleArray" xml:space="preserve">
    <value>Waithandle array may not be empty.</value>
  </data>
  <data name="Argument_EncoderFallbackNotEmpty" xml:space="preserve">
    <value>Must complete Convert() operation or call Encoder.Reset() before calling GetBytes() or GetByteCount(). Encoder '{0}' fallback '{1}'.</value>
  </data>
  <data name="Argument_EncodingConversionOverflowBytes" xml:space="preserve">
    <value>The output byte buffer is too small to contain the encoded data, encoding '{0}' fallback '{1}'.</value>
  </data>
  <data name="Argument_EncodingConversionOverflowChars" xml:space="preserve">
    <value>The output char buffer is too small to contain the decoded characters, encoding '{0}' fallback '{1}'.</value>
  </data>
  <data name="Argument_EncodingNotSupported" xml:space="preserve">
    <value>'{0}' is not a supported encoding name. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.</value>
  </data>
  <data name="Argument_EnumTypeDoesNotMatch" xml:space="preserve">
    <value>The argument type, '{0}', is not the same as the enum type '{1}'.</value>
  </data>
  <data name="Argument_FallbackBufferNotEmpty" xml:space="preserve">
    <value>Cannot change fallback when buffer is not empty. Previous Convert() call left data in the fallback buffer.</value>
  </data>
  <data name="Argument_FieldDeclaringTypeGeneric" xml:space="preserve">
    <value>Cannot resolve field {0} because the declaring type of the field handle {1} is generic. Explicitly provide the declaring type to GetFieldFromHandle.</value>
  </data>
  <data name="Argument_FieldNeedGenericDeclaringType" xml:space="preserve">
    <value>The specified field must be declared on a generic type definition.</value>
  </data>
  <data name="Argument_GenConstraintViolation" xml:space="preserve">
    <value>GenericArguments[{0}], '{1}', on '{2}' violates the constraint of type '{3}'.</value>
  </data>
  <data name="Argument_GenericArgsCount" xml:space="preserve">
    <value>The number of generic arguments provided doesn't equal the arity of the generic type definition.</value>
  </data>
  <data name="Argument_GenericsInvalid" xml:space="preserve">
    <value>Generic types are not valid.</value>
  </data>
  <data name="Argument_GlobalFunctionHasToBeStatic" xml:space="preserve">
    <value>Global members must be static.</value>
  </data>
  <data name="Argument_HasToBeArrayClass" xml:space="preserve">
    <value>Must be an array type.</value>
  </data>
  <data name="Argument_IdnBadBidi" xml:space="preserve">
    <value>Left to right characters may not be mixed with right to left characters in IDN labels.</value>
  </data>
  <data name="Argument_IdnBadLabelSize" xml:space="preserve">
    <value>IDN labels must be between 1 and 63 characters long.</value>
  </data>
  <data name="Argument_IdnBadNameSize" xml:space="preserve">
    <value>IDN names must be between 1 and {0} characters long.</value>
  </data>
  <data name="Argument_IdnBadPunycode" xml:space="preserve">
    <value>Invalid IDN encoded string.</value>
  </data>
  <data name="Argument_IdnBadStd3" xml:space="preserve">
    <value>Label contains character '{0}' not allowed with UseStd3AsciiRules</value>
  </data>
  <data name="Argument_IdnIllegalName" xml:space="preserve">
    <value>Decoded string is not a valid IDN name.</value>
  </data>
  <data name="Argument_IllegalEnvVarName" xml:space="preserve">
    <value>Environment variable name cannot contain equal character.</value>
  </data>
  <data name="Argument_IllegalName" xml:space="preserve">
    <value>Illegal name.</value>
  </data>
  <data name="Argument_ImplementIComparable" xml:space="preserve">
    <value>At least one object must implement IComparable.</value>
  </data>
  <data name="Argument_IndexOutOfArrayBounds" xml:space="preserve">
    <value>The specified index is out of bounds of the specified array.</value>
  </data>
  <data name="Argument_InsufficientSpaceToCopyCollection" xml:space="preserve">
    <value>The specified space is not sufficient to copy the elements from this Collection.</value>
  </data>
  <data name="Argument_InterfaceMap" xml:space="preserve">
    <value>'this' type cannot be an interface itself.</value>
  </data>
  <data name="Argument_InvalidAppendMode" xml:space="preserve">
    <value>Append access can be requested only in write-only mode.</value>
  </data>
  <data name="Argument_InvalidArgumentForComparison" xml:space="preserve">
    <value>Type of argument is not compatible with the generic comparer.</value>
  </data>
  <data name="Argument_InvalidArrayLength" xml:space="preserve">
    <value>Length of the array must be {0}.</value>
  </data>
  <data name="Argument_InvalidArrayType" xml:space="preserve">
    <value>Target array type is not compatible with the type of items in the collection.</value>
  </data>
  <data name="Argument_InvalidAssemblyName" xml:space="preserve">
    <value>Assembly names may not begin with whitespace or contain the characters '/', or '\\' or ':'.</value>
  </data>
  <data name="Argument_InvalidCalendar" xml:space="preserve">
    <value>Not a valid calendar for the given culture.</value>
  </data>
  <data name="Argument_InvalidCharSequence" xml:space="preserve">
    <value>Invalid Unicode code point found at index {0}.</value>
  </data>
  <data name="Argument_InvalidCharSequenceNoIndex" xml:space="preserve">
    <value>String contains invalid Unicode code points.</value>
  </data>
  <data name="Argument_InvalidCodePageBytesIndex" xml:space="preserve">
    <value>Unable to translate bytes {0} at index {1} from specified code page to Unicode.</value>
  </data>
  <data name="Argument_InvalidCodePageConversionIndex" xml:space="preserve">
    <value>Unable to translate Unicode character \\u{0:X4} at index {1} to specified code page.</value>
  </data>
  <data name="Argument_InvalidConstructorDeclaringType" xml:space="preserve">
    <value>The specified constructor must be declared on the generic type definition of the specified type.</value>
  </data>
  <data name="Argument_InvalidConstructorInfo" xml:space="preserve">
    <value>The ConstructorInfo object is not valid.</value>
  </data>
  <data name="Argument_InvalidCultureName" xml:space="preserve">
    <value>Culture name '{0}' is not supported.</value>
  </data>
  <data name="Argument_InvalidPredefinedCultureName" xml:space="preserve">
    <value>Culture name '{0}' is not a predefined culture.</value>
  </data>
  <data name="Argument_InvalidDateTimeKind" xml:space="preserve">
    <value>Invalid DateTimeKind value.</value>
  </data>
  <data name="Argument_InvalidDateTimeStyles" xml:space="preserve">
    <value>An undefined DateTimeStyles value is being used.</value>
  </data>
  <data name="Argument_InvalidDigitSubstitution" xml:space="preserve">
    <value>The DigitSubstitution property must be of a valid member of the DigitShapes enumeration. Valid entries include Context, NativeNational or None.</value>
  </data>
  <data name="Argument_InvalidElementName" xml:space="preserve">
    <value>Invalid element name '{0}'.</value>
  </data>
  <data name="Argument_InvalidElementTag" xml:space="preserve">
    <value>Invalid element tag '{0}'.</value>
  </data>
  <data name="Argument_InvalidElementText" xml:space="preserve">
    <value>Invalid element text '{0}'.</value>
  </data>
  <data name="Argument_InvalidElementValue" xml:space="preserve">
    <value>Invalid element value '{0}'.</value>
  </data>
  <data name="Argument_InvalidEnum" xml:space="preserve">
    <value>The Enum type should contain one and only one instance field.</value>
  </data>
  <data name="Argument_InvalidEnumValue" xml:space="preserve">
    <value>The value '{0}' is not valid for this usage of the type {1}.</value>
  </data>
  <data name="Argument_InvalidFieldDeclaringType" xml:space="preserve">
    <value>The specified field must be declared on the generic type definition of the specified type.</value>
  </data>
  <data name="Argument_InvalidFileModeAndAccessCombo" xml:space="preserve">
    <value>Combining FileMode: {0} with FileAccess: {1} is invalid.</value>
  </data>
  <data name="Argument_InvalidFlag" xml:space="preserve">
    <value>Value of flags is invalid.</value>
  </data>
  <data name="Argument_InvalidGenericArg" xml:space="preserve">
    <value>The generic type parameter was not valid</value>
  </data>
  <data name="Argument_InvalidGenericInstArray" xml:space="preserve">
    <value>Generic arguments must be provided for each generic parameter and each generic argument must be a RuntimeType.</value>
  </data>
  <data name="Argument_InvalidGroupSize" xml:space="preserve">
    <value>Every element in the value array should be between one and nine, except for the last element, which can be zero.</value>
  </data>
  <data name="Argument_InvalidHandle" xml:space="preserve">
    <value>The handle is invalid.</value>
  </data>
  <data name="Argument_InvalidHighSurrogate" xml:space="preserve">
    <value>Found a high surrogate char without a following low surrogate at index: {0}. The input may not be in this encoding, or may not contain valid Unicode (UTF-16) characters.</value>
  </data>
  <data name="Argument_InvalidId" xml:space="preserve">
    <value>The specified ID parameter '{0}' is not supported.</value>
  </data>
  <data name="Argument_InvalidKindOfTypeForCA" xml:space="preserve">
    <value>This type cannot be represented as a custom attribute.</value>
  </data>
  <data name="Argument_InvalidLabel" xml:space="preserve">
    <value>Invalid Label.</value>
  </data>
  <data name="Argument_InvalidLowSurrogate" xml:space="preserve">
    <value>Found a low surrogate char without a preceding high surrogate at index: {0}. The input may not be in this encoding, or may not contain valid Unicode (UTF-16) characters.</value>
  </data>
  <data name="Argument_InvalidMemberForNamedArgument" xml:space="preserve">
    <value>The member must be either a field or a property.</value>
  </data>
  <data name="Argument_InvalidMethodDeclaringType" xml:space="preserve">
    <value>The specified method must be declared on the generic type definition of the specified type.</value>
  </data>
  <data name="Argument_InvalidName" xml:space="preserve">
    <value>Invalid name.</value>
  </data>
  <data name="Argument_InvalidNativeDigitCount" xml:space="preserve">
    <value>The NativeDigits array must contain exactly ten members.</value>
  </data>
  <data name="Argument_InvalidNativeDigitValue" xml:space="preserve">
    <value>Each member of the NativeDigits array must be a single text element (one or more UTF16 code points) with a Unicode Nd (Number, Decimal Digit) property indicating it is a digit.</value>
  </data>
  <data name="Argument_InvalidNeutralRegionName" xml:space="preserve">
    <value>The region name {0} should not correspond to neutral culture; a specific culture name is required.</value>
  </data>
  <data name="Argument_InvalidNormalizationForm" xml:space="preserve">
    <value>Invalid or unsupported normalization form.</value>
  </data>
  <data name="Argument_InvalidNumberStyles" xml:space="preserve">
    <value>An undefined NumberStyles value is being used.</value>
  </data>
  <data name="Argument_InvalidOffLen" xml:space="preserve">
    <value>Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.</value>
  </data>
  <data name="Argument_InvalidOpCodeOnDynamicMethod" xml:space="preserve">
    <value>Ldtoken, Ldftn and Ldvirtftn OpCodes cannot target DynamicMethods.</value>
  </data>
  <data name="Argument_InvalidParameterInfo" xml:space="preserve">
    <value>The ParameterInfo object is not valid.</value>
  </data>
  <data name="Argument_InvalidParamInfo" xml:space="preserve">
    <value>Invalid type for ParameterInfo member in Attribute class.</value>
  </data>
  <data name="Argument_InvalidPathChars" xml:space="preserve">
    <value>Illegal characters in path.</value>
  </data>
  <data name="Argument_InvalidResourceCultureName" xml:space="preserve">
    <value>The given culture name '{0}' cannot be used to locate a resource file. Resource filenames must consist of only letters, numbers, hyphens or underscores.</value>
  </data>
  <data name="Argument_InvalidSafeBufferOffLen" xml:space="preserve">
    <value>Offset and length were greater than the size of the SafeBuffer.</value>
  </data>
  <data name="Argument_InvalidSeekOrigin" xml:space="preserve">
    <value>Invalid seek origin.</value>
  </data>
  <data name="Argument_InvalidSerializedString" xml:space="preserve">
    <value>The specified serialized string '{0}' is not supported.</value>
  </data>
  <data name="Argument_InvalidStartupHookSignature" xml:space="preserve">
    <value>The signature of the startup hook '{0}' in assembly '{1}' was invalid. It must be 'public static void Initialize()'.</value>
  </data>
  <data name="Argument_InvalidTimeSpanStyles" xml:space="preserve">
    <value>An undefined TimeSpanStyles value is being used.</value>
  </data>
  <data name="Argument_InvalidToken" xml:space="preserve">
    <value>Token {0:x} is not valid in the scope of module {1}.</value>
  </data>
  <data name="Argument_InvalidTypeForCA" xml:space="preserve">
    <value>Cannot build type parameter for custom attribute with a type that does not support the AssemblyQualifiedName property. The type instance supplied was of type '{0}'.</value>
  </data>
  <data name="Argument_InvalidTypeForDynamicMethod" xml:space="preserve">
    <value>Invalid type owner for DynamicMethod.</value>
  </data>
  <data name="Argument_InvalidTypeName" xml:space="preserve">
    <value>The name of the type is invalid.</value>
  </data>
  <data name="Argument_InvalidTypeWithPointersNotSupported" xml:space="preserve">
    <value>Cannot use type '{0}'. Only value types without pointers or references are supported.</value>
  </data>
  <data name="Argument_InvalidUnity" xml:space="preserve">
    <value>Type '{0}' is not deserializable.</value>
  </data>
  <data name="Argument_InvalidValue" xml:space="preserve">
    <value>Value was invalid.</value>
  </data>
  <data name="Argument_LargeInteger" xml:space="preserve">
    <value>Integer or token was too large to be encoded.</value>
  </data>
  <data name="Argument_LongEnvVarValue" xml:space="preserve">
    <value>Environment variable name or value is too long.</value>
  </data>
  <data name="Argument_MethodDeclaringTypeGeneric" xml:space="preserve">
    <value>Cannot resolve method {0} because the declaring type of the method handle {1} is generic. Explicitly provide the declaring type to GetMethodFromHandle.</value>
  </data>
  <data name="Argument_MethodDeclaringTypeGenericLcg" xml:space="preserve">
    <value>Method '{0}' has a generic declaring type '{1}'. Explicitly provide the declaring type to GetTokenFor.</value>
  </data>
  <data name="Argument_MethodNeedGenericDeclaringType" xml:space="preserve">
    <value>The specified method cannot be dynamic or global and must be declared on a generic type definition.</value>
  </data>
  <data name="Argument_MinMaxValue" xml:space="preserve">
    <value>'{0}' cannot be greater than {1}.</value>
  </data>
  <data name="Argument_MismatchedArrays" xml:space="preserve">
    <value>Two arrays, {0} and {1}, must be of  the same size.</value>
  </data>
  <data name="Argument_MissingDefaultConstructor" xml:space="preserve">
    <value>was missing default constructor.</value>
  </data>
  <data name="Argument_MustBeFalse" xml:space="preserve">
    <value>Argument must be initialized to false</value>
  </data>
  <data name="Argument_MustBeRuntimeAssembly" xml:space="preserve">
    <value>Assembly must be a runtime Assembly object.</value>
  </data>
  <data name="Argument_MustBeRuntimeFieldInfo" xml:space="preserve">
    <value>FieldInfo must be a runtime FieldInfo object.</value>
  </data>
  <data name="Argument_MustBeRuntimeMethodInfo" xml:space="preserve">
    <value>MethodInfo must be a runtime MethodInfo object.</value>
  </data>
  <data name="Argument_MustBeRuntimeReflectionObject" xml:space="preserve">
    <value>The object must be a runtime Reflection object.</value>
  </data>
  <data name="Argument_MustBeRuntimeType" xml:space="preserve">
    <value>Type must be a runtime Type object.</value>
  </data>
  <data name="Argument_MustBeTypeBuilder" xml:space="preserve">
    <value>'type' must contain a TypeBuilder as a generic argument.</value>
  </data>
  <data name="Argument_MustHaveAttributeBaseClass" xml:space="preserve">
    <value>Type passed in must be derived from System.Attribute or System.Attribute itself.</value>
  </data>
  <data name="Argument_MustHaveLayoutOrBeBlittable" xml:space="preserve">
    <value>The specified structure must be blittable or have layout information.</value>
  </data>
  <data name="Argument_NativeOverlappedAlreadyFree" xml:space="preserve">
    <value>'overlapped' has already been freed.</value>
  </data>
  <data name="Argument_NativeOverlappedWrongBoundHandle" xml:space="preserve">
    <value>'overlapped' was not allocated by this ThreadPoolBoundHandle instance.</value>
  </data>
  <data name="Argument_NeedGenericMethodDefinition" xml:space="preserve">
    <value>Method must represent a generic method definition on a generic type definition.</value>
  </data>
  <data name="Argument_NeedNonGenericObject" xml:space="preserve">
    <value>The specified object must not be an instance of a generic type.</value>
  </data>
  <data name="Argument_NeedNonGenericType" xml:space="preserve">
    <value>The specified Type must not be a generic type.</value>
  </data>
  <data name="Argument_NeedStructWithNoRefs" xml:space="preserve">
    <value>The specified Type must be a struct containing no references.</value>
  </data>
  <data name="Argument_NeverValidGenericArgument" xml:space="preserve">
    <value>The type '{0}' may not be used as a type argument.</value>
  </data>
  <data name="Argument_NoEra" xml:space="preserve">
    <value>No Era was supplied.</value>
  </data>
  <data name="Argument_NoRegionInvariantCulture" xml:space="preserve">
    <value>There is no region associated with the Invariant Culture (Culture ID: 0x7F).</value>
  </data>
  <data name="Argument_NotAWritableProperty" xml:space="preserve">
    <value>Not a writable property.</value>
  </data>
  <data name="Argument_NotEnoughBytesToRead" xml:space="preserve">
    <value>There are not enough bytes remaining in the accessor to read at this position.</value>
  </data>
  <data name="Argument_NotEnoughBytesToWrite" xml:space="preserve">
    <value>There are not enough bytes remaining in the accessor to write at this position.</value>
  </data>
  <data name="Argument_NotEnoughGenArguments" xml:space="preserve">
    <value>The type or method has {1} generic parameter(s), but {0} generic argument(s) were provided. A generic argument must be provided for each generic parameter.</value>
  </data>
  <data name="Argument_NotExceptionType" xml:space="preserve">
    <value>Does not extend Exception.</value>
  </data>
  <data name="Argument_NotInExceptionBlock" xml:space="preserve">
    <value>Not currently in an exception block.</value>
  </data>
  <data name="Argument_NotMethodCallOpcode" xml:space="preserve">
    <value>The specified opcode cannot be passed to EmitCall.</value>
  </data>
  <data name="Argument_NotSerializable" xml:space="preserve">
    <value>Argument passed in is not serializable.</value>
  </data>
  <data name="Argument_NoUninitializedStrings" xml:space="preserve">
    <value>Uninitialized Strings cannot be created.</value>
  </data>
  <data name="Argument_ObjIsWinRTObject" xml:space="preserve">
    <value>The object's type must not be a Windows Runtime type.</value>
  </data>
  <data name="Argument_ObjNotComObject" xml:space="preserve">
    <value>The object's type must be __ComObject or derived from __ComObject.</value>
  </data>
  <data name="Argument_OffsetAndCapacityOutOfBounds" xml:space="preserve">
    <value>Offset and capacity were greater than the size of the view.</value>
  </data>
  <data name="Argument_OffsetLocalMismatch" xml:space="preserve">
    <value>The UTC Offset of the local dateTime parameter does not match the offset argument.</value>
  </data>
  <data name="Argument_OffsetOfFieldNotFound" xml:space="preserve">
    <value>Field passed in is not a marshaled member of the type '{0}'.</value>
  </data>
  <data name="Argument_OffsetOutOfRange" xml:space="preserve">
    <value>Offset must be within plus or minus 14 hours.</value>
  </data>
  <data name="Argument_OffsetPrecision" xml:space="preserve">
    <value>Offset must be specified in whole minutes.</value>
  </data>
  <data name="Argument_OffsetUtcMismatch" xml:space="preserve">
    <value>The UTC Offset for Utc DateTime instances must be 0.</value>
  </data>
  <data name="Argument_OneOfCulturesNotSupported" xml:space="preserve">
    <value>Culture name {0} or {1} is not supported.</value>
  </data>
  <data name="Argument_OnlyMscorlib" xml:space="preserve">
    <value>Only mscorlib's assembly is valid.</value>
  </data>
  <data name="Argument_OutOfOrderDateTimes" xml:space="preserve">
    <value>The DateStart property must come before the DateEnd property.</value>
  </data>
  <data name="Argument_PathEmpty" xml:space="preserve">
    <value>Path cannot be the empty string or all whitespace.</value>
  </data>
  <data name="Argument_PreAllocatedAlreadyAllocated" xml:space="preserve">
    <value>'preAllocated' is already in use.</value>
  </data>
  <data name="Argument_RecursiveFallback" xml:space="preserve">
    <value>Recursive fallback not allowed for character \\u{0:X4}.</value>
  </data>
  <data name="Argument_RecursiveFallbackBytes" xml:space="preserve">
    <value>Recursive fallback not allowed for bytes {0}.</value>
  </data>
  <data name="Argument_RedefinedLabel" xml:space="preserve">
    <value>Label multiply defined.</value>
  </data>
  <data name="Argument_ResolveField" xml:space="preserve">
    <value>Token {0:x} is not a valid FieldInfo token in the scope of module {1}.</value>
  </data>
  <data name="Argument_ResolveFieldHandle" xml:space="preserve">
    <value>Type handle '{0}' and field handle with declaring type '{1}' are incompatible. Get RuntimeFieldHandle and declaring RuntimeTypeHandle off the same FieldInfo.</value>
  </data>
  <data name="Argument_ResolveMember" xml:space="preserve">
    <value>Token {0:x} is not a valid MemberInfo token in the scope of module {1}.</value>
  </data>
  <data name="Argument_ResolveMethod" xml:space="preserve">
    <value>Token {0:x} is not a valid MethodBase token in the scope of module {1}.</value>
  </data>
  <data name="Argument_ResolveMethodHandle" xml:space="preserve">
    <value>Type handle '{0}' and method handle with declaring type '{1}' are incompatible. Get RuntimeMethodHandle and declaring RuntimeTypeHandle off the same MethodBase.</value>
  </data>
  <data name="Argument_ResolveModuleType" xml:space="preserve">
    <value>Token {0} resolves to the special module type representing this module.</value>
  </data>
  <data name="Argument_ResolveString" xml:space="preserve">
    <value>Token {0:x} is not a valid string token in the scope of module {1}.</value>
  </data>
  <data name="Argument_ResolveType" xml:space="preserve">
    <value>Token {0:x} is not a valid Type token in the scope of module {1}.</value>
  </data>
  <data name="Argument_ResultCalendarRange" xml:space="preserve">
    <value>The result is out of the supported range for this calendar. The result should be between {0} (Gregorian date) and {1} (Gregorian date), inclusive.</value>
  </data>
  <data name="Argument_SemaphoreInitialMaximum" xml:space="preserve">
    <value>The initial count for the semaphore must be greater than or equal to zero and less than the maximum count.</value>
  </data>
  <data name="Argument_ShouldNotSpecifyExceptionType" xml:space="preserve">
    <value>Should not specify exception type for catch clause for filter block.</value>
  </data>
  <data name="Argument_ShouldOnlySetVisibilityFlags" xml:space="preserve">
    <value>Should only set visibility flags when creating EnumBuilder.</value>
  </data>
  <data name="Argument_SigIsFinalized" xml:space="preserve">
    <value>Completed signature cannot be modified.</value>
  </data>
  <data name="Argument_StreamNotReadable" xml:space="preserve">
    <value>Stream was not readable.</value>
  </data>
  <data name="Argument_StreamNotWritable" xml:space="preserve">
    <value>Stream was not writable.</value>
  </data>
  <data name="Argument_StringFirstCharIsZero" xml:space="preserve">
    <value>The first char in the string is the null character.</value>
  </data>
  <data name="Argument_StringZeroLength" xml:space="preserve">
    <value>String cannot be of zero length.</value>
  </data>
  <data name="Argument_StructMustNotBeValueClass" xml:space="preserve">
    <value>The structure must not be a value class.</value>
  </data>
  <data name="Argument_TimeSpanHasSeconds" xml:space="preserve">
    <value>The TimeSpan parameter cannot be specified more precisely than whole minutes.</value>
  </data>
  <data name="Argument_TimeZoneInfoBadTZif" xml:space="preserve">
    <value>The tzfile does not begin with the magic characters 'TZif'.  Please verify that the file is not corrupt.</value>
  </data>
  <data name="Argument_TimeZoneInfoInvalidTZif" xml:space="preserve">
    <value>The TZif data structure is corrupt.</value>
  </data>
  <data name="Argument_ToExclusiveLessThanFromExclusive" xml:space="preserve">
    <value>fromInclusive must be less than or equal to toExclusive.</value>
  </data>
  <data name="Argument_TooManyFinallyClause" xml:space="preserve">
    <value>Exception blocks may have at most one finally clause.</value>
  </data>
  <data name="Argument_TransitionTimesAreIdentical" xml:space="preserve">
    <value>The DaylightTransitionStart property must not equal the DaylightTransitionEnd property.</value>
  </data>
  <data name="Argument_TypedReferenceInvalidField" xml:space="preserve">
    <value>Field '{0}' in TypedReferences cannot be static.</value>
  </data>
  <data name="Argument_TypeIsWinRTType" xml:space="preserve">
    <value>The type must not be a Windows Runtime type.</value>
  </data>
  <data name="Argument_TypeMustBeVisibleFromCom" xml:space="preserve">
    <value>The specified type must be visible from COM.</value>
  </data>
  <data name="Argument_TypeMustNotBeComImport" xml:space="preserve">
    <value>The type must not be imported from COM.</value>
  </data>
  <data name="Argument_TypeNameTooLong" xml:space="preserve">
    <value>Type name was too long. The fully qualified type name must be less than 1,024 characters.</value>
  </data>
  <data name="Argument_TypeNotActivatableViaWindowsRuntime" xml:space="preserve">
    <value>Type '{0}' does not have an activation factory because it is not activatable by Windows Runtime.</value>
  </data>
  <data name="Argument_TypeNotComObject" xml:space="preserve">
    <value>The type must be __ComObject or be derived from __ComObject.</value>
  </data>
  <data name="Argument_TypeNotValid" xml:space="preserve">
    <value>The Type object is not valid.</value>
  </data>
  <data name="Argument_UnclosedExceptionBlock" xml:space="preserve">
    <value>The IL Generator cannot be used while there are unclosed exceptions.</value>
  </data>
  <data name="Argument_Unexpected_TypeSource" xml:space="preserve">
    <value>Unexpected TypeKind when marshaling Windows.Foundation.TypeName.</value>
  </data>
  <data name="Argument_UnknownUnmanagedCallConv" xml:space="preserve">
    <value>Unknown unmanaged calling convention for function signature.</value>
  </data>
  <data name="Argument_UnmanagedMemAccessorWrapAround" xml:space="preserve">
    <value>The UnmanagedMemoryAccessor capacity and offset would wrap around the high end of the address space.</value>
  </data>
  <data name="Argument_UnmatchedMethodForLocal" xml:space="preserve">
    <value>Local passed in does not belong to this ILGenerator.</value>
  </data>
  <data name="Argument_UnmatchingSymScope" xml:space="preserve">
    <value>Non-matching symbol scope.</value>
  </data>
  <data name="Argument_UTCOutOfRange" xml:space="preserve">
    <value>The UTC time represented when the offset is applied must be between year 0 and 10,000.</value>
  </data>
  <data name="Argument_WaitHandleNameTooLong" xml:space="preserve">
    <value>The length of the name exceeds the maximum limit.</value>
  </data>
  <data name="Argument_WinRTSystemRuntimeType" xml:space="preserve">
    <value>Cannot marshal type '{0}' to Windows Runtime. Only 'System.RuntimeType' is supported.</value>
  </data>
  <data name="ArgumentException_BadMethodImplBody" xml:space="preserve">
    <value>MethodOverride's body must be from this type.</value>
  </data>
  <data name="ArgumentException_BufferNotFromPool" xml:space="preserve">
    <value>The buffer is not associated with this pool and may not be returned to it.</value>
  </data>
  <data name="ArgumentException_OtherNotArrayOfCorrectLength" xml:space="preserve">
    <value>Object is not a array with the same number of elements as the array to compare it to.</value>
  </data>
  <data name="ArgumentException_NotIsomorphic" xml:space="preserve">
    <value>Object contains non-primitive or non-blittable data.</value>
  </data>
  <data name="ArgumentException_TupleIncorrectType" xml:space="preserve">
    <value>Argument must be of type {0}.</value>
  </data>
  <data name="ArgumentException_TupleLastArgumentNotATuple" xml:space="preserve">
    <value>The last element of an eight element tuple must be a Tuple.</value>
  </data>
  <data name="ArgumentException_ValueTupleIncorrectType" xml:space="preserve">
    <value>Argument must be of type {0}.</value>
  </data>
  <data name="ArgumentException_ValueTupleLastArgumentNotAValueTuple" xml:space="preserve">
    <value>The last element of an eight element ValueTuple must be a ValueTuple.</value>
  </data>
  <data name="ArgumentNull_Array" xml:space="preserve">
    <value>Array cannot be null.</value>
  </data>
  <data name="ArgumentNull_ArrayElement" xml:space="preserve">
    <value>At least one element in the specified array was null.</value>
  </data>
  <data name="ArgumentNull_ArrayValue" xml:space="preserve">
    <value>Found a null value within an array.</value>
  </data>
  <data name="ArgumentNull_Assembly" xml:space="preserve">
    <value>Assembly cannot be null.</value>
  </data>
  <data name="ArgumentNull_AssemblyName" xml:space="preserve">
    <value>AssemblyName cannot be null.</value>
  </data>
  <data name="ArgumentNull_AssemblyNameName" xml:space="preserve">
    <value>AssemblyName.Name cannot be null or an empty string.</value>
  </data>
  <data name="ArgumentNull_Buffer" xml:space="preserve">
    <value>Buffer cannot be null.</value>
  </data>
  <data name="ArgumentNull_Child" xml:space="preserve">
    <value>Cannot have a null child.</value>
  </data>
  <data name="ArgumentNull_Collection" xml:space="preserve">
    <value>Collection cannot be null.</value>
  </data>
  <data name="ArgumentNull_Dictionary" xml:space="preserve">
    <value>Dictionary cannot be null.</value>
  </data>
  <data name="ArgumentNull_FileName" xml:space="preserve">
    <value>File name cannot be null.</value>
  </data>
  <data name="ArgumentNull_Generic" xml:space="preserve">
    <value>Value cannot be null.</value>
  </data>
  <data name="ArgumentNull_GUID" xml:space="preserve">
    <value>GUID cannot be null.</value>
  </data>
  <data name="ArgumentNull_Key" xml:space="preserve">
    <value>Key cannot be null.</value>
  </data>
  <data name="ArgumentNull_Path" xml:space="preserve">
    <value>Path cannot be null.</value>
  </data>
  <data name="ArgumentNull_SafeHandle" xml:space="preserve">
    <value>SafeHandle cannot be null.</value>
  </data>
  <data name="ArgumentNull_Stream" xml:space="preserve">
    <value>Stream cannot be null.</value>
  </data>
  <data name="ArgumentNull_String" xml:space="preserve">
    <value>String reference not set to an instance of a String.</value>
  </data>
  <data name="ArgumentNull_Type" xml:space="preserve">
    <value>Type cannot be null.</value>
  </data>
  <data name="ArgumentNull_TypedRefType" xml:space="preserve">
    <value>Type in TypedReference cannot be null.</value>
  </data>
  <data name="ArgumentNull_Waithandles" xml:space="preserve">
    <value>The waitHandles parameter cannot be null.</value>
  </data>
  <data name="ArgumentOutOfRange_ActualValue" xml:space="preserve">
    <value>Actual value was {0}.</value>
  </data>
  <data name="ArgumentOutOfRange_AddressSpace" xml:space="preserve">
    <value>The number of bytes cannot exceed the virtual address space on a 32 bit machine.</value>
  </data>
  <data name="ArgumentOutOfRange_AddValue" xml:space="preserve">
    <value>Value to add was out of range.</value>
  </data>
  <data name="ArgumentOutOfRange_ArrayLB" xml:space="preserve">
    <value>Number was less than the array's lower bound in the first dimension.</value>
  </data>
  <data name="ArgumentOutOfRange_ArrayLBAndLength" xml:space="preserve">
    <value>Higher indices will exceed Int32.MaxValue because of large lower bound and/or length.</value>
  </data>
  <data name="ArgumentOutOfRange_BadHourMinuteSecond" xml:space="preserve">
    <value>Hour, Minute, and Second parameters describe an un-representable DateTime.</value>
  </data>
  <data name="ArgumentOutOfRange_BadYearMonthDay" xml:space="preserve">
    <value>Year, Month, and Day parameters describe an un-representable DateTime.</value>
  </data>
  <data name="ArgumentOutOfRange_BiggerThanCollection" xml:space="preserve">
    <value>Larger than collection size.</value>
  </data>
  <data name="ArgumentOutOfRange_BinaryReaderFillBuffer" xml:space="preserve">
    <value>The number of bytes requested does not fit into BinaryReader's internal buffer.</value>
  </data>
  <data name="ArgumentOutOfRange_Bounds_Lower_Upper" xml:space="preserve">
    <value>Argument must be between {0} and {1}.</value>
  </data>
  <data name="ArgumentOutOfRange_CalendarRange" xml:space="preserve">
    <value>Specified time is not supported in this calendar. It should be between {0} (Gregorian date) and {1} (Gregorian date), inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_Capacity" xml:space="preserve">
    <value>Capacity exceeds maximum capacity.</value>
  </data>
  <data name="ArgumentOutOfRange_Count" xml:space="preserve">
    <value>Count must be positive and count must refer to a location within the string/array/collection.</value>
  </data>
  <data name="ArgumentOutOfRange_DateArithmetic" xml:space="preserve">
    <value>The added or subtracted value results in an un-representable DateTime.</value>
  </data>
  <data name="ArgumentOutOfRange_DateTimeBadMonths" xml:space="preserve">
    <value>Months value must be between +/-120000.</value>
  </data>
  <data name="ArgumentOutOfRange_DateTimeBadTicks" xml:space="preserve">
    <value>Ticks must be between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.</value>
  </data>
  <data name="ArgumentOutOfRange_DateTimeBadYears" xml:space="preserve">
    <value>Years value must be between +/-10000.</value>
  </data>
  <data name="ArgumentOutOfRange_Day" xml:space="preserve">
    <value>Day must be between 1 and {0} for month {1}.</value>
  </data>
  <data name="ArgumentOutOfRange_DayOfWeek" xml:space="preserve">
    <value>The DayOfWeek enumeration must be in the range 0 through 6.</value>
  </data>
  <data name="ArgumentOutOfRange_DayParam" xml:space="preserve">
    <value>The Day parameter must be in the range 1 through 31.</value>
  </data>
  <data name="ArgumentOutOfRange_DecimalRound" xml:space="preserve">
    <value>Decimal can only round to between 0 and 28 digits of precision.</value>
  </data>
  <data name="ArgumentOutOfRange_DecimalScale" xml:space="preserve">
    <value>Decimal's scale value must be between 0 and 28, inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_EndIndexStartIndex" xml:space="preserve">
    <value>endIndex cannot be greater than startIndex.</value>
  </data>
  <data name="ArgumentOutOfRange_Enum" xml:space="preserve">
    <value>Enum value was out of legal range.</value>
  </data>
  <data name="ArgumentOutOfRange_Era" xml:space="preserve">
    <value>Time value was out of era range.</value>
  </data>
  <data name="ArgumentOutOfRange_FileLengthTooBig" xml:space="preserve">
    <value>Specified file length was too large for the file system.</value>
  </data>
  <data name="ArgumentOutOfRange_FileTimeInvalid" xml:space="preserve">
    <value>Not a valid Win32 FileTime.</value>
  </data>
  <data name="ArgumentOutOfRange_GenericPositive" xml:space="preserve">
    <value>Value must be positive.</value>
  </data>
  <data name="ArgumentOutOfRange_GetByteCountOverflow" xml:space="preserve">
    <value>Too many characters. The resulting number of bytes is larger than what can be returned as an int.</value>
  </data>
  <data name="ArgumentOutOfRange_GetCharCountOverflow" xml:space="preserve">
    <value>Too many bytes. The resulting number of chars is larger than what can be returned as an int.</value>
  </data>
  <data name="ArgumentOutOfRange_HashtableLoadFactor" xml:space="preserve">
    <value>Load factor needs to be between 0.1 and 1.0.</value>
  </data>
  <data name="ArgumentOutOfRange_HugeArrayNotSupported" xml:space="preserve">
    <value>Arrays larger than 2GB are not supported.</value>
  </data>
  <data name="ArgumentOutOfRange_Index" xml:space="preserve">
    <value>Index was out of range. Must be non-negative and less than the size of the collection.</value>
  </data>
  <data name="ArgumentOutOfRange_IndexCount" xml:space="preserve">
    <value>Index and count must refer to a location within the string.</value>
  </data>
  <data name="ArgumentOutOfRange_IndexCountBuffer" xml:space="preserve">
    <value>Index and count must refer to a location within the buffer.</value>
  </data>
  <data name="ArgumentOutOfRange_IndexLargerThanMaxValue" xml:space="preserve">
    <value>This collection cannot work with indices larger than Int32.MaxValue - 1 (0x7FFFFFFF - 1).</value>
  </data>
  <data name="ArgumentOutOfRange_IndexLength" xml:space="preserve">
    <value>Index and length must refer to a location within the string.</value>
  </data>
  <data name="ArgumentOutOfRange_IndexString" xml:space="preserve">
    <value>Index was out of range. Must be non-negative and less than the length of the string.</value>
  </data>
  <data name="ArgumentOutOfRange_InputTooLarge" xml:space="preserve">
    <value>Input is too large to be processed.</value>
  </data>
  <data name="ArgumentOutOfRange_InvalidEraValue" xml:space="preserve">
    <value>Era value was not valid.</value>
  </data>
  <data name="ArgumentOutOfRange_InvalidHighSurrogate" xml:space="preserve">
    <value>A valid high surrogate character is between 0xd800 and 0xdbff, inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_InvalidLowSurrogate" xml:space="preserve">
    <value>A valid low surrogate character is between 0xdc00 and 0xdfff, inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_InvalidUTF32" xml:space="preserve">
    <value>A valid UTF32 value is between 0x000000 and 0x10ffff, inclusive, and should not include surrogate codepoint values (0x00d800 ~ 0x00dfff).</value>
  </data>
  <data name="ArgumentOutOfRange_Length" xml:space="preserve">
    <value>The specified length exceeds maximum capacity of SecureString.</value>
  </data>
  <data name="ArgumentOutOfRange_LengthGreaterThanCapacity" xml:space="preserve">
    <value>The length cannot be greater than the capacity.</value>
  </data>
  <data name="ArgumentOutOfRange_LengthTooLarge" xml:space="preserve">
    <value>The specified length exceeds the maximum value of {0}.</value>
  </data>
  <data name="ArgumentOutOfRange_LessEqualToIntegerMaxVal" xml:space="preserve">
    <value>Argument must be less than or equal to 2^31 - 1 milliseconds.</value>
  </data>
  <data name="ArgumentOutOfRange_ListInsert" xml:space="preserve">
    <value>Index must be within the bounds of the List.</value>
  </data>
  <data name="ArgumentOutOfRange_Month" xml:space="preserve">
    <value>Month must be between one and twelve.</value>
  </data>
  <data name="ArgumentOutOfRange_MonthParam" xml:space="preserve">
    <value>The Month parameter must be in the range 1 through 12.</value>
  </data>
  <data name="ArgumentOutOfRange_MustBeNonNegInt32" xml:space="preserve">
    <value>Value must be non-negative and less than or equal to Int32.MaxValue.</value>
  </data>
  <data name="ArgumentOutOfRange_MustBeNonNegNum" xml:space="preserve">
    <value>'{0}' must be non-negative.</value>
  </data>
  <data name="ArgumentOutOfRange_MustBePositive" xml:space="preserve">
    <value>'{0}' must be greater than zero.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegOrNegative1" xml:space="preserve">
    <value>Number must be either non-negative and less than or equal to Int32.MaxValue or -1.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedPosNum" xml:space="preserve">
    <value>Positive number required.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedValidId" xml:space="preserve">
    <value>The ID parameter must be in the range {0} through {1}.</value>
  </data>
  <data name="ArgumentOutOfRange_NegativeCapacity" xml:space="preserve">
    <value>Capacity must be positive.</value>
  </data>
  <data name="ArgumentOutOfRange_NegativeCount" xml:space="preserve">
    <value>Count cannot be less than zero.</value>
  </data>
  <data name="ArgumentOutOfRange_NegativeLength" xml:space="preserve">
    <value>Length cannot be less than zero.</value>
  </data>
  <data name="ArgumentOutOfRange_OffsetLength" xml:space="preserve">
    <value>Offset and length must refer to a position in the string.</value>
  </data>
  <data name="ArgumentOutOfRange_OffsetOut" xml:space="preserve">
    <value>Either offset did not refer to a position in the string, or there is an insufficient length of destination character array.</value>
  </data>
  <data name="ArgumentOutOfRange_ParamSequence" xml:space="preserve">
    <value>The specified parameter index is not in range.</value>
  </data>
  <data name="ArgumentOutOfRange_PartialWCHAR" xml:space="preserve">
    <value>Pointer startIndex and length do not refer to a valid string.</value>
  </data>
  <data name="ArgumentOutOfRange_PeriodTooLarge" xml:space="preserve">
    <value>Period must be less than 2^32-2.</value>
  </data>
  <data name="ArgumentOutOfRange_PositionLessThanCapacityRequired" xml:space="preserve">
    <value>The position may not be greater or equal to the capacity of the accessor.</value>
  </data>
  <data name="ArgumentOutOfRange_Range" xml:space="preserve">
    <value>Valid values are between {0} and {1}, inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_RoundingDigits" xml:space="preserve">
    <value>Rounding digits must be between 0 and 15, inclusive.</value>
  </data>
  <data name="ArgumentOutOfRange_SmallCapacity" xml:space="preserve">
    <value>capacity was less than the current size.</value>
  </data>
  <data name="ArgumentOutOfRange_SmallMaxCapacity" xml:space="preserve">
    <value>MaxCapacity must be one or greater.</value>
  </data>
  <data name="ArgumentOutOfRange_StartIndex" xml:space="preserve">
    <value>StartIndex cannot be less than zero.</value>
  </data>
  <data name="ArgumentOutOfRange_StartIndexLargerThanLength" xml:space="preserve">
    <value>startIndex cannot be larger than length of string.</value>
  </data>
  <data name="ArgumentOutOfRange_StartIndexLessThanLength" xml:space="preserve">
    <value>startIndex must be less than length of string.</value>
  </data>
  <data name="ArgumentOutOfRange_StreamLength" xml:space="preserve">
    <value>Stream length must be non-negative and less than 2^31 - 1 - origin.</value>
  </data>
  <data name="ArgumentOutOfRange_TimeoutTooLarge" xml:space="preserve">
    <value>Time-out interval must be less than 2^32-2.</value>
  </data>
  <data name="ArgumentOutOfRange_UIntPtrMax" xml:space="preserve">
    <value>The length of the buffer must be less than the maximum UIntPtr value for your platform.</value>
  </data>
  <data name="ArgumentOutOfRange_UnmanagedMemStreamLength" xml:space="preserve">
    <value>UnmanagedMemoryStream length must be non-negative and less than 2^63 - 1 - baseAddress.</value>
  </data>
  <data name="ArgumentOutOfRange_UnmanagedMemStreamWrapAround" xml:space="preserve">
    <value>The UnmanagedMemoryStream capacity would wrap around the high end of the address space.</value>
  </data>
  <data name="ArgumentOutOfRange_UtcOffset" xml:space="preserve">
    <value>The TimeSpan parameter must be within plus or minus 14.0 hours.</value>
  </data>
  <data name="ArgumentOutOfRange_UtcOffsetAndDaylightDelta" xml:space="preserve">
    <value>The sum of the BaseUtcOffset and DaylightDelta properties must within plus or minus 14.0 hours.</value>
  </data>
  <data name="ArgumentOutOfRange_Version" xml:space="preserve">
    <value>Version's parameters must be greater than or equal to zero.</value>
  </data>
  <data name="ArgumentOutOfRange_Week" xml:space="preserve">
    <value>The Week parameter must be in the range 1 through 5.</value>
  </data>
  <data name="ArgumentOutOfRange_Year" xml:space="preserve">
    <value>Year must be between 1 and 9999.</value>
  </data>
  <data name="Arithmetic_NaN" xml:space="preserve">
    <value>Function does not accept floating point Not-a-Number values.</value>
  </data>
  <data name="ArrayTypeMismatch_CantAssignType" xml:space="preserve">
    <value>Source array type cannot be assigned to destination array type.</value>
  </data>
  <data name="ArrayTypeMismatch_ConstrainedCopy" xml:space="preserve">
    <value>Array.ConstrainedCopy will only work on array types that are provably compatible, without any form of boxing, unboxing, widening, or casting of each array element.  Change the array types (i.e., copy a Derived[] to a Base[]), or use a mitigation strategy in the CER for Array.Copy's less powerful reliability contract, such as cloning the array or throwing away the potentially corrupt destination array.</value>
  </data>
  <data name="AssemblyLoadContext_Unload_CannotUnloadIfNotCollectible" xml:space="preserve">
    <value>Cannot unload non-collectible AssemblyLoadContext.</value>
  </data>
  <data name="AssemblyLoadContext_Verify_NotUnloading" xml:space="preserve">
    <value>AssemblyLoadContext is unloading or was already unloaded.</value>
  </data>
  <data name="AssertionFailed" xml:space="preserve">
    <value>Assertion failed.</value>
  </data>
  <data name="AssertionFailed_Cnd" xml:space="preserve">
    <value>Assertion failed: {0}</value>
  </data>
  <data name="AssumptionFailed" xml:space="preserve">
    <value>Assumption failed.</value>
  </data>
  <data name="AssumptionFailed_Cnd" xml:space="preserve">
    <value>Assumption failed: {0}</value>
  </data>
  <data name="AsyncMethodBuilder_InstanceNotInitialized" xml:space="preserve">
    <value>The builder was not properly initialized.</value>
  </data>
  <data name="BadImageFormat_BadILFormat" xml:space="preserve">
    <value>Bad IL format.</value>
  </data>
  <data name="BadImageFormat_InvalidType" xml:space="preserve">
    <value>Corrupt .resources file.  The specified type doesn't exist.</value>
  </data>
  <data name="BadImageFormat_NegativeStringLength" xml:space="preserve">
    <value>Corrupt .resources file. String length must be non-negative.</value>
  </data>
  <data name="BadImageFormat_ParameterSignatureMismatch" xml:space="preserve">
    <value>The parameters and the signature of the method don't match.</value>
  </data>
  <data name="BadImageFormat_ResType_SerBlobMismatch" xml:space="preserve">
    <value>The type serialized in the .resources file was not the same type that the .resources file said it contained. Expected '{0}' but read '{1}'.</value>
  </data>
  <data name="BadImageFormat_ResourceDataLengthInvalid" xml:space="preserve">
    <value>Corrupt .resources file.  The specified data length '{0}' is not a valid position in the stream.</value>
  </data>
  <data name="BadImageFormat_ResourceNameCorrupted" xml:space="preserve">
    <value>Corrupt .resources file. A resource name extends past the end of the stream.</value>
  </data>
  <data name="BadImageFormat_ResourceNameCorrupted_NameIndex" xml:space="preserve">
    <value>Corrupt .resources file. The resource name for name index {0} extends past the end of the stream.</value>
  </data>
  <data name="BadImageFormat_ResourcesDataInvalidOffset" xml:space="preserve">
    <value>Corrupt .resources file. Invalid offset '{0}' into data section.</value>
  </data>
  <data name="BadImageFormat_ResourcesHeaderCorrupted" xml:space="preserve">
    <value>Corrupt .resources file. Unable to read resources from this file because of invalid header information. Try regenerating the .resources file.</value>
  </data>
  <data name="BadImageFormat_ResourcesIndexTooLong" xml:space="preserve">
    <value>Corrupt .resources file. String for name index '{0}' extends past the end of the file.</value>
  </data>
  <data name="BadImageFormat_ResourcesNameInvalidOffset" xml:space="preserve">
    <value>Corrupt .resources file. Invalid offset '{0}' into name section.</value>
  </data>
  <data name="BadImageFormat_ResourcesNameTooLong" xml:space="preserve">
    <value>Corrupt .resources file. Resource name extends past the end of the file.</value>
  </data>
  <data name="BadImageFormat_TypeMismatch" xml:space="preserve">
    <value>Corrupt .resources file.  The specified type doesn't match the available data in the stream.</value>
  </data>
  <data name="CancellationToken_CreateLinkedToken_TokensIsEmpty" xml:space="preserve">
    <value>No tokens were supplied.</value>
  </data>
  <data name="CancellationTokenSource_Disposed" xml:space="preserve">
    <value>The CancellationTokenSource has been disposed.</value>
  </data>
  <data name="ConcurrentCollection_SyncRoot_NotSupported" xml:space="preserve">
    <value>The SyncRoot property may not be used for the synchronization of concurrent collections.</value>
  </data>
  <data name="event_TaskCompleted" xml:space="preserve">
    <value>Task {2} completed.</value>
  </data>
  <data name="event_TaskScheduled" xml:space="preserve">
    <value>Task {2} scheduled to TaskScheduler {0}.</value>
  </data>
  <data name="event_TaskStarted" xml:space="preserve">
    <value>Task {2} executing.</value>
  </data>
  <data name="event_TaskWaitBegin" xml:space="preserve">
    <value>Beginning wait ({3}) on Task {2}.</value>
  </data>
  <data name="event_TaskWaitEnd" xml:space="preserve">
    <value>Ending wait on Task {2}.</value>
  </data>
  <data name="EventSource_AbstractMustNotDeclareEventMethods" xml:space="preserve">
    <value>Abstract event source must not declare event methods ({0} with ID {1}).</value>
  </data>
  <data name="EventSource_AbstractMustNotDeclareKTOC" xml:space="preserve">
    <value>Abstract event source must not declare {0} nested type.</value>
  </data>
  <data name="EventSource_AddScalarOutOfRange" xml:space="preserve">
    <value>Getting out of bounds during scalar addition.</value>
  </data>
  <data name="EventSource_BadHexDigit" xml:space="preserve">
    <value>Bad Hexidecimal digit "{0}".</value>
  </data>
  <data name="EventSource_ChannelTypeDoesNotMatchEventChannelValue" xml:space="preserve">
    <value>Channel {0} does not match event channel value {1}.</value>
  </data>
  <data name="EventSource_DataDescriptorsOutOfRange" xml:space="preserve">
    <value>Data descriptors are out of range.</value>
  </data>
  <data name="EventSource_DuplicateStringKey" xml:space="preserve">
    <value>Multiple definitions for string "{0}".</value>
  </data>
  <data name="EventSource_EnumKindMismatch" xml:space="preserve">
    <value>The type of {0} is not expected in {1}.</value>
  </data>
  <data name="EventSource_EvenHexDigits" xml:space="preserve">
    <value>Must have an even number of Hexidecimal digits.</value>
  </data>
  <data name="EventSource_EventChannelOutOfRange" xml:space="preserve">
    <value>Channel {0} has a value of {1} which is outside the legal range (16-254).</value>
  </data>
  <data name="EventSource_EventIdReused" xml:space="preserve">
    <value>Event {0} has ID {1} which is already in use.</value>
  </data>
  <data name="EventSource_EventMustHaveTaskIfNonDefaultOpcode" xml:space="preserve">
    <value>Event {0} (with ID {1}) has a non-default opcode but not a task.</value>
  </data>
  <data name="EventSource_EventMustNotBeExplicitImplementation" xml:space="preserve">
    <value>Event method {0} (with ID {1}) is an explicit interface method implementation. Re-write method as implicit implementation.</value>
  </data>
  <data name="EventSource_EventNameDoesNotEqualTaskPlusOpcode" xml:space="preserve">
    <value>Event {0} (with ID {1}) has a name that is not the concatenation of its task name and opcode.</value>
  </data>
  <data name="EventSource_EventNameReused" xml:space="preserve">
    <value>Event name {0} used more than once.  If you wish to overload a method, the overloaded method should have a NonEvent attribute.</value>
  </data>
  <data name="EventSource_EventParametersMismatch" xml:space="preserve">
    <value>Event {0} was called with {1} argument(s), but it is defined with {2} parameter(s).</value>
  </data>
  <data name="EventSource_EventSourceGuidInUse" xml:space="preserve">
    <value>An instance of EventSource with Guid {0} already exists.</value>
  </data>
  <data name="EventSource_EventTooBig" xml:space="preserve">
    <value>The payload for a single event is too large.</value>
  </data>
  <data name="EventSource_EventWithAdminChannelMustHaveMessage" xml:space="preserve">
    <value>Event {0} specifies an Admin channel {1}. It must specify a Message property.</value>
  </data>
  <data name="EventSource_IllegalKeywordsValue" xml:space="preserve">
    <value>Keyword {0} has a value of {1} which is outside the legal range (0-0x0000080000000000).</value>
  </data>
  <data name="EventSource_IllegalOpcodeValue" xml:space="preserve">
    <value>Opcode {0} has a value of {1} which is outside the legal range (11-238).</value>
  </data>
  <data name="EventSource_IllegalTaskValue" xml:space="preserve">
    <value>Task {0} has a value of {1} which is outside the legal range (1-65535).</value>
  </data>
  <data name="EventSource_IllegalValue" xml:space="preserve">
    <value>Illegal value "{0}" (prefix strings with @ to indicate a literal string).</value>
  </data>
  <data name="EventSource_IncorrentlyAuthoredTypeInfo" xml:space="preserve">
    <value>Incorrectly-authored TypeInfo - a type should be serialized as one field or as one group</value>
  </data>
  <data name="EventSource_InvalidCommand" xml:space="preserve">
    <value>Invalid command value.</value>
  </data>
  <data name="EventSource_InvalidEventFormat" xml:space="preserve">
    <value>Can't specify both etw event format flags.</value>
  </data>
  <data name="EventSource_KeywordCollision" xml:space="preserve">
    <value>Keywords {0} and {1} are defined with the same value ({2}).</value>
  </data>
  <data name="EventSource_KeywordNeedPowerOfTwo" xml:space="preserve">
    <value>Value {0} for keyword {1} needs to be a power of 2.</value>
  </data>
  <data name="EventSource_ListenerCreatedInsideCallback" xml:space="preserve">
    <value>Creating an EventListener inside a EventListener callback.</value>
  </data>
  <data name="EventSource_ListenerNotFound" xml:space="preserve">
    <value>Listener not found.</value>
  </data>
  <data name="EventSource_ListenerWriteFailure" xml:space="preserve">
    <value>An error occurred when writing to a listener.</value>
  </data>
  <data name="EventSource_MaxChannelExceeded" xml:space="preserve">
    <value>Attempt to define more than the maximum limit of 8 channels for a provider.</value>
  </data>
  <data name="EventSource_MismatchIdToWriteEvent" xml:space="preserve">
    <value>Event {0} was assigned event ID {1} but {2} was passed to WriteEvent.</value>
  </data>
  <data name="EventSource_NeedGuid" xml:space="preserve">
    <value>The Guid of an EventSource must be non zero.</value>
  </data>
  <data name="EventSource_NeedName" xml:space="preserve">
    <value>The name of an EventSource must not be null.</value>
  </data>
  <data name="EventSource_NeedPositiveId" xml:space="preserve">
    <value>Event IDs must be positive integers.</value>
  </data>
  <data name="EventSource_NoFreeBuffers" xml:space="preserve">
    <value>No Free Buffers available from the operating system (e.g. event rate too fast).</value>
  </data>
  <data name="EventSource_NonCompliantTypeError" xml:space="preserve">
    <value>The API supports only anonymous types or types decorated with the EventDataAttribute. Non-compliant type: {0} dataType.</value>
  </data>
  <data name="EventSource_NoRelatedActivityId" xml:space="preserve">
    <value>EventSource expects the first parameter of the Event method to be of type Guid and to be named "relatedActivityId" when calling WriteEventWithRelatedActivityId.</value>
  </data>
  <data name="EventSource_NotSupportedArrayOfBinary" xml:space="preserve">
    <value>Arrays of Binary are not supported.</value>
  </data>
  <data name="EventSource_NotSupportedArrayOfNil" xml:space="preserve">
    <value>Arrays of Nil are not supported.</value>
  </data>
  <data name="EventSource_NotSupportedArrayOfNullTerminatedString" xml:space="preserve">
    <value>Arrays of null-terminated string are not supported.</value>
  </data>
  <data name="EventSource_NotSupportedCustomSerializedData" xml:space="preserve">
    <value>Enumerables of custom-serialized data are not supported</value>
  </data>
  <data name="EventSource_NotSupportedNestedArraysEnums" xml:space="preserve">
    <value>Nested arrays/enumerables are not supported.</value>
  </data>
  <data name="EventSource_NullInput" xml:space="preserve">
    <value>Null passed as a event argument.</value>
  </data>
  <data name="EventSource_OpcodeCollision" xml:space="preserve">
    <value>Opcodes {0} and {1} are defined with the same value ({2}).</value>
  </data>
  <data name="EventSource_PinArrayOutOfRange" xml:space="preserve">
    <value>Pins are out of range.</value>
  </data>
  <data name="EventSource_RecursiveTypeDefinition" xml:space="preserve">
    <value>Recursive type definition is not supported.</value>
  </data>
  <data name="EventSource_StopsFollowStarts" xml:space="preserve">
    <value>An event with stop suffix must follow a corresponding event with a start suffix.</value>
  </data>
  <data name="EventSource_TaskCollision" xml:space="preserve">
    <value>Tasks {0} and {1} are defined with the same value ({2}).</value>
  </data>
  <data name="EventSource_TaskOpcodePairReused" xml:space="preserve">
    <value>Event {0} (with ID {1}) has the same task/opcode pair as event {2} (with ID {3}).</value>
  </data>
  <data name="EventSource_TooManyArgs" xml:space="preserve">
    <value>Too many arguments.</value>
  </data>
  <data name="EventSource_TooManyFields" xml:space="preserve">
    <value>Too many fields in structure.</value>
  </data>
  <data name="EventSource_ToString" xml:space="preserve">
    <value>EventSource({0}, {1})</value>
  </data>
  <data name="EventSource_TraitEven" xml:space="preserve">
    <value>There must be an even number of trait strings (they are key-value pairs).</value>
  </data>
  <data name="EventSource_TypeMustBeSealedOrAbstract" xml:space="preserve">
    <value>Event source types must be sealed or abstract.</value>
  </data>
  <data name="EventSource_TypeMustDeriveFromEventSource" xml:space="preserve">
    <value>Event source types must derive from EventSource.</value>
  </data>
  <data name="EventSource_UndefinedChannel" xml:space="preserve">
    <value>Use of undefined channel value {0} for event {1}.</value>
  </data>
  <data name="EventSource_UndefinedKeyword" xml:space="preserve">
    <value>Use of undefined keyword value {0} for event {1}.</value>
  </data>
  <data name="EventSource_UndefinedOpcode" xml:space="preserve">
    <value>Use of undefined opcode value {0} for event {1}.</value>
  </data>
  <data name="EventSource_UnknownEtwTrait" xml:space="preserve">
    <value>Unknown ETW trait "{0}".</value>
  </data>
  <data name="EventSource_UnsupportedEventTypeInManifest" xml:space="preserve">
    <value>Unsupported type {0} in event source.</value>
  </data>
  <data name="EventSource_UnsupportedMessageProperty" xml:space="preserve">
    <value>Event {0} specifies an illegal or unsupported formatting message ("{1}").</value>
  </data>
  <data name="EventSource_VarArgsParameterMismatch" xml:space="preserve">
    <value>Event {0} was called with a different type as defined (argument "{1}"). This may cause the event to be displayed incorrectly.</value>
  </data>
  <data name="Exception_EndOfInnerExceptionStack" xml:space="preserve">
    <value>--- End of inner exception stack trace ---</value>
  </data>
  <data name="Exception_EndStackTraceFromPreviousThrow" xml:space="preserve">
    <value>--- End of stack trace from previous location ---</value>
  </data>
  <data name="Exception_WasThrown" xml:space="preserve">
    <value>Exception of type '{0}' was thrown.</value>
  </data>
  <data name="ExecutionContext_ExceptionInAsyncLocalNotification" xml:space="preserve">
    <value>An exception was not handled in an AsyncLocal&lt;T&gt; notification callback.</value>
  </data>
  <data name="FileNotFound_ResolveAssembly" xml:space="preserve">
    <value>Could not resolve assembly '{0}'.</value>
  </data>
  <data name="Format_AttributeUsage" xml:space="preserve">
    <value>Duplicate AttributeUsageAttribute found on attribute type {0}.</value>
  </data>
  <data name="Format_Bad7BitInt" xml:space="preserve">
    <value>Too many bytes in what should have been a 7-bit encoded integer.</value>
  </data>
  <data name="Format_BadBase" xml:space="preserve">
    <value>Invalid digits for the specified base.</value>
  </data>
  <data name="Format_BadBase64Char" xml:space="preserve">
    <value>The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters.</value>
  </data>
  <data name="Format_BadBoolean" xml:space="preserve">
    <value>String '{0}' was not recognized as a valid Boolean.</value>
  </data>
  <data name="Format_BadDatePattern" xml:space="preserve">
    <value>Could not determine the order of year, month, and date from '{0}'.</value>
  </data>
  <data name="Format_BadDateTime" xml:space="preserve">
    <value>String '{0}' was not recognized as a valid DateTime.</value>
  </data>
  <data name="Format_BadDateTimeCalendar" xml:space="preserve">
    <value>The DateTime represented by the string '{0}' is not supported in calendar '{1}'.</value>
  </data>
  <data name="Format_BadDayOfWeek" xml:space="preserve">
    <value>String '{0}' was not recognized as a valid DateTime because the day of week was incorrect.</value>
  </data>
  <data name="Format_BadFormatSpecifier" xml:space="preserve">
    <value>Format specifier '{0}' was invalid.</value>
  </data>
  <data name="Format_NoFormatSpecifier" xml:space="preserve">
    <value>No format specifiers were provided.</value>
  </data>
  <data name="Format_BadHexChar" xml:space="preserve">
    <value>The input is not a valid hex string as it contains a non-hex character.</value>
  </data>
  <data name="Format_BadHexLength" xml:space="preserve">
    <value>The input is not a valid hex string as its length is not a multiple of 2.</value>
  </data>
  <data name="Format_BadQuote" xml:space="preserve">
    <value>Cannot find a matching quote character for the character '{0}'.</value>
  </data>
  <data name="Format_BadTimeSpan" xml:space="preserve">
    <value>String '{0}' was not recognized as a valid TimeSpan.</value>
  </data>
  <data name="Format_DateOutOfRange" xml:space="preserve">
    <value>The DateTime represented by the string '{0}' is out of range.</value>
  </data>
  <data name="Format_EmptyInputString" xml:space="preserve">
    <value>Input string was either empty or contained only whitespace.</value>
  </data>
  <data name="Format_ExtraJunkAtEnd" xml:space="preserve">
    <value>Additional non-parsable characters are at the end of the string.</value>
  </data>
  <data name="Format_GuidBrace" xml:space="preserve">
    <value>Expected {0xdddddddd, etc}.</value>
  </data>
  <data name="Format_GuidBraceAfterLastNumber" xml:space="preserve">
    <value>Could not find a brace, or the length between the previous token and the brace was zero (i.e., '0x,'etc.).</value>
  </data>
  <data name="Format_GuidComma" xml:space="preserve">
    <value>Could not find a comma, or the length between the previous token and the comma was zero (i.e., '0x,'etc.).</value>
  </data>
  <data name="Format_GuidDashes" xml:space="preserve">
    <value>Dashes are in the wrong position for GUID parsing.</value>
  </data>
  <data name="Format_GuidEndBrace" xml:space="preserve">
    <value>Could not find the ending brace.</value>
  </data>
  <data name="Format_GuidHexPrefix" xml:space="preserve">
    <value>Expected 0x prefix.</value>
  </data>
  <data name="Format_GuidInvalidChar" xml:space="preserve">
    <value>Guid string should only contain hexadecimal characters.</value>
  </data>
  <data name="Format_GuidInvLen" xml:space="preserve">
    <value>Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).</value>
  </data>
  <data name="Format_GuidUnrecognized" xml:space="preserve">
    <value>Unrecognized Guid format.</value>
  </data>
  <data name="Format_IndexOutOfRange" xml:space="preserve">
    <value>Index (zero based) must be greater than or equal to zero and less than the size of the argument list.</value>
  </data>
  <data name="Format_InvalidEnumFormatSpecification" xml:space="preserve">
    <value>Format string can be only "G", "g", "X", "x", "F", "f", "D" or "d".</value>
  </data>
  <data name="Format_InvalidGuidFormatSpecification" xml:space="preserve">
    <value>Format string can be only "D", "d", "N", "n", "P", "p", "B", "b", "X" or "x".</value>
  </data>
  <data name="Format_InvalidString" xml:space="preserve">
    <value>Input string was not in a correct format.</value>
  </data>
  <data name="Format_MissingIncompleteDate" xml:space="preserve">
    <value>There must be at least a partial date with a year present in the input string '{0}'.</value>
  </data>
  <data name="Format_NeedSingleChar" xml:space="preserve">
    <value>String must be exactly one character long.</value>
  </data>
  <data name="Format_NoParsibleDigits" xml:space="preserve">
    <value>Could not find any recognizable digits.</value>
  </data>
  <data name="Format_OffsetOutOfRange" xml:space="preserve">
    <value>The time zone offset of string '{0}' must be within plus or minus 14 hours.</value>
  </data>
  <data name="Format_RepeatDateTimePattern" xml:space="preserve">
    <value>DateTime pattern '{0}' appears more than once with different values.</value>
  </data>
  <data name="Format_StringZeroLength" xml:space="preserve">
    <value>String cannot have zero length.</value>
  </data>
  <data name="Format_UnknownDateTimeWord" xml:space="preserve">
    <value>The string '{0}' was not recognized as a valid DateTime. There is an unknown word starting at index '{1}'.</value>
  </data>
  <data name="Format_UTCOutOfRange" xml:space="preserve">
    <value>The UTC representation of the date '{0}' falls outside the year range 1-9999.</value>
  </data>
  <data name="Globalization_cp_1200" xml:space="preserve">
    <value>Unicode</value>
  </data>
  <data name="Globalization_cp_12000" xml:space="preserve">
    <value>Unicode (UTF-32)</value>
  </data>
  <data name="Globalization_cp_12001" xml:space="preserve">
    <value>Unicode (UTF-32 Big-Endian)</value>
  </data>
  <data name="Globalization_cp_1201" xml:space="preserve">
    <value>Unicode (Big-Endian)</value>
  </data>
  <data name="Globalization_cp_20127" xml:space="preserve">
    <value>US-ASCII</value>
  </data>
  <data name="Globalization_cp_28591" xml:space="preserve">
    <value>Western European (ISO)</value>
  </data>
  <data name="Globalization_cp_65000" xml:space="preserve">
    <value>Unicode (UTF-7)</value>
  </data>
  <data name="Globalization_cp_65001" xml:space="preserve">
    <value>Unicode (UTF-8)</value>
  </data>
  <data name="IndexOutOfRange_ArrayRankIndex" xml:space="preserve">
    <value>Array does not have that many dimensions.</value>
  </data>
  <data name="IndexOutOfRange_UMSPosition" xml:space="preserve">
    <value>Unmanaged memory stream position was beyond the capacity of the stream.</value>
  </data>
  <data name="InsufficientMemory_MemFailPoint" xml:space="preserve">
    <value>Insufficient available memory to meet the expected demands of an operation at this time.  Please try again later.</value>
  </data>
  <data name="InsufficientMemory_MemFailPoint_TooBig" xml:space="preserve">
    <value>Insufficient memory to meet the expected demands of an operation, and this system is likely to never satisfy this request.  If this is a 32 bit system, consider booting in 3 GB mode.</value>
  </data>
  <data name="InsufficientMemory_MemFailPoint_VAFrag" xml:space="preserve">
    <value>Insufficient available memory to meet the expected demands of an operation at this time, possibly due to virtual address space fragmentation.  Please try again later.</value>
  </data>
  <data name="Interop_COM_TypeMismatch" xml:space="preserve">
    <value>Type mismatch between source and destination types.</value>
  </data>
  <data name="Interop_Marshal_Unmappable_Char" xml:space="preserve">
    <value>Cannot marshal: Encountered unmappable character.</value>
  </data>
  <data name="Interop_Marshal_SafeHandle_InvalidOperation" xml:space="preserve">
    <value>Structures containing SafeHandle fields are not allowed in this operation.</value>
  </data>
  <data name="Interop_Marshal_CannotCreateSafeHandleField" xml:space="preserve">
    <value>SafeHandle fields cannot be created from an unmanaged handle.</value>
  </data>
  <data name="Interop_Marshal_CannotCreateCriticalHandleField" xml:space="preserve">
    <value>CriticalHandle fields cannot be created from an unmanaged handle.</value>
  </data>
  <data name="InvalidCast_CannotCastNullToValueType" xml:space="preserve">
    <value>Null object cannot be converted to a value type.</value>
  </data>
  <data name="InvalidCast_CannotCoerceByRefVariant" xml:space="preserve">
    <value>Object cannot be coerced to the original type of the ByRef VARIANT it was obtained from.</value>
  </data>
  <data name="InvalidCast_DBNull" xml:space="preserve">
    <value>Object cannot be cast to DBNull.</value>
  </data>
  <data name="InvalidCast_DownCastArrayElement" xml:space="preserve">
    <value>At least one element in the source array could not be cast down to the destination array type.</value>
  </data>
  <data name="InvalidCast_Empty" xml:space="preserve">
    <value>Object cannot be cast to Empty.</value>
  </data>
  <data name="InvalidCast_FromDBNull" xml:space="preserve">
    <value>Object cannot be cast from DBNull to other types.</value>
  </data>
  <data name="InvalidCast_FromTo" xml:space="preserve">
    <value>Invalid cast from '{0}' to '{1}'.</value>
  </data>
  <data name="InvalidCast_IConvertible" xml:space="preserve">
    <value>Object must implement IConvertible.</value>
  </data>
  <data name="InvalidCast_OATypeMismatch" xml:space="preserve">
    <value>OleAut reported a type mismatch.</value>
  </data>
  <data name="InvalidCast_StoreArrayElement" xml:space="preserve">
    <value>Object cannot be stored in an array of this type.</value>
  </data>
  <data name="InvalidCast_WinRTIPropertyValueArrayCoersion" xml:space="preserve">
    <value>Object in an IPropertyValue is of type '{0}' which cannot be convereted to a '{1}' due to array element '{2}': {3}.</value>
  </data>
  <data name="InvalidCast_WinRTIPropertyValueCoersion" xml:space="preserve">
    <value>Object in an IPropertyValue is of type '{0}' with value '{1}', which cannot be converted to a '{2}'.</value>
  </data>
  <data name="InvalidCast_WinRTIPropertyValueElement" xml:space="preserve">
    <value>Object in an IPropertyValue is of type '{0}', which cannot be converted to a '{1}'.</value>
  </data>
  <data name="InvalidOperation_AsyncFlowCtrlCtxMismatch" xml:space="preserve">
    <value>AsyncFlowControl objects can be used to restore flow only on a Context that had its flow suppressed.</value>
  </data>
  <data name="InvalidOperation_AsyncIOInProgress" xml:space="preserve">
    <value>The stream is currently in use by a previous operation on the stream.</value>
  </data>
  <data name="InvalidOperation_BadEmptyMethodBody" xml:space="preserve">
    <value>Method '{0}' does not have a method body.</value>
  </data>
  <data name="InvalidOperation_BadILGeneratorUsage" xml:space="preserve">
    <value>ILGenerator usage is invalid.</value>
  </data>
  <data name="InvalidOperation_BadInstructionOrIndexOutOfBound" xml:space="preserve">
    <value>Opcodes using a short-form index cannot address a local position over 255.</value>
  </data>
  <data name="InvalidOperation_BadInterfaceNotAbstract" xml:space="preserve">
    <value>Interface must be declared abstract.</value>
  </data>
  <data name="InvalidOperation_BadMethodBody" xml:space="preserve">
    <value>Method '{0}' cannot have a method body.</value>
  </data>
  <data name="InvalidOperation_BadTypeAttributesNotAbstract" xml:space="preserve">
    <value>Type must be declared abstract if any of its methods are abstract.</value>
  </data>
  <data name="InvalidOperation_CalledTwice" xml:space="preserve">
    <value>The method cannot be called twice on the same instance.</value>
  </data>
  <data name="InvalidOperation_CannotImportGlobalFromDifferentModule" xml:space="preserve">
    <value>Unable to import a global method or field from a different module.</value>
  </data>
  <data name="InvalidOperation_CannotRegisterSecondResolver" xml:space="preserve">
    <value>A resolver is already set for the assembly.</value>
  </data>
  <data name="InvalidOperation_CannotRemoveLastFromEmptyCollection" xml:space="preserve">
    <value>Cannot remove the last element from an empty collection.</value>
  </data>
  <data name="InvalidOperation_CannotRestoreUnsupressedFlow" xml:space="preserve">
    <value>Cannot restore context flow when it is not suppressed.</value>
  </data>
  <data name="InvalidOperation_CannotSupressFlowMultipleTimes" xml:space="preserve">
    <value>Context flow is already suppressed.</value>
  </data>
  <data name="InvalidOperation_CannotUseAFCMultiple" xml:space="preserve">
    <value>AsyncFlowControl object can be used only once to call Undo().</value>
  </data>
  <data name="InvalidOperation_CannotUseAFCOtherThread" xml:space="preserve">
    <value>AsyncFlowControl object must be used on the thread where it was created.</value>
  </data>
  <data name="InvalidOperation_CantInstantiateAbstractClass" xml:space="preserve">
    <value>Instances of abstract classes cannot be created.</value>
  </data>
  <data name="InvalidOperation_CantInstantiateFunctionPointer" xml:space="preserve">
    <value>Instances of function pointers cannot be created.</value>
  </data>
  <data name="InvalidOperation_CollectionBackingDictionaryTooLarge" xml:space="preserve">
    <value>The collection backing this Dictionary contains too many elements.</value>
  </data>
  <data name="InvalidOperation_CollectionBackingListTooLarge" xml:space="preserve">
    <value>The collection backing this List contains too many elements.</value>
  </data>
  <data name="InvalidOperation_CollectionCorrupted" xml:space="preserve">
    <value>A prior operation on this collection was interrupted by an exception. Collection's state is no longer trusted.</value>
  </data>
  <data name="InvalidOperation_ComputerName" xml:space="preserve">
    <value>Computer name could not be obtained.</value>
  </data>
  <data name="InvalidOperation_ConcurrentOperationsNotSupported" xml:space="preserve">
    <value>Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.</value>
  </data>
  <data name="InvalidOperation_ConstructorNotAllowedOnInterface" xml:space="preserve">
    <value>Interface cannot have constructors.</value>
  </data>
  <data name="InvalidOperation_DateTimeParsing" xml:space="preserve">
    <value>Internal Error in DateTime and Calendar operations.</value>
  </data>
  <data name="InvalidOperation_DefaultConstructorILGen" xml:space="preserve">
    <value>Unable to access ILGenerator on a constructor created with DefineDefaultConstructor.</value>
  </data>
  <data name="InvalidOperation_EndReadCalledMultiple" xml:space="preserve">
    <value>EndRead can only be called once for each asynchronous operation.</value>
  </data>
  <data name="InvalidOperation_EndWriteCalledMultiple" xml:space="preserve">
    <value>EndWrite can only be called once for each asynchronous operation.</value>
  </data>
  <data name="InvalidOperation_EnumEnded" xml:space="preserve">
    <value>Enumeration already finished.</value>
  </data>
  <data name="InvalidOperation_EnumFailedVersion" xml:space="preserve">
    <value>Collection was modified; enumeration operation may not execute.</value>
  </data>
  <data name="InvalidOperation_EnumNotStarted" xml:space="preserve">
    <value>Enumeration has not started. Call MoveNext.</value>
  </data>
  <data name="InvalidOperation_EnumOpCantHappen" xml:space="preserve">
    <value>Enumeration has either not started or has already finished.</value>
  </data>
  <data name="InvalidOperation_EventInfoNotAvailable" xml:space="preserve">
    <value>This API does not support EventInfo tokens.</value>
  </data>
  <data name="InvalidOperation_EventTokenTableRequiresDelegate" xml:space="preserve">
    <value>Type '{0}' is not a delegate type.  EventTokenTable may only be used with delegate types.</value>
  </data>
  <data name="InvalidOperation_GenericParametersAlreadySet" xml:space="preserve">
    <value>The generic parameters are already defined on this MethodBuilder.</value>
  </data>
  <data name="InvalidOperation_GetVersion" xml:space="preserve">
    <value>OSVersion's call to GetVersionEx failed.</value>
  </data>
  <data name="InvalidOperation_GlobalsHaveBeenCreated" xml:space="preserve">
    <value>Type definition of the global function has been completed.</value>
  </data>
  <data name="InvalidOperation_HandleIsNotInitialized" xml:space="preserve">
    <value>Handle is not initialized.</value>
  </data>
  <data name="InvalidOperation_HandleIsNotPinned" xml:space="preserve">
    <value>Handle is not pinned.</value>
  </data>
  <data name="InvalidOperation_HashInsertFailed" xml:space="preserve">
    <value>Hashtable insert failed. Load factor too high. The most common cause is multiple threads writing to the Hashtable simultaneously.</value>
  </data>
  <data name="InvalidOperation_IComparerFailed" xml:space="preserve">
    <value>Failed to compare two elements in the array.</value>
  </data>
  <data name="InvalidOperation_MethodBaked" xml:space="preserve">
    <value>Type definition of the method is complete.</value>
  </data>
  <data name="InvalidOperation_MethodBuilderBaked" xml:space="preserve">
    <value>The signature of the MethodBuilder can no longer be modified because an operation on the MethodBuilder caused the methodDef token to be created. For example, a call to SetCustomAttribute requires the methodDef token to emit the CustomAttribute token.</value>
  </data>
  <data name="InvalidOperation_MethodHasBody" xml:space="preserve">
    <value>Method already has a body.</value>
  </data>
  <data name="InvalidOperation_MustCallInitialize" xml:space="preserve">
    <value>You must call Initialize on this object instance before using it.</value>
  </data>
  <data name="InvalidOperation_NativeOverlappedReused" xml:space="preserve">
    <value>NativeOverlapped cannot be reused for multiple operations.</value>
  </data>
  <data name="InvalidOperation_NoMultiModuleAssembly" xml:space="preserve">
    <value>You cannot have more than one dynamic module in each dynamic assembly in this version of the runtime.</value>
  </data>
  <data name="InvalidOperation_NoPublicAddMethod" xml:space="preserve">
    <value>Cannot add the event handler since no public add method exists for the event.</value>
  </data>
  <data name="InvalidOperation_NoPublicRemoveMethod" xml:space="preserve">
    <value>Cannot remove the event handler since no public remove method exists for the event.</value>
  </data>
  <data name="InvalidOperation_NotADebugModule" xml:space="preserve">
    <value>Not a debug ModuleBuilder.</value>
  </data>
  <data name="InvalidOperation_NotAllowedInDynamicMethod" xml:space="preserve">
    <value>The requested operation is invalid for DynamicMethod.</value>
  </data>
  <data name="InvalidOperation_NotAVarArgCallingConvention" xml:space="preserve">
    <value>Calling convention must be VarArgs.</value>
  </data>
  <data name="InvalidOperation_NotGenericType" xml:space="preserve">
    <value>This operation is only valid on generic types.</value>
  </data>
  <data name="InvalidOperation_NotSupportedOnWinRTEvent" xml:space="preserve">
    <value>Adding or removing event handlers dynamically is not supported on WinRT events.</value>
  </data>
  <data name="InvalidOperation_NotWithConcurrentGC" xml:space="preserve">
    <value>This API is not available when the concurrent GC is enabled.</value>
  </data>
  <data name="InvalidOperation_NoUnderlyingTypeOnEnum" xml:space="preserve">
    <value>Underlying type information on enumeration is not specified.</value>
  </data>
  <data name="InvalidOperation_NoValue" xml:space="preserve">
    <value>Nullable object must have a value.</value>
  </data>
  <data name="InvalidOperation_NullArray" xml:space="preserve">
    <value>The underlying array is null.</value>
  </data>
  <data name="InvalidOperation_NullContext" xml:space="preserve">
    <value>Cannot call Set on a null context</value>
  </data>
  <data name="InvalidOperation_NullModuleHandle" xml:space="preserve">
    <value>The requested operation is invalid when called on a null ModuleHandle.</value>
  </data>
  <data name="InvalidOperation_OpenLocalVariableScope" xml:space="preserve">
    <value>Local variable scope was not properly closed.</value>
  </data>
  <data name="InvalidOperation_Overlapped_Pack" xml:space="preserve">
    <value>Cannot pack a packed Overlapped again.</value>
  </data>
  <data name="InvalidOperation_PropertyInfoNotAvailable" xml:space="preserve">
    <value>This API does not support PropertyInfo tokens.</value>
  </data>
  <data name="InvalidOperation_ReadOnly" xml:space="preserve">
    <value>Instance is read-only.</value>
  </data>
  <data name="InvalidOperation_ResMgrBadResSet_Type" xml:space="preserve">
    <value>'{0}': ResourceSet derived classes must provide a constructor that takes a String file name and a constructor that takes a Stream.</value>
  </data>
  <data name="InvalidOperation_ResourceNotStream_Name" xml:space="preserve">
    <value>Resource '{0}' was not a Stream - call GetObject instead.</value>
  </data>
  <data name="InvalidOperation_ResourceNotString_Name" xml:space="preserve">
    <value>Resource '{0}' was not a String - call GetObject instead.</value>
  </data>
  <data name="InvalidOperation_ResourceNotString_Type" xml:space="preserve">
    <value>Resource was of type '{0}' instead of String - call GetObject instead.</value>
  </data>
  <data name="InvalidOperation_SetLatencyModeNoGC" xml:space="preserve">
    <value>The NoGCRegion mode is in progress.End it and then set a different mode.</value>
  </data>
  <data name="InvalidOperation_ShouldNotHaveMethodBody" xml:space="preserve">
    <value>Method body should not exist.</value>
  </data>
  <data name="InvalidOperation_ThreadWrongThreadStart" xml:space="preserve">
    <value>The thread was created with a ThreadStart delegate that does not accept a parameter.</value>
  </data>
  <data name="InvalidOperation_TimeoutsNotSupported" xml:space="preserve">
    <value>Timeouts are not supported on this stream.</value>
  </data>
  <data name="InvalidOperation_TimerAlreadyClosed" xml:space="preserve">
    <value>The Timer was already closed using an incompatible Dispose method.</value>
  </data>
  <data name="InvalidOperation_TypeCannotBeBoxed" xml:space="preserve">
    <value>The given type cannot be boxed.</value>
  </data>
  <data name="InvalidOperation_TypeHasBeenCreated" xml:space="preserve">
    <value>Unable to change after type has been created.</value>
  </data>
  <data name="InvalidOperation_TypeNotCreated" xml:space="preserve">
    <value>Type has not been created.</value>
  </data>
  <data name="InvalidOperation_UnderlyingArrayListChanged" xml:space="preserve">
    <value>This range in the underlying list is invalid. A possible cause is that elements were removed.</value>
  </data>
  <data name="InvalidOperation_UnknownEnumType" xml:space="preserve">
    <value>Unknown enum type.</value>
  </data>
  <data name="InvalidOperation_WriteOnce" xml:space="preserve">
    <value>This property has already been set and cannot be modified.</value>
  </data>
  <data name="InvalidOperation_WrongAsyncResultOrEndCalledMultiple" xml:space="preserve">
    <value>Either the IAsyncResult object did not come from the corresponding async method on this type, or the End method was called multiple times with the same IAsyncResult.</value>
  </data>
  <data name="InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple" xml:space="preserve">
    <value>Either the IAsyncResult object did not come from the corresponding async method on this type, or EndRead was called multiple times with the same IAsyncResult.</value>
  </data>
  <data name="InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple" xml:space="preserve">
    <value>Either the IAsyncResult object did not come from the corresponding async method on this type, or EndWrite was called multiple times with the same IAsyncResult.</value>
  </data>
  <data name="InvalidProgram_Default" xml:space="preserve">
    <value>Common Language Runtime detected an invalid program.</value>
  </data>
  <data name="InvalidTimeZone_InvalidFileData" xml:space="preserve">
    <value>The time zone ID '{0}' was found on the local computer, but the file at '{1}' was corrupt.</value>
  </data>
  <data name="InvalidTimeZone_InvalidRegistryData" xml:space="preserve">
    <value>The time zone ID '{0}' was found on the local computer, but the registry information was corrupt.</value>
  </data>
  <data name="InvalidTimeZone_InvalidJulianDay" xml:space="preserve">
    <value>Invalid Julian day in POSIX strings.</value>
  </data>
  <data name="InvalidTimeZone_NoTTInfoStructures" xml:space="preserve">
    <value>There are no ttinfo structures in the tzfile.  At least one ttinfo structure is required in order to construct a TimeZoneInfo object.</value>
  </data>
  <data name="InvalidTimeZone_UnparseablePosixMDateString" xml:space="preserve">
    <value>'{0}' is not a valid POSIX-TZ-environment-variable MDate rule.  A valid rule has the format 'Mm.w.d'.</value>
  </data>
  <data name="InvariantFailed" xml:space="preserve">
    <value>Invariant failed.</value>
  </data>
  <data name="InvariantFailed_Cnd" xml:space="preserve">
    <value>Invariant failed: {0}</value>
  </data>
  <data name="IO_NoFileTableInInMemoryAssemblies" xml:space="preserve">
    <value>This assembly does not have a file table because it was loaded from memory.</value>
  </data>
  <data name="IO_EOF_ReadBeyondEOF" xml:space="preserve">
    <value>Unable to read beyond the end of the stream.</value>
  </data>
  <data name="IO_FileLoad" xml:space="preserve">
    <value>Could not load the specified file.</value>
  </data>
  <data name="IO_FileName_Name" xml:space="preserve">
    <value>File name: '{0}'</value>
  </data>
  <data name="IO_FileNotFound" xml:space="preserve">
    <value>Unable to find the specified file.</value>
  </data>
  <data name="IO_FileNotFound_FileName" xml:space="preserve">
    <value>Could not find file '{0}'.</value>
  </data>
  <data name="IO_AlreadyExists_Name" xml:space="preserve">
    <value>Cannot create '{0}' because a file or directory with the same name already exists.</value>
  </data>
  <data name="IO_BindHandleFailed" xml:space="preserve">
    <value>BindHandle for ThreadPool failed on this handle.</value>
  </data>
  <data name="IO_FileExists_Name" xml:space="preserve">
    <value>The file '{0}' already exists.</value>
  </data>
  <data name="IO_FileStreamHandlePosition" xml:space="preserve">
    <value>The OS handle's position is not what FileStream expected. Do not use a handle simultaneously in one FileStream and in Win32 code or another FileStream. This may cause data loss.</value>
  </data>
  <data name="IO_FileTooLong2GB" xml:space="preserve">
    <value>The file is too long. This operation is currently limited to supporting files less than 2 gigabytes in size.</value>
  </data>
  <data name="IO_FileTooLongOrHandleNotSync" xml:space="preserve">
    <value>IO operation will not work. Most likely the file will become too long or the handle was not opened to support synchronous IO operations.</value>
  </data>
  <data name="IO_FixedCapacity" xml:space="preserve">
    <value>Unable to expand length of this stream beyond its capacity.</value>
  </data>
  <data name="IO_InvalidStringLen_Len" xml:space="preserve">
    <value>BinaryReader encountered an invalid string length of {0} characters.</value>
  </data>
  <data name="IO_SeekAppendOverwrite" xml:space="preserve">
    <value>Unable seek backward to overwrite data that previously existed in a file opened in Append mode.</value>
  </data>
  <data name="IO_SeekBeforeBegin" xml:space="preserve">
    <value>An attempt was made to move the position before the beginning of the stream.</value>
  </data>
  <data name="IO_SetLengthAppendTruncate" xml:space="preserve">
    <value>Unable to truncate data that previously existed in a file opened in Append mode.</value>
  </data>
  <data name="IO_SharingViolation_File" xml:space="preserve">
    <value>The process cannot access the file '{0}' because it is being used by another process.</value>
  </data>
  <data name="IO_SharingViolation_NoFileName" xml:space="preserve">
    <value>The process cannot access the file because it is being used by another process.</value>
  </data>
  <data name="IO_StreamTooLong" xml:space="preserve">
    <value>Stream was too long.</value>
  </data>
  <data name="IO_PathNotFound_NoPathName" xml:space="preserve">
    <value>Could not find a part of the path.</value>
  </data>
  <data name="IO_PathNotFound_Path" xml:space="preserve">
    <value>Could not find a part of the path '{0}'.</value>
  </data>
  <data name="IO_PathTooLong" xml:space="preserve">
    <value>The specified file name or path is too long, or a component of the specified path is too long.</value>
  </data>
  <data name="IO_PathTooLong_Path" xml:space="preserve">
    <value>The path '{0}' is too long, or a component of the specified path is too long.</value>
  </data>
  <data name="IO_UnknownFileName" xml:space="preserve">
    <value>[Unknown]</value>
  </data>
  <data name="Lazy_CreateValue_NoParameterlessCtorForT" xml:space="preserve">
    <value>The lazily-initialized type does not have a public, parameterless constructor.</value>
  </data>
  <data name="Lazy_ctor_ModeInvalid" xml:space="preserve">
    <value>The mode argument specifies an invalid value.</value>
  </data>
  <data name="Lazy_StaticInit_InvalidOperation" xml:space="preserve">
    <value>ValueFactory returned null.</value>
  </data>
  <data name="Lazy_ToString_ValueNotCreated" xml:space="preserve">
    <value>Value is not created.</value>
  </data>
  <data name="Lazy_Value_RecursiveCallsToValue" xml:space="preserve">
    <value>ValueFactory attempted to access the Value property of this instance.</value>
  </data>
  <data name="ManualResetEventSlim_ctor_SpinCountOutOfRange" xml:space="preserve">
    <value>The spinCount argument must be in the range 0 to {0}, inclusive.</value>
  </data>
  <data name="ManualResetEventSlim_ctor_TooManyWaiters" xml:space="preserve">
    <value>There are too many threads currently waiting on the event. A maximum of {0} waiting threads are supported.</value>
  </data>
  <data name="ManualResetEventSlim_Disposed" xml:space="preserve">
    <value>The event has been disposed.</value>
  </data>
  <data name="Marshaler_StringTooLong" xml:space="preserve">
    <value>Marshaler restriction: Excessively long string.</value>
  </data>
  <data name="MissingConstructor_Name" xml:space="preserve">
    <value>Constructor on type '{0}' not found.</value>
  </data>
  <data name="MissingField" xml:space="preserve">
    <value>Field not found.</value>
  </data>
  <data name="MissingField_Name" xml:space="preserve">
    <value>Field '{0}' not found.</value>
  </data>
  <data name="MissingManifestResource_MultipleBlobs" xml:space="preserve">
    <value>A case-insensitive lookup for resource file "{0}" in assembly "{1}" found multiple entries. Remove the duplicates or specify the exact case.</value>
  </data>
  <data name="MissingManifestResource_NoNeutralAsm" xml:space="preserve">
    <value>Could not find the resource "{0}" among the resources {2} embedded in the assembly "{1}", nor among the resources in any satellite assemblies for the specified culture. Perhaps the resources were embedded with an incorrect name.</value>
  </data>
  <data name="MissingManifestResource_NoNeutralDisk" xml:space="preserve">
    <value>Could not find any resources appropriate for the specified culture (or the neutral culture) on disk.</value>
  </data>
  <data name="MissingManifestResource_NoPRIresources" xml:space="preserve">
    <value>Unable to open Package Resource Index.</value>
  </data>
  <data name="MissingManifestResource_ResWFileNotLoaded" xml:space="preserve">
    <value>Unable to load resources for resource file "{0}" in package "{1}".</value>
  </data>
  <data name="MissingMember" xml:space="preserve">
    <value>Member not found.</value>
  </data>
  <data name="MissingMember_Name" xml:space="preserve">
    <value>Member '{0}' not found.</value>
  </data>
  <data name="MissingMemberNestErr" xml:space="preserve">
    <value>TypedReference can only be made on nested value Types.</value>
  </data>
  <data name="MissingMemberTypeRef" xml:space="preserve">
    <value>FieldInfo does not match the target Type.</value>
  </data>
  <data name="MissingMethod_Name" xml:space="preserve">
    <value>Method '{0}' not found.</value>
  </data>
  <data name="MissingSatelliteAssembly_Culture_Name" xml:space="preserve">
    <value>The satellite assembly named "{1}" for fallback culture "{0}" either could not be found or could not be loaded. This is generally a setup problem. Please consider reinstalling or repairing the application.</value>
  </data>
  <data name="MissingSatelliteAssembly_Default" xml:space="preserve">
    <value>Resource lookup fell back to the ultimate fallback resources in a satellite assembly, but that satellite either was not found or could not be loaded. Please consider reinstalling or repairing the application.</value>
  </data>
  <data name="Multicast_Combine" xml:space="preserve">
    <value>Delegates that are not of type MulticastDelegate may not be combined.</value>
  </data>
  <data name="MustUseCCRewrite" xml:space="preserve">
    <value>An assembly (probably "{1}") must be rewritten using the code contracts binary rewriter (CCRewrite) because it is calling Contract.{0} and the CONTRACTS_FULL symbol is defined.  Remove any explicit definitions of the CONTRACTS_FULL symbol from your project and rebuild.  CCRewrite can be downloaded from http://go.microsoft.com/fwlink/?LinkID=169180. \r\nAfter the rewriter is installed, it can be enabled in Visual Studio from the project's Properties page on the Code Contracts pane.  Ensure that "Perform Runtime Contract Checking" is enabled, which will define CONTRACTS_FULL.</value>
  </data>
  <data name="NotSupported_AbstractNonCLS" xml:space="preserve">
    <value>This non-CLS method is not implemented.</value>
  </data>
  <data name="NotSupported_ActivAttr" xml:space="preserve">
    <value>Activation Attributes are not supported.</value>
  </data>
  <data name="NotSupported_AppX" xml:space="preserve">
    <value>{0} is not supported in AppX.</value>
  </data>
  <data name="NotSupported_AssemblyLoadFromHash" xml:space="preserve">
    <value>Assembly.LoadFrom with hashValue is not supported.</value>
  </data>
  <data name="NotSupported_ByRefLike" xml:space="preserve">
    <value>Cannot create boxed ByRef-like values.</value>
  </data>
  <data name="NotSupported_ByRefLikeArray" xml:space="preserve">
    <value>Cannot create arrays of ByRef-like values.</value>
  </data>
  <data name="NotSupported_ByRefToByRefLikeReturn" xml:space="preserve">
    <value>ByRef to ByRef-like return values are not supported in reflection invocation.</value>
  </data>
  <data name="NotSupported_ByRefToVoidReturn" xml:space="preserve">
    <value>ByRef to void return values are not supported in reflection invocation.</value>
  </data>
  <data name="NotSupported_CallToVarArg" xml:space="preserve">
    <value>Vararg calling convention not supported.</value>
  </data>
  <data name="NotSupported_CannotCallEqualsOnSpan" xml:space="preserve">
    <value>Equals() on Span and ReadOnlySpan is not supported. Use operator== instead.</value>
  </data>
  <data name="NotSupported_CannotCallGetHashCodeOnSpan" xml:space="preserve">
    <value>GetHashCode() on Span and ReadOnlySpan is not supported.</value>
  </data>
  <data name="NotSupported_ChangeType" xml:space="preserve">
    <value>ChangeType operation is not supported.</value>
  </data>
  <data name="NotSupported_CollectibleAssemblyResolve" xml:space="preserve">
    <value>Resolving to a collectible assembly is not supported.</value>
  </data>
  <data name="NotSupported_CollectibleBoundNonCollectible" xml:space="preserve">
    <value>A non-collectible assembly may not reference a collectible assembly.</value>
  </data>
  <data name="NotSupported_CollectibleWinRT" xml:space="preserve">
    <value>WinRT Interop is not supported for collectible types.</value>
  </data>
  <data name="NotSupported_CreateInstanceWithTypeBuilder" xml:space="preserve">
    <value>CreateInstance cannot be used with an object of type TypeBuilder.</value>
  </data>
  <data name="NotSupported_DBNullSerial" xml:space="preserve">
    <value>Only one DBNull instance may exist, and calls to DBNull deserialization methods are not allowed.</value>
  </data>
  <data name="NotSupported_DynamicAssembly" xml:space="preserve">
    <value>The invoked member is not supported in a dynamic assembly.</value>
  </data>
  <data name="NotSupported_DynamicMethodFlags" xml:space="preserve">
    <value>Wrong MethodAttributes or CallingConventions for DynamicMethod. Only public, static, standard supported</value>
  </data>
  <data name="NotSupported_DynamicModule" xml:space="preserve">
    <value>The invoked member is not supported in a dynamic module.</value>
  </data>
  <data name="NotSupported_FileStreamOnNonFiles" xml:space="preserve">
    <value>FileStream was asked to open a device that was not a file. For support for devices like 'com1:' or 'lpt1:', call CreateFile, then use the FileStream constructors that take an OS handle as an IntPtr.</value>
  </data>
  <data name="NotSupported_FixedSizeCollection" xml:space="preserve">
    <value>Collection was of a fixed size.</value>
  </data>
  <data name="InvalidProgram_GenericMethod" xml:space="preserve">
    <value>Generic methods with UnmanagedCallersOnlyAttribute are invalid.</value>
  </data>
  <data name="InvalidOperation_SpanOverlappedOperation" xml:space="preserve">
    <value>This operation is invalid on overlapping buffers.</value>
  </data>
  <data name="NotSupported_IDispInvokeDefaultMemberWithNamedArgs" xml:space="preserve">
    <value>Invoking default method with named arguments is not supported.</value>
  </data>
  <data name="NotSupported_IllegalOneByteBranch" xml:space="preserve">
    <value>Illegal one-byte branch at position: {0}. Requested branch was: {1}.</value>
  </data>
  <data name="NotSupported_KeyCollectionSet" xml:space="preserve">
    <value>Mutating a key collection derived from a dictionary is not allowed.</value>
  </data>
  <data name="NotSupported_ManagedActivation" xml:space="preserve">
    <value>Cannot create uninitialized instances of types requiring managed activation.</value>
  </data>
  <data name="NotSupported_MaxWaitHandles" xml:space="preserve">
    <value>The number of WaitHandles must be less than or equal to 64.</value>
  </data>
  <data name="NotSupported_MaxWaitHandles_STA" xml:space="preserve">
    <value>The number of WaitHandles on a STA thread must be less than or equal to 63.</value>
  </data>
  <data name="NotSupported_MemStreamNotExpandable" xml:space="preserve">
    <value>Memory stream is not expandable.</value>
  </data>
  <data name="NotSupported_MustBeModuleBuilder" xml:space="preserve">
    <value>Module argument must be a ModuleBuilder.</value>
  </data>
  <data name="NotSupported_UnmanagedCallersOnlyTarget" xml:space="preserve">
    <value>Methods with UnmanagedCallersOnlyAttribute cannot be used as delegate target.</value>
  </data>
  <data name="NotSupported_NoCodepageData" xml:space="preserve">
    <value>No data is available for encoding {0}. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.</value>
  </data>
  <data name="InvalidOperation_FunctionMissingUnmanagedCallersOnly" xml:space="preserve">
    <value>Function not marked with UnmanagedCallersOnlyAttribute.</value>
  </data>
  <data name="InvalidProgram_NonBlittableTypes" xml:space="preserve">
    <value>Non-blittable parameter types are invalid for UnmanagedCallersOnly methods.</value>
  </data>
  <data name="NotSupported_NonReflectedType" xml:space="preserve">
    <value>Not supported in a non-reflected type.</value>
  </data>
  <data name="InvalidProgram_NonStaticMethod" xml:space="preserve">
    <value>Non-static methods with UnmanagedCallersOnlyAttribute are invalid.</value>
  </data>
  <data name="NotSupported_NoParentDefaultConstructor" xml:space="preserve">
    <value>Parent does not have a default constructor. The default constructor must be explicitly defined.</value>
  </data>
  <data name="NotSupported_NoTypeInfo" xml:space="preserve">
    <value>Cannot resolve {0} to a TypeInfo object.</value>
  </data>
  <data name="NotSupported_NYI" xml:space="preserve">
    <value>This feature is not implemented.</value>
  </data>
  <data name="NotSupported_ObsoleteResourcesFile" xml:space="preserve">
    <value>Found an obsolete .resources file in assembly '{0}'. Rebuild that .resources file then rebuild that assembly.</value>
  </data>
  <data name="NotSupported_OleAutBadVarType" xml:space="preserve">
    <value>The given Variant type is not supported by this OleAut function.</value>
  </data>
  <data name="NotSupported_OpenType" xml:space="preserve">
    <value>Cannot create arrays of open type.</value>
  </data>
  <data name="NotSupported_OutputStreamUsingTypeBuilder" xml:space="preserve">
    <value>Output streams do not support TypeBuilders.</value>
  </data>
  <data name="NotSupported_PIAInAppxProcess" xml:space="preserve">
    <value>A Primary Interop Assembly is not supported in AppX.</value>
  </data>
  <data name="NotSupported_RangeCollection" xml:space="preserve">
    <value>The specified operation is not supported on Ranges.</value>
  </data>
  <data name="NotSupported_Reading" xml:space="preserve">
    <value>Accessor does not support reading.</value>
  </data>
  <data name="NotSupported_ReadOnlyCollection" xml:space="preserve">
    <value>Collection is read-only.</value>
  </data>
  <data name="NotSupported_ResourceObjectSerialization" xml:space="preserve">
    <value>Cannot read resources that depend on serialization.</value>
  </data>
  <data name="NotSupported_SignalAndWaitSTAThread" xml:space="preserve">
    <value>SignalAndWait on a STA thread is not supported.</value>
  </data>
  <data name="NotSupported_StringComparison" xml:space="preserve">
    <value>The string comparison type passed in is currently not supported.</value>
  </data>
  <data name="NotSupported_SubclassOverride" xml:space="preserve">
    <value>Derived classes must provide an implementation.</value>
  </data>
  <data name="NotSupported_SymbolMethod" xml:space="preserve">
    <value>Not supported in an array method of a type definition that is not complete.</value>
  </data>
  <data name="NotSupported_TooManyArgs" xml:space="preserve">
    <value>Stack size too deep. Possibly too many arguments.</value>
  </data>
  <data name="NotSupported_Type" xml:space="preserve">
    <value>Type is not supported.</value>
  </data>
  <data name="NotSupported_TypeNotYetCreated" xml:space="preserve">
    <value>The invoked member is not supported before the type is created.</value>
  </data>
  <data name="NotSupported_UmsSafeBuffer" xml:space="preserve">
    <value>This operation is not supported for an UnmanagedMemoryStream created from a SafeBuffer.</value>
  </data>
  <data name="NotSupported_UnitySerHolder" xml:space="preserve">
    <value>The UnitySerializationHolder object is designed to transmit information about other types and is not serializable itself.</value>
  </data>
  <data name="NotSupported_UnknownTypeCode" xml:space="preserve">
    <value>TypeCode '{0}' was not valid.</value>
  </data>
  <data name="NotSupported_WaitAllSTAThread" xml:space="preserve">
    <value>WaitAll for multiple handles on a STA thread is not supported.</value>
  </data>
  <data name="NotSupported_UnreadableStream" xml:space="preserve">
    <value>Stream does not support reading.</value>
  </data>
  <data name="NotSupported_UnseekableStream" xml:space="preserve">
    <value>Stream does not support seeking.</value>
  </data>
  <data name="NotSupported_UnwritableStream" xml:space="preserve">
    <value>Stream does not support writing.</value>
  </data>
  <data name="NotSupported_ValueClassCM" xml:space="preserve">
    <value>Custom marshalers for value types are not currently supported.</value>
  </data>
  <data name="NotSupported_ValueCollectionSet" xml:space="preserve">
    <value>Mutating a value collection derived from a dictionary is not allowed.</value>
  </data>
  <data name="NotSupported_VoidArray" xml:space="preserve">
    <value>Arrays of System.Void are not supported.</value>
  </data>
  <data name="NotSupported_Writing" xml:space="preserve">
    <value>Accessor does not support writing.</value>
  </data>
  <data name="NotSupported_WrongResourceReader_Type" xml:space="preserve">
    <value>This .resources file should not be read with this reader. The resource reader type is "{0}".</value>
  </data>
  <data name="NullReference_This" xml:space="preserve">
    <value>The pointer for this method was null.</value>
  </data>
  <data name="ObjectDisposed_FileClosed" xml:space="preserve">
    <value>Cannot access a closed file.</value>
  </data>
  <data name="ObjectDisposed_Generic" xml:space="preserve">
    <value>Cannot access a disposed object.</value>
  </data>
  <data name="ObjectDisposed_ObjectName_Name" xml:space="preserve">
    <value>Object name: '{0}'.</value>
  </data>
  <data name="ObjectDisposed_WriterClosed" xml:space="preserve">
    <value>Cannot write to a closed TextWriter.</value>
  </data>
  <data name="ObjectDisposed_ReaderClosed" xml:space="preserve">
    <value>Cannot read from a closed TextReader.</value>
  </data>
  <data name="ObjectDisposed_ResourceSet" xml:space="preserve">
    <value>Cannot access a closed resource set.</value>
  </data>
  <data name="ObjectDisposed_StreamClosed" xml:space="preserve">
    <value>Cannot access a closed Stream.</value>
  </data>
  <data name="ObjectDisposed_ViewAccessorClosed" xml:space="preserve">
    <value>Cannot access a closed accessor.</value>
  </data>
  <data name="ObjectDisposed_SafeHandleClosed" xml:space="preserve">
    <value>Safe handle has been closed.</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>The operation was canceled.</value>
  </data>
  <data name="Overflow_Byte" xml:space="preserve">
    <value>Value was either too large or too small for an unsigned byte.</value>
  </data>
  <data name="Overflow_Char" xml:space="preserve">
    <value>Value was either too large or too small for a character.</value>
  </data>
  <data name="Overflow_Currency" xml:space="preserve">
    <value>Value was either too large or too small for a Currency.</value>
  </data>
  <data name="Overflow_Decimal" xml:space="preserve">
    <value>Value was either too large or too small for a Decimal.</value>
  </data>
  <data name="Overflow_Duration" xml:space="preserve">
    <value>The duration cannot be returned for TimeSpan.MinValue because the absolute value of TimeSpan.MinValue exceeds the value of TimeSpan.MaxValue.</value>
  </data>
  <data name="Overflow_Int16" xml:space="preserve">
    <value>Value was either too large or too small for an Int16.</value>
  </data>
  <data name="Overflow_Int32" xml:space="preserve">
    <value>Value was either too large or too small for an Int32.</value>
  </data>
  <data name="Overflow_Int64" xml:space="preserve">
    <value>Value was either too large or too small for an Int64.</value>
  </data>
  <data name="Overflow_NegateTwosCompNum" xml:space="preserve">
    <value>Negating the minimum value of a twos complement number is invalid.</value>
  </data>
  <data name="Overflow_NegativeUnsigned" xml:space="preserve">
    <value>The string was being parsed as an unsigned number and could not have a negative sign.</value>
  </data>
  <data name="Overflow_SByte" xml:space="preserve">
    <value>Value was either too large or too small for a signed byte.</value>
  </data>
  <data name="Overflow_TimeSpanElementTooLarge" xml:space="preserve">
    <value>The TimeSpan string '{0}' could not be parsed because at least one of the numeric components is out of range or contains too many digits.</value>
  </data>
  <data name="Overflow_TimeSpanTooLong" xml:space="preserve">
    <value>TimeSpan overflowed because the duration is too long.</value>
  </data>
  <data name="Overflow_UInt16" xml:space="preserve">
    <value>Value was either too large or too small for a UInt16.</value>
  </data>
  <data name="Overflow_UInt32" xml:space="preserve">
    <value>Value was either too large or too small for a UInt32.</value>
  </data>
  <data name="Overflow_UInt64" xml:space="preserve">
    <value>Value was either too large or too small for a UInt64.</value>
  </data>
  <data name="PlatformNotSupported_ArgIterator" xml:space="preserve">
    <value>ArgIterator is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_ComInterop" xml:space="preserve">
    <value>COM Interop is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_NamedSynchronizationPrimitives" xml:space="preserve">
    <value>The named version of this synchronization primitive is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_NamedSyncObjectWaitAnyWaitAll" xml:space="preserve">
    <value>Wait operations on multiple wait handles including a named synchronization primitive are not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_OSXFileLocking" xml:space="preserve">
    <value>Locking/unlocking file regions is not supported on this platform. Use FileShare on the entire file instead.</value>
  </data>
  <data name="PlatformNotSupported_ReflectionOnly" xml:space="preserve">
    <value>ReflectionOnly loading is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_Remoting" xml:space="preserve">
    <value>Remoting is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_SecureBinarySerialization" xml:space="preserve">
    <value>Secure binary serialization is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_StrongNameSigning" xml:space="preserve">
    <value>Strong-name signing is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_WinRT" xml:space="preserve">
    <value>Windows Runtime is not supported on this operating system.</value>
  </data>
  <data name="PlatformNotSupported_OverlappedIO" xml:space="preserve">
    <value>This API is specific to the way in which Windows handles asynchronous I/O, and is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_ITypeInfo" xml:space="preserve">
    <value>Marshalling a System.Type to an unmanaged ITypeInfo or marshalling an ITypeInfo to a System.Type is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_IExpando" xml:space="preserve">
    <value>Marshalling an IDispatchEx to an IReflect or IExpando is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_AppDomains" xml:space="preserve">
    <value>Secondary AppDomains are not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_CAS" xml:space="preserve">
    <value>Code Access Security is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_Principal" xml:space="preserve">
    <value>Windows Principal functionality is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_ThreadAbort" xml:space="preserve">
    <value>Thread abort is not supported on this platform.</value>
  </data>
  <data name="PlatformNotSupported_ThreadSuspend" xml:space="preserve">
    <value>Thread suspend is not supported on this platform.</value>
  </data>
  <data name="PostconditionFailed" xml:space="preserve">
    <value>Postcondition failed.</value>
  </data>
  <data name="PostconditionFailed_Cnd" xml:space="preserve">
    <value>Postcondition failed: {0}</value>
  </data>
  <data name="PostconditionOnExceptionFailed" xml:space="preserve">
    <value>Postcondition failed after throwing an exception.</value>
  </data>
  <data name="PostconditionOnExceptionFailed_Cnd" xml:space="preserve">
    <value>Postcondition failed after throwing an exception: {0}</value>
  </data>
  <data name="PreconditionFailed" xml:space="preserve">
    <value>Precondition failed.</value>
  </data>
  <data name="PreconditionFailed_Cnd" xml:space="preserve">
    <value>Precondition failed: {0}</value>
  </data>
  <data name="PersistedFiles_NoHomeDirectory" xml:space="preserve">
    <value>The home directory of the current user could not be determined.</value>
  </data>
  <data name="Rank_MultiDimNotSupported" xml:space="preserve">
    <value>Only single dimension arrays are supported here.</value>
  </data>
  <data name="Rank_MustMatch" xml:space="preserve">
    <value>The specified arrays must have the same number of dimensions.</value>
  </data>
  <data name="ReflectionTypeLoad_LoadFailed" xml:space="preserve">
    <value>Unable to load one or more of the requested types.</value>
  </data>
  <data name="ResourceReaderIsClosed" xml:space="preserve">
    <value>ResourceReader is closed.</value>
  </data>
  <data name="Resources_StreamNotValid" xml:space="preserve">
    <value>Stream is not a valid resource file.</value>
  </data>
  <data name="RFLCT_AmbigCust" xml:space="preserve">
    <value>Multiple custom attributes of the same type found.</value>
  </data>
  <data name="RFLCT_Ambiguous" xml:space="preserve">
    <value>Ambiguous match found.</value>
  </data>
  <data name="InvalidFilterCriteriaException_CritInt" xml:space="preserve">
    <value>An Int32 must be provided for the filter criteria.</value>
  </data>
  <data name="InvalidFilterCriteriaException_CritString" xml:space="preserve">
    <value>A String must be provided for the filter criteria.</value>
  </data>
  <data name="RFLCT_InvalidFieldFail" xml:space="preserve">
    <value>'{0}' field specified was not found.</value>
  </data>
  <data name="RFLCT_InvalidPropFail" xml:space="preserve">
    <value>'{0}' property specified was not found.</value>
  </data>
  <data name="RFLCT_Targ_ITargMismatch" xml:space="preserve">
    <value>Object does not match target type.</value>
  </data>
  <data name="RFLCT_Targ_StatFldReqTarg" xml:space="preserve">
    <value>Non-static field requires a target.</value>
  </data>
  <data name="RFLCT_Targ_StatMethReqTarg" xml:space="preserve">
    <value>Non-static method requires a target.</value>
  </data>
  <data name="RuntimeWrappedException" xml:space="preserve">
    <value>An object that does not derive from System.Exception has been wrapped in a RuntimeWrappedException.</value>
  </data>
  <data name="StandardOleMarshalObjectGetMarshalerFailed" xml:space="preserve">
    <value>Failed to get marshaler for IID {0}.</value>
  </data>
  <data name="Security_CannotReadFileData" xml:space="preserve">
    <value>The time zone ID '{0}' was found on the local computer, but the application does not have permission to read the file.</value>
  </data>
  <data name="Security_CannotReadRegistryData" xml:space="preserve">
    <value>The time zone ID '{0}' was found on the local computer, but the application does not have permission to read the registry information.</value>
  </data>
  <data name="Security_RegistryPermission" xml:space="preserve">
    <value>Requested registry access is not allowed.</value>
  </data>
  <data name="SemaphoreSlim_ctor_InitialCountWrong" xml:space="preserve">
    <value>The initialCount argument must be non-negative and less than or equal to the maximumCount.</value>
  </data>
  <data name="SemaphoreSlim_ctor_MaxCountWrong" xml:space="preserve">
    <value>The maximumCount argument must be a positive number. If a maximum is not required, use the constructor without a maxCount parameter.</value>
  </data>
  <data name="SemaphoreSlim_Disposed" xml:space="preserve">
    <value>The semaphore has been disposed.</value>
  </data>
  <data name="SemaphoreSlim_Release_CountWrong" xml:space="preserve">
    <value>The releaseCount argument must be greater than zero.</value>
  </data>
  <data name="SemaphoreSlim_Wait_TimeoutWrong" xml:space="preserve">
    <value>The timeout must represent a value between -1 and Int32.MaxValue, inclusive.</value>
  </data>
  <data name="Serialization_BadParameterInfo" xml:space="preserve">
    <value>Non existent ParameterInfo. Position bigger than member's parameters length.</value>
  </data>
  <data name="Serialization_CorruptField" xml:space="preserve">
    <value>The value of the field '{0}' is invalid.  The serialized data is corrupt.</value>
  </data>
  <data name="Serialization_DateTimeTicksOutOfRange" xml:space="preserve">
    <value>Invalid serialized DateTime data. Ticks must be between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks.</value>
  </data>
  <data name="Serialization_DelegatesNotSupported" xml:space="preserve">
    <value>Serializing delegates is not supported on this platform.</value>
  </data>
  <data name="Serialization_InsufficientState" xml:space="preserve">
    <value>Insufficient state to return the real object.</value>
  </data>
  <data name="Serialization_InvalidData" xml:space="preserve">
    <value>An error occurred while deserializing the object.  The serialized data is corrupt.</value>
  </data>
  <data name="Serialization_InvalidEscapeSequence" xml:space="preserve">
    <value>The serialized data contained an invalid escape sequence '\\{0}'.</value>
  </data>
  <data name="Serialization_InvalidOnDeser" xml:space="preserve">
    <value>OnDeserialization method was called while the object was not being deserialized.</value>
  </data>
  <data name="Serialization_InvalidPtrValue" xml:space="preserve">
    <value>An IntPtr or UIntPtr with an eight byte value cannot be deserialized on a machine with a four byte word size.</value>
  </data>
  <data name="Serialization_InvalidType" xml:space="preserve">
    <value>Only system-provided types can be passed to the GetUninitializedObject method. '{0}' is not a valid instance of a type.</value>
  </data>
  <data name="Serialization_KeyValueDifferentSizes" xml:space="preserve">
    <value>The keys and values arrays have different sizes.</value>
  </data>
  <data name="Serialization_MissingDateTimeData" xml:space="preserve">
    <value>Invalid serialized DateTime data. Unable to find 'ticks' or 'dateData'.</value>
  </data>
  <data name="Serialization_MissingKeys" xml:space="preserve">
    <value>The Keys for this Hashtable are missing.</value>
  </data>
  <data name="Serialization_MissingValues" xml:space="preserve">
    <value>The values for this dictionary are missing.</value>
  </data>
  <data name="Serialization_NoParameterInfo" xml:space="preserve">
    <value>Serialized member does not have a ParameterInfo.</value>
  </data>
  <data name="Serialization_NotFound" xml:space="preserve">
    <value>Member '{0}' was not found.</value>
  </data>
  <data name="Serialization_NullKey" xml:space="preserve">
    <value>One of the serialized keys is null.</value>
  </data>
  <data name="Serialization_OptionalFieldVersionValue" xml:space="preserve">
    <value>Version value must be positive.</value>
  </data>
  <data name="Serialization_SameNameTwice" xml:space="preserve">
    <value>Cannot add the same member twice to a SerializationInfo object.</value>
  </data>
  <data name="Serialization_StringBuilderCapacity" xml:space="preserve">
    <value>The serialized Capacity property of StringBuilder must be positive, less than or equal to MaxCapacity and greater than or equal to the String length.</value>
  </data>
  <data name="Serialization_StringBuilderMaxCapacity" xml:space="preserve">
    <value>The serialized MaxCapacity property of StringBuilder must be positive and greater than or equal to the String length.</value>
  </data>
  <data name="SetterHasNoParams" xml:space="preserve">
    <value>Setter must have parameters.</value>
  </data>
  <data name="SpinLock_Exit_SynchronizationLockException" xml:space="preserve">
    <value>The calling thread does not hold the lock.</value>
  </data>
  <data name="SpinLock_IsHeldByCurrentThread" xml:space="preserve">
    <value>Thread tracking is disabled.</value>
  </data>
  <data name="SpinLock_TryEnter_ArgumentOutOfRange" xml:space="preserve">
    <value>The timeout must be a value between -1 and Int32.MaxValue, inclusive.</value>
  </data>
  <data name="SpinLock_TryEnter_LockRecursionException" xml:space="preserve">
    <value>The calling thread already holds the lock.</value>
  </data>
  <data name="SpinLock_TryReliableEnter_ArgumentException" xml:space="preserve">
    <value>The tookLock argument must be set to false before calling this method.</value>
  </data>
  <data name="SpinWait_SpinUntil_ArgumentNull" xml:space="preserve">
    <value>The condition argument is null.</value>
  </data>
  <data name="SpinWait_SpinUntil_TimeoutWrong" xml:space="preserve">
    <value>The timeout must represent a value between -1 and Int32.MaxValue, inclusive.</value>
  </data>
  <data name="StackTrace_InFileLineNumber" xml:space="preserve">
    <value>in {0}:line {1}</value>
  </data>
  <data name="Task_ContinueWith_ESandLR" xml:space="preserve">
    <value>The specified TaskContinuationOptions combined LongRunning and ExecuteSynchronously.  Synchronous continuations should not be long running.</value>
  </data>
  <data name="Task_ContinueWith_NotOnAnything" xml:space="preserve">
    <value>The specified TaskContinuationOptions excluded all continuation kinds.</value>
  </data>
  <data name="Task_Delay_InvalidDelay" xml:space="preserve">
    <value>The value needs to translate in milliseconds to -1 (signifying an infinite timeout), 0 or a positive integer less than or equal to Int32.MaxValue.</value>
  </data>
  <data name="Task_Delay_InvalidMillisecondsDelay" xml:space="preserve">
    <value>The value needs to be either -1 (signifying an infinite timeout), 0 or a positive integer.</value>
  </data>
  <data name="Task_Dispose_NotCompleted" xml:space="preserve">
    <value>A task may only be disposed if it is in a completion state (RanToCompletion, Faulted or Canceled).</value>
  </data>
  <data name="Task_FromAsync_LongRunning" xml:space="preserve">
    <value>It is invalid to specify TaskCreationOptions.LongRunning in calls to FromAsync.</value>
  </data>
  <data name="Task_FromAsync_PreferFairness" xml:space="preserve">
    <value>It is invalid to specify TaskCreationOptions.PreferFairness in calls to FromAsync.</value>
  </data>
  <data name="Task_MultiTaskContinuation_EmptyTaskList" xml:space="preserve">
    <value>The tasks argument contains no tasks.</value>
  </data>
  <data name="Task_MultiTaskContinuation_FireOptions" xml:space="preserve">
    <value>It is invalid to exclude specific continuation kinds for continuations off of multiple tasks.</value>
  </data>
  <data name="Task_MultiTaskContinuation_NullTask" xml:space="preserve">
    <value>The tasks argument included a null value.</value>
  </data>
  <data name="Task_RunSynchronously_AlreadyStarted" xml:space="preserve">
    <value>RunSynchronously may not be called on a task that was already started.</value>
  </data>
  <data name="Task_RunSynchronously_Continuation" xml:space="preserve">
    <value>RunSynchronously may not be called on a continuation task.</value>
  </data>
  <data name="Task_RunSynchronously_Promise" xml:space="preserve">
    <value>RunSynchronously may not be called on a task not bound to a delegate, such as the task returned from an asynchronous method.</value>
  </data>
  <data name="Task_RunSynchronously_TaskCompleted" xml:space="preserve">
    <value>RunSynchronously may not be called on a task that has already completed.</value>
  </data>
  <data name="Task_Start_AlreadyStarted" xml:space="preserve">
    <value>Start may not be called on a task that was already started.</value>
  </data>
  <data name="Task_Start_ContinuationTask" xml:space="preserve">
    <value>Start may not be called on a continuation task.</value>
  </data>
  <data name="Task_Start_Promise" xml:space="preserve">
    <value>Start may not be called on a promise-style task.</value>
  </data>
  <data name="Task_Start_TaskCompleted" xml:space="preserve">
    <value>Start may not be called on a task that has completed.</value>
  </data>
  <data name="Task_ThrowIfDisposed" xml:space="preserve">
    <value>The task has been disposed.</value>
  </data>
  <data name="Task_WaitMulti_NullTask" xml:space="preserve">
    <value>The tasks array included at least one null element.</value>
  </data>
  <data name="TaskCanceledException_ctor_DefaultMessage" xml:space="preserve">
    <value>A task was canceled.</value>
  </data>
  <data name="TaskCompletionSourceT_TrySetException_NoExceptions" xml:space="preserve">
    <value>The exceptions collection was empty.</value>
  </data>
  <data name="TaskCompletionSourceT_TrySetException_NullException" xml:space="preserve">
    <value>The exceptions collection included at least one null element.</value>
  </data>
  <data name="TaskExceptionHolder_UnhandledException" xml:space="preserve">
    <value>A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread.</value>
  </data>
  <data name="TaskExceptionHolder_UnknownExceptionType" xml:space="preserve">
    <value>(Internal)Expected an Exception or an IEnumerable&lt;Exception&gt;</value>
  </data>
  <data name="TaskScheduler_ExecuteTask_WrongTaskScheduler" xml:space="preserve">
    <value>ExecuteTask may not be called for a task which was previously queued to a different TaskScheduler.</value>
  </data>
  <data name="TaskScheduler_FromCurrentSynchronizationContext_NoCurrent" xml:space="preserve">
    <value>The current SynchronizationContext may not be used as a TaskScheduler.</value>
  </data>
  <data name="TaskScheduler_InconsistentStateAfterTryExecuteTaskInline" xml:space="preserve">
    <value>The TryExecuteTaskInline call to the underlying scheduler succeeded, but the task body was not invoked.</value>
  </data>
  <data name="TaskSchedulerException_ctor_DefaultMessage" xml:space="preserve">
    <value>An exception was thrown by a TaskScheduler.</value>
  </data>
  <data name="TaskT_DebuggerNoResult" xml:space="preserve">
    <value>{Not yet computed}</value>
  </data>
  <data name="TaskT_TransitionToFinal_AlreadyCompleted" xml:space="preserve">
    <value>An attempt was made to transition a task to a final state when it had already completed.</value>
  </data>
  <data name="Thread_ApartmentState_ChangeFailed" xml:space="preserve">
    <value>Failed to set the specified COM apartment state.</value>
  </data>
  <data name="Thread_GetSetCompressedStack_NotSupported" xml:space="preserve">
    <value>Use CompressedStack.(Capture/Run) instead.</value>
  </data>
  <data name="Thread_Operation_RequiresCurrentThread" xml:space="preserve">
    <value>This operation must be performed on the same thread as that represented by the Thread instance.</value>
  </data>
  <data name="Threading_AbandonedMutexException" xml:space="preserve">
    <value>The wait completed due to an abandoned mutex.</value>
  </data>
  <data name="Threading_WaitHandleCannotBeOpenedException" xml:space="preserve">
    <value>No handle of the given name exists.</value>
  </data>
  <data name="Threading_WaitHandleCannotBeOpenedException_InvalidHandle" xml:space="preserve">
    <value>A WaitHandle with system-wide name '{0}' cannot be created. A WaitHandle of a different type might have the same name.</value>
  </data>
  <data name="Threading_WaitHandleTooManyPosts" xml:space="preserve">
    <value>The WaitHandle cannot be signaled because it would exceed its maximum count.</value>
  </data>
  <data name="Threading_SemaphoreFullException" xml:space="preserve">
    <value>Adding the specified count to the semaphore would cause it to exceed its maximum count.</value>
  </data>
  <data name="Threading_ThreadInterrupted" xml:space="preserve">
    <value>Thread was interrupted from a waiting state.</value>
  </data>
  <data name="ThreadLocal_Disposed" xml:space="preserve">
    <value>The ThreadLocal object has been disposed.</value>
  </data>
  <data name="ThreadLocal_Value_RecursiveCallsToValue" xml:space="preserve">
    <value>ValueFactory attempted to access the Value property of this instance.</value>
  </data>
  <data name="ThreadLocal_ValuesNotAvailable" xml:space="preserve">
    <value>The ThreadLocal object is not tracking values. To use the Values property, use a ThreadLocal constructor that accepts the trackAllValues parameter and set the parameter to true.</value>
  </data>
  <data name="TimeZoneNotFound_MissingData" xml:space="preserve">
    <value>The time zone ID '{0}' was not found on the local computer.</value>
  </data>
  <data name="TypeInitialization_Default" xml:space="preserve">
    <value>Type constructor threw an exception.</value>
  </data>
  <data name="TypeInitialization_Type" xml:space="preserve">
    <value>The type initializer for '{0}' threw an exception.</value>
  </data>
  <data name="TypeLoad_ResolveNestedType" xml:space="preserve">
    <value>Could not resolve nested type '{0}' in type "{1}'.</value>
  </data>
  <data name="TypeLoad_ResolveType" xml:space="preserve">
    <value>Could not resolve type '{0}'.</value>
  </data>
  <data name="TypeLoad_ResolveTypeFromAssembly" xml:space="preserve">
    <value>Could not resolve type '{0}' in assembly '{1}'.</value>
  </data>
  <data name="UnauthorizedAccess_IODenied_NoPathName" xml:space="preserve">
    <value>Access to the path is denied.</value>
  </data>
  <data name="UnauthorizedAccess_IODenied_Path" xml:space="preserve">
    <value>Access to the path '{0}' is denied.</value>
  </data>
  <data name="UnauthorizedAccess_MemStreamBuffer" xml:space="preserve">
    <value>MemoryStream's internal buffer cannot be accessed.</value>
  </data>
  <data name="UnauthorizedAccess_RegistryKeyGeneric_Key" xml:space="preserve">
    <value>Access to the registry key '{0}' is denied.</value>
  </data>
  <data name="UnknownError_Num" xml:space="preserve">
    <value>Unknown error "{0}".</value>
  </data>
  <data name="Verification_Exception" xml:space="preserve">
    <value>Operation could destabilize the runtime.</value>
  </data>
  <data name="Word_At" xml:space="preserve">
    <value>at</value>
  </data>
  <data name="DebugAssertBanner" xml:space="preserve">
    <value>---- DEBUG ASSERTION FAILED ----</value>
  </data>
  <data name="DebugAssertLongMessage" xml:space="preserve">
    <value>---- Assert Long Message ----</value>
  </data>
  <data name="DebugAssertShortMessage" xml:space="preserve">
    <value>---- Assert Short Message ----</value>
  </data>
  <data name="LockRecursionException_ReadAfterWriteNotAllowed" xml:space="preserve">
    <value>A read lock may not be acquired with the write lock held in this mode.</value>
  </data>
  <data name="LockRecursionException_RecursiveReadNotAllowed" xml:space="preserve">
    <value>Recursive read lock acquisitions not allowed in this mode.</value>
  </data>
  <data name="LockRecursionException_RecursiveWriteNotAllowed" xml:space="preserve">
    <value>Recursive write lock acquisitions not allowed in this mode.</value>
  </data>
  <data name="LockRecursionException_RecursiveUpgradeNotAllowed" xml:space="preserve">
    <value>Recursive upgradeable lock acquisitions not allowed in this mode.</value>
  </data>
  <data name="LockRecursionException_WriteAfterReadNotAllowed" xml:space="preserve">
    <value>Write lock may not be acquired with read lock held. This pattern is prone to deadlocks. Please ensure that read locks are released before taking a write lock. If an upgrade is necessary, use an upgrade lock in place of the read lock.</value>
  </data>
  <data name="SynchronizationLockException_MisMatchedUpgrade" xml:space="preserve">
    <value>The upgradeable lock is being released without being held.</value>
  </data>
  <data name="SynchronizationLockException_MisMatchedRead" xml:space="preserve">
    <value>The read lock is being released without being held.</value>
  </data>
  <data name="SynchronizationLockException_IncorrectDispose" xml:space="preserve">
    <value>The lock is being disposed while still being used. It either is being held by a thread and/or has active waiters waiting to acquire the lock.</value>
  </data>
  <data name="LockRecursionException_UpgradeAfterReadNotAllowed" xml:space="preserve">
    <value>Upgradeable lock may not be acquired with read lock held.</value>
  </data>
  <data name="LockRecursionException_UpgradeAfterWriteNotAllowed" xml:space="preserve">
    <value>Upgradeable lock may not be acquired with write lock held in this mode. Acquiring Upgradeable lock gives the ability to read along with an option to upgrade to a writer.</value>
  </data>
  <data name="SynchronizationLockException_MisMatchedWrite" xml:space="preserve">
    <value>The write lock is being released without being held.</value>
  </data>
  <data name="NotSupported_SignatureType" xml:space="preserve">
    <value>This method is not supported on signature types.</value>
  </data>
  <data name="Memory_OutstandingReferences" xml:space="preserve">
    <value>Release all references before disposing this instance.</value>
  </data>
  <data name="HashCode_HashCodeNotSupported" xml:space="preserve">
    <value>HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.</value>
  </data>
  <data name="HashCode_EqualityNotSupported" xml:space="preserve">
    <value>HashCode is a mutable struct and should not be compared with other HashCodes.</value>
  </data>
  <data name="Arg_TypeNotSupported" xml:space="preserve">
    <value>Specified type is not supported</value>
  </data>
  <data name="IO_InvalidReadLength" xml:space="preserve">
    <value>The read operation returned an invalid length.</value>
  </data>
  <data name="Arg_BasePathNotFullyQualified" xml:space="preserve">
    <value>Basepath argument is not fully qualified.</value>
  </data>
  <data name="Arg_ElementsInSourceIsGreaterThanDestination" xml:space="preserve">
    <value>Number of elements in source vector is greater than the destination array</value>
  </data>
  <data name="Arg_NullArgumentNullRef" xml:space="preserve">
    <value>The method was called with a null array argument.</value>
  </data>
  <data name="Argument_CannotPrepareAbstract" xml:space="preserve">
    <value>Abstract methods cannot be prepared.</value>
  </data>
  <data name="Argument_InvalidGenericInstantiation" xml:space="preserve">
    <value>The given generic instantiation was invalid.</value>
  </data>
  <data name="Argument_OverlapAlignmentMismatch" xml:space="preserve">
    <value>Overlapping spans have mismatching alignment.</value>
  </data>
  <data name="Arg_InsufficientNumberOfElements" xml:space="preserve">
    <value>At least {0} element(s) are expected in the parameter "{1}".</value>
  </data>
  <data name="Arg_MustBeNullTerminatedString" xml:space="preserve">
    <value>The string must be null-terminated.</value>
  </data>
  <data name="ArgumentOutOfRange_Week_ISO" xml:space="preserve">
    <value>The week parameter must be in the range 1 through 53.</value>
  </data>
  <data name="Argument_BadPInvokeMethod" xml:space="preserve">
    <value>PInvoke methods must be static and native and cannot be abstract.</value>
  </data>
  <data name="Argument_BadPInvokeOnInterface" xml:space="preserve">
    <value>PInvoke methods cannot exist on interfaces.</value>
  </data>
  <data name="Argument_MethodRedefined" xml:space="preserve">
    <value>Method has been already defined.</value>
  </data>
  <data name="Argument_CannotExtractScalar" xml:space="preserve">
    <value>Cannot extract a Unicode scalar value from the specified index in the input.</value>
  </data>
  <data name="Argument_CannotParsePrecision" xml:space="preserve">
    <value>Characters following the format symbol must be a number of {0} or less.</value>
  </data>
  <data name="Argument_GWithPrecisionNotSupported" xml:space="preserve">
    <value>The 'G' format combined with a precision is not supported.</value>
  </data>
  <data name="Argument_PrecisionTooLarge" xml:space="preserve">
    <value>Precision cannot be larger than {0}.</value>
  </data>
  <data name="AssemblyDependencyResolver_FailedToLoadHostpolicy" xml:space="preserve">
    <value>Cannot load hostpolicy library. AssemblyDependencyResolver is currently only supported if the runtime is hosted through hostpolicy library.</value>
  </data>
  <data name="AssemblyDependencyResolver_FailedToResolveDependencies" xml:space="preserve">
    <value>Dependency resolution failed for component {0} with error code {1}. Detailed error: {2}</value>
  </data>
  <data name="Arg_EnumNotCloneable" xml:space="preserve">
    <value>The supplied object does not implement ICloneable.</value>
  </data>
  <data name="InvalidOp_InvalidNewEnumVariant" xml:space="preserve">
    <value>The returned enumerator does not implement IEnumVARIANT.</value>
  </data>
  <data name="Argument_StructArrayTooLarge" xml:space="preserve">
    <value>Array size exceeds addressing limitations.</value>
  </data>
  <data name="IndexOutOfRange_ArrayWithOffset" xml:space="preserve">
    <value>ArrayWithOffset: offset exceeds array size.</value>
  </data>
  <data name="Serialization_DangerousDeserialization" xml:space="preserve">
    <value>An action was attempted during deserialization that could lead to a security vulnerability. The action has been aborted.</value>
  </data>
  <data name="Serialization_DangerousDeserialization_Switch" xml:space="preserve">
    <value>An action was attempted during deserialization that could lead to a security vulnerability. The action has been aborted. To allow the action, set the '{0}' AppContext switch to true.</value>
  </data>
  <data name="Argument_InvalidStartupHookSimpleAssemblyName" xml:space="preserve">
    <value>The startup hook simple assembly name '{0}' is invalid. It must be a valid assembly name and it may not contain directory separator, space or comma characters and must not end with '.dll'.</value>
  </data>
  <data name="Argument_StartupHookAssemblyLoadFailed" xml:space="preserve">
    <value>Startup hook assembly '{0}' failed to load. See inner exception for details.</value>
  </data>
  <data name="InvalidOperation_NonStaticComRegFunction" xml:space="preserve">
    <value>COM register function must be static.</value>
  </data>
  <data name="InvalidOperation_NonStaticComUnRegFunction" xml:space="preserve">
    <value>COM unregister function must be static.</value>
  </data>
  <data name="InvalidOperation_InvalidComRegFunctionSig" xml:space="preserve">
    <value>COM register function must have a System.Type parameter and a void return type.</value>
  </data>
  <data name="InvalidOperation_InvalidComUnRegFunctionSig" xml:space="preserve">
    <value>COM unregister function must have a System.Type parameter and a void return type.</value>
  </data>
  <data name="InvalidOperation_MultipleComRegFunctions" xml:space="preserve">
    <value>Type '{0}' has more than one COM registration function.</value>
  </data>
  <data name="InvalidOperation_MultipleComUnRegFunctions" xml:space="preserve">
    <value>Type '{0}' has more than one COM unregistration function.</value>
  </data>
  <data name="InvalidOperation_ResetGlobalComWrappersInstance" xml:space="preserve">
    <value>Attempt to update previously set global instance.</value>
  </data>
  <data name="Utf8String_CallbackProvidedMalformedData" xml:space="preserve">
    <value>The callback populated its buffer with ill-formed UTF-8 data. Callbacks are required to populate the buffer only with well-formed UTF-8 data.</value>
  </data>
  <data name="Utf8String_InputContainedMalformedUtf16" xml:space="preserve">
    <value>The input buffer contained ill-formed UTF-16 data.</value>
  </data>
  <data name="Utf8String_InputContainedMalformedUtf8" xml:space="preserve">
    <value>The input buffer contained ill-formed UTF-8 data.</value>
  </data>
  <data name="Utf8String_CannotSplitMultibyteSubsequence" xml:space="preserve">
    <value>Cannot create the desired substring because it would split a multi-byte UTF-8 subsequence.</value>
  </data>
  <data name="Utf8Span_CannotCallEqualsObject" xml:space="preserve">
    <value>Cannot call Utf8Span.Equals(object). Use Equals(Utf8Span) or operator == instead.</value>
  </data>
  <data name="ArgumentOutOfRange_Utf16SurrogatesDisallowed" xml:space="preserve">
    <value>UTF-16 surrogate code points (U+D800..U+DFFF) are disallowed.</value>
  </data>
  <data name="Argument_CannotBeEmptySpan" xml:space="preserve">
    <value>Argument cannot be an empty span.</value>
  </data>
  <data name="Argument_CannotBeNullOrEmpty" xml:space="preserve">
    <value>Argument cannot be null or empty.</value>
  </data>
  <data name="Argument_SpansMustHaveSameLength" xml:space="preserve">
    <value>Length of items must be same as length of keys.</value>
  </data>
  <data name="NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed" xml:space="preserve">
    <value>Cannot write to a BufferedStream while the read buffer is not empty if the underlying stream is not seekable. Ensure that the stream underlying this BufferedStream can seek or avoid interleaving read and write operations on this BufferedStream.</value>
  </data>
  <data name="GenericInvalidData" xml:space="preserve">
    <value>Found invalid data while decoding.</value>
  </data>
  <data name="Argument_ResourceScopeWrongDirection" xml:space="preserve">
    <value>Resource type in the ResourceScope enum is going from a more restrictive resource type to a more general one.  From: "{0}"  To: "{1}"</value>
  </data>
  <data name="ArgumentNull_TypeRequiredByResourceScope" xml:space="preserve">
    <value>The type parameter cannot be null when scoping the resource's visibility to Private or Assembly.</value>
  </data>
  <data name="Argument_BadResourceScopeTypeBits" xml:space="preserve">
    <value>Unknown value for the ResourceScope: {0}  Too many resource type bits may be set.</value>
  </data>
  <data name="Argument_BadResourceScopeVisibilityBits" xml:space="preserve">
    <value>Unknown value for the ResourceScope: {0}  Too many resource visibility bits may be set.</value>
  </data>
  <data name="net_emptystringcall" xml:space="preserve">
    <value>The parameter '{0}' cannot be an empty string.</value>
  </data>
  <data name="Argument_EmptyApplicationName" xml:space="preserve">
    <value>ApplicationId cannot have an empty string for the name.</value>
  </data>
  <data name="Argument_FrameworkNameInvalid" xml:space="preserve">
    <value> FrameworkName is invalid.</value>
  </data>
  <data name="Argument_FrameworkNameInvalidVersion" xml:space="preserve">
    <value>FrameworkName version component is invalid.</value>
  </data>
  <data name="Argument_FrameworkNameMissingVersion" xml:space="preserve">
    <value>FrameworkName version component is missing.</value>
  </data>
  <data name="Argument_FrameworkNameTooShort" xml:space="preserve">
    <value>FrameworkName cannot have less than two components or more than three components.</value>
  </data>
  <data name="Arg_SwitchExpressionException" xml:space="preserve">
    <value>Non-exhaustive switch expression failed to match its input.</value>
  </data>
  <data name="Arg_ContextMarshalException" xml:space="preserve">
    <value>Attempted to marshal an object across a context boundary.</value>
  </data>
  <data name="Arg_AppDomainUnloadedException" xml:space="preserve">
    <value>Attempted to access an unloaded AppDomain.</value>
  </data>
  <data name="SwitchExpressionException_UnmatchedValue" xml:space="preserve">
    <value>Unmatched value was {0}.</value>
  </data>
  <data name="Encoding_UTF7_Disabled" xml:space="preserve">
    <value>Support for UTF-7 is disabled. See {0} for more information.</value>
  </data>
  <data name="IDynamicInterfaceCastable_DoesNotImplementRequested" xml:space="preserve">
    <value>Type '{0}' returned by IDynamicInterfaceCastable does not implement the requested interface '{1}'.</value>
  </data>
  <data name="IDynamicInterfaceCastable_MissingImplementationAttribute" xml:space="preserve">
    <value>Type '{0}' returned by IDynamicInterfaceCastable does not have the attribute '{1}'.</value>
  </data>
  <data name="IDynamicInterfaceCastable_NotInterface" xml:space="preserve">
    <value>Type '{0}' returned by IDynamicInterfaceCastable is not an interface.</value>
  </data>
  <data name="Arg_MustBeHalf" xml:space="preserve">
    <value>Object must be of type Half.</value>
  </data>
  <data name="Arg_MustBeRune" xml:space="preserve">
    <value>Object must be of type Rune.</value>
  </data>
  <data name="BinaryFormatter_SerializationDisallowed" xml:space="preserve">
    <value>BinaryFormatter serialization and deserialization are disabled within this application. See https://aka.ms/binaryformatter for more information.</value>
  </data>
  <data name="NotSupported_CodeBase" xml:space="preserve">
    <value>CodeBase is not supported on assemblies loaded from a single-file bundle.</value>
  </data>
</root>
