<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.CodeAnalysis.Remote</RootNamespace>
    <TargetFrameworks>netcoreapp3.1;netstandard2.0</TargetFrameworks>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <ApplyNgenOptimization Condition="'$(TargetFramework)' == 'netstandard2.0'">partial</ApplyNgenOptimization>

    <!-- NuGet -->
    <IsPackable>true</IsPackable>
    <PackageDescription>
      A shared package used by the .NET Compiler Platform ("Roslyn") including support for coordinating analysis of projects and solutions using a separate server process.
      Do not install this package manually, it will be added as a prerequisite by other packages that require it.
    </PackageDescription>
  </PropertyGroup>
  <ItemGroup Label="Project References">
    <!--
      Features are currently required due to dependencies from JSON serializer and SolutionChecksumUpdater (Solution Crawler).
      https://github.com/dotnet/roslyn/issues/46519
    -->
    <ProjectReference Include="..\..\..\Features\Core\Portable\Microsoft.CodeAnalysis.Features.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Composition" Version="$(SystemCompositionVersion)" />
    <PackageReference Include="System.ComponentModel.Composition" Version="$(SystemComponentModelCompositionVersion)" />
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Telemetry" Version="$(MicrosoftVisualStudioTelemetryVersion)" PrivateAssets="all" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="Microsoft.ServiceHub.Client" Version="$(MicrosoftServiceHubClientVersion)" />
  </ItemGroup>
  <ItemGroup>
    <PublicAPI Include="PublicAPI.Shipped.txt" />
    <PublicAPI Include="PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="RemoteWorkspacesResources.resx" GenerateSource="true" />
  </ItemGroup>
  <ItemGroup>
    <InternalsVisibleTo Include="Roslyn.Hosting.Diagnostics" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Remote.Razor.ServiceHub" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Remote.ServiceHub" />
    <RestrictedInternalsVisibleTo Include="Microsoft.CodeAnalysis.LiveUnitTesting.BuildManager" Partner="UnitTesting" Key="$(UnitTestingKey)" />
    <RestrictedInternalsVisibleTo Include="Microsoft.CodeAnalysis.UnitTesting.SourceBasedTestDiscovery" Partner="UnitTesting" Key="$(UnitTestingKey)" />
    <InternalsVisibleTo Include="Roslyn.VisualStudio.DiagnosticsWindow" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.CodeLens" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.CSharp" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.LanguageServices.VisualBasic" />
    <InternalsVisibleTo Include="Roslyn.VisualStudio.Next.UnitTests" />
    <InternalsVisibleTo Include="Roslyn.Services.Test.Utilities" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.EditorFeatures.Test.Utilities" />
    <InternalsVisibleTo Include="Microsoft.CodeAnalysis.Workspaces.UnitTests" />
    <InternalsVisibleTo Include="Roslyn.Services.UnitTests.Utilities" />
    <InternalsVisibleTo Include="Microsoft.VisualStudio.Completion.Tests" Key="$(IntelliCodeKey)" WorkItem="https://github.com/dotnet/roslyn/issues/35081" />
    <RestrictedInternalsVisibleTo Include="Microsoft.VisualStudio.IntelliCode.CSharp" Partner="Pythia" Key="$(IntelliCodeKey)" />
    <RestrictedInternalsVisibleTo Include="Microsoft.VisualStudio.IntelliCode.CSharp.Extraction" Partner="Pythia" Key="$(IntelliCodeKey)" />
    
    <!-- BEGIN MONODEVELOP
    These MonoDevelop dependencies don't ship with Visual Studio, so can't break our
    binary insertions and are exempted from the ExternalAccess adapter assembly policies.
    -->
    <InternalsVisibleTo Include="MonoDevelop.Ide" Key="$(MonoDevelopKey)" LoadsWithinVisualStudio="false" />
    <InternalsVisibleTo Include="MonoDevelop.Refactoring" Key="$(MonoDevelopKey)" LoadsWithinVisualStudio="false" />
    <InternalsVisibleTo Include="MonoDevelop.Ide.Tests" Key="$(MonoDevelopKey)" LoadsWithinVisualStudio="false" />
    <InternalsVisibleTo Include="MonoDevelop.Refactoring.Tests" Key="$(MonoDevelopKey)" LoadsWithinVisualStudio="false" />
    <!-- END MONODEVELOP -->
  </ItemGroup>
</Project>
