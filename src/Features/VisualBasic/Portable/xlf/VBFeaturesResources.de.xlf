<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="de" original="../VBFeaturesResources.resx">
    <body>
      <trans-unit id="Add_Await">
        <source>Add Await</source>
        <target state="translated">"Await" hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_Await_and_ConfigureAwaitFalse">
        <source>Add Await and 'ConfigureAwait(false)'</source>
        <target state="translated">"Await" und "ConfigureAwait(false)" hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_Obsolete">
        <source>Add &lt;Obsolete&gt;</source>
        <target state="translated">&lt;Veraltet&gt; hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_missing_Imports">
        <source>Add missing Imports</source>
        <target state="translated">Fehlende Importe hinzufügen</target>
        <note>{Locked="Import"} "Import" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Add_Shadows">
        <source>Add 'Shadows'</source>
        <target state="translated">"Shadows" hinzufügen</target>
        <note>{Locked="Shadows"} "Shadows" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="If_statement_can_be_simplified">
        <source>'If' statement can be simplified</source>
        <target state="translated">Die If-Anweisung kann vereinfacht werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_0">
        <source>Insert '{0}'.</source>
        <target state="translated">"{0}" einfügen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Delete_the_0_statement1">
        <source>Delete the '{0}' statement.</source>
        <target state="translated">Löschen der "{0}"-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Create_event_0_in_1">
        <source>Create event {0} in {1}</source>
        <target state="translated">Ereignis {0} in {1} erstellen</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_the_missing_End_Property_statement">
        <source>Insert the missing 'End Property' statement.</source>
        <target state="translated">Fügen Sie die fehlende "End Property"-Anweisung ein.</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_the_missing_0">
        <source>Insert the missing '{0}'.</source>
        <target state="translated">Fügen Sie das fehlende "{0}" ein.</target>
        <note />
      </trans-unit>
      <trans-unit id="Inline_temporary_variable">
        <source>Inline temporary variable</source>
        <target state="translated">Inline temporär variabel</target>
        <note />
      </trans-unit>
      <trans-unit id="Conflict_s_detected">
        <source>Conflict(s) detected.</source>
        <target state="translated">Konflikt(e) erkannt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduce_Using_statement">
        <source>Introduce 'Using' statement</source>
        <target state="translated">Using-Anweisung einführen</target>
        <note>{Locked="Using"} "Using" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Make_0_inheritable">
        <source>Make '{0}' inheritable</source>
        <target state="translated">"{0}" als vererbbar festlegen</target>
        <note />
      </trans-unit>
      <trans-unit id="Move_the_0_statement_to_line_1">
        <source>Move the '{0}' statement to line {1}.</source>
        <target state="translated">Verschieben Sie die "{0}"-Anweisung zu Zeile {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="Delete_the_0_statement2">
        <source>Delete the '{0}' statement.</source>
        <target state="translated">Löschen der "{0}"-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Multiple_Types">
        <source>&lt;Multiple Types&gt;</source>
        <target state="translated">&lt;Mehrere Typen&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_Unnecessary_Imports">
        <source>Remove Unnecessary Imports</source>
        <target state="translated">Unnötige Import-Direktiven entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_new_field">
        <source>Type a name here to declare a new field.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um ein neues Feld zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Note_colon_Space_completion_is_disabled_to_avoid_potential_interference_To_insert_a_name_from_the_list_use_tab">
        <source>Note: Space completion is disabled to avoid potential interference. To insert a name from the list, use tab.</source>
        <target state="translated">Hinweis: Die Vervollständigung mit der LEERTASTE wurde deaktiviert, um Probleme zu vermeiden. Verwenden Sie zum Einfügen eines Namens aus der Liste die TAB-TASTE.</target>
        <note />
      </trans-unit>
      <trans-unit id="new_field">
        <source>&lt;new field&gt;</source>
        <target state="translated">&lt;neues Feld&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_parameter_If_no_preceding_keyword_is_used_ByVal_will_be_assumed_and_the_argument_will_be_passed_by_value">
        <source>Type a name here to declare a parameter. If no preceding keyword is used; 'ByVal' will be assumed and the argument will be passed by value.</source>
        <target state="translated">Geben Sie hier einen Namen zum Deklarieren eines Parameters ein. Wenn kein vorhergehendes Schlüsselwort verwendet wird, wird von "ByVal" ausgegangen, und das Argument wird nach Wert übergeben.</target>
        <note />
      </trans-unit>
      <trans-unit id="parameter_name">
        <source>&lt;parameter name&gt;</source>
        <target state="translated">&lt;Parametername&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_new_name_for_the_column_followed_by_Otherwise_the_original_column_name_with_be_used">
        <source>Type a new name for the column, followed by '='. Otherwise, the original column name with be used.</source>
        <target state="translated">Geben Sie einen neuen Namen für die Spalte und anschließend "=" ein. Andernfalls wird der ursprüngliche Spaltenname verwendet.</target>
        <note />
      </trans-unit>
      <trans-unit id="Note_colon_Use_tab_for_automatic_completion_space_completion_is_disabled_to_avoid_interfering_with_a_new_name">
        <source>Note: Use tab for automatic completion; space completion is disabled to avoid interfering with a new name.</source>
        <target state="translated">Hinweis: Verwenden Sie die TAB-TASTE für die automatische Vervollständigung. Die Vervollständigung mit der LEERTASTE wurde deaktiviert, um die problemlose Eingabe neuer Namen zu gestatten.</target>
        <note />
      </trans-unit>
      <trans-unit id="result_alias">
        <source>&lt;result alias&gt;</source>
        <target state="translated">&lt;Ergebnisalias&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_new_variable_name">
        <source>Type a new variable name</source>
        <target state="translated">Geben Sie einen neuen Variablennamen ein</target>
        <note />
      </trans-unit>
      <trans-unit id="Note_colon_Space_and_completion_are_disabled_to_avoid_potential_interference_To_insert_a_name_from_the_list_use_tab">
        <source>Note: Space and '=' completion are disabled to avoid potential interference. To insert a name from the list, use tab.</source>
        <target state="translated">Hinweis: Die Vervollständigung mit der LEERTASTE und mit " =" wurde deaktiviert, um Probleme zu vermeiden. Verwenden Sie zum Einfügen eines Namens aus der Liste die TAB-TASTE.</target>
        <note />
      </trans-unit>
      <trans-unit id="new_resource">
        <source>&lt;new resource&gt;</source>
        <target state="translated">&lt;neue Ressource&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="AddHandler_statement">
        <source>AddHandler statement</source>
        <target state="translated">AddHandler-Anweisung</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveHandler_statement">
        <source>RemoveHandler statement</source>
        <target state="translated">RemoveHandler-Anweisung</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_function">
        <source>{0} function</source>
        <target state="translated">{0}-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="CType_function">
        <source>CType function</source>
        <target state="translated">CType-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="DirectCast_function">
        <source>DirectCast function</source>
        <target state="translated">DirectCast-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="TryCast_function">
        <source>TryCast function</source>
        <target state="translated">TryCast-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="GetType_function">
        <source>GetType function</source>
        <target state="translated">GetType-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="GetXmlNamespace_function">
        <source>GetXmlNamespace function</source>
        <target state="translated">GetXmlNamespace-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="Mid_statement">
        <source>Mid statement</source>
        <target state="translated">Mid-Anweisung</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_Incorrect_Function_Return_Type">
        <source>Fix Incorrect Function Return Type</source>
        <target state="translated">Rückgabetyp für unzulässige Funktion beheben</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_name_0">
        <source>Simplify name '{0}'</source>
        <target state="translated">Namen "{0}" vereinfachen</target>
        <note />
      </trans-unit>
      <trans-unit id="Simplify_member_access_0">
        <source>Simplify member access '{0}'</source>
        <target state="translated">Memberzugriff "{0}" vereinfachen</target>
        <note />
      </trans-unit>
      <trans-unit id="Remove_Me_qualification">
        <source>Remove 'Me' qualification</source>
        <target state="translated">Qualifikation "Me" entfernen</target>
        <note />
      </trans-unit>
      <trans-unit id="Name_can_be_simplified">
        <source>Name can be simplified</source>
        <target state="translated">Der Name kann vereinfacht werden</target>
        <note />
      </trans-unit>
      <trans-unit id="can_t_determine_valid_range_of_statements_to_extract_out">
        <source>can't determine valid range of statements to extract out</source>
        <target state="translated">gültiger Bereich der zu extrahierenden Anweisungen kann nicht bestimmt werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Not_all_code_paths_return">
        <source>Not all code paths return</source>
        <target state="translated">Nicht alle Codepfadrückgaben</target>
        <note />
      </trans-unit>
      <trans-unit id="contains_invalid_selection">
        <source>contains invalid selection</source>
        <target state="translated">enthält ungültige Auswahl</target>
        <note />
      </trans-unit>
      <trans-unit id="the_selection_contains_syntactic_errors">
        <source>the selection contains syntactic errors</source>
        <target state="translated">die Auswahl enthält Syntaxfehler</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_can_t_be_crossed_over_preprocessors">
        <source>Selection can't be crossed over preprocessors</source>
        <target state="translated">Auswahl kann nicht mit Vorprozessoren überkreuzt werden</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_can_t_contain_throw_without_enclosing_catch_block">
        <source>Selection can't contain throw without enclosing catch block</source>
        <target state="translated">Auswahl kann keinen Wurf ohne einschließenden Erfassungsblock enthalten</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_can_t_be_parts_of_constant_initializer_expression">
        <source>Selection can't be parts of constant initializer expression</source>
        <target state="translated">Auswahl kann nicht Teil von konstantem Initialisierungsausdruck sein</target>
        <note />
      </trans-unit>
      <trans-unit id="Argument_used_for_ByRef_parameter_can_t_be_extracted_out">
        <source>Argument used for ByRef parameter can't be extracted out</source>
        <target state="translated">Für ByRef-Parameter verwendetes Argument kann nicht extrahiert werden</target>
        <note />
      </trans-unit>
      <trans-unit id="all_static_local_usages_defined_in_the_selection_must_be_included_in_the_selection">
        <source>all static local usages defined in the selection must be included in the selection</source>
        <target state="translated">alle statischen lokalen Verwendungen, die in der Auswahl definiert sind, müssen in der Auswahl enthalten sein</target>
        <note />
      </trans-unit>
      <trans-unit id="Implicit_member_access_can_t_be_included_in_the_selection_without_containing_statement">
        <source>Implicit member access can't be included in the selection without containing statement</source>
        <target state="translated">Impliziter Memberzugriff kann in der Auswahl nicht ohne enthaltene Anweisung enthalten sein</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_must_be_part_of_executable_statements">
        <source>Selection must be part of executable statements</source>
        <target state="translated">Auswahl muss Teil ausführbarer Anweisungen sein</target>
        <note />
      </trans-unit>
      <trans-unit id="next_statement_control_variable_doesn_t_have_matching_declaration_statement">
        <source>next statement control variable doesn't have matching declaration statement</source>
        <target state="translated">Die Steuervariable der next-Anweisung besitzt keine übereinstimmende Deklarationsanweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_doesn_t_contain_any_valid_node">
        <source>Selection doesn't contain any valid node</source>
        <target state="translated">Auswahl enthält keinen gültigen Knoten</target>
        <note />
      </trans-unit>
      <trans-unit id="no_valid_statement_range_to_extract_out">
        <source>no valid statement range to extract out</source>
        <target state="translated">kein gültiger Anweisungsbereich für die Extraktion</target>
        <note />
      </trans-unit>
      <trans-unit id="Invalid_selection">
        <source>Invalid selection</source>
        <target state="translated">Ungültige Auswahl</target>
        <note />
      </trans-unit>
      <trans-unit id="Selection_doesn_t_contain_any_valid_token">
        <source>Selection doesn't contain any valid token</source>
        <target state="translated">Auswahl enthält keinen gültigen Token</target>
        <note />
      </trans-unit>
      <trans-unit id="No_valid_selection_to_perform_extraction">
        <source>No valid selection to perform extraction</source>
        <target state="translated">Keine gültige Auswahl für die Druckführung der Extraktion</target>
        <note />
      </trans-unit>
      <trans-unit id="No_common_root_node_for_extraction">
        <source>No common root node for extraction</source>
        <target state="translated">Es ist kein gemeinsamer Stammknoten für die Extraktion vorhanden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Deprecated">
        <source>Deprecated</source>
        <target state="translated">Veraltet</target>
        <note />
      </trans-unit>
      <trans-unit id="Extension">
        <source>Extension</source>
        <target state="translated">Erweiterung</target>
        <note />
      </trans-unit>
      <trans-unit id="Awaitable">
        <source>Awaitable</source>
        <target state="translated">Awaitable</target>
        <note />
      </trans-unit>
      <trans-unit id="Awaitable_Extension">
        <source>Awaitable, Extension</source>
        <target state="translated">Awaitable, Erweiterung</target>
        <note />
      </trans-unit>
      <trans-unit id="new_variable">
        <source>&lt;new variable&gt;</source>
        <target state="translated">&lt;neue Variable&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Creates_a_delegate_procedure_instance_that_references_the_specified_procedure_AddressOf_procedureName">
        <source>Creates a delegate procedure instance that references the specified procedure.
AddressOf &lt;procedureName&gt;</source>
        <target state="translated">Erstellt eine Delegatprozedurinstanz, die auf die angegebene Prozedur verweist.
AddressOf &lt;procedureName&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_that_an_external_procedure_has_another_name_in_its_DLL">
        <source>Indicates that an external procedure has another name in its DLL.</source>
        <target state="translated">Gibt an, dass eine externe Prozedur in der entsprechenden DLL einen anderen Namen hat.</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_a_short_circuit_logical_conjunction_on_two_expressions_Returns_True_if_both_operands_evaluate_to_True_If_the_first_expression_evaluates_to_False_the_second_is_not_evaluated_result_expression1_AndAlso_expression2">
        <source>Performs a short-circuit logical conjunction on two expressions. Returns True if both operands evaluate to True. If the first expression evaluates to False, the second is not evaluated.
&lt;result&gt; = &lt;expression1&gt; AndAlso &lt;expression2&gt;</source>
        <target state="translated">Führt eine verkürzte logische Konjunktion für zwei Ausdrücke durch. Gibt True zurück, wenn beide Operanden als True ausgewertet werden. Wenn der erste Ausdruck als False ausgewertet wird, wird der zweite Ausdruck nicht ausgewertet.
 &lt; Ergebnis&gt; = &lt;Ausdruck1&gt; AndAlso &lt; Ausdruck2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_a_logical_conjunction_on_two_Boolean_expressions_or_a_bitwise_conjunction_on_two_numeric_expressions_For_Boolean_expressions_returns_True_if_both_operands_evaluate_to_True_Both_expressions_are_always_evaluated_result_expression1_And_expression2">
        <source>Performs a logical conjunction on two Boolean expressions, or a bitwise conjunction on two numeric expressions. For Boolean expressions, returns True if both operands evaluate to True. Both expressions are always evaluated.
&lt;result&gt; = &lt;expression1&gt; And &lt;expression2&gt;</source>
        <target state="translated">Führt eine logische Konjunktion für zwei boolesche Ausdrücke oder eine bitweise Konjunktion für zwei numerische Ausdrücke durch. Gibt bei booleschen Ausdrücken True zurück, wenn beide Operanden als True ausgewertet werden. Beide Ausdrücke werden immer ausgewertet.
&lt;Ergebnis&gt; = &lt;Ausdruck1&gt; And &lt;Ausdruck2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Used_in_a_Declare_statement_The_Ansi_modifier_specifies_that_Visual_Basic_should_marshal_all_strings_to_ANSI_values_and_should_look_up_the_procedure_without_modifying_its_name_during_the_search_If_no_character_set_is_specified_ANSI_is_the_default">
        <source>Used in a Declare statement. The Ansi modifier specifies that Visual Basic should marshal all strings to ANSI values, and should look up the procedure without modifying its name during the search. If no character set is specified, ANSI is the default.</source>
        <target state="translated">Wird in einer Declare-Anweisung verwendet. Der Ansi-Modifizierer gibt an, dass Visual Basic alle Zeichenfolgen in ANSI-Werte marshallen und die Prozedur suchen soll, ohne ihren Namen bei der Suche zu ändern. Wenn kein Zeichensatz angegeben wird, ist ANSI der Standardwert.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_a_data_type_in_a_declaration_statement">
        <source>Specifies a data type in a declaration statement.</source>
        <target state="translated">Gibt einen Datentyp in einer Deklarationsanweisung an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_an_attribute_at_the_beginning_of_a_source_file_applies_to_the_entire_assembly_Otherwise_the_attribute_will_apply_only_to_an_individual_programming_element_such_as_a_class_or_property">
        <source>Specifies that an attribute at the beginning of a source file applies to the entire assembly. Otherwise the attribute will apply only to an individual programming element, such as a class or property.</source>
        <target state="translated">Gibt an, dass ein Attribut am Anfang einer Quelldatei für die gesamte Assembly gilt. Andernfalls wird das Attribut nur auf ein bestimmtes Programmierelement angewendet, z.B. eine Klasse oder Eigenschaft.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_an_asynchronous_method_that_can_use_the_Await_operator">
        <source>Indicates an asynchronous method that can use the Await operator.</source>
        <target state="translated">Zeigt eine asynchronone Methode an, die den Await-Operator verwenden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Used_in_a_Declare_statement_The_Auto_modifier_specifies_that_Visual_Basic_should_marshal_strings_according_to_NET_Framework_rules_and_should_determine_the_base_character_set_of_the_run_time_platform_and_possibly_modify_the_external_procedure_name_if_the_initial_search_fails">
        <source>Used in a Declare statement. The Auto modifier specifies that Visual Basic should marshal strings according to .NET Framework rules, and should determine the base character set of the run-time platform and possibly modify the external procedure name if the initial search fails.</source>
        <target state="translated">Wird in einer Declare-Anweisung verwendet. Der Auto-Modifizierer gibt an, dass Visual Basic die Zeichenfolge gemäß der .NET Framework-Regeln marshallen, den Basiszeichensatz der Laufzeitplattform ermitteln und möglicherweise den externen Prozedurnamen ändern soll, wenn bei der ersten Suche ein Fehler auftritt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_an_argument_is_passed_in_such_a_way_that_the_called_procedure_can_change_the_underlying_value_of_the_argument_in_the_calling_code">
        <source>Specifies that an argument is passed in such a way that the called procedure can change the underlying value of the argument in the calling code.</source>
        <target state="translated">Gibt an, dass ein Argument so übergeben wird, dass die aufgerufene Prozedur den zugrunde liegenden Wert des Arguments im aufrufenden Code ändern kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_an_argument_is_passed_in_such_a_way_that_the_called_procedure_or_property_cannot_change_the_underlying_value_of_the_argument_in_the_calling_code">
        <source>Specifies that an argument is passed in such a way that the called procedure or property cannot change the underlying value of the argument in the calling code.</source>
        <target state="translated">Gibt an, dass ein Argument so übergeben wird, dass die aufgerufene Prozedur oder Eigenschaft den zugrunde liegenden Wert des Arguments im aufrufenden Code nicht ändern kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_of_a_class_and_introduces_the_definitions_of_the_variables_properties_and_methods_that_make_up_the_class">
        <source>Declares the name of a class and introduces the definitions of the variables, properties, and methods that make up the class.</source>
        <target state="translated">Deklariert den Namen einer Klasse und führt die Definitionen der Variablen, Eigenschaften und Methoden ein, aus denen die Klasse besteht.</target>
        <note />
      </trans-unit>
      <trans-unit id="Generates_a_string_concatenation_of_two_expressions">
        <source>Generates a string concatenation of two expressions.</source>
        <target state="translated">Generiert eine Zeichenfolgenverkettung aus zwei Ausdrücken.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_and_defines_one_or_more_constants">
        <source>Declares and defines one or more constants.</source>
        <target state="translated">Deklariert und definiert eine oder mehrere Konstanten.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_In_for_a_type_that_will_only_be_used_for_ByVal_arguments_to_functions">
        <source>Use 'In' for a type that will only be used for ByVal arguments to functions.</source>
        <target state="translated">Verwenden Sie "In" für einen Typen, der nur für ByVal-Argumente in Funktionen verwendet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Out_for_a_type_that_will_only_be_used_as_a_return_from_functions">
        <source>Use 'Out' for a type that will only be used as a return from functions.</source>
        <target state="translated">Verwenden Sie "Out" für einen Typen, der nur als Rückgabe von Funktionen verwendet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Returns_the_result_of_explicitly_converting_an_expression_to_a_specified_data_type_object_structure_class_or_interface_CType_Object_As_Expression_Object_As_Type_As_Type">
        <source>Returns the result of explicitly converting an expression to a specified data type, object, structure, class, or interface.
CType(Object As Expression, Object As Type) As Type</source>
        <target state="translated">Gibt das Ergebnis einer expliziten Konvertierung eines Ausdrucks in einen angegebenen Datentyp, ein Objekt, eine Struktur, Klasse oder Schnittstelle zurück.
CType(Object As Expression, Object As Type) As Type</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_an_event_has_additional_specialized_code_for_adding_handlers_removing_handlers_and_raising_events">
        <source>Specifies that an event has additional, specialized code for adding handlers, removing handlers, and raising events.</source>
        <target state="translated">Gibt an, dass ein Ereignis über zusätzlichen speziellen Code zum Hinzufügen von Handlern, Entfernen von Handlern und Auslösen von Ereignissen verfügt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_a_reference_to_a_procedure_implemented_in_an_external_file">
        <source>Declares a reference to a procedure implemented in an external file.</source>
        <target state="translated">Deklariert einen Verweis auf eine Prozedur, die in einer externen Datei implementiert ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Identifies_a_property_as_the_default_property_of_its_class_structure_or_interface">
        <source>Identifies a property as the default property of its class, structure, or interface.</source>
        <target state="translated">Gibt eine Eigenschaft als Standardeigenschaft ihrer Klasse, Struktur oder Schnittstelle an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Used_to_declare_a_delegate_A_delegate_is_a_reference_type_that_refers_to_a_shared_method_of_a_type_or_to_an_instance_method_of_an_object_Any_procedure_that_is_convertible_or_that_has_matching_parameter_types_and_return_type_may_be_used_to_create_an_instance_of_this_delegate_class">
        <source>Used to declare a delegate. A delegate is a reference type that refers to a shared method of a type or to an instance method of an object. Any procedure that is convertible, or that has matching parameter types and return type may be used to create an instance of this delegate class.</source>
        <target state="translated">Wird zum Deklarieren eines Delegaten verwendet. Bei einem Delegaten handelt es sich um einen Referenztyp, der auf eine freigegebene Methode eines Typs oder auf eine Instanzmethode eines Objekts verweist. Zum Erstellen einer Instanz dieser Delegatklasse kann jede konvertierbare Prozedur oder jede Prozedur verwendet werden, deren Parameter- und Rückgabetypen übereinstimmen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_and_allocates_storage_space_for_one_or_more_variables_Dim_var_bracket_As_bracket_New_bracket_dataType_bracket_boundList_bracket_bracket_bracket_initializer_bracket_bracket_var2_bracket">
        <source>Declares and allocates storage space for one or more variables.
Dim {&lt;var&gt; [As [New] dataType [(boundList)]][= initializer]}[, var2]</source>
        <target state="translated">Deklariert eine oder mehrere Variablen und weist Speicherplatz zu.
Dim {&lt;var&gt; [As [New] dataType [(boundList)]][= initializer]}[, var2]</target>
        <note />
      </trans-unit>
      <trans-unit id="Divides_two_numbers_and_returns_a_floating_point_result">
        <source>Divides two numbers and returns a floating-point result.</source>
        <target state="translated">Dividiert zwei Zahlen und gibt ein Gleitkommaergebnis zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_a_0_block">
        <source>Terminates a {0} block.</source>
        <target state="translated">Beendet einen {0}-Block.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_an_0_block">
        <source>Terminates an {0} block.</source>
        <target state="translated">Beendet einen {0}-Block.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_the_definition_of_a_0_statement">
        <source>Terminates the definition of a {0} statement.</source>
        <target state="translated">Beendet die Definition einer {0}-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_the_definition_of_an_0_statement">
        <source>Terminates the definition of an {0} statement.</source>
        <target state="translated">Beendet die Definition einer {0}-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_an_enumeration_and_defines_the_values_of_its_members">
        <source>Declares an enumeration and defines the values of its members.</source>
        <target state="translated">Deklariert eine Enumeration und definiert die Werte ihrer Member.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_they_are_equal_Otherwise_returns_False">
        <source>Compares two expressions and returns True if they are equal. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn sie gleich sind. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Used_to_release_array_variables_and_deallocate_the_memory_used_for_their_elements">
        <source>Used to release array variables and deallocate the memory used for their elements.</source>
        <target state="translated">Wird zum Freigeben von Arrayvariablen und zum Freigeben des Speicherplatzes für ihre Elemente verwendet.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_a_user_defined_event">
        <source>Declares a user-defined event.</source>
        <target state="translated">Deklariert ein benutzerdefiniertes Ereignis.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_Sub_procedure_and_transfers_execution_immediately_to_the_statement_following_the_call_to_the_Sub_procedure">
        <source>Exits a Sub procedure and transfers execution immediately to the statement following the call to the Sub procedure.</source>
        <target state="translated">Beendet eine Sub-Prozedur und überträgt die Ausführung direkt an die Anweisung nach dem Aufruf der Sub-Prozedur.</target>
        <note />
      </trans-unit>
      <trans-unit id="Raises_a_number_to_the_power_of_another_number">
        <source>Raises a number to the power of another number.</source>
        <target state="translated">Potenziert eine Zahl mit einer anderen Zahl.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_the_external_procedure_being_referenced_in_the_Declare_statement_is_a_Function">
        <source>Specifies that the external procedure being referenced in the Declare statement is a Function.</source>
        <target state="translated">Gibt an, dass es sich bei der externen Prozedur, auf die in der Declare-Anweisung verwiesen wird, um eine Function handelt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_the_external_procedure_being_referenced_in_the_Declare_statement_is_a_Sub">
        <source>Specifies that the external procedure being referenced in the Declare statement is a Sub.</source>
        <target state="translated">Gibt an, dass es sich bei der externen Prozedur, auf die in der Declare-Anweisung verwiesen wird, um ein Sub handelt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_programming_elements_are_accessible_only_from_within_the_assembly_that_contains_their_declaration">
        <source>Specifies that one or more declared programming elements are accessible only from within the assembly that contains their declaration.</source>
        <target state="translated">Gibt an, dass auf ein oder mehrere deklarierte Programmierelemente nur aus der Assembly mit der Deklaration zugegriffen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_a_collection_and_a_range_variable_to_use_in_a_query">
        <source>Specifies a collection and a range variable to use in a query.</source>
        <target state="translated">Gibt eine Sammlung und eine Bereichsvariable für die Verwendung in einer Abfrage an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_parameters_and_code_that_define_a_Function_procedure_that_is_a_procedure_that_returns_a_value_to_the_calling_code">
        <source>Declares the name, parameters, and code that define a Function procedure, that is, a procedure that returns a value to the calling code.</source>
        <target state="translated">Deklariert den Namen, die Parameter und den Code, mit denen eine Function-Prozedur definiert wird, d. h. eine Prozedur, die einen Wert an den aufrufenden Code zurückgibt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Constrains_a_generic_type_parameter_to_require_that_any_type_argument_passed_to_it_be_a_reference_type">
        <source>Constrains a generic type parameter to require that any type argument passed to it be a reference type.</source>
        <target state="translated">Schränkt einen generischen Typparameter so ein, dass es sich bei jedem daran übergebenen Typargument um einen Referenztyp handeln muss.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_a_constructor_constraint_on_a_generic_type_parameter">
        <source>Specifies a constructor constraint on a generic type parameter.</source>
        <target state="translated">Gibt eine Konstruktoreinschränkung für einen generischen Typparameter an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Constrains_a_generic_type_parameter_to_require_that_any_type_argument_passed_to_it_be_a_value_type">
        <source>Constrains a generic type parameter to require that any type argument passed to it be a value type.</source>
        <target state="translated">Schränkt einen generischen Typparameter so ein, dass es sich bei jedem daran übergebenen Typargument um einen Werttyp handeln muss.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_a_Get_property_procedure_that_is_used_to_return_the_current_value_of_a_property">
        <source>Declares a Get property procedure that is used to return the current value of a property.</source>
        <target state="translated">Deklariert eine Get-Eigenschaftenprozedur, mit der der aktuelle Wert einer Eigenschaft zurückgegeben wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_the_first_is_greater_than_the_second_Otherwise_returns_False">
        <source>Compares two expressions and returns True if the first is greater than the second. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn der erste Ausdruck größer als der zweite ist. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_the_first_is_greater_than_or_equal_to_the_second_Otherwise_returns_False">
        <source>Compares two expressions and returns True if the first is greater than or equal to the second. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn der erste Ausdruck größer oder gleich dem zweiten ist. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_that_a_procedure_handles_a_specified_event">
        <source>Declares that a procedure handles a specified event.</source>
        <target state="translated">Deklariert, dass eine Prozedur ein angegebenes Ereignis behandelt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_that_a_class_or_structure_member_is_providing_the_implementation_for_a_member_defined_in_an_interface">
        <source>Indicates that a class or structure member is providing the implementation for a member defined in an interface.</source>
        <target state="translated">Gibt an, dass ein Klassen- oder Strukturmember die Implementierung für einen in einer Schnittstelle definierten Member bereitstellt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_one_or_more_interfaces_or_interface_members_that_must_be_implemented_in_the_class_or_structure_definition_in_which_the_Implements_statement_appears">
        <source>Specifies one or more interfaces, or interface members, that must be implemented in the class or structure definition in which the Implements statement appears.</source>
        <target state="translated">Gibt eine oder mehrere Schnittstellen oder Schnittstellenmember an, die in der Klassen- oder Strukturdefinition implementiert werden müssen, in der die Implements-Anweisung enthalten ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Imports_all_or_specified_elements_of_a_namespace_into_a_file">
        <source>Imports all or specified elements of a namespace into a file.</source>
        <target state="translated">Importiert alle oder die angegebenen Elemente eines Namespace in eine Datei.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_group_that_the_loop_variable_in_a_For_Each_statement_is_to_traverse">
        <source>Specifies the group that the loop variable in a For Each statement is to traverse.</source>
        <target state="translated">Gibt die Gruppe an, die die Schleifenvariable in einer For Each-Anweisung durchlaufen soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_group_that_the_loop_variable_is_to_traverse_in_a_For_Each_statement_or_specifies_the_range_variable_in_a_query">
        <source>Specifies the group that the loop variable is to traverse in a For Each statement, or specifies the range variable in a query.</source>
        <target state="translated">Gibt die Gruppe an, die die Schleifenvariable in einer For Each-Anweisung durchlaufen soll, oder gibt die Bereichsvariable in einer Abfrage an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Causes_the_current_class_or_interface_to_inherit_the_attributes_variables_properties_procedures_and_events_from_another_class_or_set_of_interfaces">
        <source>Causes the current class or interface to inherit the attributes, variables, properties, procedures, and events from another class or set of interfaces.</source>
        <target state="translated">Führt dazu, dass die aktuelle Klasse oder Schnittstelle die Attribute, Variablen, Eigenschaften, Prozeduren und Ereignisse von einer anderen Klasse oder Gruppe von Schnittstellen erbt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_group_that_the_range_variable_is_to_traverse_in_a_query">
        <source>Specifies the group that the range variable is to traverse in a query.</source>
        <target state="translated">Gibt die Gruppe an, die die Bereichsvariable in einer Abfrage durchlaufen soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Divides_two_numbers_and_returns_an_integer_result">
        <source>Divides two numbers and returns an integer result.</source>
        <target state="translated">Dividiert zwei Zahlen und gibt ein ganzzahliges Ergebnis zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_of_an_interface_and_the_definitions_of_the_members_of_the_interface">
        <source>Declares the name of an interface and the definitions of the members of the interface.</source>
        <target state="translated">Deklariert den Namen einer Schnittstelle und die Definitionen der Member der Schnittstelle.</target>
        <note />
      </trans-unit>
      <trans-unit id="Determines_whether_an_expression_is_false_If_instances_of_any_class_or_structure_will_be_used_in_an_OrElse_clause_you_must_define_IsFalse_on_that_class_or_structure">
        <source>Determines whether an expression is false. If instances of any class or structure will be used in an OrElse clause, you must define IsFalse on that class or structure.</source>
        <target state="translated">Bestimmt, ob ein Ausdruck falsch ist. Wenn in einer OrElse-Klausel Instanzen einer beliebigen Klasse oder Struktur verwendet werden, müssen Sie "IsFalse" für diese Klasse oder Struktur definieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_object_reference_variables_and_returns_True_if_the_objects_are_equal_result_object1_Is_object2">
        <source>Compares two object reference variables and returns True if the objects are equal.
&lt;result&gt; = &lt;object1&gt; Is &lt;object2&gt;</source>
        <target state="translated">Vergleicht zwei Objektverweisvariablen und gibt True zurück, wenn die Objekte gleich sind.
&lt;Ergebnis&gt; = &lt;Objekt1&gt; Is &lt;Objekt2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_object_reference_variables_and_returns_True_if_the_objects_are_not_equal_result_object1_IsNot_object2">
        <source>Compares two object reference variables and returns True if the objects are not equal.
&lt;result&gt; = &lt;object1&gt; IsNot &lt;object2&gt;</source>
        <target state="translated">Vergleicht zwei Objektverweisvariablen und gibt True zurück, wenn die Objekte nicht gleich sind.
&lt;Ergebnis&gt; = &lt;Objekt1&gt; IsNot &lt;Objekt2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Determines_whether_an_expression_is_true_If_instances_of_any_class_or_structure_will_be_used_in_an_OrElse_clause_you_must_define_IsTrue_on_that_class_or_structure">
        <source>Determines whether an expression is true. If instances of any class or structure will be used in an OrElse clause, you must define IsTrue on that class or structure.</source>
        <target state="translated">Bestimmt, ob ein Ausdruck wahr ist. Wenn in einer OrElse-Klausel Instanzen einer beliebigen Klasse oder Struktur verwendet werden, müssen Sie "IsTrue" für diese Klasse oder Struktur definieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_an_iterator_method_that_can_use_the_Yield_statement">
        <source>Indicates an iterator method that can use the Yield statement.</source>
        <target state="translated">Weist auf eine Iteratormethode hin, welche die Yield-Anweisung verwenden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Defines_an_iterator_lambda_expression_that_can_use_the_Yield_statement_Iterator_Function_parameterList_As_IEnumerable_Of_T">
        <source>Defines an iterator lambda expression that can use the Yield statement.
Iterator Function(&lt;parameterList&gt;) As IEnumerable(Of &lt;T&gt;)</source>
        <target state="translated">Definiert einen Iterator-Lambdaausdruck, der die Yield-Anweisung verwenden kann.
Iterator Function(&lt;Parameterliste&gt;) As IEnumerable(Of &lt;T&gt;)</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_an_arithmetic_left_shift_on_a_bit_pattern">
        <source>Performs an arithmetic left shift on a bit pattern.</source>
        <target state="translated">Führt eine arithmetische Linksverschiebung in einem Bitmuster aus.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_the_first_is_less_than_the_second_Otherwise_returns_False">
        <source>Compares two expressions and returns True if the first is less than the second. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn der erste Ausdruck kleiner als der zweite ist. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_the_first_is_less_than_or_equal_to_the_second_Otherwise_returns_False">
        <source>Compares two expressions and returns True if the first is less than or equal to the second. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn der erste Ausdruck kleiner oder gleich dem zweiten ist. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_clause_that_identifies_the_external_file_DLL_or_code_resource_containing_an_external_procedure">
        <source>Introduces a clause that identifies the external file (DLL or code resource) containing an external procedure.</source>
        <target state="translated">Führt eine Klausel ein, die die externe Datei (DLL- oder Coderessource) mit einer externen Prozedur angibt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_a_string_against_a_pattern_Wildcards_available_include_to_match_1_character_and_to_match_0_or_more_characters_result_string_Like_pattern">
        <source>Compares a string against a pattern. Wildcards available include ? to match 1 character and * to match 0 or more characters.
&lt;result&gt; = &lt;string&gt; Like &lt;pattern&gt;</source>
        <target state="translated">Vergleicht eine Zeichenfolge mit einem Muster. Die verfügbaren Platzhalter umfassen "?" für ein Zeichen und "*" für 0 oder mehrere Zeichen.
&lt;Ergebnis&gt; = &lt;Zeichenfolge&gt; Like &lt;Muster&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Returns_the_difference_between_two_numeric_expressions_or_the_negative_value_of_a_numeric_expression">
        <source>Returns the difference between two numeric expressions, or the negative value of a numeric expression.</source>
        <target state="translated">Gibt die Differenz zwischen zwei numerischen Ausdrücken oder den negativen Wert eines numerischen Ausdrucks zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Divides_two_numbers_and_returns_only_the_remainder_number1_Mod_number2">
        <source>Divides two numbers and returns only the remainder.
&lt;number1&gt; Mod &lt;number2&gt;</source>
        <target state="translated">Dividiert zwei Zahlen und gibt nur den Restwert zurück.
&lt;Zahl1&gt; Mod &lt;Zahl2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_an_attribute_at_the_beginning_of_a_source_file_applies_to_the_entire_module_Otherwise_the_attribute_will_apply_only_to_an_individual_programming_element_such_as_a_class_or_property">
        <source>Specifies that an attribute at the beginning of a source file applies to the entire module. Otherwise the attribute will apply only to an individual programming element, such as a class or property.</source>
        <target state="translated">Gibt an, dass ein Attribut am Anfang einer Quelldatei für das ganze Modul gilt. Andernfalls wird das Attribut nur auf ein bestimmtes Programmierelement angewendet, z.B. eine Klasse oder Eigenschaft.</target>
        <note />
      </trans-unit>
      <trans-unit id="Multiplies_two_numbers_and_returns_the_product">
        <source>Multiplies two numbers and returns the product.</source>
        <target state="translated">Multipliziert zwei Zahlen und gibt das Produkt zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_class_can_be_used_only_as_a_base_class_and_that_you_cannot_create_an_object_directly_from_it">
        <source>Specifies that a class can be used only as a base class, and that you cannot create an object directly from it.</source>
        <target state="translated">Gibt an, dass eine Klasse nur als Basisklasse verwendet werden kann und dass nicht direkt ein Objekt daraus erstellt werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_or_procedure_is_not_implemented_in_the_class_and_must_be_overridden_in_a_derived_class_before_it_can_be_used">
        <source>Specifies that a property or procedure is not implemented in the class and must be overridden in a derived class before it can be used.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft oder Prozedur nicht in der Klasse implementiert wird und in einer abgeleiteten Klasse überschrieben werden muss, damit sie verwendet werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_of_a_namespace_and_causes_the_source_code_following_the_declaration_to_be_compiled_within_that_namespace">
        <source>Declares the name of a namespace, and causes the source code following the declaration to be compiled within that namespace.</source>
        <target state="translated">Deklariert den Namen eines Namespace und führt dazu, dass der Quellcode nach der Deklaration in diesem Namespace kompiliert wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_that_a_conversion_operator_CType_converts_a_class_or_structure_to_a_type_that_might_not_be_able_to_hold_some_of_the_possible_values_of_the_original_class_or_structure">
        <source>Indicates that a conversion operator (CType) converts a class or structure to a type that might not be able to hold some of the possible values of the original class or structure.</source>
        <target state="translated">Gibt an, dass ein Konvertierungsoperator (CType) eine Klasse oder Struktur in einen Typ konvertiert, der möglicherweise einige der möglichen Werte der ursprünglichen Klasse oder Struktur nicht aufweisen kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Compares_two_expressions_and_returns_True_if_they_are_not_equal_Otherwise_returns_False">
        <source>Compares two expressions and returns True if they are not equal. Otherwise, returns False.</source>
        <target state="translated">Vergleicht zwei Ausdrücke und gibt True zurück, wenn sie nicht gleich sind. Gibt andernfalls False zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_class_cannot_be_used_as_a_base_class">
        <source>Specifies that a class cannot be used as a base class.</source>
        <target state="translated">Gibt an, dass eine Klasse nicht als Basisklasse verwendet werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_logical_negation_on_a_Boolean_expression_or_bitwise_negation_on_a_numeric_expression_result_Not_expression">
        <source>Performs logical negation on a Boolean expression, or bitwise negation on a numeric expression.
&lt;result&gt; = Not &lt;expression&gt;</source>
        <target state="translated">Führt eine logische Negation eines booleschen Ausdrucks oder eine bitweise Negation eines numerischen Ausdrucks aus.
&lt;Ergebnis&gt; = Not &lt;Ausdruck&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_or_procedure_cannot_be_overridden_in_a_derived_class">
        <source>Specifies that a property or procedure cannot be overridden in a derived class.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft oder Prozedur in einer abgeleiteten Klasse nicht überschrieben werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Identifies_a_type_parameter_on_a_generic_class_structure_interface_delegate_or_procedure">
        <source>Identifies a type parameter on a generic class, structure, interface, delegate, or procedure.</source>
        <target state="translated">Gibt einen Typparameter für eine generische Klasse, Struktur, Schnittstelle, einen Delegaten oder eine Prozedur an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_operator_symbol_operands_and_code_that_define_an_operator_procedure_on_a_class_or_structure">
        <source>Declares the operator symbol, operands, and code that define an operator procedure on a class or structure.</source>
        <target state="translated">Deklariert das Operatorsymbol, die Operanden und den Code zum Definieren einer Operatorprozedur für eine Klasse oder eine Struktur.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_procedure_argument_can_be_omitted_when_the_procedure_is_called">
        <source>Specifies that a procedure argument can be omitted when the procedure is called.</source>
        <target state="translated">Gibt an, dass ein Prozedurargument beim Aufrufen der Prozedur ausgelassen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_statement_that_specifies_a_compiler_option_that_applies_to_the_entire_source_file">
        <source>Introduces a statement that specifies a compiler option that applies to the entire source file.</source>
        <target state="translated">Führt eine Anweisung ein, die eine Compileroption angibt, die für eine ganze Quelldatei gilt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_short_circuit_inclusive_logical_disjunction_on_two_expressions_Returns_True_if_either_operand_evaluates_to_True_If_the_first_expression_evaluates_to_True_the_second_expression_is_not_evaluated_result_expression1_OrElse_expression2">
        <source>Performs short-circuit inclusive logical disjunction on two expressions. Returns True if either operand evaluates to True. If the first expression evaluates to True, the second expression is not evaluated.
&lt;result&gt; = &lt;expression1&gt; OrElse &lt;expression2&gt;</source>
        <target state="translated">Führt eine verkürzte einschließende logische Disjunktion für zwei Ausdrücke durch. Gibt True zurück, wenn einer der Operanden als True ausgewertet wird. Wenn der erste Ausdruck als True ausgewertet wird, wird der zweite Ausdruck nicht ausgewertet.
&lt;Ergebnis&gt; = &lt;Ausdruck1&gt; OrElse &lt;Ergebnis2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_an_inclusive_logical_disjunction_on_two_Boolean_expressions_or_a_bitwise_disjunction_on_two_numeric_expressions_For_Boolean_expressions_returns_True_if_at_least_one_operand_evaluates_to_True_Both_expressions_are_always_evaluated_result_expression1_Or_expression2">
        <source>Performs an inclusive logical disjunction on two Boolean expressions, or a bitwise disjunction on two numeric expressions. For Boolean expressions, returns True if at least one operand evaluates to True. Both expressions are always evaluated.
&lt;result&gt; = &lt;expression1&gt; Or &lt;expression2&gt;</source>
        <target state="translated">Führt eine einschließende logische Disjunktion für zwei boolesche Ausdrücke oder eine bitweise Disjunktion für zwei numerische Ausdrücke durch. Gibt bei booleschen Ausdrücken True zurück, wenn mindestens ein Operand als True ausgewertet wird. Beide Ausdrücke werden immer ausgewertet.
&lt;Ergebnis&gt; = &lt;Ausdruck1&gt; Or &lt;Ausdruck2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_or_procedure_re_declares_one_or_more_existing_properties_or_procedures_with_the_same_name">
        <source>Specifies that a property or procedure re-declares one or more existing properties or procedures with the same name.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft oder Prozedur eine Eigenschaft oder Prozedur bzw. mehrere mit dem gleichen Namen neu deklariert.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_or_procedure_can_be_overridden_by_an_identically_named_property_or_procedure_in_a_derived_class">
        <source>Specifies that a property or procedure can be overridden by an identically named property or procedure in a derived class.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft oder Prozedur von einer Eigenschaft oder Prozedur mit dem gleichen Namen in einer abgeleiteten Klasse überschrieben werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_or_procedure_overrides_an_identically_named_property_or_procedure_inherited_from_a_base_class">
        <source>Specifies that a property or procedure overrides an identically named property or procedure inherited from a base class.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft oder Prozedur eine Eigenschaft oder Prozedur mit dem gleichen Namen überschreibt, die von einer Basisklasse geerbt wurde.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_procedure_parameter_takes_an_optional_array_of_elements_of_the_specified_type">
        <source>Specifies that a procedure parameter takes an optional array of elements of the specified type.</source>
        <target state="translated">Gibt an, dass ein Prozedurparameter ein optionales Array von Elementen vom angegebenen Typ annimmt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_that_a_method_class_or_structure_declaration_is_a_partial_definition_of_the_method_class_or_structure">
        <source>Indicates that a method, class, or structure declaration is a partial definition of the method, class, or structure.</source>
        <target state="translated">Gibt an, dass es sich bei der Deklaration einer Methode, Klasse oder Struktur um eine teilweise Definition der Methode, Klasse oder Struktur handelt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Returns_the_sum_of_two_numbers_or_the_positive_value_of_a_numeric_expression">
        <source>Returns the sum of two numbers, or the positive value of a numeric expression.</source>
        <target state="translated">Gibt die Summe zweier Zahlen oder den positiven Wert eines numerischen Ausdrucks zurück.</target>
        <note />
      </trans-unit>
      <trans-unit id="Prevents_the_contents_of_an_array_from_being_cleared_when_the_dimensions_of_the_array_are_changed">
        <source>Prevents the contents of an array from being cleared when the dimensions of the array are changed.</source>
        <target state="translated">Verhindert, dass der Inhalt eines Arrays gelöscht wird, wenn die Dimensionen des Arrays geändert werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_programming_elements_are_accessible_only_from_within_their_module_class_or_structure">
        <source>Specifies that one or more declared programming elements are accessible only from within their module, class, or structure.</source>
        <target state="translated">Gibt an, dass auf ein oder mehrere deklarierte Programmierelemente nur aus dem eigenen Modul, der Klasse oder Struktur zugegriffen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_of_a_property_and_the_property_procedures_used_to_store_and_retrieve_the_value_of_the_property">
        <source>Declares the name of a property, and the property procedures used to store and retrieve the value of the property.</source>
        <target state="translated">Deklariert den Namen einer Eigenschaft sowie die Eigenschaftenprozeduren zum Speichern und Abrufen des Werts der Eigenschaft.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_members_of_a_class_are_accessible_from_anywhere_in_the_same_assembly_their_own_classes_and_derived_classes">
        <source>Specifies that one or more declared members of a class are accessible from anywhere in the same assembly, their own classes, and derived classes.</source>
        <target state="translated">Gibt an, dass auf ein oder mehrere deklarierte Member einer Klasse überall in der gleichen Assembly, in der eigenen Klasse und in abgeleiteten Klassen zugegriffen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_programming_elements_are_accessible_only_from_within_their_own_class_or_from_a_derived_class">
        <source>Specifies that one or more declared programming elements are accessible only from within their own class or from a derived class.</source>
        <target state="translated">Gibt an, dass auf ein oder mehrere deklarierte Programmierelemente nur aus ihrer eigenen Klasse oder aus einer abgeleiteten Klasse zugegriffen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_programming_elements_have_no_access_restrictions">
        <source>Specifies that one or more declared programming elements have no access restrictions.</source>
        <target state="translated">Gibt an, dass ein oder mehrer deklarierte Programmierelemente über keine Zugriffseinschränkungen verfügen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_variable_or_property_can_be_read_but_not_written_to">
        <source>Specifies that a variable or property can be read but not written to.</source>
        <target state="translated">Gibt an, dass eine Variable oder Eigenschaft gelesen werden kann, jedoch kein Schreibvorgang möglich ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Reallocates_storage_space_for_an_array_variable">
        <source>Reallocates storage space for an array variable.</source>
        <target state="translated">Reserviert Speicherplatz für eine Arrayvariable neu.</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_an_arithmetic_right_shift_on_a_bit_pattern">
        <source>Performs an arithmetic right shift on a bit pattern</source>
        <target state="translated">Führt eine arithmetische Rechtsverschiebung in einem Bitmuster aus</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_a_Set_property_procedure_that_is_used_to_assign_a_value_to_a_property">
        <source>Declares a Set property procedure that is used to assign a value to a property.</source>
        <target state="translated">Deklariert eine Set-Eigenschaftenprozedur, mit der einer Eigenschaft ein Wert zugewiesen wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_declared_programming_element_redeclares_and_hides_an_identically_named_element_in_a_base_class">
        <source>Specifies that a declared programming element redeclares and hides an identically named element in a base class.</source>
        <target state="translated">Gibt an, dass ein deklariertes Programmierelement ein Element mit dem gleichen Namen in einer Basisklasse erneut deklariert und verbirgt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_programming_elements_are_associated_with_all_instances_of_a_class_or_structure">
        <source>Specifies that one or more declared programming elements are associated with all instances of a class or structure.</source>
        <target state="translated">Gibt an, dass ein oder mehrere Programmierelemente allen Instanzen einer Klasse oder Struktur zugeordnet sind.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_local_variables_are_to_remain_in_existence_and_retain_their_latest_values_after_the_procedure_in_which_they_are_declared_terminates">
        <source>Specifies that one or more declared local variables are to remain in existence and retain their latest values after the procedure in which they are declared terminates.</source>
        <target state="translated">Gibt an, dass eine oder mehrere deklarierte Variablen beibehalten werden und den letzten Wert behalten sollen, wenn die Prozedur beendet wird, in der sie deklariert wurden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_of_a_structure_and_introduces_the_definition_of_the_variables_properties_events_and_procedures_that_make_up_the_structure">
        <source>Declares the name of a structure and introduces the definition of the variables, properties, events, and procedures that make up the structure.</source>
        <target state="translated">Deklariert den Namen einer Struktur und führt die Definitionen der Variablen, Eigenschaften, Ereignisse und Prozeduren ein, aus denen die Struktur besteht.</target>
        <note />
      </trans-unit>
      <trans-unit id="Declares_the_name_parameters_and_code_that_define_a_Sub_procedure_that_is_a_procedure_that_does_not_return_a_value_to_the_calling_code">
        <source>Declares the name, parameters, and code that define a Sub procedure, that is, a procedure that does not return a value to the calling code.</source>
        <target state="translated">Deklariert den Namen, die Parameter und den Code, mit denen eine Sub-Prozedur definiert wird, d. h. eine Prozedur, die keinen Wert an den aufrufenden Code zurückgibt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Separates_the_beginning_and_ending_values_of_a_loop_counter_or_array_bounds_or_that_of_a_value_match_range">
        <source>Separates the beginning and ending values of a loop counter or array bounds or that of a value match range.</source>
        <target state="translated">Trennt Beginn- und Endwerte von einem Schleifenzähler oder Arraygrenzen oder einem Wertübereinstimmungsbereich.</target>
        <note />
      </trans-unit>
      <trans-unit id="Determines_the_run_time_type_of_an_object_reference_variable_and_compares_it_to_a_data_type_Returns_True_or_False_depending_on_whether_the_two_types_are_compatible_result_TypeOf_objectExpression_Is_typeName">
        <source>Determines the run-time type of an object reference variable and compares it to a data type. Returns True or False depending, on whether the two types are compatible.
&lt;result&gt; = TypeOf &lt;objectExpression&gt; Is &lt;typeName&gt;</source>
        <target state="translated">Bestimmt den Laufzeittyp einer Objektverweisvariablen und vergleicht ihn mit einem Datentyp. Gibt True oder False zurück, abhängig davon, ob die beiden Typen kompatibel sind.
&lt;result&gt; = TypeOf &lt;objectExpression&gt; Is &lt;typeName&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Used_in_a_Declare_statement_Specifies_that_Visual_Basic_should_marshal_all_strings_to_Unicode_values_in_a_call_into_an_external_procedure_and_should_look_up_the_procedure_without_modifying_its_name">
        <source>Used in a Declare statement. Specifies that Visual Basic should marshal all strings to Unicode values in a call into an external procedure, and should look up the procedure without modifying its name.</source>
        <target state="translated">Wird in einer Declare-Anweisung verwendet. Gibt an, dass Visual Basic alle Zeichenfolgen in Unicode-Werte in einem Aufruf in einer externen Prozedur marshallen und die Prozedur suchen soll, ohne ihren Namen zu ändern.</target>
        <note />
      </trans-unit>
      <trans-unit id="Indicates_that_a_conversion_operator_CType_converts_a_class_or_structure_to_a_type_that_can_hold_all_possible_values_of_the_original_class_or_structure">
        <source>Indicates that a conversion operator (CType) converts a class or structure to a type that can hold all possible values of the original class or structure.</source>
        <target state="translated">Gibt an, dass ein Konvertierungsoperator (CType) eine Klasse oder Struktur in einen Typ konvertiert, der alle der möglichen Werte der ursprünglichen Klasse oder Struktur aufweisen kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_one_or_more_declared_member_variables_refer_to_an_instance_of_a_class_that_can_raise_events">
        <source>Specifies that one or more declared member variables refer to an instance of a class that can raise events</source>
        <target state="translated">Gibt an, dass eine oder mehrere Membervariablen auf eine Instanz einer Klasse verweisen, die Ereignisse auslösen kann</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_that_a_property_can_be_written_to_but_not_read">
        <source>Specifies that a property can be written to but not read.</source>
        <target state="translated">Gibt an, dass eine Eigenschaft geschrieben, jedoch nicht gelesen werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Performs_a_logical_exclusion_on_two_Boolean_expressions_or_a_bitwise_exclusion_on_two_numeric_expressions_For_Boolean_expressions_returns_True_if_exactly_one_of_the_expressions_evaluates_to_True_Both_expressions_are_always_evaluated_result_expression1_Xor_expression2">
        <source>Performs a logical exclusion on two Boolean expressions, or a bitwise exclusion on two numeric expressions. For Boolean expressions, returns True if exactly one of the expressions evaluates to True. Both expressions are always evaluated.
&lt;result&gt; = &lt;expression1&gt; Xor &lt;expression2&gt;</source>
        <target state="translated">Führt einen logischen Ausschluss für zwei boolesche Ausdrücke oder einen bitweisen Ausschluss für zwei numerische Ausdrücke durch. Gibt bei booleschen Ausdrücken True zurück, wenn genau ein Operand als True ausgewertet wird. Beide Ausdrücke werden immer ausgewertet.
&lt;Ergebnis&gt; = &lt;Ausdruck1&gt; Xor &lt;Ausdruck2&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Applies_an_aggregation_function_such_as_Sum_Average_or_Count_to_a_sequence">
        <source>Applies an aggregation function, such as Sum, Average, or Count to a sequence.</source>
        <target state="translated">Wendet eine Aggregatfunktion wie "Sum", "Average" oder "Count" auf eine Sequenz an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_sort_order_for_an_Order_By_clause_in_a_query_The_smallest_element_will_appear_first">
        <source>Specifies the sort order for an Order By clause in a query. The smallest element will appear first.</source>
        <target state="translated">Gibt die Sortierreihenfolge für eine Order By-Klausel in einer Abfrage an. Das kleinste Element wird zuerst aufgeführt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Asynchronously_waits_for_the_task_to_finish">
        <source>Asynchronously waits for the task to finish.</source>
        <target state="translated">Wartet asynchron darauf, dass die Aufgabe fertig ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Sets_the_string_comparison_method_specified_in_Option_Compare_to_a_strict_binary_sort_order">
        <source>Sets the string comparison method specified in Option Compare to a strict binary sort order.</source>
        <target state="translated">Legt die in "Option Compare" angegebene Zeichenfolgenvergleichsmethode auf eine streng binäre Sortierreihenfolge fest.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_element_keys_used_for_grouping_in_Group_By_or_sort_order_in_Order_By">
        <source>Specifies the element keys used for grouping (in Group By) or sort order (in Order By).</source>
        <target state="translated">Gibt die Elementschlüssel zum Gruppieren (bei "Group By") oder für die Sortierreihenfolge an (bei "Order By").</target>
        <note />
      </trans-unit>
      <trans-unit id="Transfers_execution_to_a_Function_Sub_or_dynamic_link_library_DLL_procedure_bracket_Call_bracket_procedureName_bracket_argumentList_bracket">
        <source>Transfers execution to a Function, Sub, or dynamic-link library (DLL) procedure.
[Call] &lt;procedureName&gt; [(&lt;argumentList&gt;)]</source>
        <target state="translated">Überträgt die Ausführung an die Function-Prozedur, Sub-Prozedur oder DLL-Prozedur (Dynamic-Link Library).
[Call] &lt;Prozedurname&gt; [(&lt;Argumentliste&gt;)]</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_the_statements_to_run_if_none_of_the_previous_cases_in_the_Select_Case_statement_returns_True">
        <source>Introduces the statements to run if none of the previous cases in the Select Case statement returns True.</source>
        <target state="translated">Führt die auszuführenden Anweisungen ein, wenn keiner der vorhergehenden Fälle in der Select Case-Anweisung True zurückgibt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Followed_by_a_comparison_operator_and_then_an_expression_Case_Is_introduces_the_statements_to_run_if_the_Select_Case_expression_combined_with_the_Case_Is_expression_evaluates_to_True">
        <source>Followed by a comparison operator and then an expression, Case Is introduces the statements to run if the Select Case expression combined with the Case Is expression evaluates to True.</source>
        <target state="translated">Wenn danach ein Vergleichsoperator und ein Ausdruck folgen, führt "Case Is" die auszuführenden Anweisungen ein, wenn der Select Case-Ausdruck kombiniert mit dem Case Is-Ausdruck als True ausgewertet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_value_or_set_of_values_against_which_the_value_of_an_expression_in_a_Select_Case_statement_is_to_be_tested_Case_expression_expression1_To_expression2_bracket_Is_bracket_comparisonOperator_expression">
        <source>Introduces a value, or set of values, against which the value of an expression in a Select Case statement is to be tested.
Case {&lt;expression&gt;|&lt;expression1&gt; To &lt;expression2&gt;|[Is] &lt;comparisonOperator&gt; &lt;expression&gt;}</source>
        <target state="translated">Führt einen Wert oder eine Gruppe von Werten ein, anhand derer der Wert eines Ausdrucks in einer Select Case-Anweisung geprüft werden soll.
Case {&lt;expression&gt;|&lt;expression1&gt; To &lt;expression2&gt;|[Is] &lt;comparisonOperator&gt; &lt;expression&gt;}</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_statement_block_to_be_run_if_the_specified_exception_occurs_inside_a_Try_block">
        <source>Introduces a statement block to be run if the specified exception occurs inside a Try block.</source>
        <target state="translated">Führt einen auszuführenden Anweisungsblock ein, wenn die angegebene Ausnahme in einem Try-Block auftritt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Sets_the_default_comparison_method_to_use_when_comparing_string_data_When_set_to_Text_uses_a_text_sort_order_that_is_not_case_sensitive_When_set_to_Binary_uses_a_strict_binary_sort_order_Option_Compare_Binary_Text">
        <source>Sets the default comparison method to use when comparing string data. When set to Text, uses a text sort order that is not case sensitive. When set to Binary, uses a strict binary sort order.
Option Compare {Binary | Text}</source>
        <target state="translated">Legt die Standardvergleichsmethode fest, die beim Vergleichen von Zeichenfolgendaten verwendet werden soll. Bei der Festlegung auf "Text" wird eine Textsortierreihenfolge verwendet, bei der Groß- und Kleinschreibung nicht beachtet werden. Bei "Binary" wird streng binär sortiert.
Option Compare {Binary | Text}</target>
        <note />
      </trans-unit>
      <trans-unit id="Defines_a_conditional_compiler_constant_Conditional_compiler_constants_are_always_private_to_the_file_in_which_they_appear_The_expressions_used_to_initialize_them_can_contain_only_conditional_compiler_constants_and_literals">
        <source>Defines a conditional compiler constant. Conditional compiler constants are always private to the file in which they appear. The expressions used to initialize them can contain only conditional compiler constants and literals.</source>
        <target state="translated">Definiert eine bedingte Compilerkonstante. Bedingte Compilerkonstanten sind immer privat für die Datei, in der sie angezeigt werden. Die zum Initialisieren verwendeten Ausdrücke dürfen nur bedingte Compilerkonstanten und Literale enthalten.</target>
        <note />
      </trans-unit>
      <trans-unit id="Transfers_execution_immediately_to_the_next_iteration_of_the_Do_loop">
        <source>Transfers execution immediately to the next iteration of the Do loop.</source>
        <target state="translated">Überträgt die Ausführung direkt an die nächste Iteration der Do-Schleife.</target>
        <note />
      </trans-unit>
      <trans-unit id="Transfers_execution_immediately_to_the_next_iteration_of_the_For_loop">
        <source>Transfers execution immediately to the next iteration of the For loop.</source>
        <target state="translated">Überträgt die Ausführung direkt an die nächste Iteration der For-Schleife.</target>
        <note />
      </trans-unit>
      <trans-unit id="Transfers_execution_immediately_to_the_next_iteration_of_the_loop_Can_be_used_in_a_Do_loop_a_For_loop_or_a_While_loop">
        <source>Transfers execution immediately to the next iteration of the loop. Can be used in a Do loop, a For loop, or a While loop.</source>
        <target state="translated">Überträgt die Ausführung direkt an die nächste Iteration der Schleife. Kann in einer Do-Schleife, For-Schleife oder While-Schleife verwendet werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Transfers_execution_immediately_to_the_next_iteration_of_the_While_loop">
        <source>Transfers execution immediately to the next iteration of the While loop.</source>
        <target state="translated">Überträgt die Ausführung direkt an die nächste Iteration der While-Schleife.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_sort_order_for_an_Order_By_clause_in_a_query_The_largest_element_will_appear_first">
        <source>Specifies the sort order for an Order By clause in a query. The largest element will appear first.</source>
        <target state="translated">Gibt die Sortierreihenfolge für eine Order By-Klausel in einer Abfrage an. Das größte Element wird zuerst aufgeführt.</target>
        <note />
      </trans-unit>
      <trans-unit id="Restricts_the_values_of_a_query_result_to_eliminate_duplicate_values">
        <source>Restricts the values of a query result to eliminate duplicate values.</source>
        <target state="translated">Schränkt die Werte eines Abfrageergebnisses ein, um doppelte Werte zu entfernen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Repeats_a_block_of_statements_while_a_Boolean_condition_is_true_or_until_the_condition_becomes_true_Do_Loop_While_Until_condition">
        <source>Repeats a block of statements while a Boolean condition is true, or until the condition becomes true.
Do...Loop {While | Until} &lt;condition&gt;</source>
        <target state="translated">Wiederholt einen Anweisungsblock, solange eine boolesche Bedingung erfüllt wird oder bis die Bedingung erfüllt wird.
Do...Loop {While | Until} &lt;Bedingung&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Repeats_a_block_of_statements_until_a_Boolean_condition_becomes_true_Do_Until_condition_Loop">
        <source>Repeats a block of statements until a Boolean condition becomes true.
Do Until &lt;condition&gt;...Loop</source>
        <target state="translated">Wiederholt einen Anweisungsblock, bis eine boolesche Bedingung erfüllt wird.
Do Until &lt;Bedingung&gt;...Loop</target>
        <note />
      </trans-unit>
      <trans-unit id="Repeats_a_block_of_statements_while_a_Boolean_condition_is_true_Do_While_condition_Loop">
        <source>Repeats a block of statements while a Boolean condition is true.
Do While &lt;condition&gt;...Loop</source>
        <target state="translated">Wiederholt einen Anweisungsblock, solange eine boolesche Bedingung erfüllt wird.
Do While &lt;Bedingung&gt;...Loop</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_group_of_statements_in_an_SharpIf_statement_that_is_compiled_if_no_previous_condition_evaluates_to_True">
        <source>Introduces a group of statements in an #If statement that is compiled if no previous condition evaluates to True.</source>
        <target state="translated">Führt eine Gruppe von Anweisungen in einer #If-Anweisung ein, die kompiliert wird, wenn keine vorhergehende Bedingung als True ausgewertet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_condition_in_an_SharpIf_statement_that_is_tested_if_the_previous_conditional_test_evaluates_to_False">
        <source>Introduces a condition in an #If statement that is tested if the previous conditional test evaluates to False.</source>
        <target state="translated">Führt eine Bedingung in einer #If-Anweisung ein, die geprüft wird, wenn die vorhergehende Prüfung der Bedingungen als False ausgewertet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_condition_in_an_If_statement_that_is_to_be_tested_if_the_previous_conditional_test_fails">
        <source>Introduces a condition in an If statement that is to be tested if the previous conditional test fails.</source>
        <target state="translated">Führt eine Bedingung in einer If-Anweisung ein, die geprüft wird, wenn der vorhergehende bedingte Test nicht erfolgreich ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_group_of_statements_in_an_If_statement_that_is_executed_if_no_previous_condition_evaluates_to_True">
        <source>Introduces a group of statements in an If statement that is executed if no previous condition evaluates to True.</source>
        <target state="translated">Führt eine Gruppe von Anweisungen in einer If-Anweisung ein, die ausgeführt wird, wenn keine vorhergehende Bedingung als True ausgewertet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_the_definition_of_an_SharpIf_block">
        <source>Terminates the definition of an #If block.</source>
        <target state="translated">Beendet die Definition eines #If-Block.</target>
        <note />
      </trans-unit>
      <trans-unit id="Stops_execution_immediately">
        <source>Stops execution immediately.</source>
        <target state="translated">Beendet sofort die Ausführung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_a_SharpRegion_block">
        <source>Terminates a #Region block.</source>
        <target state="translated">Beendet einen #Region-Block.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_relationship_between_element_keys_to_use_as_the_basis_of_a_join_operation">
        <source>Specifies the relationship between element keys to use as the basis of a join operation.</source>
        <target state="translated">Gibt die Beziehung zwischen Elementschlüsseln an, die als Grundlage eines Beitrittsvorgangs verwendet werden sollen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Simulates_the_occurrence_of_an_error">
        <source>Simulates the occurrence of an error.</source>
        <target state="translated">Simuliert das Auftreten eines Fehlers.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_Do_loop_and_transfers_execution_immediately_to_the_statement_following_the_Loop_statement">
        <source>Exits a Do loop and transfers execution immediately to the statement following the Loop statement.</source>
        <target state="translated">Beendet eine Do-Schleife und überträgt die Ausführung direkt an die Anweisung nach der Loop-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_For_loop_and_transfers_execution_immediately_to_the_statement_following_the_Next_statement">
        <source>Exits a For loop and transfers execution immediately to the statement following the Next statement.</source>
        <target state="translated">Beendet eine For-Schleife und überträgt die Ausführung direkt an die Anweisung nach der Next-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_procedure_or_block_and_transfers_execution_immediately_to_the_statement_following_the_procedure_call_or_block_definition_Exit_Do_For_Function_Property_Select_Sub_Try_While">
        <source>Exits a procedure or block and transfers execution immediately to the statement following the procedure call or block definition.
Exit {Do | For | Function | Property | Select | Sub | Try | While}</source>
        <target state="translated">Beendet eine Prozedur oder einen Block und überträgt die Ausführung direkt an die Anweisung nach dem Prozeduraufruf oder der Blockdefinition.
Exit {Do | For | Function | Property | Select | Sub | Try | While}</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_Select_block_and_transfers_execution_immediately_to_the_statement_following_the_End_Select_statement">
        <source>Exits a Select block and transfers execution immediately to the statement following the End Select statement.</source>
        <target state="translated">Beendet einen Select-Block und überträgt die Ausführung direkt an die Anweisung nach der End Select-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_Try_block_and_transfers_execution_immediately_to_the_statement_following_the_End_Try_statement">
        <source>Exits a Try block and transfers execution immediately to the statement following the End Try statement.</source>
        <target state="translated">Beendet einen Try-Block und überträgt die Ausführung direkt an die Anweisung nach der End Try-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Exits_a_While_loop_and_transfers_execution_immediately_to_the_statement_following_the_End_While_statement">
        <source>Exits a While loop and transfers execution immediately to the statement following the End While statement.</source>
        <target state="translated">Beendet eine While-Schleife und überträgt die Ausführung direkt an die Anweisung nach der End While-Anweisung.</target>
        <note />
      </trans-unit>
      <trans-unit id="When_set_to_On_requires_explicit_declaration_of_all_variables_using_a_Dim_Private_Public_or_ReDim_statement_Option_Explicit_On_Off">
        <source>When set to On, requires explicit declaration of all variables, using a Dim, Private, Public, or ReDim statement.
Option Explicit {On | Off}</source>
        <target state="translated">Bei der Festlegung auf "On" ist eine explizite Deklaration aller Variablen mit der Anweisung "Dim", "Private", "Public" oder "ReDim" erforderlich.
Option Explicit {On | Off}</target>
        <note />
      </trans-unit>
      <trans-unit id="Represents_a_Boolean_value_that_fails_a_conditional_test">
        <source>Represents a Boolean value that fails a conditional test.</source>
        <target state="translated">Stellt einen booleschen Wert dar, für den ein bedingter Test nicht erfolgreich durchgeführt wurde.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_statement_block_to_be_run_before_exiting_a_Try_structure">
        <source>Introduces a statement block to be run before exiting a Try structure.</source>
        <target state="translated">Führt einen Anweisungsblock ein, der vor dem Beenden einer Try-Struktur ausgeführt werden soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_loop_that_is_repeated_for_each_element_in_a_collection">
        <source>Introduces a loop that is repeated for each element in a collection.</source>
        <target state="translated">Führt eine Schleife ein, die für jedes Element in einer Sammlung wiederholt wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_loop_that_is_iterated_a_specified_number_of_times">
        <source>Introduces a loop that is iterated a specified number of times.</source>
        <target state="translated">Führt eine Schleife ein, die eine angegebene Anzahl von Iterationen durchläuft.</target>
        <note />
      </trans-unit>
      <trans-unit id="Identifies_a_list_of_values_as_a_collection_initializer">
        <source>Identifies a list of values as a collection initializer</source>
        <target state="translated">Identifiziert eine Liste von Werten als Sammlungsinitialisierer.</target>
        <note />
      </trans-unit>
      <trans-unit id="Branches_unconditionally_to_a_specified_line_in_a_procedure">
        <source>Branches unconditionally to a specified line in a procedure.</source>
        <target state="translated">Brancht ohne Bedingungen in eine angegebene Zeile in einer Prozedur.</target>
        <note />
      </trans-unit>
      <trans-unit id="Groups_elements_that_have_a_common_key">
        <source>Groups elements that have a common key.</source>
        <target state="translated">Gruppiert Elemente mit einem gemeinsamen Schlüssel.</target>
        <note />
      </trans-unit>
      <trans-unit id="Combines_the_elements_of_two_sequences_and_groups_the_results_The_join_operation_is_based_on_matching_keys">
        <source>Combines the elements of two sequences and groups the results. The join operation is based on matching keys.</source>
        <target state="translated">Verbindet die Elemente in zwei Sequenzen und gruppiert die Ergebnisse. Der Beitrittsvorgang erfolgt auf Grundlage übereinstimmender Schlüssel.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Group_to_specify_that_a_group_named_0_should_be_created">
        <source>Use 'Group' to specify that a group named '{0}' should be created.</source>
        <target state="translated">Verwenden Sie "Group", um festzulegen, dass eine Gruppe namens "{0}" erstellt werden soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Group_to_specify_that_a_group_named_Group_should_be_created">
        <source>Use 'Group' to specify that a group named 'Group' should be created.</source>
        <target state="translated">Verwenden Sie "Group", um festzulegen, dass eine Gruppe namens "Group" erstellt werden soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Conditionally_compiles_selected_blocks_of_code_depending_on_the_value_of_an_expression">
        <source>Conditionally compiles selected blocks of code, depending on the value of an expression.</source>
        <target state="translated">Kompiliert bedingt ausgewählte Codeblöcke, abhängig vom Wert eines Ausdrucks.</target>
        <note />
      </trans-unit>
      <trans-unit id="Conditionally_executes_a_group_of_statements_depending_on_the_value_of_an_expression">
        <source>Conditionally executes a group of statements, depending on the value of an expression.</source>
        <target state="translated">Führt bedingt eine Gruppe von Anweisungen aus, abhängig vom Wert eines Ausdrucks.</target>
        <note />
      </trans-unit>
      <trans-unit id="When_set_to_On_allows_the_use_of_local_type_inference_in_declaring_variables_Option_Infer_On_Off">
        <source>When set to On, allows the use of local type inference in declaring variables.
Option Infer {On | Off}</source>
        <target state="translated">Bei der Festlegung auf "On" wird die Verwendung des lokalen Typrückschlusses beim Deklarieren von Variablen zugelassen.
Option Infer {On | Off}</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_an_identifier_that_can_serve_as_a_reference_to_the_results_of_a_join_or_grouping_subexpression">
        <source>Specifies an identifier that can serve as a reference to the results of a join or grouping subexpression.</source>
        <target state="translated">Gibt einen Bezeichner an, der als Verweis auf die Ergebnisse eines Unterausdrucks zum Verknüpfen oder Gruppieren verwendet werden kann.</target>
        <note />
      </trans-unit>
      <trans-unit id="Combines_the_elements_of_two_sequences_The_join_operation_is_based_on_matching_keys">
        <source>Combines the elements of two sequences. The join operation is based on matching keys.</source>
        <target state="translated">Verbindet die Elemente in zwei Sequenzen. Der Beitrittsvorgang erfolgt auf Grundlage übereinstimmender Schlüssel.</target>
        <note />
      </trans-unit>
      <trans-unit id="Identifies_a_key_field_in_an_anonymous_type_definition">
        <source>Identifies a key field in an anonymous type definition.</source>
        <target state="translated">Gibt ein Schlüsselfeld in der Definition eines anonymen Typs an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Computes_a_value_for_each_item_in_the_query_and_assigns_the_value_to_a_new_range_variable">
        <source>Computes a value for each item in the query, and assigns the value to a new range variable.</source>
        <target state="translated">Berechnet einen Wert für jedes Element in der Abfrage und weist den Wert einer neuen Bereichsvariablen zu.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_a_loop_that_is_introduced_with_a_Do_statement">
        <source>Terminates a loop that is introduced with a Do statement.</source>
        <target state="translated">Beendet eine Schleife, die mit einer Do-Anweisung eingeführt wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Repeats_a_block_of_statements_until_a_Boolean_condition_becomes_true_Do_Loop_Until_condition">
        <source>Repeats a block of statements until a Boolean condition becomes true.
Do...Loop Until &lt;condition&gt;</source>
        <target state="translated">Wiederholt einen Anweisungsblock, bis eine boolesche Bedingung erfüllt wird.
Do...Loop Until &lt;Bedingung&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Repeats_a_block_of_statements_while_a_Boolean_condition_is_true_Do_Loop_While_condition">
        <source>Repeats a block of statements while a Boolean condition is true.
Do...Loop While &lt;condition&gt;</source>
        <target state="translated">Wiederholt einen Anweisungsblock, solange eine boolesche Bedingung erfüllt wird.
Do...Loop While &lt;Bedingung&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Provides_a_way_to_refer_to_the_current_instance_of_a_class_or_structure_that_is_the_instance_in_which_the_code_is_running">
        <source>Provides a way to refer to the current instance of a class or structure, that is, the instance in which the code is running.</source>
        <target state="translated">Stellt eine Möglichkeit zum Verweisen auf die aktuelle Instanz einer Klasse oder Struktur bereit, d. h. die Instanz, in der der Code ausgeführt wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Provides_a_way_to_refer_to_the_base_class_of_the_current_class_instance_You_cannot_use_MyBase_to_call_MustOverride_base_methods">
        <source>Provides a way to refer to the base class of the current class instance. You cannot use MyBase to call MustOverride base methods.</source>
        <target state="translated">Stellt eine Möglichkeit zum Verweisen auf die Basisklasse der aktuellen Klasseninstanz bereit. Sie können mit "MyBase" keine MustOverride-Basismethoden aufrufen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Provides_a_way_to_refer_to_the_class_instance_members_as_originally_implemented_ignoring_any_derived_class_overrides">
        <source>Provides a way to refer to the class instance members as originally implemented, ignoring any derived class overrides.</source>
        <target state="translated">Stellt eine Möglichkeit bereit, so auf die Klasseninstanzmember zu verweisen, wie sie ursprünglich implementiert wurden. Dabei werden alle abgeleiteten Klassenüberschreibungen ignoriert.</target>
        <note />
      </trans-unit>
      <trans-unit id="Creates_a_new_object_instance">
        <source>Creates a new object instance.</source>
        <target state="translated">Erstellt eine neue Objektinstanz.</target>
        <note />
      </trans-unit>
      <trans-unit id="Terminates_a_loop_that_iterates_through_the_values_of_a_loop_variable">
        <source>Terminates a loop that iterates through the values of a loop variable.</source>
        <target state="translated">Beendet eine Schleife, die die Werte einer Schleifenvariablen durchläuft.</target>
        <note />
      </trans-unit>
      <trans-unit id="Represents_the_default_value_of_any_data_type">
        <source>Represents the default value of any data type.</source>
        <target state="translated">Stellt den Standardwert jedes Datentyps dar.</target>
        <note />
      </trans-unit>
      <trans-unit id="Turns_a_compiler_option_off">
        <source>Turns a compiler option off.</source>
        <target state="translated">Deaktiviert eine Compileroption.</target>
        <note />
      </trans-unit>
      <trans-unit id="Enables_the_error_handling_routine_that_starts_at_the_line_specified_in_the_line_argument_The_specified_line_must_be_in_the_same_procedure_as_the_On_Error_statement_On_Error_GoTo_bracket_label_0_1_bracket">
        <source>Enables the error-handling routine that starts at the line specified in the line argument.
The specified line must be in the same procedure as the On Error statement.
On Error GoTo [&lt;label&gt; | 0 | -1]</source>
        <target state="translated">Aktiviert die Fehlerbehandlungsroutine, die in der im Zeilenargument angegebenen Zeile beginnt.
Die angegebene Zeile muss sich in der gleichen Prozedur wie die On Error-Anweisung befinden.
On Error GoTo [&lt;Bezeichnung&gt; | 0 | -1]</target>
        <note />
      </trans-unit>
      <trans-unit id="When_a_run_time_error_occurs_execution_transfers_to_the_statement_following_the_statement_or_procedure_call_that_resulted_in_the_error">
        <source>When a run-time error occurs, execution transfers to the statement following the statement or procedure call that resulted in the error.</source>
        <target state="translated">Wenn ein Laufzeitfehler auftritt, wird die Ausführung an die Anweisung nach der Anweisung oder dem Prozeduraufruf übergeben, die bzw. der den Fehler verursacht hat.</target>
        <note />
      </trans-unit>
      <trans-unit id="Turns_a_compiler_option_on">
        <source>Turns a compiler option on.</source>
        <target state="translated">Aktiviert eine Compileroption.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_element_keys_used_to_correlate_sequences_for_a_join_operation">
        <source>Specifies the element keys used to correlate sequences for a join operation.</source>
        <target state="translated">Gibt die Elementschlüssel an, mit denen Sequenzen für einen Beitrittsvorgang korreliert werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_sort_order_for_columns_in_a_query_Can_be_followed_by_either_the_Ascending_or_the_Descending_keyword_If_neither_is_specified_Ascending_is_used">
        <source>Specifies the sort order for columns in a query. Can be followed by either the Ascending or the Descending keyword. If neither is specified, Ascending is used.</source>
        <target state="translated">Gibt die Sortierreihenfolge für Spalten in einer Abfrage an. Danach kann das Ascending-Schlüsselwort oder das Descending-Schlüsselwort folgen. Wenn kein Schlüsselwort angegeben wird, wird "Ascending" verwendet.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_statements_to_run_when_the_event_is_raised_by_the_RaiseEvent_statement_RaiseEvent_delegateSignature_End_RaiseEvent">
        <source>Specifies the statements to run when the event is raised by the RaiseEvent statement.
RaiseEvent(&lt;delegateSignature&gt;)...End RaiseEvent</source>
        <target state="translated">Gibt die beim Auslösen des Ereignisses durch die RaiseEvent-Anweisung auszuführenden Anweisungen an.
RaiseEvent(&lt;Delegatsignatur&gt;)...End RaiseEvent</target>
        <note />
      </trans-unit>
      <trans-unit id="Triggers_an_event_declared_at_module_level_within_a_class_form_or_document_RaiseEvent_eventName_bracket_argumentList_bracket">
        <source>Triggers an event declared at module level within a class, form, or document.
RaiseEvent &lt;eventName&gt; [(&lt;argumentList&gt;)]</source>
        <target state="translated">Löst ein auf Modulebene in einer Klasse, einem Formular oder Dokument deklariertes Ereignis aus.
RaiseEvent &lt;Ereignisname&gt; [(&lt;argumentList&gt;)]</target>
        <note />
      </trans-unit>
      <trans-unit id="Collapses_and_hides_sections_of_code_in_Visual_Basic_files">
        <source>Collapses and hides sections of code in Visual Basic files.</source>
        <target state="translated">Klappt Codeabschnitte in Visual Basic-Dateien zu und blendet sie aus.</target>
        <note />
      </trans-unit>
      <trans-unit id="Returns_execution_to_the_code_that_called_the_Function_Sub_Get_Set_or_Operator_procedure_Return_or_Return_expression">
        <source>Returns execution to the code that called the Function, Sub, Get, Set, or Operator procedure.
Return -or- Return &lt;expression&gt;</source>
        <target state="translated">Gibt die Ausführung an den Code zurück, der die Prozedur "Function", "Sub", "Get", "Set" oder "Operator" aufgerufen hat.
Return -oder- Return &lt;Ausdruck&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Runs_one_of_several_groups_of_statements_depending_on_the_value_of_an_expression">
        <source>Runs one of several groups of statements, depending on the value of an expression.</source>
        <target state="translated">Führt eine von mehreren Anweisungsgruppen aus, abhängig vom Wert eines Ausdrucks.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_which_columns_to_include_in_the_result_of_a_query">
        <source>Specifies which columns to include in the result of a query.</source>
        <target state="translated">Gibt an, welche Spalten in das Ergebnis einer Abfrage eingeschlossen werden sollen.</target>
        <note />
      </trans-unit>
      <trans-unit id="Skips_elements_up_to_a_specified_position_in_the_collection">
        <source>Skips elements up to a specified position in the collection.</source>
        <target state="translated">Überspringt Elemente bis zu einer angegebenen Position in der Sammlung.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_how_much_to_increment_between_each_loop_iteration">
        <source>Specifies how much to increment between each loop iteration.</source>
        <target state="translated">Gibt an, wie die Erhöhung zwischen jeder Schleifeniteration sein soll.</target>
        <note />
      </trans-unit>
      <trans-unit id="Suspends_program_execution">
        <source>Suspends program execution.</source>
        <target state="translated">Hält die Ausführung des Programms an.</target>
        <note />
      </trans-unit>
      <trans-unit id="When_set_to_On_restricts_implicit_data_type_conversions_to_only_widening_conversions_Option_Strict_On_Off">
        <source>When set to On, restricts implicit data type conversions to only widening conversions.
Option Strict {On | Off}</source>
        <target state="translated">Bei der Festlegung auf "On" werden implizite Datentypkonvertierungen auf erweiternde Konvertierungen eingeschränkt.
Option Strict {On | Off}</target>
        <note />
      </trans-unit>
      <trans-unit id="Ensures_that_multiple_threads_do_not_execute_the_statement_block_at_the_same_time_SyncLock_object_End_Synclock">
        <source>Ensures that multiple threads do not execute the statement block at the same time.
SyncLock &lt;object&gt;...End Synclock</source>
        <target state="translated">Stellt sicher, dass der Anweisungsblock nicht von mehreren Threads gleichzeitig ausgeführt wird.
SyncLock &lt;object&gt;...End Synclock</target>
        <note />
      </trans-unit>
      <trans-unit id="Includes_elements_up_to_a_specified_position_in_the_collection">
        <source>Includes elements up to a specified position in the collection.</source>
        <target state="translated">Schließt Elemente bis zu einer angegebenen Position in der Sammlung ein.</target>
        <note />
      </trans-unit>
      <trans-unit id="Sets_the_string_comparison_method_specified_in_Option_Compare_to_a_text_sort_order_that_is_not_case_sensitive">
        <source>Sets the string comparison method specified in Option Compare to a text sort order that is not case sensitive.</source>
        <target state="translated">Legt die in "Option Compare" angegebene Zeichenfolgenvergleichsmethode auf eine Textsortierreihenfolge fest, bei der Groß- und Kleinschreibung nicht beachtet werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="Introduces_a_statement_block_to_be_compiled_or_executed_if_a_tested_condition_is_true">
        <source>Introduces a statement block to be compiled or executed if a tested condition is true.</source>
        <target state="translated">Führt einen Anweisungsblock ein, der kompiliert oder ausgeführt wird, wenn eine getestete Bedingung wahr ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="Throws_an_exception_within_a_procedure_so_that_you_can_handle_it_with_structured_or_unstructured_exception_handling_code">
        <source>Throws an exception within a procedure so that you can handle it with structured or unstructured exception-handling code.</source>
        <target state="translated">Löst eine Ausnahme in einer Prozedur aus, damit Sie diese mit strukturiertem oder unstrukturiertem Code zur Behandlung von Ausnahmen behandeln können.</target>
        <note />
      </trans-unit>
      <trans-unit id="Represents_a_Boolean_value_that_passes_a_conditional_test">
        <source>Represents a Boolean value that passes a conditional test.</source>
        <target state="translated">Stellt einen booleschen Wert dar, für den ein bedingter Test erfolgreich durchgeführt wurde.</target>
        <note />
      </trans-unit>
      <trans-unit id="Provides_a_way_to_handle_some_or_all_possible_errors_that_might_occur_in_a_given_block_of_code_while_still_running_the_code_Try_bracket_Catch_bracket_Catch_Finally_End_Try">
        <source>Provides a way to handle some or all possible errors that might occur in a given block of code, while still running the code.
Try...[Catch]...{Catch | Finally}...End Try</source>
        <target state="translated">Stellt eine Möglichkeit zum Behandeln einiger oder aller Fehler dar, die in einem bestimmten Codeblock auftreten können, während der Code weiter ausgeführt wird.
Try...[Catch]...{Catch | Finally}...End Try</target>
        <note />
      </trans-unit>
      <trans-unit id="A_Using_block_does_three_things_colon_it_creates_and_initializes_variables_in_the_resource_list_it_runs_the_code_in_the_block_and_it_disposes_of_the_variables_before_exiting_Resources_used_in_the_Using_block_must_implement_System_IDisposable_Using_resource1_bracket_resource2_bracket_End_Using">
        <source>A Using block does three things: it creates and initializes variables in the resource list, it runs the code in the block, and it disposes of the variables before exiting. Resources used in the Using block must implement System.IDisposable.
Using &lt;resource1&gt;[, &lt;resource2&gt;]...End Using</source>
        <target state="translated">Ein Using-Block führt drei Aufgaben aus: er erstellt und initialisiert Variablen in der Ressourcenliste, führt den Code im Block aus und verwirft die Variablen vor dem Beenden. Im Using-Block verwendete Ressourcen müssen "System.IDisposable" implementieren.
Using &lt;Ressource1&gt;[, &lt;Ressource2&gt;]...End Using</target>
        <note />
      </trans-unit>
      <trans-unit id="Adds_a_conditional_test_to_a_Catch_statement_Exceptions_are_caught_by_that_Catch_statement_only_when_the_conditional_test_that_follows_the_When_keyword_evaluates_to_True">
        <source>Adds a conditional test to a Catch statement. Exceptions are caught by that Catch statement only when the conditional test that follows the When keyword evaluates to True.</source>
        <target state="translated">Fügt einer Catch-Anweisung einen bedingten Test hinzu. Ausnahmen werden von dieser Catch-Anweisung nur aufgefangen, wenn der bedingte Test nach dem When-Schlüsselwort als True ausgewertet wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_filtering_condition_for_a_range_variable_in_a_query">
        <source>Specifies the filtering condition for a range variable in a query.</source>
        <target state="translated">Gibt die Filterbedingung für eine Bereichsvariable in einer Abfrage an.</target>
        <note />
      </trans-unit>
      <trans-unit id="Runs_a_series_of_statements_as_long_as_a_given_condition_is_true">
        <source>Runs a series of statements as long as a given condition is true.</source>
        <target state="translated">Führt eine Reihe von Anweisungen aus, solange eine bestimmte Bedingung erfüllt wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_a_condition_for_Skip_and_Take_operations_Elements_will_be_bypassed_or_included_as_long_as_the_condition_is_true">
        <source>Specifies a condition for Skip and Take operations. Elements will be bypassed or included as long as the condition is true.</source>
        <target state="translated">Gibt eine Bedingung für die Skip-Operation und die Take-Operation an. Elemente werden umgangen oder eingeschlossen, solange die Bedingung erfüllt wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Specifies_the_declaration_of_property_initializations_in_an_object_initializer_New_typeName_With_bracket_property_expression_bracket_bracket_bracket">
        <source>Specifies the declaration of property initializations in an object initializer.
New &lt;typeName&gt; With {[.&lt;property&gt; = &lt;expression&gt;][,...]}</source>
        <target state="translated">Gibt die Deklaration von Eigenschafteninitialisierungen in einem Objektinitialisierer an.
New &lt;typeName&gt; With {[.&lt;property&gt; = &lt;expression&gt;][,...]}</target>
        <note />
      </trans-unit>
      <trans-unit id="Runs_a_series_of_statements_that_refer_to_a_single_object_or_structure_With_object_End_With">
        <source>Runs a series of statements that refer to a single object or structure.
With &lt;object&gt;...End With</source>
        <target state="translated">Gibt eine Reihe von Anweisungen zurück, die auf ein Objekt oder eine Struktur verweisen.
With &lt;object&gt;...End With</target>
        <note />
      </trans-unit>
      <trans-unit id="Produces_an_element_of_an_IEnumerable_or_IEnumerator">
        <source>Produces an element of an IEnumerable or IEnumerator.</source>
        <target state="translated">Produziert ein Element eines IEnumerable oder IEnumerator.</target>
        <note />
      </trans-unit>
      <trans-unit id="Defines_an_asynchronous_lambda_expression_that_can_use_the_Await_operator_Can_be_used_wherever_a_delegate_type_is_expected_Async_Sub_Function_parameterList_expression">
        <source>Defines an asynchronous lambda expression that can use the Await operator. Can be used wherever a delegate type is expected.
Async Sub/Function(&lt;parameterList&gt;) &lt;expression&gt;</source>
        <target state="translated">Gibt einen asynchronen Lambdaausdruck an, der den Await-Operator verwenden kann. Kann immer verwendet werden, wenn ein Delegattyp erwartet wird.
Async-Unter-/Funktion(&lt;Parameterliste&gt;) &lt;Ausdruck&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Defines_a_lambda_expression_that_calculates_and_returns_a_single_value_Can_be_used_wherever_a_delegate_type_is_expected_Function_parameterList_expression">
        <source>Defines a lambda expression that calculates and returns a single value. Can be used wherever a delegate type is expected.
Function(&lt;parameterList&gt;) &lt;expression&gt;</source>
        <target state="translated">Definiert einen Lambdaausdruck, der einen einzelnen Wert berechnet und zurückgibt. Kann immer verwendet werden, wenn ein Delegattyp erwartet wird.
Function(&lt;Parameterlist&gt;) &lt;Ausdruck&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Defines_a_lambda_expression_that_can_execute_statements_and_does_not_return_a_value_Can_be_used_wherever_a_delegate_type_is_expected_Sub_parameterList_statement">
        <source>Defines a lambda expression that can execute statements and does not return a value. Can be used wherever a delegate type is expected.
Sub(&lt;parameterList&gt;) &lt;statement&gt;</source>
        <target state="translated">Definiert einen Lambdaausdruck, der Anweisungen ausführen kann und keinen Wert zurückgibt. Kann immer verwendet werden, wenn ein Delegattyp erwartet wird.
Sub(&lt;Parameterliste&gt;) &lt;Ausdruck&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Disables_reporting_of_specified_warnings_in_the_portion_of_the_source_file_below_the_current_line">
        <source>Disables reporting of specified warnings in the portion of the source file below the current line.</source>
        <target state="translated">Deaktiviert die Berichterstattung angegebener Warnungen im Teil der Quelldatei unter der aktuellen Zeile.</target>
        <note />
      </trans-unit>
      <trans-unit id="Enables_reporting_of_specified_warnings_in_the_portion_of_the_source_file_below_the_current_line">
        <source>Enables reporting of specified warnings in the portion of the source file below the current line.</source>
        <target state="translated">Aktiviert die Berichterstattung angegebener Warnungen im Teil der Quelldatei unter der aktuellen Zeile.</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_Await">
        <source>Insert 'Await'.</source>
        <target state="translated">"Await" einfügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_0_an_Async_Function">
        <source>Make {0} an Async Function.</source>
        <target state="translated">"{0}" in eine Async-Funktion umwandeln.</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_Missing_Cast">
        <source>Insert Missing Cast</source>
        <target state="translated">Fehlende Umwandlung einfügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_0_to_Iterator">
        <source>Convert {0} to Iterator</source>
        <target state="translated">{0} in Iterator konvertieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Replace_Return_with_Yield">
        <source>Replace 'Return' with 'Yield</source>
        <target state="translated">"Return" durch "Yield" ersetzen</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_the_correct_control_variable">
        <source>Use the correct control variable</source>
        <target state="translated">Richtige Steuervariable verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="NameOf_function">
        <source>NameOf function</source>
        <target state="translated">NameOf-Funktion</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_narrowing_conversion_in_0">
        <source>Generate narrowing conversion in '{0}'</source>
        <target state="translated">Einschränkende Konvertierung in "{0}" generieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_widening_conversion_in_0">
        <source>Generate widening conversion in '{0}'</source>
        <target state="translated">Erweiternde Konvertierung in "{0}" generieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Do_not_change_this_code_Put_cleanup_code_in_Dispose_disposing_As_Boolean_above">
        <source>Do not change this code.  Put cleanup code in Dispose(disposing As Boolean) above.</source>
        <target state="translated">Ändern Sie diesen Code nicht. Fügen Sie Bereinigungscode in Dispose(disposing As Boolean) weiter oben ein.</target>
        <note />
      </trans-unit>
      <trans-unit id="TODO_colon_free_unmanaged_resources_unmanaged_objects_and_override_Finalize_below">
        <source>TODO: free unmanaged resources (unmanaged objects) and override Finalize() below.</source>
        <target state="translated">TODO: nicht verwaltete Ressourcen (nicht verwaltete Objekte) freigeben und Finalize() weiter unten überschreiben.</target>
        <note />
      </trans-unit>
      <trans-unit id="TODO_colon_override_Finalize_only_if_Dispose_disposing_As_Boolean_above_has_code_to_free_unmanaged_resources">
        <source>TODO: override Finalize() only if Dispose(disposing As Boolean) above has code to free unmanaged resources.</source>
        <target state="translated">TODO: Finalize() nur überschreiben, wenn Dispose(disposing As Boolean) weiter oben Code zur Bereinigung nicht verwalteter Ressourcen enthält.</target>
        <note />
      </trans-unit>
      <trans-unit id="This_code_added_by_Visual_Basic_to_correctly_implement_the_disposable_pattern">
        <source>This code added by Visual Basic to correctly implement the disposable pattern.</source>
        <target state="translated">Dieser Code wird von Visual Basic hinzugefügt, um das Dispose-Muster richtig zu implementieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="TODO_colon_uncomment_the_following_line_if_Finalize_is_overridden_above">
        <source>TODO: uncomment the following line if Finalize() is overridden above.</source>
        <target state="translated">TODO: Auskommentierung der folgenden Zeile aufheben, wenn Finalize() oben überschrieben wird.</target>
        <note />
      </trans-unit>
      <trans-unit id="Imports_statement_is_unnecessary">
        <source>Imports statement is unnecessary.</source>
        <target state="translated">Imports-Anweisung ist unnötig.</target>
        <note />
      </trans-unit>
      <trans-unit id="Try_block">
        <source>Try block</source>
        <target state="translated">Try-Block</target>
        <note>{Locked="Try"} "Try" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Catch_clause">
        <source>Catch clause</source>
        <target state="translated">Catch-Klausel</target>
        <note>{Locked="Catch"} "Catch" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Finally_clause">
        <source>Finally clause</source>
        <target state="translated">Finally-Klausel</target>
        <note>{Locked="Finally"} "Finally" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Using_statement">
        <source>Using statement</source>
        <target state="translated">Using-Anweisung</target>
        <note>{Locked="Using"} "Using" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Using_block">
        <source>Using block</source>
        <target state="translated">Using-Block</target>
        <note>{Locked="Using"} "Using" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="With_statement">
        <source>With statement</source>
        <target state="translated">With-Anweisung</target>
        <note>{Locked="With"} "With" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="With_block">
        <source>With block</source>
        <target state="translated">With-Block</target>
        <note>{Locked="With"} "With" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="SyncLock_statement">
        <source>SyncLock statement</source>
        <target state="translated">SyncLock-Anweisung</target>
        <note>{Locked="SyncLock"} "SyncLock" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="SyncLock_block">
        <source>SyncLock block</source>
        <target state="translated">SyncLock-Block</target>
        <note>{Locked="SyncLock"} "SyncLock" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="For_Each_statement">
        <source>For Each statement</source>
        <target state="translated">For Each-Anweisung</target>
        <note>{Locked="For Each"} "For Each" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="For_Each_block">
        <source>For Each block</source>
        <target state="translated">For Each-Block</target>
        <note>{Locked="For Each"} "For Each" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="On_Error_statement">
        <source>On Error statement</source>
        <target state="translated">On Error-Anweisung</target>
        <note>{Locked="On Error"} "On Error" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Resume_statement">
        <source>Resume statement</source>
        <target state="translated">Resume-Anweisung</target>
        <note>{Locked="Resume"} "Resume" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Yield_statement">
        <source>Yield statement</source>
        <target state="translated">Yield-Anweisung</target>
        <note>{Locked="Yield"} "Yield" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Await_expression">
        <source>Await expression</source>
        <target state="translated">Await-Ausdruck</target>
        <note>{Locked="Await"} "Await" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Lambda">
        <source>Lambda</source>
        <target state="translated">Lambdafunktion</target>
        <note />
      </trans-unit>
      <trans-unit id="Where_clause">
        <source>Where clause</source>
        <target state="translated">Where-Klausel</target>
        <note>{Locked="Where"} "Where" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Select_clause">
        <source>Select clause</source>
        <target state="translated">Select-Klausel</target>
        <note>{Locked="Select"} "Select" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="From_clause">
        <source>From clause</source>
        <target state="translated">From-Klausel</target>
        <note>{Locked="From"} "From" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Aggregate_clause">
        <source>Aggregate clause</source>
        <target state="translated">Aggregate-Klausel</target>
        <note>{Locked="Aggregate"} "Aggregate" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Let_clause">
        <source>Let clause</source>
        <target state="translated">Let-Klausel</target>
        <note>{Locked="Let"} "Let" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Join_clause">
        <source>Join clause</source>
        <target state="translated">Join-Klausel</target>
        <note>{Locked="Join"} "Join" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Group_Join_clause">
        <source>Group Join clause</source>
        <target state="translated">Group Join-Klausel</target>
        <note>{Locked="Group Join"} "Group Join" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Group_By_clause">
        <source>Group By clause</source>
        <target state="translated">Group By-Klausel</target>
        <note>{Locked="Group By"} "Group By" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Function_aggregation">
        <source>Function aggregation</source>
        <target state="translated">Fuktionsaggregation</target>
        <note />
      </trans-unit>
      <trans-unit id="Take_While_clause">
        <source>Take While clause</source>
        <target state="translated">Take While-Klausel</target>
        <note>{Locked="Take While"} "Take While" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Skip_While_clause">
        <source>Skip While clause</source>
        <target state="translated">Skip While-Klausel</target>
        <note>{Locked="Skip While"} "Skip While" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Ordering_clause">
        <source>Ordering clause</source>
        <target state="translated">Ordering-Klausel</target>
        <note>{Locked="Ordering"} "Ordering" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Join_condition">
        <source>Join condition</source>
        <target state="translated">Join-Bedingung</target>
        <note>{Locked="Join"} "Join" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="WithEvents_field">
        <source>WithEvents field</source>
        <target state="translated">WithEvents-Feld</target>
        <note>{Locked="WithEvents"} "WithEvents" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="property_accessor">
        <source>property accessor</source>
        <target state="translated">Eigenschaftenaccessor</target>
        <note />
      </trans-unit>
      <trans-unit id="as_clause">
        <source>as clause</source>
        <target state="translated">as-Klausel</target>
        <note>{Locked="as"} "as" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="type_parameters">
        <source>type parameters</source>
        <target state="translated">Typparameter</target>
        <note />
      </trans-unit>
      <trans-unit id="parameters">
        <source>parameters</source>
        <target state="translated">Parameter</target>
        <note />
      </trans-unit>
      <trans-unit id="attributes">
        <source>attributes</source>
        <target state="translated">Attribute</target>
        <note />
      </trans-unit>
      <trans-unit id="Too_many_arguments_to_0">
        <source>Too many arguments to '{0}'.</source>
        <target state="translated">Zu viele Argumente für "{0}".</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_0_is_not_defined">
        <source>Type '{0}' is not defined.</source>
        <target state="translated">Der Typ "{0}" ist nicht definiert.</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_Overloads">
        <source>Add 'Overloads'</source>
        <target state="translated">"Overloads" hinzufügen</target>
        <note>{Locked="Overloads"} "Overloads" is a VB keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="Add_a_metadata_reference_to_specified_assembly_and_all_its_dependencies_e_g_Sharpr_myLib_dll">
        <source>Add a metadata reference to specified assembly and all its dependencies, e.g. #r "myLib.dll".</source>
        <target state="translated">Fügt der angegebenen Assembly und allen ihren Abhängigkeiten einen Metadatenverweis hinzu. Beispiel: #r "myLib.dll".</target>
        <note />
      </trans-unit>
      <trans-unit id="Properties">
        <source>Properties</source>
        <target state="translated">Eigenschaften</target>
        <note />
      </trans-unit>
      <trans-unit id="namespace_name">
        <source>&lt;namespace name&gt;</source>
        <target state="translated">&lt;Namespacename&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_namespace">
        <source>Type a name here to declare a namespace.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um einen Namespace zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_partial_class">
        <source>Type a name here to declare a partial class.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um eine partielle Klasse zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="class_name">
        <source>&lt;class name&gt;</source>
        <target state="translated">&lt;Klassenname&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="interface_name">
        <source>&lt;interface name&gt;</source>
        <target state="translated">&lt;Schnittstellenname&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="module_name">
        <source>&lt;module name&gt;</source>
        <target state="translated">&lt;Modulname&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="structure_name">
        <source>&lt;structure name&gt;</source>
        <target state="translated">&lt;Strukturname&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_partial_interface">
        <source>Type a name here to declare a partial interface.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um eine partielle Schnittstelle zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_partial_module">
        <source>Type a name here to declare a partial module.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um ein partielles Modul zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_a_name_here_to_declare_a_partial_structure">
        <source>Type a name here to declare a partial structure.</source>
        <target state="translated">Geben Sie hier einen Namen ein, um eine partielle Struktur zu deklarieren.</target>
        <note />
      </trans-unit>
      <trans-unit id="Event_add_handler_name">
        <source>{0}.add</source>
        <target state="translated">{0}.add</target>
        <note>The name of an event add handler where "{0}" is the event name.</note>
      </trans-unit>
      <trans-unit id="Event_remove_handler_name">
        <source>{0}.remove</source>
        <target state="translated">{0}.remove</target>
        <note>The name of an event remove handler where "{0}" is the event name.</note>
      </trans-unit>
      <trans-unit id="Property_getter_name">
        <source>{0}.get</source>
        <target state="translated">{0}.get</target>
        <note>The name of a property getter like "public int MyProperty { get; }" where "{0}" is the property name</note>
      </trans-unit>
      <trans-unit id="Property_setter_name">
        <source>{0}.set</source>
        <target state="translated">{0}.set</target>
        <note>The name of a property setter like "public int MyProperty { set; }" where "{0}" is the property name</note>
      </trans-unit>
      <trans-unit id="Make_Async_Function">
        <source>Make Async Function</source>
        <target state="translated">Funktion als asynchron definieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Make_Async_Sub">
        <source>Make Async Sub</source>
        <target state="translated">Sub als asynchron definieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Add_Me">
        <source>Add 'Me.'</source>
        <target state="translated">"Me." hinzufügen</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Is_Nothing_check">
        <source>Use 'Is Nothing' check</source>
        <target state="translated">Prüfung "Is Nothing" verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_IsNot_Nothing_check">
        <source>Use 'IsNot Nothing' check</source>
        <target state="translated">Prüfung "IsNot Nothing" verwenden</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_Select_Case">
        <source>Convert to 'Select Case'</source>
        <target state="translated">In "Select Case" konvertieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_For_Each">
        <source>Convert to 'For Each'</source>
        <target state="translated">In "For Each" konvertieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Convert_to_For">
        <source>Convert  to 'For'</source>
        <target state="translated">In "For" konvertieren</target>
        <note />
      </trans-unit>
      <trans-unit id="Invert_If">
        <source>Invert If</source>
        <target state="translated">"If" umkehren</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>