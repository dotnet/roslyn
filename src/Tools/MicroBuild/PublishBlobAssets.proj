<Project>

  <Import Project="..\..\..\build\Targets\Settings.props" />

  <PropertyGroup>
    <PublishOverwrite Condition="'$(PublishOverwrite)' == ''">false</PublishOverwrite>
  </PropertyGroup>

  <!--
  This is for the internal orchestrated build scenarios and will likely never be run on a
  developer's machine.  The official build definition builds this file directly.
  -->
  <Import Project="$(NuGetPackageRoot)microsoft.dotnet.build.tasks.feed\$(MicrosoftDotNetBuildTasksFeedVersion)\build\Microsoft.DotNet.Build.Tasks.Feed.targets" />

  <ItemGroup>
    <PackagesToPublish Include="$(OutputPath)\NuGet\**\*.nupkg" />
  </ItemGroup>

  <Target Name="Build">
    <PropertyGroup>
      <SymbolPackagesDir>$(RepoRoot)Binaries\SymbolPackages\</SymbolPackagesDir>
    </PropertyGroup>

    <!--
      We expect .nupkg to contain Portable PDBs. Such packages can act as symbol packages since they have the same structure.
      We just need to rename them to *.symbols.nupkg.
    -->
    <ItemGroup>
      <SymbolPackagesToPublish Include="@(PackagesToPublish->'$(SymbolPackagesDir)%(Filename).symbols.nupkg')"/>
    </ItemGroup>

    <MakeDir Directories="$(SymbolPackagesDir)" />
    <Copy SourceFiles="@(PackagesToPublish)" DestinationFiles="@(SymbolPackagesToPublish)" />
    
    <PushToBlobFeed ExpectedFeedUrl="$(PB_PublishBlobFeedUrl)"
                    AccountKey="$(PB_PublishBlobFeedKey)"
                    ItemsToPush="@(ItemsToPush)"
                    Overwrite="$(PublishOverwrite)"
                    ManifestBranch="$(BUILD_SOURCEBRANCH)"
                    ManifestBuildId="$(BUILD_BUILDNUMBER)"
                    ManifestCommit="$(CommitHashDisplay)"
                    ManifestName="roslyn"
                    SkipCreateManifest="false" />
  </Target>

</Project>
