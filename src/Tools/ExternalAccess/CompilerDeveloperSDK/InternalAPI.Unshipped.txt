#nullable enable
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>.GetTextDocumentIdentifier(TRequest request) -> Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier!
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>.HandleRequestAsync(TRequest request, Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TResponse>!
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>.MutatesSolutionState.get -> bool
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>.RequiresLSPSolution.get -> bool
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceFactory.CreateILspService(Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices lspServices) -> Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspService!
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceRequestHandler<TRequest, TResponse>.HandleRequestAsync(TRequest request, Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TResponse>!
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceRequestHandler<TRequest, TResponse>.MutatesSolutionState.get -> bool
abstract Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceRequestHandler<TRequest, TResponse>.RequiresLSPSolution.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspService
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspService.AbstractCompilerDeveloperSdkLspService() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler<TRequest, TResponse>.AbstractCompilerDeveloperSdkLspServiceDocumentRequestHandler() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceFactory
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceFactory.AbstractCompilerDeveloperSdkLspServiceFactory() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceRequestHandler<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.AbstractCompilerDeveloperSdkLspServiceRequestHandler<TRequest, TResponse>.AbstractCompilerDeveloperSdkLspServiceRequestHandler() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices.CompilerDeveloperSdkLspServices() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices.CompilerDeveloperSdkLspServices(Microsoft.CodeAnalysis.LanguageServer.LspServices! lspServices) -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices.GetRequiredService<T>() -> T
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkLspServices.GetService<T>() -> T?
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkMethodAttribute
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.CompilerDeveloperSdkMethodAttribute.CompilerDeveloperSdkMethodAttribute(string! method) -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ExportCompilerDeveloperSdkLspServiceFactoryAttribute
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ExportCompilerDeveloperSdkLspServiceFactoryAttribute.ExportCompilerDeveloperSdkLspServiceFactoryAttribute(System.Type! type) -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ExportCompilerDeveloperSdkStatelessLspServiceAttribute
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ExportCompilerDeveloperSdkStatelessLspServiceAttribute.ExportCompilerDeveloperSdkStatelessLspServiceAttribute(System.Type! type) -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.Document.get -> Microsoft.CodeAnalysis.Document?
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.GetRequiredDocument() -> Microsoft.CodeAnalysis.Document!
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.GetRequiredService<T>() -> T!
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.RequestContext() -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.RequestContext(Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext context) -> void
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.Solution.get -> Microsoft.CodeAnalysis.Solution?
Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.RequestContext.Workspace.get -> Microsoft.CodeAnalysis.Workspace?
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.LinePositionToPosition(Microsoft.CodeAnalysis.Text.LinePosition linePosition) -> Microsoft.VisualStudio.LanguageServer.Protocol.Position!
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.LinePositionToRange(Microsoft.CodeAnalysis.Text.LinePositionSpan linePositionSpan) -> Microsoft.VisualStudio.LanguageServer.Protocol.Range!
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.PositionToLinePosition(Microsoft.VisualStudio.LanguageServer.Protocol.Position! position) -> Microsoft.CodeAnalysis.Text.LinePosition
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.RangeToLinePositionSpan(Microsoft.VisualStudio.LanguageServer.Protocol.Range! range) -> Microsoft.CodeAnalysis.Text.LinePositionSpan
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.RangeToTextSpan(Microsoft.VisualStudio.LanguageServer.Protocol.Range! range, Microsoft.CodeAnalysis.Text.SourceText! text) -> Microsoft.CodeAnalysis.Text.TextSpan
static Microsoft.CodeAnalysis.ExternalAccess.CompilerDeveloperSdk.ProtocolConversions.TextSpanToRange(Microsoft.CodeAnalysis.Text.TextSpan textSpan, Microsoft.CodeAnalysis.Text.SourceText! text) -> Microsoft.VisualStudio.LanguageServer.Protocol.Range!
