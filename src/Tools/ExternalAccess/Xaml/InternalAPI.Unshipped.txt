abstract Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>.GetTextDocumentIdentifier(TRequest request) -> Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier!
abstract Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerFactoryBase<TRequest, TResponse>.CreateHandler(Microsoft.CodeAnalysis.ExternalAccess.Xaml.IXamlRequestHandler<TRequest, TResponse>? xamlRequestHandler, Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveCachedDataService! resolveDataService) -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.CreateEventHandlerCommand = "Xaml.CreateEventHandler" -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.FactoryMethodMessage = "This factory method only provides services for the MEF export provider." -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.ImportingConstructorMessage = "This exported object must be obtained through the MEF export provider." -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.RetriggerCompletionCommand = "editor.action.triggerSuggest" -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.XamlFileExtension = ".xaml" -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.XamlLanguageName = "XAML" -> string!
const Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants.XamlLspLanguagesContract = "XamlLspLanguages" -> string!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataId.get -> long
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataId.init -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataIdResolveData(long DataId, long DocumentId) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.DataIdResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData! original) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Deconstruct(out long DataId, out long DocumentId) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Data.get -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Data.init -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.DataResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData! original) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.DataResolveData(object! Data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! Document) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Deconstruct(out object! Data, out Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! Document) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Document.get -> Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Document.init -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.DescriptionService(Microsoft.CodeAnalysis.Options.IGlobalOptionService! globalOptions) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.GetDescriptionAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.TaggedText>!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.DescriptionService.GetMarkupContent(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> tags, string! language, bool featureSupportsMarkdown) -> Microsoft.VisualStudio.LanguageServer.Protocol.MarkupContent!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ExportXamlLspServiceFactoryAttribute
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ExportXamlLspServiceFactoryAttribute.ExportXamlLspServiceFactoryAttribute(System.Type! type, Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds serverKind = Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds.Any) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ExportXamlStatelessLspServiceAttribute
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ExportXamlStatelessLspServiceAttribute.ExportXamlStatelessLspServiceAttribute(System.Type! handlerType) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ICapabilityRegistrationsProvider
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ICapabilityRegistrationsProvider.GetRegistrations(Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities! clientCapabilities) -> System.Collections.Immutable.ImmutableArray<Microsoft.VisualStudio.LanguageServer.Protocol.Registration!>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService.GetDescriptionAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.TaggedText>!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IDescriptionService.GetMarkupContent(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.TaggedText> tags, string! language, bool featureSupportsMarkdown) -> Microsoft.VisualStudio.LanguageServer.Protocol.MarkupContent!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService.GetLocationAsync(Microsoft.CodeAnalysis.TextDocument! document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location?>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ILocationService.GetSymbolLocationsAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location![]!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveCachedDataService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveCachedDataService.FromResolveData(object? resolveData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveCachedDataService.ToResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.FromCachedResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object? resolveData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.FromResolveData(object? resolveData) -> Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier?
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.ToCachedResolveData(Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext context, object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IResolveDataService.ToResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.IXamlRequestHandler<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.GetLocationAsync(Microsoft.CodeAnalysis.TextDocument! document, Microsoft.CodeAnalysis.Text.TextSpan textSpan, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location?>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.GetSymbolLocationsAsync(Microsoft.CodeAnalysis.ISymbol! symbol, Microsoft.CodeAnalysis.Project! project, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Location![]!>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.LocationService.LocationService(Microsoft.CodeAnalysis.MetadataAsSource.IMetadataAsSourceFileService! metadataAsSourceFileService, Microsoft.CodeAnalysis.Options.IGlobalOptionService! globalOptions) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.OnInitializedServiceFactory
Microsoft.CodeAnalysis.ExternalAccess.Xaml.OnInitializedServiceFactory.CreateILspService(Microsoft.CodeAnalysis.LanguageServer.LspServices! lspServices, Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds serverKind) -> Microsoft.CodeAnalysis.LanguageServer.ILspService!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.OnInitializedServiceFactory.OnInitializedServiceFactory(Microsoft.CodeAnalysis.ExternalAccess.Xaml.ICapabilityRegistrationsProvider! registrationsProvider) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService.FromResolveData(object? lspData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService.ResolveCachedDataService(Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache! resolveDataCache, Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentCache! documentCache) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService.ToResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataConversions
Microsoft.CodeAnalysis.ExternalAccess.Xaml.StringConstants
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlCommandAttribute
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlCommandAttribute.XamlCommandAttribute(string! command) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol.Children.get -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol![]?
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol.Children.set -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol.Glyph.get -> int
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol.Glyph.set -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbol.XamlDocumentSymbol() -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbolParams
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlDocumentSymbolParams.XamlDocumentSymbolParams() -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlHoverResultCreation
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlMethodAttribute
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlMethodAttribute.XamlMethodAttribute(string! method) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.ClientCapabilities.get -> Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.FromCachedResolveData(object? lspData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.TextDocument.get -> Microsoft.CodeAnalysis.TextDocument?
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.ToCachedResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.XamlRequestContext() -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>.HandleRequestAsync(TRequest request, Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TResponse>!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>.MutatesSolutionState.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>.RequiresLSPSolution.get -> bool
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerBase<TRequest, TResponse>.XamlRequestHandlerBase(Microsoft.CodeAnalysis.ExternalAccess.Xaml.IXamlRequestHandler<TRequest, TResponse>? xamlRequestHandler) -> void
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerFactoryBase<TRequest, TResponse>
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerFactoryBase<TRequest, TResponse>.CreateILspService(Microsoft.CodeAnalysis.LanguageServer.LspServices! lspServices, Microsoft.CodeAnalysis.LanguageServer.WellKnownLspServerKinds serverKind) -> Microsoft.CodeAnalysis.LanguageServer.ILspService!
Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestHandlerFactoryBase<TRequest, TResponse>.XamlRequestHandlerFactoryBase(Microsoft.CodeAnalysis.ExternalAccess.Xaml.IXamlRequestHandler<TRequest, TResponse>? xamlRequestHandler) -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.DataId.get -> long
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.DataId.init -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Deconstruct(out long DataId, out long DocumentId) -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ResolveData(long DataId, long DocumentId) -> void
Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ResolveData(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData! original) -> void
Microsoft.VisualStudio.DesignTools.Xaml.IXamlDocumentRequestHandler<TRequest, TResponse>
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.<Clone>$() -> Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentIdResolveData!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.EqualityContract.get -> System.Type!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(object? obj) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.GetHashCode() -> int
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.PrintMembers(System.Text.StringBuilder! builder) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.ToString() -> string!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.<Clone>$() -> Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentResolveData!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.EqualityContract.get -> System.Type!
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Equals(object? obj) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.GetHashCode() -> int
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.PrintMembers(System.Text.StringBuilder! builder) -> bool
override Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.ToString() -> string!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.<Clone>$() -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.DocumentIdResolveData!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.EqualityContract.get -> System.Type!
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(object? obj) -> bool
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.GetHashCode() -> int
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.PrintMembers(System.Text.StringBuilder! builder) -> bool
override Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.ToString() -> string!
override sealed Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentIdResolveData? other) -> bool
override sealed Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Equals(Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentResolveData? other) -> bool
override sealed Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DocumentIdResolveData? other) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.operator !=(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.operator ==(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.operator !=(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.operator ==(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData? left, Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData? right) -> bool
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService.FromResolveData(object? lspData, Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache! resolveDataCache, Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentCache! documentCache) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveCachedDataService.ToResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document, Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache! resolveDataCache, Microsoft.CodeAnalysis.LanguageServer.Handler.DocumentCache! documentCache) -> object!
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataConversions.FromCachedResolveData(object? lspData, Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache! resolveDataCache) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataConversions.FromResolveData(object? requestData) -> (object? data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier? document)
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataConversions.ToCachedResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document, Microsoft.CodeAnalysis.LanguageServer.Handler.ResolveDataCache! resolveDataCache) -> object!
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.ResolveDataConversions.ToResolveData(object! data, Microsoft.VisualStudio.LanguageServer.Protocol.TextDocumentIdentifier! document) -> object!
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlHoverResultCreation.CreateHoverAsync(Microsoft.CodeAnalysis.TextDocument! document, Microsoft.CodeAnalysis.QuickInfo.QuickInfoItem! info, Microsoft.VisualStudio.LanguageServer.Protocol.ClientCapabilities! clientCapabilities, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.LanguageServer.Protocol.Hover!>!
static Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext.FromRequestContext(Microsoft.CodeAnalysis.LanguageServer.Handler.RequestContext context) -> Microsoft.CodeAnalysis.ExternalAccess.Xaml.XamlRequestContext
static Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.operator !=(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? left, Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? right) -> bool
static Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.operator ==(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? left, Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? right) -> bool
virtual Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData.Equals(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataIdResolveData? other) -> bool
virtual Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData.Equals(Microsoft.CodeAnalysis.ExternalAccess.Xaml.DataResolveData? other) -> bool
virtual Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData.Equals(Microsoft.VisualStudio.DesignTools.Xaml.Handler.ResolveData? other) -> bool
