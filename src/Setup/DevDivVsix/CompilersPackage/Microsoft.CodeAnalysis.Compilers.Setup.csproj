<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <RoslynProjectType>Custom</RoslynProjectType>
    <ApplyPartialNgenOptimization>true</ApplyPartialNgenOptimization>

    <!-- VS Insertion -->
    <TargetVsixContainerName>Microsoft.CodeAnalysis.Compilers.vsix</TargetVsixContainerName>
    <VisualStudioInsertionComponent>Microsoft.CodeAnalysis.Compilers</VisualStudioInsertionComponent>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\Compilers\CSharp\csc\csc.csproj" PrivateAssets="All"/>
    <ProjectReference Include="..\..\..\Compilers\VisualBasic\vbc\vbc.csproj" PrivateAssets="All"/>
    <ProjectReference Include="..\..\..\Interactive\csi\csi.csproj" PrivateAssets="All"/>
    <ProjectReference Include="..\..\..\Compilers\Core\MSBuildTask\Microsoft.Build.Tasks.CodeAnalysis.csproj" PrivateAssets="All"/>
    <ProjectReference Include="..\..\..\Compilers\Server\VBCSCompiler\VBCSCompiler.csproj" PrivateAssets="All"/>
  </ItemGroup>

  <Target Name="_SetSwrFilePath">
    <PropertyGroup>
      <_SwrFilePath>$(IntermediateOutputPath)Microsoft.CodeAnalysis.Compilers.swr</_SwrFilePath>
    </PropertyGroup>
  </Target>

  <!-- 
    Calculates which external dependencies included in the target VSIX need to be updated with optimization data.
  -->
  <Target Name="_CalculateDesktopCompilerArtifactsToOptimize"
          DependsOnTargets="InitializeDesktopCompilerArtifacts">

    <ItemGroup>
      <DesktopCompilerArtifact Condition="'%(DesktopCompilerArtifact.OverwriteNgenOptimizationData)' == 'true' and '$(ApplyPartialNgenOptimization)' == 'true'">
        <_OptimizeAssembly>$(IntermediateOutputPath)optimized\$([System.IO.Path]::GetFileName(%(DesktopCompilerArtifact.Identity)))</_OptimizeAssembly>
      </DesktopCompilerArtifact>

      <OptimizeAssembly Include="@(DesktopCompilerArtifact->'%(_OptimizeAssembly)')" Condition="'%(DesktopCompilerArtifact._OptimizeAssembly)' != ''" />
    </ItemGroup>
  </Target>

  <!-- 
    Copies the artifacts that need optimization data to an intermediate output dir.
  -->
  <Target Name="_PrepareDesktopCompilerArtifactsForOptimization"
          DependsOnTargets="_CalculateDesktopCompilerArtifactsToOptimize"
          Inputs="@(DesktopCompilerArtifact)"
          Outputs="@(DesktopCompilerArtifact->'%(_OptimizeAssembly)')"
          Condition="'$(Configuration)' == 'Release' and '$(ContinuousIntegrationBuild)' == 'true' and '$(ApplyPartialNgenOptimization)' == 'true'">

    <Copy SourceFiles="%(DesktopCompilerArtifact.Identity)" DestinationFiles="%(DesktopCompilerArtifact._OptimizeAssembly)" Condition="'%(DesktopCompilerArtifact._OptimizeAssembly)' != ''">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <!--
  Splits the $(XlfLanguages) property into an item group.  E.g., this:

    <PropertyGroup>
      <XlfLanguages>cs;de;...</XlfLanguages>
    </PropertyGroup>

  turns into this:

    <ItemGroup>
      <_XlfLanguages Include="cs" />
      <_XlfLanguages Include="de" />
      ...
    </ItemGroup>

   -->
  <Target Name="_GenerateLanguageList">
    <CreateItem Include="$(XlfLanguages)">
      <Output TaskParameter="Include" ItemName="_XlfLanguages" />
    </CreateItem>
  </Target>

  <!-- For each localization language, include the appropriate satellite assemblies. -->
  <Target Name="_GenerateLocSwrFileContents"
          DependsOnTargets="_GenerateLanguageList"
          Outputs="%(_XlfLanguages.Identity)">
    <PropertyGroup>
      <_Line>
<![CDATA[
folder InstallDir:\MSBuild\15.0\Bin\Roslyn\%(_XlfLanguages.Identity)
  file source=$(ArtifactsBinDir)Microsoft.CodeAnalysis\$(Configuration)\netstandard2.0\%(_XlfLanguages.Identity)\Microsoft.CodeAnalysis.resources.dll
  file source=$(ArtifactsBinDir)Microsoft.CodeAnalysis.CSharp\$(Configuration)\netstandard2.0\%(_XlfLanguages.Identity)\Microsoft.CodeAnalysis.CSharp.resources.dll
  file source=$(ArtifactsBinDir)Microsoft.CodeAnalysis.Scripting\$(Configuration)\netstandard2.0\%(_XlfLanguages.Identity)\Microsoft.CodeAnalysis.Scripting.resources.dll
  file source=$(ArtifactsBinDir)Microsoft.CodeAnalysis.CSharp.Scripting\$(Configuration)\netstandard2.0\%(_XlfLanguages.Identity)\Microsoft.CodeAnalysis.CSharp.Scripting.resources.dll
  file source=$(ArtifactsBinDir)Microsoft.CodeAnalysis.VisualBasic\$(Configuration)\netstandard2.0\%(_XlfLanguages.Identity)\Microsoft.CodeAnalysis.VisualBasic.resources.dll
  file source=$(ArtifactsBinDir)Microsoft.Build.Tasks.CodeAnalysis\$(Configuration)\net472\%(_XlfLanguages.Identity)\Microsoft.Build.Tasks.CodeAnalysis.resources.dll
]]>
      </_Line>
    </PropertyGroup>
    <ItemGroup>
      <_BuiltSwrLines Include="$(_Line)" />
    </ItemGroup>
  </Target>

  <Target Name="_GenerateSwrFile"
          AfterTargets="Build"
          BeforeTargets="SwixBuild"
          DependsOnTargets="_SetSwrFilePath;_GenerateLocSwrFileContents;InitializeDesktopCompilerArtifacts;_PrepareDesktopCompilerArtifactsForOptimization;ApplyOptimizations"
          Outputs="$(_SwrFilePath)">

    <ItemGroup>
      <_File Include="@(DesktopCompilerArtifact)">
        <Path Condition="'%(DesktopCompilerArtifact._OptimizeAssembly)' == ''">%(DesktopCompilerArtifact.Identity)</Path>
        <Path Condition="'%(DesktopCompilerArtifact._OptimizeAssembly)' != ''">%(DesktopCompilerArtifact._OptimizeAssembly)</Path>
        <NGenArchitectureString Condition="'%(DesktopCompilerArtifact.NgenArchitecture)' != ''"> vs.file.ngenArchitecture=%(DesktopCompilerArtifact.NgenArchitecture)</NGenArchitectureString>
        <NGenPriorityString Condition="'%(DesktopCompilerArtifact.NGenPriority)' != ''"> vs.file.ngenPriority=%(DesktopCompilerArtifact.NGenPriority)</NGenPriorityString>
        <NGenApplicationString Condition="'%(DesktopCompilerArtifact.NGenApplication)' != ''"> vs.file.ngenApplication="[installDir]\MSBuild\Current\Bin\Roslyn\%(DesktopCompilerArtifact.NGenApplication)"</NGenApplicationString>
      </_File>

      <_FileEntries Include='file source="%(_File.Path)"%(_File.NGenArchitectureString)%(_File.NGenPriorityString)%(_File.NGenApplicationString)'/>
    </ItemGroup>

    <PropertyGroup>
      <_Lines>
        <![CDATA[use vs

package name=$(VisualStudioInsertionComponent)
        version=$(VsixVersion)

vs.dependencies
  vs.dependency id=Microsoft.Net.PackageGroup.4.7.2.Redist

vs.nonCriticalProcesses
  vs.nonCriticalProcess name="VBCSCompiler"

folder InstallDir:\MSBuild\Current\Bin\Roslyn
  @(_FileEntries, '%0d%0a  ')

folder InstallDir:\Common7\Tools\vsdevcmd\ext
  file source="$(MSBuildProjectDirectory)\roslyn.bat"

@(_BuiltSwrLines)
]]>
      </_Lines>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(_SwrFilePath)" Lines="$(_Lines)" Overwrite="true"/>

    <ItemGroup>
      <FileWrites Include="$(_SwrFilePath)"/>
      <SwrFile Include="$(_SwrFilePath)"/>
    </ItemGroup>
  </Target>

  <Import Project="..\..\..\NuGet\Microsoft.Net.Compilers.Toolset\DesktopCompilerArtifacts.targets"/>
</Project>
