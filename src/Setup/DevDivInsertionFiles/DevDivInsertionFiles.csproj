<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\build\Targets\RepoToolset\BuildTasks.props"/>
  <UsingTask TaskName="RoslynTools.GetAssemblyFullName" AssemblyFile="$(RoslynToolsBuildTasksAssembly)" />
  
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\VisualStudio\CSharp\Impl\Microsoft.VisualStudio.LanguageServices.CSharp.csproj"/>
    <ProjectReference Include="..\..\VisualStudio\VisualBasic\Impl\Microsoft.VisualStudio.LanguageServices.VisualBasic.vbproj"/>
    <ProjectReference Include="..\..\ExpressionEvaluator\CSharp\Source\ExpressionCompiler\Microsoft.CodeAnalysis.CSharp.ExpressionCompiler.csproj"/>
    <ProjectReference Include="..\..\ExpressionEvaluator\VisualBasic\Source\ExpressionCompiler\Microsoft.CodeAnalysis.VisualBasic.ExpressionCompiler.vbproj"/>
  </ItemGroup>

  <PropertyGroup>
    <_DevDivInsertionFilesDir>$(ArtifactsConfigurationDir)DevDivInsertionFiles\</_DevDivInsertionFilesDir>
    <_DependentAssemblyVersionsFile>$(_DevDivInsertionFilesDir)DependentAssemblyVersions.csv</_DependentAssemblyVersionsFile>
    <_ManagedDependenciesDir>$(ArtifactsConfigurationDir)DevDivPackages\ManagedDependencies\</_ManagedDependenciesDir>
  </PropertyGroup>

  <!-- 
    List of dependencies that are expected to be inserted into VS by Roslyn Insertion Tool.
  -->
  <ItemGroup>
    <ExpectedDependency Include="Humanizer.Core"/>
    <ExpectedDependency Include="ICSharpCode.Decompiler"/>
    <ExpectedDependency Include="Microsoft.DiaSymReader"/>
    <ExpectedDependency Include="Microsoft.CodeAnalysis.Elfie"/>
    <ExpectedDependency Include="System.Collections.Immutable"/>
    <ExpectedDependency Include="System.Reflection.Metadata"/>
    <ExpectedDependency Include="System.Runtime.CompilerServices.Unsafe"/>
    <ExpectedDependency Include="System.Text.Encoding.CodePages"/>
    <ExpectedDependency Include="System.Threading.Tasks.Extensions"/>
  </ItemGroup>
  
  <Target Name="_CalculateDependenciesToInsert" DependsOnTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <!-- Take all resolved non-framework dependencies of this project that originate from a NuGet package -->
      <_Dependency Include="@(ReferencePath->'%(NuGetPackageId)')" 
                   Condition="'%(ReferencePath.FrameworkFile)' != 'true' and 
                              '%(ReferencePath.NuGetPackageId)' != '' and 
                              '%(ReferencePath.ReferenceSourceTarget)' != 'ProjectReference'" />

      <!-- Take all additional files that get copied to the output directory and are not satellite assemblies -->
      <_CopyLocalDependency Include="@(ReferenceCopyLocalPaths->'%(NuGetPackageId)')"
                            Exclude="@(_Dependency)"
                            Condition="'%(ReferenceCopyLocalPaths.Culture)' == ''">
        <_AssemblyPath>%(ReferenceCopyLocalPaths.Identity)</_AssemblyPath>
      </_CopyLocalDependency>
    </ItemGroup>

    <RoslynTools.GetAssemblyFullName Items="@(_CopyLocalDependency)" PathMetadata="_AssemblyPath" FullNameMetadata="FusionName">
      <Output TaskParameter="ItemsWithFullName" ItemName="_Dependency"/>
    </RoslynTools.GetAssemblyFullName>

    <!--     
      Exclude dependencies that are not inserted from Roslyn repo.
      Note: can't use globs due to https://github.com/Microsoft/msbuild/issues/3791.
    -->
    <ItemGroup>
      <_Dependency Remove="@(_Dependency)" Condition="$([MSBuild]::ValueOrDefault('%(Identity)', '').StartsWith('Microsoft.VisualStudio.'))"/>
      <_Dependency Remove="@(_Dependency)" Condition="$([MSBuild]::ValueOrDefault('%(Identity)', '').StartsWith('System.Composition.'))"/>
      <_Dependency Remove="@(_Dependency)" Condition="$([MSBuild]::ValueOrDefault('%(Identity)', '').StartsWith('Microsoft.Internal.VisualStudio.'))"/>
      <_Dependency Remove="EnvDTE"/>
      <_Dependency Remove="EnvDTE80"/>
      <_Dependency Remove="Microsoft.Build"/>
      <_Dependency Remove="Microsoft.Build.Framework"/>
      <_Dependency Remove="Microsoft.MSXML"/>
      <_Dependency Remove="Newtonsoft.Json"/>
      <_Dependency Remove="stdole"/>
      <_Dependency Remove="StreamJsonRpc"/>
      <_Dependency Remove="System.Threading.Tasks.Dataflow"/>
    </ItemGroup>

    <!-- Calculate metadata we need -->
    <ItemGroup>
      <_Dependency Update="@(_Dependency)">
        <_AssemblyName>$([MSBuild]::ValueOrDefault('%(_Dependency.FusionName)', '').Split(',')[0])</_AssemblyName>
        <_AssemblyVersion>$([MSBuild]::ValueOrDefault('%(_Dependency.FusionName)', '').Split(',')[1])</_AssemblyVersion>
        <_NuGetPackageFileName>%(_Dependency.NuGetPackageId).%(_Dependency.NuGetPackageVersion).nupkg</_NuGetPackageFileName>
        <_NuGetPackagePath>$(NuGetPackageRoot)$([MSBuild]::ValueOrDefault('%(_Dependency.NuGetPackageId)', '').ToLower())\%(_Dependency.NuGetPackageVersion)\%(_Dependency.NuGetPackageId).%(_Dependency.NuGetPackageVersion).nupkg</_NuGetPackagePath>
      </_Dependency>
    </ItemGroup>

    <!-- Sanity check that prevents us from accidentally inserting a new dependency without knowing. -->
    <ItemGroup>
      <_RemainingDependency Include="@(_Dependency)" Exclude="@(ExpectedDependency)"/>
      <_UninsertedExpectedDependency Include="@(ExpectedDependency)" Exclude="@(_Dependency)"/>
    </ItemGroup>

    <Error Text="Unexpected dependencies found -- update ExpectedDependency list: @(_RemainingDependency)" Condition="'@(_RemainingDependency)' != ''"/>
    <Error Text="Missing dependencies expected to be inserted -- update ExpectedDependency list: @(_UninsertedExpectedDependency)" Condition="'@(_UninsertedExpectedDependency)' != ''"/>
  </Target>

  <!-- 
    Write a list of assembly names and versions that the insertion tool uses to update assembly versions in DevDiv.
  -->
  <Target Name="_GenerateDependentAssemblyVersions" 
          AfterTargets="Build" 
          DependsOnTargets="_CalculateDependenciesToInsert"
          Inputs="$(MSBuildAllProjects)"
          Outputs="$(_DependentAssemblyVersionsFile)">

    <MakeDir Directories="$(_DevDivInsertionFilesDir)"/>
    <WriteLinesToFile Lines="@(_Dependency->'%(_AssemblyName),%(_AssemblyVersion)')" File="$(_DependentAssemblyVersionsFile)" Overwrite="true"/>

    <ItemGroup>
      <FileWrites Include="$(_DependentAssemblyVersionsFile)"/>
    </ItemGroup>
  </Target>

  <!--
    Copy NuGet packages to be inserted into VS by the insertion tool.
  -->
  <Target Name="_CopyPackagesToInsert"
          AfterTargets="Build"
          DependsOnTargets="_CalculateDependenciesToInsert"
          Inputs="$(MSBuildAllProjects)"
          Outputs="@(_Dependency->'$(_ManagedDependenciesDir)%(_NuGetPackageFileName)')"
          Condition="'$(OfficialBuild)' == 'true'">

    <MakeDir Directories="$(_ManagedDependenciesDir)"/>
    <Copy SourceFiles="@(_Dependency->'%(_NuGetPackagePath)')" DestinationFolder="$(_ManagedDependenciesDir)"/>

    <ItemGroup>
      <FileWrites Include="@(_Dependency->'$(_ManagedDependenciesDir)%(_NuGetPackageFileName)')"/>
    </ItemGroup>
  </Target>
</Project>