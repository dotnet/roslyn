Microsoft.CodeAnalysis.AnalyzerAssemblyLoadEventArgs
Microsoft.CodeAnalysis.AnalyzerAssemblyLoadEventArgs.AnalyzerAssemblyLoadEventArgs(string path, System.Reflection.Assembly loadedAssembly) -> void
Microsoft.CodeAnalysis.AnalyzerAssemblyLoadEventArgs.LoadedAssembly.get -> System.Reflection.Assembly
Microsoft.CodeAnalysis.AnalyzerAssemblyLoadEventArgs.Path.get -> string
Microsoft.CodeAnalysis.AssemblyIdentityExtensions
Microsoft.CodeAnalysis.CommandLineAnalyzerReference
Microsoft.CodeAnalysis.CommandLineAnalyzerReference.CommandLineAnalyzerReference(string path) -> void
Microsoft.CodeAnalysis.CommandLineAnalyzerReference.Equals(Microsoft.CodeAnalysis.CommandLineAnalyzerReference other) -> bool
Microsoft.CodeAnalysis.CommandLineAnalyzerReference.FilePath.get -> string
Microsoft.CodeAnalysis.CommandLineArguments
Microsoft.CodeAnalysis.CommandLineArguments.AdditionalFiles.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CommandLineSourceFile>
Microsoft.CodeAnalysis.CommandLineArguments.AnalyzerReferences.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CommandLineAnalyzerReference>
Microsoft.CodeAnalysis.CommandLineArguments.AppConfigPath.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.BaseDirectory.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.ChecksumAlgorithm.get -> Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
Microsoft.CodeAnalysis.CommandLineArguments.CompilationName.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptions.get -> Microsoft.CodeAnalysis.CompilationOptions
Microsoft.CodeAnalysis.CommandLineArguments.DisplayHelp.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.DisplayLogo.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.DocumentationPath.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.EmitOptions.get -> Microsoft.CodeAnalysis.Emit.EmitOptions
Microsoft.CodeAnalysis.CommandLineArguments.EmitPdb.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.Encoding.get -> System.Text.Encoding
Microsoft.CodeAnalysis.CommandLineArguments.Errors.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>
Microsoft.CodeAnalysis.CommandLineArguments.KeyFileSearchPaths.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.CommandLineArguments.ManifestResources.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ResourceDescription>
Microsoft.CodeAnalysis.CommandLineArguments.MetadataReferences.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CommandLineReference>
Microsoft.CodeAnalysis.CommandLineArguments.NoWin32Manifest.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.OutputDirectory.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.OutputFileName.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.ParseOptions.get -> Microsoft.CodeAnalysis.ParseOptions
Microsoft.CodeAnalysis.CommandLineArguments.PdbPath.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.PreferredUILang.get -> System.Globalization.CultureInfo
Microsoft.CodeAnalysis.CommandLineArguments.PrintFullPaths.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.ReferencePaths.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.CommandLineArguments.ResolveAnalyzerReferences() -> System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference>
Microsoft.CodeAnalysis.CommandLineArguments.ResolveMetadataReferences(Microsoft.CodeAnalysis.MetadataReferenceResolver metadataResolver) -> System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>
Microsoft.CodeAnalysis.CommandLineArguments.ScriptArguments.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.CommandLineArguments.SourceFiles.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CommandLineSourceFile>
Microsoft.CodeAnalysis.CommandLineArguments.TouchedFilesPath.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.Utf8Output.get -> bool
Microsoft.CodeAnalysis.CommandLineArguments.Win32Icon.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.Win32Manifest.get -> string
Microsoft.CodeAnalysis.CommandLineArguments.Win32ResourceFile.get -> string
Microsoft.CodeAnalysis.CommandLineParser
Microsoft.CodeAnalysis.CommandLineParser.IsInteractive.get -> bool
Microsoft.CodeAnalysis.CommandLineParser.Parse(System.Collections.Generic.IEnumerable<string> args, string baseDirectory, string additionalReferencePaths) -> Microsoft.CodeAnalysis.CommandLineArguments
Microsoft.CodeAnalysis.CommandLineReference
Microsoft.CodeAnalysis.CommandLineReference.Equals(Microsoft.CodeAnalysis.CommandLineReference other) -> bool
Microsoft.CodeAnalysis.CommandLineReference.Properties.get -> Microsoft.CodeAnalysis.MetadataReferenceProperties
Microsoft.CodeAnalysis.CommandLineReference.Reference.get -> string
Microsoft.CodeAnalysis.CommandLineSourceFile
Microsoft.CodeAnalysis.CommandLineSourceFile.IsScript.get -> bool
Microsoft.CodeAnalysis.CommandLineSourceFile.Path.get -> string
Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer
Microsoft.CodeAnalysis.DesktopStrongNameProvider
Microsoft.CodeAnalysis.DesktopStrongNameProvider.DesktopStrongNameProvider(System.Collections.Immutable.ImmutableArray<string> keyFileSearchPaths = default(System.Collections.Immutable.ImmutableArray<string>)) -> void
Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference
Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.AnalyzerFileReference(string fullPath, System.Func<string, System.Reflection.Assembly> getAssembly = null) -> void
Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.AnalyzerLoadFailed -> System.EventHandler<Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs>
Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference other) -> bool
Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAssembly() -> System.Reflection.Assembly
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.AnalyzerLoadFailureEventArgs(Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode errorCode, System.Exception ex, string typeName) -> void
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.NoAnalyzers = 3 -> Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.None = 0 -> Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToCreateAnalyzer = 2 -> Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToLoadAnalyzer = 1 -> Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
Microsoft.CodeAnalysis.FileSystemExtensions
Microsoft.CodeAnalysis.RuleSet
Microsoft.CodeAnalysis.RuleSet.FilePath.get -> string
Microsoft.CodeAnalysis.RuleSet.GeneralDiagnosticOption.get -> Microsoft.CodeAnalysis.ReportDiagnostic
Microsoft.CodeAnalysis.RuleSet.Includes.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RuleSetInclude>
Microsoft.CodeAnalysis.RuleSet.RuleSet(string filePath, Microsoft.CodeAnalysis.ReportDiagnostic generalOption, System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.ReportDiagnostic> specificOptions, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.RuleSetInclude> includes) -> void
Microsoft.CodeAnalysis.RuleSet.SpecificDiagnosticOptions.get -> System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.ReportDiagnostic>
Microsoft.CodeAnalysis.RuleSet.WithEffectiveAction(Microsoft.CodeAnalysis.ReportDiagnostic action) -> Microsoft.CodeAnalysis.RuleSet
Microsoft.CodeAnalysis.RuleSetInclude
Microsoft.CodeAnalysis.RuleSetInclude.Action.get -> Microsoft.CodeAnalysis.ReportDiagnostic
Microsoft.CodeAnalysis.RuleSetInclude.IncludePath.get -> string
Microsoft.CodeAnalysis.RuleSetInclude.LoadRuleSet(Microsoft.CodeAnalysis.RuleSet parent) -> Microsoft.CodeAnalysis.RuleSet
Microsoft.CodeAnalysis.RuleSetInclude.RuleSetInclude(string includePath, Microsoft.CodeAnalysis.ReportDiagnostic action) -> void
Microsoft.CodeAnalysis.SerializableCompilationOptions
Microsoft.CodeAnalysis.SerializableCompilationOptions.Options.get -> Microsoft.CodeAnalysis.CompilationOptions
Microsoft.CodeAnalysis.SerializableParseOptions
Microsoft.CodeAnalysis.SerializableParseOptions.Options.get -> Microsoft.CodeAnalysis.ParseOptions
Microsoft.CodeAnalysis.SourceFileResolver
Microsoft.CodeAnalysis.SourceFileResolver.BaseDirectory.get -> string
Microsoft.CodeAnalysis.SourceFileResolver.SearchPaths.get -> System.Collections.Immutable.ImmutableArray<string>
Microsoft.CodeAnalysis.SourceFileResolver.SourceFileResolver(System.Collections.Generic.IEnumerable<string> searchPaths, string baseDirectory) -> void
Microsoft.CodeAnalysis.SourceFileResolver.SourceFileResolver(System.Collections.Immutable.ImmutableArray<string> searchPaths, string baseDirectory) -> void
Microsoft.CodeAnalysis.XmlFileResolver
Microsoft.CodeAnalysis.XmlFileResolver.BaseDirectory.get -> string
Microsoft.CodeAnalysis.XmlFileResolver.XmlFileResolver(string baseDirectory) -> void
abstract Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptionsCore.get -> Microsoft.CodeAnalysis.CompilationOptions
abstract Microsoft.CodeAnalysis.CommandLineArguments.ParseOptionsCore.get -> Microsoft.CodeAnalysis.ParseOptions
abstract Microsoft.CodeAnalysis.CommandLineParser.RegularFileExtension.get -> string
abstract Microsoft.CodeAnalysis.CommandLineParser.ScriptFileExtension.get -> string
abstract Microsoft.CodeAnalysis.SerializableCompilationOptions.CommonOptions.get -> Microsoft.CodeAnalysis.CompilationOptions
abstract Microsoft.CodeAnalysis.SerializableCompilationOptions.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
abstract Microsoft.CodeAnalysis.SerializableParseOptions.CommonOptions.get -> Microsoft.CodeAnalysis.ParseOptions
abstract Microsoft.CodeAnalysis.SerializableParseOptions.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
override Microsoft.CodeAnalysis.CommandLineAnalyzerReference.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.CommandLineAnalyzerReference.GetHashCode() -> int
override Microsoft.CodeAnalysis.CommandLineReference.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.CommandLineReference.GetHashCode() -> int
override Microsoft.CodeAnalysis.DesktopStrongNameProvider.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.DesktopStrongNameProvider.GetHashCode() -> int
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Display.get -> string
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.FullPath.get -> string
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzers(string language) -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzersForAllLanguages() -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetHashCode() -> int
override Microsoft.CodeAnalysis.SourceFileResolver.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.SourceFileResolver.GetHashCode() -> int
override Microsoft.CodeAnalysis.SourceFileResolver.NormalizePath(string path, string baseFilePath) -> string
override Microsoft.CodeAnalysis.SourceFileResolver.OpenRead(string resolvedPath) -> System.IO.Stream
override Microsoft.CodeAnalysis.SourceFileResolver.ResolveReference(string path, string baseFilePath) -> string
override Microsoft.CodeAnalysis.XmlFileResolver.Equals(object obj) -> bool
override Microsoft.CodeAnalysis.XmlFileResolver.GetHashCode() -> int
override Microsoft.CodeAnalysis.XmlFileResolver.OpenRead(string resolvedPath) -> System.IO.Stream
override Microsoft.CodeAnalysis.XmlFileResolver.ResolveReference(string path, string baseFilePath) -> string
readonly Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.ErrorCode -> Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode
readonly Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.Exception -> System.Exception
readonly Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.TypeName -> string
static Microsoft.CodeAnalysis.AssemblyIdentityExtensions.ToAssemblyName(this Microsoft.CodeAnalysis.AssemblyIdentity identity) -> System.Reflection.AssemblyName
static Microsoft.CodeAnalysis.CommandLineParser.SplitCommandLineIntoArguments(string commandLine, bool removeHashComments) -> System.Collections.Generic.IEnumerable<string>
static Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer.LoadFromXml(System.IO.Stream input) -> Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer
static Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.AssemblyLoad -> System.EventHandler<Microsoft.CodeAnalysis.AnalyzerAssemblyLoadEventArgs>
static Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.TryGetRequestingAssemblyPath(string assemblyPath) -> string
static Microsoft.CodeAnalysis.FileSystemExtensions.Emit(this Microsoft.CodeAnalysis.Compilation compilation, string outputPath, string pdbPath = null, string xmlDocPath = null, string win32ResourcesPath = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> Microsoft.CodeAnalysis.Emit.EmitResult
static Microsoft.CodeAnalysis.RuleSet.GetDiagnosticOptionsFromRulesetFile(string rulesetFileFullPath, out System.Collections.Generic.Dictionary<string, Microsoft.CodeAnalysis.ReportDiagnostic> specificDiagnosticOptions) -> Microsoft.CodeAnalysis.ReportDiagnostic
static Microsoft.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile(string filePath) -> System.Collections.Immutable.ImmutableArray<string>
static Microsoft.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile(string filePath) -> Microsoft.CodeAnalysis.RuleSet
static Microsoft.CodeAnalysis.SerializableCompilationOptions.CommonGetObjectData(Microsoft.CodeAnalysis.CompilationOptions options, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
static Microsoft.CodeAnalysis.SerializableParseOptions.CommonGetObjectData(Microsoft.CodeAnalysis.ParseOptions options, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
static readonly Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer.Default -> Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer
static readonly Microsoft.CodeAnalysis.SourceFileResolver.Default -> Microsoft.CodeAnalysis.SourceFileResolver
static readonly Microsoft.CodeAnalysis.XmlFileResolver.Default -> Microsoft.CodeAnalysis.XmlFileResolver
virtual Microsoft.CodeAnalysis.SourceFileResolver.FileExists(string resolvedPath) -> bool
virtual Microsoft.CodeAnalysis.XmlFileResolver.FileExists(string resolvedPath) -> bool
