Microsoft.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.AdditionalFileAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.AddOutputFile(string hintName, Microsoft.CodeAnalysis.Text.SourceText sourceText) -> void
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.AddOutputFile(string hintName, string source) -> void
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CanAddOutputFile.get -> bool
Microsoft.CodeAnalysis.ITypeSymbol.IsRecord.get -> bool
Microsoft.CodeAnalysis.SymbolDisplayPartKind.RecordName = 31 -> Microsoft.CodeAnalysis.SymbolDisplayPartKind
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.CompilationEnd = "CompilationEnd" -> string
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.Compare(System.ReadOnlySpan<char> left, System.ReadOnlySpan<char> right) -> int
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.Equals(System.ReadOnlySpan<char> left, System.ReadOnlySpan<char> right) -> bool
