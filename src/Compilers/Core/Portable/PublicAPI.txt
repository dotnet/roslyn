Microsoft.CodeAnalysis.Accessibility
Microsoft.CodeAnalysis.Accessibility.Friend = 4
Microsoft.CodeAnalysis.Accessibility.Internal = 4
Microsoft.CodeAnalysis.Accessibility.NotApplicable = 0
Microsoft.CodeAnalysis.Accessibility.Private = 1
Microsoft.CodeAnalysis.Accessibility.Protected = 3
Microsoft.CodeAnalysis.Accessibility.ProtectedAndFriend = 2
Microsoft.CodeAnalysis.Accessibility.ProtectedAndInternal = 2
Microsoft.CodeAnalysis.Accessibility.ProtectedOrFriend = 5
Microsoft.CodeAnalysis.Accessibility.ProtectedOrInternal = 5
Microsoft.CodeAnalysis.Accessibility.Public = 6
Microsoft.CodeAnalysis.AdditionalText
Microsoft.CodeAnalysis.AnnotationExtensions
Microsoft.CodeAnalysis.AssemblyIdentity
Microsoft.CodeAnalysis.AssemblyIdentity.AssemblyIdentity(string name, System.Version version = null, string cultureName = null, System.Collections.Immutable.ImmutableArray<byte> publicKeyOrToken = default(System.Collections.Immutable.ImmutableArray<byte>), bool hasPublicKey = false, bool isRetargetable = false, System.Reflection.AssemblyContentType contentType = System.Reflection.AssemblyContentType.Default)
Microsoft.CodeAnalysis.AssemblyIdentity.ContentType.get
Microsoft.CodeAnalysis.AssemblyIdentity.CultureName.get
Microsoft.CodeAnalysis.AssemblyIdentity.Equals(Microsoft.CodeAnalysis.AssemblyIdentity obj)
Microsoft.CodeAnalysis.AssemblyIdentity.Flags.get
Microsoft.CodeAnalysis.AssemblyIdentity.GetDisplayName(bool fullKey = false)
Microsoft.CodeAnalysis.AssemblyIdentity.HasPublicKey.get
Microsoft.CodeAnalysis.AssemblyIdentity.IsRetargetable.get
Microsoft.CodeAnalysis.AssemblyIdentity.IsStrongName.get
Microsoft.CodeAnalysis.AssemblyIdentity.Name.get
Microsoft.CodeAnalysis.AssemblyIdentity.PublicKey.get
Microsoft.CodeAnalysis.AssemblyIdentity.PublicKeyToken.get
Microsoft.CodeAnalysis.AssemblyIdentity.Version.get
Microsoft.CodeAnalysis.AssemblyIdentityComparer
Microsoft.CodeAnalysis.AssemblyIdentityComparer.Compare(Microsoft.CodeAnalysis.AssemblyIdentity reference, Microsoft.CodeAnalysis.AssemblyIdentity definition)
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent = 1
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion = 2
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent = 0
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(Microsoft.CodeAnalysis.AssemblyIdentity reference, Microsoft.CodeAnalysis.AssemblyIdentity definition)
Microsoft.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(string referenceDisplayName, Microsoft.CodeAnalysis.AssemblyIdentity definition)
Microsoft.CodeAnalysis.AssemblyIdentityParts
Microsoft.CodeAnalysis.AssemblyIdentityParts.ContentType = 512
Microsoft.CodeAnalysis.AssemblyIdentityParts.Culture = 32
Microsoft.CodeAnalysis.AssemblyIdentityParts.Name = 1
Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKey = 64
Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKeyOrToken = Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKey | Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKeyToken
Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKeyToken = 128
Microsoft.CodeAnalysis.AssemblyIdentityParts.Retargetability = 256
Microsoft.CodeAnalysis.AssemblyIdentityParts.Unknown = 1024
Microsoft.CodeAnalysis.AssemblyIdentityParts.Version = Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMajor | Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMinor | Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionBuild | Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionRevision
Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionBuild = 8
Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMajor = 2
Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMinor = 4
Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionRevision = 16
Microsoft.CodeAnalysis.AssemblyMetadata
Microsoft.CodeAnalysis.AssemblyMetadata.GetModules()
Microsoft.CodeAnalysis.AssemblyMetadata.GetReference(Microsoft.CodeAnalysis.DocumentationProvider documentation = null, System.Collections.Immutable.ImmutableArray<string> aliases = default(System.Collections.Immutable.ImmutableArray<string>), bool embedInteropTypes = false, string filePath = null, string display = null)
Microsoft.CodeAnalysis.AttributeData
Microsoft.CodeAnalysis.AttributeData.ApplicationSyntaxReference.get
Microsoft.CodeAnalysis.AttributeData.AttributeClass.get
Microsoft.CodeAnalysis.AttributeData.AttributeConstructor.get
Microsoft.CodeAnalysis.AttributeData.AttributeData()
Microsoft.CodeAnalysis.AttributeData.ConstructorArguments.get
Microsoft.CodeAnalysis.AttributeData.NamedArguments.get
Microsoft.CodeAnalysis.CandidateReason
Microsoft.CodeAnalysis.CandidateReason.Ambiguous = 15
Microsoft.CodeAnalysis.CandidateReason.Inaccessible = 8
Microsoft.CodeAnalysis.CandidateReason.LateBound = 14
Microsoft.CodeAnalysis.CandidateReason.MemberGroup = 16
Microsoft.CodeAnalysis.CandidateReason.None = 0
Microsoft.CodeAnalysis.CandidateReason.NotATypeOrNamespace = 1
Microsoft.CodeAnalysis.CandidateReason.NotAValue = 9
Microsoft.CodeAnalysis.CandidateReason.NotAVariable = 10
Microsoft.CodeAnalysis.CandidateReason.NotAWithEventsMember = 3
Microsoft.CodeAnalysis.CandidateReason.NotAnAttributeType = 4
Microsoft.CodeAnalysis.CandidateReason.NotAnEvent = 2
Microsoft.CodeAnalysis.CandidateReason.NotCreatable = 6
Microsoft.CodeAnalysis.CandidateReason.NotInvocable = 11
Microsoft.CodeAnalysis.CandidateReason.NotReferencable = 7
Microsoft.CodeAnalysis.CandidateReason.OverloadResolutionFailure = 13
Microsoft.CodeAnalysis.CandidateReason.StaticInstanceMismatch = 12
Microsoft.CodeAnalysis.CandidateReason.WrongArity = 5
Microsoft.CodeAnalysis.CaseInsensitiveComparison
Microsoft.CodeAnalysis.ChildSyntaxList
Microsoft.CodeAnalysis.ChildSyntaxList.Any()
Microsoft.CodeAnalysis.ChildSyntaxList.Count.get
Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator
Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Current.get
Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.MoveNext()
Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Reset()
Microsoft.CodeAnalysis.ChildSyntaxList.Equals(Microsoft.CodeAnalysis.ChildSyntaxList other)
Microsoft.CodeAnalysis.ChildSyntaxList.First()
Microsoft.CodeAnalysis.ChildSyntaxList.GetEnumerator()
Microsoft.CodeAnalysis.ChildSyntaxList.Last()
Microsoft.CodeAnalysis.ChildSyntaxList.Reverse()
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Current.get
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.MoveNext()
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Reset()
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Equals(Microsoft.CodeAnalysis.ChildSyntaxList.Reversed other)
Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.GetEnumerator()
Microsoft.CodeAnalysis.ChildSyntaxList.this[int index].get
Microsoft.CodeAnalysis.Compilation
Microsoft.CodeAnalysis.Compilation.AddReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references)
Microsoft.CodeAnalysis.Compilation.AddReferences(params Microsoft.CodeAnalysis.MetadataReference[] references)
Microsoft.CodeAnalysis.Compilation.AddSyntaxTrees(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree> trees)
Microsoft.CodeAnalysis.Compilation.AddSyntaxTrees(params Microsoft.CodeAnalysis.SyntaxTree[] trees)
Microsoft.CodeAnalysis.Compilation.Assembly.get
Microsoft.CodeAnalysis.Compilation.AssemblyName.get
Microsoft.CodeAnalysis.Compilation.Clone()
Microsoft.CodeAnalysis.Compilation.ContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree syntaxTree)
Microsoft.CodeAnalysis.Compilation.CreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol elementType, int rank = 1)
Microsoft.CodeAnalysis.Compilation.CreateDefaultWin32Resources(bool versionResource, bool noManifest, System.IO.Stream manifestContents, System.IO.Stream iconInIcoFormat)
Microsoft.CodeAnalysis.Compilation.CreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol pointedAtType)
Microsoft.CodeAnalysis.Compilation.DynamicType.get
Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream = null, System.IO.Stream xmlDocumentationStream = null, System.IO.Stream win32Resources = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources = null, Microsoft.CodeAnalysis.Emit.EmitOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.Compilation.EmitDifference(Microsoft.CodeAnalysis.Emit.EmitBaseline baseline, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Emit.SemanticEdit> edits, System.Func<Microsoft.CodeAnalysis.ISymbol, bool> isAddedSymbol, System.IO.Stream metadataStream, System.IO.Stream ilStream, System.IO.Stream pdbStream, System.Collections.Generic.ICollection<System.Reflection.Metadata.MethodDefinitionHandle> updatedMethods, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.Compilation.EmitDifference(Microsoft.CodeAnalysis.Emit.EmitBaseline baseline, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Emit.SemanticEdit> edits, System.IO.Stream metadataStream, System.IO.Stream ilStream, System.IO.Stream pdbStream, System.Collections.Generic.ICollection<System.Reflection.Metadata.MethodDefinitionHandle> updatedMethods, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.Compilation.ExternalReferences.get
Microsoft.CodeAnalysis.Compilation.GetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference reference)
Microsoft.CodeAnalysis.Compilation.GetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol namespaceSymbol)
Microsoft.CodeAnalysis.Compilation.GetEntryPoint(System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Compilation.GetMetadataReference(Microsoft.CodeAnalysis.IAssemblySymbol assemblySymbol)
Microsoft.CodeAnalysis.Compilation.GetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree syntaxTree, bool ignoreAccessibility = false)
Microsoft.CodeAnalysis.Compilation.GetSpecialType(Microsoft.CodeAnalysis.SpecialType specialType)
Microsoft.CodeAnalysis.Compilation.GetSubmissionResultType(out bool hasValue)
Microsoft.CodeAnalysis.Compilation.GetTypeByMetadataName(string fullyQualifiedMetadataName)
Microsoft.CodeAnalysis.Compilation.GlobalNamespace.get
Microsoft.CodeAnalysis.Compilation.ObjectType.get
Microsoft.CodeAnalysis.Compilation.Options.get
Microsoft.CodeAnalysis.Compilation.PreviousSubmission.get
Microsoft.CodeAnalysis.Compilation.References.get
Microsoft.CodeAnalysis.Compilation.RemoveAllReferences()
Microsoft.CodeAnalysis.Compilation.RemoveAllSyntaxTrees()
Microsoft.CodeAnalysis.Compilation.RemoveReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> references)
Microsoft.CodeAnalysis.Compilation.RemoveReferences(params Microsoft.CodeAnalysis.MetadataReference[] references)
Microsoft.CodeAnalysis.Compilation.RemoveSyntaxTrees(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree> trees)
Microsoft.CodeAnalysis.Compilation.RemoveSyntaxTrees(params Microsoft.CodeAnalysis.SyntaxTree[] trees)
Microsoft.CodeAnalysis.Compilation.ReplaceReference(Microsoft.CodeAnalysis.MetadataReference oldReference, Microsoft.CodeAnalysis.MetadataReference newReference)
Microsoft.CodeAnalysis.Compilation.ReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree oldTree, Microsoft.CodeAnalysis.SyntaxTree newTree)
Microsoft.CodeAnalysis.Compilation.ScriptClass.get
Microsoft.CodeAnalysis.Compilation.SourceModule.get
Microsoft.CodeAnalysis.Compilation.SyntaxTrees.get
Microsoft.CodeAnalysis.Compilation.WithAssemblyName(string assemblyName)
Microsoft.CodeAnalysis.Compilation.WithOptions(Microsoft.CodeAnalysis.CompilationOptions options)
Microsoft.CodeAnalysis.Compilation.WithPreviousSubmission(Microsoft.CodeAnalysis.Compilation newPreviousSubmission)
Microsoft.CodeAnalysis.Compilation.WithReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> newReferences)
Microsoft.CodeAnalysis.Compilation.WithReferences(params Microsoft.CodeAnalysis.MetadataReference[] newReferences)
Microsoft.CodeAnalysis.CompilationOptions
Microsoft.CodeAnalysis.CompilationOptions.AssemblyIdentityComparer.get
Microsoft.CodeAnalysis.CompilationOptions.AssemblyIdentityComparer.set
Microsoft.CodeAnalysis.CompilationOptions.CheckOverflow.get
Microsoft.CodeAnalysis.CompilationOptions.CheckOverflow.set
Microsoft.CodeAnalysis.CompilationOptions.ConcurrentBuild.get
Microsoft.CodeAnalysis.CompilationOptions.ConcurrentBuild.set
Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyContainer.get
Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyContainer.set
Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyFile.get
Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyFile.set
Microsoft.CodeAnalysis.CompilationOptions.CryptoPublicKey.get
Microsoft.CodeAnalysis.CompilationOptions.CryptoPublicKey.set
Microsoft.CodeAnalysis.CompilationOptions.DelaySign.get
Microsoft.CodeAnalysis.CompilationOptions.DelaySign.set
Microsoft.CodeAnalysis.CompilationOptions.EqualsHelper(Microsoft.CodeAnalysis.CompilationOptions other)
Microsoft.CodeAnalysis.CompilationOptions.Errors.get
Microsoft.CodeAnalysis.CompilationOptions.Features.get
Microsoft.CodeAnalysis.CompilationOptions.Features.set
Microsoft.CodeAnalysis.CompilationOptions.GeneralDiagnosticOption.get
Microsoft.CodeAnalysis.CompilationOptions.GeneralDiagnosticOption.set
Microsoft.CodeAnalysis.CompilationOptions.GetHashCodeHelper()
Microsoft.CodeAnalysis.CompilationOptions.MainTypeName.get
Microsoft.CodeAnalysis.CompilationOptions.MainTypeName.set
Microsoft.CodeAnalysis.CompilationOptions.MetadataReferenceResolver.get
Microsoft.CodeAnalysis.CompilationOptions.MetadataReferenceResolver.set
Microsoft.CodeAnalysis.CompilationOptions.ModuleName.get
Microsoft.CodeAnalysis.CompilationOptions.ModuleName.set
Microsoft.CodeAnalysis.CompilationOptions.OptimizationLevel.get
Microsoft.CodeAnalysis.CompilationOptions.OptimizationLevel.set
Microsoft.CodeAnalysis.CompilationOptions.OutputKind.get
Microsoft.CodeAnalysis.CompilationOptions.OutputKind.set
Microsoft.CodeAnalysis.CompilationOptions.Platform.get
Microsoft.CodeAnalysis.CompilationOptions.Platform.set
Microsoft.CodeAnalysis.CompilationOptions.ScriptClassName.get
Microsoft.CodeAnalysis.CompilationOptions.ScriptClassName.set
Microsoft.CodeAnalysis.CompilationOptions.SourceReferenceResolver.get
Microsoft.CodeAnalysis.CompilationOptions.SourceReferenceResolver.set
Microsoft.CodeAnalysis.CompilationOptions.SpecificDiagnosticOptions.get
Microsoft.CodeAnalysis.CompilationOptions.SpecificDiagnosticOptions.set
Microsoft.CodeAnalysis.CompilationOptions.StrongNameProvider.get
Microsoft.CodeAnalysis.CompilationOptions.StrongNameProvider.set
Microsoft.CodeAnalysis.CompilationOptions.WarningLevel.get
Microsoft.CodeAnalysis.CompilationOptions.WarningLevel.set
Microsoft.CodeAnalysis.CompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer)
Microsoft.CodeAnalysis.CompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic value)
Microsoft.CodeAnalysis.CompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver resolver)
Microsoft.CodeAnalysis.CompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel value)
Microsoft.CodeAnalysis.CompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind kind)
Microsoft.CodeAnalysis.CompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform platform)
Microsoft.CodeAnalysis.CompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver resolver)
Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.CodeAnalysis.ReportDiagnostic>> value)
Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.ReportDiagnostic> value)
Microsoft.CodeAnalysis.CompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider provider)
Microsoft.CodeAnalysis.CompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver resolver)
Microsoft.CodeAnalysis.CompilationOptions.XmlReferenceResolver.get
Microsoft.CodeAnalysis.CompilationOptions.XmlReferenceResolver.set
Microsoft.CodeAnalysis.CompilationReference
Microsoft.CodeAnalysis.CompilationReference.Compilation.get
Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Generic.IEnumerable<string> aliases)
Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Immutable.ImmutableArray<string> aliases)
Microsoft.CodeAnalysis.CompilationReference.WithEmbedInteropTypes(bool value)
Microsoft.CodeAnalysis.CompilationReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties properties)
Microsoft.CodeAnalysis.ControlFlowAnalysis
Microsoft.CodeAnalysis.CustomModifier
Microsoft.CodeAnalysis.DataFlowAnalysis
Microsoft.CodeAnalysis.Diagnostic
Microsoft.CodeAnalysis.Diagnostic.IsWarningAsError.get
Microsoft.CodeAnalysis.DiagnosticDescriptor
Microsoft.CodeAnalysis.DiagnosticDescriptor.Category.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.CustomTags.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.Description.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(string id, Microsoft.CodeAnalysis.LocalizableString title, Microsoft.CodeAnalysis.LocalizableString messageFormat, string category, Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, Microsoft.CodeAnalysis.LocalizableString description = null, string helpLinkUri = null, params string[] customTags)
Microsoft.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(string id, string title, string messageFormat, string category, Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, string description = null, string helpLinkUri = null, params string[] customTags)
Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(Microsoft.CodeAnalysis.DiagnosticDescriptor other)
Microsoft.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.Id.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.MessageFormat.get
Microsoft.CodeAnalysis.DiagnosticDescriptor.Title.get
Microsoft.CodeAnalysis.DiagnosticFormatter
Microsoft.CodeAnalysis.DiagnosticSeverity
Microsoft.CodeAnalysis.DiagnosticSeverity.Error = 3
Microsoft.CodeAnalysis.DiagnosticSeverity.Hidden = 0
Microsoft.CodeAnalysis.DiagnosticSeverity.Info = 1
Microsoft.CodeAnalysis.DiagnosticSeverity.Warning = 2
Microsoft.CodeAnalysis.Diagnostics.AnalysisContext
Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext> action, params Microsoft.CodeAnalysis.SymbolKind[] symbolKinds)
Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, params TLanguageKindEnum[] syntaxKinds)
Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference
Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.AnalyzerImageReference(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, string fullPath = null, string display = null)
Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.AdditionalFiles.get
Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.AnalyzerOptions(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AdditionalText> additionalFiles)
Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.WithAdditionalFiles(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.AdditionalText> additionalFiles)
Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.AnalyzerReference()
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlock.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlockAnalysisContext(Microsoft.CodeAnalysis.SyntaxNode codeBlock, Microsoft.CodeAnalysis.ISymbol owningSymbol, Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.OwningSymbol.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.SemanticModel.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CodeBlock.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.CodeBlockStartAnalysisContext(Microsoft.CodeAnalysis.SyntaxNode codeBlock, Microsoft.CodeAnalysis.ISymbol owningSymbol, Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.Options.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.OwningSymbol.get
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterSyntaxNodeAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, params TLanguageKindEnum[] syntaxKinds)
Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.SemanticModel.get
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Compilation.get
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CompilationAnalysisContext(Microsoft.CodeAnalysis.Compilation compilation, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Compilation.get
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.CompilationStartAnalysisContext(Microsoft.CodeAnalysis.Compilation compilation, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext> action, params Microsoft.CodeAnalysis.SymbolKind[] symbolKinds)
Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, params TLanguageKindEnum[] syntaxKinds)
Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers
Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Compilation.get
Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.CompilationWithAnalyzers(Microsoft.CodeAnalysis.Compilation compilation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAllDiagnosticsAsync()
Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync()
Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer
Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.DiagnosticAnalyzerAttribute(string firstLanguage, params string[] additionalLanguages)
Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.Languages.get
Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModel.get
Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModelAnalysisContext(Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Compilation.get
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Symbol.get
Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.SymbolAnalysisContext(Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Compilation compilation, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Node.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SemanticModel.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SyntaxNodeAnalysisContext(Microsoft.CodeAnalysis.SyntaxNode node, Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CancellationToken.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Options.get
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic diagnostic)
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.SyntaxTreeAnalysisContext(Microsoft.CodeAnalysis.SyntaxTree tree, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, System.Action<Microsoft.CodeAnalysis.Diagnostic> reportDiagnostic, System.Threading.CancellationToken cancellationToken)
Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Tree.get
Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference
Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.UnresolvedAnalyzerReference(string unresolvedPath)
Microsoft.CodeAnalysis.DllImportData
Microsoft.CodeAnalysis.DllImportData.BestFitMapping.get
Microsoft.CodeAnalysis.DllImportData.CallingConvention.get
Microsoft.CodeAnalysis.DllImportData.CharacterSet.get
Microsoft.CodeAnalysis.DllImportData.EntryPointName.get
Microsoft.CodeAnalysis.DllImportData.ExactSpelling.get
Microsoft.CodeAnalysis.DllImportData.ModuleName.get
Microsoft.CodeAnalysis.DllImportData.SetLastError.get
Microsoft.CodeAnalysis.DllImportData.ThrowOnUnmappableCharacter.get
Microsoft.CodeAnalysis.DocumentationMode
Microsoft.CodeAnalysis.DocumentationMode.Diagnose = 2
Microsoft.CodeAnalysis.DocumentationMode.None = 0
Microsoft.CodeAnalysis.DocumentationMode.Parse = 1
Microsoft.CodeAnalysis.DocumentationProvider
Microsoft.CodeAnalysis.DocumentationProvider.DocumentationProvider()
Microsoft.CodeAnalysis.Emit.DebugInformationFormat
Microsoft.CodeAnalysis.Emit.DebugInformationFormat.Pdb = 1
Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation
Microsoft.CodeAnalysis.Emit.EmitBaseline
Microsoft.CodeAnalysis.Emit.EmitDifferenceResult
Microsoft.CodeAnalysis.Emit.EmitDifferenceResult.Baseline.get
Microsoft.CodeAnalysis.Emit.EmitOptions
Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress.get
Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat.get
Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly.get
Microsoft.CodeAnalysis.Emit.EmitOptions.EmitOptions(bool metadataOnly = false, Microsoft.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat = (Microsoft.CodeAnalysis.Emit.DebugInformationFormat)0, string pdbFilePath = null, string outputNameOverride = null, int fileAlignment = 0, ulong baseAddress = 0, bool highEntropyVirtualAddressSpace = false, Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion = default(Microsoft.CodeAnalysis.SubsystemVersion), string runtimeMetadataVersion = null, bool tolerateErrors = false, bool includePrivateMembers = false)
Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions other)
Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment.get
Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace.get
Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers.get
Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride.get
Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath.get
Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion.get
Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion.get
Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors.get
Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(ulong value)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat format)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(bool value)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(int value)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(bool value)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(bool value)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(string outputName)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(string path)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(string version)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion)
Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(bool value)
Microsoft.CodeAnalysis.Emit.EmitResult
Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics.get
Microsoft.CodeAnalysis.Emit.EmitResult.Success.get
Microsoft.CodeAnalysis.Emit.SemanticEdit
Microsoft.CodeAnalysis.Emit.SemanticEdit.Equals(Microsoft.CodeAnalysis.Emit.SemanticEdit other)
Microsoft.CodeAnalysis.Emit.SemanticEdit.SemanticEdit(Microsoft.CodeAnalysis.Emit.SemanticEditKind kind, Microsoft.CodeAnalysis.ISymbol oldSymbol, Microsoft.CodeAnalysis.ISymbol newSymbol, System.Func<Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode> syntaxMap = null, bool preserveLocalVariables = false)
Microsoft.CodeAnalysis.Emit.SemanticEditKind
Microsoft.CodeAnalysis.Emit.SemanticEditKind.Delete = 3
Microsoft.CodeAnalysis.Emit.SemanticEditKind.Insert = 2
Microsoft.CodeAnalysis.Emit.SemanticEditKind.None = 0
Microsoft.CodeAnalysis.Emit.SemanticEditKind.Update = 1
Microsoft.CodeAnalysis.FileLinePositionSpan
Microsoft.CodeAnalysis.FileLinePositionSpan.EndLinePosition.get
Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(Microsoft.CodeAnalysis.FileLinePositionSpan other)
Microsoft.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(string path, Microsoft.CodeAnalysis.Text.LinePosition start, Microsoft.CodeAnalysis.Text.LinePosition end)
Microsoft.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(string path, Microsoft.CodeAnalysis.Text.LinePositionSpan span)
Microsoft.CodeAnalysis.FileLinePositionSpan.HasMappedPath.get
Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid.get
Microsoft.CodeAnalysis.FileLinePositionSpan.Path.get
Microsoft.CodeAnalysis.FileLinePositionSpan.Span.get
Microsoft.CodeAnalysis.FileLinePositionSpan.StartLinePosition.get
Microsoft.CodeAnalysis.IAliasSymbol
Microsoft.CodeAnalysis.IAliasSymbol.Target.get
Microsoft.CodeAnalysis.IArrayTypeSymbol
Microsoft.CodeAnalysis.IArrayTypeSymbol.CustomModifiers.get
Microsoft.CodeAnalysis.IArrayTypeSymbol.ElementType.get
Microsoft.CodeAnalysis.IArrayTypeSymbol.Equals(Microsoft.CodeAnalysis.IArrayTypeSymbol other)
Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank.get
Microsoft.CodeAnalysis.IAssemblySymbol
Microsoft.CodeAnalysis.IAssemblySymbol.GetTypeByMetadataName(string fullyQualifiedMetadataName)
Microsoft.CodeAnalysis.IAssemblySymbol.GivesAccessTo(Microsoft.CodeAnalysis.IAssemblySymbol toAssembly)
Microsoft.CodeAnalysis.IAssemblySymbol.GlobalNamespace.get
Microsoft.CodeAnalysis.IAssemblySymbol.Identity.get
Microsoft.CodeAnalysis.IAssemblySymbol.IsInteractive.get
Microsoft.CodeAnalysis.IAssemblySymbol.MightContainExtensionMethods.get
Microsoft.CodeAnalysis.IAssemblySymbol.Modules.get
Microsoft.CodeAnalysis.IAssemblySymbol.NamespaceNames.get
Microsoft.CodeAnalysis.IAssemblySymbol.ResolveForwardedType(string fullyQualifiedMetadataName)
Microsoft.CodeAnalysis.IAssemblySymbol.TypeNames.get
Microsoft.CodeAnalysis.IDynamicTypeSymbol
Microsoft.CodeAnalysis.IErrorTypeSymbol
Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateReason.get
Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateSymbols.get
Microsoft.CodeAnalysis.IEventSymbol
Microsoft.CodeAnalysis.IEventSymbol.AddMethod.get
Microsoft.CodeAnalysis.IEventSymbol.ExplicitInterfaceImplementations.get
Microsoft.CodeAnalysis.IEventSymbol.IsWindowsRuntimeEvent.get
Microsoft.CodeAnalysis.IEventSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.IEventSymbol.OverriddenEvent.get
Microsoft.CodeAnalysis.IEventSymbol.RaiseMethod.get
Microsoft.CodeAnalysis.IEventSymbol.RemoveMethod.get
Microsoft.CodeAnalysis.IEventSymbol.Type.get
Microsoft.CodeAnalysis.IFieldSymbol
Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol.get
Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue.get
Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers.get
Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue.get
Microsoft.CodeAnalysis.IFieldSymbol.IsConst.get
Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly.get
Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile.get
Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.IFieldSymbol.Type.get
Microsoft.CodeAnalysis.ILabelSymbol
Microsoft.CodeAnalysis.ILabelSymbol.ContainingMethod.get
Microsoft.CodeAnalysis.ILocalSymbol
Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue.get
Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue.get
Microsoft.CodeAnalysis.ILocalSymbol.IsConst.get
Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue.get
Microsoft.CodeAnalysis.ILocalSymbol.Type.get
Microsoft.CodeAnalysis.IMethodSymbol
Microsoft.CodeAnalysis.IMethodSymbol.Arity.get
Microsoft.CodeAnalysis.IMethodSymbol.AssociatedAnonymousDelegate.get
Microsoft.CodeAnalysis.IMethodSymbol.AssociatedSymbol.get
Microsoft.CodeAnalysis.IMethodSymbol.Construct(params Microsoft.CodeAnalysis.ITypeSymbol[] typeArguments)
Microsoft.CodeAnalysis.IMethodSymbol.ConstructedFrom.get
Microsoft.CodeAnalysis.IMethodSymbol.ExplicitInterfaceImplementations.get
Microsoft.CodeAnalysis.IMethodSymbol.GetDllImportData()
Microsoft.CodeAnalysis.IMethodSymbol.GetReturnTypeAttributes()
Microsoft.CodeAnalysis.IMethodSymbol.GetTypeInferredDuringReduction(Microsoft.CodeAnalysis.ITypeParameterSymbol reducedFromTypeParameter)
Microsoft.CodeAnalysis.IMethodSymbol.HidesBaseMethodsByName.get
Microsoft.CodeAnalysis.IMethodSymbol.IsAsync.get
Microsoft.CodeAnalysis.IMethodSymbol.IsCheckedBuiltin.get
Microsoft.CodeAnalysis.IMethodSymbol.IsExtensionMethod.get
Microsoft.CodeAnalysis.IMethodSymbol.IsGenericMethod.get
Microsoft.CodeAnalysis.IMethodSymbol.IsVararg.get
Microsoft.CodeAnalysis.IMethodSymbol.MethodKind.get
Microsoft.CodeAnalysis.IMethodSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.IMethodSymbol.OverriddenMethod.get
Microsoft.CodeAnalysis.IMethodSymbol.Parameters.get
Microsoft.CodeAnalysis.IMethodSymbol.PartialDefinitionPart.get
Microsoft.CodeAnalysis.IMethodSymbol.PartialImplementationPart.get
Microsoft.CodeAnalysis.IMethodSymbol.ReceiverType.get
Microsoft.CodeAnalysis.IMethodSymbol.ReduceExtensionMethod(Microsoft.CodeAnalysis.ITypeSymbol receiverType)
Microsoft.CodeAnalysis.IMethodSymbol.ReducedFrom.get
Microsoft.CodeAnalysis.IMethodSymbol.ReturnType.get
Microsoft.CodeAnalysis.IMethodSymbol.ReturnTypeCustomModifiers.get
Microsoft.CodeAnalysis.IMethodSymbol.ReturnsVoid.get
Microsoft.CodeAnalysis.IMethodSymbol.TypeArguments.get
Microsoft.CodeAnalysis.IMethodSymbol.TypeParameters.get
Microsoft.CodeAnalysis.IModuleSymbol
Microsoft.CodeAnalysis.IModuleSymbol.GetModuleNamespace(Microsoft.CodeAnalysis.INamespaceSymbol namespaceSymbol)
Microsoft.CodeAnalysis.IModuleSymbol.GlobalNamespace.get
Microsoft.CodeAnalysis.IModuleSymbol.ReferencedAssemblies.get
Microsoft.CodeAnalysis.IModuleSymbol.ReferencedAssemblySymbols.get
Microsoft.CodeAnalysis.INamedTypeSymbol
Microsoft.CodeAnalysis.INamedTypeSymbol.Arity.get
Microsoft.CodeAnalysis.INamedTypeSymbol.AssociatedSymbol.get
Microsoft.CodeAnalysis.INamedTypeSymbol.Construct(params Microsoft.CodeAnalysis.ITypeSymbol[] typeArguments)
Microsoft.CodeAnalysis.INamedTypeSymbol.ConstructUnboundGenericType()
Microsoft.CodeAnalysis.INamedTypeSymbol.ConstructedFrom.get
Microsoft.CodeAnalysis.INamedTypeSymbol.Constructors.get
Microsoft.CodeAnalysis.INamedTypeSymbol.DelegateInvokeMethod.get
Microsoft.CodeAnalysis.INamedTypeSymbol.EnumUnderlyingType.get
Microsoft.CodeAnalysis.INamedTypeSymbol.InstanceConstructors.get
Microsoft.CodeAnalysis.INamedTypeSymbol.IsGenericType.get
Microsoft.CodeAnalysis.INamedTypeSymbol.IsImplicitClass.get
Microsoft.CodeAnalysis.INamedTypeSymbol.IsScriptClass.get
Microsoft.CodeAnalysis.INamedTypeSymbol.IsUnboundGenericType.get
Microsoft.CodeAnalysis.INamedTypeSymbol.MemberNames.get
Microsoft.CodeAnalysis.INamedTypeSymbol.MightContainExtensionMethods.get
Microsoft.CodeAnalysis.INamedTypeSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.INamedTypeSymbol.StaticConstructors.get
Microsoft.CodeAnalysis.INamedTypeSymbol.TypeArguments.get
Microsoft.CodeAnalysis.INamedTypeSymbol.TypeParameters.get
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers()
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(string name)
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers()
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(string name)
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(string name, int arity)
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsNamespace.get
Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsType.get
Microsoft.CodeAnalysis.INamespaceSymbol
Microsoft.CodeAnalysis.INamespaceSymbol.ConstituentNamespaces.get
Microsoft.CodeAnalysis.INamespaceSymbol.ContainingCompilation.get
Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers()
Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers(string name)
Microsoft.CodeAnalysis.INamespaceSymbol.GetNamespaceMembers()
Microsoft.CodeAnalysis.INamespaceSymbol.IsGlobalNamespace.get
Microsoft.CodeAnalysis.INamespaceSymbol.NamespaceKind.get
Microsoft.CodeAnalysis.IParameterSymbol
Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers.get
Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue.get
Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue.get
Microsoft.CodeAnalysis.IParameterSymbol.IsOptional.get
Microsoft.CodeAnalysis.IParameterSymbol.IsParams.get
Microsoft.CodeAnalysis.IParameterSymbol.IsThis.get
Microsoft.CodeAnalysis.IParameterSymbol.Ordinal.get
Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.IParameterSymbol.RefKind.get
Microsoft.CodeAnalysis.IParameterSymbol.Type.get
Microsoft.CodeAnalysis.IPointerTypeSymbol
Microsoft.CodeAnalysis.IPointerTypeSymbol.CustomModifiers.get
Microsoft.CodeAnalysis.IPointerTypeSymbol.PointedAtType.get
Microsoft.CodeAnalysis.IPreprocessingSymbol
Microsoft.CodeAnalysis.IPropertySymbol
Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations.get
Microsoft.CodeAnalysis.IPropertySymbol.GetMethod.get
Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer.get
Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly.get
Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents.get
Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly.get
Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty.get
Microsoft.CodeAnalysis.IPropertySymbol.Parameters.get
Microsoft.CodeAnalysis.IPropertySymbol.SetMethod.get
Microsoft.CodeAnalysis.IPropertySymbol.Type.get
Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers.get
Microsoft.CodeAnalysis.IRangeVariableSymbol
Microsoft.CodeAnalysis.IStructuredTriviaSyntax
Microsoft.CodeAnalysis.IStructuredTriviaSyntax.ParentTrivia.get
Microsoft.CodeAnalysis.ISymbol
Microsoft.CodeAnalysis.ISymbol.Accept(Microsoft.CodeAnalysis.SymbolVisitor visitor)
Microsoft.CodeAnalysis.ISymbol.Accept<TResult>(Microsoft.CodeAnalysis.SymbolVisitor<TResult> visitor)
Microsoft.CodeAnalysis.ISymbol.CanBeReferencedByName.get
Microsoft.CodeAnalysis.ISymbol.ContainingAssembly.get
Microsoft.CodeAnalysis.ISymbol.ContainingModule.get
Microsoft.CodeAnalysis.ISymbol.ContainingNamespace.get
Microsoft.CodeAnalysis.ISymbol.ContainingSymbol.get
Microsoft.CodeAnalysis.ISymbol.ContainingType.get
Microsoft.CodeAnalysis.ISymbol.DeclaredAccessibility.get
Microsoft.CodeAnalysis.ISymbol.DeclaringSyntaxReferences.get
Microsoft.CodeAnalysis.ISymbol.GetAttributes()
Microsoft.CodeAnalysis.ISymbol.GetDocumentationCommentId()
Microsoft.CodeAnalysis.ISymbol.GetDocumentationCommentXml(System.Globalization.CultureInfo preferredCulture = null, bool expandIncludes = false, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.ISymbol.HasUnsupportedMetadata.get
Microsoft.CodeAnalysis.ISymbol.IsAbstract.get
Microsoft.CodeAnalysis.ISymbol.IsDefinition.get
Microsoft.CodeAnalysis.ISymbol.IsExtern.get
Microsoft.CodeAnalysis.ISymbol.IsImplicitlyDeclared.get
Microsoft.CodeAnalysis.ISymbol.IsOverride.get
Microsoft.CodeAnalysis.ISymbol.IsSealed.get
Microsoft.CodeAnalysis.ISymbol.IsStatic.get
Microsoft.CodeAnalysis.ISymbol.IsVirtual.get
Microsoft.CodeAnalysis.ISymbol.Kind.get
Microsoft.CodeAnalysis.ISymbol.Language.get
Microsoft.CodeAnalysis.ISymbol.Locations.get
Microsoft.CodeAnalysis.ISymbol.MetadataName.get
Microsoft.CodeAnalysis.ISymbol.Name.get
Microsoft.CodeAnalysis.ISymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.ISymbol.ToDisplayParts(Microsoft.CodeAnalysis.SymbolDisplayFormat format = null)
Microsoft.CodeAnalysis.ISymbol.ToDisplayString(Microsoft.CodeAnalysis.SymbolDisplayFormat format = null)
Microsoft.CodeAnalysis.ISymbol.ToMinimalDisplayParts(Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.SymbolDisplayFormat format = null)
Microsoft.CodeAnalysis.ISymbol.ToMinimalDisplayString(Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.SymbolDisplayFormat format = null)
Microsoft.CodeAnalysis.ISymbolExtensions
Microsoft.CodeAnalysis.ITypeParameterSymbol
Microsoft.CodeAnalysis.ITypeParameterSymbol.ConstraintTypes.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.DeclaringMethod.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.DeclaringType.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.HasConstructorConstraint.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.HasReferenceTypeConstraint.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.HasValueTypeConstraint.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.Ordinal.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.ReducedFrom.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.TypeParameterKind.get
Microsoft.CodeAnalysis.ITypeParameterSymbol.Variance.get
Microsoft.CodeAnalysis.ITypeSymbol
Microsoft.CodeAnalysis.ITypeSymbol.AllInterfaces.get
Microsoft.CodeAnalysis.ITypeSymbol.BaseType.get
Microsoft.CodeAnalysis.ITypeSymbol.FindImplementationForInterfaceMember(Microsoft.CodeAnalysis.ISymbol interfaceMember)
Microsoft.CodeAnalysis.ITypeSymbol.Interfaces.get
Microsoft.CodeAnalysis.ITypeSymbol.IsAnonymousType.get
Microsoft.CodeAnalysis.ITypeSymbol.IsReferenceType.get
Microsoft.CodeAnalysis.ITypeSymbol.IsValueType.get
Microsoft.CodeAnalysis.ITypeSymbol.OriginalDefinition.get
Microsoft.CodeAnalysis.ITypeSymbol.SpecialType.get
Microsoft.CodeAnalysis.ITypeSymbol.TypeKind.get
Microsoft.CodeAnalysis.LanguageNames
Microsoft.CodeAnalysis.LineVisibility
Microsoft.CodeAnalysis.LineVisibility.BeforeFirstLineDirective = 0
Microsoft.CodeAnalysis.LineVisibility.Hidden = 1
Microsoft.CodeAnalysis.LineVisibility.Visible = 2
Microsoft.CodeAnalysis.LocalizableResourceString
Microsoft.CodeAnalysis.LocalizableResourceString.LocalizableResourceString(string nameOfLocalizableResource, System.Resources.ResourceManager resourceManager, System.Type resourceSource)
Microsoft.CodeAnalysis.LocalizableResourceString.LocalizableResourceString(string nameOfLocalizableResource, System.Resources.ResourceManager resourceManager, System.Type resourceSource, params string[] formatArguments)
Microsoft.CodeAnalysis.LocalizableString
Microsoft.CodeAnalysis.LocalizableString.Equals(Microsoft.CodeAnalysis.LocalizableString other)
Microsoft.CodeAnalysis.LocalizableString.OnException
Microsoft.CodeAnalysis.LocalizableString.ToString(System.IFormatProvider formatProvider)
Microsoft.CodeAnalysis.Location
Microsoft.CodeAnalysis.Location.IsInMetadata.get
Microsoft.CodeAnalysis.Location.IsInSource.get
Microsoft.CodeAnalysis.Location.Location()
Microsoft.CodeAnalysis.LocationKind
Microsoft.CodeAnalysis.LocationKind.ExternalFile = 4
Microsoft.CodeAnalysis.LocationKind.MetadataFile = 2
Microsoft.CodeAnalysis.LocationKind.None = 0
Microsoft.CodeAnalysis.LocationKind.SourceFile = 1
Microsoft.CodeAnalysis.LocationKind.XmlFile = 3
Microsoft.CodeAnalysis.Metadata
Microsoft.CodeAnalysis.Metadata.Copy()
Microsoft.CodeAnalysis.MetadataImageKind
Microsoft.CodeAnalysis.MetadataImageKind.Assembly = 0
Microsoft.CodeAnalysis.MetadataImageKind.Module = 1
Microsoft.CodeAnalysis.MetadataReference
Microsoft.CodeAnalysis.MetadataReference.Properties.get
Microsoft.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Generic.IEnumerable<string> aliases)
Microsoft.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Immutable.ImmutableArray<string> aliases)
Microsoft.CodeAnalysis.MetadataReference.WithEmbedInteropTypes(bool value)
Microsoft.CodeAnalysis.MetadataReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties properties)
Microsoft.CodeAnalysis.MetadataReferenceProperties
Microsoft.CodeAnalysis.MetadataReferenceProperties.Aliases.get
Microsoft.CodeAnalysis.MetadataReferenceProperties.EmbedInteropTypes.get
Microsoft.CodeAnalysis.MetadataReferenceProperties.Equals(Microsoft.CodeAnalysis.MetadataReferenceProperties other)
Microsoft.CodeAnalysis.MetadataReferenceProperties.Kind.get
Microsoft.CodeAnalysis.MetadataReferenceProperties.MetadataReferenceProperties(Microsoft.CodeAnalysis.MetadataImageKind kind = Microsoft.CodeAnalysis.MetadataImageKind.Assembly, System.Collections.Immutable.ImmutableArray<string> aliases = default(System.Collections.Immutable.ImmutableArray<string>), bool embedInteropTypes = false)
Microsoft.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Generic.IEnumerable<string> aliases)
Microsoft.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Immutable.ImmutableArray<string> aliases)
Microsoft.CodeAnalysis.MetadataReferenceProperties.WithEmbedInteropTypes(bool embedInteropTypes)
Microsoft.CodeAnalysis.MetadataReferenceResolver
Microsoft.CodeAnalysis.MethodKind
Microsoft.CodeAnalysis.MethodKind.AnonymousFunction = 0
Microsoft.CodeAnalysis.MethodKind.BuiltinOperator = 15
Microsoft.CodeAnalysis.MethodKind.Constructor = 1
Microsoft.CodeAnalysis.MethodKind.Conversion = 2
Microsoft.CodeAnalysis.MethodKind.DeclareMethod = 16
Microsoft.CodeAnalysis.MethodKind.DelegateInvoke = 3
Microsoft.CodeAnalysis.MethodKind.Destructor = 4
Microsoft.CodeAnalysis.MethodKind.EventAdd = 5
Microsoft.CodeAnalysis.MethodKind.EventRaise = 6
Microsoft.CodeAnalysis.MethodKind.EventRemove = 7
Microsoft.CodeAnalysis.MethodKind.ExplicitInterfaceImplementation = 8
Microsoft.CodeAnalysis.MethodKind.LambdaMethod = 0
Microsoft.CodeAnalysis.MethodKind.Ordinary = 10
Microsoft.CodeAnalysis.MethodKind.PropertyGet = 11
Microsoft.CodeAnalysis.MethodKind.PropertySet = 12
Microsoft.CodeAnalysis.MethodKind.ReducedExtension = 13
Microsoft.CodeAnalysis.MethodKind.SharedConstructor = 14
Microsoft.CodeAnalysis.MethodKind.StaticConstructor = 14
Microsoft.CodeAnalysis.MethodKind.UserDefinedOperator = 9
Microsoft.CodeAnalysis.ModelExtensions
Microsoft.CodeAnalysis.ModuleMetadata
Microsoft.CodeAnalysis.ModuleMetadata.GetModuleNames()
Microsoft.CodeAnalysis.ModuleMetadata.GetModuleVersionId()
Microsoft.CodeAnalysis.ModuleMetadata.GetReference(Microsoft.CodeAnalysis.DocumentationProvider documentation = null, string filePath = null, string display = null)
Microsoft.CodeAnalysis.ModuleMetadata.Name.get
Microsoft.CodeAnalysis.NamespaceKind
Microsoft.CodeAnalysis.NamespaceKind.Assembly = 2
Microsoft.CodeAnalysis.NamespaceKind.Compilation = 3
Microsoft.CodeAnalysis.NamespaceKind.Module = 1
Microsoft.CodeAnalysis.OptimizationLevel
Microsoft.CodeAnalysis.OptimizationLevel.Debug = 0
Microsoft.CodeAnalysis.OptimizationLevel.Release = 1
Microsoft.CodeAnalysis.Optional<T>
Microsoft.CodeAnalysis.Optional<T>.HasValue.get
Microsoft.CodeAnalysis.Optional<T>.Optional(T value)
Microsoft.CodeAnalysis.Optional<T>.Value.get
Microsoft.CodeAnalysis.OutputKind
Microsoft.CodeAnalysis.OutputKind.ConsoleApplication = 0
Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary = 2
Microsoft.CodeAnalysis.OutputKind.NetModule = 3
Microsoft.CodeAnalysis.OutputKind.WindowsApplication = 1
Microsoft.CodeAnalysis.OutputKind.WindowsRuntimeApplication = 5
Microsoft.CodeAnalysis.OutputKind.WindowsRuntimeMetadata = 4
Microsoft.CodeAnalysis.ParseOptions
Microsoft.CodeAnalysis.ParseOptions.DocumentationMode.get
Microsoft.CodeAnalysis.ParseOptions.DocumentationMode.set
Microsoft.CodeAnalysis.ParseOptions.EqualsHelper(Microsoft.CodeAnalysis.ParseOptions other)
Microsoft.CodeAnalysis.ParseOptions.GetHashCodeHelper()
Microsoft.CodeAnalysis.ParseOptions.Kind.get
Microsoft.CodeAnalysis.ParseOptions.Kind.set
Microsoft.CodeAnalysis.ParseOptions.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode documentationMode)
Microsoft.CodeAnalysis.ParseOptions.WithFeatures(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> features)
Microsoft.CodeAnalysis.ParseOptions.WithKind(Microsoft.CodeAnalysis.SourceCodeKind kind)
Microsoft.CodeAnalysis.Platform
Microsoft.CodeAnalysis.Platform.AnyCpu = 0
Microsoft.CodeAnalysis.Platform.AnyCpu32BitPreferred = 4
Microsoft.CodeAnalysis.Platform.Arm = 5
Microsoft.CodeAnalysis.Platform.Itanium = 3
Microsoft.CodeAnalysis.Platform.X64 = 2
Microsoft.CodeAnalysis.Platform.X86 = 1
Microsoft.CodeAnalysis.PortableExecutableReference
Microsoft.CodeAnalysis.PortableExecutableReference.FilePath.get
Microsoft.CodeAnalysis.PortableExecutableReference.PortableExecutableReference(Microsoft.CodeAnalysis.MetadataReferenceProperties properties, string fullPath = null, Microsoft.CodeAnalysis.DocumentationProvider initialDocumentation = null)
Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Generic.IEnumerable<string> aliases)
Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Immutable.ImmutableArray<string> aliases)
Microsoft.CodeAnalysis.PortableExecutableReference.WithEmbedInteropTypes(bool value)
Microsoft.CodeAnalysis.PortableExecutableReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties properties)
Microsoft.CodeAnalysis.PreprocessingSymbolInfo
Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Equals(Microsoft.CodeAnalysis.PreprocessingSymbolInfo other)
Microsoft.CodeAnalysis.PreprocessingSymbolInfo.IsDefined.get
Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Symbol.get
Microsoft.CodeAnalysis.RefKind
Microsoft.CodeAnalysis.RefKind.None = 0
Microsoft.CodeAnalysis.RefKind.Out = 2
Microsoft.CodeAnalysis.RefKind.Ref = 1
Microsoft.CodeAnalysis.ReportDiagnostic
Microsoft.CodeAnalysis.ReportDiagnostic.Default = 0
Microsoft.CodeAnalysis.ReportDiagnostic.Error = 1
Microsoft.CodeAnalysis.ReportDiagnostic.Hidden = 4
Microsoft.CodeAnalysis.ReportDiagnostic.Info = 3
Microsoft.CodeAnalysis.ReportDiagnostic.Suppress = 5
Microsoft.CodeAnalysis.ReportDiagnostic.Warn = 2
Microsoft.CodeAnalysis.ResourceDescription
Microsoft.CodeAnalysis.ResourceDescription.ResourceDescription(string resourceName, System.Func<System.IO.Stream> dataProvider, bool isPublic)
Microsoft.CodeAnalysis.ResourceDescription.ResourceDescription(string resourceName, string fileName, System.Func<System.IO.Stream> dataProvider, bool isPublic)
Microsoft.CodeAnalysis.SemanticModel
Microsoft.CodeAnalysis.SemanticModel.Compilation.get
Microsoft.CodeAnalysis.SemanticModel.GetConstantValue(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.SemanticModel.GetEnclosingSymbol(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfo(Microsoft.CodeAnalysis.SyntaxNode nameSyntax)
Microsoft.CodeAnalysis.SemanticModel.IsAccessible(int position, Microsoft.CodeAnalysis.ISymbol symbol)
Microsoft.CodeAnalysis.SemanticModel.IsEventUsableAsField(int position, Microsoft.CodeAnalysis.IEventSymbol eventSymbol)
Microsoft.CodeAnalysis.SemanticModel.LookupBaseMembers(int position, string name = null)
Microsoft.CodeAnalysis.SemanticModel.LookupLabels(int position, string name = null)
Microsoft.CodeAnalysis.SemanticModel.LookupNamespacesAndTypes(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container = null, string name = null)
Microsoft.CodeAnalysis.SemanticModel.LookupStaticMembers(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container = null, string name = null)
Microsoft.CodeAnalysis.SemanticModel.LookupSymbols(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container = null, string name = null, bool includeReducedExtensionMethods = false)
Microsoft.CodeAnalysis.SemanticModel.ParentModel.get
Microsoft.CodeAnalysis.SemanticModel.SyntaxTree.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Add(TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.AddRange(System.Collections.Generic.IEnumerable<TNode> nodes)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Any()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Contains(TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Count.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Current.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Reset()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Equals(Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> other)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.First()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.FirstOrDefault()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.FullSpan.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.GetEnumerator()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.GetSeparator(int index)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.GetSeparators()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.GetWithSeparators()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.IndexOf(System.Func<TNode, bool> predicate)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.IndexOf(TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Insert(int index, TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.InsertRange(int index, System.Collections.Generic.IEnumerable<TNode> nodes)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Last()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.LastIndexOf(System.Func<TNode, bool> predicate)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.LastIndexOf(TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.LastOrDefault()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Remove(TNode node)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.RemoveAt(int index)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Replace(TNode nodeInList, TNode newNode)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.ReplaceRange(TNode nodeInList, System.Collections.Generic.IEnumerable<TNode> newNodes)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.ReplaceSeparator(Microsoft.CodeAnalysis.SyntaxToken separatorToken, Microsoft.CodeAnalysis.SyntaxToken newSeparator)
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.SeparatorCount.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Span.get
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.ToFullString()
Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.this[int index].get
Microsoft.CodeAnalysis.SourceCodeKind
Microsoft.CodeAnalysis.SourceCodeKind.Interactive = 2
Microsoft.CodeAnalysis.SourceCodeKind.Regular = 0
Microsoft.CodeAnalysis.SourceCodeKind.Script = 1
Microsoft.CodeAnalysis.SourceReferenceResolver
Microsoft.CodeAnalysis.SourceReferenceResolver.SourceReferenceResolver()
Microsoft.CodeAnalysis.SpecialType
Microsoft.CodeAnalysis.SpecialType.Count = 43
Microsoft.CodeAnalysis.SpecialType.None = 0
Microsoft.CodeAnalysis.SpecialType.System_ArgIterator = 37
Microsoft.CodeAnalysis.SpecialType.System_Array = 23
Microsoft.CodeAnalysis.SpecialType.System_AsyncCallback = 43
Microsoft.CodeAnalysis.SpecialType.System_Boolean = 7
Microsoft.CodeAnalysis.SpecialType.System_Byte = 10
Microsoft.CodeAnalysis.SpecialType.System_Char = 8
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_ICollection_T = 27
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerable_T = 25
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerator_T = 29
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IList_T = 26
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyCollection_T = 31
Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyList_T = 30
Microsoft.CodeAnalysis.SpecialType.System_Collections_IEnumerable = 24
Microsoft.CodeAnalysis.SpecialType.System_Collections_IEnumerator = 28
Microsoft.CodeAnalysis.SpecialType.System_DateTime = 33
Microsoft.CodeAnalysis.SpecialType.System_Decimal = 17
Microsoft.CodeAnalysis.SpecialType.System_Delegate = 4
Microsoft.CodeAnalysis.SpecialType.System_Double = 19
Microsoft.CodeAnalysis.SpecialType.System_Enum = 2
Microsoft.CodeAnalysis.SpecialType.System_IAsyncResult = 42
Microsoft.CodeAnalysis.SpecialType.System_IDisposable = 35
Microsoft.CodeAnalysis.SpecialType.System_Int16 = 11
Microsoft.CodeAnalysis.SpecialType.System_Int32 = 13
Microsoft.CodeAnalysis.SpecialType.System_Int64 = 15
Microsoft.CodeAnalysis.SpecialType.System_IntPtr = 21
Microsoft.CodeAnalysis.SpecialType.System_MulticastDelegate = 3
Microsoft.CodeAnalysis.SpecialType.System_Nullable_T = 32
Microsoft.CodeAnalysis.SpecialType.System_Object = 1
Microsoft.CodeAnalysis.SpecialType.System_RuntimeArgumentHandle = 38
Microsoft.CodeAnalysis.SpecialType.System_RuntimeFieldHandle = 39
Microsoft.CodeAnalysis.SpecialType.System_RuntimeMethodHandle = 40
Microsoft.CodeAnalysis.SpecialType.System_RuntimeTypeHandle = 41
Microsoft.CodeAnalysis.SpecialType.System_Runtime_CompilerServices_IsVolatile = 34
Microsoft.CodeAnalysis.SpecialType.System_SByte = 9
Microsoft.CodeAnalysis.SpecialType.System_Single = 18
Microsoft.CodeAnalysis.SpecialType.System_String = 20
Microsoft.CodeAnalysis.SpecialType.System_TypedReference = 36
Microsoft.CodeAnalysis.SpecialType.System_UInt16 = 12
Microsoft.CodeAnalysis.SpecialType.System_UInt32 = 14
Microsoft.CodeAnalysis.SpecialType.System_UInt64 = 16
Microsoft.CodeAnalysis.SpecialType.System_UIntPtr = 22
Microsoft.CodeAnalysis.SpecialType.System_ValueType = 5
Microsoft.CodeAnalysis.SpecialType.System_Void = 6
Microsoft.CodeAnalysis.SpeculativeBindingOption
Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsExpression = 0
Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsTypeOrNamespace = 1
Microsoft.CodeAnalysis.StrongNameProvider
Microsoft.CodeAnalysis.SubsystemVersion
Microsoft.CodeAnalysis.SubsystemVersion.Equals(Microsoft.CodeAnalysis.SubsystemVersion other)
Microsoft.CodeAnalysis.SubsystemVersion.IsValid.get
Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle
Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndParameters = 1
Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndSignature = 2
Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameOnly = 0
Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default = 0
Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod = 1
Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod = 2
Microsoft.CodeAnalysis.SymbolDisplayExtensions
Microsoft.CodeAnalysis.SymbolDisplayFormat
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddGenericsOptions(Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddLocalOptions(Microsoft.CodeAnalysis.SymbolDisplayLocalOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddMiscellaneousOptions(Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.AddParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.DelegateStyle.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.ExtensionMethodStyle.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.GenericsOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.GlobalNamespaceStyle.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.KindOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.LocalOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.MemberOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.MiscellaneousOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.ParameterOptions.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.PropertyStyle.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.SymbolDisplayFormat(Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle globalNamespaceStyle = Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Omitted, Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle typeQualificationStyle = Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameOnly, Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions genericsOptions = Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.None, Microsoft.CodeAnalysis.SymbolDisplayMemberOptions memberOptions = Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.None, Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle delegateStyle = Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameOnly, Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle extensionMethodStyle = Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default, Microsoft.CodeAnalysis.SymbolDisplayParameterOptions parameterOptions = Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.None, Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle propertyStyle = Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle.NameOnly, Microsoft.CodeAnalysis.SymbolDisplayLocalOptions localOptions = Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.None, Microsoft.CodeAnalysis.SymbolDisplayKindOptions kindOptions = Microsoft.CodeAnalysis.SymbolDisplayKindOptions.None, Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions miscellaneousOptions = Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None)
Microsoft.CodeAnalysis.SymbolDisplayFormat.TypeQualificationStyle.get
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithGenericsOptions(Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithGlobalNamespaceStyle(Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle style)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithLocalOptions(Microsoft.CodeAnalysis.SymbolDisplayLocalOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithMiscellaneousOptions(Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions options)
Microsoft.CodeAnalysis.SymbolDisplayFormat.WithParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions options)
Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeConstraints = 2
Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeParameters = 1
Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeVariance = 4
Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle
Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Included = 2
Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Omitted = 0
Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.OmittedAsContaining = 1
Microsoft.CodeAnalysis.SymbolDisplayKindOptions
Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeMemberKeyword = 4
Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeNamespaceKeyword = 1
Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeTypeKeyword = 2
Microsoft.CodeAnalysis.SymbolDisplayKindOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayLocalOptions
Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.IncludeConstantValue = 2
Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.IncludeType = 1
Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeAccessibility = 4
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeConstantValue = 64
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeContainingType = 32
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeExplicitInterface = 8
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeModifiers = 2
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeParameters = 16
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeType = 1
Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers = 2
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.ExpandNullable = 32
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.RemoveAttributeSuffix = 16
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseAsterisksInMultiDimensionalArrays = 4
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseErrorTypeSymbolName = 8
Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseSpecialTypes = 1
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeDefaultValue = 16
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeExtensionThis = 1
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeName = 8
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeOptionalBrackets = 32
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeParamsRefOut = 2
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeType = 4
Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.None = 0
Microsoft.CodeAnalysis.SymbolDisplayPart
Microsoft.CodeAnalysis.SymbolDisplayPart.Kind.get
Microsoft.CodeAnalysis.SymbolDisplayPart.Symbol.get
Microsoft.CodeAnalysis.SymbolDisplayPart.SymbolDisplayPart(Microsoft.CodeAnalysis.SymbolDisplayPartKind kind, Microsoft.CodeAnalysis.ISymbol symbol, string text)
Microsoft.CodeAnalysis.SymbolDisplayPartKind
Microsoft.CodeAnalysis.SymbolDisplayPartKind.AliasName = 0
Microsoft.CodeAnalysis.SymbolDisplayPartKind.AnonymousTypeIndicator = 24
Microsoft.CodeAnalysis.SymbolDisplayPartKind.AssemblyName = 1
Microsoft.CodeAnalysis.SymbolDisplayPartKind.ClassName = 2
Microsoft.CodeAnalysis.SymbolDisplayPartKind.DelegateName = 3
Microsoft.CodeAnalysis.SymbolDisplayPartKind.EnumName = 4
Microsoft.CodeAnalysis.SymbolDisplayPartKind.ErrorTypeName = 5
Microsoft.CodeAnalysis.SymbolDisplayPartKind.EventName = 6
Microsoft.CodeAnalysis.SymbolDisplayPartKind.FieldName = 7
Microsoft.CodeAnalysis.SymbolDisplayPartKind.InterfaceName = 8
Microsoft.CodeAnalysis.SymbolDisplayPartKind.Keyword = 9
Microsoft.CodeAnalysis.SymbolDisplayPartKind.LabelName = 10
Microsoft.CodeAnalysis.SymbolDisplayPartKind.LineBreak = 11
Microsoft.CodeAnalysis.SymbolDisplayPartKind.LocalName = 14
Microsoft.CodeAnalysis.SymbolDisplayPartKind.MethodName = 15
Microsoft.CodeAnalysis.SymbolDisplayPartKind.ModuleName = 16
Microsoft.CodeAnalysis.SymbolDisplayPartKind.NamespaceName = 17
Microsoft.CodeAnalysis.SymbolDisplayPartKind.NumericLiteral = 12
Microsoft.CodeAnalysis.SymbolDisplayPartKind.Operator = 18
Microsoft.CodeAnalysis.SymbolDisplayPartKind.ParameterName = 19
Microsoft.CodeAnalysis.SymbolDisplayPartKind.PropertyName = 20
Microsoft.CodeAnalysis.SymbolDisplayPartKind.Punctuation = 21
Microsoft.CodeAnalysis.SymbolDisplayPartKind.RangeVariableName = 27
Microsoft.CodeAnalysis.SymbolDisplayPartKind.Space = 22
Microsoft.CodeAnalysis.SymbolDisplayPartKind.StringLiteral = 13
Microsoft.CodeAnalysis.SymbolDisplayPartKind.StructName = 23
Microsoft.CodeAnalysis.SymbolDisplayPartKind.Text = 25
Microsoft.CodeAnalysis.SymbolDisplayPartKind.TypeParameterName = 26
Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle
Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle.NameOnly = 0
Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle.ShowReadWriteDescriptor = 1
Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle
Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypes = 1
Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces = 2
Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameOnly = 0
Microsoft.CodeAnalysis.SymbolFilter
Microsoft.CodeAnalysis.SymbolFilter.All = Microsoft.CodeAnalysis.SymbolFilter.Namespace | Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember
Microsoft.CodeAnalysis.SymbolFilter.Member = 4
Microsoft.CodeAnalysis.SymbolFilter.Namespace = 1
Microsoft.CodeAnalysis.SymbolFilter.None = 0
Microsoft.CodeAnalysis.SymbolFilter.Type = 2
Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember = Microsoft.CodeAnalysis.SymbolFilter.Type | Microsoft.CodeAnalysis.SymbolFilter.Member
Microsoft.CodeAnalysis.SymbolInfo
Microsoft.CodeAnalysis.SymbolInfo.CandidateReason.get
Microsoft.CodeAnalysis.SymbolInfo.CandidateSymbols.get
Microsoft.CodeAnalysis.SymbolInfo.Equals(Microsoft.CodeAnalysis.SymbolInfo other)
Microsoft.CodeAnalysis.SymbolInfo.Symbol.get
Microsoft.CodeAnalysis.SymbolKind
Microsoft.CodeAnalysis.SymbolKind.Alias = 0
Microsoft.CodeAnalysis.SymbolKind.ArrayType = 1
Microsoft.CodeAnalysis.SymbolKind.Assembly = 2
Microsoft.CodeAnalysis.SymbolKind.DynamicType = 3
Microsoft.CodeAnalysis.SymbolKind.ErrorType = 4
Microsoft.CodeAnalysis.SymbolKind.Event = 5
Microsoft.CodeAnalysis.SymbolKind.Field = 6
Microsoft.CodeAnalysis.SymbolKind.Label = 7
Microsoft.CodeAnalysis.SymbolKind.Local = 8
Microsoft.CodeAnalysis.SymbolKind.Method = 9
Microsoft.CodeAnalysis.SymbolKind.NamedType = 11
Microsoft.CodeAnalysis.SymbolKind.Namespace = 12
Microsoft.CodeAnalysis.SymbolKind.NetModule = 10
Microsoft.CodeAnalysis.SymbolKind.Parameter = 13
Microsoft.CodeAnalysis.SymbolKind.PointerType = 14
Microsoft.CodeAnalysis.SymbolKind.Preprocessing = 18
Microsoft.CodeAnalysis.SymbolKind.Property = 15
Microsoft.CodeAnalysis.SymbolKind.RangeVariable = 16
Microsoft.CodeAnalysis.SymbolKind.TypeParameter = 17
Microsoft.CodeAnalysis.SymbolVisitor
Microsoft.CodeAnalysis.SymbolVisitor<TResult>
Microsoft.CodeAnalysis.SyntaxAnnotation
Microsoft.CodeAnalysis.SyntaxAnnotation.Data.get
Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(Microsoft.CodeAnalysis.SyntaxAnnotation other)
Microsoft.CodeAnalysis.SyntaxAnnotation.Kind.get
Microsoft.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation()
Microsoft.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation(string kind)
Microsoft.CodeAnalysis.SyntaxAnnotation.SyntaxAnnotation(string kind, string data)
Microsoft.CodeAnalysis.SyntaxList<TNode>
Microsoft.CodeAnalysis.SyntaxList<TNode>.Add(TNode node)
Microsoft.CodeAnalysis.SyntaxList<TNode>.AddRange(System.Collections.Generic.IEnumerable<TNode> nodes)
Microsoft.CodeAnalysis.SyntaxList<TNode>.Any()
Microsoft.CodeAnalysis.SyntaxList<TNode>.Count.get
Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator
Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator.Reset()
Microsoft.CodeAnalysis.SyntaxList<TNode>.Equals(Microsoft.CodeAnalysis.SyntaxList<TNode> other)
Microsoft.CodeAnalysis.SyntaxList<TNode>.First()
Microsoft.CodeAnalysis.SyntaxList<TNode>.FirstOrDefault()
Microsoft.CodeAnalysis.SyntaxList<TNode>.FullSpan.get
Microsoft.CodeAnalysis.SyntaxList<TNode>.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxList<TNode>.IndexOf(System.Func<TNode, bool> predicate)
Microsoft.CodeAnalysis.SyntaxList<TNode>.IndexOf(TNode node)
Microsoft.CodeAnalysis.SyntaxList<TNode>.Insert(int index, TNode node)
Microsoft.CodeAnalysis.SyntaxList<TNode>.InsertRange(int index, System.Collections.Generic.IEnumerable<TNode> nodes)
Microsoft.CodeAnalysis.SyntaxList<TNode>.Last()
Microsoft.CodeAnalysis.SyntaxList<TNode>.LastIndexOf(System.Func<TNode, bool> predicate)
Microsoft.CodeAnalysis.SyntaxList<TNode>.LastIndexOf(TNode node)
Microsoft.CodeAnalysis.SyntaxList<TNode>.LastOrDefault()
Microsoft.CodeAnalysis.SyntaxList<TNode>.Remove(TNode node)
Microsoft.CodeAnalysis.SyntaxList<TNode>.RemoveAt(int index)
Microsoft.CodeAnalysis.SyntaxList<TNode>.Replace(TNode nodeInList, TNode newNode)
Microsoft.CodeAnalysis.SyntaxList<TNode>.ReplaceRange(TNode nodeInList, System.Collections.Generic.IEnumerable<TNode> newNodes)
Microsoft.CodeAnalysis.SyntaxList<TNode>.Span.get
Microsoft.CodeAnalysis.SyntaxList<TNode>.ToFullString()
Microsoft.CodeAnalysis.SyntaxList<TNode>.this[int index].get
Microsoft.CodeAnalysis.SyntaxNode
Microsoft.CodeAnalysis.SyntaxNode.Ancestors(bool ascendOutOfTrivia = true)
Microsoft.CodeAnalysis.SyntaxNode.AncestorsAndSelf(bool ascendOutOfTrivia = true)
Microsoft.CodeAnalysis.SyntaxNode.ChildNodes()
Microsoft.CodeAnalysis.SyntaxNode.ChildNodesAndTokens()
Microsoft.CodeAnalysis.SyntaxNode.ChildTokens()
Microsoft.CodeAnalysis.SyntaxNode.Contains(Microsoft.CodeAnalysis.SyntaxNode node)
Microsoft.CodeAnalysis.SyntaxNode.ContainsAnnotations.get
Microsoft.CodeAnalysis.SyntaxNode.ContainsDiagnostics.get
Microsoft.CodeAnalysis.SyntaxNode.ContainsDirectives.get
Microsoft.CodeAnalysis.SyntaxNode.ContainsSkippedText.get
Microsoft.CodeAnalysis.SyntaxNode.CopyAnnotationsTo<T>(T node)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodes(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodes(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantTokens(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantTokens(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantTrivia(Microsoft.CodeAnalysis.Text.TextSpan span, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.DescendantTrivia(System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool> descendIntoChildren = null, bool descendIntoTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.FindNode(Microsoft.CodeAnalysis.Text.TextSpan span, bool findInsideTrivia = false, bool getInnermostNodeForTie = false)
Microsoft.CodeAnalysis.SyntaxNode.FindToken(int position, bool findInsideTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.FindTrivia(int position, bool findInsideTrivia = false)
Microsoft.CodeAnalysis.SyntaxNode.FirstAncestorOrSelf<TNode>(System.Func<TNode, bool> predicate = null, bool ascendOutOfTrivia = true)
Microsoft.CodeAnalysis.SyntaxNode.FullSpan.get
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(Microsoft.CodeAnalysis.SyntaxAnnotation syntaxAnnotation)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(Microsoft.CodeAnalysis.SyntaxAnnotation syntaxAnnotation)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotations(System.Collections.Generic.IEnumerable<string> annotationKinds)
Microsoft.CodeAnalysis.SyntaxNode.GetAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.GetDiagnostics()
Microsoft.CodeAnalysis.SyntaxNode.GetFirstToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false)
Microsoft.CodeAnalysis.SyntaxNode.GetLastToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false)
Microsoft.CodeAnalysis.SyntaxNode.GetLeadingTrivia()
Microsoft.CodeAnalysis.SyntaxNode.GetLocation()
Microsoft.CodeAnalysis.SyntaxNode.GetRed<T>(ref T field, int slot)
Microsoft.CodeAnalysis.SyntaxNode.GetRedAtZero<T>(ref T field)
Microsoft.CodeAnalysis.SyntaxNode.GetReference()
Microsoft.CodeAnalysis.SyntaxNode.GetText(System.Text.Encoding encoding = null, Microsoft.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1)
Microsoft.CodeAnalysis.SyntaxNode.GetTrailingTrivia()
Microsoft.CodeAnalysis.SyntaxNode.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxNode.HasAnnotations(System.Collections.Generic.IEnumerable<string> annotationKinds)
Microsoft.CodeAnalysis.SyntaxNode.HasAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNode.HasLeadingTrivia.get
Microsoft.CodeAnalysis.SyntaxNode.HasStructuredTrivia.get
Microsoft.CodeAnalysis.SyntaxNode.HasTrailingTrivia.get
Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNode node, bool topLevel = false)
Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNode other)
Microsoft.CodeAnalysis.SyntaxNode.IsMissing.get
Microsoft.CodeAnalysis.SyntaxNode.IsPartOfStructuredTrivia()
Microsoft.CodeAnalysis.SyntaxNode.IsStructuredTrivia.get
Microsoft.CodeAnalysis.SyntaxNode.Parent.get
Microsoft.CodeAnalysis.SyntaxNode.RawKind.get
Microsoft.CodeAnalysis.SyntaxNode.Span.get
Microsoft.CodeAnalysis.SyntaxNode.SpanStart.get
Microsoft.CodeAnalysis.SyntaxNode.SyntaxTree.get
Microsoft.CodeAnalysis.SyntaxNodeExtensions
Microsoft.CodeAnalysis.SyntaxNodeOrToken
Microsoft.CodeAnalysis.SyntaxNodeOrToken.AsNode()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.AsToken()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.ChildNodesAndTokens()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsAnnotations.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsDiagnostics.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsDirectives.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.Equals(Microsoft.CodeAnalysis.SyntaxNodeOrToken other)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.FullSpan.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(System.Collections.Generic.IEnumerable<string> annotationKinds)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetDiagnostics()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetLeadingTrivia()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetLocation()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetNextSibling()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetPreviousSibling()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetTrailingTrivia()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(System.Collections.Generic.IEnumerable<string> annotationKinds)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasLeadingTrivia.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasTrailingTrivia.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNodeOrToken other)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsMissing.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsNode.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsToken.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.Language.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.Parent.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.RawKind.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.Span.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.SpanStart.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.SyntaxTree.get
Microsoft.CodeAnalysis.SyntaxNodeOrToken.ToFullString()
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxNodeOrToken.WriteTo(System.IO.TextWriter writer)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Add(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.AddRange(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNodeOrToken> nodesOrTokens)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Any()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Count.get
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Equals(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList other)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.First()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.FirstOrDefault()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.FullSpan.get
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.IndexOf(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Insert(int index, Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.InsertRange(int index, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNodeOrToken> nodesAndTokens)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Last()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.LastOrDefault()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Remove(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.RemoveAt(int index)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Replace(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList, Microsoft.CodeAnalysis.SyntaxNodeOrToken newNodeOrToken)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrTokenInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNodeOrToken> newNodesAndTokens)
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Span.get
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ToFullString()
Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.this[int index].get
Microsoft.CodeAnalysis.SyntaxReference
Microsoft.CodeAnalysis.SyntaxRemoveOptions
Microsoft.CodeAnalysis.SyntaxRemoveOptions.AddElasticMarker = 32
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepDirectives = 8
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepEndOfLine = 16
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepExteriorTrivia = Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepLeadingTrivia | Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepTrailingTrivia
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepLeadingTrivia = 1
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepNoTrivia = 0
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepTrailingTrivia = 2
Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepUnbalancedDirectives = 4
Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.SyntaxToken.ContainsAnnotations.get
Microsoft.CodeAnalysis.SyntaxToken.ContainsDiagnostics.get
Microsoft.CodeAnalysis.SyntaxToken.ContainsDirectives.get
Microsoft.CodeAnalysis.SyntaxToken.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxToken token)
Microsoft.CodeAnalysis.SyntaxToken.Equals(Microsoft.CodeAnalysis.SyntaxToken other)
Microsoft.CodeAnalysis.SyntaxToken.FullSpan.get
Microsoft.CodeAnalysis.SyntaxToken.GetAllTrivia()
Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(System.Collections.Generic.IEnumerable<string> annotationKinds)
Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxToken.GetDiagnostics()
Microsoft.CodeAnalysis.SyntaxToken.GetLocation()
Microsoft.CodeAnalysis.SyntaxToken.GetNextToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false)
Microsoft.CodeAnalysis.SyntaxToken.GetPreviousToken(bool includeZeroWidth = false, bool includeSkipped = false, bool includeDirectives = false, bool includeDocumentationComments = false)
Microsoft.CodeAnalysis.SyntaxToken.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxToken.HasAnnotations(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxToken.HasAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxToken.HasLeadingTrivia.get
Microsoft.CodeAnalysis.SyntaxToken.HasStructuredTrivia.get
Microsoft.CodeAnalysis.SyntaxToken.HasTrailingTrivia.get
Microsoft.CodeAnalysis.SyntaxToken.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxToken token)
Microsoft.CodeAnalysis.SyntaxToken.IsMissing.get
Microsoft.CodeAnalysis.SyntaxToken.IsPartOfStructuredTrivia()
Microsoft.CodeAnalysis.SyntaxToken.Language.get
Microsoft.CodeAnalysis.SyntaxToken.LeadingTrivia.get
Microsoft.CodeAnalysis.SyntaxToken.Parent.get
Microsoft.CodeAnalysis.SyntaxToken.RawKind.get
Microsoft.CodeAnalysis.SyntaxToken.Span.get
Microsoft.CodeAnalysis.SyntaxToken.SpanStart.get
Microsoft.CodeAnalysis.SyntaxToken.SyntaxTree.get
Microsoft.CodeAnalysis.SyntaxToken.Text.get
Microsoft.CodeAnalysis.SyntaxToken.ToFullString()
Microsoft.CodeAnalysis.SyntaxToken.TrailingTrivia.get
Microsoft.CodeAnalysis.SyntaxToken.Value.get
Microsoft.CodeAnalysis.SyntaxToken.ValueText.get
Microsoft.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(Microsoft.CodeAnalysis.SyntaxTriviaList trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(Microsoft.CodeAnalysis.SyntaxTriviaList trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
Microsoft.CodeAnalysis.SyntaxToken.WithTriviaFrom(Microsoft.CodeAnalysis.SyntaxToken token)
Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxToken.WriteTo(System.IO.TextWriter writer)
Microsoft.CodeAnalysis.SyntaxTokenList
Microsoft.CodeAnalysis.SyntaxTokenList.Add(Microsoft.CodeAnalysis.SyntaxToken token)
Microsoft.CodeAnalysis.SyntaxTokenList.AddRange(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> tokens)
Microsoft.CodeAnalysis.SyntaxTokenList.Any()
Microsoft.CodeAnalysis.SyntaxTokenList.Count.get
Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator
Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxTokenList.Equals(Microsoft.CodeAnalysis.SyntaxTokenList other)
Microsoft.CodeAnalysis.SyntaxTokenList.First()
Microsoft.CodeAnalysis.SyntaxTokenList.FullSpan.get
Microsoft.CodeAnalysis.SyntaxTokenList.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxTokenList.IndexOf(Microsoft.CodeAnalysis.SyntaxToken tokenInList)
Microsoft.CodeAnalysis.SyntaxTokenList.Insert(int index, Microsoft.CodeAnalysis.SyntaxToken token)
Microsoft.CodeAnalysis.SyntaxTokenList.InsertRange(int index, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> tokens)
Microsoft.CodeAnalysis.SyntaxTokenList.Last()
Microsoft.CodeAnalysis.SyntaxTokenList.Remove(Microsoft.CodeAnalysis.SyntaxToken tokenInList)
Microsoft.CodeAnalysis.SyntaxTokenList.RemoveAt(int index)
Microsoft.CodeAnalysis.SyntaxTokenList.Replace(Microsoft.CodeAnalysis.SyntaxToken tokenInList, Microsoft.CodeAnalysis.SyntaxToken newToken)
Microsoft.CodeAnalysis.SyntaxTokenList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens)
Microsoft.CodeAnalysis.SyntaxTokenList.Reverse()
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Enumerator(ref Microsoft.CodeAnalysis.SyntaxTokenList list)
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTokenList.Reversed other)
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Reversed(Microsoft.CodeAnalysis.SyntaxTokenList list)
Microsoft.CodeAnalysis.SyntaxTokenList.Span.get
Microsoft.CodeAnalysis.SyntaxTokenList.ToFullString()
Microsoft.CodeAnalysis.SyntaxTokenList.this[int index].get
Microsoft.CodeAnalysis.SyntaxTree
Microsoft.CodeAnalysis.SyntaxTree.GetRoot(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.SyntaxTree.GetRootAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.SyntaxTree.Options.get
Microsoft.CodeAnalysis.SyntaxTree.TryGetRoot(out Microsoft.CodeAnalysis.SyntaxNode root)
Microsoft.CodeAnalysis.SyntaxTrivia
Microsoft.CodeAnalysis.SyntaxTrivia.ContainsDiagnostics.get
Microsoft.CodeAnalysis.SyntaxTrivia.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
Microsoft.CodeAnalysis.SyntaxTrivia.Equals(Microsoft.CodeAnalysis.SyntaxTrivia other)
Microsoft.CodeAnalysis.SyntaxTrivia.FullSpan.get
Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxTrivia.GetDiagnostics()
Microsoft.CodeAnalysis.SyntaxTrivia.GetLocation()
Microsoft.CodeAnalysis.SyntaxTrivia.GetStructure()
Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation annotation)
Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(params string[] annotationKinds)
Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxTrivia.HasStructure.get
Microsoft.CodeAnalysis.SyntaxTrivia.IsDirective.get
Microsoft.CodeAnalysis.SyntaxTrivia.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
Microsoft.CodeAnalysis.SyntaxTrivia.IsPartOfStructuredTrivia()
Microsoft.CodeAnalysis.SyntaxTrivia.Language.get
Microsoft.CodeAnalysis.SyntaxTrivia.RawKind.get
Microsoft.CodeAnalysis.SyntaxTrivia.Span.get
Microsoft.CodeAnalysis.SyntaxTrivia.SpanStart.get
Microsoft.CodeAnalysis.SyntaxTrivia.SyntaxTree.get
Microsoft.CodeAnalysis.SyntaxTrivia.ToFullString()
Microsoft.CodeAnalysis.SyntaxTrivia.Token.get
Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(string annotationKind)
Microsoft.CodeAnalysis.SyntaxTrivia.WriteTo(System.IO.TextWriter writer)
Microsoft.CodeAnalysis.SyntaxTriviaList
Microsoft.CodeAnalysis.SyntaxTriviaList.Add(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.AddRange(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.Any()
Microsoft.CodeAnalysis.SyntaxTriviaList.Count.get
Microsoft.CodeAnalysis.SyntaxTriviaList.ElementAt(int index)
Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator
Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxTriviaList.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList other)
Microsoft.CodeAnalysis.SyntaxTriviaList.First()
Microsoft.CodeAnalysis.SyntaxTriviaList.FullSpan.get
Microsoft.CodeAnalysis.SyntaxTriviaList.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxTriviaList.IndexOf(Microsoft.CodeAnalysis.SyntaxTrivia triviaInList)
Microsoft.CodeAnalysis.SyntaxTriviaList.Insert(int index, Microsoft.CodeAnalysis.SyntaxTrivia trivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.InsertRange(int index, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.Last()
Microsoft.CodeAnalysis.SyntaxTriviaList.Remove(Microsoft.CodeAnalysis.SyntaxTrivia triviaInList)
Microsoft.CodeAnalysis.SyntaxTriviaList.RemoveAt(int index)
Microsoft.CodeAnalysis.SyntaxTriviaList.Replace(Microsoft.CodeAnalysis.SyntaxTrivia triviaInList, Microsoft.CodeAnalysis.SyntaxTrivia newTrivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxTrivia triviaInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia)
Microsoft.CodeAnalysis.SyntaxTriviaList.Reverse()
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.Current.get
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.Enumerator(ref Microsoft.CodeAnalysis.SyntaxTriviaList list)
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.MoveNext()
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed other)
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetEnumerator()
Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Reversed(Microsoft.CodeAnalysis.SyntaxTriviaList list)
Microsoft.CodeAnalysis.SyntaxTriviaList.Span.get
Microsoft.CodeAnalysis.SyntaxTriviaList.ToFullString()
Microsoft.CodeAnalysis.SyntaxTriviaList.this[int index].get
Microsoft.CodeAnalysis.SyntaxWalker
Microsoft.CodeAnalysis.SyntaxWalker.SyntaxWalker(Microsoft.CodeAnalysis.SyntaxWalkerDepth depth = Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node)
Microsoft.CodeAnalysis.SyntaxWalkerDepth
Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node = 0
Microsoft.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia = 3
Microsoft.CodeAnalysis.SyntaxWalkerDepth.Token = 1
Microsoft.CodeAnalysis.SyntaxWalkerDepth.Trivia = 2
Microsoft.CodeAnalysis.Text.LinePosition
Microsoft.CodeAnalysis.Text.LinePosition.Character.get
Microsoft.CodeAnalysis.Text.LinePosition.CompareTo(Microsoft.CodeAnalysis.Text.LinePosition other)
Microsoft.CodeAnalysis.Text.LinePosition.Equals(Microsoft.CodeAnalysis.Text.LinePosition other)
Microsoft.CodeAnalysis.Text.LinePosition.Line.get
Microsoft.CodeAnalysis.Text.LinePosition.LinePosition(int line, int character)
Microsoft.CodeAnalysis.Text.LinePositionSpan
Microsoft.CodeAnalysis.Text.LinePositionSpan.End.get
Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(Microsoft.CodeAnalysis.Text.LinePositionSpan other)
Microsoft.CodeAnalysis.Text.LinePositionSpan.LinePositionSpan(Microsoft.CodeAnalysis.Text.LinePosition start, Microsoft.CodeAnalysis.Text.LinePosition end)
Microsoft.CodeAnalysis.Text.LinePositionSpan.Start.get
Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.None = 0
Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1 = 1
Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha256 = 2
Microsoft.CodeAnalysis.Text.SourceText
Microsoft.CodeAnalysis.Text.SourceText.ChecksumAlgorithm.get
Microsoft.CodeAnalysis.Text.SourceText.ContentEquals(Microsoft.CodeAnalysis.Text.SourceText other)
Microsoft.CodeAnalysis.Text.SourceText.GetSubText(int start)
Microsoft.CodeAnalysis.Text.SourceText.Lines.get
Microsoft.CodeAnalysis.Text.SourceText.Replace(Microsoft.CodeAnalysis.Text.TextSpan span, string newText)
Microsoft.CodeAnalysis.Text.SourceText.Replace(int start, int length, string newText)
Microsoft.CodeAnalysis.Text.SourceText.SourceText(System.Collections.Immutable.ImmutableArray<byte> checksum = default(System.Collections.Immutable.ImmutableArray<byte>), Microsoft.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, Microsoft.CodeAnalysis.Text.SourceTextContainer container = null)
Microsoft.CodeAnalysis.Text.SourceText.WithChanges(params Microsoft.CodeAnalysis.Text.TextChange[] changes)
Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter textWriter, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
Microsoft.CodeAnalysis.Text.SourceTextContainer
Microsoft.CodeAnalysis.Text.TextChange
Microsoft.CodeAnalysis.Text.TextChange.Equals(Microsoft.CodeAnalysis.Text.TextChange other)
Microsoft.CodeAnalysis.Text.TextChange.NewText.get
Microsoft.CodeAnalysis.Text.TextChange.Span.get
Microsoft.CodeAnalysis.Text.TextChange.TextChange(Microsoft.CodeAnalysis.Text.TextSpan span, string newText)
Microsoft.CodeAnalysis.Text.TextChangeEventArgs
Microsoft.CodeAnalysis.Text.TextChangeEventArgs.Changes.get
Microsoft.CodeAnalysis.Text.TextChangeEventArgs.NewText.get
Microsoft.CodeAnalysis.Text.TextChangeEventArgs.OldText.get
Microsoft.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText oldText, Microsoft.CodeAnalysis.Text.SourceText newText, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextChangeRange> changes)
Microsoft.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText oldText, Microsoft.CodeAnalysis.Text.SourceText newText, params Microsoft.CodeAnalysis.Text.TextChangeRange[] changes)
Microsoft.CodeAnalysis.Text.TextChangeRange
Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(Microsoft.CodeAnalysis.Text.TextChangeRange other)
Microsoft.CodeAnalysis.Text.TextChangeRange.NewLength.get
Microsoft.CodeAnalysis.Text.TextChangeRange.Span.get
Microsoft.CodeAnalysis.Text.TextChangeRange.TextChangeRange(Microsoft.CodeAnalysis.Text.TextSpan span, int newLength)
Microsoft.CodeAnalysis.Text.TextLine
Microsoft.CodeAnalysis.Text.TextLine.End.get
Microsoft.CodeAnalysis.Text.TextLine.EndIncludingLineBreak.get
Microsoft.CodeAnalysis.Text.TextLine.Equals(Microsoft.CodeAnalysis.Text.TextLine other)
Microsoft.CodeAnalysis.Text.TextLine.LineNumber.get
Microsoft.CodeAnalysis.Text.TextLine.Span.get
Microsoft.CodeAnalysis.Text.TextLine.SpanIncludingLineBreak.get
Microsoft.CodeAnalysis.Text.TextLine.Start.get
Microsoft.CodeAnalysis.Text.TextLine.Text.get
Microsoft.CodeAnalysis.Text.TextLineCollection
Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator
Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.Current.get
Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.MoveNext()
Microsoft.CodeAnalysis.Text.TextLineCollection.GetEnumerator()
Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePositionSpan(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(Microsoft.CodeAnalysis.Text.LinePosition position)
Microsoft.CodeAnalysis.Text.TextLineCollection.GetTextSpan(Microsoft.CodeAnalysis.Text.LinePositionSpan span)
Microsoft.CodeAnalysis.Text.TextSpan
Microsoft.CodeAnalysis.Text.TextSpan.CompareTo(Microsoft.CodeAnalysis.Text.TextSpan other)
Microsoft.CodeAnalysis.Text.TextSpan.Contains(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextSpan.Contains(int position)
Microsoft.CodeAnalysis.Text.TextSpan.End.get
Microsoft.CodeAnalysis.Text.TextSpan.Equals(Microsoft.CodeAnalysis.Text.TextSpan other)
Microsoft.CodeAnalysis.Text.TextSpan.Intersection(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(int position)
Microsoft.CodeAnalysis.Text.TextSpan.IsEmpty.get
Microsoft.CodeAnalysis.Text.TextSpan.Length.get
Microsoft.CodeAnalysis.Text.TextSpan.Overlap(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextSpan.OverlapsWith(Microsoft.CodeAnalysis.Text.TextSpan span)
Microsoft.CodeAnalysis.Text.TextSpan.Start.get
Microsoft.CodeAnalysis.Text.TextSpan.TextSpan(int start, int length)
Microsoft.CodeAnalysis.TypeInfo
Microsoft.CodeAnalysis.TypeInfo.ConvertedType.get
Microsoft.CodeAnalysis.TypeInfo.Equals(Microsoft.CodeAnalysis.TypeInfo other)
Microsoft.CodeAnalysis.TypeInfo.Type.get
Microsoft.CodeAnalysis.TypeKind
Microsoft.CodeAnalysis.TypeKind.Array = 1
Microsoft.CodeAnalysis.TypeKind.Class = 2
Microsoft.CodeAnalysis.TypeKind.Delegate = 3
Microsoft.CodeAnalysis.TypeKind.Dynamic = 4
Microsoft.CodeAnalysis.TypeKind.Enum = 5
Microsoft.CodeAnalysis.TypeKind.Error = 6
Microsoft.CodeAnalysis.TypeKind.Interface = 7
Microsoft.CodeAnalysis.TypeKind.Module = 8
Microsoft.CodeAnalysis.TypeKind.Pointer = 9
Microsoft.CodeAnalysis.TypeKind.Struct = 10
Microsoft.CodeAnalysis.TypeKind.Structure = 10
Microsoft.CodeAnalysis.TypeKind.Submission = 12
Microsoft.CodeAnalysis.TypeKind.TypeParameter = 11
Microsoft.CodeAnalysis.TypeKind.Unknown = 0
Microsoft.CodeAnalysis.TypeParameterKind
Microsoft.CodeAnalysis.TypeParameterKind.Cref = 2
Microsoft.CodeAnalysis.TypeParameterKind.Method = 1
Microsoft.CodeAnalysis.TypeParameterKind.Type = 0
Microsoft.CodeAnalysis.TypedConstant
Microsoft.CodeAnalysis.TypedConstant.Equals(Microsoft.CodeAnalysis.TypedConstant other)
Microsoft.CodeAnalysis.TypedConstant.IsNull.get
Microsoft.CodeAnalysis.TypedConstant.Kind.get
Microsoft.CodeAnalysis.TypedConstant.Type.get
Microsoft.CodeAnalysis.TypedConstant.Value.get
Microsoft.CodeAnalysis.TypedConstant.Values.get
Microsoft.CodeAnalysis.TypedConstantKind
Microsoft.CodeAnalysis.TypedConstantKind.Array = 4
Microsoft.CodeAnalysis.TypedConstantKind.Enum = 2
Microsoft.CodeAnalysis.TypedConstantKind.Error = 0
Microsoft.CodeAnalysis.TypedConstantKind.Primitive = 1
Microsoft.CodeAnalysis.TypedConstantKind.Type = 3
Microsoft.CodeAnalysis.UnresolvedMetadataReference
Microsoft.CodeAnalysis.UnresolvedMetadataReference.Reference.get
Microsoft.CodeAnalysis.VarianceKind
Microsoft.CodeAnalysis.VarianceKind.In = 2
Microsoft.CodeAnalysis.VarianceKind.None = 0
Microsoft.CodeAnalysis.VarianceKind.Out = 1
Microsoft.CodeAnalysis.WellKnownDiagnosticTags
Microsoft.CodeAnalysis.WellKnownMemberNames
Microsoft.CodeAnalysis.XmlReferenceResolver
Microsoft.CodeAnalysis.XmlReferenceResolver.XmlReferenceResolver()
abstract Microsoft.CodeAnalysis.AdditionalText.GetText(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.AdditionalText.Path.get
abstract Microsoft.CodeAnalysis.AttributeData.CommonApplicationSyntaxReference.get
abstract Microsoft.CodeAnalysis.AttributeData.CommonAttributeClass.get
abstract Microsoft.CodeAnalysis.AttributeData.CommonAttributeConstructor.get
abstract Microsoft.CodeAnalysis.AttributeData.CommonConstructorArguments.get
abstract Microsoft.CodeAnalysis.AttributeData.CommonNamedArguments.get
abstract Microsoft.CodeAnalysis.Compilation.AppendDefaultVersionResource(System.IO.Stream resourceStream)
abstract Microsoft.CodeAnalysis.Compilation.CommonAddSyntaxTrees(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree> trees)
abstract Microsoft.CodeAnalysis.Compilation.CommonAssembly.get
abstract Microsoft.CodeAnalysis.Compilation.CommonClone()
abstract Microsoft.CodeAnalysis.Compilation.CommonContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree syntaxTree)
abstract Microsoft.CodeAnalysis.Compilation.CommonCreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol elementType, int rank)
abstract Microsoft.CodeAnalysis.Compilation.CommonCreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol elementType)
abstract Microsoft.CodeAnalysis.Compilation.CommonDynamicType.get
abstract Microsoft.CodeAnalysis.Compilation.CommonGetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference reference)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol namespaceSymbol)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetEntryPoint(System.Threading.CancellationToken cancellationToken)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetMetadataReference(Microsoft.CodeAnalysis.IAssemblySymbol assemblySymbol)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree syntaxTree, bool ignoreAccessibility)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetSpecialType(Microsoft.CodeAnalysis.SpecialType specialType)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetSubmissionResultType(out bool hasValue)
abstract Microsoft.CodeAnalysis.Compilation.CommonGetTypeByMetadataName(string metadataName)
abstract Microsoft.CodeAnalysis.Compilation.CommonGlobalNamespace.get
abstract Microsoft.CodeAnalysis.Compilation.CommonObjectType.get
abstract Microsoft.CodeAnalysis.Compilation.CommonOptions.get
abstract Microsoft.CodeAnalysis.Compilation.CommonPreviousSubmission.get
abstract Microsoft.CodeAnalysis.Compilation.CommonRemoveAllSyntaxTrees()
abstract Microsoft.CodeAnalysis.Compilation.CommonRemoveSyntaxTrees(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree> trees)
abstract Microsoft.CodeAnalysis.Compilation.CommonReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree oldTree, Microsoft.CodeAnalysis.SyntaxTree newTree)
abstract Microsoft.CodeAnalysis.Compilation.CommonScriptClass.get
abstract Microsoft.CodeAnalysis.Compilation.CommonSourceModule.get
abstract Microsoft.CodeAnalysis.Compilation.CommonSyntaxTrees.get
abstract Microsoft.CodeAnalysis.Compilation.CommonWithAssemblyName(string outputName)
abstract Microsoft.CodeAnalysis.Compilation.CommonWithOptions(Microsoft.CodeAnalysis.CompilationOptions options)
abstract Microsoft.CodeAnalysis.Compilation.CommonWithPreviousSubmission(Microsoft.CodeAnalysis.Compilation newPreviousSubmission)
abstract Microsoft.CodeAnalysis.Compilation.CommonWithReferences(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference> newReferences)
abstract Microsoft.CodeAnalysis.Compilation.ContainsSymbolsWithName(System.Func<string, bool> predicate, Microsoft.CodeAnalysis.SymbolFilter filter = Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.CreateErrorTypeSymbol(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container, string name, int arity)
abstract Microsoft.CodeAnalysis.Compilation.DirectiveReferences.get
abstract Microsoft.CodeAnalysis.Compilation.GetDeclarationDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.GetDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.GetMethodBodyDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.GetParseDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.GetSymbolsWithName(System.Func<string, bool> predicate, Microsoft.CodeAnalysis.SymbolFilter filter = Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.Compilation.IsCaseSensitive.get
abstract Microsoft.CodeAnalysis.Compilation.Language.get
abstract Microsoft.CodeAnalysis.Compilation.ReferencedAssemblyNames.get
abstract Microsoft.CodeAnalysis.Compilation.ToMetadataReference(System.Collections.Immutable.ImmutableArray<string> aliases = default(System.Collections.Immutable.ImmutableArray<string>), bool embedInteropTypes = false)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithFeatures(System.Collections.Immutable.ImmutableArray<string> features)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver resolver)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel value)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithOutputKind(Microsoft.CodeAnalysis.OutputKind kind)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithPlatform(Microsoft.CodeAnalysis.Platform platform)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver resolver)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, Microsoft.CodeAnalysis.ReportDiagnostic>> specificDiagnosticOptions)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary<string, Microsoft.CodeAnalysis.ReportDiagnostic> specificDiagnosticOptions)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider provider)
abstract Microsoft.CodeAnalysis.CompilationOptions.CommonWithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver resolver)
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.EndPointIsReachable.get
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.EntryPoints.get
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.ExitPoints.get
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.ReturnStatements.get
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.StartPointIsReachable.get
abstract Microsoft.CodeAnalysis.ControlFlowAnalysis.Succeeded.get
abstract Microsoft.CodeAnalysis.CustomModifier.IsOptional.get
abstract Microsoft.CodeAnalysis.CustomModifier.Modifier.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.AlwaysAssigned.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.Captured.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.DataFlowsIn.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.DataFlowsOut.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.ReadInside.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.ReadOutside.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.Succeeded.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.UnsafeAddressTaken.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.VariablesDeclared.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.WrittenInside.get
abstract Microsoft.CodeAnalysis.DataFlowAnalysis.WrittenOutside.get
abstract Microsoft.CodeAnalysis.Diagnostic.AdditionalLocations.get
abstract Microsoft.CodeAnalysis.Diagnostic.Descriptor.get
abstract Microsoft.CodeAnalysis.Diagnostic.Equals(Microsoft.CodeAnalysis.Diagnostic obj)
abstract Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider formatProvider = null)
abstract Microsoft.CodeAnalysis.Diagnostic.Id.get
abstract Microsoft.CodeAnalysis.Diagnostic.Location.get
abstract Microsoft.CodeAnalysis.Diagnostic.Severity.get
abstract Microsoft.CodeAnalysis.Diagnostic.WarningLevel.get
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockStartAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationStartAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSemanticModelAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext> action, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolKind> symbolKinds)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxTreeAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.FullPath.get
abstract Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzers(string language)
abstract Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzersForAllLanguages()
abstract Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterCodeBlockEndAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>.RegisterSyntaxNodeAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockStartAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext<TLanguageKindEnum>> action)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCompilationEndAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSemanticModelAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext> action, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolKind> symbolKinds)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction<TLanguageKindEnum>(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext> action, System.Collections.Immutable.ImmutableArray<TLanguageKindEnum> syntaxKinds)
abstract Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxTreeAction(System.Action<Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext> action)
abstract Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext context)
abstract Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics.get
abstract Microsoft.CodeAnalysis.DocumentationProvider.GetDocumentationForSymbol(string documentationMemberID, System.Globalization.CultureInfo preferredCulture, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.LocalizableString.AreEqual(object other)
abstract Microsoft.CodeAnalysis.LocalizableString.GetHash()
abstract Microsoft.CodeAnalysis.LocalizableString.GetText(System.IFormatProvider formatProvider)
abstract Microsoft.CodeAnalysis.Location.Kind.get
abstract Microsoft.CodeAnalysis.Metadata.CommonCopy()
abstract Microsoft.CodeAnalysis.Metadata.Dispose()
abstract Microsoft.CodeAnalysis.Metadata.Kind.get
abstract Microsoft.CodeAnalysis.MetadataReferenceResolver.ResolveReference(string reference, string baseFilePath, Microsoft.CodeAnalysis.MetadataReferenceProperties properties)
abstract Microsoft.CodeAnalysis.ParseOptions.CommonWithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode documentationMode)
abstract Microsoft.CodeAnalysis.ParseOptions.CommonWithFeatures(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> features)
abstract Microsoft.CodeAnalysis.ParseOptions.CommonWithKind(Microsoft.CodeAnalysis.SourceCodeKind kind)
abstract Microsoft.CodeAnalysis.ParseOptions.Features.get
abstract Microsoft.CodeAnalysis.ParseOptions.PreprocessorSymbolNames.get
abstract Microsoft.CodeAnalysis.PortableExecutableReference.CreateDocumentationProvider()
abstract Microsoft.CodeAnalysis.PortableExecutableReference.GetMetadataImpl()
abstract Microsoft.CodeAnalysis.PortableExecutableReference.WithPropertiesImpl(Microsoft.CodeAnalysis.MetadataReferenceProperties properties)
abstract Microsoft.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Microsoft.CodeAnalysis.SyntaxNode firstStatement, Microsoft.CodeAnalysis.SyntaxNode lastStatement)
abstract Microsoft.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Microsoft.CodeAnalysis.SyntaxNode statement)
abstract Microsoft.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Microsoft.CodeAnalysis.SyntaxNode firstStatement, Microsoft.CodeAnalysis.SyntaxNode lastStatement)
abstract Microsoft.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Microsoft.CodeAnalysis.SyntaxNode statementOrExpression)
abstract Microsoft.CodeAnalysis.SemanticModel.CompilationCore.get
abstract Microsoft.CodeAnalysis.SemanticModel.GetAliasInfoCore(Microsoft.CodeAnalysis.SyntaxNode nameSyntax, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetConstantValueCore(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetDeclarationDiagnostics(Microsoft.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetDeclaredSymbolCore(Microsoft.CodeAnalysis.SyntaxNode declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetDeclaredSymbolsCore(Microsoft.CodeAnalysis.SyntaxNode declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetDiagnostics(Microsoft.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetEnclosingSymbolCore(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetMemberGroupCore(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetMethodBodyDiagnostics(Microsoft.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfoCore(Microsoft.CodeAnalysis.SyntaxNode nameSyntax)
abstract Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeAliasInfoCore(int position, Microsoft.CodeAnalysis.SyntaxNode nameSyntax, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
abstract Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeSymbolInfoCore(int position, Microsoft.CodeAnalysis.SyntaxNode expression, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
abstract Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeTypeInfoCore(int position, Microsoft.CodeAnalysis.SyntaxNode expression, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
abstract Microsoft.CodeAnalysis.SemanticModel.GetSymbolInfoCore(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetSyntaxDiagnostics(Microsoft.CodeAnalysis.Text.TextSpan? span = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.GetTypeInfoCore(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SemanticModel.IsAccessibleCore(int position, Microsoft.CodeAnalysis.ISymbol symbol)
abstract Microsoft.CodeAnalysis.SemanticModel.IsEventUsableAsFieldCore(int position, Microsoft.CodeAnalysis.IEventSymbol eventSymbol)
abstract Microsoft.CodeAnalysis.SemanticModel.IsSpeculativeSemanticModel.get
abstract Microsoft.CodeAnalysis.SemanticModel.Language.get
abstract Microsoft.CodeAnalysis.SemanticModel.LookupBaseMembersCore(int position, string name)
abstract Microsoft.CodeAnalysis.SemanticModel.LookupLabelsCore(int position, string name)
abstract Microsoft.CodeAnalysis.SemanticModel.LookupNamespacesAndTypesCore(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container, string name)
abstract Microsoft.CodeAnalysis.SemanticModel.LookupStaticMembersCore(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container, string name)
abstract Microsoft.CodeAnalysis.SemanticModel.LookupSymbolsCore(int position, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol container, string name, bool includeReducedExtensionMethods)
abstract Microsoft.CodeAnalysis.SemanticModel.OriginalPositionForSpeculation.get
abstract Microsoft.CodeAnalysis.SemanticModel.ParentModelCore.get
abstract Microsoft.CodeAnalysis.SemanticModel.SyntaxTreeCore.get
abstract Microsoft.CodeAnalysis.SourceReferenceResolver.NormalizePath(string path, string baseFilePath)
abstract Microsoft.CodeAnalysis.SourceReferenceResolver.OpenRead(string resolvedPath)
abstract Microsoft.CodeAnalysis.SourceReferenceResolver.ResolveReference(string path, string baseFilePath)
abstract Microsoft.CodeAnalysis.SyntaxNode.ChildThatContainsPosition(int position)
abstract Microsoft.CodeAnalysis.SyntaxNode.EquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode other)
abstract Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(int position, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, bool> stepInto)
abstract Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(int position, bool findInsideTrivia)
abstract Microsoft.CodeAnalysis.SyntaxNode.FindTriviaCore(int position, bool findInsideTrivia)
abstract Microsoft.CodeAnalysis.SyntaxNode.InsertNodesInListCore(Microsoft.CodeAnalysis.SyntaxNode nodeInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> nodesToInsert, bool insertBefore)
abstract Microsoft.CodeAnalysis.SyntaxNode.InsertTokensInListCore(Microsoft.CodeAnalysis.SyntaxToken originalToken, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens, bool insertBefore)
abstract Microsoft.CodeAnalysis.SyntaxNode.InsertTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia originalTrivia, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia, bool insertBefore)
abstract Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode node, bool topLevel = false)
abstract Microsoft.CodeAnalysis.SyntaxNode.KindText.get
abstract Microsoft.CodeAnalysis.SyntaxNode.Language.get
abstract Microsoft.CodeAnalysis.SyntaxNode.NormalizeWhitespaceCore(string indentation, bool elasticTrivia)
abstract Microsoft.CodeAnalysis.SyntaxNode.RemoveNodesCore(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> nodes, Microsoft.CodeAnalysis.SyntaxRemoveOptions options)
abstract Microsoft.CodeAnalysis.SyntaxNode.ReplaceCore<TNode>(System.Collections.Generic.IEnumerable<TNode> nodes = null, System.Func<TNode, TNode, Microsoft.CodeAnalysis.SyntaxNode> computeReplacementNode = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> tokens = null, System.Func<Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken> computeReplacementToken = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia = null, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia> computeReplacementTrivia = null)
abstract Microsoft.CodeAnalysis.SyntaxNode.ReplaceNodeInListCore(Microsoft.CodeAnalysis.SyntaxNode originalNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> replacementNodes)
abstract Microsoft.CodeAnalysis.SyntaxNode.ReplaceTokenInListCore(Microsoft.CodeAnalysis.SyntaxToken originalToken, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens)
abstract Microsoft.CodeAnalysis.SyntaxNode.ReplaceTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia originalTrivia, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia)
abstract Microsoft.CodeAnalysis.SyntaxNode.SerializeTo(System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxNode.SyntaxTreeCore.get
abstract Microsoft.CodeAnalysis.SyntaxNode.ToFullString()
abstract Microsoft.CodeAnalysis.SyntaxNode.WriteTo(System.IO.TextWriter writer)
abstract Microsoft.CodeAnalysis.SyntaxReference.GetSyntax(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxReference.Span.get
abstract Microsoft.CodeAnalysis.SyntaxReference.SyntaxTree.get
abstract Microsoft.CodeAnalysis.SyntaxTree.Encoding.get
abstract Microsoft.CodeAnalysis.SyntaxTree.FilePath.get
abstract Microsoft.CodeAnalysis.SyntaxTree.GetChangedSpans(Microsoft.CodeAnalysis.SyntaxTree syntaxTree)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetChanges(Microsoft.CodeAnalysis.SyntaxTree oldTree)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNode node)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxToken token)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxTree.GetLineSpan(Microsoft.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxTree.GetLocation(Microsoft.CodeAnalysis.Text.TextSpan span)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetMappedLineSpan(Microsoft.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxTree.GetReference(Microsoft.CodeAnalysis.SyntaxNode node)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetRootAsyncCore(System.Threading.CancellationToken cancellationToken)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetRootCore(System.Threading.CancellationToken cancellationToken)
abstract Microsoft.CodeAnalysis.SyntaxTree.GetText(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
abstract Microsoft.CodeAnalysis.SyntaxTree.HasCompilationUnitRoot.get
abstract Microsoft.CodeAnalysis.SyntaxTree.HasHiddenRegions()
abstract Microsoft.CodeAnalysis.SyntaxTree.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTree tree, bool topLevel = false)
abstract Microsoft.CodeAnalysis.SyntaxTree.Length.get
abstract Microsoft.CodeAnalysis.SyntaxTree.OptionsCore.get
abstract Microsoft.CodeAnalysis.SyntaxTree.TryGetRootCore(out Microsoft.CodeAnalysis.SyntaxNode root)
abstract Microsoft.CodeAnalysis.SyntaxTree.TryGetText(out Microsoft.CodeAnalysis.Text.SourceText text)
abstract Microsoft.CodeAnalysis.SyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText newText)
abstract Microsoft.CodeAnalysis.SyntaxTree.WithFilePath(string path)
abstract Microsoft.CodeAnalysis.SyntaxTree.WithRootAndOptions(Microsoft.CodeAnalysis.SyntaxNode root, Microsoft.CodeAnalysis.ParseOptions options)
abstract Microsoft.CodeAnalysis.Text.SourceText.CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)
abstract Microsoft.CodeAnalysis.Text.SourceText.Encoding.get
abstract Microsoft.CodeAnalysis.Text.SourceText.Length.get
abstract Microsoft.CodeAnalysis.Text.SourceText.this[int position].get
abstract Microsoft.CodeAnalysis.Text.SourceTextContainer.CurrentText.get
abstract Microsoft.CodeAnalysis.Text.SourceTextContainer.TextChanged
abstract Microsoft.CodeAnalysis.Text.TextLineCollection.Count.get
abstract Microsoft.CodeAnalysis.Text.TextLineCollection.IndexOf(int position)
abstract Microsoft.CodeAnalysis.Text.TextLineCollection.this[int index].get
abstract Microsoft.CodeAnalysis.XmlReferenceResolver.OpenRead(string resolvedPath)
abstract Microsoft.CodeAnalysis.XmlReferenceResolver.ResolveReference(string path, string baseFilePath)
const Microsoft.CodeAnalysis.LanguageNames.CSharp = "C#"
const Microsoft.CodeAnalysis.LanguageNames.VisualBasic = "Visual Basic"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.AnalyzerException = "AnalyzerException"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Build = "Build"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Compiler = "Compiler"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.EditAndContinue = "EditAndContinue"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.NotConfigurable = "NotConfigurable"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Telemetry = "Telemetry"
const Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Unnecessary = "Unnecessary"
const Microsoft.CodeAnalysis.WellKnownMemberNames.AdditionOperatorName = "op_Addition"
const Microsoft.CodeAnalysis.WellKnownMemberNames.BitwiseAndOperatorName = "op_BitwiseAnd"
const Microsoft.CodeAnalysis.WellKnownMemberNames.BitwiseOrOperatorName = "op_BitwiseOr"
const Microsoft.CodeAnalysis.WellKnownMemberNames.CollectionInitializerAddMethodName = "Add"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ConcatenateOperatorName = "op_Concatenate"
const Microsoft.CodeAnalysis.WellKnownMemberNames.CurrentPropertyName = "Current"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DecrementOperatorName = "op_Decrement"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DefaultScriptClassName = "Script"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateBeginInvokeName = "BeginInvoke"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateEndInvokeName = "EndInvoke"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateInvokeName = "Invoke"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DestructorName = "Finalize"
const Microsoft.CodeAnalysis.WellKnownMemberNames.DivisionOperatorName = "op_Division"
const Microsoft.CodeAnalysis.WellKnownMemberNames.EntryPointMethodName = "Main"
const Microsoft.CodeAnalysis.WellKnownMemberNames.EnumBackingFieldName = "value__"
const Microsoft.CodeAnalysis.WellKnownMemberNames.EqualityOperatorName = "op_Equality"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ExclusiveOrOperatorName = "op_ExclusiveOr"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ExplicitConversionName = "op_Explicit"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ExponentOperatorName = "op_Exponent"
const Microsoft.CodeAnalysis.WellKnownMemberNames.FalseOperatorName = "op_False"
const Microsoft.CodeAnalysis.WellKnownMemberNames.GetAwaiter = "GetAwaiter"
const Microsoft.CodeAnalysis.WellKnownMemberNames.GetEnumeratorMethodName = "GetEnumerator"
const Microsoft.CodeAnalysis.WellKnownMemberNames.GetResult = "GetResult"
const Microsoft.CodeAnalysis.WellKnownMemberNames.GreaterThanOperatorName = "op_GreaterThan"
const Microsoft.CodeAnalysis.WellKnownMemberNames.GreaterThanOrEqualOperatorName = "op_GreaterThanOrEqual"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ImplicitConversionName = "op_Implicit"
const Microsoft.CodeAnalysis.WellKnownMemberNames.IncrementOperatorName = "op_Increment"
const Microsoft.CodeAnalysis.WellKnownMemberNames.Indexer = "this[]"
const Microsoft.CodeAnalysis.WellKnownMemberNames.InequalityOperatorName = "op_Inequality"
const Microsoft.CodeAnalysis.WellKnownMemberNames.InstanceConstructorName = ".ctor"
const Microsoft.CodeAnalysis.WellKnownMemberNames.IntegerDivisionOperatorName = "op_IntegerDivision"
const Microsoft.CodeAnalysis.WellKnownMemberNames.IsCompleted = "IsCompleted"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LeftShiftOperatorName = "op_LeftShift"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LessThanOperatorName = "op_LessThan"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LessThanOrEqualOperatorName = "op_LessThanOrEqual"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LikeOperatorName = "op_Like"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalAndOperatorName = "op_LogicalAnd"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalNotOperatorName = "op_LogicalNot"
const Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalOrOperatorName = "op_LogicalOr"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ModulusOperatorName = "op_Modulus"
const Microsoft.CodeAnalysis.WellKnownMemberNames.MoveNextMethodName = "MoveNext"
const Microsoft.CodeAnalysis.WellKnownMemberNames.MultiplyOperatorName = "op_Multiply"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectEquals = "Equals"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectGetHashCode = "GetHashCode"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectToString = "ToString"
const Microsoft.CodeAnalysis.WellKnownMemberNames.OnCompleted = "OnCompleted"
const Microsoft.CodeAnalysis.WellKnownMemberNames.OnesComplementOperatorName = "op_OnesComplement"
const Microsoft.CodeAnalysis.WellKnownMemberNames.RightShiftOperatorName = "op_RightShift"
const Microsoft.CodeAnalysis.WellKnownMemberNames.StaticConstructorName = ".cctor"
const Microsoft.CodeAnalysis.WellKnownMemberNames.SubtractionOperatorName = "op_Subtraction"
const Microsoft.CodeAnalysis.WellKnownMemberNames.TrueOperatorName = "op_True"
const Microsoft.CodeAnalysis.WellKnownMemberNames.UnaryNegationOperatorName = "op_UnaryNegation"
const Microsoft.CodeAnalysis.WellKnownMemberNames.UnaryPlusOperatorName = "op_UnaryPlus"
const Microsoft.CodeAnalysis.WellKnownMemberNames.UnsignedLeftShiftOperatorName = "op_UnsignedLeftShift"
const Microsoft.CodeAnalysis.WellKnownMemberNames.UnsignedRightShiftOperatorName = "op_UnsignedRightShift"
const Microsoft.CodeAnalysis.WellKnownMemberNames.ValuePropertyName = "Value"
override Microsoft.CodeAnalysis.AssemblyIdentity.Equals(object obj)
override Microsoft.CodeAnalysis.AssemblyIdentity.GetHashCode()
override Microsoft.CodeAnalysis.AssemblyIdentity.ToString()
override Microsoft.CodeAnalysis.AssemblyMetadata.CommonCopy()
override Microsoft.CodeAnalysis.AssemblyMetadata.Dispose()
override Microsoft.CodeAnalysis.AssemblyMetadata.Kind.get
override Microsoft.CodeAnalysis.ChildSyntaxList.Equals(object obj)
override Microsoft.CodeAnalysis.ChildSyntaxList.GetHashCode()
override Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Equals(object obj)
override Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.GetHashCode()
override Microsoft.CodeAnalysis.CompilationReference.Display.get
override Microsoft.CodeAnalysis.Diagnostic.ToString()
override Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(object obj)
override Microsoft.CodeAnalysis.DiagnosticDescriptor.GetHashCode()
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.Display.get
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.FullPath.get
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzers(string language)
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzersForAllLanguages()
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.Equals(object obj)
override Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.GetHashCode()
override Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.Display.get
override Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.FullPath.get
override Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzers(string language)
override Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzersForAllLanguages()
override Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.IsUnresolved.get
override Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(object obj)
override Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode()
override Microsoft.CodeAnalysis.Emit.SemanticEdit.Equals(object obj)
override Microsoft.CodeAnalysis.Emit.SemanticEdit.GetHashCode()
override Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(object other)
override Microsoft.CodeAnalysis.FileLinePositionSpan.GetHashCode()
override Microsoft.CodeAnalysis.FileLinePositionSpan.ToString()
override Microsoft.CodeAnalysis.LocalizableResourceString.AreEqual(object other)
override Microsoft.CodeAnalysis.LocalizableResourceString.GetHash()
override Microsoft.CodeAnalysis.LocalizableResourceString.GetText(System.IFormatProvider formatProvider)
override sealed Microsoft.CodeAnalysis.LocalizableString.Equals(object other)
override sealed Microsoft.CodeAnalysis.LocalizableString.GetHashCode()
override Microsoft.CodeAnalysis.Location.ToString()
override Microsoft.CodeAnalysis.MetadataReferenceProperties.Equals(object obj)
override Microsoft.CodeAnalysis.MetadataReferenceProperties.GetHashCode()
override Microsoft.CodeAnalysis.ModuleMetadata.CommonCopy()
override Microsoft.CodeAnalysis.ModuleMetadata.Dispose()
override Microsoft.CodeAnalysis.ModuleMetadata.Kind.get
override Microsoft.CodeAnalysis.PortableExecutableReference.Display.get
override Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Equals(object obj)
override Microsoft.CodeAnalysis.PreprocessingSymbolInfo.GetHashCode()
override Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.Equals(object obj)
override Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.GetHashCode()
override Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.ToString()
override Microsoft.CodeAnalysis.SubsystemVersion.Equals(object obj)
override Microsoft.CodeAnalysis.SubsystemVersion.GetHashCode()
override Microsoft.CodeAnalysis.SubsystemVersion.ToString()
override Microsoft.CodeAnalysis.SymbolDisplayPart.ToString()
override Microsoft.CodeAnalysis.SymbolInfo.Equals(object obj)
override Microsoft.CodeAnalysis.SymbolInfo.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxAnnotation.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxList<TNode>.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxList<TNode>.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxList<TNode>.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxList<TNode>.ToString()
override Microsoft.CodeAnalysis.SyntaxNodeOrToken.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxNodeOrToken.ToString()
override Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ToString()
override Microsoft.CodeAnalysis.SyntaxToken.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxToken.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxToken.ToString()
override Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTokenList.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTokenList.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTokenList.ToString()
override Microsoft.CodeAnalysis.SyntaxTrivia.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTrivia.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTrivia.ToString()
override Microsoft.CodeAnalysis.SyntaxTriviaList.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTriviaList.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(object obj)
override Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetHashCode()
override Microsoft.CodeAnalysis.SyntaxTriviaList.ToString()
override Microsoft.CodeAnalysis.Text.LinePosition.Equals(object obj)
override Microsoft.CodeAnalysis.Text.LinePosition.GetHashCode()
override Microsoft.CodeAnalysis.Text.LinePosition.ToString()
override Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(object obj)
override Microsoft.CodeAnalysis.Text.LinePositionSpan.GetHashCode()
override Microsoft.CodeAnalysis.Text.LinePositionSpan.ToString()
override Microsoft.CodeAnalysis.Text.SourceText.ToString()
override Microsoft.CodeAnalysis.Text.TextChange.Equals(object obj)
override Microsoft.CodeAnalysis.Text.TextChange.GetHashCode()
override Microsoft.CodeAnalysis.Text.TextChange.ToString()
override Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(object obj)
override Microsoft.CodeAnalysis.Text.TextChangeRange.GetHashCode()
override Microsoft.CodeAnalysis.Text.TextLine.Equals(object obj)
override Microsoft.CodeAnalysis.Text.TextLine.GetHashCode()
override Microsoft.CodeAnalysis.Text.TextLine.ToString()
override Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.Equals(object obj)
override Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.GetHashCode()
override Microsoft.CodeAnalysis.Text.TextSpan.Equals(object obj)
override Microsoft.CodeAnalysis.Text.TextSpan.GetHashCode()
override Microsoft.CodeAnalysis.Text.TextSpan.ToString()
override Microsoft.CodeAnalysis.TypeInfo.Equals(object obj)
override Microsoft.CodeAnalysis.TypeInfo.GetHashCode()
override Microsoft.CodeAnalysis.TypedConstant.Equals(object obj)
override Microsoft.CodeAnalysis.TypedConstant.GetHashCode()
override Microsoft.CodeAnalysis.UnresolvedMetadataReference.Display.get
override abstract Microsoft.CodeAnalysis.CompilationOptions.Equals(object obj)
override abstract Microsoft.CodeAnalysis.CompilationOptions.GetHashCode()
override abstract Microsoft.CodeAnalysis.Diagnostic.Equals(object obj)
override abstract Microsoft.CodeAnalysis.Diagnostic.GetHashCode()
override abstract Microsoft.CodeAnalysis.DocumentationProvider.Equals(object obj)
override abstract Microsoft.CodeAnalysis.DocumentationProvider.GetHashCode()
override abstract Microsoft.CodeAnalysis.Location.Equals(object obj)
override abstract Microsoft.CodeAnalysis.Location.GetHashCode()
override abstract Microsoft.CodeAnalysis.MetadataReferenceResolver.Equals(object other)
override abstract Microsoft.CodeAnalysis.MetadataReferenceResolver.GetHashCode()
override abstract Microsoft.CodeAnalysis.ParseOptions.Equals(object obj)
override abstract Microsoft.CodeAnalysis.ParseOptions.GetHashCode()
override abstract Microsoft.CodeAnalysis.SourceReferenceResolver.Equals(object other)
override abstract Microsoft.CodeAnalysis.SourceReferenceResolver.GetHashCode()
override abstract Microsoft.CodeAnalysis.StrongNameProvider.Equals(object other)
override abstract Microsoft.CodeAnalysis.StrongNameProvider.GetHashCode()
override abstract Microsoft.CodeAnalysis.SyntaxNode.ToString()
override abstract Microsoft.CodeAnalysis.XmlReferenceResolver.Equals(object other)
override abstract Microsoft.CodeAnalysis.XmlReferenceResolver.GetHashCode()
override sealed Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(object obj)
override sealed Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode()
override sealed Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString()
override sealed Microsoft.CodeAnalysis.LocalizableString.ToString()
readonly Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
readonly Microsoft.CodeAnalysis.Emit.SemanticEdit.Kind
readonly Microsoft.CodeAnalysis.Emit.SemanticEdit.NewSymbol
readonly Microsoft.CodeAnalysis.Emit.SemanticEdit.OldSymbol
readonly Microsoft.CodeAnalysis.Emit.SemanticEdit.PreserveLocalVariables
readonly Microsoft.CodeAnalysis.Emit.SemanticEdit.SyntaxMap
readonly Microsoft.CodeAnalysis.SubsystemVersion.Major
readonly Microsoft.CodeAnalysis.SubsystemVersion.Minor
readonly Microsoft.CodeAnalysis.SyntaxWalker.Depth
static Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations<TNode>(this TNode node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
static Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations<TNode>(this TNode node, params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
static Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxAnnotation> annotations)
static Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode node, params Microsoft.CodeAnalysis.SyntaxAnnotation[] annotations)
static Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations<TNode>(this TNode node, string annotationKind)
static Microsoft.CodeAnalysis.AssemblyIdentity.FromAssemblyDefinition(System.Reflection.Assembly assembly)
static Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(string displayName, out Microsoft.CodeAnalysis.AssemblyIdentity identity)
static Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(string displayName, out Microsoft.CodeAnalysis.AssemblyIdentity identity, out Microsoft.CodeAnalysis.AssemblyIdentityParts parts)
static Microsoft.CodeAnalysis.AssemblyIdentity.operator !=(Microsoft.CodeAnalysis.AssemblyIdentity left, Microsoft.CodeAnalysis.AssemblyIdentity right)
static Microsoft.CodeAnalysis.AssemblyIdentity.operator ==(Microsoft.CodeAnalysis.AssemblyIdentity left, Microsoft.CodeAnalysis.AssemblyIdentity right)
static Microsoft.CodeAnalysis.AssemblyIdentityComparer.CultureComparer.get
static Microsoft.CodeAnalysis.AssemblyIdentityComparer.SimpleNameComparer.get
static Microsoft.CodeAnalysis.AssemblyMetadata.Create(Microsoft.CodeAnalysis.ModuleMetadata module)
static Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ModuleMetadata> modules)
static Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ModuleMetadata> modules)
static Microsoft.CodeAnalysis.AssemblyMetadata.Create(params Microsoft.CodeAnalysis.ModuleMetadata[] modules)
static Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromFile(string path)
static Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Generic.IEnumerable<byte> peImage)
static Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage)
static Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream peStream, System.Reflection.PortableExecutable.PEStreamOptions options)
static Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream peStream, bool leaveOpen = false)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.Compare(string left, string right)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.Comparer.get
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.EndsWith(string value, string possibleEnd)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.Equals(string left, string right)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.GetHashCode(string value)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Text.StringBuilder builder)
static Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(string value)
static Microsoft.CodeAnalysis.ChildSyntaxList.operator !=(Microsoft.CodeAnalysis.ChildSyntaxList list1, Microsoft.CodeAnalysis.ChildSyntaxList list2)
static Microsoft.CodeAnalysis.ChildSyntaxList.operator ==(Microsoft.CodeAnalysis.ChildSyntaxList list1, Microsoft.CodeAnalysis.ChildSyntaxList list2)
static Microsoft.CodeAnalysis.CompilationOptions.operator !=(Microsoft.CodeAnalysis.CompilationOptions left, Microsoft.CodeAnalysis.CompilationOptions right)
static Microsoft.CodeAnalysis.CompilationOptions.operator ==(Microsoft.CodeAnalysis.CompilationOptions left, Microsoft.CodeAnalysis.CompilationOptions right)
static Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, Microsoft.CodeAnalysis.Location location, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location> additionalLocations, System.Collections.Immutable.ImmutableDictionary<string, string> properties, params object[] messageArgs)
static Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, Microsoft.CodeAnalysis.Location location, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location> additionalLocations, params object[] messageArgs)
static Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, Microsoft.CodeAnalysis.Location location, System.Collections.Immutable.ImmutableDictionary<string, string> properties, params object[] messageArgs)
static Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor descriptor, Microsoft.CodeAnalysis.Location location, params object[] messageArgs)
static Microsoft.CodeAnalysis.Diagnostic.Create(string id, string category, Microsoft.CodeAnalysis.LocalizableString message, Microsoft.CodeAnalysis.DiagnosticSeverity severity, Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, int warningLevel, Microsoft.CodeAnalysis.LocalizableString title = null, Microsoft.CodeAnalysis.LocalizableString description = null, string helpLink = null, Microsoft.CodeAnalysis.Location location = null, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Location> additionalLocations = null, System.Collections.Generic.IEnumerable<string> customTags = null, System.Collections.Immutable.ImmutableDictionary<string, string> properties = null)
static Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetEffectiveDiagnostics(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostic> diagnostics, Microsoft.CodeAnalysis.Compilation compilation)
static Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.IsDiagnosticAnalyzerSuppressed(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Microsoft.CodeAnalysis.CompilationOptions options, System.Action<System.Exception, Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer, Microsoft.CodeAnalysis.Diagnostic> onAnalyzerException = null)
static Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(this Microsoft.CodeAnalysis.Compilation compilation, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.Create(System.Collections.Immutable.ImmutableArray<byte> compressedSlotMap, System.Collections.Immutable.ImmutableArray<byte> compressedLambdaMap)
static Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata module, System.Func<System.Reflection.Metadata.MethodDefinitionHandle, Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation> debugInformationProvider)
static Microsoft.CodeAnalysis.Emit.EmitOptions.operator !=(Microsoft.CodeAnalysis.Emit.EmitOptions left, Microsoft.CodeAnalysis.Emit.EmitOptions right)
static Microsoft.CodeAnalysis.Emit.EmitOptions.operator ==(Microsoft.CodeAnalysis.Emit.EmitOptions left, Microsoft.CodeAnalysis.Emit.EmitOptions right)
static Microsoft.CodeAnalysis.ISymbolExtensions.GetConstructedReducedFrom(this Microsoft.CodeAnalysis.IMethodSymbol method)
static Microsoft.CodeAnalysis.LocalizableString.explicit operator string(Microsoft.CodeAnalysis.LocalizableString localizableResource)
static Microsoft.CodeAnalysis.LocalizableString.implicit operator Microsoft.CodeAnalysis.LocalizableString(string fixedResource)
static Microsoft.CodeAnalysis.Location.Create(Microsoft.CodeAnalysis.SyntaxTree syntaxTree, Microsoft.CodeAnalysis.Text.TextSpan textSpan)
static Microsoft.CodeAnalysis.Location.Create(string filePath, Microsoft.CodeAnalysis.Text.TextSpan textSpan, Microsoft.CodeAnalysis.Text.LinePositionSpan lineSpan)
static Microsoft.CodeAnalysis.Location.None.get
static Microsoft.CodeAnalysis.Location.operator !=(Microsoft.CodeAnalysis.Location left, Microsoft.CodeAnalysis.Location right)
static Microsoft.CodeAnalysis.Location.operator ==(Microsoft.CodeAnalysis.Location left, Microsoft.CodeAnalysis.Location right)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly assembly)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly assembly, Microsoft.CodeAnalysis.MetadataReferenceProperties properties, Microsoft.CodeAnalysis.DocumentationProvider documentation = null)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(string path, Microsoft.CodeAnalysis.MetadataReferenceProperties properties = default(Microsoft.CodeAnalysis.MetadataReferenceProperties), Microsoft.CodeAnalysis.DocumentationProvider documentation = null)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable<byte> peImage, Microsoft.CodeAnalysis.MetadataReferenceProperties properties = default(Microsoft.CodeAnalysis.MetadataReferenceProperties), Microsoft.CodeAnalysis.DocumentationProvider documentation = null, string filePath = null)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage, Microsoft.CodeAnalysis.MetadataReferenceProperties properties = default(Microsoft.CodeAnalysis.MetadataReferenceProperties), Microsoft.CodeAnalysis.DocumentationProvider documentation = null, string filePath = null)
static Microsoft.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream peStream, Microsoft.CodeAnalysis.MetadataReferenceProperties properties = default(Microsoft.CodeAnalysis.MetadataReferenceProperties), Microsoft.CodeAnalysis.DocumentationProvider documentation = null, string filePath = null)
static Microsoft.CodeAnalysis.MetadataReferenceProperties.operator !=(Microsoft.CodeAnalysis.MetadataReferenceProperties left, Microsoft.CodeAnalysis.MetadataReferenceProperties right)
static Microsoft.CodeAnalysis.MetadataReferenceProperties.operator ==(Microsoft.CodeAnalysis.MetadataReferenceProperties left, Microsoft.CodeAnalysis.MetadataReferenceProperties right)
static Microsoft.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode firstStatement, Microsoft.CodeAnalysis.SyntaxNode lastStatement)
static Microsoft.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode statement)
static Microsoft.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode firstStatement, Microsoft.CodeAnalysis.SyntaxNode lastStatement)
static Microsoft.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode statementOrExpression)
static Microsoft.CodeAnalysis.ModelExtensions.GetAliasInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode nameSyntax, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.ModelExtensions.GetDeclaredSymbol(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode declaration, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.ModelExtensions.GetMemberGroup(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeAliasInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.SyntaxNode nameSyntax, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
static Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeSymbolInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.SyntaxNode expression, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
static Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeTypeInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, int position, Microsoft.CodeAnalysis.SyntaxNode expression, Microsoft.CodeAnalysis.SpeculativeBindingOption bindingOption)
static Microsoft.CodeAnalysis.ModelExtensions.GetSymbolInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.ModelExtensions.GetTypeInfo(this Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromFile(string path)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Generic.IEnumerable<byte> peImage)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray<byte> peImage)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.IntPtr peImage, int size)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromMetadata(System.IntPtr metadata, int size)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream peStream, System.Reflection.PortableExecutable.PEStreamOptions options)
static Microsoft.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream peStream, bool leaveOpen = false)
static Microsoft.CodeAnalysis.Optional<T>.implicit operator Microsoft.CodeAnalysis.Optional<T>(T value)
static Microsoft.CodeAnalysis.ParseOptions.operator !=(Microsoft.CodeAnalysis.ParseOptions left, Microsoft.CodeAnalysis.ParseOptions right)
static Microsoft.CodeAnalysis.ParseOptions.operator ==(Microsoft.CodeAnalysis.ParseOptions left, Microsoft.CodeAnalysis.ParseOptions right)
static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.operator !=(Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> left, Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> right)
static Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>.operator ==(Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> left, Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode> right)
static Microsoft.CodeAnalysis.SubsystemVersion.Create(int major, int minor)
static Microsoft.CodeAnalysis.SubsystemVersion.TryParse(string str, out Microsoft.CodeAnalysis.SubsystemVersion version)
static Microsoft.CodeAnalysis.SymbolDisplayExtensions.ToDisplayString(this System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SymbolDisplayPart> parts)
static Microsoft.CodeAnalysis.SyntaxAnnotation.operator !=(Microsoft.CodeAnalysis.SyntaxAnnotation left, Microsoft.CodeAnalysis.SyntaxAnnotation right)
static Microsoft.CodeAnalysis.SyntaxAnnotation.operator ==(Microsoft.CodeAnalysis.SyntaxAnnotation left, Microsoft.CodeAnalysis.SyntaxAnnotation right)
static Microsoft.CodeAnalysis.SyntaxList<TNode>.implicit operator Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.SyntaxNode>(Microsoft.CodeAnalysis.SyntaxList<TNode> nodes)
static Microsoft.CodeAnalysis.SyntaxList<TNode>.implicit operator Microsoft.CodeAnalysis.SyntaxList<TNode>(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.SyntaxNode> nodes)
static Microsoft.CodeAnalysis.SyntaxList<TNode>.operator !=(Microsoft.CodeAnalysis.SyntaxList<TNode> left, Microsoft.CodeAnalysis.SyntaxList<TNode> right)
static Microsoft.CodeAnalysis.SyntaxList<TNode>.operator ==(Microsoft.CodeAnalysis.SyntaxList<TNode> left, Microsoft.CodeAnalysis.SyntaxList<TNode> right)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNode<TNode>(this Microsoft.CodeAnalysis.SyntaxNode root, TNode node)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes<TNode>(this Microsoft.CodeAnalysis.SyntaxNode root, System.Collections.Generic.IEnumerable<TNode> nodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes<TNode>(this Microsoft.CodeAnalysis.SyntaxNode root, TNode node)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertNodesAfter<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxNode nodeInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> newNodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertNodesBefore<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxNode nodeInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> newNodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTokensAfter<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTokensBefore<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaAfter<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxTrivia trivia, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaBefore<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxTrivia trivia, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.NormalizeWhitespace<TNode>(this TNode node, string indentation = "    ", bool elasticTrivia = false)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.RemoveNode<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxNode node, Microsoft.CodeAnalysis.SyntaxRemoveOptions options)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.RemoveNodes<TRoot>(this TRoot root, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> nodes, Microsoft.CodeAnalysis.SyntaxRemoveOptions options)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxNode oldNode, Microsoft.CodeAnalysis.SyntaxNode newNode)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxNode oldNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> newNodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNodes<TRoot, TNode>(this TRoot root, System.Collections.Generic.IEnumerable<TNode> nodes, System.Func<TNode, TNode, Microsoft.CodeAnalysis.SyntaxNode> computeReplacementNode)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceSyntax<TRoot>(this TRoot root, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> nodes, System.Func<Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode> computeReplacementNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> tokens, System.Func<Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken> computeReplacementToken, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia> computeReplacementTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxToken oldToken, Microsoft.CodeAnalysis.SyntaxToken newToken)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxToken tokenInList, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> newTokens)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTokens<TRoot>(this TRoot root, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxToken> tokens, System.Func<Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken> computeReplacementToken)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxTrivia oldTrivia, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> newTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot root, Microsoft.CodeAnalysis.SyntaxTrivia trivia, Microsoft.CodeAnalysis.SyntaxTrivia newTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia<TRoot>(this TRoot root, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia, System.Func<Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia, Microsoft.CodeAnalysis.SyntaxTrivia> computeReplacementTrivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.TrackNodes<TRoot>(this TRoot root, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode> nodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.TrackNodes<TRoot>(this TRoot root, params Microsoft.CodeAnalysis.SyntaxNode[] nodes)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax node, Microsoft.CodeAnalysis.SyntaxTriviaList trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia<TSyntax>(this TSyntax node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax node, Microsoft.CodeAnalysis.SyntaxTriviaList trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax node, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia> trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia<TSyntax>(this TSyntax node, params Microsoft.CodeAnalysis.SyntaxTrivia[] trivia)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTriviaFrom<TSyntax>(this TSyntax syntax, Microsoft.CodeAnalysis.SyntaxNode node)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutLeadingTrivia<TSyntax>(this TSyntax node)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutTrailingTrivia<TSyntax>(this TSyntax node)
static Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutTrivia<TSyntax>(this TSyntax syntax)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetFirstChildIndexSpanningPosition(Microsoft.CodeAnalysis.SyntaxNode node, int position)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.explicit operator Microsoft.CodeAnalysis.SyntaxNode(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.explicit operator Microsoft.CodeAnalysis.SyntaxToken(Microsoft.CodeAnalysis.SyntaxNodeOrToken nodeOrToken)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.implicit operator Microsoft.CodeAnalysis.SyntaxNodeOrToken(Microsoft.CodeAnalysis.SyntaxNode node)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.implicit operator Microsoft.CodeAnalysis.SyntaxNodeOrToken(Microsoft.CodeAnalysis.SyntaxToken token)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.operator !=(Microsoft.CodeAnalysis.SyntaxNodeOrToken left, Microsoft.CodeAnalysis.SyntaxNodeOrToken right)
static Microsoft.CodeAnalysis.SyntaxNodeOrToken.operator ==(Microsoft.CodeAnalysis.SyntaxNodeOrToken left, Microsoft.CodeAnalysis.SyntaxNodeOrToken right)
static Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.operator !=(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList left, Microsoft.CodeAnalysis.SyntaxNodeOrTokenList right)
static Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.operator ==(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList left, Microsoft.CodeAnalysis.SyntaxNodeOrTokenList right)
static Microsoft.CodeAnalysis.SyntaxToken.operator !=(Microsoft.CodeAnalysis.SyntaxToken left, Microsoft.CodeAnalysis.SyntaxToken right)
static Microsoft.CodeAnalysis.SyntaxToken.operator ==(Microsoft.CodeAnalysis.SyntaxToken left, Microsoft.CodeAnalysis.SyntaxToken right)
static Microsoft.CodeAnalysis.SyntaxTokenList.Create(Microsoft.CodeAnalysis.SyntaxToken token)
static Microsoft.CodeAnalysis.SyntaxTokenList.operator !=(Microsoft.CodeAnalysis.SyntaxTokenList left, Microsoft.CodeAnalysis.SyntaxTokenList right)
static Microsoft.CodeAnalysis.SyntaxTokenList.operator ==(Microsoft.CodeAnalysis.SyntaxTokenList left, Microsoft.CodeAnalysis.SyntaxTokenList right)
static Microsoft.CodeAnalysis.SyntaxTrivia.operator !=(Microsoft.CodeAnalysis.SyntaxTrivia left, Microsoft.CodeAnalysis.SyntaxTrivia right)
static Microsoft.CodeAnalysis.SyntaxTrivia.operator ==(Microsoft.CodeAnalysis.SyntaxTrivia left, Microsoft.CodeAnalysis.SyntaxTrivia right)
static Microsoft.CodeAnalysis.SyntaxTriviaList.Create(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
static Microsoft.CodeAnalysis.SyntaxTriviaList.operator !=(Microsoft.CodeAnalysis.SyntaxTriviaList left, Microsoft.CodeAnalysis.SyntaxTriviaList right)
static Microsoft.CodeAnalysis.SyntaxTriviaList.operator ==(Microsoft.CodeAnalysis.SyntaxTriviaList left, Microsoft.CodeAnalysis.SyntaxTriviaList right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator !=(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator <(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator <=(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator ==(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator >(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePosition.operator >=(Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right)
static Microsoft.CodeAnalysis.Text.LinePositionSpan.operator !=(Microsoft.CodeAnalysis.Text.LinePositionSpan left, Microsoft.CodeAnalysis.Text.LinePositionSpan right)
static Microsoft.CodeAnalysis.Text.LinePositionSpan.operator ==(Microsoft.CodeAnalysis.Text.LinePositionSpan left, Microsoft.CodeAnalysis.Text.LinePositionSpan right)
static Microsoft.CodeAnalysis.Text.SourceText.CalculateChecksum(byte[] buffer, int offset, int count, Microsoft.CodeAnalysis.Text.SourceHashAlgorithm algorithmId)
static Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.Stream stream, System.Text.Encoding encoding = null, Microsoft.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, bool throwIfBinaryDetected = false)
static Microsoft.CodeAnalysis.Text.SourceText.From(byte[] buffer, int length, System.Text.Encoding encoding = null, Microsoft.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1, bool throwIfBinaryDetected = false)
static Microsoft.CodeAnalysis.Text.SourceText.From(string text, System.Text.Encoding encoding = null, Microsoft.CodeAnalysis.Text.SourceHashAlgorithm checksumAlgorithm = Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1)
static Microsoft.CodeAnalysis.Text.TextChange.implicit operator Microsoft.CodeAnalysis.Text.TextChangeRange(Microsoft.CodeAnalysis.Text.TextChange change)
static Microsoft.CodeAnalysis.Text.TextChange.operator !=(Microsoft.CodeAnalysis.Text.TextChange left, Microsoft.CodeAnalysis.Text.TextChange right)
static Microsoft.CodeAnalysis.Text.TextChange.operator ==(Microsoft.CodeAnalysis.Text.TextChange left, Microsoft.CodeAnalysis.Text.TextChange right)
static Microsoft.CodeAnalysis.Text.TextChangeRange.Collapse(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextChangeRange> changes)
static Microsoft.CodeAnalysis.Text.TextChangeRange.operator !=(Microsoft.CodeAnalysis.Text.TextChangeRange left, Microsoft.CodeAnalysis.Text.TextChangeRange right)
static Microsoft.CodeAnalysis.Text.TextChangeRange.operator ==(Microsoft.CodeAnalysis.Text.TextChangeRange left, Microsoft.CodeAnalysis.Text.TextChangeRange right)
static Microsoft.CodeAnalysis.Text.TextLine.FromSpan(Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.Text.TextSpan span)
static Microsoft.CodeAnalysis.Text.TextLine.operator !=(Microsoft.CodeAnalysis.Text.TextLine left, Microsoft.CodeAnalysis.Text.TextLine right)
static Microsoft.CodeAnalysis.Text.TextLine.operator ==(Microsoft.CodeAnalysis.Text.TextLine left, Microsoft.CodeAnalysis.Text.TextLine right)
static Microsoft.CodeAnalysis.Text.TextSpan.FromBounds(int start, int end)
static Microsoft.CodeAnalysis.Text.TextSpan.operator !=(Microsoft.CodeAnalysis.Text.TextSpan left, Microsoft.CodeAnalysis.Text.TextSpan right)
static Microsoft.CodeAnalysis.Text.TextSpan.operator ==(Microsoft.CodeAnalysis.Text.TextSpan left, Microsoft.CodeAnalysis.Text.TextSpan right)
static readonly Microsoft.CodeAnalysis.AssemblyIdentityComparer.Default
static readonly Microsoft.CodeAnalysis.DocumentationProvider.Default
static readonly Microsoft.CodeAnalysis.MetadataReferenceProperties.Assembly
static readonly Microsoft.CodeAnalysis.MetadataReferenceProperties.GlobalAlias
static readonly Microsoft.CodeAnalysis.MetadataReferenceProperties.Module
static readonly Microsoft.CodeAnalysis.SubsystemVersion.None
static readonly Microsoft.CodeAnalysis.SubsystemVersion.Windows2000
static readonly Microsoft.CodeAnalysis.SubsystemVersion.Windows7
static readonly Microsoft.CodeAnalysis.SubsystemVersion.Windows8
static readonly Microsoft.CodeAnalysis.SubsystemVersion.WindowsVista
static readonly Microsoft.CodeAnalysis.SubsystemVersion.WindowsXP
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.CSharpErrorMessageFormat
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.CSharpShortErrorMessageFormat
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.FullyQualifiedFormat
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.MinimallyQualifiedFormat
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.VisualBasicErrorMessageFormat
static readonly Microsoft.CodeAnalysis.SymbolDisplayFormat.VisualBasicShortErrorMessageFormat
static readonly Microsoft.CodeAnalysis.SyntaxAnnotation.ElasticAnnotation
static readonly Microsoft.CodeAnalysis.SyntaxTriviaList.Empty
static readonly Microsoft.CodeAnalysis.Text.LinePosition.Zero
static readonly Microsoft.CodeAnalysis.Text.TextChange.NoChanges
static readonly Microsoft.CodeAnalysis.Text.TextChangeRange.NoChanges
virtual Microsoft.CodeAnalysis.Diagnostic.DefaultSeverity.get
virtual Microsoft.CodeAnalysis.Diagnostic.Properties.get
virtual Microsoft.CodeAnalysis.DiagnosticFormatter.Format(Microsoft.CodeAnalysis.Diagnostic diagnostic, System.IFormatProvider formatter = null)
virtual Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.Display.get
virtual Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.IsUnresolved.get
virtual Microsoft.CodeAnalysis.Emit.EmitResult.GetDebuggerDisplay()
virtual Microsoft.CodeAnalysis.Location.GetDebuggerDisplay()
virtual Microsoft.CodeAnalysis.Location.GetLineSpan()
virtual Microsoft.CodeAnalysis.Location.GetMappedLineSpan()
virtual Microsoft.CodeAnalysis.Location.MetadataModule.get
virtual Microsoft.CodeAnalysis.Location.SourceSpan.get
virtual Microsoft.CodeAnalysis.Location.SourceTree.get
virtual Microsoft.CodeAnalysis.MetadataReference.Display.get
virtual Microsoft.CodeAnalysis.SemanticModel.GetTopmostNodeForDiagnosticAnalysis(Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.SyntaxNode declaringSyntax)
virtual Microsoft.CodeAnalysis.SemanticModel.IgnoresAccessibility.get
virtual Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.DefaultVisit(Microsoft.CodeAnalysis.ISymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.Visit(Microsoft.CodeAnalysis.ISymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitField(Microsoft.CodeAnalysis.IFieldSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol symbol)
virtual Microsoft.CodeAnalysis.SymbolVisitor<TResult>.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol symbol)
virtual Microsoft.CodeAnalysis.SyntaxNode.ParentTrivia.get
virtual Microsoft.CodeAnalysis.SyntaxReference.GetSyntaxAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
virtual Microsoft.CodeAnalysis.SyntaxTree.GetLineVisibility(int position, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
virtual Microsoft.CodeAnalysis.SyntaxTree.GetTextAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
virtual Microsoft.CodeAnalysis.SyntaxWalker.Visit(Microsoft.CodeAnalysis.SyntaxNode node)
virtual Microsoft.CodeAnalysis.SyntaxWalker.VisitToken(Microsoft.CodeAnalysis.SyntaxToken token)
virtual Microsoft.CodeAnalysis.SyntaxWalker.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia trivia)
virtual Microsoft.CodeAnalysis.Text.SourceText.Container.get
virtual Microsoft.CodeAnalysis.Text.SourceText.ContentEqualsImpl(Microsoft.CodeAnalysis.Text.SourceText other)
virtual Microsoft.CodeAnalysis.Text.SourceText.GetChangeRanges(Microsoft.CodeAnalysis.Text.SourceText oldText)
virtual Microsoft.CodeAnalysis.Text.SourceText.GetLinesCore()
virtual Microsoft.CodeAnalysis.Text.SourceText.GetSubText(Microsoft.CodeAnalysis.Text.TextSpan span)
virtual Microsoft.CodeAnalysis.Text.SourceText.GetTextChanges(Microsoft.CodeAnalysis.Text.SourceText oldText)
virtual Microsoft.CodeAnalysis.Text.SourceText.ToString(Microsoft.CodeAnalysis.Text.TextSpan span)
virtual Microsoft.CodeAnalysis.Text.SourceText.WithChanges(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextChange> changes)
virtual Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter writer, Microsoft.CodeAnalysis.Text.TextSpan span, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
virtual Microsoft.CodeAnalysis.Text.TextLineCollection.GetLineFromPosition(int position)
virtual Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePosition(int position)
