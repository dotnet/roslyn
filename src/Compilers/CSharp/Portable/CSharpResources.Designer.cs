//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.CodeAnalysis.CSharp {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CSharpResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CSharpResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CodeAnalysis.CSharp.CSharpResources", typeof(CSharpResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t reference compilation of type &apos;{0}&apos; from {1} compilation..
        /// </summary>
        internal static string CantReferenceCompilationOf {
            get {
                return ResourceManager.GetString("CantReferenceCompilationOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chaining speculative semantic model is not supported. You should create a speculative model from the non-speculative ParentModel..
        /// </summary>
        internal static string ChainingSpeculativeModelIsNotSupported {
            get {
                return ResourceManager.GetString("ChainingSpeculativeModelIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation (C#): .
        /// </summary>
        internal static string CompilationC {
            get {
                return ResourceManager.GetString("CompilationC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find file..
        /// </summary>
        internal static string CouldNotFindFile {
            get {
                return ResourceManager.GetString("CouldNotFindFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elements cannot be null..
        /// </summary>
        internal static string ElementsCannotBeNull {
            get {
                return ResourceManager.GetString("ElementsCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be both extern and abstract.
        /// </summary>
        internal static string ERR_AbstractAndExtern {
            get {
                return ResourceManager.GetString("ERR_AbstractAndExtern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be both abstract and sealed.
        /// </summary>
        internal static string ERR_AbstractAndSealed {
            get {
                return ResourceManager.GetString("ERR_AbstractAndSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply attribute class &apos;{0}&apos; because it is abstract.
        /// </summary>
        internal static string ERR_AbstractAttributeClass {
            get {
                return ResourceManager.GetString("ERR_AbstractAttributeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot call an abstract base member: &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_AbstractBaseCall {
            get {
                return ResourceManager.GetString("ERR_AbstractBaseCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: abstract event cannot have initializer.
        /// </summary>
        internal static string ERR_AbstractEventInitializer {
            get {
                return ResourceManager.GetString("ERR_AbstractEventInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifier &apos;abstract&apos; is not valid on fields. Try using a property instead..
        /// </summary>
        internal static string ERR_AbstractField {
            get {
                return ResourceManager.GetString("ERR_AbstractField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot declare a body because it is marked abstract.
        /// </summary>
        internal static string ERR_AbstractHasBody {
            get {
                return ResourceManager.GetString("ERR_AbstractHasBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is abstract but it is contained in non-abstract class &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AbstractInConcreteClass {
            get {
                return ResourceManager.GetString("ERR_AbstractInConcreteClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The abstract method &apos;{0}&apos; cannot be marked virtual.
        /// </summary>
        internal static string ERR_AbstractNotVirtual {
            get {
                return ResourceManager.GetString("ERR_AbstractNotVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: an abstract class cannot be sealed or static.
        /// </summary>
        internal static string ERR_AbstractSealedStatic {
            get {
                return ResourceManager.GetString("ERR_AbstractSealedStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: accessibility modifiers on accessors may only be used if the property or indexer has both a get and a set accessor.
        /// </summary>
        internal static string ERR_AccessModMissingAccessor {
            get {
                return ResourceManager.GetString("ERR_AccessModMissingAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessor &apos;{0}&apos; cannot implement interface member &apos;{1}&apos; for type &apos;{2}&apos;. Use an explicit interface implementation..
        /// </summary>
        internal static string ERR_AccessorImplementingMethod {
            get {
                return ResourceManager.GetString("ERR_AccessorImplementingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be added to this assembly because it already is an assembly.
        /// </summary>
        internal static string ERR_AddModuleAssembly {
            get {
                return ResourceManager.GetString("ERR_AddModuleAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An add or remove accessor expected.
        /// </summary>
        internal static string ERR_AddOrRemoveExpected {
            get {
                return ResourceManager.GetString("ERR_AddOrRemoveExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An add or remove accessor must have a body.
        /// </summary>
        internal static string ERR_AddRemoveMustHaveBody {
            get {
                return ResourceManager.GetString("ERR_AddRemoveMustHaveBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of a read-only local variable.
        /// </summary>
        internal static string ERR_AddrOnReadOnlyLocal {
            get {
                return ResourceManager.GetString("ERR_AddrOnReadOnlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agnostic assembly cannot have a processor specific module &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_AgnosticToMachineModule {
            get {
                return ResourceManager.GetString("ERR_AgnosticToMachineModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid reference alias option: &apos;{0}=&apos; -- missing filename.
        /// </summary>
        internal static string ERR_AliasMissingFile {
            get {
                return ResourceManager.GetString("ERR_AliasMissingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias &apos;{0}&apos; not found.
        /// </summary>
        internal static string ERR_AliasNotFound {
            get {
                return ResourceManager.GetString("ERR_AliasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace alias qualifier &apos;::&apos; always resolves to a type or namespace so is illegal here. Consider using &apos;.&apos; instead..
        /// </summary>
        internal static string ERR_AliasQualAsExpression {
            get {
                return ResourceManager.GetString("ERR_AliasQualAsExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An alias-qualified name is not an expression..
        /// </summary>
        internal static string ERR_AliasQualifiedNameNotAnExpression {
            get {
                return ResourceManager.GetString("ERR_AliasQualifiedNameNotAnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; is ambiguous on operands of type &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_AmbigBinaryOps {
            get {
                return ResourceManager.GetString("ERR_AmbigBinaryOps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; is ambiguous on operands &apos;default&apos; and &apos;default&apos;.
        /// </summary>
        internal static string ERR_AmbigBinaryOpsOnDefault {
            get {
                return ResourceManager.GetString("ERR_AmbigBinaryOpsOnDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call is ambiguous between the following methods or properties: &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AmbigCall {
            get {
                return ResourceManager.GetString("ERR_AmbigCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an ambiguous reference between &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_AmbigContext {
            get {
                return ResourceManager.GetString("ERR_AmbigContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguity between &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AmbigMember {
            get {
                return ResourceManager.GetString("ERR_AmbigMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inherited members &apos;{0}&apos; and &apos;{1}&apos; have the same signature in type &apos;{2}&apos;, so they cannot be overridden.
        /// </summary>
        internal static string ERR_AmbigOverride {
            get {
                return ResourceManager.GetString("ERR_AmbigOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of conditional expression cannot be determined because &apos;{0}&apos; and &apos;{1}&apos; implicitly convert to one another.
        /// </summary>
        internal static string ERR_AmbigQM {
            get {
                return ResourceManager.GetString("ERR_AmbigQM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous user defined conversions &apos;{0}&apos; and &apos;{1}&apos; when converting from &apos;{2}&apos; to &apos;{3}&apos;.
        /// </summary>
        internal static string ERR_AmbigUDConv {
            get {
                return ResourceManager.GetString("ERR_AmbigUDConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; is ambiguous on an operand of type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AmbigUnaryOp {
            get {
                return ResourceManager.GetString("ERR_AmbigUnaryOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is ambiguous between &apos;{1}&apos; and &apos;{2}&apos;; use either &apos;@{0}&apos; or &apos;{0}Attribute&apos;.
        /// </summary>
        internal static string ERR_AmbiguousAttribute {
            get {
                return ResourceManager.GetString("ERR_AmbiguousAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use ref or out parameter &apos;{0}&apos; inside an anonymous method, lambda expression, or query expression.
        /// </summary>
        internal static string ERR_AnonDelegateCantUse {
            get {
                return ResourceManager.GetString("ERR_AnonDelegateCantUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use ref local &apos;{0}&apos; inside an anonymous method, lambda expression, or query expression.
        /// </summary>
        internal static string ERR_AnonDelegateCantUseLocal {
            get {
                return ResourceManager.GetString("ERR_AnonDelegateCantUseLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreach cannot operate on a &apos;{0}&apos;. Did you intend to invoke the &apos;{0}&apos;?.
        /// </summary>
        internal static string ERR_AnonMethGrpInForEach {
            get {
                return ResourceManager.GetString("ERR_AnonMethGrpInForEach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert {0} to type &apos;{1}&apos; because it is not a delegate type.
        /// </summary>
        internal static string ERR_AnonMethToNonDel {
            get {
                return ResourceManager.GetString("ERR_AnonMethToNonDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An anonymous method expression cannot be converted to an expression tree.
        /// </summary>
        internal static string ERR_AnonymousMethodToExpressionTree {
            get {
                return ResourceManager.GetString("ERR_AnonymousMethodToExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all code paths return a value in {0} of type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AnonymousReturnExpected {
            get {
                return ResourceManager.GetString("ERR_AnonymousReturnExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An anonymous type cannot have multiple properties with the same name.
        /// </summary>
        internal static string ERR_AnonymousTypeDuplicatePropertyName {
            get {
                return ResourceManager.GetString("ERR_AnonymousTypeDuplicatePropertyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use anonymous type in a constant expression.
        /// </summary>
        internal static string ERR_AnonymousTypeNotAvailable {
            get {
                return ResourceManager.GetString("ERR_AnonymousTypeNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign &apos;{0}&apos; to anonymous type property.
        /// </summary>
        internal static string ERR_AnonymousTypePropertyAssignedBadValue {
            get {
                return ResourceManager.GetString("ERR_AnonymousTypePropertyAssignedBadValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The __arglist construct is valid only within a variable argument method.
        /// </summary>
        internal static string ERR_ArgsInvalid {
            get {
                return ResourceManager.GetString("ERR_ArgsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array elements cannot be of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ArrayElementCantBeRefAny {
            get {
                return ResourceManager.GetString("ERR_ArrayElementCantBeRefAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A nested array initializer is expected.
        /// </summary>
        internal static string ERR_ArrayInitializerExpected {
            get {
                return ResourceManager.GetString("ERR_ArrayInitializerExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An array initializer of length &apos;{0}&apos; is expected.
        /// </summary>
        internal static string ERR_ArrayInitializerIncorrectLength {
            get {
                return ResourceManager.GetString("ERR_ArrayInitializerIncorrectLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array initializers can only be used in a variable or field initializer. Try using a new expression instead..
        /// </summary>
        internal static string ERR_ArrayInitInBadPlace {
            get {
                return ResourceManager.GetString("ERR_ArrayInitInBadPlace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only use array initializer expressions to assign to array types. Try using a new expression instead..
        /// </summary>
        internal static string ERR_ArrayInitToNonArrayType {
            get {
                return ResourceManager.GetString("ERR_ArrayInitToNonArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: array elements cannot be of static type.
        /// </summary>
        internal static string ERR_ArrayOfStaticClass {
            get {
                return ResourceManager.GetString("ERR_ArrayOfStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array size cannot be specified in a variable declaration (try initializing with a &apos;new&apos; expression).
        /// </summary>
        internal static string ERR_ArraySizeInDeclaration {
            get {
                return ResourceManager.GetString("ERR_ArraySizeInDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The as operator must be used with a reference type or nullable type (&apos;{0}&apos; is a non-nullable value type).
        /// </summary>
        internal static string ERR_AsMustHaveReferenceType {
            get {
                return ResourceManager.GetString("ERR_AsMustHaveReferenceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly &apos;{0}&apos; with identity &apos;{1}&apos; uses &apos;{2}&apos; which has a higher version than referenced assembly &apos;{3}&apos; with identity &apos;{4}&apos;.
        /// </summary>
        internal static string ERR_AssemblyMatchBadVersion {
            get {
                return ResourceManager.GetString("ERR_AssemblyMatchBadVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /moduleassemblyname option may only be specified when building a target type of &apos;module&apos;.
        /// </summary>
        internal static string ERR_AssemblyNameOnNonModule {
            get {
                return ResourceManager.GetString("ERR_AssemblyNameOnNonModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assemblies &apos;{0}&apos; and &apos;{1}&apos; refer to the same metadata but only one is a linked reference (specified using /link option); consider removing one of the references..
        /// </summary>
        internal static string ERR_AssemblySpecifiedForLinkAndRef {
            get {
                return ResourceManager.GetString("ERR_AssemblySpecifiedForLinkAndRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The left-hand side of an assignment must be a variable, property or indexer.
        /// </summary>
        internal static string ERR_AssgLvalueExpected {
            get {
                return ResourceManager.GetString("ERR_AssgLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A readonly field cannot be assigned to (except in a constructor or a variable initializer).
        /// </summary>
        internal static string ERR_AssgReadonly {
            get {
                return ResourceManager.GetString("ERR_AssgReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; cannot be modified (except in a constructor or a variable initializer).
        /// </summary>
        internal static string ERR_AssgReadonly2 {
            get {
                return ResourceManager.GetString("ERR_AssgReadonly2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to &apos;{0}&apos; because it is read-only.
        /// </summary>
        internal static string ERR_AssgReadonlyLocal {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify members of &apos;{0}&apos; because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AssgReadonlyLocal2Cause {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyLocal2Cause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign to &apos;{0}&apos; because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_AssgReadonlyLocalCause {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyLocalCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property or indexer &apos;{0}&apos; cannot be assigned to -- it is read only.
        /// </summary>
        internal static string ERR_AssgReadonlyProp {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyProp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static readonly field cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string ERR_AssgReadonlyStatic {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field &apos;{0}&apos; cannot be assigned to (except in a static constructor or a variable initializer).
        /// </summary>
        internal static string ERR_AssgReadonlyStatic2 {
            get {
                return ResourceManager.GetString("ERR_AssgReadonlyStatic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type parameter &apos;{0}&apos; cannot be used with the &apos;as&apos; operator because it does not have a class type constraint nor a &apos;class&apos; constraint.
        /// </summary>
        internal static string ERR_AsWithTypeVar {
            get {
                return ResourceManager.GetString("ERR_AsWithTypeVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: an attribute argument cannot use type parameters.
        /// </summary>
        internal static string ERR_AttrArgWithTypeVars {
            get {
                return ResourceManager.GetString("ERR_AttrArgWithTypeVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply attribute class &apos;{0}&apos; because it is generic.
        /// </summary>
        internal static string ERR_AttributeCantBeGeneric {
            get {
                return ResourceManager.GetString("ERR_AttributeCantBeGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; is not valid on property or event accessors. It is only valid on &apos;{1}&apos; declarations..
        /// </summary>
        internal static string ERR_AttributeNotOnAccessor {
            get {
                return ResourceManager.GetString("ERR_AttributeNotOnAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; is not valid on this declaration type. It is only valid on &apos;{1}&apos; declarations..
        /// </summary>
        internal static string ERR_AttributeOnBadSymbolType {
            get {
                return ResourceManager.GetString("ERR_AttributeOnBadSymbolType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute parameter &apos;{0}&apos; must be specified..
        /// </summary>
        internal static string ERR_AttributeParameterRequired1 {
            get {
                return ResourceManager.GetString("ERR_AttributeParameterRequired1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute parameter &apos;{0}&apos; or &apos;{1}&apos; must be specified..
        /// </summary>
        internal static string ERR_AttributeParameterRequired2 {
            get {
                return ResourceManager.GetString("ERR_AttributeParameterRequired2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes are not allowed on local function parameters or type parameters.
        /// </summary>
        internal static string ERR_AttributesInLocalFuncDecl {
            get {
                return ResourceManager.GetString("ERR_AttributesInLocalFuncDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes are not valid in this context..
        /// </summary>
        internal static string ERR_AttributesNotAllowed {
            get {
                return ResourceManager.GetString("ERR_AttributesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; is only valid on classes derived from System.Attribute.
        /// </summary>
        internal static string ERR_AttributeUsageOnNonAttributeClass {
            get {
                return ResourceManager.GetString("ERR_AttributeUsageOnNonAttributeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-implemented properties cannot return by reference.
        /// </summary>
        internal static string ERR_AutoPropertyCannotBeRefReturning {
            get {
                return ResourceManager.GetString("ERR_AutoPropertyCannotBeRefReturning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-implemented properties inside interfaces cannot have initializers..
        /// </summary>
        internal static string ERR_AutoPropertyInitializerInInterface {
            get {
                return ResourceManager.GetString("ERR_AutoPropertyInitializerInInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-implemented properties must have get accessors..
        /// </summary>
        internal static string ERR_AutoPropertyMustHaveGetAccessor {
            get {
                return ResourceManager.GetString("ERR_AutoPropertyMustHaveGetAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-implemented properties must override all accessors of the overridden property..
        /// </summary>
        internal static string ERR_AutoPropertyMustOverrideSet {
            get {
                return ResourceManager.GetString("ERR_AutoPropertyMustOverrideSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await in an unsafe context.
        /// </summary>
        internal static string ERR_AwaitInUnsafeContext {
            get {
                return ResourceManager.GetString("ERR_AwaitInUnsafeContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is inaccessible due to its protection level.
        /// </summary>
        internal static string ERR_BadAccess {
            get {
                return ResourceManager.GetString("ERR_BadAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppConfigPath must be absolute..
        /// </summary>
        internal static string ERR_BadAppConfigPath {
            get {
                return ResourceManager.GetString("ERR_BadAppConfigPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for method &apos;{0}&apos; takes {1} arguments.
        /// </summary>
        internal static string ERR_BadArgCount {
            get {
                return ResourceManager.GetString("ERR_BadArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} may not be passed with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string ERR_BadArgExtraRef {
            get {
                return ResourceManager.GetString("ERR_BadArgExtraRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} must be passed with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string ERR_BadArgRef {
            get {
                return ResourceManager.GetString("ERR_BadArgRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0}: cannot convert from &apos;{1}&apos; to &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_BadArgType {
            get {
                return ResourceManager.GetString("ERR_BadArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has no applicable method named &apos;{1}&apos; but appears to have an extension method by that name. Extension methods cannot be dynamically dispatched. Consider casting the dynamic arguments or calling the extension method without the extension method syntax..
        /// </summary>
        internal static string ERR_BadArgTypeDynamicExtension {
            get {
                return ResourceManager.GetString("ERR_BadArgTypeDynamicExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method &apos;{0}&apos; for the collection initializer has some invalid arguments.
        /// </summary>
        internal static string ERR_BadArgTypesForCollectionAdd {
            get {
                return ResourceManager.GetString("ERR_BadArgTypesForCollectionAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument to the &apos;{0}&apos; attribute must be a valid identifier.
        /// </summary>
        internal static string ERR_BadArgumentToAttribute {
            get {
                return ResourceManager.GetString("ERR_BadArgumentToAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the generic {1} &apos;{0}&apos; requires {2} type arguments.
        /// </summary>
        internal static string ERR_BadArity {
            get {
                return ResourceManager.GetString("ERR_BadArity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array type specifier, [], must appear before parameter name.
        /// </summary>
        internal static string ERR_BadArraySyntax {
            get {
                return ResourceManager.GetString("ERR_BadArraySyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly name: {0}.
        /// </summary>
        internal static string ERR_BadAssemblyName {
            get {
                return ResourceManager.GetString("ERR_BadAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async methods cannot have ref or out parameters.
        /// </summary>
        internal static string ERR_BadAsyncArgType {
            get {
                return ResourceManager.GetString("ERR_BadAsyncArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async lambda expressions cannot be converted to expression trees.
        /// </summary>
        internal static string ERR_BadAsyncExpressionTree {
            get {
                return ResourceManager.GetString("ERR_BadAsyncExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;async&apos; modifier can only be used in methods that have a body..
        /// </summary>
        internal static string ERR_BadAsyncLacksBody {
            get {
                return ResourceManager.GetString("ERR_BadAsyncLacksBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async methods cannot have by reference locals.
        /// </summary>
        internal static string ERR_BadAsyncLocalType {
            get {
                return ResourceManager.GetString("ERR_BadAsyncLocalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For type &apos;{0}&apos; to be used as an AsyncMethodBuilder for type &apos;{1}&apos;, its Task property should return type &apos;{1}&apos; instead of type &apos;{2}&apos;..
        /// </summary>
        internal static string ERR_BadAsyncMethodBuilderTaskProperty {
            get {
                return ResourceManager.GetString("ERR_BadAsyncMethodBuilderTaskProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of an async method must be void, Task or Task&lt;T&gt;.
        /// </summary>
        internal static string ERR_BadAsyncReturn {
            get {
                return ResourceManager.GetString("ERR_BadAsyncReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since this is an async method, the return expression must be of type &apos;{0}&apos; rather than &apos;Task&lt;{0}&gt;&apos;.
        /// </summary>
        internal static string ERR_BadAsyncReturnExpression {
            get {
                return ResourceManager.GetString("ERR_BadAsyncReturnExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type.
        /// </summary>
        internal static string ERR_BadAttributeArgument {
            get {
                return ResourceManager.GetString("ERR_BadAttributeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute constructor parameter &apos;{0}&apos; is optional, but no default parameter value was specified..
        /// </summary>
        internal static string ERR_BadAttributeParamDefaultArgument {
            get {
                return ResourceManager.GetString("ERR_BadAttributeParamDefaultArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute constructor parameter &apos;{0}&apos; has type &apos;{1}&apos;, which is not a valid attribute parameter type.
        /// </summary>
        internal static string ERR_BadAttributeParamType {
            get {
                return ResourceManager.GetString("ERR_BadAttributeParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; requires that the type {0} have a suitable GetAwaiter method.
        /// </summary>
        internal static string ERR_BadAwaitArg {
            get {
                return ResourceManager.GetString("ERR_BadAwaitArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; requires that the type &apos;{0}&apos; have a suitable GetAwaiter method. Are you missing a using directive for &apos;System&apos;?.
        /// </summary>
        internal static string ERR_BadAwaitArg_NeedSystem {
            get {
                return ResourceManager.GetString("ERR_BadAwaitArg_NeedSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadAwaitArgIntrinsic {
            get {
                return ResourceManager.GetString("ERR_BadAwaitArgIntrinsic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await &apos;void&apos;.
        /// </summary>
        internal static string ERR_BadAwaitArgVoidCall {
            get {
                return ResourceManager.GetString("ERR_BadAwaitArgVoidCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; cannot be used as an identifier within an async method or lambda expression.
        /// </summary>
        internal static string ERR_BadAwaitAsIdentifier {
            get {
                return ResourceManager.GetString("ERR_BadAwaitAsIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; requires that the return type &apos;{0}&apos; of &apos;{1}.GetAwaiter()&apos; have suitable IsCompleted, OnCompleted, and GetResult members, and implement INotifyCompletion or ICriticalNotifyCompletion.
        /// </summary>
        internal static string ERR_BadAwaiterPattern {
            get {
                return ResourceManager.GetString("ERR_BadAwaiterPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await in a catch clause.
        /// </summary>
        internal static string ERR_BadAwaitInCatch {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await in the filter expression of a catch clause.
        /// </summary>
        internal static string ERR_BadAwaitInCatchFilter {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInCatchFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await in the body of a finally clause.
        /// </summary>
        internal static string ERR_BadAwaitInFinally {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot await in the body of a lock statement.
        /// </summary>
        internal static string ERR_BadAwaitInLock {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator may only be used in a query expression within the first collection expression of the initial &apos;from&apos; clause or within the collection expression of a &apos;join&apos; clause.
        /// </summary>
        internal static string ERR_BadAwaitInQuery {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator cannot be used in a static script variable initializer..
        /// </summary>
        internal static string ERR_BadAwaitInStaticVariableInitializer {
            get {
                return ResourceManager.GetString("ERR_BadAwaitInStaticVariableInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator can only be used when contained within a method or lambda expression marked with the &apos;async&apos; modifier.
        /// </summary>
        internal static string ERR_BadAwaitWithoutAsync {
            get {
                return ResourceManager.GetString("ERR_BadAwaitWithoutAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator can only be used within an async {0}. Consider marking this {0} with the &apos;async&apos; modifier..
        /// </summary>
        internal static string ERR_BadAwaitWithoutAsyncLambda {
            get {
                return ResourceManager.GetString("ERR_BadAwaitWithoutAsyncLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator can only be used within an async method. Consider marking this method with the &apos;async&apos; modifier and changing its return type to &apos;Task&lt;{0}&gt;&apos;..
        /// </summary>
        internal static string ERR_BadAwaitWithoutAsyncMethod {
            get {
                return ResourceManager.GetString("ERR_BadAwaitWithoutAsyncMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;await&apos; operator can only be used within an async method. Consider marking this method with the &apos;async&apos; modifier and changing its return type to &apos;Task&apos;..
        /// </summary>
        internal static string ERR_BadAwaitWithoutVoidAsyncMethod {
            get {
                return ResourceManager.GetString("ERR_BadAwaitWithoutVoidAsyncMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid image base number &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadBaseNumber {
            get {
                return ResourceManager.GetString("ERR_BadBaseNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid base type.
        /// </summary>
        internal static string ERR_BadBaseType {
            get {
                return ResourceManager.GetString("ERR_BadBaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the parameters of a binary operator must be the containing type.
        /// </summary>
        internal static string ERR_BadBinaryOperatorSignature {
            get {
                return ResourceManager.GetString("ERR_BadBinaryOperatorSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; cannot be applied to operands of type &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_BadBinaryOps {
            get {
                return ResourceManager.GetString("ERR_BadBinaryOps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded binary operator &apos;{0}&apos; takes two parameters.
        /// </summary>
        internal static string ERR_BadBinOpArgs {
            get {
                return ResourceManager.GetString("ERR_BadBinOpArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to be applicable as a short circuit operator a user-defined logical operator (&apos;{0}&apos;) must have the same return type and parameter types.
        /// </summary>
        internal static string ERR_BadBoolOp {
            get {
                return ResourceManager.GetString("ERR_BadBoolOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid constraint. A type used as a constraint must be an interface, a non-sealed class or a type parameter..
        /// </summary>
        internal static string ERR_BadBoundType {
            get {
                return ResourceManager.GetString("ERR_BadBoundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerFilePathAttribute may only be applied to parameters with default values.
        /// </summary>
        internal static string ERR_BadCallerFilePathParamWithoutDefaultValue {
            get {
                return ResourceManager.GetString("ERR_BadCallerFilePathParamWithoutDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerLineNumberAttribute may only be applied to parameters with default values.
        /// </summary>
        internal static string ERR_BadCallerLineNumberParamWithoutDefaultValue {
            get {
                return ResourceManager.GetString("ERR_BadCallerLineNumberParamWithoutDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute may only be applied to parameters with default values.
        /// </summary>
        internal static string ERR_BadCallerMemberNameParamWithoutDefaultValue {
            get {
                return ResourceManager.GetString("ERR_BadCallerMemberNameParamWithoutDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The right hand side of a fixed statement assignment may not be a cast expression.
        /// </summary>
        internal static string ERR_BadCastInFixed {
            get {
                return ResourceManager.GetString("ERR_BadCastInFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The managed coclass wrapper class signature &apos;{0}&apos; for interface &apos;{1}&apos; is not a valid class name signature.
        /// </summary>
        internal static string ERR_BadCoClassSig {
            get {
                return ResourceManager.GetString("ERR_BadCoClassSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos; for /langversion; must be ISO-1, ISO-2, Default, Latest or a valid version in range 1 to 7.2..
        /// </summary>
        internal static string ERR_BadCompatMode {
            get {
                return ResourceManager.GetString("ERR_BadCompatMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid &apos;{0}&apos; value: &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_BadCompilationOptionValue {
            get {
                return ResourceManager.GetString("ERR_BadCompilationOptionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid constraint type. A type used as a constraint must be an interface, a non-sealed class or a type parameter..
        /// </summary>
        internal static string ERR_BadConstraintType {
            get {
                return ResourceManager.GetString("ERR_BadConstraintType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; cannot be declared const.
        /// </summary>
        internal static string ERR_BadConstType {
            get {
                return ResourceManager.GetString("ERR_BadConstType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a constructor that takes {1} arguments.
        /// </summary>
        internal static string ERR_BadCtorArgCount {
            get {
                return ResourceManager.GetString("ERR_BadCtorArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos; for /debug; must be &apos;portable&apos;, &apos;embedded&apos;, &apos;full&apos; or &apos;pdbonly&apos;.
        /// </summary>
        internal static string ERR_BadDebugType {
            get {
                return ResourceManager.GetString("ERR_BadDebugType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate &apos;{0}&apos; does not take {1} arguments.
        /// </summary>
        internal static string ERR_BadDelArgCount {
            get {
                return ResourceManager.GetString("ERR_BadDelArgCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate &apos;{0}&apos; does not have a valid constructor.
        /// </summary>
        internal static string ERR_BadDelegateConstructor {
            get {
                return ResourceManager.GetString("ERR_BadDelegateConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave the body of an anonymous method or lambda expression.
        /// </summary>
        internal static string ERR_BadDelegateLeave {
            get {
                return ResourceManager.GetString("ERR_BadDelegateLeave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of destructor must match name of class.
        /// </summary>
        internal static string ERR_BadDestructorName {
            get {
                return ResourceManager.GetString("ERR_BadDestructorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessor directives must appear as the first non-whitespace character on a line.
        /// </summary>
        internal static string ERR_BadDirectivePlacement {
            get {
                return ResourceManager.GetString("ERR_BadDirectivePlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided documentation mode is unsupported or invalid: &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_BadDocumentationMode {
            get {
                return ResourceManager.GetString("ERR_BadDocumentationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: user-defined conversions to or from the dynamic type are not allowed.
        /// </summary>
        internal static string ERR_BadDynamicConversion {
            get {
                return ResourceManager.GetString("ERR_BadDynamicConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use an expression of type &apos;{0}&apos; as an argument to a dynamically dispatched operation..
        /// </summary>
        internal static string ERR_BadDynamicMethodArg {
            get {
                return ResourceManager.GetString("ERR_BadDynamicMethodArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a default literal as an argument to a dynamically dispatched operation..
        /// </summary>
        internal static string ERR_BadDynamicMethodArgDefaultLiteral {
            get {
                return ResourceManager.GetString("ERR_BadDynamicMethodArgDefaultLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a lambda expression as an argument to a dynamically dispatched operation without first casting it to a delegate or expression tree type..
        /// </summary>
        internal static string ERR_BadDynamicMethodArgLambda {
            get {
                return ResourceManager.GetString("ERR_BadDynamicMethodArgLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a method group as an argument to a dynamically dispatched operation. Did you intend to invoke the method?.
        /// </summary>
        internal static string ERR_BadDynamicMethodArgMemgrp {
            get {
                return ResourceManager.GetString("ERR_BadDynamicMethodArgMemgrp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query expressions over source type &apos;dynamic&apos; or with a join sequence of type &apos;dynamic&apos; are not allowed.
        /// </summary>
        internal static string ERR_BadDynamicQuery {
            get {
                return ResourceManager.GetString("ERR_BadDynamicQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The typeof operator cannot be used on the dynamic type.
        /// </summary>
        internal static string ERR_BadDynamicTypeof {
            get {
                return ResourceManager.GetString("ERR_BadDynamicTypeof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded statement cannot be a declaration or labeled statement.
        /// </summary>
        internal static string ERR_BadEmbeddedStmt {
            get {
                return ResourceManager.GetString("ERR_BadEmbeddedStmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A throw statement with no arguments is not allowed outside of a catch clause.
        /// </summary>
        internal static string ERR_BadEmptyThrow {
            get {
                return ResourceManager.GetString("ERR_BadEmptyThrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A throw statement with no arguments is not allowed in a finally clause that is nested inside the nearest enclosing catch clause.
        /// </summary>
        internal static string ERR_BadEmptyThrowInFinally {
            get {
                return ResourceManager.GetString("ERR_BadEmptyThrowInFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event &apos;{0}&apos; can only appear on the left hand side of += or -= (except when used from within the type &apos;{1}&apos;).
        /// </summary>
        internal static string ERR_BadEventUsage {
            get {
                return ResourceManager.GetString("ERR_BadEventUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event &apos;{0}&apos; can only appear on the left hand side of += or -=.
        /// </summary>
        internal static string ERR_BadEventUsageNoField {
            get {
                return ResourceManager.GetString("ERR_BadEventUsageNoField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type caught or thrown must be derived from System.Exception.
        /// </summary>
        internal static string ERR_BadExceptionType {
            get {
                return ResourceManager.GetString("ERR_BadExceptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension method must be defined in a non-generic static class.
        /// </summary>
        internal static string ERR_BadExtensionAgg {
            get {
                return ResourceManager.GetString("ERR_BadExtensionAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension method must be static.
        /// </summary>
        internal static string ERR_BadExtensionMeth {
            get {
                return ResourceManager.GetString("ERR_BadExtensionMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extern alias &apos;{0}&apos; was not specified in a /reference option.
        /// </summary>
        internal static string ERR_BadExternAlias {
            get {
                return ResourceManager.GetString("ERR_BadExternAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid extern alias for &apos;/reference&apos;; &apos;{0}&apos; is not a valid identifier.
        /// </summary>
        internal static string ERR_BadExternIdentifier {
            get {
                return ResourceManager.GetString("ERR_BadExternIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot leave the body of a finally clause.
        /// </summary>
        internal static string ERR_BadFinallyLeave {
            get {
                return ResourceManager.GetString("ERR_BadFinallyLeave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of a local declared in a fixed statement must be a pointer type.
        /// </summary>
        internal static string ERR_BadFixedInitType {
            get {
                return ResourceManager.GetString("ERR_BadFixedInitType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type and identifier are both required in a foreach statement.
        /// </summary>
        internal static string ERR_BadForeachDecl {
            get {
                return ResourceManager.GetString("ERR_BadForeachDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach requires that the return type &apos;{0}&apos; of &apos;{1}&apos; must have a suitable public MoveNext method and public Current property.
        /// </summary>
        internal static string ERR_BadGetEnumerator {
            get {
                return ResourceManager.GetString("ERR_BadGetEnumerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type for ++ or -- operator must match the parameter type or be derived from the parameter type.
        /// </summary>
        internal static string ERR_BadIncDecRetType {
            get {
                return ResourceManager.GetString("ERR_BadIncDecRetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter type for ++ or -- operator must be the containing type.
        /// </summary>
        internal static string ERR_BadIncDecSignature {
            get {
                return ResourceManager.GetString("ERR_BadIncDecSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of indices inside []; expected {0}.
        /// </summary>
        internal static string ERR_BadIndexCount {
            get {
                return ResourceManager.GetString("ERR_BadIndexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute is valid only on an indexer that is not an explicit interface member declaration.
        /// </summary>
        internal static string ERR_BadIndexerNameAttr {
            get {
                return ResourceManager.GetString("ERR_BadIndexerNameAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot apply indexing with [] to an expression of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadIndexLHS {
            get {
                return ResourceManager.GetString("ERR_BadIndexLHS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos; and the best extension method overload &apos;{2}&apos; requires a receiver of type &apos;{3}&apos;.
        /// </summary>
        internal static string ERR_BadInstanceArgType {
            get {
                return ResourceManager.GetString("ERR_BadInstanceArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operand for pattern match; value required, but found &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_BadIsPatternExpression {
            get {
                return ResourceManager.GetString("ERR_BadIsPatternExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterators cannot have ref or out parameters.
        /// </summary>
        internal static string ERR_BadIteratorArgType {
            get {
                return ResourceManager.GetString("ERR_BadIteratorArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterators cannot have by reference locals.
        /// </summary>
        internal static string ERR_BadIteratorLocalType {
            get {
                return ResourceManager.GetString("ERR_BadIteratorLocalType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The body of &apos;{0}&apos; cannot be an iterator block because &apos;{1}&apos; is not an iterator interface type.
        /// </summary>
        internal static string ERR_BadIteratorReturn {
            get {
                return ResourceManager.GetString("ERR_BadIteratorReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The body of &apos;{0}&apos; cannot be an iterator block because &apos;{0}&apos; returns by reference.
        /// </summary>
        internal static string ERR_BadIteratorReturnRef {
            get {
                return ResourceManager.GetString("ERR_BadIteratorReturnRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided language version is unsupported or invalid: &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_BadLanguageVersion {
            get {
                return ResourceManager.GetString("ERR_BadLanguageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifier &apos;{0}&apos; is not valid for this item.
        /// </summary>
        internal static string ERR_BadMemberFlag {
            get {
                return ResourceManager.GetString("ERR_BadMemberFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one protection modifier.
        /// </summary>
        internal static string ERR_BadMemberProtection {
            get {
                return ResourceManager.GetString("ERR_BadMemberProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member modifier &apos;{0}&apos; must precede the member type and name.
        /// </summary>
        internal static string ERR_BadModifierLocation {
            get {
                return ResourceManager.GetString("ERR_BadModifierLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A namespace declaration cannot have modifiers or attributes.
        /// </summary>
        internal static string ERR_BadModifiersOnNamespace {
            get {
                return ResourceManager.GetString("ERR_BadModifiersOnNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid module name: {0}.
        /// </summary>
        internal static string ERR_BadModuleName {
            get {
                return ResourceManager.GetString("ERR_BadModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overload for &apos;{0}&apos; does not have a parameter named &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_BadNamedArgument {
            get {
                return ResourceManager.GetString("ERR_BadNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The delegate &apos;{0}&apos; does not have a parameter named &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_BadNamedArgumentForDelegateInvoke {
            get {
                return ResourceManager.GetString("ERR_BadNamedArgumentForDelegateInvoke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid named attribute argument. Named attribute arguments must be fields which are not readonly, static, or const, or read-write properties which are public and not static..
        /// </summary>
        internal static string ERR_BadNamedAttributeArgument {
            get {
                return ResourceManager.GetString("ERR_BadNamedAttributeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid named attribute argument because it is not a valid attribute parameter type.
        /// </summary>
        internal static string ERR_BadNamedAttributeArgumentType {
            get {
                return ResourceManager.GetString("ERR_BadNamedAttributeArgumentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new expression requires (), [], or {} after type.
        /// </summary>
        internal static string ERR_BadNewExpr {
            get {
                return ResourceManager.GetString("ERR_BadNewExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration is not valid; use &apos;{0} operator &lt;dest-type&gt; (...&apos; instead.
        /// </summary>
        internal static string ERR_BadOperatorSyntax {
            get {
                return ResourceManager.GetString("ERR_BadOperatorSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; cannot be applied to operand &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_BadOpOnNullOrDefault {
            get {
                return ResourceManager.GetString("ERR_BadOpOnNullOrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The parameter modifier &apos;out&apos; cannot be used with &apos;this&apos; .
        /// </summary>
        internal static string ERR_BadOutWithThis {
            get {
                return ResourceManager.GetString("ERR_BadOutWithThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} should not be declared with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string ERR_BadParamExtraRef {
            get {
                return ResourceManager.GetString("ERR_BadParamExtraRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter array cannot be used with &apos;this&apos; modifier on an extension method.
        /// </summary>
        internal static string ERR_BadParamModThis {
            get {
                return ResourceManager.GetString("ERR_BadParamModThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} must be declared with the &apos;{1}&apos; keyword.
        /// </summary>
        internal static string ERR_BadParamRef {
            get {
                return ResourceManager.GetString("ERR_BadParamRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} is declared as type &apos;{1}{2}&apos; but should be &apos;{3}{4}&apos;.
        /// </summary>
        internal static string ERR_BadParamType {
            get {
                return ResourceManager.GetString("ERR_BadParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading debug information for &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadPdbData {
            get {
                return ResourceManager.GetString("ERR_BadPdbData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos; for /platform; must be anycpu, x86, Itanium or x64.
        /// </summary>
        internal static string ERR_BadPlatformType {
            get {
                return ResourceManager.GetString("ERR_BadPlatformType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /platform:anycpu32bitpreferred can only be used with /t:exe, /t:winexe and /t:appcontainerexe.
        /// </summary>
        internal static string ERR_BadPrefer32OnLib {
            get {
                return ResourceManager.GetString("ERR_BadPrefer32OnLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access protected member &apos;{0}&apos; via a qualifier of type &apos;{1}&apos;; the qualifier must be of type &apos;{2}&apos; (or derived from it).
        /// </summary>
        internal static string ERR_BadProtectedAccess {
            get {
                return ResourceManager.GetString("ERR_BadProtectedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lambda expressions that return by reference cannot be converted to expression trees.
        /// </summary>
        internal static string ERR_BadRefReturnExpressionTree {
            get {
                return ResourceManager.GetString("ERR_BadRefReturnExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The parameter modifier &apos;ref&apos; cannot be used with &apos;this&apos; .
        /// </summary>
        internal static string ERR_BadRefWithThis {
            get {
                return ResourceManager.GetString("ERR_BadRefWithThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos;; Resource visibility must be either &apos;public&apos; or &apos;private&apos;.
        /// </summary>
        internal static string ERR_BadResourceVis {
            get {
                return ResourceManager.GetString("ERR_BadResourceVis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1} {0}&apos; has the wrong return type.
        /// </summary>
        internal static string ERR_BadRetType {
            get {
                return ResourceManager.GetString("ERR_BadRetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand of an overloaded shift operator must have the same type as the containing type, and the type of the second operand must be int.
        /// </summary>
        internal static string ERR_BadShiftOperatorSignature {
            get {
                return ResourceManager.GetString("ERR_BadShiftOperatorSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a {1} but is used like a {2}.
        /// </summary>
        internal static string ERR_BadSKknown {
            get {
                return ResourceManager.GetString("ERR_BadSKknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a {1}, which is not valid in the given context.
        /// </summary>
        internal static string ERR_BadSKunknown {
            get {
                return ResourceManager.GetString("ERR_BadSKunknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided source code kind is unsupported or invalid: &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadSourceCodeKind {
            get {
                return ResourceManager.GetString("ERR_BadSourceCodeKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters or locals of type &apos;{0}&apos; cannot be declared in async methods or lambda expressions..
        /// </summary>
        internal static string ERR_BadSpecialByRefLocal {
            get {
                return ResourceManager.GetString("ERR_BadSpecialByRefLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A stackalloc expression requires [] after type.
        /// </summary>
        internal static string ERR_BadStackAllocExpr {
            get {
                return ResourceManager.GetString("ERR_BadStackAllocExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized option: &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadSwitch {
            get {
                return ResourceManager.GetString("ERR_BadSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; has a parameter modifier &apos;this&apos; which is not on the first parameter.
        /// </summary>
        internal static string ERR_BadThisParam {
            get {
                return ResourceManager.GetString("ERR_BadThisParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; may not be used as a type argument.
        /// </summary>
        internal static string ERR_BadTypeArgument {
            get {
                return ResourceManager.GetString("ERR_BadTypeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first parameter of an extension method cannot be of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadTypeforThis {
            get {
                return ResourceManager.GetString("ERR_BadTypeforThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot reference a type through an expression; try &apos;{1}&apos; instead.
        /// </summary>
        internal static string ERR_BadTypeReference {
            get {
                return ResourceManager.GetString("ERR_BadTypeReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator &apos;{0}&apos; cannot be applied to operand of type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_BadUnaryOp {
            get {
                return ResourceManager.GetString("ERR_BadUnaryOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter of a unary operator must be the containing type.
        /// </summary>
        internal static string ERR_BadUnaryOperatorSignature {
            get {
                return ResourceManager.GetString("ERR_BadUnaryOperatorSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded unary operator &apos;{0}&apos; takes one parameter.
        /// </summary>
        internal static string ERR_BadUnOpArgs {
            get {
                return ResourceManager.GetString("ERR_BadUnOpArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;using namespace&apos; directive can only be applied to namespaces; &apos;{0}&apos; is a type not a namespace. Consider a &apos;using static&apos; directive instead.
        /// </summary>
        internal static string ERR_BadUsingNamespace {
            get {
                return ResourceManager.GetString("ERR_BadUsingNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;using static&apos; directive can only be applied to types; &apos;{0}&apos; is a namespace not a type. Consider a &apos;using namespace&apos; directive instead.
        /// </summary>
        internal static string ERR_BadUsingType {
            get {
                return ResourceManager.GetString("ERR_BadUsingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A method with vararg cannot be generic, be in a generic type, or have a params parameter.
        /// </summary>
        internal static string ERR_BadVarargs {
            get {
                return ResourceManager.GetString("ERR_BadVarargs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected ; or = (cannot specify constructor arguments in declaration).
        /// </summary>
        internal static string ERR_BadVarDecl {
            get {
                return ResourceManager.GetString("ERR_BadVarDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: base class &apos;{1}&apos; is less accessible than class &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisBaseClass {
            get {
                return ResourceManager.GetString("ERR_BadVisBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: base interface &apos;{1}&apos; is less accessible than interface &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisBaseInterface {
            get {
                return ResourceManager.GetString("ERR_BadVisBaseInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: constraint type &apos;{1}&apos; is less accessible than &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisBound {
            get {
                return ResourceManager.GetString("ERR_BadVisBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type &apos;{1}&apos; is less accessible than delegate &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisDelegateParam {
            get {
                return ResourceManager.GetString("ERR_BadVisDelegateParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type &apos;{1}&apos; is less accessible than delegate &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisDelegateReturn {
            get {
                return ResourceManager.GetString("ERR_BadVisDelegateReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: event type &apos;{1}&apos; is less accessible than event &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisEventType {
            get {
                return ResourceManager.GetString("ERR_BadVisEventType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: field type &apos;{1}&apos; is less accessible than field &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisFieldType {
            get {
                return ResourceManager.GetString("ERR_BadVisFieldType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type &apos;{1}&apos; is less accessible than indexer &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisIndexerParam {
            get {
                return ResourceManager.GetString("ERR_BadVisIndexerParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: indexer return type &apos;{1}&apos; is less accessible than indexer &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisIndexerReturn {
            get {
                return ResourceManager.GetString("ERR_BadVisIndexerReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type &apos;{1}&apos; is less accessible than operator &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisOpParam {
            get {
                return ResourceManager.GetString("ERR_BadVisOpParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type &apos;{1}&apos; is less accessible than operator &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisOpReturn {
            get {
                return ResourceManager.GetString("ERR_BadVisOpReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: parameter type &apos;{1}&apos; is less accessible than method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisParamType {
            get {
                return ResourceManager.GetString("ERR_BadVisParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: property type &apos;{1}&apos; is less accessible than property &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisPropertyType {
            get {
                return ResourceManager.GetString("ERR_BadVisPropertyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent accessibility: return type &apos;{1}&apos; is less accessible than method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_BadVisReturnType {
            get {
                return ResourceManager.GetString("ERR_BadVisReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning level must be in the range 0-4.
        /// </summary>
        internal static string ERR_BadWarningLevel {
            get {
                return ResourceManager.GetString("ERR_BadWarningLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading Win32 resources -- {0}.
        /// </summary>
        internal static string ERR_BadWin32Res {
            get {
                return ResourceManager.GetString("ERR_BadWin32Res", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield a value in the body of a catch clause.
        /// </summary>
        internal static string ERR_BadYieldInCatch {
            get {
                return ResourceManager.GetString("ERR_BadYieldInCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield in the body of a finally clause.
        /// </summary>
        internal static string ERR_BadYieldInFinally {
            get {
                return ResourceManager.GetString("ERR_BadYieldInFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot yield a value in the body of a try block with a catch clause.
        /// </summary>
        internal static string ERR_BadYieldInTryOfCatch {
            get {
                return ResourceManager.GetString("ERR_BadYieldInTryOfCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base class &apos;{0}&apos; must come before any interfaces.
        /// </summary>
        internal static string ERR_BaseClassMustBeFirst {
            get {
                return ResourceManager.GetString("ERR_BaseClassMustBeFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{0}&apos; inherits conflicting constraints &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_BaseConstraintConflict {
            get {
                return ResourceManager.GetString("ERR_BaseConstraintConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of keyword &apos;base&apos; is not valid in this context.
        /// </summary>
        internal static string ERR_BaseIllegal {
            get {
                return ResourceManager.GetString("ERR_BaseIllegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;base&apos; is not available in the current context.
        /// </summary>
        internal static string ERR_BaseInBadContext {
            get {
                return ResourceManager.GetString("ERR_BaseInBadContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;base&apos; is not available in a static method.
        /// </summary>
        internal static string ERR_BaseInStaticMeth {
            get {
                return ResourceManager.GetString("ERR_BaseInStaticMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a binary file instead of a text file.
        /// </summary>
        internal static string ERR_BinaryFile {
            get {
                return ResourceManager.GetString("ERR_BinaryFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not supported by the language.
        /// </summary>
        internal static string ERR_BindToBogus {
            get {
                return ResourceManager.GetString("ERR_BindToBogus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event &apos;{0}&apos; is not supported by the language; try directly calling accessor method &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_BindToBogusProp1 {
            get {
                return ResourceManager.GetString("ERR_BindToBogusProp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property, indexer, or event &apos;{0}&apos; is not supported by the language; try directly calling accessor methods &apos;{1}&apos; or &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_BindToBogusProp2 {
            get {
                return ResourceManager.GetString("ERR_BindToBogusProp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block bodies and expression bodies cannot both be provided..
        /// </summary>
        internal static string ERR_BlockBodyAndExpressionBody {
            get {
                return ResourceManager.GetString("ERR_BlockBodyAndExpressionBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot implement &apos;{1}&apos; because it is not supported by the language.
        /// </summary>
        internal static string ERR_BogusExplicitImpl {
            get {
                return ResourceManager.GetString("ERR_BogusExplicitImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a type not supported by the language.
        /// </summary>
        internal static string ERR_BogusType {
            get {
                return ResourceManager.GetString("ERR_BogusType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A declaration of a by-reference variable must have an initializer.
        /// </summary>
        internal static string ERR_ByReferenceVariableMustBeInitialized {
            get {
                return ResourceManager.GetString("ERR_ByReferenceVariableMustBeInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain an out or ref parameter.
        /// </summary>
        internal static string ERR_ByRefParameterInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_ByRefParameterInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By-reference return type &apos;ref {0}&apos; is not supported..
        /// </summary>
        internal static string ERR_ByRefReturnUnsupported {
            get {
                return ResourceManager.GetString("ERR_ByRefReturnUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; cannot be used in an expression containing the type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ByRefTypeAndAwait {
            get {
                return ResourceManager.GetString("ERR_ByRefTypeAndAwait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not directly call your base class Finalize method. It is called automatically from your destructor..
        /// </summary>
        internal static string ERR_CallingBaseFinalizeDeprecated {
            get {
                return ResourceManager.GetString("ERR_CallingBaseFinalizeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destructors and object.Finalize cannot be called directly. Consider calling IDisposable.Dispose if available..
        /// </summary>
        internal static string ERR_CallingFinalizeDeprecated {
            get {
                return ResourceManager.GetString("ERR_CallingFinalizeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deconstruct dynamic objects..
        /// </summary>
        internal static string ERR_CannotDeconstructDynamic {
            get {
                return ResourceManager.GetString("ERR_CannotDeconstructDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /embed switch is only supported when emitting Portable PDB (/debug:portable or /debug:embedded)..
        /// </summary>
        internal static string ERR_CannotEmbedWithoutPdb {
            get {
                return ResourceManager.GetString("ERR_CannotEmbedWithoutPdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass null for friend assembly name.
        /// </summary>
        internal static string ERR_CannotPassNullForFriendAssembly {
            get {
                return ResourceManager.GetString("ERR_CannotPassNullForFriendAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot explicitly call operator or accessor.
        /// </summary>
        internal static string ERR_CantCallSpecialMethod {
            get {
                return ResourceManager.GetString("ERR_CantCallSpecialMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot change access modifiers when overriding &apos;{1}&apos; inherited member &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_CantChangeAccessOnOverride {
            get {
                return ResourceManager.GetString("ERR_CantChangeAccessOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must {2}return by reference to match overridden member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantChangeRefReturnOnOverride {
            get {
                return ResourceManager.GetString("ERR_CantChangeRefReturnOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: return type must be &apos;{2}&apos; to match overridden member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantChangeReturnTypeOnOverride {
            get {
                return ResourceManager.GetString("ERR_CantChangeReturnTypeOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot change tuple element names when overriding inherited member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantChangeTupleNamesOnOverride {
            get {
                return ResourceManager.GetString("ERR_CantChangeTupleNamesOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: type must be &apos;{2}&apos; to match overridden member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantChangeTypeOnOverride {
            get {
                return ResourceManager.GetString("ERR_CantChangeTypeOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert anonymous method block without a parameter list to delegate type &apos;{0}&apos; because it has one or more out parameters.
        /// </summary>
        internal static string ERR_CantConvAnonMethNoParams {
            get {
                return ResourceManager.GetString("ERR_CantConvAnonMethNoParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert {0} to delegate type &apos;{1}&apos; because the parameter types do not match the delegate parameter types.
        /// </summary>
        internal static string ERR_CantConvAnonMethParams {
            get {
                return ResourceManager.GetString("ERR_CantConvAnonMethParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert {0} to intended delegate type because some of the return types in the block are not implicitly convertible to the delegate return type.
        /// </summary>
        internal static string ERR_CantConvAnonMethReturns {
            get {
                return ResourceManager.GetString("ERR_CantConvAnonMethReturns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert async {0} to delegate type &apos;{1}&apos;. An async {0} may return void, Task or Task&lt;T&gt;, none of which are convertible to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_CantConvAsyncAnonFuncReturns {
            get {
                return ResourceManager.GetString("ERR_CantConvAsyncAnonFuncReturns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot derive from sealed type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantDeriveFromSealedType {
            get {
                return ResourceManager.GetString("ERR_CantDeriveFromSealedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting options specified: Win32 resource file; Win32 icon.
        /// </summary>
        internal static string ERR_CantHaveWin32ResAndIcon {
            get {
                return ResourceManager.GetString("ERR_CantHaveWin32ResAndIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflicting options specified: Win32 resource file; Win32 manifest.
        /// </summary>
        internal static string ERR_CantHaveWin32ResAndManifest {
            get {
                return ResourceManager.GetString("ERR_CantHaveWin32ResAndManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type arguments for method &apos;{0}&apos; cannot be inferred from the usage. Try specifying the type arguments explicitly..
        /// </summary>
        internal static string ERR_CantInferMethTypeArgs {
            get {
                return ResourceManager.GetString("ERR_CantInferMethTypeArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create temporary file -- {0}.
        /// </summary>
        internal static string ERR_CantMakeTempFile {
            get {
                return ResourceManager.GetString("ERR_CantMakeTempFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open &apos;{0}&apos; for writing -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantOpenFileWrite {
            get {
                return ResourceManager.GetString("ERR_CantOpenFileWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening icon file {0} -- {1}.
        /// </summary>
        internal static string ERR_CantOpenIcon {
            get {
                return ResourceManager.GetString("ERR_CantOpenIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening Win32 manifest file {0} -- {1}.
        /// </summary>
        internal static string ERR_CantOpenWin32Manifest {
            get {
                return ResourceManager.GetString("ERR_CantOpenWin32Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening Win32 resource file &apos;{0}&apos; -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantOpenWin32Res {
            get {
                return ResourceManager.GetString("ERR_CantOpenWin32Res", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override &apos;{1}&apos; because it is not supported by the language.
        /// </summary>
        internal static string ERR_CantOverrideBogusMethod {
            get {
                return ResourceManager.GetString("ERR_CantOverrideBogusMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override; &apos;{1}&apos; is not an event.
        /// </summary>
        internal static string ERR_CantOverrideNonEvent {
            get {
                return ResourceManager.GetString("ERR_CantOverrideNonEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override because &apos;{1}&apos; is not a function.
        /// </summary>
        internal static string ERR_CantOverrideNonFunction {
            get {
                return ResourceManager.GetString("ERR_CantOverrideNonFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override because &apos;{1}&apos; is not a property.
        /// </summary>
        internal static string ERR_CantOverrideNonProperty {
            get {
                return ResourceManager.GetString("ERR_CantOverrideNonProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override inherited member &apos;{1}&apos; because it is not marked virtual, abstract, or override.
        /// </summary>
        internal static string ERR_CantOverrideNonVirtual {
            get {
                return ResourceManager.GetString("ERR_CantOverrideNonVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override inherited member &apos;{1}&apos; because it is sealed.
        /// </summary>
        internal static string ERR_CantOverrideSealed {
            get {
                return ResourceManager.GetString("ERR_CantOverrideSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read config file &apos;{0}&apos; -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantReadConfigFile {
            get {
                return ResourceManager.GetString("ERR_CantReadConfigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading resource &apos;{0}&apos; -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantReadResource {
            get {
                return ResourceManager.GetString("ERR_CantReadResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading ruleset file {0} - {1}.
        /// </summary>
        internal static string ERR_CantReadRulesetFile {
            get {
                return ResourceManager.GetString("ERR_CantReadRulesetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot link resource files when building a module.
        /// </summary>
        internal static string ERR_CantRefResource {
            get {
                return ResourceManager.GetString("ERR_CantRefResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return an expression of type &apos;void&apos;.
        /// </summary>
        internal static string ERR_CantReturnVoid {
            get {
                return ResourceManager.GetString("ERR_CantReturnVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading Win32 manifest file &apos;{0}&apos; -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CantSetWin32Manifest {
            get {
                return ResourceManager.GetString("ERR_CantSetWin32Manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RequiredAttribute attribute is not permitted on C# types.
        /// </summary>
        internal static string ERR_CantUseRequiredAttribute {
            get {
                return ResourceManager.GetString("ERR_CantUseRequiredAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation overflows at compile time in checked mode.
        /// </summary>
        internal static string ERR_CheckedOverflow {
            get {
                return ResourceManager.GetString("ERR_CheckedOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The evaluation of the constant value for &apos;{0}&apos; involves a circular definition.
        /// </summary>
        internal static string ERR_CircConstValue {
            get {
                return ResourceManager.GetString("ERR_CircConstValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular base class dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CircularBase {
            get {
                return ResourceManager.GetString("ERR_CircularBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular constraint dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_CircularConstraint {
            get {
                return ResourceManager.GetString("ERR_CircularConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class type constraint &apos;{0}&apos; must come before any other constraints.
        /// </summary>
        internal static string ERR_ClassBoundNotFirst {
            get {
                return ResourceManager.GetString("ERR_ClassBoundNotFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: containing type does not implement interface &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ClassDoesntImplementInterface {
            get {
                return ResourceManager.GetString("ERR_ClassDoesntImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object, string, or class type expected.
        /// </summary>
        internal static string ERR_ClassTypeExpected {
            get {
                return ResourceManager.GetString("ERR_ClassTypeExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ) expected.
        /// </summary>
        internal static string ERR_CloseParenExpected {
            get {
                return ResourceManager.GetString("ERR_CloseParenExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;. &apos;{2}&apos; cannot implement an interface member because it is not public..
        /// </summary>
        internal static string ERR_CloseUnimplementedInterfaceMemberNotPublic {
            get {
                return ResourceManager.GetString("ERR_CloseUnimplementedInterfaceMemberNotPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;. &apos;{2}&apos; cannot implement an interface member because it is static..
        /// </summary>
        internal static string ERR_CloseUnimplementedInterfaceMemberStatic {
            get {
                return ResourceManager.GetString("ERR_CloseUnimplementedInterfaceMemberStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;. &apos;{2}&apos; cannot implement &apos;{1}&apos; because it does not return by {3}.
        /// </summary>
        internal static string ERR_CloseUnimplementedInterfaceMemberWrongRefReturn {
            get {
                return ResourceManager.GetString("ERR_CloseUnimplementedInterfaceMemberWrongRefReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;. &apos;{2}&apos; cannot implement &apos;{1}&apos; because it does not have the matching return type of &apos;{3}&apos;..
        /// </summary>
        internal static string ERR_CloseUnimplementedInterfaceMemberWrongReturnType {
            get {
                return ResourceManager.GetString("ERR_CloseUnimplementedInterfaceMemberWrongReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; given in a source file conflicts with option &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_CmdOptionConflictsSource {
            get {
                return ResourceManager.GetString("ERR_CmdOptionConflictsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use alias &apos;{0}&apos; with &apos;::&apos; since the alias references a type. Use &apos;.&apos; instead..
        /// </summary>
        internal static string ERR_ColColWithTypeAlias {
            get {
                return ResourceManager.GetString("ERR_ColColWithTypeAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize type &apos;{0}&apos; with a collection initializer because it does not implement &apos;System.Collections.IEnumerable&apos;.
        /// </summary>
        internal static string ERR_CollectionInitRequiresIEnumerable {
            get {
                return ResourceManager.GetString("ERR_CollectionInitRequiresIEnumerable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a class with the ComImport attribute cannot specify a base class.
        /// </summary>
        internal static string ERR_ComImportWithBase {
            get {
                return ResourceManager.GetString("ERR_ComImportWithBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since &apos;{1}&apos; has the ComImport attribute, &apos;{0}&apos; must be extern or abstract.
        /// </summary>
        internal static string ERR_ComImportWithImpl {
            get {
                return ResourceManager.GetString("ERR_ComImportWithImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a class with the ComImport attribute cannot specify field initializers..
        /// </summary>
        internal static string ERR_ComImportWithInitializers {
            get {
                return ResourceManager.GetString("ERR_ComImportWithInitializers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Guid attribute must be specified with the ComImport attribute.
        /// </summary>
        internal static string ERR_ComImportWithoutUuidAttribute {
            get {
                return ResourceManager.GetString("ERR_ComImportWithoutUuidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A class with the ComImport attribute cannot have a user-defined constructor.
        /// </summary>
        internal static string ERR_ComImportWithUserCtor {
            get {
                return ResourceManager.GetString("ERR_ComImportWithUserCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation cancelled by user.
        /// </summary>
        internal static string ERR_CompileCancelled {
            get {
                return ResourceManager.GetString("ERR_CompileCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiler version: &apos;{0}&apos;. Language version: {1}..
        /// </summary>
        internal static string ERR_CompilerAndLanguageVersion {
            get {
                return ResourceManager.GetString("ERR_CompilerAndLanguageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a COM call with ref omitted on arguments.
        /// </summary>
        internal static string ERR_ComRefCallInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_ComRefCallInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; must declare a body because it is not marked abstract, extern, or partial.
        /// </summary>
        internal static string ERR_ConcreteMissingBody {
            get {
                return ResourceManager.GetString("ERR_ConcreteMissingBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on &apos;{0}&apos; because its return type is not void.
        /// </summary>
        internal static string ERR_ConditionalMustReturnVoid {
            get {
                return ResourceManager.GetString("ERR_ConditionalMustReturnVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on interface members.
        /// </summary>
        internal static string ERR_ConditionalOnInterfaceMethod {
            get {
                return ResourceManager.GetString("ERR_ConditionalOnInterfaceMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; is only valid on methods or attribute classes.
        /// </summary>
        internal static string ERR_ConditionalOnNonAttributeClass {
            get {
                return ResourceManager.GetString("ERR_ConditionalOnNonAttributeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on &apos;{0}&apos; because it is an override method.
        /// </summary>
        internal static string ERR_ConditionalOnOverride {
            get {
                return ResourceManager.GetString("ERR_ConditionalOnOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Conditional attribute is not valid on &apos;{0}&apos; because it is a constructor, destructor, operator, or explicit interface implementation.
        /// </summary>
        internal static string ERR_ConditionalOnSpecialMethod {
            get {
                return ResourceManager.GetString("ERR_ConditionalOnSpecialMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional member &apos;{0}&apos; cannot have an out parameter.
        /// </summary>
        internal static string ERR_ConditionalWithOutParam {
            get {
                return ResourceManager.GetString("ERR_ConditionalWithOutParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace &apos;{1}&apos; contains a definition conflicting with alias &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ConflictAliasAndMember {
            get {
                return ResourceManager.GetString("ERR_ConflictAliasAndMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias &apos;{0}&apos; conflicts with {1} definition.
        /// </summary>
        internal static string ERR_ConflictingAliasAndDefinition {
            get {
                return ResourceManager.GetString("ERR_ConflictingAliasAndDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly and module &apos;{0}&apos; cannot target different processors..
        /// </summary>
        internal static string ERR_ConflictingMachineModule {
            get {
                return ResourceManager.GetString("ERR_ConflictingMachineModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constant value is expected.
        /// </summary>
        internal static string ERR_ConstantExpected {
            get {
                return ResourceManager.GetString("ERR_ConstantExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of String constant exceeds current memory limit.  Try splitting the string into multiple constants..
        /// </summary>
        internal static string ERR_ConstantStringTooLong {
            get {
                return ResourceManager.GetString("ERR_ConstantStringTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value &apos;{0}&apos; cannot be converted to a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ConstOutOfRange {
            get {
                return ResourceManager.GetString("ERR_ConstOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant value &apos;{0}&apos; cannot be converted to a &apos;{1}&apos; (use &apos;unchecked&apos; syntax to override).
        /// </summary>
        internal static string ERR_ConstOutOfRangeChecked {
            get {
                return ResourceManager.GetString("ERR_ConstOutOfRangeChecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static classes cannot be used as constraints.
        /// </summary>
        internal static string ERR_ConstraintIsStaticClass {
            get {
                return ResourceManager.GetString("ERR_ConstraintIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraints are not allowed on non-generic declarations.
        /// </summary>
        internal static string ERR_ConstraintOnlyAllowedOnGenericDecl {
            get {
                return ResourceManager.GetString("ERR_ConstraintOnlyAllowedOnGenericDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint cannot be a dynamic type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ConstructedDynamicTypeAsBound {
            get {
                return ResourceManager.GetString("ERR_ConstructedDynamicTypeAsBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static classes cannot have instance constructors.
        /// </summary>
        internal static string ERR_ConstructorInStaticClass {
            get {
                return ResourceManager.GetString("ERR_ConstructorInStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A const field requires a value to be provided.
        /// </summary>
        internal static string ERR_ConstValueRequired {
            get {
                return ResourceManager.GetString("ERR_ConstValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined conversion must convert to or from the enclosing type.
        /// </summary>
        internal static string ERR_ConversionNotInvolvingContainedType {
            get {
                return ResourceManager.GetString("ERR_ConversionNotInvolvingContainedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple with {0} elements cannot be converted to type &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_ConversionNotTupleCompatible {
            get {
                return ResourceManager.GetString("ERR_ConversionNotTupleCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: user-defined conversions to or from a base class are not allowed.
        /// </summary>
        internal static string ERR_ConversionWithBase {
            get {
                return ResourceManager.GetString("ERR_ConversionWithBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: user-defined conversions to or from a derived class are not allowed.
        /// </summary>
        internal static string ERR_ConversionWithDerived {
            get {
                return ResourceManager.GetString("ERR_ConversionWithDerived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: user-defined conversions to or from an interface are not allowed.
        /// </summary>
        internal static string ERR_ConversionWithInterface {
            get {
                return ResourceManager.GetString("ERR_ConversionWithInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert to static type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ConvertToStaticClass {
            get {
                return ResourceManager.GetString("ERR_ConvertToStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{1}&apos; has the &apos;struct&apos; constraint so &apos;{1}&apos; cannot be used as a constraint for &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ConWithValCon {
            get {
                return ResourceManager.GetString("ERR_ConWithValCon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cryptographic failure while creating hashes..
        /// </summary>
        internal static string ERR_CryptoHashFailed {
            get {
                return ResourceManager.GetString("ERR_CryptoHashFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad array declarator: To declare a managed array the rank specifier precedes the variable&apos;s identifier. To declare a fixed size buffer field, use the fixed keyword before the field type..
        /// </summary>
        internal static string ERR_CStyleArray {
            get {
                return ResourceManager.GetString("ERR_CStyleArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inherited interface &apos;{1}&apos; causes a cycle in the interface hierarchy of &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_CycleInInterfaceInheritance {
            get {
                return ResourceManager.GetString("ERR_CycleInInterfaceInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type forwarder for type &apos;{0}&apos; in assembly &apos;{1}&apos; causes a cycle.
        /// </summary>
        internal static string ERR_CycleInTypeForwarder {
            get {
                return ResourceManager.GetString("ERR_CycleInTypeForwarder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug entry point must be a definition of a method declared in the current compilation..
        /// </summary>
        internal static string ERR_DebugEntryPointNotSourceMethodDefinition {
            get {
                return ResourceManager.GetString("ERR_DebugEntryPointNotSourceMethodDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Evaluation of the decimal constant expression failed.
        /// </summary>
        internal static string ERR_DecConstError {
            get {
                return ResourceManager.GetString("ERR_DecConstError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A declaration is not allowed in this context..
        /// </summary>
        internal static string ERR_DeclarationExpressionNotPermitted {
            get {
                return ResourceManager.GetString("ERR_DeclarationExpressionNotPermitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deconstruction &apos;var (...)&apos; form disallows a specific type for &apos;var&apos;..
        /// </summary>
        internal static string ERR_DeconstructionVarFormDisallowsSpecificType {
            get {
                return ResourceManager.GetString("ERR_DeconstructionVarFormDisallowsSpecificType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deconstruct assignment requires an expression with a type on the right-hand-side..
        /// </summary>
        internal static string ERR_DeconstructRequiresExpression {
            get {
                return ResourceManager.GetString("ERR_DeconstructRequiresExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deconstruction must contain at least two variables..
        /// </summary>
        internal static string ERR_DeconstructTooFewElements {
            get {
                return ResourceManager.GetString("ERR_DeconstructTooFewElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deconstruct a tuple of &apos;{0}&apos; elements into &apos;{1}&apos; variables..
        /// </summary>
        internal static string ERR_DeconstructWrongCardinality {
            get {
                return ResourceManager.GetString("ERR_DeconstructWrongCardinality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of default literal is not valid in this context.
        /// </summary>
        internal static string ERR_DefaultLiteralNotValid {
            get {
                return ResourceManager.GetString("ERR_DefaultLiteralNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify the DefaultMember attribute on a type containing an indexer.
        /// </summary>
        internal static string ERR_DefaultMemberOnIndexedType {
            get {
                return ResourceManager.GetString("ERR_DefaultMemberOnIndexedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument of type &apos;{0}&apos; is not applicable for the DefaultParameterValue attribute.
        /// </summary>
        internal static string ERR_DefaultValueBadValueType {
            get {
                return ResourceManager.GetString("ERR_DefaultValueBadValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional parameters must appear after all required parameters.
        /// </summary>
        internal static string ERR_DefaultValueBeforeRequiredValue {
            get {
                return ResourceManager.GetString("ERR_DefaultValueBeforeRequiredValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify a default value for the &apos;this&apos; parameter.
        /// </summary>
        internal static string ERR_DefaultValueForExtensionParameter {
            get {
                return ResourceManager.GetString("ERR_DefaultValueForExtensionParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify a default value for a parameter array.
        /// </summary>
        internal static string ERR_DefaultValueForParamsParameter {
            get {
                return ResourceManager.GetString("ERR_DefaultValueForParamsParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default parameter value for &apos;{0}&apos; must be a compile-time constant.
        /// </summary>
        internal static string ERR_DefaultValueMustBeConstant {
            get {
                return ResourceManager.GetString("ERR_DefaultValueMustBeConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default values are not valid in this context..
        /// </summary>
        internal static string ERR_DefaultValueNotAllowed {
            get {
                return ResourceManager.GetString("ERR_DefaultValueNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the argument to the DefaultParameterValue attribute must match the parameter type.
        /// </summary>
        internal static string ERR_DefaultValueTypeMustMatch {
            get {
                return ResourceManager.GetString("ERR_DefaultValueTypeMustMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify default parameter value in conjunction with DefaultParameterAttribute or OptionalAttribute.
        /// </summary>
        internal static string ERR_DefaultValueUsedWithAttributes {
            get {
                return ResourceManager.GetString("ERR_DefaultValueUsedWithAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create delegate with &apos;{0}&apos; because it or a method it overrides has a Conditional attribute.
        /// </summary>
        internal static string ERR_DelegateOnConditional {
            get {
                return ResourceManager.GetString("ERR_DelegateOnConditional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind delegate to &apos;{0}&apos; because it is a member of &apos;System.Nullable&lt;T&gt;&apos;.
        /// </summary>
        internal static string ERR_DelegateOnNullable {
            get {
                return ResourceManager.GetString("ERR_DelegateOnNullable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ref mismatch between &apos;{0}&apos; and delegate &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DelegateRefMismatch {
            get {
                return ResourceManager.GetString("ERR_DelegateRefMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method &apos;{0}&apos; for the collection initializer element is obsolete. {1}.
        /// </summary>
        internal static string ERR_DeprecatedCollectionInitAddStr {
            get {
                return ResourceManager.GetString("ERR_DeprecatedCollectionInitAddStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is obsolete: &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DeprecatedSymbolStr {
            get {
                return ResourceManager.GetString("ERR_DeprecatedSymbolStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot implement a dynamic interface &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DeriveFromConstructedDynamic {
            get {
                return ResourceManager.GetString("ERR_DeriveFromConstructedDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot derive from the dynamic type.
        /// </summary>
        internal static string ERR_DeriveFromDynamic {
            get {
                return ResourceManager.GetString("ERR_DeriveFromDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot derive from special class &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DeriveFromEnumOrValueType {
            get {
                return ResourceManager.GetString("ERR_DeriveFromEnumOrValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot derive from &apos;{0}&apos; because it is a type parameter.
        /// </summary>
        internal static string ERR_DerivingFromATyVar {
            get {
                return ResourceManager.GetString("ERR_DerivingFromATyVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static classes cannot contain destructors.
        /// </summary>
        internal static string ERR_DestructorInStaticClass {
            get {
                return ResourceManager.GetString("ERR_DestructorInStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a dictionary initializer..
        /// </summary>
        internal static string ERR_DictionaryInitializerInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_DictionaryInitializerInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot infer the type of implicitly-typed discard..
        /// </summary>
        internal static string ERR_DiscardTypeInferenceFailed {
            get {
                return ResourceManager.GetString("ERR_DiscardTypeInferenceFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DllImport attribute cannot be applied to a method that is generic or contained in a generic type..
        /// </summary>
        internal static string ERR_DllImportOnGenericMethod {
            get {
                return ResourceManager.GetString("ERR_DllImportOnGenericMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DllImport attribute must be specified on a method marked &apos;static&apos; and &apos;extern&apos;.
        /// </summary>
        internal static string ERR_DllImportOnInvalidMethod {
            get {
                return ResourceManager.GetString("ERR_DllImportOnInvalidMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error writing to XML documentation file: {0}.
        /// </summary>
        internal static string ERR_DocFileGen {
            get {
                return ResourceManager.GetString("ERR_DocFileGen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DoesntImplementAwaitInterface {
            get {
                return ResourceManager.GetString("ERR_DoesntImplementAwaitInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.Runtime.CompilerServices.FixedBuffer&apos; attribute. Use the &apos;fixed&apos; field modifier instead..
        /// </summary>
        internal static string ERR_DoNotUseFixedBufferAttr {
            get {
                return ResourceManager.GetString("ERR_DoNotUseFixedBufferAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name &apos;{0}&apos; does not exist in the type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DottedTypeNameNotFoundInAgg {
            get {
                return ResourceManager.GetString("ERR_DottedTypeNameNotFoundInAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name &apos;{0}&apos; does not exist in the namespace &apos;{1}&apos; (are you missing an assembly reference?).
        /// </summary>
        internal static string ERR_DottedTypeNameNotFoundInNS {
            get {
                return ResourceManager.GetString("ERR_DottedTypeNameNotFoundInNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name &apos;{0}&apos; could not be found in the namespace &apos;{1}&apos;. This type has been forwarded to assembly &apos;{2}&apos; Consider adding a reference to that assembly..
        /// </summary>
        internal static string ERR_DottedTypeNameNotFoundInNSFwd {
            get {
                return ResourceManager.GetString("ERR_DottedTypeNameNotFoundInNSFwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property accessor already defined.
        /// </summary>
        internal static string ERR_DuplicateAccessor {
            get {
                return ResourceManager.GetString("ERR_DuplicateAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The using alias &apos;{0}&apos; appeared previously in this namespace.
        /// </summary>
        internal static string ERR_DuplicateAlias {
            get {
                return ResourceManager.GetString("ERR_DuplicateAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &apos;{0}&apos; attribute.
        /// </summary>
        internal static string ERR_DuplicateAttribute {
            get {
                return ResourceManager.GetString("ERR_DuplicateAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &apos;{0}&apos; attribute in &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DuplicateAttributeInNetModule {
            get {
                return ResourceManager.GetString("ERR_DuplicateAttributeInNetModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate constraint &apos;{0}&apos; for type parameter &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DuplicateBound {
            get {
                return ResourceManager.GetString("ERR_DuplicateBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch statement contains multiple cases with the label value &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_DuplicateCaseLabel {
            get {
                return ResourceManager.GetString("ERR_DuplicateCaseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constraint clause has already been specified for type parameter &apos;{0}&apos;. All of the constraints for a type parameter must be specified in a single where clause..
        /// </summary>
        internal static string ERR_DuplicateConstraintClause {
            get {
                return ResourceManager.GetString("ERR_DuplicateConstraintClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate user-defined conversion in type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_DuplicateConversionInClass {
            get {
                return ResourceManager.GetString("ERR_DuplicateConversionInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter name &apos;{0}&apos; conflicts with an automatically-generated parameter name.
        /// </summary>
        internal static string ERR_DuplicateGeneratedName {
            get {
                return ResourceManager.GetString("ERR_DuplicateGeneratedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple assemblies with equivalent identity have been imported: &apos;{0}&apos; and &apos;{1}&apos;. Remove one of the duplicate references..
        /// </summary>
        internal static string ERR_DuplicateImport {
            get {
                return ResourceManager.GetString("ERR_DuplicateImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An assembly with the same simple name &apos;{0}&apos; has already been imported. Try removing one of the references (e.g. &apos;{1}&apos;) or sign them to enable side-by-side..
        /// </summary>
        internal static string ERR_DuplicateImportSimple {
            get {
                return ResourceManager.GetString("ERR_DuplicateImportSimple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already listed in interface list.
        /// </summary>
        internal static string ERR_DuplicateInterfaceInBaseList {
            get {
                return ResourceManager.GetString("ERR_DuplicateInterfaceInBaseList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already listed in the interface list on type &apos;{2}&apos; with different tuple element names, as &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_DuplicateInterfaceWithTupleNamesInBaseList {
            get {
                return ResourceManager.GetString("ERR_DuplicateInterfaceWithTupleNamesInBaseList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label &apos;{0}&apos; is a duplicate.
        /// </summary>
        internal static string ERR_DuplicateLabel {
            get {
                return ResourceManager.GetString("ERR_DuplicateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &apos;{0}&apos; modifier.
        /// </summary>
        internal static string ERR_DuplicateModifier {
            get {
                return ResourceManager.GetString("ERR_DuplicateModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument &apos;{0}&apos; cannot be specified multiple times.
        /// </summary>
        internal static string ERR_DuplicateNamedArgument {
            get {
                return ResourceManager.GetString("ERR_DuplicateNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; duplicate named attribute argument.
        /// </summary>
        internal static string ERR_DuplicateNamedAttributeArgument {
            get {
                return ResourceManager.GetString("ERR_DuplicateNamedAttributeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; already contains a definition for &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_DuplicateNameInClass {
            get {
                return ResourceManager.GetString("ERR_DuplicateNameInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace &apos;{1}&apos; already contains a definition for &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_DuplicateNameInNS {
            get {
                return ResourceManager.GetString("ERR_DuplicateNameInNS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter name &apos;{0}&apos; is a duplicate.
        /// </summary>
        internal static string ERR_DuplicateParamName {
            get {
                return ResourceManager.GetString("ERR_DuplicateParamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify accessibility modifiers for both accessors of the property or indexer &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_DuplicatePropertyAccessMods {
            get {
                return ResourceManager.GetString("ERR_DuplicatePropertyAccessMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; duplicate TypeForwardedToAttribute.
        /// </summary>
        internal static string ERR_DuplicateTypeForwarder {
            get {
                return ResourceManager.GetString("ERR_DuplicateTypeForwarder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate type parameter &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_DuplicateTypeParameter {
            get {
                return ResourceManager.GetString("ERR_DuplicateTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter can only have one &apos;{0}&apos; modifier.
        /// </summary>
        internal static string ERR_DupParamMod {
            get {
                return ResourceManager.GetString("ERR_DupParamMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define a class or member that utilizes &apos;dynamic&apos; because the compiler required type &apos;{0}&apos; cannot be found. Are you missing a reference?.
        /// </summary>
        internal static string ERR_DynamicAttributeMissing {
            get {
                return ResourceManager.GetString("ERR_DynamicAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass argument with dynamic type to params parameter &apos;{0}&apos; of local function &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_DynamicLocalFunctionParamsParameter {
            get {
                return ResourceManager.GetString("ERR_DynamicLocalFunctionParamsParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more types required to compile a dynamic expression cannot be found. Are you missing a reference?.
        /// </summary>
        internal static string ERR_DynamicRequiredTypesMissing {
            get {
                return ResourceManager.GetString("ERR_DynamicRequiredTypesMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint cannot be the dynamic type.
        /// </summary>
        internal static string ERR_DynamicTypeAsBound {
            get {
                return ResourceManager.GetString("ERR_DynamicTypeAsBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty character literal.
        /// </summary>
        internal static string ERR_EmptyCharConst {
            get {
                return ResourceManager.GetString("ERR_EmptyCharConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element initializer cannot be empty.
        /// </summary>
        internal static string ERR_EmptyElementInitializer {
            get {
                return ResourceManager.GetString("ERR_EmptyElementInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty format specifier..
        /// </summary>
        internal static string ERR_EmptyFormatSpecifier {
            get {
                return ResourceManager.GetString("ERR_EmptyFormatSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression expected after yield return.
        /// </summary>
        internal static string ERR_EmptyYield {
            get {
                return ResourceManager.GetString("ERR_EmptyYield", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot continue since the edit includes a reference to an embedded type: &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_EncNoPIAReference {
            get {
                return ResourceManager.GetString("ERR_EncNoPIAReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot emit debug information for a source text without encoding..
        /// </summary>
        internal static string ERR_EncodinglessSyntaxTree {
            get {
                return ResourceManager.GetString("ERR_EncodinglessSyntaxTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; added during the current debug session can only be accessed from within its declaring assembly &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_EncReferenceToAddedMember {
            get {
                return ResourceManager.GetString("ERR_EncReferenceToAddedMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot update &apos;{0}&apos;; attribute &apos;{1}&apos; is missing..
        /// </summary>
        internal static string ERR_EncUpdateFailedMissingAttribute {
            get {
                return ResourceManager.GetString("ERR_EncUpdateFailedMissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #endif directive expected.
        /// </summary>
        internal static string ERR_EndifDirectiveExpected {
            get {
                return ResourceManager.GetString("ERR_EndifDirectiveExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-line comment or end-of-line expected.
        /// </summary>
        internal static string ERR_EndOfPPLineExpected {
            get {
                return ResourceManager.GetString("ERR_EndOfPPLineExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #endregion directive expected.
        /// </summary>
        internal static string ERR_EndRegionDirectiveExpected {
            get {
                return ResourceManager.GetString("ERR_EndRegionDirectiveExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: the enumerator value is too large to fit in its type.
        /// </summary>
        internal static string ERR_EnumeratorOverflow {
            get {
                return ResourceManager.GetString("ERR_EnumeratorOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enums cannot contain explicit parameterless constructors.
        /// </summary>
        internal static string ERR_EnumsCantContainDefaultConstructor {
            get {
                return ResourceManager.GetString("ERR_EnumsCantContainDefaultConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or namespace definition, or end-of-file expected.
        /// </summary>
        internal static string ERR_EOFExpected {
            get {
                return ResourceManager.GetString("ERR_EOFExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error building Win32 resources -- {0}.
        /// </summary>
        internal static string ERR_ErrorBuildingWin32Resources {
            get {
                return ResourceManager.GetString("ERR_ErrorBuildingWin32Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #error: &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ErrorDirective {
            get {
                return ResourceManager.GetString("ERR_ErrorDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an error in a referenced assembly &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_ErrorInReferencedAssembly {
            get {
                return ResourceManager.GetString("ERR_ErrorInReferencedAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;{0}&apos; character may only be escaped by doubling &apos;{0}{0}&apos; in an interpolated string..
        /// </summary>
        internal static string ERR_EscapedCurly {
            get {
                return ResourceManager.GetString("ERR_EscapedCurly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: event property must have both add and remove accessors.
        /// </summary>
        internal static string ERR_EventNeedsBothAccessors {
            get {
                return ResourceManager.GetString("ERR_EventNeedsBothAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: event must be of a delegate type.
        /// </summary>
        internal static string ERR_EventNotDelegate {
            get {
                return ResourceManager.GetString("ERR_EventNotDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An event in an interface cannot have add or remove accessors.
        /// </summary>
        internal static string ERR_EventPropertyInInterface {
            get {
                return ResourceManager.GetString("ERR_EventPropertyInInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;by&apos;.
        /// </summary>
        internal static string ERR_ExpectedContextualKeywordBy {
            get {
                return ResourceManager.GetString("ERR_ExpectedContextualKeywordBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;equals&apos;.
        /// </summary>
        internal static string ERR_ExpectedContextualKeywordEquals {
            get {
                return ResourceManager.GetString("ERR_ExpectedContextualKeywordEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected contextual keyword &apos;on&apos;.
        /// </summary>
        internal static string ERR_ExpectedContextualKeywordOn {
            get {
                return ResourceManager.GetString("ERR_ExpectedContextualKeywordOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected catch or finally.
        /// </summary>
        internal static string ERR_ExpectedEndTry {
            get {
                return ResourceManager.GetString("ERR_ExpectedEndTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quoted file name expected.
        /// </summary>
        internal static string ERR_ExpectedPPFile {
            get {
                return ResourceManager.GetString("ERR_ExpectedPPFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A query body must end with a select clause or a group clause.
        /// </summary>
        internal static string ERR_ExpectedSelectOrGroup {
            get {
                return ResourceManager.GetString("ERR_ExpectedSelectOrGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a script (.csx file) but none specified.
        /// </summary>
        internal static string ERR_ExpectedSingleScript {
            get {
                return ResourceManager.GetString("ERR_ExpectedSingleScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword, identifier, or string expected after verbatim specifier: @.
        /// </summary>
        internal static string ERR_ExpectedVerbatimLiteral {
            get {
                return ResourceManager.GetString("ERR_ExpectedVerbatimLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.Runtime.CompilerServices.DynamicAttribute&apos;. Use the &apos;dynamic&apos; keyword instead..
        /// </summary>
        internal static string ERR_ExplicitDynamicAttr {
            get {
                return ResourceManager.GetString("ERR_ExplicitDynamicAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An explicit interface implementation of an event must use event accessor syntax.
        /// </summary>
        internal static string ERR_ExplicitEventFieldImpl {
            get {
                return ResourceManager.GetString("ERR_ExplicitEventFieldImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.Runtime.CompilerServices.ExtensionAttribute&apos;. Use the &apos;this&apos; keyword instead..
        /// </summary>
        internal static string ERR_ExplicitExtension {
            get {
                return ResourceManager.GetString("ERR_ExplicitExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit interface &apos;{0}&apos; with the specified type parameters because it causes method &apos;{1}&apos; to contain overloads which differ only on ref and out.
        /// </summary>
        internal static string ERR_ExplicitImplCollisionOnRefOut {
            get {
                return ResourceManager.GetString("ERR_ExplicitImplCollisionOnRefOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; should not have a params parameter since &apos;{1}&apos; does not.
        /// </summary>
        internal static string ERR_ExplicitImplParams {
            get {
                return ResourceManager.GetString("ERR_ExplicitImplParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: explicit interface declaration can only be declared in a class or struct.
        /// </summary>
        internal static string ERR_ExplicitInterfaceImplementationInNonClassOrStruct {
            get {
                return ResourceManager.GetString("ERR_ExplicitInterfaceImplementationInNonClassOrStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; in explicit interface declaration is not an interface.
        /// </summary>
        internal static string ERR_ExplicitInterfaceImplementationNotInterface {
            get {
                return ResourceManager.GetString("ERR_ExplicitInterfaceImplementationNotInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Auto-implemented properties cannot be used inside a type marked with StructLayout(LayoutKind.Explicit).
        /// </summary>
        internal static string ERR_ExplicitLayoutAndAutoImplementedProperty {
            get {
                return ResourceManager.GetString("ERR_ExplicitLayoutAndAutoImplementedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; explicit method implementation cannot implement &apos;{1}&apos; because it is an accessor.
        /// </summary>
        internal static string ERR_ExplicitMethodImplAccessor {
            get {
                return ResourceManager.GetString("ERR_ExplicitMethodImplAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use &apos;System.ParamArrayAttribute&apos;. Use the &apos;params&apos; keyword instead..
        /// </summary>
        internal static string ERR_ExplicitParamArray {
            get {
                return ResourceManager.GetString("ERR_ExplicitParamArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; adds an accessor not found in interface member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ExplicitPropertyAddingAccessor {
            get {
                return ResourceManager.GetString("ERR_ExplicitPropertyAddingAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit interface implementation &apos;{0}&apos; is missing accessor &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ExplicitPropertyMissingAccessor {
            get {
                return ResourceManager.GetString("ERR_ExplicitPropertyMissingAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot reference &apos;System.Runtime.CompilerServices.TupleElementNamesAttribute&apos; explicitly. Use the tuple syntax to define tuple names..
        /// </summary>
        internal static string ERR_ExplicitTupleElementNamesAttribute {
            get {
                return ResourceManager.GetString("ERR_ExplicitTupleElementNamesAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; exported from module &apos;{1}&apos; conflicts with type declared in primary module of this assembly..
        /// </summary>
        internal static string ERR_ExportedTypeConflictsWithDeclaration {
            get {
                return ResourceManager.GetString("ERR_ExportedTypeConflictsWithDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; exported from module &apos;{1}&apos; conflicts with type &apos;{2}&apos; exported from module &apos;{3}&apos;..
        /// </summary>
        internal static string ERR_ExportedTypesConflict {
            get {
                return ResourceManager.GetString("ERR_ExportedTypesConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected expression.
        /// </summary>
        internal static string ERR_ExpressionExpected {
            get {
                return ResourceManager.GetString("ERR_ExpressionExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression does not have a name..
        /// </summary>
        internal static string ERR_ExpressionHasNoName {
            get {
                return ResourceManager.GetString("ERR_ExpressionHasNoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression or declaration statement expected..
        /// </summary>
        internal static string ERR_ExpressionOrDeclarationExpected {
            get {
                return ResourceManager.GetString("ERR_ExpressionOrDeclarationExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an anonymous method expression.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsAnonymousMethod {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsAnonymousMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an assignment operator.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsAssignment {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a coalescing operator with a null or default literal left-hand side.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsBadCoalesce {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsBadCoalesce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a base access.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsBaseAccess {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsBaseAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a discard..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsDiscard {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsDiscard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a dynamic operation.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsDynamicOperation {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsDynamicOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an indexed property.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsIndexedProperty {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsIndexedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an &apos;is&apos; pattern-matching operator..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsIsMatch {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsIsMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a reference to a local function.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsLocalFunction {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsLocalFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a multidimensional array initializer.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a named argument specification.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsNamedArgument {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a call or invocation that uses optional arguments.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsOptionalArgument {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsOptionalArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an out argument variable declaration..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsOutVariable {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsOutVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain an unsafe pointer operation.
        /// </summary>
        internal static string ERR_ExpressionTreeContainsPointerOp {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsPointerOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a throw-expression..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsThrowExpression {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsThrowExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a tuple conversion..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsTupleConversion {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsTupleConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain a tuple literal..
        /// </summary>
        internal static string ERR_ExpressionTreeContainsTupleLiteral {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeContainsTupleLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert lambda to an expression tree whose type argument &apos;{0}&apos; is not a delegate type.
        /// </summary>
        internal static string ERR_ExpressionTreeMustHaveDelegate {
            get {
                return ResourceManager.GetString("ERR_ExpressionTreeMustHaveDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out variable and pattern variable declarations are not allowed within constructor initializers, field initializers, or property initializers..
        /// </summary>
        internal static string ERR_ExpressionVariableInConstructorOrFieldInitializer {
            get {
                return ResourceManager.GetString("ERR_ExpressionVariableInConstructorOrFieldInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out variable and pattern variable declarations are not allowed within a query clause..
        /// </summary>
        internal static string ERR_ExpressionVariableInQueryClause {
            get {
                return ResourceManager.GetString("ERR_ExpressionVariableInQueryClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define a new extension method because the compiler required type &apos;{0}&apos; cannot be found. Are you missing a reference to System.Core.dll?.
        /// </summary>
        internal static string ERR_ExtensionAttrNotFound {
            get {
                return ResourceManager.GetString("ERR_ExtensionAttrNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extension Add method is not supported for a collection initializer in an expression lambda..
        /// </summary>
        internal static string ERR_ExtensionCollectionElementInitializerInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_ExtensionCollectionElementInitializerInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension methods must be defined in a top level static class; {0} is a nested class.
        /// </summary>
        internal static string ERR_ExtensionMethodsDecl {
            get {
                return ResourceManager.GetString("ERR_ExtensionMethodsDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extern alias declaration must precede all other elements defined in the namespace.
        /// </summary>
        internal static string ERR_ExternAfterElements {
            get {
                return ResourceManager.GetString("ERR_ExternAfterElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;extern alias&apos; is not valid in this context.
        /// </summary>
        internal static string ERR_ExternAliasNotAllowed {
            get {
                return ResourceManager.GetString("ERR_ExternAliasNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be extern and declare a body.
        /// </summary>
        internal static string ERR_ExternHasBody {
            get {
                return ResourceManager.GetString("ERR_ExternHasBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be extern and have a constructor initializer.
        /// </summary>
        internal static string ERR_ExternHasConstructorInitializer {
            get {
                return ResourceManager.GetString("ERR_ExternHasConstructorInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is experimental and unsupported; use &apos;/features:{1}&apos; to enable..
        /// </summary>
        internal static string ERR_FeatureIsExperimental {
            get {
                return ResourceManager.GetString("ERR_FeatureIsExperimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not implemented in this compiler..
        /// </summary>
        internal static string ERR_FeatureIsUnimplemented {
            get {
                return ResourceManager.GetString("ERR_FeatureIsUnimplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 1. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion1 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 2. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion2 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 3. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion3 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 4. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion4 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 5. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion5 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 6. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion6 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 7. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion7 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 7.1. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion7_1 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion7_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not available in C# 7.2. Please use language version {1} or greater..
        /// </summary>
        internal static string ERR_FeatureNotAvailableInVersion7_2 {
            get {
                return ResourceManager.GetString("ERR_FeatureNotAvailableInVersion7_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree may not contain &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_FeatureNotValidInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_FeatureNotValidInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field or property cannot be of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_FieldCantBeRefAny {
            get {
                return ResourceManager.GetString("ERR_FieldCantBeRefAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field cannot have void type.
        /// </summary>
        internal static string ERR_FieldCantHaveVoidType {
            get {
                return ResourceManager.GetString("ERR_FieldCantHaveVoidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field has multiple distinct constant values..
        /// </summary>
        internal static string ERR_FieldHasMultipleDistinctConstantValues {
            get {
                return ResourceManager.GetString("ERR_FieldHasMultipleDistinctConstantValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot have instance property or field initializers in structs.
        /// </summary>
        internal static string ERR_FieldInitializerInStruct {
            get {
                return ResourceManager.GetString("ERR_FieldInitializerInStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field initializer cannot reference the non-static field, method, or property &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_FieldInitRefNonstatic {
            get {
                return ResourceManager.GetString("ERR_FieldInitRefNonstatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string ERR_FileNotFound {
            get {
                return ResourceManager.GetString("ERR_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use fixed size buffers contained in unfixed expressions. Try using the fixed statement..
        /// </summary>
        internal static string ERR_FixedBufferNotFixed {
            get {
                return ResourceManager.GetString("ERR_FixedBufferNotFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fixed buffer may only have one dimension..
        /// </summary>
        internal static string ERR_FixedBufferTooManyDimensions {
            get {
                return ResourceManager.GetString("ERR_FixedBufferTooManyDimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fixed size buffer field must have the array size specifier after the field name.
        /// </summary>
        internal static string ERR_FixedDimsRequired {
            get {
                return ResourceManager.GetString("ERR_FixedDimsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use fixed local &apos;{0}&apos; inside an anonymous method, lambda expression, or query expression.
        /// </summary>
        internal static string ERR_FixedLocalInLambda {
            get {
                return ResourceManager.GetString("ERR_FixedLocalInLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide an initializer in a fixed or using statement declaration.
        /// </summary>
        internal static string ERR_FixedMustInit {
            get {
                return ResourceManager.GetString("ERR_FixedMustInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only take the address of an unfixed expression inside of a fixed statement initializer.
        /// </summary>
        internal static string ERR_FixedNeeded {
            get {
                return ResourceManager.GetString("ERR_FixedNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffers can only be accessed through locals or fields.
        /// </summary>
        internal static string ERR_FixedNeedsLvalue {
            get {
                return ResourceManager.GetString("ERR_FixedNeedsLvalue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer fields may only be members of structs.
        /// </summary>
        internal static string ERR_FixedNotInStruct {
            get {
                return ResourceManager.GetString("ERR_FixedNotInStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot use the fixed statement to take the address of an already fixed expression.
        /// </summary>
        internal static string ERR_FixedNotNeeded {
            get {
                return ResourceManager.GetString("ERR_FixedNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer of length {0} and type &apos;{1}&apos; is too big.
        /// </summary>
        internal static string ERR_FixedOverflow {
            get {
                return ResourceManager.GetString("ERR_FixedOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating-point constant is outside the range of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_FloatOverflow {
            get {
                return ResourceManager.GetString("ERR_FloatOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach statement cannot operate on variables of type &apos;{0}&apos; because &apos;{0}&apos; does not contain a public definition for &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ForEachMissingMember {
            get {
                return ResourceManager.GetString("ERR_ForEachMissingMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forwarded type &apos;{0}&apos; conflicts with type declared in primary module of this assembly..
        /// </summary>
        internal static string ERR_ForwardedTypeConflictsWithDeclaration {
            get {
                return ResourceManager.GetString("ERR_ForwardedTypeConflictsWithDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; forwarded to assembly &apos;{1}&apos; conflicts with type &apos;{2}&apos; exported from module &apos;{3}&apos;..
        /// </summary>
        internal static string ERR_ForwardedTypeConflictsWithExportedType {
            get {
                return ResourceManager.GetString("ERR_ForwardedTypeConflictsWithExportedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is defined in this assembly, but a type forwarder is specified for it.
        /// </summary>
        internal static string ERR_ForwardedTypeInThisAssembly {
            get {
                return ResourceManager.GetString("ERR_ForwardedTypeInThisAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot forward type &apos;{0}&apos; because it is a nested type of &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_ForwardedTypeIsNested {
            get {
                return ResourceManager.GetString("ERR_ForwardedTypeIsNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; forwarded to assembly &apos;{1}&apos; conflicts with type &apos;{2}&apos; forwarded to assembly &apos;{3}&apos;..
        /// </summary>
        internal static string ERR_ForwardedTypesConflict {
            get {
                return ResourceManager.GetString("ERR_ForwardedTypesConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend assembly reference &apos;{0}&apos; is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified..
        /// </summary>
        internal static string ERR_FriendAssemblyBadArgs {
            get {
                return ResourceManager.GetString("ERR_FriendAssemblyBadArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend assembly reference &apos;{0}&apos; is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations..
        /// </summary>
        internal static string ERR_FriendAssemblySNReq {
            get {
                return ResourceManager.GetString("ERR_FriendAssemblySNReq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend access was granted by &apos;{0}&apos;, but the public key of the output assembly does not match that specified by the attribute in the granting assembly..
        /// </summary>
        internal static string ERR_FriendRefNotEqualToThis {
            get {
                return ResourceManager.GetString("ERR_FriendRefNotEqualToThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friend access was granted by &apos;{0}&apos;, but the strong name signing state of the output assembly does not match that of the granting assembly..
        /// </summary>
        internal static string ERR_FriendRefSigningMismatch {
            get {
                return ResourceManager.GetString("ERR_FriendRefSigningMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static types cannot be used as type arguments.
        /// </summary>
        internal static string ERR_GenericArgIsStaticClass {
            get {
                return ResourceManager.GetString("ERR_GenericArgIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. The nullable type &apos;{3}&apos; does not satisfy the constraint of &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_GenericConstraintNotSatisfiedNullableEnum {
            get {
                return ResourceManager.GetString("ERR_GenericConstraintNotSatisfiedNullableEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. The nullable type &apos;{3}&apos; does not satisfy the constraint of &apos;{1}&apos;. Nullable types can not satisfy any interface constraints..
        /// </summary>
        internal static string ERR_GenericConstraintNotSatisfiedNullableInterface {
            get {
                return ResourceManager.GetString("ERR_GenericConstraintNotSatisfiedNullableInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no implicit reference conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_GenericConstraintNotSatisfiedRefType {
            get {
                return ResourceManager.GetString("ERR_GenericConstraintNotSatisfiedRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no boxing conversion or type parameter conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_GenericConstraintNotSatisfiedTyVar {
            get {
                return ResourceManager.GetString("ERR_GenericConstraintNotSatisfiedTyVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{3}&apos; cannot be used as type parameter &apos;{2}&apos; in the generic type or method &apos;{0}&apos;. There is no boxing conversion from &apos;{3}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_GenericConstraintNotSatisfiedValType {
            get {
                return ResourceManager.GetString("ERR_GenericConstraintNotSatisfiedValType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A generic type cannot derive from &apos;{0}&apos; because it is an attribute class.
        /// </summary>
        internal static string ERR_GenericDerivingFromAttribute {
            get {
                return ResourceManager.GetString("ERR_GenericDerivingFromAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; from assembly &apos;{1}&apos; cannot be used across assembly boundaries because it has a generic type argument that is an embedded interop type..
        /// </summary>
        internal static string ERR_GenericsUsedAcrossAssemblies {
            get {
                return ResourceManager.GetString("ERR_GenericsUsedAcrossAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; cannot be embedded because it has a generic argument. Consider setting the &apos;Embed Interop Types&apos; property to false..
        /// </summary>
        internal static string ERR_GenericsUsedInNoPIAType {
            get {
                return ResourceManager.GetString("ERR_GenericsUsedInNoPIAType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A get or set accessor expected.
        /// </summary>
        internal static string ERR_GetOrSetExpected {
            get {
                return ResourceManager.GetString("ERR_GetOrSetExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly and module attributes are not allowed in this context.
        /// </summary>
        internal static string ERR_GlobalAttributesNotAllowed {
            get {
                return ResourceManager.GetString("ERR_GlobalAttributesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly and module attributes must precede all other elements defined in a file except using clauses and extern alias declarations.
        /// </summary>
        internal static string ERR_GlobalAttributesNotFirst {
            get {
                return ResourceManager.GetString("ERR_GlobalAttributesNotFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member definition, statement, or end-of-file expected.
        /// </summary>
        internal static string ERR_GlobalDefinitionOrStatementExpected {
            get {
                return ResourceManager.GetString("ERR_GlobalDefinitionOrStatementExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot redefine the global extern alias.
        /// </summary>
        internal static string ERR_GlobalExternAlias {
            get {
                return ResourceManager.GetString("ERR_GlobalExternAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name &apos;{0}&apos; could not be found in the global namespace (are you missing an assembly reference?).
        /// </summary>
        internal static string ERR_GlobalSingleTypeNameNotFound {
            get {
                return ResourceManager.GetString("ERR_GlobalSingleTypeNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name &apos;{0}&apos; could not be found in the global namespace. This type has been forwarded to assembly &apos;{1}&apos; Consider adding a reference to that assembly..
        /// </summary>
        internal static string ERR_GlobalSingleTypeNameNotFoundFwd {
            get {
                return ResourceManager.GetString("ERR_GlobalSingleTypeNameNotFoundFwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expressions and statements can only occur in a method body.
        /// </summary>
        internal static string ERR_GlobalStatement {
            get {
                return ResourceManager.GetString("ERR_GlobalStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The non-generic {1} &apos;{0}&apos; cannot be used with type arguments.
        /// </summary>
        internal static string ERR_HasNoTypeVars {
            get {
                return ResourceManager.GetString("ERR_HasNoTypeVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; hides inherited abstract member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_HidingAbstractMethod {
            get {
                return ResourceManager.GetString("ERR_HidingAbstractMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier expected.
        /// </summary>
        internal static string ERR_IdentifierExpected {
            get {
                return ResourceManager.GetString("ERR_IdentifierExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier expected; &apos;{1}&apos; is a keyword.
        /// </summary>
        internal static string ERR_IdentifierExpectedKW {
            get {
                return ResourceManager.GetString("ERR_IdentifierExpectedKW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator cannot take an object of the enclosing type and convert to an object of the enclosing type.
        /// </summary>
        internal static string ERR_IdentityConversion {
            get {
                return ResourceManager.GetString("ERR_IdentityConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An __arglist expression may only appear inside of a call or new expression.
        /// </summary>
        internal static string ERR_IllegalArglist {
            get {
                return ResourceManager.GetString("ERR_IllegalArglist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized escape sequence.
        /// </summary>
        internal static string ERR_IllegalEscape {
            get {
                return ResourceManager.GetString("ERR_IllegalEscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffer type must be one of the following: bool, byte, short, int, long, char, sbyte, ushort, uint, ulong, float or double.
        /// </summary>
        internal static string ERR_IllegalFixedType {
            get {
                return ResourceManager.GetString("ERR_IllegalFixedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe code may not appear in iterators.
        /// </summary>
        internal static string ERR_IllegalInnerUnsafe {
            get {
                return ResourceManager.GetString("ERR_IllegalInnerUnsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to params is not valid in this context.
        /// </summary>
        internal static string ERR_IllegalParams {
            get {
                return ResourceManager.GetString("ERR_IllegalParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ref and out are not valid in this context.
        /// </summary>
        internal static string ERR_IllegalRefParam {
            get {
                return ResourceManager.GetString("ERR_IllegalRefParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only assignment, call, increment, decrement, and new object expressions can be used as a statement.
        /// </summary>
        internal static string ERR_IllegalStatement {
            get {
                return ResourceManager.GetString("ERR_IllegalStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe code may only appear if compiling with /unsafe.
        /// </summary>
        internal static string ERR_IllegalUnsafe {
            get {
                return ResourceManager.GetString("ERR_IllegalUnsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __arglist is not valid in this context.
        /// </summary>
        internal static string ERR_IllegalVarArgs {
            get {
                return ResourceManager.GetString("ERR_IllegalVarArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid variance modifier. Only interface and delegate type parameters can be specified as variant..
        /// </summary>
        internal static string ERR_IllegalVarianceSyntax {
            get {
                return ResourceManager.GetString("ERR_IllegalVarianceSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constraints for type parameter &apos;{0}&apos; of method &apos;{1}&apos; must match the constraints for type parameter &apos;{2}&apos; of interface method &apos;{3}&apos;. Consider using an explicit interface implementation instead..
        /// </summary>
        internal static string ERR_ImplBadConstraints {
            get {
                return ResourceManager.GetString("ERR_ImplBadConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tuple element names in the signature of method &apos;{0}&apos; must match the tuple element names of interface method &apos;{1}&apos; (including on the return type)..
        /// </summary>
        internal static string ERR_ImplBadTupleNames {
            get {
                return ResourceManager.GetString("ERR_ImplBadTupleNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No best type found for implicitly-typed array.
        /// </summary>
        internal static string ERR_ImplicitlyTypedArrayNoBestType {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedArrayNoBestType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly-typed local variables cannot be fixed.
        /// </summary>
        internal static string ERR_ImplicitlyTypedLocalCannotBeFixed {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedLocalCannotBeFixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to an implicitly-typed out variable &apos;{0}&apos; is not permitted in the same argument list..
        /// </summary>
        internal static string ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize an implicitly-typed variable with an array initializer.
        /// </summary>
        internal static string ERR_ImplicitlyTypedVariableAssignedArrayInitializer {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedVariableAssignedArrayInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign {0} to an implicitly-typed variable.
        /// </summary>
        internal static string ERR_ImplicitlyTypedVariableAssignedBadValue {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedVariableAssignedBadValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly-typed variables cannot be constant.
        /// </summary>
        internal static string ERR_ImplicitlyTypedVariableCannotBeConst {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedVariableCannotBeConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly-typed variables cannot have multiple declarators.
        /// </summary>
        internal static string ERR_ImplicitlyTypedVariableMultipleDeclarator {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedVariableMultipleDeclarator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicitly-typed variables must be initialized.
        /// </summary>
        internal static string ERR_ImplicitlyTypedVariableWithNoInitializer {
            get {
                return ResourceManager.GetString("ERR_ImplicitlyTypedVariableWithNoInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imported type &apos;{0}&apos; is invalid. It contains a circular base class dependency..
        /// </summary>
        internal static string ERR_ImportedCircularBase {
            get {
                return ResourceManager.GetString("ERR_ImportedCircularBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The referenced file &apos;{0}&apos; is not an assembly.
        /// </summary>
        internal static string ERR_ImportNonAssembly {
            get {
                return ResourceManager.GetString("ERR_ImportNonAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because the get accessor is inaccessible.
        /// </summary>
        internal static string ERR_InaccessibleGetter {
            get {
                return ResourceManager.GetString("ERR_InaccessibleGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because the set accessor is inaccessible.
        /// </summary>
        internal static string ERR_InaccessibleSetter {
            get {
                return ResourceManager.GetString("ERR_InaccessibleSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An out parameter cannot have the In attribute.
        /// </summary>
        internal static string ERR_InAttrOnOutParam {
            get {
                return ResourceManager.GetString("ERR_InAttrOnOutParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two indexers have different names; the IndexerName attribute must be used with the same name on every indexer within a type.
        /// </summary>
        internal static string ERR_InconsistentIndexerNames {
            get {
                return ResourceManager.GetString("ERR_InconsistentIndexerNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent lambda parameter usage; parameter types must be all explicit or all implicit.
        /// </summary>
        internal static string ERR_InconsistentLambdaParameterUsage {
            get {
                return ResourceManager.GetString("ERR_InconsistentLambdaParameterUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operand of an increment or decrement operator must be a variable, property or indexer.
        /// </summary>
        internal static string ERR_IncrementLvalueExpected {
            get {
                return ResourceManager.GetString("ERR_IncrementLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexed property &apos;{0}&apos; must have all arguments optional.
        /// </summary>
        internal static string ERR_IndexedPropertyMustHaveAllOptionalParams {
            get {
                return ResourceManager.GetString("ERR_IndexedPropertyMustHaveAllOptionalParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexed property &apos;{0}&apos; has non-optional arguments which must be provided.
        /// </summary>
        internal static string ERR_IndexedPropertyRequiresParams {
            get {
                return ResourceManager.GetString("ERR_IndexedPropertyRequiresParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexers cannot have void type.
        /// </summary>
        internal static string ERR_IndexerCantHaveVoidType {
            get {
                return ResourceManager.GetString("ERR_IndexerCantHaveVoidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot declare indexers in a static class.
        /// </summary>
        internal static string ERR_IndexerInStaticClass {
            get {
                return ResourceManager.GetString("ERR_IndexerInStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexers must have at least one parameter.
        /// </summary>
        internal static string ERR_IndexerNeedsParam {
            get {
                return ResourceManager.GetString("ERR_IndexerNeedsParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor &apos;{0}&apos; cannot call itself through another constructor.
        /// </summary>
        internal static string ERR_IndirectRecursiveConstructorCall {
            get {
                return ResourceManager.GetString("ERR_IndirectRecursiveConstructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;in&apos; expected.
        /// </summary>
        internal static string ERR_InExpected {
            get {
                return ResourceManager.GetString("ERR_InExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize a by-reference variable with a value.
        /// </summary>
        internal static string ERR_InitializeByReferenceVariableWithValue {
            get {
                return ResourceManager.GetString("ERR_InitializeByReferenceVariableWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize a by-value variable with a reference.
        /// </summary>
        internal static string ERR_InitializeByValueVariableWithReference {
            get {
                return ResourceManager.GetString("ERR_InitializeByValueVariableWithReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match &apos;{0}&apos; for the collection initializer element cannot be used. Collection initializer &apos;Add&apos; methods cannot have ref or out parameters..
        /// </summary>
        internal static string ERR_InitializerAddHasParamModifiers {
            get {
                return ResourceManager.GetString("ERR_InitializerAddHasParamModifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded method match for &apos;{0}&apos; has wrong signature for the initializer element. The initializable Add must be an accessible instance method..
        /// </summary>
        internal static string ERR_InitializerAddHasWrongSignature {
            get {
                return ResourceManager.GetString("ERR_InitializerAddHasWrongSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs without explicit constructors cannot contain members with initializers..
        /// </summary>
        internal static string ERR_InitializerInStructWithoutExplicitConstructor {
            get {
                return ResourceManager.GetString("ERR_InitializerInStructWithoutExplicitConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only auto-implemented properties can have initializers..
        /// </summary>
        internal static string ERR_InitializerOnNonAutoProperty {
            get {
                return ResourceManager.GetString("ERR_InitializerOnNonAutoProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot declare instance members in a static class.
        /// </summary>
        internal static string ERR_InstanceMemberInStaticClass {
            get {
                return ResourceManager.GetString("ERR_InstanceMemberInStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the static class &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_InstantiatingStaticClass {
            get {
                return ResourceManager.GetString("ERR_InstantiatingStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression is too long or complex to compile.
        /// </summary>
        internal static string ERR_InsufficientStack {
            get {
                return ResourceManager.GetString("ERR_InsufficientStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Division by constant zero.
        /// </summary>
        internal static string ERR_IntDivByZero {
            get {
                return ResourceManager.GetString("ERR_IntDivByZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type byte, sbyte, short, ushort, int, uint, long, or ulong expected.
        /// </summary>
        internal static string ERR_IntegralTypeExpected {
            get {
                return ResourceManager.GetString("ERR_IntegralTypeExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of an integral type expected.
        /// </summary>
        internal static string ERR_IntegralTypeValueExpected {
            get {
                return ResourceManager.GetString("ERR_IntegralTypeValueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: event in interface cannot have initializer.
        /// </summary>
        internal static string ERR_InterfaceEventInitializer {
            get {
                return ResourceManager.GetString("ERR_InterfaceEventInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional member &apos;{0}&apos; cannot implement interface member &apos;{1}&apos; in type &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_InterfaceImplementedByConditional {
            get {
                return ResourceManager.GetString("ERR_InterfaceImplementedByConditional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: interface members cannot have a definition.
        /// </summary>
        internal static string ERR_InterfaceMemberHasBody {
            get {
                return ResourceManager.GetString("ERR_InterfaceMemberHasBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; in explicit interface declaration is not a member of interface.
        /// </summary>
        internal static string ERR_InterfaceMemberNotFound {
            get {
                return ResourceManager.GetString("ERR_InterfaceMemberNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: interfaces cannot declare types.
        /// </summary>
        internal static string ERR_InterfacesCannotContainTypes {
            get {
                return ResourceManager.GetString("ERR_InterfacesCannotContainTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain constructors.
        /// </summary>
        internal static string ERR_InterfacesCantContainConstructors {
            get {
                return ResourceManager.GetString("ERR_InterfacesCantContainConstructors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain fields.
        /// </summary>
        internal static string ERR_InterfacesCantContainFields {
            get {
                return ResourceManager.GetString("ERR_InterfacesCantContainFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interfaces cannot contain operators.
        /// </summary>
        internal static string ERR_InterfacesCantContainOperators {
            get {
                return ResourceManager.GetString("ERR_InterfacesCantContainOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded interop method &apos;{0}&apos; contains a body..
        /// </summary>
        internal static string ERR_InteropMethodWithBody {
            get {
                return ResourceManager.GetString("ERR_InteropMethodWithBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedded interop struct &apos;{0}&apos; can contain only public instance fields..
        /// </summary>
        internal static string ERR_InteropStructContainsMethods {
            get {
                return ResourceManager.GetString("ERR_InteropStructContainsMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interop type &apos;{0}&apos; cannot be embedded because it is missing the required &apos;{1}&apos; attribute..
        /// </summary>
        internal static string ERR_InteropTypeMissingAttribute {
            get {
                return ResourceManager.GetString("ERR_InteropTypeMissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot embed interop type &apos;{0}&apos; found in both assembly &apos;{1}&apos; and &apos;{2}&apos;. Consider setting the &apos;Embed Interop Types&apos; property to false..
        /// </summary>
        internal static string ERR_InteropTypesWithSameNameAndGuid {
            get {
                return ResourceManager.GetString("ERR_InteropTypesWithSameNameAndGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integral constant is too large.
        /// </summary>
        internal static string ERR_IntOverflow {
            get {
                return ResourceManager.GetString("ERR_IntOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of the given expression.
        /// </summary>
        internal static string ERR_InvalidAddrOp {
            get {
                return ResourceManager.GetString("ERR_InvalidAddrOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid anonymous type member declarator. Anonymous type members must be declared with a member assignment, simple name or member access..
        /// </summary>
        internal static string ERR_InvalidAnonymousTypeMemberDeclarator {
            get {
                return ResourceManager.GetString("ERR_InvalidAnonymousTypeMemberDeclarator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid rank specifier: expected &apos;,&apos; or &apos;]&apos;.
        /// </summary>
        internal static string ERR_InvalidArray {
            get {
                return ResourceManager.GetString("ERR_InvalidArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly culture strings may not contain embedded NUL characters..
        /// </summary>
        internal static string ERR_InvalidAssemblyCulture {
            get {
                return ResourceManager.GetString("ERR_InvalidAssemblyCulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executables cannot be satellite assemblies; culture should always be empty.
        /// </summary>
        internal static string ERR_InvalidAssemblyCultureForExe {
            get {
                return ResourceManager.GetString("ERR_InvalidAssemblyCultureForExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly reference &apos;{0}&apos; is invalid and cannot be resolved.
        /// </summary>
        internal static string ERR_InvalidAssemblyName {
            get {
                return ResourceManager.GetString("ERR_InvalidAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for argument to &apos;{0}&apos; attribute.
        /// </summary>
        internal static string ERR_InvalidAttributeArgument {
            get {
                return ResourceManager.GetString("ERR_InvalidAttributeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is of type &apos;{1}&apos;. The type specified in a constant declaration must be sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, decimal, bool, string, an enum-type, or a reference-type..
        /// </summary>
        internal static string ERR_InvalidConstantDeclarationType {
            get {
                return ResourceManager.GetString("ERR_InvalidConstantDeclarationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid debug information format: {0}.
        /// </summary>
        internal static string ERR_InvalidDebugInformationFormat {
            get {
                return ResourceManager.GetString("ERR_InvalidDebugInformationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delegate &apos;{0}&apos; has no invoke method or an invoke method with a return type or parameter types that are not supported..
        /// </summary>
        internal static string ERR_InvalidDelegateType {
            get {
                return ResourceManager.GetString("ERR_InvalidDelegateType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression must be implicitly convertible to Boolean or its type &apos;{0}&apos; must define operator &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_InvalidDynamicCondition {
            get {
                return ResourceManager.GetString("ERR_InvalidDynamicCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid expression term &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_InvalidExprTerm {
            get {
                return ResourceManager.GetString("ERR_InvalidExprTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file section alignment &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_InvalidFileAlignment {
            get {
                return ResourceManager.GetString("ERR_InvalidFileAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed size buffers must have a length greater than zero.
        /// </summary>
        internal static string ERR_InvalidFixedArraySize {
            get {
                return ResourceManager.GetString("ERR_InvalidFixedArraySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line syntax error: Invalid Guid format &apos;{0}&apos; for option &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_InvalidFormatForGuidForOption {
            get {
                return ResourceManager.GetString("ERR_InvalidFormatForGuidForOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type specified as an argument for TypeForwardedTo attribute.
        /// </summary>
        internal static string ERR_InvalidFwdType {
            get {
                return ResourceManager.GetString("ERR_InvalidFwdType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A goto case is only valid inside a switch statement.
        /// </summary>
        internal static string ERR_InvalidGotoCase {
            get {
                return ResourceManager.GetString("ERR_InvalidGotoCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid initializer member declarator.
        /// </summary>
        internal static string ERR_InvalidInitializerElementInitializer {
            get {
                return ResourceManager.GetString("ERR_InvalidInitializerElementInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid instrumentation kind: {0}.
        /// </summary>
        internal static string ERR_InvalidInstrumentationKind {
            get {
                return ResourceManager.GetString("ERR_InvalidInstrumentationKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The line number specified for #line directive is missing or invalid.
        /// </summary>
        internal static string ERR_InvalidLineNumber {
            get {
                return ResourceManager.GetString("ERR_InvalidLineNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token &apos;{0}&apos; in class, struct, or interface member declaration.
        /// </summary>
        internal static string ERR_InvalidMemberDecl {
            get {
                return ResourceManager.GetString("ERR_InvalidMemberDecl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for named attribute argument &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_InvalidNamedArgument {
            get {
                return ResourceManager.GetString("ERR_InvalidNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number.
        /// </summary>
        internal static string ERR_InvalidNumber {
            get {
                return ResourceManager.GetString("ERR_InvalidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid output name: {0}.
        /// </summary>
        internal static string ERR_InvalidOutputName {
            get {
                return ResourceManager.GetString("ERR_InvalidOutputName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pathmap option was incorrectly formatted..
        /// </summary>
        internal static string ERR_InvalidPathMap {
            get {
                return ResourceManager.GetString("ERR_InvalidPathMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name for a preprocessing symbol; &apos;{0}&apos; is not a valid identifier.
        /// </summary>
        internal static string ERR_InvalidPreprocessingSymbol {
            get {
                return ResourceManager.GetString("ERR_InvalidPreprocessingSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid preprocessor expression.
        /// </summary>
        internal static string ERR_InvalidPreprocExpr {
            get {
                return ResourceManager.GetString("ERR_InvalidPreprocExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The accessibility modifier of the &apos;{0}&apos; accessor must be more restrictive than the property or indexer &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_InvalidPropertyAccessMod {
            get {
                return ResourceManager.GetString("ERR_InvalidPropertyAccessMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of conditional expression cannot be determined because there is no implicit conversion between &apos;{0}&apos; and &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_InvalidQM {
            get {
                return ResourceManager.GetString("ERR_InvalidQM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid real literal..
        /// </summary>
        internal static string ERR_InvalidReal {
            get {
                return ResourceManager.GetString("ERR_InvalidReal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid signature public key specified in AssemblySignatureKeyAttribute..
        /// </summary>
        internal static string ERR_InvalidSignaturePublicKey {
            get {
                return ResourceManager.GetString("ERR_InvalidSignaturePublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid format specifier.
        /// </summary>
        internal static string ERR_InvalidSpecifier {
            get {
                return ResourceManager.GetString("ERR_InvalidSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid version {0} for /subsystemversion. The version must be 6.02 or greater for ARM or AppContainerExe, and 4.00 or greater otherwise.
        /// </summary>
        internal static string ERR_InvalidSubsystemVersion {
            get {
                return ResourceManager.GetString("ERR_InvalidSubsystemVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version string does not conform to the required format - major[.minor[.build[.revision]]].
        /// </summary>
        internal static string ERR_InvalidVersionFormat {
            get {
                return ResourceManager.GetString("ERR_InvalidVersionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version string does not conform to the required format - major.minor.build.revision.
        /// </summary>
        internal static string ERR_InvalidVersionFormat2 {
            get {
                return ResourceManager.GetString("ERR_InvalidVersionFormat2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yield statements may not appear at the top level in interactive code..
        /// </summary>
        internal static string ERR_IteratorInInteractive {
            get {
                return ResourceManager.GetString("ERR_IteratorInInteractive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such label &apos;{0}&apos; within the scope of the goto statement.
        /// </summary>
        internal static string ERR_LabelNotFound {
            get {
                return ResourceManager.GetString("ERR_LabelNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The label &apos;{0}&apos; shadows another label by the same name in a contained scope.
        /// </summary>
        internal static string ERR_LabelShadow {
            get {
                return ResourceManager.GetString("ERR_LabelShadow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand of an &apos;is&apos; or &apos;as&apos; operator may not be a lambda expression, anonymous method, or method group..
        /// </summary>
        internal static string ERR_LambdaInIsAs {
            get {
                return ResourceManager.GetString("ERR_LambdaInIsAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified language version &apos;{0}&apos; cannot have leading zeroes.
        /// </summary>
        internal static string ERR_LanguageVersionCannotHaveLeadingZeroes {
            get {
                return ResourceManager.GetString("ERR_LanguageVersionCannotHaveLeadingZeroes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { expected.
        /// </summary>
        internal static string ERR_LbraceExpected {
            get {
                return ResourceManager.GetString("ERR_LbraceExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;id#&apos; syntax is no longer supported. Use &apos;$id&apos; instead..
        /// </summary>
        internal static string ERR_LegacyObjectIdSyntax {
            get {
                return ResourceManager.GetString("ERR_LegacyObjectIdSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linked netmodule metadata must provide a full PE image: &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_LinkedNetmoduleMetadataMustProvideFullPEImage {
            get {
                return ResourceManager.GetString("ERR_LinkedNetmoduleMetadataMustProvideFullPEImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Literal of type double cannot be implicitly converted to type &apos;{1}&apos;; use an &apos;{0}&apos; suffix to create a literal of this type.
        /// </summary>
        internal static string ERR_LiteralDoubleCast {
            get {
                return ResourceManager.GetString("ERR_LiteralDoubleCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #load is only allowed in scripts.
        /// </summary>
        internal static string ERR_LoadDirectiveOnlyAllowedInScripts {
            get {
                return ResourceManager.GetString("ERR_LoadDirectiveOnlyAllowedInScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local &apos;{0}&apos; or its members cannot have their address taken and be used inside an anonymous method or lambda expression.
        /// </summary>
        internal static string ERR_LocalCantBeFixedAndHoisted {
            get {
                return ResourceManager.GetString("ERR_LocalCantBeFixedAndHoisted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local variable or function named &apos;{0}&apos; is already defined in this scope.
        /// </summary>
        internal static string ERR_LocalDuplicate {
            get {
                return ResourceManager.GetString("ERR_LocalDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A local or parameter named &apos;{0}&apos; cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter.
        /// </summary>
        internal static string ERR_LocalIllegallyOverrides {
            get {
                return ResourceManager.GetString("ERR_LocalIllegallyOverrides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a parameter, local variable, or local function cannot have the same name as a method type parameter.
        /// </summary>
        internal static string ERR_LocalSameNameAsTypeParam {
            get {
                return ResourceManager.GetString("ERR_LocalSameNameAsTypeParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Embedding the interop type &apos;{0}&apos; from assembly &apos;{1}&apos; causes a name clash in the current assembly. Consider setting the &apos;Embed Interop Types&apos; property to false..
        /// </summary>
        internal static string ERR_LocalTypeNameClash {
            get {
                return ResourceManager.GetString("ERR_LocalTypeNameClash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a reference type as required by the lock statement.
        /// </summary>
        internal static string ERR_LockNeedsReference {
            get {
                return ResourceManager.GetString("ERR_LockNeedsReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot do member lookup in &apos;{0}&apos; because it is a type parameter.
        /// </summary>
        internal static string ERR_LookupInTypeVariable {
            get {
                return ResourceManager.GetString("ERR_LookupInTypeVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;{0}&apos; for Main method because it is imported.
        /// </summary>
        internal static string ERR_MainClassIsImport {
            get {
                return ResourceManager.GetString("ERR_MainClassIsImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; specified for Main method must be a valid non-generic class or struct.
        /// </summary>
        internal static string ERR_MainClassNotClass {
            get {
                return ResourceManager.GetString("ERR_MainClassNotClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find &apos;{0}&apos; specified for Main method.
        /// </summary>
        internal static string ERR_MainClassNotFound {
            get {
                return ResourceManager.GetString("ERR_MainClassNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot take the address of, get the size of, or declare a pointer to a managed type (&apos;{0}&apos;).
        /// </summary>
        internal static string ERR_ManagedAddr {
            get {
                return ResourceManager.GetString("ERR_ManagedAddr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unmanaged type &apos;{0}&apos; not valid for fields..
        /// </summary>
        internal static string ERR_MarshalUnmanagedTypeNotValidForFields {
            get {
                return ResourceManager.GetString("ERR_MarshalUnmanagedTypeNotValidForFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unmanaged type &apos;{0}&apos; is only valid for fields..
        /// </summary>
        internal static string ERR_MarshalUnmanagedTypeOnlyValidForFields {
            get {
                return ResourceManager.GetString("ERR_MarshalUnmanagedTypeOnlyValidForFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{1}&apos; already defines a member called &apos;{0}&apos; with the same parameter types.
        /// </summary>
        internal static string ERR_MemberAlreadyExists {
            get {
                return ResourceManager.GetString("ERR_MemberAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate initialization of member &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_MemberAlreadyInitialized {
            get {
                return ResourceManager.GetString("ERR_MemberAlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; cannot be initialized. It is not a field or property..
        /// </summary>
        internal static string ERR_MemberCannotBeInitialized {
            get {
                return ResourceManager.GetString("ERR_MemberCannotBeInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: member names cannot be the same as their enclosing type.
        /// </summary>
        internal static string ERR_MemberNameSameAsType {
            get {
                return ResourceManager.GetString("ERR_MemberNameSameAsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method must have a return type.
        /// </summary>
        internal static string ERR_MemberNeedsType {
            get {
                return ResourceManager.GetString("ERR_MemberNeedsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{1}&apos; already reserves a member called &apos;{0}&apos; with the same parameter types.
        /// </summary>
        internal static string ERR_MemberReserved {
            get {
                return ResourceManager.GetString("ERR_MemberReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a method group.
        /// </summary>
        internal static string ERR_MemGroupInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_MemGroupInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge conflict marker encountered.
        /// </summary>
        internal static string ERR_Merge_conflict_marker_encountered {
            get {
                return ResourceManager.GetString("ERR_Merge_conflict_marker_encountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name &apos;{0}&apos; exceeds the maximum length allowed in metadata..
        /// </summary>
        internal static string ERR_MetadataNameTooLong {
            get {
                return ResourceManager.GetString("ERR_MetadataNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata references are not supported..
        /// </summary>
        internal static string ERR_MetadataReferencesNotSupported {
            get {
                return ResourceManager.GetString("ERR_MetadataReferencesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No overload for &apos;{0}&apos; matches delegate &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_MethDelegateMismatch {
            get {
                return ResourceManager.GetString("ERR_MethDelegateMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert method group &apos;{0}&apos; to non-delegate type &apos;{1}&apos;. Did you intend to invoke the method?.
        /// </summary>
        internal static string ERR_MethGrpToNonDel {
            get {
                return ResourceManager.GetString("ERR_MethGrpToNonDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot make reference to variable of type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_MethodArgCantBeRefAny {
            get {
                return ResourceManager.GetString("ERR_MethodArgCantBeRefAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; cannot implement interface accessor &apos;{1}&apos; for type &apos;{2}&apos;. Use an explicit interface implementation..
        /// </summary>
        internal static string ERR_MethodImplementingAccessor {
            get {
                return ResourceManager.GetString("ERR_MethodImplementingAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method name expected.
        /// </summary>
        internal static string ERR_MethodNameExpected {
            get {
                return ResourceManager.GetString("ERR_MethodNameExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method or delegate cannot return type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_MethodReturnCantBeRefAny {
            get {
                return ResourceManager.GetString("ERR_MethodReturnCantBeRefAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument missing.
        /// </summary>
        internal static string ERR_MissingArgument {
            get {
                return ResourceManager.GetString("ERR_MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array creation must have array size or array initializer.
        /// </summary>
        internal static string ERR_MissingArraySize {
            get {
                return ResourceManager.GetString("ERR_MissingArraySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The managed coclass wrapper class &apos;{0}&apos; for interface &apos;{1}&apos; cannot be found (are you missing an assembly reference?).
        /// </summary>
        internal static string ERR_MissingCoClass {
            get {
                return ResourceManager.GetString("ERR_MissingCoClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /pdb option requires that the /debug option also be used.
        /// </summary>
        internal static string ERR_MissingDebugSwitch {
            get {
                return ResourceManager.GetString("ERR_MissingDebugSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No suitable Deconstruct instance or extension method was found for type &apos;{0}&apos;, with {1} out parameters and a void return type..
        /// </summary>
        internal static string ERR_MissingDeconstruct {
            get {
                return ResourceManager.GetString("ERR_MissingDeconstruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line syntax error: Missing Guid for option &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_MissingGuidForOption {
            get {
                return ResourceManager.GetString("ERR_MissingGuidForOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source interface &apos;{0}&apos; is missing method &apos;{1}&apos; which is required to embed event &apos;{2}&apos;..
        /// </summary>
        internal static string ERR_MissingMethodOnSourceInterface {
            get {
                return ResourceManager.GetString("ERR_MissingMethodOnSourceInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to &apos;{0}&apos; netmodule missing..
        /// </summary>
        internal static string ERR_MissingNetModuleReference {
            get {
                return ResourceManager.GetString("ERR_MissingNetModuleReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing partial modifier on declaration of type &apos;{0}&apos;; another partial declaration of this type exists.
        /// </summary>
        internal static string ERR_MissingPartial {
            get {
                return ResourceManager.GetString("ERR_MissingPartial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quoted file name, single-line comment or end-of-line expected.
        /// </summary>
        internal static string ERR_MissingPPFile {
            get {
                return ResourceManager.GetString("ERR_MissingPPFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing compiler required member &apos;{0}.{1}&apos;.
        /// </summary>
        internal static string ERR_MissingPredefinedMember {
            get {
                return ResourceManager.GetString("ERR_MissingPredefinedMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface &apos;{0}&apos; has an invalid source interface which is required to embed event &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_MissingSourceInterface {
            get {
                return ResourceManager.GetString("ERR_MissingSourceInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: instance field types marked with StructLayout(LayoutKind.Explicit) must have a FieldOffset attribute.
        /// </summary>
        internal static string ERR_MissingStructOffset {
            get {
                return ResourceManager.GetString("ERR_MissingStructOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to type &apos;{0}&apos; claims it is defined in &apos;{1}&apos;, but it could not be found.
        /// </summary>
        internal static string ERR_MissingTypeInAssembly {
            get {
                return ResourceManager.GetString("ERR_MissingTypeInAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to type &apos;{0}&apos; claims it is defined in this assembly, but it is not defined in source or any added modules.
        /// </summary>
        internal static string ERR_MissingTypeInSource {
            get {
                return ResourceManager.GetString("ERR_MissingTypeInSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A deconstruction cannot mix declarations and expressions on the left-hand-side..
        /// </summary>
        internal static string ERR_MixedDeconstructionUnsupported {
            get {
                return ResourceManager.GetString("ERR_MixedDeconstructionUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot implement &apos;{1}&apos; because &apos;{2}&apos; is a Windows Runtime event and &apos;{3}&apos; is a regular .NET event..
        /// </summary>
        internal static string ERR_MixingWinRTEventWithRegular {
            get {
                return ResourceManager.GetString("ERR_MixingWinRTEventWithRegular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to emit module &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_ModuleEmitFailure {
            get {
                return ResourceManager.GetString("ERR_ModuleEmitFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter cannot have all the specified modifiers; there are too many modifiers on the parameter.
        /// </summary>
        internal static string ERR_MultiParamMod {
            get {
                return ResourceManager.GetString("ERR_MultiParamMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program has more than one entry point defined. Compile with /main to specify the type that contains the entry point..
        /// </summary>
        internal static string ERR_MultipleEntryPoints {
            get {
                return ResourceManager.GetString("ERR_MultipleEntryPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach statement cannot operate on variables of type &apos;{0}&apos; because it implements multiple instantiations of &apos;{1}&apos;; try casting to a specific interface instantiation.
        /// </summary>
        internal static string ERR_MultipleIEnumOfT {
            get {
                return ResourceManager.GetString("ERR_MultipleIEnumOfT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use more than one type in a for, using, fixed, or declaration statement.
        /// </summary>
        internal static string ERR_MultiTypeInDeclaration {
            get {
                return ResourceManager.GetString("ERR_MultiTypeInDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A foreach loop must declare its iteration variables..
        /// </summary>
        internal static string ERR_MustDeclareForeachIteration {
            get {
                return ResourceManager.GetString("ERR_MustDeclareForeachIteration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order for &apos;{0}&apos; to be applicable as a short circuit operator, its declaring type &apos;{1}&apos; must define operator true and operator false.
        /// </summary>
        internal static string ERR_MustHaveOpTF {
            get {
                return ResourceManager.GetString("ERR_MustHaveOpTF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By-value returns may only be used in methods that return by value.
        /// </summary>
        internal static string ERR_MustHaveRefReturn {
            get {
                return ResourceManager.GetString("ERR_MustHaveRefReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By-reference returns may only be used in methods that return by reference.
        /// </summary>
        internal static string ERR_MustNotHaveRefReturn {
            get {
                return ResourceManager.GetString("ERR_MustNotHaveRefReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compilation options &apos;{0}&apos; and &apos;{1}&apos; can&apos;t both be specified at the same time..
        /// </summary>
        internal static string ERR_MutuallyExclusiveOptions {
            get {
                return ResourceManager.GetString("ERR_MutuallyExclusiveOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named attribute argument expected.
        /// </summary>
        internal static string ERR_NamedArgumentExpected {
            get {
                return ResourceManager.GetString("ERR_NamedArgumentExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An array access may not have a named argument specifier.
        /// </summary>
        internal static string ERR_NamedArgumentForArray {
            get {
                return ResourceManager.GetString("ERR_NamedArgumentForArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument specifications must appear after all fixed arguments have been specified.
        /// </summary>
        internal static string ERR_NamedArgumentSpecificationBeforeFixedArgument {
            get {
                return ResourceManager.GetString("ERR_NamedArgumentSpecificationBeforeFixedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named argument &apos;{0}&apos; specifies a parameter for which a positional argument has already been given.
        /// </summary>
        internal static string ERR_NamedArgumentUsedInPositional {
            get {
                return ResourceManager.GetString("ERR_NamedArgumentUsedInPositional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; does not exist in the current context.
        /// </summary>
        internal static string ERR_NameNotInContext {
            get {
                return ResourceManager.GetString("ERR_NameNotInContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; does not exist in the current context (are you missing a reference to assembly &apos;{1}&apos;?).
        /// </summary>
        internal static string ERR_NameNotInContextPossibleMissingReference {
            get {
                return ResourceManager.GetString("ERR_NameNotInContextPossibleMissingReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension method groups are not allowed as an argument to &apos;nameof&apos;..
        /// </summary>
        internal static string ERR_NameofExtensionMethod {
            get {
                return ResourceManager.GetString("ERR_NameofExtensionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameters are not allowed on a method group as an argument to &apos;nameof&apos;..
        /// </summary>
        internal static string ERR_NameofMethodGroupWithTypeParameters {
            get {
                return ResourceManager.GetString("ERR_NameofMethodGroupWithTypeParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare namespace in script code.
        /// </summary>
        internal static string ERR_NamespaceNotAllowedInScript {
            get {
                return ResourceManager.GetString("ERR_NamespaceNotAllowedInScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A namespace cannot directly contain members such as fields or methods.
        /// </summary>
        internal static string ERR_NamespaceUnexpected {
            get {
                return ResourceManager.GetString("ERR_NamespaceUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an array with a negative size.
        /// </summary>
        internal static string ERR_NegativeArraySize {
            get {
                return ResourceManager.GetString("ERR_NegativeArraySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a negative size with stackalloc.
        /// </summary>
        internal static string ERR_NegativeStackAllocSize {
            get {
                return ResourceManager.GetString("ERR_NegativeStackAllocSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module name &apos;{0}&apos; stored in &apos;{1}&apos; must match its filename..
        /// </summary>
        internal static string ERR_NetModuleNameMismatch {
            get {
                return ResourceManager.GetString("ERR_NetModuleNameMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module &apos;{0}&apos; is already defined in this assembly. Each module must have a unique filename..
        /// </summary>
        internal static string ERR_NetModuleNameMustBeUnique {
            get {
                return ResourceManager.GetString("ERR_NetModuleNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new() constraint must be the last constraint specified.
        /// </summary>
        internal static string ERR_NewBoundMustBeLast {
            get {
                return ResourceManager.GetString("ERR_NewBoundMustBeLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;new()&apos; constraint cannot be used with the &apos;struct&apos; constraint.
        /// </summary>
        internal static string ERR_NewBoundWithVal {
            get {
                return ResourceManager.GetString("ERR_NewBoundWithVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interop type &apos;{0}&apos; cannot be embedded. Use the applicable interface instead..
        /// </summary>
        internal static string ERR_NewCoClassOnLink {
            get {
                return ResourceManager.GetString("ERR_NewCoClassOnLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{2}&apos; must be a non-abstract type with a public parameterless constructor in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_NewConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("ERR_NewConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newline in constant.
        /// </summary>
        internal static string ERR_NewlineInConst {
            get {
                return ResourceManager.GetString("ERR_NewlineInConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot provide arguments when creating an instance of a variable type.
        /// </summary>
        internal static string ERR_NewTyvarWithArgs {
            get {
                return ResourceManager.GetString("ERR_NewTyvarWithArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a new virtual member in sealed class &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NewVirtualInSealed {
            get {
                return ResourceManager.GetString("ERR_NewVirtualInSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;new&apos; cannot be used with tuple type. Use a tuple literal expression instead..
        /// </summary>
        internal static string ERR_NewWithTupleTypeSyntax {
            get {
                return ResourceManager.GetString("ERR_NewWithTupleTypeSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;using static&apos; directive cannot be used to declare an alias.
        /// </summary>
        internal static string ERR_NoAliasHere {
            get {
                return ResourceManager.GetString("ERR_NoAliasHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base class is required for a &apos;base&apos; reference.
        /// </summary>
        internal static string ERR_NoBaseClass {
            get {
                return ResourceManager.GetString("ERR_NoBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No enclosing loop out of which to break or continue.
        /// </summary>
        internal static string ERR_NoBreakOrCont {
            get {
                return ResourceManager.GetString("ERR_NoBreakOrCont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the interop type that matches the embedded interop type &apos;{0}&apos;. Are you missing an assembly reference?.
        /// </summary>
        internal static string ERR_NoCanonicalView {
            get {
                return ResourceManager.GetString("ERR_NoCanonicalView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; has no constructors defined.
        /// </summary>
        internal static string ERR_NoConstructors {
            get {
                return ResourceManager.GetString("ERR_NoConstructors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CallerFilePathAttribute cannot be applied because there are no standard conversions from type &apos;{0}&apos; to type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoConversionForCallerFilePathParam {
            get {
                return ResourceManager.GetString("ERR_NoConversionForCallerFilePathParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CallerLineNumberAttribute cannot be applied because there are no standard conversions from type &apos;{0}&apos; to type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoConversionForCallerLineNumberParam {
            get {
                return ResourceManager.GetString("ERR_NoConversionForCallerLineNumberParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CallerMemberNameAttribute cannot be applied because there are no standard conversions from type &apos;{0}&apos; to type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoConversionForCallerMemberNameParam {
            get {
                return ResourceManager.GetString("ERR_NoConversionForCallerMemberNameParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of type &apos;{0}&apos; cannot be used as a default parameter because there are no standard conversions to type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoConversionForDefaultParam {
            get {
                return ResourceManager.GetString("ERR_NoConversionForDefaultParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of type &apos;{0}&apos; cannot be used as default parameter for nullable parameter &apos;{1}&apos; because &apos;{0}&apos; is not a simple type.
        /// </summary>
        internal static string ERR_NoConversionForNubDefaultParam {
            get {
                return ResourceManager.GetString("ERR_NoConversionForNubDefaultParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: type used in a using statement must be implicitly convertible to &apos;System.IDisposable&apos;.
        /// </summary>
        internal static string ERR_NoConvToIDisp {
            get {
                return ResourceManager.GetString("ERR_NoConvToIDisp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no argument given that corresponds to the required formal parameter &apos;{0}&apos; of &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoCorrespondingArgument {
            get {
                return ResourceManager.GetString("ERR_NoCorrespondingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call to method &apos;{0}&apos; needs to be dynamically dispatched, but cannot be because it is part of a base access expression. Consider casting the dynamic arguments or eliminating the base access..
        /// </summary>
        internal static string ERR_NoDynamicPhantomOnBase {
            get {
                return ResourceManager.GetString("ERR_NoDynamicPhantomOnBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constructor call needs to be dynamically dispatched, but cannot be because it is part of a constructor initializer. Consider casting the dynamic arguments..
        /// </summary>
        internal static string ERR_NoDynamicPhantomOnBaseCtor {
            get {
                return ResourceManager.GetString("ERR_NoDynamicPhantomOnBaseCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The indexer access needs to be dynamically dispatched, but cannot be because it is part of a base access expression. Consider casting the dynamic arguments or eliminating the base access..
        /// </summary>
        internal static string ERR_NoDynamicPhantomOnBaseIndexer {
            get {
                return ResourceManager.GetString("ERR_NoDynamicPhantomOnBaseIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program does not contain a static &apos;Main&apos; method suitable for an entry point.
        /// </summary>
        internal static string ERR_NoEntryPoint {
            get {
                return ResourceManager.GetString("ERR_NoEntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type &apos;{0}&apos; to &apos;{1}&apos; via a reference conversion, boxing conversion, unboxing conversion, wrapping conversion, or null type conversion.
        /// </summary>
        internal static string ERR_NoExplicitBuiltinConv {
            get {
                return ResourceManager.GetString("ERR_NoExplicitBuiltinConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert type &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoExplicitConv {
            get {
                return ResourceManager.GetString("ERR_NoExplicitConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing file specification for &apos;{0}&apos; option.
        /// </summary>
        internal static string ERR_NoFileSpec {
            get {
                return ResourceManager.GetString("ERR_NoFileSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override because &apos;{1}&apos; does not have an overridable get accessor.
        /// </summary>
        internal static string ERR_NoGetToOverride {
            get {
                return ResourceManager.GetString("ERR_NoGetToOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoImplicitConv {
            get {
                return ResourceManager.GetString("ERR_NoImplicitConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot implicitly convert type &apos;{0}&apos; to &apos;{1}&apos;. An explicit conversion exists (are you missing a cast?).
        /// </summary>
        internal static string ERR_NoImplicitConvCast {
            get {
                return ResourceManager.GetString("ERR_NoImplicitConvCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not have a suitable static Main method.
        /// </summary>
        internal static string ERR_NoMainInClass {
            get {
                return ResourceManager.GetString("ERR_NoMainInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify /main if building a module or library.
        /// </summary>
        internal static string ERR_NoMainOnDLL {
            get {
                return ResourceManager.GetString("ERR_NoMainOnDLL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata file &apos;{0}&apos; could not be found.
        /// </summary>
        internal static string ERR_NoMetadataFile {
            get {
                return ResourceManager.GetString("ERR_NoMetadataFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifiers cannot be placed on event accessor declarations.
        /// </summary>
        internal static string ERR_NoModifiersOnAccessor {
            get {
                return ResourceManager.GetString("ERR_NoModifiersOnAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; cannot have multiple base classes: &apos;{1}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_NoMultipleInheritance {
            get {
                return ResourceManager.GetString("ERR_NoMultipleInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elements defined in a namespace cannot be explicitly declared as private, protected, or protected internal.
        /// </summary>
        internal static string ERR_NoNamespacePrivate {
            get {
                return ResourceManager.GetString("ERR_NoNamespacePrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot compile net modules when using /refout or /refonly..
        /// </summary>
        internal static string ERR_NoNetModuleOutputWhenRefOutOrRefOnly {
            get {
                return ResourceManager.GetString("ERR_NoNetModuleOutputWhenRefOutOrRefOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the abstract class or interface &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_NoNewAbstract {
            get {
                return ResourceManager.GetString("ERR_NoNewAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the variable type &apos;{0}&apos; because it does not have the new() constraint.
        /// </summary>
        internal static string ERR_NoNewTyvar {
            get {
                return ResourceManager.GetString("ERR_NoNewTyvar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; in interface list is not an interface.
        /// </summary>
        internal static string ERR_NonInterfaceInInterfaceList {
            get {
                return ResourceManager.GetString("ERR_NonInterfaceInInterfaceList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-invocable member &apos;{0}&apos; cannot be used like a method..
        /// </summary>
        internal static string ERR_NonInvocableMemberCalled {
            get {
                return ResourceManager.GetString("ERR_NonInvocableMemberCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A void or int returning entry point cannot be async.
        /// </summary>
        internal static string ERR_NonTaskMainCantBeAsync {
            get {
                return ResourceManager.GetString("ERR_NonTaskMainCantBeAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot embed interop types from assembly &apos;{0}&apos; because it is missing the &apos;{1}&apos; attribute..
        /// </summary>
        internal static string ERR_NoPIAAssemblyMissingAttribute {
            get {
                return ResourceManager.GetString("ERR_NoPIAAssemblyMissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot embed interop types from assembly &apos;{0}&apos; because it is missing either the &apos;{1}&apos; attribute or the &apos;{2}&apos; attribute..
        /// </summary>
        internal static string ERR_NoPIAAssemblyMissingAttributes {
            get {
                return ResourceManager.GetString("ERR_NoPIAAssemblyMissingAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; cannot be embedded because it is a nested type. Consider setting the &apos;Embed Interop Types&apos; property to false..
        /// </summary>
        internal static string ERR_NoPIANestedType {
            get {
                return ResourceManager.GetString("ERR_NoPIANestedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use refout when using refonly..
        /// </summary>
        internal static string ERR_NoRefOutWhenRefOnly {
            get {
                return ResourceManager.GetString("ERR_NoRefOutWhenRefOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot override because &apos;{1}&apos; does not have an overridable set accessor.
        /// </summary>
        internal static string ERR_NoSetToOverride {
            get {
                return ResourceManager.GetString("ERR_NoSetToOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; could not be opened -- {1}.
        /// </summary>
        internal static string ERR_NoSourceFile {
            get {
                return ResourceManager.GetString("ERR_NoSourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_NoSuchMember {
            get {
                return ResourceManager.GetString("ERR_NoSuchMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos; and no extension method &apos;{1}&apos; accepting a first argument of type &apos;{0}&apos; could be found (are you missing a using directive or an assembly reference?).
        /// </summary>
        internal static string ERR_NoSuchMemberOrExtension {
            get {
                return ResourceManager.GetString("ERR_NoSuchMemberOrExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not contain a definition for &apos;{1}&apos; and no extension method &apos;{1}&apos; accepting a first argument of type &apos;{0}&apos; could be found (are you missing a using directive for &apos;{2}&apos;?).
        /// </summary>
        internal static string ERR_NoSuchMemberOrExtensionNeedUsing {
            get {
                return ResourceManager.GetString("ERR_NoSuchMemberOrExtensionNeedUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not an attribute class.
        /// </summary>
        internal static string ERR_NotAnAttributeClass {
            get {
                return ResourceManager.GetString("ERR_NotAnAttributeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression being assigned to &apos;{0}&apos; must be constant.
        /// </summary>
        internal static string ERR_NotConstantExpression {
            get {
                return ResourceManager.GetString("ERR_NotConstantExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is of type &apos;{1}&apos;. A const field of a reference type other than string can only be initialized with null..
        /// </summary>
        internal static string ERR_NotNullConstRefField {
            get {
                return ResourceManager.GetString("ERR_NotNullConstRefField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is of type &apos;{1}&apos;. A default parameter value of a reference type other than string can only be initialized with null.
        /// </summary>
        internal static string ERR_NotNullRefDefaultParameter {
            get {
                return ResourceManager.GetString("ERR_NotNullRefDefaultParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This language feature (&apos;{0}&apos;) is not yet implemented..
        /// </summary>
        internal static string ERR_NotYetImplementedInRoslyn {
            get {
                return ResourceManager.GetString("ERR_NotYetImplementedInRoslyn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is defined in an assembly that is not referenced. You must add a reference to assembly &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_NoTypeDef {
            get {
                return ResourceManager.GetString("ERR_NoTypeDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is defined in a module that has not been added. You must add the module &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_NoTypeDefFromModule {
            get {
                return ResourceManager.GetString("ERR_NoTypeDefFromModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;void&apos; cannot be used in this context.
        /// </summary>
        internal static string ERR_NoVoidHere {
            get {
                return ResourceManager.GetString("ERR_NoVoidHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter type &apos;void&apos;.
        /// </summary>
        internal static string ERR_NoVoidParameter {
            get {
                return ResourceManager.GetString("ERR_NoVoidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of null is not valid in this context.
        /// </summary>
        internal static string ERR_NullNotValid {
            get {
                return ResourceManager.GetString("ERR_NullNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a null propagating operator..
        /// </summary>
        internal static string ERR_NullPropagatingOpInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_NullPropagatingOpInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has no base class and cannot call a base constructor.
        /// </summary>
        internal static string ERR_ObjectCallingBaseConstructor {
            get {
                return ResourceManager.GetString("ERR_ObjectCallingBaseConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class System.Object cannot have a base class or implement an interface.
        /// </summary>
        internal static string ERR_ObjectCantHaveBases {
            get {
                return ResourceManager.GetString("ERR_ObjectCantHaveBases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object and collection initializer expressions may not be applied to a delegate creation expression.
        /// </summary>
        internal static string ERR_ObjectOrCollectionInitializerWithDelegateCreation {
            get {
                return ResourceManager.GetString("ERR_ObjectOrCollectionInitializerWithDelegateCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; cannot be accessed with an instance reference; qualify it with a type name instead.
        /// </summary>
        internal static string ERR_ObjectProhibited {
            get {
                return ResourceManager.GetString("ERR_ObjectProhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object reference is required for the non-static field, method, or property &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ObjectRequired {
            get {
                return ResourceManager.GetString("ERR_ObjectRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A /reference option that declares an extern alias can only have one filename. To specify multiple aliases or filenames, use multiple /reference options..
        /// </summary>
        internal static string ERR_OneAliasPerReference {
            get {
                return ResourceManager.GetString("ERR_OneAliasPerReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only class types can contain destructors.
        /// </summary>
        internal static string ERR_OnlyClassesCanContainDestructors {
            get {
                return ResourceManager.GetString("ERR_OnlyClassesCanContainDestructors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End-of-file found, &apos;*/&apos; expected.
        /// </summary>
        internal static string ERR_OpenEndedComment {
            get {
                return ResourceManager.GetString("ERR_OpenEndedComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening response file &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_OpenResponseFile {
            get {
                return ResourceManager.GetString("ERR_OpenResponseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operators cannot return void.
        /// </summary>
        internal static string ERR_OperatorCantReturnVoid {
            get {
                return ResourceManager.GetString("ERR_OperatorCantReturnVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static classes cannot contain user-defined operators.
        /// </summary>
        internal static string ERR_OperatorInStaticClass {
            get {
                return ResourceManager.GetString("ERR_OperatorInStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operator &apos;{0}&apos; requires a matching operator &apos;{1}&apos; to also be defined.
        /// </summary>
        internal static string ERR_OperatorNeedsMatch {
            get {
                return ResourceManager.GetString("ERR_OperatorNeedsMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined operator &apos;{0}&apos; must be declared static and public.
        /// </summary>
        internal static string ERR_OperatorsMustBeStatic {
            get {
                return ResourceManager.GetString("ERR_OperatorsMustBeStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return type of operator True or False must be bool.
        /// </summary>
        internal static string ERR_OpTFRetType {
            get {
                return ResourceManager.GetString("ERR_OpTFRetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; must be an absolute path..
        /// </summary>
        internal static string ERR_OptionMustBeAbsolutePath {
            get {
                return ResourceManager.GetString("ERR_OptionMustBeAbsolutePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify only Out attribute on a ref parameter. Use both In and Out attributes, or neither..
        /// </summary>
        internal static string ERR_OutAttrOnRefParam {
            get {
                return ResourceManager.GetString("ERR_OutAttrOnRefParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outputs without source must have the /out option specified.
        /// </summary>
        internal static string ERR_OutputNeedsName {
            get {
                return ResourceManager.GetString("ERR_OutputNeedsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not write to output file &apos;{0}&apos; -- &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_OutputWriteFailed {
            get {
                return ResourceManager.GetString("ERR_OutputWriteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot define overloaded methods that differ only on ref and out.
        /// </summary>
        internal static string ERR_OverloadRefOut {
            get {
                return ResourceManager.GetString("ERR_OverloadRefOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define overloaded constructor &apos;{0}&apos; because it differs from another constructor only on ref and out.
        /// </summary>
        internal static string ERR_OverloadRefOutCtor {
            get {
                return ResourceManager.GetString("ERR_OverloadRefOutCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not override object.Finalize. Instead, provide a destructor..
        /// </summary>
        internal static string ERR_OverrideFinalizeDeprecated {
            get {
                return ResourceManager.GetString("ERR_OverrideFinalizeDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: no suitable method found to override.
        /// </summary>
        internal static string ERR_OverrideNotExpected {
            get {
                return ResourceManager.GetString("ERR_OverrideNotExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A member &apos;{0}&apos; marked as override cannot be marked as new or virtual.
        /// </summary>
        internal static string ERR_OverrideNotNew {
            get {
                return ResourceManager.GetString("ERR_OverrideNotNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraints for override and explicit interface implementation methods are inherited from the base method, so they cannot be specified directly.
        /// </summary>
        internal static string ERR_OverrideWithConstraints {
            get {
                return ResourceManager.GetString("ERR_OverrideWithConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable binary operator expected.
        /// </summary>
        internal static string ERR_OvlBinaryOperatorExpected {
            get {
                return ResourceManager.GetString("ERR_OvlBinaryOperatorExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable operator expected.
        /// </summary>
        internal static string ERR_OvlOperatorExpected {
            get {
                return ResourceManager.GetString("ERR_OvlOperatorExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloadable unary operator expected.
        /// </summary>
        internal static string ERR_OvlUnaryOperatorExpected {
            get {
                return ResourceManager.GetString("ERR_OvlUnaryOperatorExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter has multiple distinct default values..
        /// </summary>
        internal static string ERR_ParamDefaultValueDiffersFromAttribute {
            get {
                return ResourceManager.GetString("ERR_ParamDefaultValueDiffersFromAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static types cannot be used as parameters.
        /// </summary>
        internal static string ERR_ParameterIsStaticClass {
            get {
                return ResourceManager.GetString("ERR_ParameterIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter not valid for the specified unmanaged type..
        /// </summary>
        internal static string ERR_ParameterNotValidForType {
            get {
                return ResourceManager.GetString("ERR_ParameterNotValidForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The params parameter cannot be declared as ref or out.
        /// </summary>
        internal static string ERR_ParamsCantBeRefOut {
            get {
                return ResourceManager.GetString("ERR_ParamsCantBeRefOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A params parameter must be the last parameter in a formal parameter list.
        /// </summary>
        internal static string ERR_ParamsLast {
            get {
                return ResourceManager.GetString("ERR_ParamsLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The params parameter must be a single dimensional array.
        /// </summary>
        internal static string ERR_ParamsMustBeArray {
            get {
                return ResourceManager.GetString("ERR_ParamsMustBeArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The out parameter &apos;{0}&apos; must be assigned to before control leaves the current method.
        /// </summary>
        internal static string ERR_ParamUnassigned {
            get {
                return ResourceManager.GetString("ERR_ParamUnassigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method cannot have out parameters.
        /// </summary>
        internal static string ERR_PartialMethodCannotHaveOutParameters {
            get {
                return ResourceManager.GetString("ERR_PartialMethodCannotHaveOutParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be extension methods or neither may be an extension method.
        /// </summary>
        internal static string ERR_PartialMethodExtensionDifference {
            get {
                return ResourceManager.GetString("ERR_PartialMethodExtensionDifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial method declarations of &apos;{0}&apos; have inconsistent type parameter constraints.
        /// </summary>
        internal static string ERR_PartialMethodInconsistentConstraints {
            get {
                return ResourceManager.GetString("ERR_PartialMethodInconsistentConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations, &apos;{0}&apos; and &apos;{1}&apos;, must use the same tuple element names..
        /// </summary>
        internal static string ERR_PartialMethodInconsistentTupleNames {
            get {
                return ResourceManager.GetString("ERR_PartialMethodInconsistentTupleNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial methods with only a defining declaration or removed conditional methods cannot be used in expression trees.
        /// </summary>
        internal static string ERR_PartialMethodInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_PartialMethodInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method cannot have access modifiers or the virtual, abstract, override, new, sealed, or extern modifiers.
        /// </summary>
        internal static string ERR_PartialMethodInvalidModifier {
            get {
                return ResourceManager.GetString("ERR_PartialMethodInvalidModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No defining declaration found for implementing declaration of partial method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_PartialMethodMustHaveLatent {
            get {
                return ResourceManager.GetString("ERR_PartialMethodMustHaveLatent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial methods must have a void return type.
        /// </summary>
        internal static string ERR_PartialMethodMustReturnVoid {
            get {
                return ResourceManager.GetString("ERR_PartialMethodMustReturnVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not explicitly implement an interface method.
        /// </summary>
        internal static string ERR_PartialMethodNotExplicit {
            get {
                return ResourceManager.GetString("ERR_PartialMethodNotExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method must be declared within a partial class or partial struct.
        /// </summary>
        internal static string ERR_PartialMethodOnlyInPartialClass {
            get {
                return ResourceManager.GetString("ERR_PartialMethodOnlyInPartialClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only methods, classes, structs, or interfaces may be partial.
        /// </summary>
        internal static string ERR_PartialMethodOnlyMethods {
            get {
                return ResourceManager.GetString("ERR_PartialMethodOnlyMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not have multiple implementing declarations.
        /// </summary>
        internal static string ERR_PartialMethodOnlyOneActual {
            get {
                return ResourceManager.GetString("ERR_PartialMethodOnlyOneActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A partial method may not have multiple defining declarations.
        /// </summary>
        internal static string ERR_PartialMethodOnlyOneLatent {
            get {
                return ResourceManager.GetString("ERR_PartialMethodOnlyOneLatent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must use a params parameter or neither may use a params parameter.
        /// </summary>
        internal static string ERR_PartialMethodParamsDifference {
            get {
                return ResourceManager.GetString("ERR_PartialMethodParamsDifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be static or neither may be static.
        /// </summary>
        internal static string ERR_PartialMethodStaticDifference {
            get {
                return ResourceManager.GetString("ERR_PartialMethodStaticDifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create delegate from method &apos;{0}&apos; because it is a partial method without an implementing declaration.
        /// </summary>
        internal static string ERR_PartialMethodToDelegate {
            get {
                return ResourceManager.GetString("ERR_PartialMethodToDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both partial method declarations must be unsafe or neither may be unsafe.
        /// </summary>
        internal static string ERR_PartialMethodUnsafeDifference {
            get {
                return ResourceManager.GetString("ERR_PartialMethodUnsafeDifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;partial&apos; modifier can only appear immediately before &apos;class&apos;, &apos;struct&apos;, &apos;interface&apos;, or &apos;void&apos;.
        /// </summary>
        internal static string ERR_PartialMisplaced {
            get {
                return ResourceManager.GetString("ERR_PartialMisplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; have conflicting accessibility modifiers.
        /// </summary>
        internal static string ERR_PartialModifierConflict {
            get {
                return ResourceManager.GetString("ERR_PartialModifierConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must not specify different base classes.
        /// </summary>
        internal static string ERR_PartialMultipleBases {
            get {
                return ResourceManager.GetString("ERR_PartialMultipleBases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must be all classes, all structs, or all interfaces.
        /// </summary>
        internal static string ERR_PartialTypeKindConflict {
            get {
                return ResourceManager.GetString("ERR_PartialTypeKindConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; have inconsistent constraints for type parameter &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_PartialWrongConstraints {
            get {
                return ResourceManager.GetString("ERR_PartialWrongConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must have the same type parameter names in the same order.
        /// </summary>
        internal static string ERR_PartialWrongTypeParams {
            get {
                return ResourceManager.GetString("ERR_PartialWrongTypeParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must have the same type parameter names and variance modifiers in the same order.
        /// </summary>
        internal static string ERR_PartialWrongTypeParamsVariance {
            get {
                return ResourceManager.GetString("ERR_PartialWrongTypeParamsVariance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not legal to use the type &apos;dynamic&apos; in a pattern..
        /// </summary>
        internal static string ERR_PatternDynamicType {
            get {
                return ResourceManager.GetString("ERR_PatternDynamicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch case has already been handled by a previous case..
        /// </summary>
        internal static string ERR_PatternIsSubsumed {
            get {
                return ResourceManager.GetString("ERR_PatternIsSubsumed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not legal to use nullable type &apos;{0}&apos; in a pattern; use the underlying type &apos;{1}&apos; instead..
        /// </summary>
        internal static string ERR_PatternNullableType {
            get {
                return ResourceManager.GetString("ERR_PatternNullableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression of type &apos;{0}&apos; cannot be handled by a pattern of type &apos;{1}&apos; in C# {2}. Please use language version {3} or greater..
        /// </summary>
        internal static string ERR_PatternWrongGenericTypeInVersion {
            get {
                return ResourceManager.GetString("ERR_PatternWrongGenericTypeInVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression of type &apos;{0}&apos; cannot be handled by a pattern of type &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_PatternWrongType {
            get {
                return ResourceManager.GetString("ERR_PatternWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading file &apos;{0}&apos; specified for the named argument &apos;{1}&apos; for PermissionSet attribute: &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_PermissionSetAttributeFileReadError {
            get {
                return ResourceManager.GetString("ERR_PermissionSetAttributeFileReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve file path &apos;{0}&apos; specified for the named argument &apos;{1}&apos; for PermissionSet attribute.
        /// </summary>
        internal static string ERR_PermissionSetAttributeInvalidFile {
            get {
                return ResourceManager.GetString("ERR_PermissionSetAttributeInvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while writing the output file: {0}..
        /// </summary>
        internal static string ERR_PeWritingFailure {
            get {
                return ResourceManager.GetString("ERR_PeWritingFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither &apos;is&apos; nor &apos;as&apos; is valid on pointer types.
        /// </summary>
        internal static string ERR_PointerInAsOrIs {
            get {
                return ResourceManager.GetString("ERR_PointerInAsOrIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To cast a negative value, you must enclose the value in parentheses..
        /// </summary>
        internal static string ERR_PossibleBadNegCast {
            get {
                return ResourceManager.GetString("ERR_PossibleBadNegCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define/undefine preprocessor symbols after first token in file.
        /// </summary>
        internal static string ERR_PPDefFollowsToken {
            get {
                return ResourceManager.GetString("ERR_PPDefFollowsToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preprocessor directive expected.
        /// </summary>
        internal static string ERR_PPDirectiveExpected {
            get {
                return ResourceManager.GetString("ERR_PPDirectiveExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use #load after first token in file.
        /// </summary>
        internal static string ERR_PPLoadFollowsToken {
            get {
                return ResourceManager.GetString("ERR_PPLoadFollowsToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use #r after first token in file.
        /// </summary>
        internal static string ERR_PPReferenceFollowsToken {
            get {
                return ResourceManager.GetString("ERR_PPReferenceFollowsToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; was not found on type &apos;{1}&apos; from assembly &apos;{2}&apos;..
        /// </summary>
        internal static string ERR_PredefinedTypeMemberNotFoundInAssembly {
            get {
                return ResourceManager.GetString("ERR_PredefinedTypeMemberNotFoundInAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type &apos;{0}&apos; is not defined or imported.
        /// </summary>
        internal static string ERR_PredefinedTypeNotFound {
            get {
                return ResourceManager.GetString("ERR_PredefinedTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type &apos;{0}&apos; must be a struct..
        /// </summary>
        internal static string ERR_PredefinedValueTupleTypeMustBeStruct {
            get {
                return ResourceManager.GetString("ERR_PredefinedValueTupleTypeMustBeStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type &apos;{0}&apos; is not defined or imported, or is ambiguous (imported twice).
        /// </summary>
        internal static string ERR_PredefinedValueTupleTypeNotFound {
            get {
                return ResourceManager.GetString("ERR_PredefinedValueTupleTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecurityAction value &apos;{0}&apos; is invalid for PrincipalPermission attribute.
        /// </summary>
        internal static string ERR_PrincipalPermissionInvalidAction {
            get {
                return ResourceManager.GetString("ERR_PrincipalPermissionInvalidAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: abstract properties cannot have private accessors.
        /// </summary>
        internal static string ERR_PrivateAbstractAccessor {
            get {
                return ResourceManager.GetString("ERR_PrivateAbstractAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: accessibility modifiers may not be used on accessors in an interface.
        /// </summary>
        internal static string ERR_PropertyAccessModInInterface {
            get {
                return ResourceManager.GetString("ERR_PropertyAccessModInInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: property or indexer cannot have void type.
        /// </summary>
        internal static string ERR_PropertyCantHaveVoidType {
            get {
                return ResourceManager.GetString("ERR_PropertyCantHaveVoidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property or indexer &apos;{0}&apos; cannot be used in this context because it lacks the get accessor.
        /// </summary>
        internal static string ERR_PropertyLacksGet {
            get {
                return ResourceManager.GetString("ERR_PropertyLacksGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: property or indexer must have at least one accessor.
        /// </summary>
        internal static string ERR_PropertyWithNoAccessors {
            get {
                return ResourceManager.GetString("ERR_PropertyWithNoAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static classes cannot contain protected members.
        /// </summary>
        internal static string ERR_ProtectedInStatic {
            get {
                return ResourceManager.GetString("ERR_ProtectedInStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: new protected member declared in struct.
        /// </summary>
        internal static string ERR_ProtectedInStruct {
            get {
                return ResourceManager.GetString("ERR_ProtectedInStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The * or -&gt; operator must be applied to a pointer.
        /// </summary>
        internal static string ERR_PtrExpected {
            get {
                return ResourceManager.GetString("ERR_PtrExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A pointer must be indexed by only one value.
        /// </summary>
        internal static string ERR_PtrIndexSingle {
            get {
                return ResourceManager.GetString("ERR_PtrIndexSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error signing output with public key from container &apos;{0}&apos; -- {1}.
        /// </summary>
        internal static string ERR_PublicKeyContainerFailure {
            get {
                return ResourceManager.GetString("ERR_PublicKeyContainerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error signing output with public key from file &apos;{0}&apos; -- {1}.
        /// </summary>
        internal static string ERR_PublicKeyFileFailure {
            get {
                return ResourceManager.GetString("ERR_PublicKeyFileFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public signing was specified and requires a public key, but no public key was specified..
        /// </summary>
        internal static string ERR_PublicSignButNoKey {
            get {
                return ResourceManager.GetString("ERR_PublicSignButNoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public signing is not supported for netmodules..
        /// </summary>
        internal static string ERR_PublicSignNetModule {
            get {
                return ResourceManager.GetString("ERR_PublicSignNetModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable &apos;{0}&apos; has already been declared.
        /// </summary>
        internal static string ERR_QueryDuplicateRangeVariable {
            get {
                return ResourceManager.GetString("ERR_QueryDuplicateRangeVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is not in scope on the right side of &apos;equals&apos;.  Consider swapping the expressions on either side of &apos;equals&apos;..
        /// </summary>
        internal static string ERR_QueryInnerKey {
            get {
                return ResourceManager.GetString("ERR_QueryInnerKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple implementations of the query pattern were found for source type &apos;{0}&apos;.  Ambiguous call to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_QueryMultipleProviders {
            get {
                return ResourceManager.GetString("ERR_QueryMultipleProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type &apos;{0}&apos;.  &apos;{1}&apos; not found..
        /// </summary>
        internal static string ERR_QueryNoProvider {
            get {
                return ResourceManager.GetString("ERR_QueryNoProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type &apos;{0}&apos;.  &apos;{1}&apos; not found.  Consider explicitly specifying the type of the range variable &apos;{2}&apos;..
        /// </summary>
        internal static string ERR_QueryNoProviderCastable {
            get {
                return ResourceManager.GetString("ERR_QueryNoProviderCastable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find an implementation of the query pattern for source type &apos;{0}&apos;.  &apos;{1}&apos; not found.  Are you missing a reference to &apos;System.Core.dll&apos; or a using directive for &apos;System.Linq&apos;?.
        /// </summary>
        internal static string ERR_QueryNoProviderStandard {
            get {
                return ResourceManager.GetString("ERR_QueryNoProviderStandard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; is not in scope on the left side of &apos;equals&apos;.  Consider swapping the expressions on either side of &apos;equals&apos;..
        /// </summary>
        internal static string ERR_QueryOuterKey {
            get {
                return ResourceManager.GetString("ERR_QueryOuterKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot pass the range variable &apos;{0}&apos; as an out or ref parameter.
        /// </summary>
        internal static string ERR_QueryOutRefRangeVariable {
            get {
                return ResourceManager.GetString("ERR_QueryOutRefRangeVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot assign {0} to a range variable.
        /// </summary>
        internal static string ERR_QueryRangeVariableAssignedBadValue {
            get {
                return ResourceManager.GetString("ERR_QueryRangeVariableAssignedBadValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable &apos;{0}&apos; conflicts with a previous declaration of &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_QueryRangeVariableOverrides {
            get {
                return ResourceManager.GetString("ERR_QueryRangeVariableOverrides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range variable &apos;{0}&apos; cannot be assigned to -- it is read only.
        /// </summary>
        internal static string ERR_QueryRangeVariableReadOnly {
            get {
                return ResourceManager.GetString("ERR_QueryRangeVariableReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The range variable &apos;{0}&apos; cannot have the same name as a method type parameter.
        /// </summary>
        internal static string ERR_QueryRangeVariableSameAsTypeParam {
            get {
                return ResourceManager.GetString("ERR_QueryRangeVariableSameAsTypeParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the expression in the {0} clause is incorrect.  Type inference failed in the call to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_QueryTypeInferenceFailed {
            get {
                return ResourceManager.GetString("ERR_QueryTypeInferenceFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of one of the expressions in the {0} clause is incorrect.  Type inference failed in the call to &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_QueryTypeInferenceFailedMulti {
            get {
                return ResourceManager.GetString("ERR_QueryTypeInferenceFailedMulti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression of type &apos;{0}&apos; is not allowed in a subsequent from clause in a query expression with source type &apos;{1}&apos;.  Type inference failed in the call to &apos;{2}&apos;..
        /// </summary>
        internal static string ERR_QueryTypeInferenceFailedSelectMany {
            get {
                return ResourceManager.GetString("ERR_QueryTypeInferenceFailedSelectMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to } expected.
        /// </summary>
        internal static string ERR_RbraceExpected {
            get {
                return ResourceManager.GetString("ERR_RbraceExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; of type &apos;{1}&apos; cannot be assigned with an object initializer because it is of a value type.
        /// </summary>
        internal static string ERR_ReadonlyValueTypeInObjectInitializer {
            get {
                return ResourceManager.GetString("ERR_ReadonlyValueTypeInObjectInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor &apos;{0}&apos; cannot call itself.
        /// </summary>
        internal static string ERR_RecursiveConstructorCall {
            get {
                return ResourceManager.GetString("ERR_RecursiveConstructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of &apos;{0}&apos; cannot be inferred since its initializer directly or indirectly refers to the definition..
        /// </summary>
        internal static string ERR_RecursivelyTypedVariable {
            get {
                return ResourceManager.GetString("ERR_RecursivelyTypedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression must be of type &apos;{0}&apos; because it is being assigned by reference.
        /// </summary>
        internal static string ERR_RefAssignmentMustHaveIdentityConversion {
            get {
                return ResourceManager.GetString("ERR_RefAssignmentMustHaveIdentityConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{2}&apos; must be a reference type in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_RefConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("ERR_RefConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #r is only allowed in scripts.
        /// </summary>
        internal static string ERR_ReferenceDirectiveOnlyAllowedInScripts {
            get {
                return ResourceManager.GetString("ERR_ReferenceDirectiveOnlyAllowedInScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ref or out value must be an assignable variable.
        /// </summary>
        internal static string ERR_RefLvalueExpected {
            get {
                return ResourceManager.GetString("ERR_RefLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ref or out parameter cannot have a default value.
        /// </summary>
        internal static string ERR_RefOutDefaultValue {
            get {
                return ResourceManager.GetString("ERR_RefOutDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A property or indexer may not be passed as an out or ref parameter.
        /// </summary>
        internal static string ERR_RefProperty {
            get {
                return ResourceManager.GetString("ERR_RefProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties which return by reference cannot have set accessors.
        /// </summary>
        internal static string ERR_RefPropertyCannotHaveSetAccessor {
            get {
                return ResourceManager.GetString("ERR_RefPropertyCannotHaveSetAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties which return by reference must have a get accessor.
        /// </summary>
        internal static string ERR_RefPropertyMustHaveGetAccessor {
            get {
                return ResourceManager.GetString("ERR_RefPropertyMustHaveGetAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A readonly field cannot be used as a ref or out value (except in a constructor).
        /// </summary>
        internal static string ERR_RefReadonly {
            get {
                return ResourceManager.GetString("ERR_RefReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; cannot be used as a ref or out value (except in a constructor).
        /// </summary>
        internal static string ERR_RefReadonly2 {
            get {
                return ResourceManager.GetString("ERR_RefReadonly2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;{0}&apos; as a ref or out value because it is read-only.
        /// </summary>
        internal static string ERR_RefReadonlyLocal {
            get {
                return ResourceManager.GetString("ERR_RefReadonlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use fields of &apos;{0}&apos; as a ref or out value because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_RefReadonlyLocal2Cause {
            get {
                return ResourceManager.GetString("ERR_RefReadonlyLocal2Cause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;{0}&apos; as a ref or out value because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_RefReadonlyLocalCause {
            get {
                return ResourceManager.GetString("ERR_RefReadonlyLocalCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static readonly field cannot be used as a ref or out value (except in a static constructor).
        /// </summary>
        internal static string ERR_RefReadonlyStatic {
            get {
                return ResourceManager.GetString("ERR_RefReadonlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field &apos;{0}&apos; cannot be used as a ref or out value (except in a static constructor).
        /// </summary>
        internal static string ERR_RefReadonlyStatic2 {
            get {
                return ResourceManager.GetString("ERR_RefReadonlyStatic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return by reference a result of &apos;{0}&apos; because the argument passed to parameter &apos;{1}&apos; cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnCall {
            get {
                return ResourceManager.GetString("ERR_RefReturnCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return by reference a member of result of &apos;{0}&apos; because the argument passed to parameter &apos;{1}&apos; cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnCall2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnCall2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;await&apos; cannot be used in an expression containing a call to &apos;{0}&apos; because it returns by reference.
        /// </summary>
        internal static string ERR_RefReturningCallAndAwait {
            get {
                return ResourceManager.GetString("ERR_RefReturningCallAndAwait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a call to a method, property, or indexer that returns by reference.
        /// </summary>
        internal static string ERR_RefReturningCallInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_RefReturningCallInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return local &apos;{0}&apos; by reference because it is not a ref local.
        /// </summary>
        internal static string ERR_RefReturnLocal {
            get {
                return ResourceManager.GetString("ERR_RefReturnLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return a member of local &apos;{0}&apos; by reference because it is not a ref local.
        /// </summary>
        internal static string ERR_RefReturnLocal2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnLocal2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression cannot be used in this context because it may not be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnLvalueExpected {
            get {
                return ResourceManager.GetString("ERR_RefReturnLvalueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return expression must be of type &apos;{0}&apos; because this method returns by reference.
        /// </summary>
        internal static string ERR_RefReturnMustHaveIdentityConversion {
            get {
                return ResourceManager.GetString("ERR_RefReturnMustHaveIdentityConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return &apos;{0}&apos; by reference because it was initialized to a value that cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnNonreturnableLocal {
            get {
                return ResourceManager.GetString("ERR_RefReturnNonreturnableLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return by reference a member of &apos;{0}&apos; because it was initialized to a value that cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnNonreturnableLocal2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnNonreturnableLocal2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return a parameter by reference &apos;{0}&apos; because it is not a ref or out parameter.
        /// </summary>
        internal static string ERR_RefReturnParameter {
            get {
                return ResourceManager.GetString("ERR_RefReturnParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return or a member of parameter &apos;{0}&apos; by reference because it is not a ref or out parameter.
        /// </summary>
        internal static string ERR_RefReturnParameter2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnParameter2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return the range variable &apos;{0}&apos; by reference.
        /// </summary>
        internal static string ERR_RefReturnRangeVariable {
            get {
                return ResourceManager.GetString("ERR_RefReturnRangeVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A readonly field cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnReadonly {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of readonly field &apos;{0}&apos; cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnReadonly2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonly2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return &apos;{0}&apos; by reference because it is read-only.
        /// </summary>
        internal static string ERR_RefReturnReadonlyLocal {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonlyLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return fields of &apos;{0}&apos; by reference because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_RefReturnReadonlyLocal2Cause {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonlyLocal2Cause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return &apos;{0}&apos; by reference because it is a &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_RefReturnReadonlyLocalCause {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonlyLocalCause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static readonly field cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnReadonlyStatic {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonlyStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields of static readonly field &apos;{0}&apos; cannot be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnReadonlyStatic2 {
            get {
                return ResourceManager.GetString("ERR_RefReturnReadonlyStatic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return &apos;{0}&apos; by reference because its receiver may not be returned by reference.
        /// </summary>
        internal static string ERR_RefReturnReceiver {
            get {
                return ResourceManager.GetString("ERR_RefReturnReceiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Struct members cannot return &apos;this&apos; or other instance members by reference.
        /// </summary>
        internal static string ERR_RefReturnStructThis {
            get {
                return ResourceManager.GetString("ERR_RefReturnStructThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;class&apos; or &apos;struct&apos; constraint must come before any other constraints.
        /// </summary>
        internal static string ERR_RefValBoundMustBeFirst {
            get {
                return ResourceManager.GetString("ERR_RefValBoundMustBeFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: cannot specify both a constraint class and the &apos;class&apos; or &apos;struct&apos; constraint.
        /// </summary>
        internal static string ERR_RefValBoundWithClass {
            get {
                return ResourceManager.GetString("ERR_RefValBoundWithClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly name &apos;{0}&apos; is reserved and cannot be used as a reference in an interactive session.
        /// </summary>
        internal static string ERR_ReservedAssemblyName {
            get {
                return ResourceManager.GetString("ERR_ReservedAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enumerator name &apos;{0}&apos; is reserved and cannot be used.
        /// </summary>
        internal static string ERR_ReservedEnumerator {
            get {
                return ResourceManager.GetString("ERR_ReservedEnumerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each linked resource and module must have a unique filename. Filename &apos;{0}&apos; is specified more than once in this assembly.
        /// </summary>
        internal static string ERR_ResourceFileNameNotUnique {
            get {
                return ResourceManager.GetString("ERR_ResourceFileNameNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource identifier &apos;{0}&apos; has already been used in this assembly.
        /// </summary>
        internal static string ERR_ResourceNotUnique {
            get {
                return ResourceManager.GetString("ERR_ResourceNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since &apos;{0}&apos; returns void, a return keyword must not be followed by an object expression.
        /// </summary>
        internal static string ERR_RetNoObjectRequired {
            get {
                return ResourceManager.GetString("ERR_RetNoObjectRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous function converted to a void returning delegate cannot return a value.
        /// </summary>
        internal static string ERR_RetNoObjectRequiredLambda {
            get {
                return ResourceManager.GetString("ERR_RetNoObjectRequiredLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object of a type convertible to &apos;{0}&apos; is required.
        /// </summary>
        internal static string ERR_RetObjectRequired {
            get {
                return ResourceManager.GetString("ERR_RetObjectRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: not all code paths return a value.
        /// </summary>
        internal static string ERR_ReturnExpected {
            get {
                return ResourceManager.GetString("ERR_ReturnExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot return a value from an iterator. Use the yield return statement to return a value, or yield break to end the iteration..
        /// </summary>
        internal static string ERR_ReturnInIterator {
            get {
                return ResourceManager.GetString("ERR_ReturnInIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify the return value of &apos;{0}&apos; because it is not a variable.
        /// </summary>
        internal static string ERR_ReturnNotLValue {
            get {
                return ResourceManager.GetString("ERR_ReturnNotLValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static types cannot be used as return types.
        /// </summary>
        internal static string ERR_ReturnTypeIsStaticClass {
            get {
                return ResourceManager.GetString("ERR_ReturnTypeIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{1}&apos; exists in both &apos;{0}&apos; and &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_SameFullNameAggAgg {
            get {
                return ResourceManager.GetString("ERR_SameFullNameAggAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace &apos;{1}&apos; in &apos;{0}&apos; conflicts with the type &apos;{3}&apos; in &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_SameFullNameNsAgg {
            get {
                return ResourceManager.GetString("ERR_SameFullNameNsAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{1}&apos; in &apos;{0}&apos; conflicts with the namespace &apos;{3}&apos; in &apos;{2}&apos;.
        /// </summary>
        internal static string ERR_SameFullNameThisAggThisNs {
            get {
                return ResourceManager.GetString("ERR_SameFullNameThisAggThisNs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be sealed because it is not an override.
        /// </summary>
        internal static string ERR_SealedNonOverride {
            get {
                return ResourceManager.GetString("ERR_SealedNonOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a class cannot be both static and sealed.
        /// </summary>
        internal static string ERR_SealedStaticClass {
            get {
                return ResourceManager.GetString("ERR_SealedStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security attribute &apos;{0}&apos; has an invalid SecurityAction value &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_SecurityAttributeInvalidAction {
            get {
                return ResourceManager.GetString("ERR_SecurityAttributeInvalidAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecurityAction value &apos;{0}&apos; is invalid for security attributes applied to an assembly.
        /// </summary>
        internal static string ERR_SecurityAttributeInvalidActionAssembly {
            get {
                return ResourceManager.GetString("ERR_SecurityAttributeInvalidActionAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecurityAction value &apos;{0}&apos; is invalid for security attributes applied to a type or a method.
        /// </summary>
        internal static string ERR_SecurityAttributeInvalidActionTypeOrMethod {
            get {
                return ResourceManager.GetString("ERR_SecurityAttributeInvalidActionTypeOrMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security attribute &apos;{0}&apos; is not valid on this declaration type. Security attributes are only valid on assembly, type and method declarations..
        /// </summary>
        internal static string ERR_SecurityAttributeInvalidTarget {
            get {
                return ResourceManager.GetString("ERR_SecurityAttributeInvalidTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First argument to a security attribute must be a valid SecurityAction.
        /// </summary>
        internal static string ERR_SecurityAttributeMissingAction {
            get {
                return ResourceManager.GetString("ERR_SecurityAttributeMissingAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security attribute &apos;{0}&apos; cannot be applied to an Async method..
        /// </summary>
        internal static string ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync {
            get {
                return ResourceManager.GetString("ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async methods are not allowed in an Interface, Class, or Structure which has the &apos;SecurityCritical&apos; or &apos;SecuritySafeCritical&apos; attribute..
        /// </summary>
        internal static string ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct {
            get {
                return ResourceManager.GetString("ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ; expected.
        /// </summary>
        internal static string ERR_SemicolonExpected {
            get {
                return ResourceManager.GetString("ERR_SemicolonExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { or ; expected.
        /// </summary>
        internal static string ERR_SemiOrLBraceExpected {
            get {
                return ResourceManager.GetString("ERR_SemiOrLBraceExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to { or ; or =&gt; expected.
        /// </summary>
        internal static string ERR_SemiOrLBraceOrArrowExpected {
            get {
                return ResourceManager.GetString("ERR_SemiOrLBraceOrArrowExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key file &apos;{0}&apos; is missing the private key needed for signing.
        /// </summary>
        internal static string ERR_SignButNoPrivateKey {
            get {
                return ResourceManager.GetString("ERR_SignButNoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single-line comment may not be used in an interpolated string..
        /// </summary>
        internal static string ERR_SingleLineCommentInExpressionHole {
            get {
                return ResourceManager.GetString("ERR_SingleLineCommentInExpressionHole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type or namespace name &apos;{0}&apos; could not be found (are you missing a using directive or an assembly reference?).
        /// </summary>
        internal static string ERR_SingleTypeNameNotFound {
            get {
                return ResourceManager.GetString("ERR_SingleTypeNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type name &apos;{0}&apos; could not be found. This type has been forwarded to assembly &apos;{1}&apos;. Consider adding a reference to that assembly..
        /// </summary>
        internal static string ERR_SingleTypeNameNotFoundFwd {
            get {
                return ResourceManager.GetString("ERR_SingleTypeNameNotFoundFwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not have a predefined size, therefore sizeof can only be used in an unsafe context (consider using System.Runtime.InteropServices.Marshal.SizeOf).
        /// </summary>
        internal static string ERR_SizeofUnsafe {
            get {
                return ResourceManager.GetString("ERR_SizeofUnsafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file references are not supported..
        /// </summary>
        internal static string ERR_SourceFileReferencesNotSupported {
            get {
                return ResourceManager.GetString("ERR_SourceFileReferencesNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /sourcelink switch is only supported when emitting PDB..
        /// </summary>
        internal static string ERR_SourceLinkRequiresPdb {
            get {
                return ResourceManager.GetString("ERR_SourceLinkRequiresPdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance of type &apos;{0}&apos; cannot be used inside an anonymous function, query expression, iterator block or async method.
        /// </summary>
        internal static string ERR_SpecialByRefInLambda {
            get {
                return ResourceManager.GetString("ERR_SpecialByRefInLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint cannot be special class &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_SpecialTypeAsBound {
            get {
                return ResourceManager.GetString("ERR_SpecialTypeAsBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stackalloc may not be used in a catch or finally block.
        /// </summary>
        internal static string ERR_StackallocInCatchFinally {
            get {
                return ResourceManager.GetString("ERR_StackallocInCatchFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A lambda expression with a statement body cannot be converted to an expression tree.
        /// </summary>
        internal static string ERR_StatementLambdaToExpressionTree {
            get {
                return ResourceManager.GetString("ERR_StatementLambdaToExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1}&apos;: cannot derive from static class &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_StaticBaseClass {
            get {
                return ResourceManager.GetString("ERR_StaticBaseClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static classes cannot implement interfaces.
        /// </summary>
        internal static string ERR_StaticClassInterfaceImpl {
            get {
                return ResourceManager.GetString("ERR_StaticClassInterfaceImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constant &apos;{0}&apos; cannot be marked static.
        /// </summary>
        internal static string ERR_StaticConstant {
            get {
                return ResourceManager.GetString("ERR_StaticConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a static constructor must be parameterless.
        /// </summary>
        internal static string ERR_StaticConstParam {
            get {
                return ResourceManager.GetString("ERR_StaticConstParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: access modifiers are not allowed on static constructors.
        /// </summary>
        internal static string ERR_StaticConstructorWithAccessModifiers {
            get {
                return ResourceManager.GetString("ERR_StaticConstructorWithAccessModifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: static constructor cannot have an explicit &apos;this&apos; or &apos;base&apos; constructor call.
        /// </summary>
        internal static string ERR_StaticConstructorWithExplicitConstructorCall {
            get {
                return ResourceManager.GetString("ERR_StaticConstructorWithExplicitConstructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static class &apos;{0}&apos; cannot derive from type &apos;{1}&apos;. Static classes must derive from object..
        /// </summary>
        internal static string ERR_StaticDerivedFromNonObject {
            get {
                return ResourceManager.GetString("ERR_StaticDerivedFromNonObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The second operand of an &apos;is&apos; or &apos;as&apos; operator may not be static type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_StaticInAsOrIs {
            get {
                return ResourceManager.GetString("ERR_StaticInAsOrIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static field or property &apos;{0}&apos; cannot be assigned in an object initializer.
        /// </summary>
        internal static string ERR_StaticMemberInObjectInitializer {
            get {
                return ResourceManager.GetString("ERR_StaticMemberInObjectInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static member &apos;{0}&apos; cannot be marked as override, virtual, or abstract.
        /// </summary>
        internal static string ERR_StaticNotVirtual {
            get {
                return ResourceManager.GetString("ERR_StaticNotVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Struct member &apos;{0}&apos; of type &apos;{1}&apos; causes a cycle in the struct layout.
        /// </summary>
        internal static string ERR_StructLayoutCycle {
            get {
                return ResourceManager.GetString("ERR_StructLayoutCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FieldOffset attribute is not allowed on static or const fields.
        /// </summary>
        internal static string ERR_StructOffsetOnBadField {
            get {
                return ResourceManager.GetString("ERR_StructOffsetOnBadField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FieldOffset attribute can only be placed on members of types marked with the StructLayout(LayoutKind.Explicit).
        /// </summary>
        internal static string ERR_StructOffsetOnBadStruct {
            get {
                return ResourceManager.GetString("ERR_StructOffsetOnBadStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs cannot contain explicit parameterless constructors.
        /// </summary>
        internal static string ERR_StructsCantContainDefaultConstructor {
            get {
                return ResourceManager.GetString("ERR_StructsCantContainDefaultConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: structs cannot call base class constructors.
        /// </summary>
        internal static string ERR_StructWithBaseConstructorCall {
            get {
                return ResourceManager.GetString("ERR_StructWithBaseConstructorCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub-expression cannot be used in an argument to nameof..
        /// </summary>
        internal static string ERR_SubexpressionNotInNameof {
            get {
                return ResourceManager.GetString("ERR_SubexpressionNotInNameof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The switch expression must be a value; found &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_SwitchExpressionValueExpected {
            get {
                return ResourceManager.GetString("ERR_SwitchExpressionValueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot fall out of switch from final case label (&apos;{0}&apos;).
        /// </summary>
        internal static string ERR_SwitchFallOut {
            get {
                return ResourceManager.GetString("ERR_SwitchFallOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control cannot fall through from one case label (&apos;{0}&apos;) to another.
        /// </summary>
        internal static string ERR_SwitchFallThrough {
            get {
                return ResourceManager.GetString("ERR_SwitchFallThrough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line syntax error: Missing &apos;:&lt;number&gt;&apos; for &apos;{0}&apos; option.
        /// </summary>
        internal static string ERR_SwitchNeedsNumber {
            get {
                return ResourceManager.GetString("ERR_SwitchNeedsNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command-line syntax error: Missing &apos;{0}&apos; for &apos;{1}&apos; option.
        /// </summary>
        internal static string ERR_SwitchNeedsString {
            get {
                return ResourceManager.GetString("ERR_SwitchNeedsString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;MethodImplOptions.Synchronized&apos; cannot be applied to an async method.
        /// </summary>
        internal static string ERR_SynchronizedAsyncMethod {
            get {
                return ResourceManager.GetString("ERR_SynchronizedAsyncMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error, &apos;{0}&apos; expected.
        /// </summary>
        internal static string ERR_SyntaxError {
            get {
                return ResourceManager.GetString("ERR_SyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System.Void cannot be used from C# -- use typeof(void) to get the void type object.
        /// </summary>
        internal static string ERR_SystemVoid {
            get {
                return ResourceManager.GetString("ERR_SystemVoid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since &apos;{0}&apos; is an async method that returns &apos;Task&apos;, a return keyword must not be followed by an object expression. Did you intend to return &apos;Task&lt;T&gt;&apos;?.
        /// </summary>
        internal static string ERR_TaskRetNoObjectRequired {
            get {
                return ResourceManager.GetString("ERR_TaskRetNoObjectRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async lambda expression converted to a &apos;Task&apos; returning delegate cannot return a value. Did you intend to return &apos;Task&lt;T&gt;&apos;?.
        /// </summary>
        internal static string ERR_TaskRetNoObjectRequiredLambda {
            get {
                return ResourceManager.GetString("ERR_TaskRetNoObjectRequiredLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; is not available in the current context.
        /// </summary>
        internal static string ERR_ThisInBadContext {
            get {
                return ResourceManager.GetString("ERR_ThisInBadContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; is not valid in a static property, static method, or static field initializer.
        /// </summary>
        internal static string ERR_ThisInStaticMeth {
            get {
                return ResourceManager.GetString("ERR_ThisInStaticMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword &apos;this&apos; or &apos;base&apos; expected.
        /// </summary>
        internal static string ERR_ThisOrBaseExpected {
            get {
                return ResourceManager.GetString("ERR_ThisOrBaseExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous methods, lambda expressions, and query expressions inside structs cannot access instance members of &apos;this&apos;. Consider copying &apos;this&apos; to a local variable outside the anonymous method, lambda expression or query expression and using the local instead..
        /// </summary>
        internal static string ERR_ThisStructNotInAnonMeth {
            get {
                return ResourceManager.GetString("ERR_ThisStructNotInAnonMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A throw expression is not allowed in this context..
        /// </summary>
        internal static string ERR_ThrowMisplaced {
            get {
                return ResourceManager.GetString("ERR_ThrowMisplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch clauses cannot follow the general catch clause of a try statement.
        /// </summary>
        internal static string ERR_TooManyCatches {
            get {
                return ResourceManager.GetString("ERR_TooManyCatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many characters in character literal.
        /// </summary>
        internal static string ERR_TooManyCharsInConst {
            get {
                return ResourceManager.GetString("ERR_TooManyCharsInConst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 65534 locals, including those generated by the compiler, are allowed.
        /// </summary>
        internal static string ERR_TooManyLocals {
            get {
                return ResourceManager.GetString("ERR_TooManyLocals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals..
        /// </summary>
        internal static string ERR_TooManyUserStrings {
            get {
                return ResourceManager.GetString("ERR_TooManyUserStrings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A format specifier may not contain trailing whitespace..
        /// </summary>
        internal static string ERR_TrailingWhitespaceInFormatSpecifier {
            get {
                return ResourceManager.GetString("ERR_TrailingWhitespaceInFormatSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element names must be unique..
        /// </summary>
        internal static string ERR_TupleDuplicateElementName {
            get {
                return ResourceManager.GetString("ERR_TupleDuplicateElementName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define a class or member that utilizes tuples because the compiler required type &apos;{0}&apos; cannot be found. Are you missing a reference?.
        /// </summary>
        internal static string ERR_TupleElementNamesAttributeMissing {
            get {
                return ResourceManager.GetString("ERR_TupleElementNamesAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element names are not permitted on the left of a deconstruction..
        /// </summary>
        internal static string ERR_TupleElementNamesInDeconstruction {
            get {
                return ResourceManager.GetString("ERR_TupleElementNamesInDeconstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element name &apos;{0}&apos; is inferred. Please use language version {1} or greater to access an element by its inferred name..
        /// </summary>
        internal static string ERR_TupleInferredNamesNotAvailable {
            get {
                return ResourceManager.GetString("ERR_TupleInferredNamesNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element name &apos;{0}&apos; is only allowed at position {1}..
        /// </summary>
        internal static string ERR_TupleReservedElementName {
            get {
                return ResourceManager.GetString("ERR_TupleReservedElementName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple element name &apos;{0}&apos; is disallowed at any position..
        /// </summary>
        internal static string ERR_TupleReservedElementNameAnyPosition {
            get {
                return ResourceManager.GetString("ERR_TupleReservedElementNameAnyPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuple must contain at least two elements..
        /// </summary>
        internal static string ERR_TupleTooFewElements {
            get {
                return ResourceManager.GetString("ERR_TupleTooFewElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {1} &apos;{0}&apos; cannot be used with type arguments.
        /// </summary>
        internal static string ERR_TypeArgsNotAllowed {
            get {
                return ResourceManager.GetString("ERR_TypeArgsNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type expected.
        /// </summary>
        internal static string ERR_TypeExpected {
            get {
                return ResourceManager.GetString("ERR_TypeExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module &apos;{0}&apos; in assembly &apos;{1}&apos; is forwarding the type &apos;{2}&apos; to multiple assemblies: &apos;{3}&apos; and &apos;{4}&apos;..
        /// </summary>
        internal static string ERR_TypeForwardedToMultipleAssemblies {
            get {
                return ResourceManager.GetString("ERR_TypeForwardedToMultipleAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot infer the type of implicitly-typed deconstruction variable &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable {
            get {
                return ResourceManager.GetString("ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot infer the type of implicitly-typed out variable &apos;{0}&apos;..
        /// </summary>
        internal static string ERR_TypeInferenceFailedForImplicitlyTypedOutVariable {
            get {
                return ResourceManager.GetString("ERR_TypeInferenceFailedForImplicitlyTypedOutVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first operand of an &apos;as&apos; operator may not be a tuple literal without a natural type..
        /// </summary>
        internal static string ERR_TypelessTupleInAs {
            get {
                return ResourceManager.GetString("ERR_TypelessTupleInAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter declaration must be an identifier not a type.
        /// </summary>
        internal static string ERR_TypeParamMustBeIdentifier {
            get {
                return ResourceManager.GetString("ERR_TypeParamMustBeIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to type parameter &apos;{0}&apos; because it could be a non-nullable value type. Consider using &apos;default({0})&apos; instead..
        /// </summary>
        internal static string ERR_TypeVarCantBeNull {
            get {
                return ResourceManager.GetString("ERR_TypeVarCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{0}&apos; has the same name as the containing type, or method.
        /// </summary>
        internal static string ERR_TypeVariableSameAsParent {
            get {
                return ResourceManager.GetString("ERR_TypeVariableSameAsParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contextual keyword &apos;var&apos; may only appear within a local variable declaration or in script code.
        /// </summary>
        internal static string ERR_TypeVarNotFound {
            get {
                return ResourceManager.GetString("ERR_TypeVarNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contextual keyword &apos;var&apos; cannot be used in a range variable declaration.
        /// </summary>
        internal static string ERR_TypeVarNotFoundRangeVariable {
            get {
                return ResourceManager.GetString("ERR_TypeVarNotFoundRangeVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1}&apos; does not define type parameter &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_TyVarNotFoundInConstraint {
            get {
                return ResourceManager.GetString("ERR_TyVarNotFoundInConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; must be fully assigned before control is returned to the caller.
        /// </summary>
        internal static string ERR_UnassignedThis {
            get {
                return ResourceManager.GetString("ERR_UnassignedThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-implemented property &apos;{0}&apos; must be fully assigned before control is returned to the caller..
        /// </summary>
        internal static string ERR_UnassignedThisAutoProperty {
            get {
                return ResourceManager.GetString("ERR_UnassignedThisAutoProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot modify the result of an unboxing conversion.
        /// </summary>
        internal static string ERR_UnboxNotLValue {
            get {
                return ResourceManager.GetString("ERR_UnboxNotLValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing close delimiter &apos;}&apos; for interpolated expression started with &apos;{&apos;..
        /// </summary>
        internal static string ERR_UnclosedExpressionHole {
            get {
                return ResourceManager.GetString("ERR_UnclosedExpressionHole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &apos;{0}&apos; character must be escaped (by doubling) in an interpolated string..
        /// </summary>
        internal static string ERR_UnescapedCurly {
            get {
                return ResourceManager.GetString("ERR_UnescapedCurly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected use of an aliased name.
        /// </summary>
        internal static string ERR_UnexpectedAliasedName {
            get {
                return ResourceManager.GetString("ERR_UnexpectedAliasedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type arguments are not allowed in the nameof operator..
        /// </summary>
        internal static string ERR_UnexpectedBoundGenericName {
            get {
                return ResourceManager.GetString("ERR_UnexpectedBoundGenericName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected character &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UnexpectedCharacter {
            get {
                return ResourceManager.GetString("ERR_UnexpectedCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected preprocessor directive.
        /// </summary>
        internal static string ERR_UnexpectedDirective {
            get {
                return ResourceManager.GetString("ERR_UnexpectedDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected use of a generic name.
        /// </summary>
        internal static string ERR_UnexpectedGenericName {
            get {
                return ResourceManager.GetString("ERR_UnexpectedGenericName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semicolon after method or accessor block is not valid.
        /// </summary>
        internal static string ERR_UnexpectedSemicolon {
            get {
                return ResourceManager.GetString("ERR_UnexpectedSemicolon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected token &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UnexpectedToken {
            get {
                return ResourceManager.GetString("ERR_UnexpectedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected use of an unbound generic name.
        /// </summary>
        internal static string ERR_UnexpectedUnboundGenericName {
            get {
                return ResourceManager.GetString("ERR_UnexpectedUnboundGenericName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid variance: The type parameter &apos;{1}&apos; must be {3} valid on &apos;{0}&apos;. &apos;{1}&apos; is {2}..
        /// </summary>
        internal static string ERR_UnexpectedVariance {
            get {
                return ResourceManager.GetString("ERR_UnexpectedVariance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot implement both &apos;{1}&apos; and &apos;{2}&apos; because they may unify for some type parameter substitutions.
        /// </summary>
        internal static string ERR_UnifyingInterfaceInstantiations {
            get {
                return ResourceManager.GetString("ERR_UnifyingInterfaceInstantiations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement inherited abstract member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_UnimplementedAbstractMethod {
            get {
                return ResourceManager.GetString("ERR_UnimplementedAbstractMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;. &apos;{2}&apos; is not public..
        /// </summary>
        internal static string ERR_UnimplementedInterfaceAccessor {
            get {
                return ResourceManager.GetString("ERR_UnimplementedInterfaceAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement interface member &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_UnimplementedInterfaceMember {
            get {
                return ResourceManager.GetString("ERR_UnimplementedInterfaceMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous catch clause already catches all exceptions of this or of a super type (&apos;{0}&apos;).
        /// </summary>
        internal static string ERR_UnreachableCatch {
            get {
                return ResourceManager.GetString("ERR_UnreachableCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async methods cannot have unsafe parameters or return types.
        /// </summary>
        internal static string ERR_UnsafeAsyncArgType {
            get {
                return ResourceManager.GetString("ERR_UnsafeAsyncArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iterators cannot have unsafe parameters or yield types.
        /// </summary>
        internal static string ERR_UnsafeIteratorArgType {
            get {
                return ResourceManager.GetString("ERR_UnsafeIteratorArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointers and fixed size buffers may only be used in an unsafe context.
        /// </summary>
        internal static string ERR_UnsafeNeeded {
            get {
                return ResourceManager.GetString("ERR_UnsafeNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsafe type &apos;{0}&apos; cannot be used in object creation.
        /// </summary>
        internal static string ERR_UnsafeTypeInObjectCreation {
            get {
                return ResourceManager.GetString("ERR_UnsafeTypeInObjectCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transparent identifier member access failed for field &apos;{0}&apos; of &apos;{1}&apos;.  Does the data being queried implement the query pattern?.
        /// </summary>
        internal static string ERR_UnsupportedTransparentIdentifierAccess {
            get {
                return ResourceManager.GetString("ERR_UnsupportedTransparentIdentifierAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unterminated string literal.
        /// </summary>
        internal static string ERR_UnterminatedStringLit {
            get {
                return ResourceManager.GetString("ERR_UnterminatedStringLit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of unassigned local variable &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UseDefViolation {
            get {
                return ResourceManager.GetString("ERR_UseDefViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of possibly unassigned field &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UseDefViolationField {
            get {
                return ResourceManager.GetString("ERR_UseDefViolationField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of unassigned out parameter &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UseDefViolationOut {
            get {
                return ResourceManager.GetString("ERR_UseDefViolationOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of possibly unassigned auto-implemented property &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_UseDefViolationProperty {
            get {
                return ResourceManager.GetString("ERR_UseDefViolationProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;this&apos; object cannot be used before all of its fields are assigned to.
        /// </summary>
        internal static string ERR_UseDefViolationThis {
            get {
                return ResourceManager.GetString("ERR_UseDefViolationThis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A using clause must precede all other elements defined in the namespace except extern alias declarations.
        /// </summary>
        internal static string ERR_UsingAfterElements {
            get {
                return ResourceManager.GetString("ERR_UsingAfterElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A switch expression or case label must be a bool, char, string, integral, enum, or corresponding nullable type in C# 6 and earlier..
        /// </summary>
        internal static string ERR_V6SwitchGoverningTypeValueExpected {
            get {
                return ResourceManager.GetString("ERR_V6SwitchGoverningTypeValueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{2}&apos; must be a non-nullable value type in order to use it as parameter &apos;{1}&apos; in the generic type or method &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_ValConstraintNotSatisfied {
            get {
                return ResourceManager.GetString("ERR_ValConstraintNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert null to &apos;{0}&apos; because it is a non-nullable value type.
        /// </summary>
        internal static string ERR_ValueCantBeNull {
            get {
                return ResourceManager.GetString("ERR_ValueCantBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error; value expected.
        /// </summary>
        internal static string ERR_ValueExpected {
            get {
                return ResourceManager.GetString("ERR_ValueExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension method &apos;{0}&apos; defined on value type &apos;{1}&apos; cannot be used to create delegates.
        /// </summary>
        internal static string ERR_ValueTypeExtDelegate {
            get {
                return ResourceManager.GetString("ERR_ValueTypeExtDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members of property &apos;{0}&apos; of type &apos;{1}&apos; cannot be assigned with an object initializer because it is of a value type.
        /// </summary>
        internal static string ERR_ValueTypePropertyInObjectInitializer {
            get {
                return ResourceManager.GetString("ERR_ValueTypePropertyInObjectInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __arglist is not allowed in the parameter list of async methods.
        /// </summary>
        internal static string ERR_VarargsAsync {
            get {
                return ResourceManager.GetString("ERR_VarargsAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An expression tree lambda may not contain a method with variable arguments.
        /// </summary>
        internal static string ERR_VarArgsInExpressionTree {
            get {
                return ResourceManager.GetString("ERR_VarArgsInExpressionTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __arglist is not allowed in the parameter list of iterators.
        /// </summary>
        internal static string ERR_VarargsIterator {
            get {
                return ResourceManager.GetString("ERR_VarargsIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An __arglist parameter must be the last parameter in a formal parameter list.
        /// </summary>
        internal static string ERR_VarargsLast {
            get {
                return ResourceManager.GetString("ERR_VarargsLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot declare a variable of static type &apos;{0}&apos;.
        /// </summary>
        internal static string ERR_VarDeclIsStaticClass {
            get {
                return ResourceManager.GetString("ERR_VarDeclIsStaticClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use local variable &apos;{0}&apos; before it is declared.
        /// </summary>
        internal static string ERR_VariableUsedBeforeDeclaration {
            get {
                return ResourceManager.GetString("ERR_VariableUsedBeforeDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use local variable &apos;{0}&apos; before it is declared. The declaration of the local variable hides the field &apos;{1}&apos;..
        /// </summary>
        internal static string ERR_VariableUsedBeforeDeclarationAndHidesField {
            get {
                return ResourceManager.GetString("ERR_VariableUsedBeforeDeclarationAndHidesField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The syntax &apos;var (...)&apos; as an lvalue is reserved..
        /// </summary>
        internal static string ERR_VarInvocationLvalueReserved {
            get {
                return ResourceManager.GetString("ERR_VarInvocationLvalueReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: virtual or abstract members cannot be private.
        /// </summary>
        internal static string ERR_VirtualPrivate {
            get {
                return ResourceManager.GetString("ERR_VirtualPrivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of type &apos;void&apos; may not be assigned..
        /// </summary>
        internal static string ERR_VoidAssignment {
            get {
                return ResourceManager.GetString("ERR_VoidAssignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation in question is undefined on void pointers.
        /// </summary>
        internal static string ERR_VoidError {
            get {
                return ResourceManager.GetString("ERR_VoidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tuple may not contain a value of type &apos;void&apos;..
        /// </summary>
        internal static string ERR_VoidInTuple {
            get {
                return ResourceManager.GetString("ERR_VoidInTuple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a field cannot be both volatile and readonly.
        /// </summary>
        internal static string ERR_VolatileAndReadonly {
            get {
                return ResourceManager.GetString("ERR_VolatileAndReadonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a volatile field cannot be of the type &apos;{1}&apos;.
        /// </summary>
        internal static string ERR_VolatileStruct {
            get {
                return ResourceManager.GetString("ERR_VolatileStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows Runtime event may not be passed as an out or ref parameter..
        /// </summary>
        internal static string ERR_WinRtEventPassedByRef {
            get {
                return ResourceManager.GetString("ERR_WinRtEventPassedByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The yield statement cannot be used inside an anonymous method or lambda expression.
        /// </summary>
        internal static string ERR_YieldInAnonMeth {
            get {
                return ResourceManager.GetString("ERR_YieldInAnonMeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;yield&apos; in top-level script code.
        /// </summary>
        internal static string ERR_YieldNotAllowedInScript {
            get {
                return ResourceManager.GetString("ERR_YieldNotAllowedInScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algorithm &apos;{0}&apos; is not supported.
        /// </summary>
        internal static string FTL_BadChecksumAlgorithm {
            get {
                return ResourceManager.GetString("FTL_BadChecksumAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code page &apos;{0}&apos; is invalid or not installed.
        /// </summary>
        internal static string FTL_BadCodepage {
            get {
                return ResourceManager.GetString("FTL_BadCodepage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error writing debug information -- &apos;{0}&apos;.
        /// </summary>
        internal static string FTL_DebugEmitFailure {
            get {
                return ResourceManager.GetString("FTL_DebugEmitFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name &apos;{0}&apos; is empty, contains invalid characters, has a drive specification without an absolute path, or is too long.
        /// </summary>
        internal static string FTL_InputFileNameTooLong {
            get {
                return ResourceManager.GetString("FTL_InputFileNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid target type for /target: must specify &apos;exe&apos;, &apos;winexe&apos;, &apos;library&apos;, or &apos;module&apos;.
        /// </summary>
        internal static string FTL_InvalidTarget {
            get {
                return ResourceManager.GetString("FTL_InvalidTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata file &apos;{0}&apos; could not be opened -- {1}.
        /// </summary>
        internal static string FTL_MetadataCantOpenFile {
            get {
                return ResourceManager.GetString("FTL_MetadataCantOpenFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create short filename &apos;{0}&apos; when a long filename with the same short filename already exists.
        /// </summary>
        internal static string FTL_OutputFileExists {
            get {
                return ResourceManager.GetString("FTL_OutputFileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic parameter is definition when expected to be reference {0}.
        /// </summary>
        internal static string GenericParameterDefinition {
            get {
                return ResourceManager.GetString("GenericParameterDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unused extern alias..
        /// </summary>
        internal static string HDN_UnusedExternAlias {
            get {
                return ResourceManager.GetString("HDN_UnusedExternAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unused extern alias.
        /// </summary>
        internal static string HDN_UnusedExternAlias_Title {
            get {
                return ResourceManager.GetString("HDN_UnusedExternAlias_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unnecessary using directive..
        /// </summary>
        internal static string HDN_UnusedUsingDirective {
            get {
                return ResourceManager.GetString("HDN_UnusedUsingDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unnecessary using directive.
        /// </summary>
        internal static string HDN_UnusedUsingDirective_Title {
            get {
                return ResourceManager.GetString("HDN_UnusedUsingDirective_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to anonymous method.
        /// </summary>
        internal static string IDS_AnonMethod {
            get {
                return ResourceManager.GetString("IDS_AnonMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to await in catch blocks and finally blocks.
        /// </summary>
        internal static string IDS_AwaitInCatchAndFinally {
            get {
                return ResourceManager.GetString("IDS_AwaitInCatchAndFinally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to collection.
        /// </summary>
        internal static string IDS_Collection {
            get {
                return ResourceManager.GetString("IDS_Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to contravariant.
        /// </summary>
        internal static string IDS_Contravariant {
            get {
                return ResourceManager.GetString("IDS_Contravariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to contravariantly.
        /// </summary>
        internal static string IDS_Contravariantly {
            get {
                return ResourceManager.GetString("IDS_Contravariantly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to covariant.
        /// </summary>
        internal static string IDS_Covariant {
            get {
                return ResourceManager.GetString("IDS_Covariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to covariantly.
        /// </summary>
        internal static string IDS_Covariantly {
            get {
                return ResourceManager.GetString("IDS_Covariantly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///                              Visual C# Compiler Options
        ///
        ///                        - OUTPUT FILES -
        /// /out:&lt;file&gt;                   Specify output file name (default: base name of
        ///                               file with main class or first file)
        /// /target:exe                   Build a console executable (default) (Short
        ///                               form: /t:exe)
        /// /target:winexe                Build a Windows executable (Short form:
        ///                               /t:winexe)
        /// /target:library        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IDS_CSCHelp {
            get {
                return ResourceManager.GetString("IDS_CSCHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory does not exist.
        /// </summary>
        internal static string IDS_DirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("IDS_DirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to path is too long or invalid.
        /// </summary>
        internal static string IDS_DirectoryHasInvalidPath {
            get {
                return ResourceManager.GetString("IDS_DirectoryHasInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to anonymous methods.
        /// </summary>
        internal static string IDS_FeatureAnonDelegates {
            get {
                return ResourceManager.GetString("IDS_FeatureAnonDelegates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to anonymous types.
        /// </summary>
        internal static string IDS_FeatureAnonymousTypes {
            get {
                return ResourceManager.GetString("IDS_FeatureAnonymousTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to async function.
        /// </summary>
        internal static string IDS_FeatureAsync {
            get {
                return ResourceManager.GetString("IDS_FeatureAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to async main.
        /// </summary>
        internal static string IDS_FeatureAsyncMain {
            get {
                return ResourceManager.GetString("IDS_FeatureAsyncMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to automatically implemented properties.
        /// </summary>
        internal static string IDS_FeatureAutoImplementedProperties {
            get {
                return ResourceManager.GetString("IDS_FeatureAutoImplementedProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to auto property initializer.
        /// </summary>
        internal static string IDS_FeatureAutoPropertyInitializer {
            get {
                return ResourceManager.GetString("IDS_FeatureAutoPropertyInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to binary literals.
        /// </summary>
        internal static string IDS_FeatureBinaryLiteral {
            get {
                return ResourceManager.GetString("IDS_FeatureBinaryLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to collection initializer.
        /// </summary>
        internal static string IDS_FeatureCollectionInitializer {
            get {
                return ResourceManager.GetString("IDS_FeatureCollectionInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default operator.
        /// </summary>
        internal static string IDS_FeatureDefault {
            get {
                return ResourceManager.GetString("IDS_FeatureDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to default literal.
        /// </summary>
        internal static string IDS_FeatureDefaultLiteral {
            get {
                return ResourceManager.GetString("IDS_FeatureDefaultLiteral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dictionary initializer.
        /// </summary>
        internal static string IDS_FeatureDictionaryInitializer {
            get {
                return ResourceManager.GetString("IDS_FeatureDictionaryInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to digit separators.
        /// </summary>
        internal static string IDS_FeatureDigitSeparator {
            get {
                return ResourceManager.GetString("IDS_FeatureDigitSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dynamic.
        /// </summary>
        internal static string IDS_FeatureDynamic {
            get {
                return ResourceManager.GetString("IDS_FeatureDynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to exception filter.
        /// </summary>
        internal static string IDS_FeatureExceptionFilter {
            get {
                return ResourceManager.GetString("IDS_FeatureExceptionFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expression body property accessor.
        /// </summary>
        internal static string IDS_FeatureExpressionBodiedAccessor {
            get {
                return ResourceManager.GetString("IDS_FeatureExpressionBodiedAccessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expression body constructor and destructor.
        /// </summary>
        internal static string IDS_FeatureExpressionBodiedDeOrConstructor {
            get {
                return ResourceManager.GetString("IDS_FeatureExpressionBodiedDeOrConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expression-bodied indexer.
        /// </summary>
        internal static string IDS_FeatureExpressionBodiedIndexer {
            get {
                return ResourceManager.GetString("IDS_FeatureExpressionBodiedIndexer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expression-bodied method.
        /// </summary>
        internal static string IDS_FeatureExpressionBodiedMethod {
            get {
                return ResourceManager.GetString("IDS_FeatureExpressionBodiedMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expression-bodied property.
        /// </summary>
        internal static string IDS_FeatureExpressionBodiedProperty {
            get {
                return ResourceManager.GetString("IDS_FeatureExpressionBodiedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to extension method.
        /// </summary>
        internal static string IDS_FeatureExtensionMethod {
            get {
                return ResourceManager.GetString("IDS_FeatureExtensionMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to extern alias.
        /// </summary>
        internal static string IDS_FeatureExternAlias {
            get {
                return ResourceManager.GetString("IDS_FeatureExternAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fixed size buffers.
        /// </summary>
        internal static string IDS_FeatureFixedBuffer {
            get {
                return ResourceManager.GetString("IDS_FeatureFixedBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to generics.
        /// </summary>
        internal static string IDS_FeatureGenerics {
            get {
                return ResourceManager.GetString("IDS_FeatureGenerics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace alias qualifier.
        /// </summary>
        internal static string IDS_FeatureGlobalNamespace {
            get {
                return ResourceManager.GetString("IDS_FeatureGlobalNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to implicitly typed array.
        /// </summary>
        internal static string IDS_FeatureImplicitArray {
            get {
                return ResourceManager.GetString("IDS_FeatureImplicitArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to implicitly typed local variable.
        /// </summary>
        internal static string IDS_FeatureImplicitLocal {
            get {
                return ResourceManager.GetString("IDS_FeatureImplicitLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to interpolated strings.
        /// </summary>
        internal static string IDS_FeatureInterpolatedStrings {
            get {
                return ResourceManager.GetString("IDS_FeatureInterpolatedStrings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to iterators.
        /// </summary>
        internal static string IDS_FeatureIterators {
            get {
                return ResourceManager.GetString("IDS_FeatureIterators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to lambda expression.
        /// </summary>
        internal static string IDS_FeatureLambda {
            get {
                return ResourceManager.GetString("IDS_FeatureLambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to local functions.
        /// </summary>
        internal static string IDS_FeatureLocalFunctions {
            get {
                return ResourceManager.GetString("IDS_FeatureLocalFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to module as an attribute target specifier.
        /// </summary>
        internal static string IDS_FeatureModuleAttrLoc {
            get {
                return ResourceManager.GetString("IDS_FeatureModuleAttrLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to named argument.
        /// </summary>
        internal static string IDS_FeatureNamedArgument {
            get {
                return ResourceManager.GetString("IDS_FeatureNamedArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nameof operator.
        /// </summary>
        internal static string IDS_FeatureNameof {
            get {
                return ResourceManager.GetString("IDS_FeatureNameof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nullable types.
        /// </summary>
        internal static string IDS_FeatureNullable {
            get {
                return ResourceManager.GetString("IDS_FeatureNullable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to null propagating operator.
        /// </summary>
        internal static string IDS_FeatureNullPropagatingOperator {
            get {
                return ResourceManager.GetString("IDS_FeatureNullPropagatingOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to object initializer.
        /// </summary>
        internal static string IDS_FeatureObjectInitializer {
            get {
                return ResourceManager.GetString("IDS_FeatureObjectInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to optional parameter.
        /// </summary>
        internal static string IDS_FeatureOptionalParameter {
            get {
                return ResourceManager.GetString("IDS_FeatureOptionalParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to out variable declaration.
        /// </summary>
        internal static string IDS_FeatureOutVar {
            get {
                return ResourceManager.GetString("IDS_FeatureOutVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to partial method.
        /// </summary>
        internal static string IDS_FeaturePartialMethod {
            get {
                return ResourceManager.GetString("IDS_FeaturePartialMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to partial types.
        /// </summary>
        internal static string IDS_FeaturePartialTypes {
            get {
                return ResourceManager.GetString("IDS_FeaturePartialTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pattern matching.
        /// </summary>
        internal static string IDS_FeaturePatternMatching {
            get {
                return ResourceManager.GetString("IDS_FeaturePatternMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma.
        /// </summary>
        internal static string IDS_FeaturePragma {
            get {
                return ResourceManager.GetString("IDS_FeaturePragma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to access modifiers on properties.
        /// </summary>
        internal static string IDS_FeaturePropertyAccessorMods {
            get {
                return ResourceManager.GetString("IDS_FeaturePropertyAccessorMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to query expression.
        /// </summary>
        internal static string IDS_FeatureQueryExpression {
            get {
                return ResourceManager.GetString("IDS_FeatureQueryExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to readonly automatically implemented properties.
        /// </summary>
        internal static string IDS_FeatureReadonlyAutoImplementedProperties {
            get {
                return ResourceManager.GetString("IDS_FeatureReadonlyAutoImplementedProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to byref locals and returns.
        /// </summary>
        internal static string IDS_FeatureRefLocalsReturns {
            get {
                return ResourceManager.GetString("IDS_FeatureRefLocalsReturns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to static classes.
        /// </summary>
        internal static string IDS_FeatureStaticClasses {
            get {
                return ResourceManager.GetString("IDS_FeatureStaticClasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to switch on boolean type.
        /// </summary>
        internal static string IDS_FeatureSwitchOnBool {
            get {
                return ResourceManager.GetString("IDS_FeatureSwitchOnBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to throw expression.
        /// </summary>
        internal static string IDS_FeatureThrowExpression {
            get {
                return ResourceManager.GetString("IDS_FeatureThrowExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tuples.
        /// </summary>
        internal static string IDS_FeatureTuples {
            get {
                return ResourceManager.GetString("IDS_FeatureTuples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type variance.
        /// </summary>
        internal static string IDS_FeatureTypeVariance {
            get {
                return ResourceManager.GetString("IDS_FeatureTypeVariance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using static.
        /// </summary>
        internal static string IDS_FeatureUsingStatic {
            get {
                return ResourceManager.GetString("IDS_FeatureUsingStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fixed variable.
        /// </summary>
        internal static string IDS_FIXEDLOCAL {
            get {
                return ResourceManager.GetString("IDS_FIXEDLOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreach iteration variable.
        /// </summary>
        internal static string IDS_FOREACHLOCAL {
            get {
                return ResourceManager.GetString("IDS_FOREACHLOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;global namespace&gt;.
        /// </summary>
        internal static string IDS_GlobalNamespace {
            get {
                return ResourceManager.GetString("IDS_GlobalNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to invariantly.
        /// </summary>
        internal static string IDS_Invariantly {
            get {
                return ResourceManager.GetString("IDS_Invariantly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to lambda expression.
        /// </summary>
        internal static string IDS_Lambda {
            get {
                return ResourceManager.GetString("IDS_Lambda", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LIB environment variable.
        /// </summary>
        internal static string IDS_LIB_ENV {
            get {
                return ResourceManager.GetString("IDS_LIB_ENV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /LIB option.
        /// </summary>
        internal static string IDS_LIB_OPTION {
            get {
                return ResourceManager.GetString("IDS_LIB_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} version {1}.
        /// </summary>
        internal static string IDS_LogoLine1 {
            get {
                return ResourceManager.GetString("IDS_LogoLine1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (C) Microsoft Corporation. All rights reserved..
        /// </summary>
        internal static string IDS_LogoLine2 {
            get {
                return ResourceManager.GetString("IDS_LogoLine2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to method group.
        /// </summary>
        internal static string IDS_MethodGroup {
            get {
                return ResourceManager.GetString("IDS_MethodGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;namespace&gt;.
        /// </summary>
        internal static string IDS_Namespace1 {
            get {
                return ResourceManager.GetString("IDS_Namespace1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;null&gt;.
        /// </summary>
        internal static string IDS_NULL {
            get {
                return ResourceManager.GetString("IDS_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation caused a stack overflow..
        /// </summary>
        internal static string IDS_OperationCausedStackOverflow {
            get {
                return ResourceManager.GetString("IDS_OperationCausedStackOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path list&gt;.
        /// </summary>
        internal static string IDS_PathList {
            get {
                return ResourceManager.GetString("IDS_PathList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /REFERENCEPATH option.
        /// </summary>
        internal static string IDS_REFERENCEPATH_OPTION {
            get {
                return ResourceManager.GetString("IDS_REFERENCEPATH_OPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Location of symbol related to previous error).
        /// </summary>
        internal static string IDS_RELATEDERROR {
            get {
                return ResourceManager.GetString("IDS_RELATEDERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Location of symbol related to previous warning).
        /// </summary>
        internal static string IDS_RELATEDWARNING {
            get {
                return ResourceManager.GetString("IDS_RELATEDWARNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using alias.
        /// </summary>
        internal static string IDS_SK_ALIAS {
            get {
                return ResourceManager.GetString("IDS_SK_ALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to event.
        /// </summary>
        internal static string IDS_SK_EVENT {
            get {
                return ResourceManager.GetString("IDS_SK_EVENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to extern alias.
        /// </summary>
        internal static string IDS_SK_EXTERNALIAS {
            get {
                return ResourceManager.GetString("IDS_SK_EXTERNALIAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to field.
        /// </summary>
        internal static string IDS_SK_FIELD {
            get {
                return ResourceManager.GetString("IDS_SK_FIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to label.
        /// </summary>
        internal static string IDS_SK_LABEL {
            get {
                return ResourceManager.GetString("IDS_SK_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to method.
        /// </summary>
        internal static string IDS_SK_METHOD {
            get {
                return ResourceManager.GetString("IDS_SK_METHOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace.
        /// </summary>
        internal static string IDS_SK_NAMESPACE {
            get {
                return ResourceManager.GetString("IDS_SK_NAMESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to property.
        /// </summary>
        internal static string IDS_SK_PROPERTY {
            get {
                return ResourceManager.GetString("IDS_SK_PROPERTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type.
        /// </summary>
        internal static string IDS_SK_TYPE {
            get {
                return ResourceManager.GetString("IDS_SK_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type parameter.
        /// </summary>
        internal static string IDS_SK_TYVAR {
            get {
                return ResourceManager.GetString("IDS_SK_TYVAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to element.
        /// </summary>
        internal static string IDS_SK_UNKNOWN {
            get {
                return ResourceManager.GetString("IDS_SK_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to variable.
        /// </summary>
        internal static string IDS_SK_VARIABLE {
            get {
                return ResourceManager.GetString("IDS_SK_VARIABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;text&gt;.
        /// </summary>
        internal static string IDS_Text {
            get {
                return ResourceManager.GetString("IDS_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;throw expression&gt;.
        /// </summary>
        internal static string IDS_ThrowExpression {
            get {
                return ResourceManager.GetString("IDS_ThrowExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft (R) Visual C# Compiler.
        /// </summary>
        internal static string IDS_ToolName {
            get {
                return ResourceManager.GetString("IDS_ToolName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using variable.
        /// </summary>
        internal static string IDS_USINGLOCAL {
            get {
                return ResourceManager.GetString("IDS_USINGLOCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;experimental&apos;.
        /// </summary>
        internal static string IDS_VersionExperimental {
            get {
                return ResourceManager.GetString("IDS_VersionExperimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Include tag is invalid .
        /// </summary>
        internal static string IDS_XMLBADINCLUDE {
            get {
                return ResourceManager.GetString("IDS_XMLBADINCLUDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Failed to insert some or all of included XML .
        /// </summary>
        internal static string IDS_XMLFAILEDINCLUDE {
            get {
                return ResourceManager.GetString("IDS_XMLFAILEDINCLUDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!-- Badly formed XML comment ignored for member &quot;{0}&quot; --&gt;.
        /// </summary>
        internal static string IDS_XMLIGNORED {
            get {
                return ResourceManager.GetString("IDS_XMLIGNORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Badly formed XML file &quot;{0}&quot; cannot be included .
        /// </summary>
        internal static string IDS_XMLIGNORED2 {
            get {
                return ResourceManager.GetString("IDS_XMLIGNORED2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing file attribute.
        /// </summary>
        internal static string IDS_XMLMISSINGINCLUDEFILE {
            get {
                return ResourceManager.GetString("IDS_XMLMISSINGINCLUDEFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing path attribute.
        /// </summary>
        internal static string IDS_XMLMISSINGINCLUDEPATH {
            get {
                return ResourceManager.GetString("IDS_XMLMISSINGINCLUDEPATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No matching elements were found for the following include tag .
        /// </summary>
        internal static string IDS_XMLNOINCLUDE {
            get {
                return ResourceManager.GetString("IDS_XMLNOINCLUDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping some types in analyzer assembly {0} due to a ReflectionTypeLoadException : {1}..
        /// </summary>
        internal static string INF_UnableToLoadSomeTypesInAnalyzer {
            get {
                return ResourceManager.GetString("INF_UnableToLoadSomeTypesInAnalyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip loading types in analyzer assembly that fail due to a ReflectionTypeLoadException.
        /// </summary>
        internal static string INF_UnableToLoadSomeTypesInAnalyzer_Title {
            get {
                return ResourceManager.GetString("INF_UnableToLoadSomeTypesInAnalyzer_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Called GetDeclarationName for a declaration node that can possibly contain multiple variable declarators..
        /// </summary>
        internal static string InvalidGetDeclarationNameMultipleDeclarators {
            get {
                return ResourceManager.GetString("InvalidGetDeclarationNameMultipleDeclarators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to items: must be non-empty.
        /// </summary>
        internal static string ItemsMustBeNonEmpty {
            get {
                return ResourceManager.GetString("ItemsMustBeNonEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location must be provided in order to provide minimal type qualification..
        /// </summary>
        internal static string LocationMustBeProvided {
            get {
                return ResourceManager.GetString("LocationMustBeProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LookupOptions has an invalid combination of options.
        /// </summary>
        internal static string LookupOptionsHasInvalidCombo {
            get {
                return ResourceManager.GetString("LookupOptionsHasInvalidCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name conflict for name {0}.
        /// </summary>
        internal static string NameConflictForName {
            get {
                return ResourceManager.GetString("NameConflictForName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchCriteria is expected..
        /// </summary>
        internal static string NoNoneSearchCriteria {
            get {
                return ResourceManager.GetString("NoNoneSearchCriteria", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a C# symbol..
        /// </summary>
        internal static string NotACSharpSymbol {
            get {
                return ResourceManager.GetString("NotACSharpSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position is not within syntax tree with full span {0}.
        /// </summary>
        internal static string PositionIsNotWithinSyntax {
            get {
                return ResourceManager.GetString("PositionIsNotWithinSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position must be within span of the syntax tree..
        /// </summary>
        internal static string PositionNotWithinTree {
            get {
                return ResourceManager.GetString("PositionNotWithinTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax node to be speculated cannot belong to a syntax tree from the current compilation..
        /// </summary>
        internal static string SpeculatedSyntaxNodeCannotBelongToCurrentCompilation {
            get {
                return ResourceManager.GetString("SpeculatedSyntaxNodeCannotBelongToCurrentCompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submission can have at most one syntax tree..
        /// </summary>
        internal static string SubmissionCanHaveAtMostOne {
            get {
                return ResourceManager.GetString("SubmissionCanHaveAtMostOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submission can only include script code..
        /// </summary>
        internal static string SubmissionCanOnlyInclude {
            get {
                return ResourceManager.GetString("SubmissionCanOnlyInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax node is not within syntax tree.
        /// </summary>
        internal static string SyntaxNodeIsNotWithinSynt {
            get {
                return ResourceManager.GetString("SyntaxNodeIsNotWithinSynt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax tree already present.
        /// </summary>
        internal static string SyntaxTreeAlreadyPresent {
            get {
                return ResourceManager.GetString("SyntaxTreeAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyntaxTree &apos;{0}&apos; resulted from a #load directive and cannot be removed or replaced directly..
        /// </summary>
        internal static string SyntaxTreeFromLoadNoRemoveReplace {
            get {
                return ResourceManager.GetString("SyntaxTreeFromLoadNoRemoveReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax tree should be created from a submission..
        /// </summary>
        internal static string SyntaxTreeIsNotASubmission {
            get {
                return ResourceManager.GetString("SyntaxTreeIsNotASubmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyntaxTree &apos;{0}&apos; not found to remove.
        /// </summary>
        internal static string SyntaxTreeNotFoundTo {
            get {
                return ResourceManager.GetString("SyntaxTreeNotFoundTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SyntaxTreeSemanticModel must be provided in order to provide minimal type qualification..
        /// </summary>
        internal static string SyntaxTreeSemanticModelMust {
            get {
                return ResourceManager.GetString("SyntaxTreeSemanticModelMust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method can only be used to create tokens - {0} is not a token kind..
        /// </summary>
        internal static string ThisMethodCanOnlyBeUsedToCreateTokens {
            get {
                return ResourceManager.GetString("ThisMethodCanOnlyBeUsedToCreateTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tree must have a root node with SyntaxKind.CompilationUnit.
        /// </summary>
        internal static string TreeMustHaveARootNodeWith {
            get {
                return ResourceManager.GetString("TreeMustHaveARootNodeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to tree not part of compilation.
        /// </summary>
        internal static string TreeNotPartOfCompilation {
            get {
                return ResourceManager.GetString("TreeNotPartOfCompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type argument cannot be null.
        /// </summary>
        internal static string TypeArgumentCannotBeNull {
            get {
                return ResourceManager.GetString("TypeArgumentCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type must be &apos;var&apos;..
        /// </summary>
        internal static string TypeMustBeVar {
            get {
                return ResourceManager.GetString("TypeMustBeVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal to create numeric literal tokens..
        /// </summary>
        internal static string UseLiteralForNumeric {
            get {
                return ResourceManager.GetString("UseLiteralForNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal to create character literal tokens..
        /// </summary>
        internal static string UseLiteralForTokens {
            get {
                return ResourceManager.GetString("UseLiteralForTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Identifier or Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VerbatimIdentifier to create identifier tokens..
        /// </summary>
        internal static string UseVerbatimIdentifier {
            get {
                return ResourceManager.GetString("UseVerbatimIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment value {0} has a magnitude greater than {1} and may result in a large formatted string..
        /// </summary>
        internal static string WRN_AlignmentMagnitude {
            get {
                return ResourceManager.GetString("WRN_AlignmentMagnitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment value has a magnitude that may result in a large formatted string.
        /// </summary>
        internal static string WRN_AlignmentMagnitude_Title {
            get {
                return ResourceManager.GetString("WRN_AlignmentMagnitude_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always &apos;null&apos; of type &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_AlwaysNull {
            get {
                return ResourceManager.GetString("WRN_AlwaysNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always &apos;null&apos;.
        /// </summary>
        internal static string WRN_AlwaysNull_Title {
            get {
                return ResourceManager.GetString("WRN_AlwaysNull_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous reference in cref attribute: &apos;{0}&apos;. Assuming &apos;{1}&apos;, but could have also matched other overloads including &apos;{2}&apos;..
        /// </summary>
        internal static string WRN_AmbiguousXMLReference {
            get {
                return ResourceManager.GetString("WRN_AmbiguousXMLReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous reference in cref attribute.
        /// </summary>
        internal static string WRN_AmbiguousXMLReference_Title {
            get {
                return ResourceManager.GetString("WRN_AmbiguousXMLReference_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of analyzer {0} cannot be created from {1} : {2}..
        /// </summary>
        internal static string WRN_AnalyzerCannotBeCreated {
            get {
                return ResourceManager.GetString("WRN_AnalyzerCannotBeCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An analyzer instance cannot be created.
        /// </summary>
        internal static string WRN_AnalyzerCannotBeCreated_Title {
            get {
                return ResourceManager.GetString("WRN_AnalyzerCannotBeCreated_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; from module &apos;{1}&apos; will be ignored in favor of the instance appearing in source.
        /// </summary>
        internal static string WRN_AssemblyAttributeFromModuleIsOverridden {
            get {
                return ResourceManager.GetString("WRN_AssemblyAttributeFromModuleIsOverridden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute will be ignored in favor of the instance appearing in source.
        /// </summary>
        internal static string WRN_AssemblyAttributeFromModuleIsOverridden_Title {
            get {
                return ResourceManager.GetString("WRN_AssemblyAttributeFromModuleIsOverridden_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possibly incorrect assignment to local &apos;{0}&apos; which is the argument to a using or lock statement. The Dispose call or unlocking will happen on the original value of the local..
        /// </summary>
        internal static string WRN_AssignmentToLockOrDispose {
            get {
                return ResourceManager.GetString("WRN_AssignmentToLockOrDispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possibly incorrect assignment to local which is the argument to a using or lock statement.
        /// </summary>
        internal static string WRN_AssignmentToLockOrDispose_Title {
            get {
                return ResourceManager.GetString("WRN_AssignmentToLockOrDispose_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment made to same variable; did you mean to assign something else?.
        /// </summary>
        internal static string WRN_AssignmentToSelf {
            get {
                return ResourceManager.GetString("WRN_AssignmentToSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment made to same variable.
        /// </summary>
        internal static string WRN_AssignmentToSelf_Title {
            get {
                return ResourceManager.GetString("WRN_AssignmentToSelf_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This async method lacks &apos;await&apos; operators and will run synchronously. Consider using the &apos;await&apos; operator to await non-blocking API calls, or &apos;await Task.Run(...)&apos; to do CPU-bound work on a background thread..
        /// </summary>
        internal static string WRN_AsyncLacksAwaits {
            get {
                return ResourceManager.GetString("WRN_AsyncLacksAwaits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async method lacks &apos;await&apos; operators and will run synchronously.
        /// </summary>
        internal static string WRN_AsyncLacksAwaits_Title {
            get {
                return ResourceManager.GetString("WRN_AsyncLacksAwaits_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute &apos;{0}&apos; is ignored when public signing is specified..
        /// </summary>
        internal static string WRN_AttributeIgnoredWhenPublicSigning {
            get {
                return ResourceManager.GetString("WRN_AttributeIgnoredWhenPublicSigning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute is ignored when public signing is specified..
        /// </summary>
        internal static string WRN_AttributeIgnoredWhenPublicSigning_Title {
            get {
                return ResourceManager.GetString("WRN_AttributeIgnoredWhenPublicSigning_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid attribute location for this declaration. Valid attribute locations for this declaration are &apos;{1}&apos;. All attributes in this block will be ignored..
        /// </summary>
        internal static string WRN_AttributeLocationOnBadDeclaration {
            get {
                return ResourceManager.GetString("WRN_AttributeLocationOnBadDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a valid attribute location for this declaration.
        /// </summary>
        internal static string WRN_AttributeLocationOnBadDeclaration_Title {
            get {
                return ResourceManager.GetString("WRN_AttributeLocationOnBadDeclaration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; to get a value comparison, cast the left hand side to type &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_BadRefCompareLeft {
            get {
                return ResourceManager.GetString("WRN_BadRefCompareLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; left hand side needs cast.
        /// </summary>
        internal static string WRN_BadRefCompareLeft_Title {
            get {
                return ResourceManager.GetString("WRN_BadRefCompareLeft_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; to get a value comparison, cast the right hand side to type &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_BadRefCompareRight {
            get {
                return ResourceManager.GetString("WRN_BadRefCompareRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible unintended reference comparison; right hand side needs cast.
        /// </summary>
        internal static string WRN_BadRefCompareRight_Title {
            get {
                return ResourceManager.GetString("WRN_BadRefCompareRight_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot restore warning &apos;CS{0}&apos; because it was disabled globally.
        /// </summary>
        internal static string WRN_BadRestoreNumber {
            get {
                return ResourceManager.GetString("WRN_BadRestoreNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot restore warning because it was disabled globally.
        /// </summary>
        internal static string WRN_BadRestoreNumber_Title {
            get {
                return ResourceManager.GetString("WRN_BadRestoreNumber_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language name &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string WRN_BadUILang {
            get {
                return ResourceManager.GetString("WRN_BadUILang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language name is invalid.
        /// </summary>
        internal static string WRN_BadUILang_Title {
            get {
                return ResourceManager.GetString("WRN_BadUILang_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid warning number.
        /// </summary>
        internal static string WRN_BadWarningNumber {
            get {
                return ResourceManager.GetString("WRN_BadWarningNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A number that was passed to the #pragma warning preprocessor directive was not a valid warning number. Verify that the number represents a warning, not an error..
        /// </summary>
        internal static string WRN_BadWarningNumber_Description {
            get {
                return ResourceManager.GetString("WRN_BadWarningNumber_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a valid warning number.
        /// </summary>
        internal static string WRN_BadWarningNumber_Title {
            get {
                return ResourceManager.GetString("WRN_BadWarningNumber_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has cref attribute &apos;{0}&apos; that could not be resolved.
        /// </summary>
        internal static string WRN_BadXMLRef {
            get {
                return ResourceManager.GetString("WRN_BadXMLRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has cref attribute that could not be resolved.
        /// </summary>
        internal static string WRN_BadXMLRef_Title {
            get {
                return ResourceManager.GetString("WRN_BadXMLRef_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type for parameter {0} in XML comment cref attribute: &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_BadXMLRefParamType {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefParamType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type for parameter in XML comment cref attribute.
        /// </summary>
        internal static string WRN_BadXMLRefParamType_Title {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefParamType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid return type in XML comment cref attribute.
        /// </summary>
        internal static string WRN_BadXMLRefReturnType {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid return type in XML comment cref attribute.
        /// </summary>
        internal static string WRN_BadXMLRefReturnType_Title {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefReturnType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has syntactically incorrect cref attribute &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_BadXMLRefSyntax {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has syntactically incorrect cref attribute.
        /// </summary>
        internal static string WRN_BadXMLRefSyntax_Title {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefSyntax_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has cref attribute &apos;{0}&apos; that refers to a type parameter.
        /// </summary>
        internal static string WRN_BadXMLRefTypeVar {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefTypeVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has cref attribute that refers to a type parameter.
        /// </summary>
        internal static string WRN_BadXMLRefTypeVar_Title {
            get {
                return ResourceManager.GetString("WRN_BadXMLRefTypeVar_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitwise-or operator used on a sign-extended operand; consider casting to a smaller unsigned type first.
        /// </summary>
        internal static string WRN_BitwiseOrSignExtend {
            get {
                return ResourceManager.GetString("WRN_BitwiseOrSignExtend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compiler implicitly widened and sign-extended a variable, and then used the resulting value in a bitwise OR operation. This can result in unexpected behavior..
        /// </summary>
        internal static string WRN_BitwiseOrSignExtend_Description {
            get {
                return ResourceManager.GetString("WRN_BitwiseOrSignExtend_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitwise-or operator used on a sign-extended operand.
        /// </summary>
        internal static string WRN_BitwiseOrSignExtend_Title {
            get {
                return ResourceManager.GetString("WRN_BitwiseOrSignExtend_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; as a ref or out value or taking its address may cause a runtime exception because it is a field of a marshal-by-reference class.
        /// </summary>
        internal static string WRN_ByRefNonAgileField {
            get {
                return ResourceManager.GetString("WRN_ByRefNonAgileField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using a field of a marshal-by-reference class as a ref or out value or taking its address may cause a runtime exception.
        /// </summary>
        internal static string WRN_ByRefNonAgileField_Title {
            get {
                return ResourceManager.GetString("WRN_ByRefNonAgileField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call System.IDisposable.Dispose() on allocated instance of {0} before all references to it are out of scope..
        /// </summary>
        internal static string WRN_CA2000_DisposeObjectsBeforeLosingScope1 {
            get {
                return ResourceManager.GetString("WRN_CA2000_DisposeObjectsBeforeLosingScope1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call System.IDisposable.Dispose() on allocated instance before all references to it are out of scope.
        /// </summary>
        internal static string WRN_CA2000_DisposeObjectsBeforeLosingScope1_Title {
            get {
                return ResourceManager.GetString("WRN_CA2000_DisposeObjectsBeforeLosingScope1_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allocated instance of {0} is not disposed along all exception paths.  Call System.IDisposable.Dispose() before all references to it are out of scope..
        /// </summary>
        internal static string WRN_CA2000_DisposeObjectsBeforeLosingScope2 {
            get {
                return ResourceManager.GetString("WRN_CA2000_DisposeObjectsBeforeLosingScope2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allocated instance is not disposed along all exception paths.
        /// </summary>
        internal static string WRN_CA2000_DisposeObjectsBeforeLosingScope2_Title {
            get {
                return ResourceManager.GetString("WRN_CA2000_DisposeObjectsBeforeLosingScope2_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object &apos;{0}&apos; can be disposed more than once..
        /// </summary>
        internal static string WRN_CA2202_DoNotDisposeObjectsMultipleTimes {
            get {
                return ResourceManager.GetString("WRN_CA2202_DoNotDisposeObjectsMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object can be disposed more than once.
        /// </summary>
        internal static string WRN_CA2202_DoNotDisposeObjectsMultipleTimes_Title {
            get {
                return ResourceManager.GetString("WRN_CA2202_DoNotDisposeObjectsMultipleTimes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerFilePathAttribute applied to parameter &apos;{0}&apos; will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerFilePathParamForUnconsumedLocation {
            get {
                return ResourceManager.GetString("WRN_CallerFilePathParamForUnconsumedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerFilePathAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerFilePathParamForUnconsumedLocation_Title {
            get {
                return ResourceManager.GetString("WRN_CallerFilePathParamForUnconsumedLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute applied to parameter &apos;{0}&apos; will have no effect. It is overridden by the CallerFilePathAttribute..
        /// </summary>
        internal static string WRN_CallerFilePathPreferredOverCallerMemberName {
            get {
                return ResourceManager.GetString("WRN_CallerFilePathPreferredOverCallerMemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute will have no effect; it is overridden by the CallerFilePathAttribute.
        /// </summary>
        internal static string WRN_CallerFilePathPreferredOverCallerMemberName_Title {
            get {
                return ResourceManager.GetString("WRN_CallerFilePathPreferredOverCallerMemberName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerLineNumberAttribute applied to parameter &apos;{0}&apos; will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerLineNumberParamForUnconsumedLocation {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberParamForUnconsumedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerLineNumberAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerLineNumberParamForUnconsumedLocation_Title {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberParamForUnconsumedLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerFilePathAttribute applied to parameter &apos;{0}&apos; will have no effect. It is overridden by the CallerLineNumberAttribute..
        /// </summary>
        internal static string WRN_CallerLineNumberPreferredOverCallerFilePath {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberPreferredOverCallerFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerFilePathAttribute will have no effect; it is overridden by the CallerLineNumberAttribute.
        /// </summary>
        internal static string WRN_CallerLineNumberPreferredOverCallerFilePath_Title {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberPreferredOverCallerFilePath_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute applied to parameter &apos;{0}&apos; will have no effect. It is overridden by the CallerLineNumberAttribute..
        /// </summary>
        internal static string WRN_CallerLineNumberPreferredOverCallerMemberName {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberPreferredOverCallerMemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute will have no effect; it is overridden by the CallerLineNumberAttribute.
        /// </summary>
        internal static string WRN_CallerLineNumberPreferredOverCallerMemberName_Title {
            get {
                return ResourceManager.GetString("WRN_CallerLineNumberPreferredOverCallerMemberName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute applied to parameter &apos;{0}&apos; will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerMemberNameParamForUnconsumedLocation {
            get {
                return ResourceManager.GetString("WRN_CallerMemberNameParamForUnconsumedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CallerMemberNameAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_CallerMemberNameParamForUnconsumedLocation_Title {
            get {
                return ResourceManager.GetString("WRN_CallerMemberNameParamForUnconsumedLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing a member on &apos;{0}&apos; may cause a runtime exception because it is a field of a marshal-by-reference class.
        /// </summary>
        internal static string WRN_CallOnNonAgileField {
            get {
                return ResourceManager.GetString("WRN_CallOnNonAgileField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning occurs when you try to call a method, property, or indexer on a member of a class that derives from MarshalByRefObject, and the member is a value type. Objects that inherit from MarshalByRefObject are typically intended to be marshaled by reference across an application domain. If any code ever attempts to directly access the value-type member of such an object across an application domain, a runtime exception will occur. To resolve the warning, first copy the member into a local variable and c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WRN_CallOnNonAgileField_Description {
            get {
                return ResourceManager.GetString("WRN_CallOnNonAgileField_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessing a member on a field of a marshal-by-reference class may cause a runtime exception.
        /// </summary>
        internal static string WRN_CallOnNonAgileField_Title {
            get {
                return ResourceManager.GetString("WRN_CallOnNonAgileField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /win32manifest for module because it only applies to assemblies.
        /// </summary>
        internal static string WRN_CantHaveManifestForModule {
            get {
                return ResourceManager.GetString("WRN_CantHaveManifestForModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /win32manifest for module because it only applies to assemblies.
        /// </summary>
        internal static string WRN_CantHaveManifestForModule_Title {
            get {
                return ResourceManager.GetString("WRN_CantHaveManifestForModule_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays as attribute arguments is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_ArrayArgumentToAttribute {
            get {
                return ResourceManager.GetString("WRN_CLS_ArrayArgumentToAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays as attribute arguments is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_ArrayArgumentToAttribute_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_ArrayArgumentToAttribute_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be marked as CLS-compliant because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string WRN_CLS_AssemblyNotCLS {
            get {
                return ResourceManager.GetString("WRN_CLS_AssemblyNotCLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or member cannot be marked as CLS-compliant because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string WRN_CLS_AssemblyNotCLS_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_AssemblyNotCLS_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string WRN_CLS_AssemblyNotCLS2 {
            get {
                return ResourceManager.GetString("WRN_CLS_AssemblyNotCLS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or member does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute.
        /// </summary>
        internal static string WRN_CLS_AssemblyNotCLS2_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_AssemblyNotCLS2_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument type &apos;{0}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadArgType {
            get {
                return ResourceManager.GetString("WRN_CLS_BadArgType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument type is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadArgType_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadArgType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has no accessible constructors which use only CLS-compliant types.
        /// </summary>
        internal static string WRN_CLS_BadAttributeType {
            get {
                return ResourceManager.GetString("WRN_CLS_BadAttributeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type has no accessible constructors which use only CLS-compliant types.
        /// </summary>
        internal static string WRN_CLS_BadAttributeType_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadAttributeType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: base type &apos;{1}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadBase {
            get {
                return ResourceManager.GetString("WRN_CLS_BadBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base type was marked as not having to be compliant with the Common Language Specification (CLS) in an assembly that was marked as being CLS compliant. Either remove the attribute that specifies the assembly is CLS compliant or remove the attribute that indicates the type is not CLS compliant..
        /// </summary>
        internal static string WRN_CLS_BadBase_Description {
            get {
                return ResourceManager.GetString("WRN_CLS_BadBase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base type is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadBase_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadBase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of &apos;{0}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadFieldPropType {
            get {
                return ResourceManager.GetString("WRN_CLS_BadFieldPropType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A public, protected, or protected internal variable must be of a type that is compliant with the Common Language Specification (CLS)..
        /// </summary>
        internal static string WRN_CLS_BadFieldPropType_Description {
            get {
                return ResourceManager.GetString("WRN_CLS_BadFieldPropType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadFieldPropType_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadFieldPropType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier &apos;{0}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadIdentifier {
            get {
                return ResourceManager.GetString("WRN_CLS_BadIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadIdentifier_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadIdentifier_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier &apos;{0}&apos; differing only in case is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadIdentifierCase {
            get {
                return ResourceManager.GetString("WRN_CLS_BadIdentifierCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier differing only in case is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadIdentifierCase_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadIdentifierCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not CLS-compliant because base interface &apos;{1}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadInterface {
            get {
                return ResourceManager.GetString("WRN_CLS_BadInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is not CLS-compliant because base interface is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadInterface_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadInterface_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: CLS-compliant interfaces must have only CLS-compliant members.
        /// </summary>
        internal static string WRN_CLS_BadInterfaceMember {
            get {
                return ResourceManager.GetString("WRN_CLS_BadInterfaceMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS-compliant interfaces must have only CLS-compliant members.
        /// </summary>
        internal static string WRN_CLS_BadInterfaceMember_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadInterfaceMember_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return type of &apos;{0}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadReturnType {
            get {
                return ResourceManager.GetString("WRN_CLS_BadReturnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return type is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadReturnType_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadReturnType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint type &apos;{0}&apos; is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadTypeVar {
            get {
                return ResourceManager.GetString("WRN_CLS_BadTypeVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constraint type is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_BadTypeVar_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_BadTypeVar_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be marked as CLS-compliant because it is a member of non-CLS-compliant type &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_CLS_IllegalTrueInFalse {
            get {
                return ResourceManager.GetString("WRN_CLS_IllegalTrueInFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type cannot be marked as CLS-compliant because it is a member of non-CLS-compliant type.
        /// </summary>
        internal static string WRN_CLS_IllegalTrueInFalse_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_IllegalTrueInFalse_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to parameters. Try putting it on the method instead..
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnParam {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to parameters.
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnParam_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnParam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS compliance checking will not be performed on &apos;{0}&apos; because it is not visible from outside this assembly.
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnPrivateType {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnPrivateType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS compliance checking will not be performed because it is not visible from outside this assembly.
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnPrivateType_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnPrivateType_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to return types. Try putting it on the method instead..
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnReturn {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLSCompliant attribute has no meaning when applied to return types.
        /// </summary>
        internal static string WRN_CLS_MeaninglessOnReturn_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_MeaninglessOnReturn_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added modules must be marked with the CLSCompliant attribute to match the assembly.
        /// </summary>
        internal static string WRN_CLS_ModuleMissingCLS {
            get {
                return ResourceManager.GetString("WRN_CLS_ModuleMissingCLS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added modules must be marked with the CLSCompliant attribute to match the assembly.
        /// </summary>
        internal static string WRN_CLS_ModuleMissingCLS_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_ModuleMissingCLS_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: only CLS-compliant members can be abstract.
        /// </summary>
        internal static string WRN_CLS_NoAbstractMembers {
            get {
                return ResourceManager.GetString("WRN_CLS_NoAbstractMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only CLS-compliant members can be abstract.
        /// </summary>
        internal static string WRN_CLS_NoAbstractMembers_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_NoAbstractMembers_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify the CLSCompliant attribute on the assembly, not the module, to enable CLS compliance checking.
        /// </summary>
        internal static string WRN_CLS_NotOnModules {
            get {
                return ResourceManager.GetString("WRN_CLS_NotOnModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify the CLSCompliant attribute on the assembly, not the module, to enable CLS compliance checking.
        /// </summary>
        internal static string WRN_CLS_NotOnModules_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_NotOnModules_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly.
        /// </summary>
        internal static string WRN_CLS_NotOnModules2 {
            get {
                return ResourceManager.GetString("WRN_CLS_NotOnModules2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly.
        /// </summary>
        internal static string WRN_CLS_NotOnModules2_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_NotOnModules2_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods with variable arguments are not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_NoVarArgs {
            get {
                return ResourceManager.GetString("WRN_CLS_NoVarArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods with variable arguments are not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_NoVarArgs_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_NoVarArgs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method &apos;{0}&apos; differing only in ref or out, or in array rank, is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_OverloadRefOut {
            get {
                return ResourceManager.GetString("WRN_CLS_OverloadRefOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method differing only in ref or out, or in array rank, is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_OverloadRefOut_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_OverloadRefOut_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method &apos;{0}&apos; differing only by unnamed array types is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_OverloadUnnamed {
            get {
                return ResourceManager.GetString("WRN_CLS_OverloadUnnamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This error occurs if you have an overloaded method that takes a jagged array and the only difference between the method signatures is the element type of the array. To avoid this error, consider using a rectangular array rather than a jagged array; use an additional parameter to disambiguate the function call; rename one or more of the overloaded methods; or, if CLS Compliance is not needed, remove the CLSCompliantAttribute attribute..
        /// </summary>
        internal static string WRN_CLS_OverloadUnnamed_Description {
            get {
                return ResourceManager.GetString("WRN_CLS_OverloadUnnamed_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overloaded method differing only by unnamed array types is not CLS-compliant.
        /// </summary>
        internal static string WRN_CLS_OverloadUnnamed_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_OverloadUnnamed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS-compliant field &apos;{0}&apos; cannot be volatile.
        /// </summary>
        internal static string WRN_CLS_VolatileField {
            get {
                return ResourceManager.GetString("WRN_CLS_VolatileField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CLS-compliant field cannot be volatile.
        /// </summary>
        internal static string WRN_CLS_VolatileField_Title {
            get {
                return ResourceManager.GetString("WRN_CLS_VolatileField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; overrides attribute &apos;{1}&apos; given in a source file or added module.
        /// </summary>
        internal static string WRN_CmdOptionConflictsSource {
            get {
                return ResourceManager.GetString("WRN_CmdOptionConflictsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning occurs if the assembly attributes AssemblyKeyFileAttribute or AssemblyKeyNameAttribute found in source conflict with the /keyfile or /keycontainer command line option or key file name or key container specified in the Project Properties..
        /// </summary>
        internal static string WRN_CmdOptionConflictsSource_Description {
            get {
                return ResourceManager.GetString("WRN_CmdOptionConflictsSource_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option overrides attribute given in a source file or added module.
        /// </summary>
        internal static string WRN_CmdOptionConflictsSource_Title {
            get {
                return ResourceManager.GetString("WRN_CmdOptionConflictsSource_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing with null of type &apos;{0}&apos; always produces &apos;false&apos;.
        /// </summary>
        internal static string WRN_CmpAlwaysFalse {
            get {
                return ResourceManager.GetString("WRN_CmpAlwaysFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing with null of struct type always produces &apos;false&apos;.
        /// </summary>
        internal static string WRN_CmpAlwaysFalse_Title {
            get {
                return ResourceManager.GetString("WRN_CmpAlwaysFalse_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; interface marked with &apos;CoClassAttribute&apos; not marked with &apos;ComImportAttribute&apos;.
        /// </summary>
        internal static string WRN_CoClassWithoutComImport {
            get {
                return ResourceManager.GetString("WRN_CoClassWithoutComImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface marked with &apos;CoClassAttribute&apos; not marked with &apos;ComImportAttribute&apos;.
        /// </summary>
        internal static string WRN_CoClassWithoutComImport_Title {
            get {
                return ResourceManager.GetString("WRN_CoClassWithoutComImport_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison made to same variable; did you mean to compare something else?.
        /// </summary>
        internal static string WRN_ComparisonToSelf {
            get {
                return ResourceManager.GetString("WRN_ComparisonToSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison made to same variable.
        /// </summary>
        internal static string WRN_ComparisonToSelf_Title {
            get {
                return ResourceManager.GetString("WRN_ComparisonToSelf_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Different checksum values given for &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_ConflictingChecksum {
            get {
                return ResourceManager.GetString("WRN_ConflictingChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Different #pragma checksum values given.
        /// </summary>
        internal static string WRN_ConflictingChecksum_Title {
            get {
                return ResourceManager.GetString("WRN_ConflictingChecksum_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly &apos;{0}&apos; targets a different processor..
        /// </summary>
        internal static string WRN_ConflictingMachineAssembly {
            get {
                return ResourceManager.GetString("WRN_ConflictingMachineAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly targets a different processor.
        /// </summary>
        internal static string WRN_ConflictingMachineAssembly_Title {
            get {
                return ResourceManager.GetString("WRN_ConflictingMachineAssembly_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The fully qualified name for &apos;{0}&apos; is too long for debug information. Compile without &apos;/debug&apos; option..
        /// </summary>
        internal static string WRN_DebugFullNameTooLong {
            get {
                return ResourceManager.GetString("WRN_DebugFullNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fully qualified name is too long for debug information.
        /// </summary>
        internal static string WRN_DebugFullNameTooLong_Title {
            get {
                return ResourceManager.GetString("WRN_DebugFullNameTooLong_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did you mean to use the default switch label (`default:`) rather than `case default:`? If you really mean to use the default literal, consider `case (default):` or another literal (`case 0:` or `case null:`) as appropriate..
        /// </summary>
        internal static string WRN_DefaultInSwitch {
            get {
                return ResourceManager.GetString("WRN_DefaultInSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did you mean to use the default switch label (`default:`) rather than `case default:`? If you really mean to use the default literal, consider `case (default):` or another literal (`case 0:` or `case null:`) as appropriate..
        /// </summary>
        internal static string WRN_DefaultInSwitch_Title {
            get {
                return ResourceManager.GetString("WRN_DefaultInSwitch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value specified for parameter &apos;{0}&apos; will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_DefaultValueForUnconsumedLocation {
            get {
                return ResourceManager.GetString("WRN_DefaultValueForUnconsumedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value specified will have no effect because it applies to a member that is used in contexts that do not allow optional arguments.
        /// </summary>
        internal static string WRN_DefaultValueForUnconsumedLocation_Title {
            get {
                return ResourceManager.GetString("WRN_DefaultValueForUnconsumedLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name for a preprocessing symbol; &apos;{0}&apos; is not a valid identifier.
        /// </summary>
        internal static string WRN_DefineIdentifierRequired {
            get {
                return ResourceManager.GetString("WRN_DefineIdentifierRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name for a preprocessing symbol; not a valid identifier.
        /// </summary>
        internal static string WRN_DefineIdentifierRequired_Title {
            get {
                return ResourceManager.GetString("WRN_DefineIdentifierRequired_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay signing was specified and requires a public key, but no public key was specified.
        /// </summary>
        internal static string WRN_DelaySignButNoKey {
            get {
                return ResourceManager.GetString("WRN_DelaySignButNoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay signing was specified and requires a public key, but no public key was specified.
        /// </summary>
        internal static string WRN_DelaySignButNoKey_Title {
            get {
                return ResourceManager.GetString("WRN_DelaySignButNoKey_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method &apos;{0}&apos; for the collection initializer element is obsolete..
        /// </summary>
        internal static string WRN_DeprecatedCollectionInitAdd {
            get {
                return ResourceManager.GetString("WRN_DeprecatedCollectionInitAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method for the collection initializer element is obsolete.
        /// </summary>
        internal static string WRN_DeprecatedCollectionInitAdd_Title {
            get {
                return ResourceManager.GetString("WRN_DeprecatedCollectionInitAdd_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method &apos;{0}&apos; for the collection initializer element is obsolete. {1}.
        /// </summary>
        internal static string WRN_DeprecatedCollectionInitAddStr {
            get {
                return ResourceManager.GetString("WRN_DeprecatedCollectionInitAddStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best overloaded Add method for the collection initializer element is obsolete.
        /// </summary>
        internal static string WRN_DeprecatedCollectionInitAddStr_Title {
            get {
                return ResourceManager.GetString("WRN_DeprecatedCollectionInitAddStr_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is obsolete.
        /// </summary>
        internal static string WRN_DeprecatedSymbol {
            get {
                return ResourceManager.GetString("WRN_DeprecatedSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or member is obsolete.
        /// </summary>
        internal static string WRN_DeprecatedSymbol_Title {
            get {
                return ResourceManager.GetString("WRN_DeprecatedSymbol_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is obsolete: &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_DeprecatedSymbolStr {
            get {
                return ResourceManager.GetString("WRN_DeprecatedSymbolStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type or member is obsolete.
        /// </summary>
        internal static string WRN_DeprecatedSymbolStr_Title {
            get {
                return ResourceManager.GetString("WRN_DeprecatedSymbolStr_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression will always cause a System.NullReferenceException because the default value of &apos;{0}&apos; is null.
        /// </summary>
        internal static string WRN_DotOnDefault {
            get {
                return ResourceManager.GetString("WRN_DotOnDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression will always cause a System.NullReferenceException because the type&apos;s default value is null.
        /// </summary>
        internal static string WRN_DotOnDefault_Title {
            get {
                return ResourceManager.GetString("WRN_DotOnDefault_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a duplicate param tag for &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_DuplicateParamTag {
            get {
                return ResourceManager.GetString("WRN_DuplicateParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a duplicate param tag.
        /// </summary>
        internal static string WRN_DuplicateParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_DuplicateParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a duplicate typeparam tag for &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_DuplicateTypeParamTag {
            get {
                return ResourceManager.GetString("WRN_DuplicateTypeParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a duplicate typeparam tag.
        /// </summary>
        internal static string WRN_DuplicateTypeParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_DuplicateTypeParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The using directive for &apos;{0}&apos; appeared previously in this namespace.
        /// </summary>
        internal static string WRN_DuplicateUsing {
            get {
                return ResourceManager.GetString("WRN_DuplicateUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using directive appeared previously in this namespace.
        /// </summary>
        internal static string WRN_DuplicateUsing_Title {
            get {
                return ResourceManager.GetString("WRN_DuplicateUsing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamically dispatched call to method &apos;{0}&apos; may fail at runtime because one or more applicable overloads are conditional methods..
        /// </summary>
        internal static string WRN_DynamicDispatchToConditionalMethod {
            get {
                return ResourceManager.GetString("WRN_DynamicDispatchToConditionalMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamically dispatched call may fail at runtime because one or more applicable overloads are conditional methods.
        /// </summary>
        internal static string WRN_DynamicDispatchToConditionalMethod_Title {
            get {
                return ResourceManager.GetString("WRN_DynamicDispatchToConditionalMethod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty switch block.
        /// </summary>
        internal static string WRN_EmptySwitch {
            get {
                return ResourceManager.GetString("WRN_EmptySwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty switch block.
        /// </summary>
        internal static string WRN_EmptySwitch_Title {
            get {
                return ResourceManager.GetString("WRN_EmptySwitch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-line comment or end-of-line expected.
        /// </summary>
        internal static string WRN_EndOfPPLineExpected {
            get {
                return ResourceManager.GetString("WRN_EndOfPPLineExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single-line comment or end-of-line expected after #pragma directive.
        /// </summary>
        internal static string WRN_EndOfPPLineExpected_Title {
            get {
                return ResourceManager.GetString("WRN_EndOfPPLineExpected_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; defines operator == or operator != but does not override Object.Equals(object o).
        /// </summary>
        internal static string WRN_EqualityOpWithoutEquals {
            get {
                return ResourceManager.GetString("WRN_EqualityOpWithoutEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type defines operator == or operator != but does not override Object.Equals(object o).
        /// </summary>
        internal static string WRN_EqualityOpWithoutEquals_Title {
            get {
                return ResourceManager.GetString("WRN_EqualityOpWithoutEquals_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; defines operator == or operator != but does not override Object.GetHashCode().
        /// </summary>
        internal static string WRN_EqualityOpWithoutGetHashCode {
            get {
                return ResourceManager.GetString("WRN_EqualityOpWithoutGetHashCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type defines operator == or operator != but does not override Object.GetHashCode().
        /// </summary>
        internal static string WRN_EqualityOpWithoutGetHashCode_Title {
            get {
                return ResourceManager.GetString("WRN_EqualityOpWithoutGetHashCode_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; overrides Object.Equals(object o) but does not override Object.GetHashCode().
        /// </summary>
        internal static string WRN_EqualsWithoutGetHashCode {
            get {
                return ResourceManager.GetString("WRN_EqualsWithoutGetHashCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type overrides Object.Equals(object o) but does not override Object.GetHashCode().
        /// </summary>
        internal static string WRN_EqualsWithoutGetHashCode_Title {
            get {
                return ResourceManager.GetString("WRN_EqualsWithoutGetHashCode_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}. See also error CS{1}..
        /// </summary>
        internal static string WRN_ErrorOverride {
            get {
                return ResourceManager.GetString("WRN_ErrorOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compiler emits this warning when it overrides an error with a warning. For information about the problem, search for the error code mentioned..
        /// </summary>
        internal static string WRN_ErrorOverride_Description {
            get {
                return ResourceManager.GetString("WRN_ErrorOverride_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning is overriding an error.
        /// </summary>
        internal static string WRN_ErrorOverride_Title {
            get {
                return ResourceManager.GetString("WRN_ErrorOverride_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is for evaluation purposes only and is subject to change or removal in future updates..
        /// </summary>
        internal static string WRN_Experimental {
            get {
                return ResourceManager.GetString("WRN_Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type is for evaluation purposes only and is subject to change or removal in future updates..
        /// </summary>
        internal static string WRN_Experimental_Title {
            get {
                return ResourceManager.GetString("WRN_Experimental_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit interface implementation &apos;{0}&apos; matches more than one interface member. Which interface member is actually chosen is implementation-dependent. Consider using a non-explicit implementation instead..
        /// </summary>
        internal static string WRN_ExplicitImplCollision {
            get {
                return ResourceManager.GetString("WRN_ExplicitImplCollision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explicit interface implementation matches more than one interface member.
        /// </summary>
        internal static string WRN_ExplicitImplCollision_Title {
            get {
                return ResourceManager.GetString("WRN_ExplicitImplCollision_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor &apos;{0}&apos; is marked external.
        /// </summary>
        internal static string WRN_ExternCtorNoImplementation {
            get {
                return ResourceManager.GetString("WRN_ExternCtorNoImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor is marked external.
        /// </summary>
        internal static string WRN_ExternCtorNoImplementation_Title {
            get {
                return ResourceManager.GetString("WRN_ExternCtorNoImplementation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method, operator, or accessor &apos;{0}&apos; is marked external and has no attributes on it. Consider adding a DllImport attribute to specify the external implementation..
        /// </summary>
        internal static string WRN_ExternMethodNoImplementation {
            get {
                return ResourceManager.GetString("WRN_ExternMethodNoImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method, operator, or accessor is marked external and has no attributes on it.
        /// </summary>
        internal static string WRN_ExternMethodNoImplementation_Title {
            get {
                return ResourceManager.GetString("WRN_ExternMethodNoImplementation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to include XML fragment &apos;{1}&apos; of file &apos;{0}&apos; -- {2}.
        /// </summary>
        internal static string WRN_FailedInclude {
            get {
                return ResourceManager.GetString("WRN_FailedInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to include XML fragment.
        /// </summary>
        internal static string WRN_FailedInclude_Title {
            get {
                return ResourceManager.GetString("WRN_FailedInclude_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; specified multiple times.
        /// </summary>
        internal static string WRN_FileAlreadyIncluded {
            get {
                return ResourceManager.GetString("WRN_FileAlreadyIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file specified multiple times.
        /// </summary>
        internal static string WRN_FileAlreadyIncluded_Title {
            get {
                return ResourceManager.GetString("WRN_FileAlreadyIncluded_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid filename specified for preprocessor directive. Filename is too long or not a valid filename..
        /// </summary>
        internal static string WRN_FileNameTooLong {
            get {
                return ResourceManager.GetString("WRN_FileNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid filename specified for preprocessor directive.
        /// </summary>
        internal static string WRN_FileNameTooLong_Title {
            get {
                return ResourceManager.GetString("WRN_FileNameTooLong_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter expression is a constant, consider removing the filter.
        /// </summary>
        internal static string WRN_FilterIsConstant {
            get {
                return ResourceManager.GetString("WRN_FilterIsConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter expression is a constant.
        /// </summary>
        internal static string WRN_FilterIsConstant_Title {
            get {
                return ResourceManager.GetString("WRN_FilterIsConstant_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introducing a &apos;Finalize&apos; method can interfere with destructor invocation. Did you intend to declare a destructor?.
        /// </summary>
        internal static string WRN_FinalizeMethod {
            get {
                return ResourceManager.GetString("WRN_FinalizeMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning occurs when you create a class with a method whose signature is public virtual void Finalize.
        ///
        ///If such a class is used as a base class and if the deriving class defines a destructor, the destructor will override the base class Finalize method, not Finalize..
        /// </summary>
        internal static string WRN_FinalizeMethod_Description {
            get {
                return ResourceManager.GetString("WRN_FinalizeMethod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introducing a &apos;Finalize&apos; method can interfere with destructor invocation.
        /// </summary>
        internal static string WRN_FinalizeMethod_Title {
            get {
                return ResourceManager.GetString("WRN_FinalizeMethod_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defining an alias named &apos;global&apos; is ill-advised since &apos;global::&apos; always references the global namespace and not an alias.
        /// </summary>
        internal static string WRN_GlobalAliasDefn {
            get {
                return ResourceManager.GetString("WRN_GlobalAliasDefn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defining an alias named &apos;global&apos; is ill-advised.
        /// </summary>
        internal static string WRN_GlobalAliasDefn_Title {
            get {
                return ResourceManager.GetString("WRN_GlobalAliasDefn_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;goto case&apos; value is not implicitly convertible to type &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_GotoCaseShouldConvert {
            get {
                return ResourceManager.GetString("WRN_GotoCaseShouldConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;goto case&apos; value is not implicitly convertible to the switch type.
        /// </summary>
        internal static string WRN_GotoCaseShouldConvert_Title {
            get {
                return ResourceManager.GetString("WRN_GotoCaseShouldConvert_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected identifier or numeric literal..
        /// </summary>
        internal static string WRN_IdentifierOrNumericLiteralExpected {
            get {
                return ResourceManager.GetString("WRN_IdentifierOrNumericLiteralExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected identifier or numeric literal.
        /// </summary>
        internal static string WRN_IdentifierOrNumericLiteralExpected_Title {
            get {
                return ResourceManager.GetString("WRN_IdentifierOrNumericLiteralExpected_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid #pragma checksum syntax; should be #pragma checksum &quot;filename&quot; &quot;{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}&quot; &quot;XXXX...&quot;.
        /// </summary>
        internal static string WRN_IllegalPPChecksum {
            get {
                return ResourceManager.GetString("WRN_IllegalPPChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid #pragma checksum syntax.
        /// </summary>
        internal static string WRN_IllegalPPChecksum_Title {
            get {
                return ResourceManager.GetString("WRN_IllegalPPChecksum_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected disable or restore.
        /// </summary>
        internal static string WRN_IllegalPPWarning {
            get {
                return ResourceManager.GetString("WRN_IllegalPPWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected disable or restore after #pragma warning.
        /// </summary>
        internal static string WRN_IllegalPPWarning_Title {
            get {
                return ResourceManager.GetString("WRN_IllegalPPWarning_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized #pragma directive.
        /// </summary>
        internal static string WRN_IllegalPragma {
            get {
                return ResourceManager.GetString("WRN_IllegalPragma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized #pragma directive.
        /// </summary>
        internal static string WRN_IllegalPragma_Title {
            get {
                return ResourceManager.GetString("WRN_IllegalPragma_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment in conditional expression is always constant; did you mean to use == instead of = ?.
        /// </summary>
        internal static string WRN_IncorrectBooleanAssg {
            get {
                return ResourceManager.GetString("WRN_IncorrectBooleanAssg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment in conditional expression is always constant.
        /// </summary>
        internal static string WRN_IncorrectBooleanAssg_Title {
            get {
                return ResourceManager.GetString("WRN_IncorrectBooleanAssg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly reference &apos;{0}&apos; is invalid and cannot be resolved.
        /// </summary>
        internal static string WRN_InvalidAssemblyName {
            get {
                return ResourceManager.GetString("WRN_InvalidAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning indicates that an attribute, such as InternalsVisibleToAttribute, was not specified correctly..
        /// </summary>
        internal static string WRN_InvalidAssemblyName_Description {
            get {
                return ResourceManager.GetString("WRN_InvalidAssemblyName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly reference is invalid and cannot be resolved.
        /// </summary>
        internal static string WRN_InvalidAssemblyName_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidAssemblyName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a recognized attribute location. Valid attribute locations for this declaration are &apos;{1}&apos;. All attributes in this block will be ignored..
        /// </summary>
        internal static string WRN_InvalidAttributeLocation {
            get {
                return ResourceManager.GetString("WRN_InvalidAttributeLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a recognized attribute location.
        /// </summary>
        internal static string WRN_InvalidAttributeLocation_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidAttributeLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid XML include element -- {0}.
        /// </summary>
        internal static string WRN_InvalidInclude {
            get {
                return ResourceManager.GetString("WRN_InvalidInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid XML include element.
        /// </summary>
        internal static string WRN_InvalidInclude_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidInclude_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has the wrong signature to be an entry point.
        /// </summary>
        internal static string WRN_InvalidMainSig {
            get {
                return ResourceManager.GetString("WRN_InvalidMainSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method has the wrong signature to be an entry point.
        /// </summary>
        internal static string WRN_InvalidMainSig_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidMainSig_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number.
        /// </summary>
        internal static string WRN_InvalidNumber {
            get {
                return ResourceManager.GetString("WRN_InvalidNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number.
        /// </summary>
        internal static string WRN_InvalidNumber_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidNumber_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid search path &apos;{0}&apos; specified in &apos;{1}&apos; -- &apos;{2}&apos;.
        /// </summary>
        internal static string WRN_InvalidSearchPathDir {
            get {
                return ResourceManager.GetString("WRN_InvalidSearchPathDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid search path specified.
        /// </summary>
        internal static string WRN_InvalidSearchPathDir_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidSearchPathDir_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version string does not conform to the recommended format - major.minor.build.revision.
        /// </summary>
        internal static string WRN_InvalidVersionFormat {
            get {
                return ResourceManager.GetString("WRN_InvalidVersionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version string does not conform to the recommended format - major.minor.build.revision.
        /// </summary>
        internal static string WRN_InvalidVersionFormat_Title {
            get {
                return ResourceManager.GetString("WRN_InvalidVersionFormat_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given expression is never of the provided (&apos;{0}&apos;) type.
        /// </summary>
        internal static string WRN_IsAlwaysFalse {
            get {
                return ResourceManager.GetString("WRN_IsAlwaysFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;is&apos; expression&apos;s given expression is never of the provided type.
        /// </summary>
        internal static string WRN_IsAlwaysFalse_Title {
            get {
                return ResourceManager.GetString("WRN_IsAlwaysFalse_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given expression is always of the provided (&apos;{0}&apos;) type.
        /// </summary>
        internal static string WRN_IsAlwaysTrue {
            get {
                return ResourceManager.GetString("WRN_IsAlwaysTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;is&apos; expression&apos;s given expression is always of the provided type.
        /// </summary>
        internal static string WRN_IsAlwaysTrue_Title {
            get {
                return ResourceManager.GetString("WRN_IsAlwaysTrue_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; to test compatibility with &apos;{1}&apos; is essentially identical to testing compatibility with &apos;{2}&apos; and will succeed for all non-null values.
        /// </summary>
        internal static string WRN_IsDynamicIsConfusing {
            get {
                return ResourceManager.GetString("WRN_IsDynamicIsConfusing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;is&apos; to test compatibility with &apos;dynamic&apos; is essentially identical to testing compatibility with &apos;Object&apos;.
        /// </summary>
        internal static string WRN_IsDynamicIsConfusing_Title {
            get {
                return ResourceManager.GetString("WRN_IsDynamicIsConfusing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;l&apos; suffix is easily confused with the digit &apos;1&apos; -- use &apos;L&apos; for clarity.
        /// </summary>
        internal static string WRN_LowercaseEllSuffix {
            get {
                return ResourceManager.GetString("WRN_LowercaseEllSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;l&apos; suffix is easily confused with the digit &apos;1&apos;.
        /// </summary>
        internal static string WRN_LowercaseEllSuffix_Title {
            get {
                return ResourceManager.GetString("WRN_LowercaseEllSuffix_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: an entry point cannot be generic or in a generic type.
        /// </summary>
        internal static string WRN_MainCantBeGeneric {
            get {
                return ResourceManager.GetString("WRN_MainCantBeGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An entry point cannot be generic or in a generic type.
        /// </summary>
        internal static string WRN_MainCantBeGeneric_Title {
            get {
                return ResourceManager.GetString("WRN_MainCantBeGeneric_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry point of the program is global script code; ignoring &apos;{0}&apos; entry point..
        /// </summary>
        internal static string WRN_MainIgnored {
            get {
                return ResourceManager.GetString("WRN_MainIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry point of the program is global script code; ignoring entry point.
        /// </summary>
        internal static string WRN_MainIgnored_Title {
            get {
                return ResourceManager.GetString("WRN_MainIgnored_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; has no matching param tag in the XML comment for &apos;{1}&apos; (but other parameters do).
        /// </summary>
        internal static string WRN_MissingParamTag {
            get {
                return ResourceManager.GetString("WRN_MissingParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter has no matching param tag in the XML comment (but other parameters do).
        /// </summary>
        internal static string WRN_MissingParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_MissingParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{0}&apos; has no matching typeparam tag in the XML comment on &apos;{1}&apos; (but other type parameters do).
        /// </summary>
        internal static string WRN_MissingTypeParamTag {
            get {
                return ResourceManager.GetString("WRN_MissingTypeParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter has no matching typeparam tag in the XML comment (but other type parameters do).
        /// </summary>
        internal static string WRN_MissingTypeParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_MissingTypeParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing XML comment for publicly visible type or member &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_MissingXMLComment {
            get {
                return ResourceManager.GetString("WRN_MissingXMLComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /doc compiler option was specified, but one or more constructs did not have comments..
        /// </summary>
        internal static string WRN_MissingXMLComment_Description {
            get {
                return ResourceManager.GetString("WRN_MissingXMLComment_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing XML comment for publicly visible type or member.
        /// </summary>
        internal static string WRN_MissingXMLComment_Title {
            get {
                return ResourceManager.GetString("WRN_MissingXMLComment_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The predefined type &apos;{0}&apos; is defined in multiple assemblies in the global alias; using definition from &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_MultiplePredefTypes {
            get {
                return ResourceManager.GetString("WRN_MultiplePredefTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This error occurs when a predefined system type such as System.Int32 is found in two assemblies. One way this can happen is if you are referencing mscorlib or System.Runtime.dll from two different places, such as trying to run two versions of the .NET Framework side-by-side..
        /// </summary>
        internal static string WRN_MultiplePredefTypes_Description {
            get {
                return ResourceManager.GetString("WRN_MultiplePredefTypes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined type is defined in multiple assemblies in the global alias.
        /// </summary>
        internal static string WRN_MultiplePredefTypes_Title {
            get {
                return ResourceManager.GetString("WRN_MultiplePredefTypes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; implements interface member &apos;{1}&apos; in type &apos;{2}&apos;. There are multiple matches for the interface member at run-time. It is implementation dependent which method will be called..
        /// </summary>
        internal static string WRN_MultipleRuntimeImplementationMatches {
            get {
                return ResourceManager.GetString("WRN_MultipleRuntimeImplementationMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning can be generated when two interface methods are differentiated only by whether a particular parameter is marked with ref or with out. It is best to change your code to avoid this warning because it is not obvious or guaranteed which method is called at runtime.
        ///
        ///Although C# distinguishes between out and ref, the CLR sees them as the same. When deciding which method implements the interface, the CLR just picks one.
        ///
        ///Give the compiler some way to differentiate the methods. For example, you ca [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WRN_MultipleRuntimeImplementationMatches_Description {
            get {
                return ResourceManager.GetString("WRN_MultipleRuntimeImplementationMatches_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member implements interface member with multiple matches at run-time.
        /// </summary>
        internal static string WRN_MultipleRuntimeImplementationMatches_Title {
            get {
                return ResourceManager.GetString("WRN_MultipleRuntimeImplementationMatches_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{1}&apos; overrides &apos;{0}&apos;. There are multiple override candidates at run-time. It is implementation dependent which method will be called..
        /// </summary>
        internal static string WRN_MultipleRuntimeOverrideMatches {
            get {
                return ResourceManager.GetString("WRN_MultipleRuntimeOverrideMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member overrides base member with multiple override candidates at run-time.
        /// </summary>
        internal static string WRN_MultipleRuntimeOverrideMatches_Title {
            get {
                return ResourceManager.GetString("WRN_MultipleRuntimeOverrideMatches_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing an array with a negative index (array indices always start at zero).
        /// </summary>
        internal static string WRN_NegativeArrayIndex {
            get {
                return ResourceManager.GetString("WRN_NegativeArrayIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexing an array with a negative index.
        /// </summary>
        internal static string WRN_NegativeArrayIndex_Title {
            get {
                return ResourceManager.GetString("WRN_NegativeArrayIndex_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member &apos;{0}&apos; does not hide an accessible member. The new keyword is not required..
        /// </summary>
        internal static string WRN_NewNotRequired {
            get {
                return ResourceManager.GetString("WRN_NewNotRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member does not hide an inherited member; new keyword is not required.
        /// </summary>
        internal static string WRN_NewNotRequired_Title {
            get {
                return ResourceManager.GetString("WRN_NewNotRequired_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; hides inherited member &apos;{1}&apos;. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword..
        /// </summary>
        internal static string WRN_NewOrOverrideExpected {
            get {
                return ResourceManager.GetString("WRN_NewOrOverrideExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member hides inherited member; missing override keyword.
        /// </summary>
        internal static string WRN_NewOrOverrideExpected_Title {
            get {
                return ResourceManager.GetString("WRN_NewOrOverrideExpected_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; hides inherited member &apos;{1}&apos;. Use the new keyword if hiding was intended..
        /// </summary>
        internal static string WRN_NewRequired {
            get {
                return ResourceManager.GetString("WRN_NewRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A variable was declared with the same name as a variable in a base class. However, the new keyword was not used. This warning informs you that you should use new; the variable is declared as if new had been used in the declaration..
        /// </summary>
        internal static string WRN_NewRequired_Description {
            get {
                return ResourceManager.GetString("WRN_NewRequired_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member hides inherited member; missing new keyword.
        /// </summary>
        internal static string WRN_NewRequired_Title {
            get {
                return ResourceManager.GetString("WRN_NewRequired_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly {0} does not contain any analyzers..
        /// </summary>
        internal static string WRN_NoAnalyzerInAssembly {
            get {
                return ResourceManager.GetString("WRN_NoAnalyzerInAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly does not contain any analyzers.
        /// </summary>
        internal static string WRN_NoAnalyzerInAssembly_Title {
            get {
                return ResourceManager.GetString("WRN_NoAnalyzerInAssembly_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /noconfig option because it was specified in a response file.
        /// </summary>
        internal static string WRN_NoConfigNotOnCommandLine {
            get {
                return ResourceManager.GetString("WRN_NoConfigNotOnCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring /noconfig option because it was specified in a response file.
        /// </summary>
        internal static string WRN_NoConfigNotOnCommandLine_Title {
            get {
                return ResourceManager.GetString("WRN_NoConfigNotOnCommandLine_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature &apos;{0}&apos; is not part of the standardized ISO C# language specification, and may not be accepted by other compilers.
        /// </summary>
        internal static string WRN_NonECMAFeature {
            get {
                return ResourceManager.GetString("WRN_NonECMAFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature is not part of the standardized ISO C# language specification, and may not be accepted by other compilers.
        /// </summary>
        internal static string WRN_NonECMAFeature_Title {
            get {
                return ResourceManager.GetString("WRN_NonECMAFeature_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &apos;{0}&apos; overrides obsolete member &apos;{1}&apos;. Add the Obsolete attribute to &apos;{0}&apos;..
        /// </summary>
        internal static string WRN_NonObsoleteOverridingObsolete {
            get {
                return ResourceManager.GetString("WRN_NonObsoleteOverridingObsolete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member overrides obsolete member.
        /// </summary>
        internal static string WRN_NonObsoleteOverridingObsolete_Title {
            get {
                return ResourceManager.GetString("WRN_NonObsoleteOverridingObsolete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No value for RuntimeMetadataVersion found. No assembly containing System.Object was found nor was a value for RuntimeMetadataVersion specified through options..
        /// </summary>
        internal static string WRN_NoRuntimeMetadataVersion {
            get {
                return ResourceManager.GetString("WRN_NoRuntimeMetadataVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No value for RuntimeMetadataVersion found.
        /// </summary>
        internal static string WRN_NoRuntimeMetadataVersion_Title {
            get {
                return ResourceManager.GetString("WRN_NoRuntimeMetadataVersion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source files specified..
        /// </summary>
        internal static string WRN_NoSources {
            get {
                return ResourceManager.GetString("WRN_NoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source files specified.
        /// </summary>
        internal static string WRN_NoSources_Title {
            get {
                return ResourceManager.GetString("WRN_NoSources_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always &apos;{0}&apos; since a value of type &apos;{1}&apos; is never equal to &apos;null&apos; of type &apos;{2}&apos;.
        /// </summary>
        internal static string WRN_NubExprIsConstBool {
            get {
                return ResourceManager.GetString("WRN_NubExprIsConstBool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always the same since a value of this type is never equal to &apos;null&apos;.
        /// </summary>
        internal static string WRN_NubExprIsConstBool_Title {
            get {
                return ResourceManager.GetString("WRN_NubExprIsConstBool_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always &apos;{0}&apos; since a value of type &apos;{1}&apos; is never equal to &apos;null&apos; of type &apos;{2}&apos;.
        /// </summary>
        internal static string WRN_NubExprIsConstBool2 {
            get {
                return ResourceManager.GetString("WRN_NubExprIsConstBool2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result of the expression is always the same since a value of this type is never equal to &apos;null&apos;.
        /// </summary>
        internal static string WRN_NubExprIsConstBool2_Title {
            get {
                return ResourceManager.GetString("WRN_NubExprIsConstBool2_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete member &apos;{0}&apos; overrides non-obsolete member &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_ObsoleteOverridingNonObsolete {
            get {
                return ResourceManager.GetString("WRN_ObsoleteOverridingNonObsolete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete member overrides non-obsolete member.
        /// </summary>
        internal static string WRN_ObsoleteOverridingNonObsolete_Title {
            get {
                return ResourceManager.GetString("WRN_ObsoleteOverridingNonObsolete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement the &apos;{1}&apos; pattern. &apos;{2}&apos; has the wrong signature..
        /// </summary>
        internal static string WRN_PatternBadSignature {
            get {
                return ResourceManager.GetString("WRN_PatternBadSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type does not implement the collection pattern; member has the wrong signature.
        /// </summary>
        internal static string WRN_PatternBadSignature_Title {
            get {
                return ResourceManager.GetString("WRN_PatternBadSignature_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement the &apos;{1}&apos; pattern. &apos;{2}&apos; is ambiguous with &apos;{3}&apos;..
        /// </summary>
        internal static string WRN_PatternIsAmbiguous {
            get {
                return ResourceManager.GetString("WRN_PatternIsAmbiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type does not implement the collection pattern; members are ambiguous.
        /// </summary>
        internal static string WRN_PatternIsAmbiguous_Title {
            get {
                return ResourceManager.GetString("WRN_PatternIsAmbiguous_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not implement the &apos;{1}&apos; pattern. &apos;{2}&apos; is either static or not public..
        /// </summary>
        internal static string WRN_PatternStaticOrInaccessible {
            get {
                return ResourceManager.GetString("WRN_PatternStaticOrInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type does not implement the collection pattern; member is either static or not public.
        /// </summary>
        internal static string WRN_PatternStaticOrInaccessible_Title {
            get {
                return ResourceManager.GetString("WRN_PatternStaticOrInaccessible_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local name &apos;{0}&apos; is too long for PDB.  Consider shortening or compiling without /debug..
        /// </summary>
        internal static string WRN_PdbLocalNameTooLong {
            get {
                return ResourceManager.GetString("WRN_PdbLocalNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local name is too long for PDB.
        /// </summary>
        internal static string WRN_PdbLocalNameTooLong_Title {
            get {
                return ResourceManager.GetString("WRN_PdbLocalNameTooLong_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible mistaken empty statement.
        /// </summary>
        internal static string WRN_PossibleMistakenNullStatement {
            get {
                return ResourceManager.GetString("WRN_PossibleMistakenNullStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible mistaken empty statement.
        /// </summary>
        internal static string WRN_PossibleMistakenNullStatement_Title {
            get {
                return ResourceManager.GetString("WRN_PossibleMistakenNullStatement_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: new protected member declared in sealed class.
        /// </summary>
        internal static string WRN_ProtectedInSealed {
            get {
                return ResourceManager.GetString("WRN_ProtectedInSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New protected member declared in sealed class.
        /// </summary>
        internal static string WRN_ProtectedInSealed_Title {
            get {
                return ResourceManager.GetString("WRN_ProtectedInSealed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly &apos;{0}&apos; has different culture setting of &apos;{1}&apos;..
        /// </summary>
        internal static string WRN_RefCultureMismatch {
            get {
                return ResourceManager.GetString("WRN_RefCultureMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly has different culture setting.
        /// </summary>
        internal static string WRN_RefCultureMismatch_Title {
            get {
                return ResourceManager.GetString("WRN_RefCultureMismatch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly &apos;{0}&apos; does not have a strong name..
        /// </summary>
        internal static string WRN_ReferencedAssemblyDoesNotHaveStrongName {
            get {
                return ResourceManager.GetString("WRN_ReferencedAssemblyDoesNotHaveStrongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly does not have a strong name.
        /// </summary>
        internal static string WRN_ReferencedAssemblyDoesNotHaveStrongName_Title {
            get {
                return ResourceManager.GetString("WRN_ReferencedAssemblyDoesNotHaveStrongName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference was created to embedded interop assembly &apos;{0}&apos; because of an indirect reference to that assembly created by assembly &apos;{1}&apos;. Consider changing the &apos;Embed Interop Types&apos; property on either assembly..
        /// </summary>
        internal static string WRN_ReferencedAssemblyReferencesLinkedPIA {
            get {
                return ResourceManager.GetString("WRN_ReferencedAssemblyReferencesLinkedPIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have added a reference to an assembly using /link (Embed Interop Types property set to True). This instructs the compiler to embed interop type information from that assembly. However, the compiler cannot embed interop type information from that assembly because another assembly that you have referenced also references that assembly using /reference (Embed Interop Types property set to False).
        ///
        ///To embed interop type information for both assemblies, use /link for references to each assembly (set the Em [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WRN_ReferencedAssemblyReferencesLinkedPIA_Description {
            get {
                return ResourceManager.GetString("WRN_ReferencedAssemblyReferencesLinkedPIA_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference was created to embedded interop assembly because of an indirect assembly reference.
        /// </summary>
        internal static string WRN_ReferencedAssemblyReferencesLinkedPIA_Title {
            get {
                return ResourceManager.GetString("WRN_ReferencedAssemblyReferencesLinkedPIA_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{1}&apos; in &apos;{0}&apos; conflicts with the imported type &apos;{3}&apos; in &apos;{2}&apos;. Using the type defined in &apos;{0}&apos;..
        /// </summary>
        internal static string WRN_SameFullNameThisAggAgg {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisAggAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type conflicts with imported type.
        /// </summary>
        internal static string WRN_SameFullNameThisAggAgg_Title {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisAggAgg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{1}&apos; in &apos;{0}&apos; conflicts with the imported namespace &apos;{3}&apos; in &apos;{2}&apos;. Using the type defined in &apos;{0}&apos;..
        /// </summary>
        internal static string WRN_SameFullNameThisAggNs {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisAggNs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type conflicts with imported namespace.
        /// </summary>
        internal static string WRN_SameFullNameThisAggNs_Title {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisAggNs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace &apos;{1}&apos; in &apos;{0}&apos; conflicts with the imported type &apos;{3}&apos; in &apos;{2}&apos;. Using the namespace defined in &apos;{0}&apos;..
        /// </summary>
        internal static string WRN_SameFullNameThisNsAgg {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisNsAgg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace conflicts with imported type.
        /// </summary>
        internal static string WRN_SameFullNameThisNsAgg_Title {
            get {
                return ResourceManager.GetString("WRN_SameFullNameThisNsAgg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no defined ordering between fields in multiple declarations of partial struct &apos;{0}&apos;. To specify an ordering, all instance fields must be in the same declaration..
        /// </summary>
        internal static string WRN_SequentialOnPartialClass {
            get {
                return ResourceManager.GetString("WRN_SequentialOnPartialClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no defined ordering between fields in multiple declarations of partial struct.
        /// </summary>
        internal static string WRN_SequentialOnPartialClass_Title {
            get {
                return ResourceManager.GetString("WRN_SequentialOnPartialClass_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file has exceeded the limit of 16,707,565 lines representable in the PDB; debug information will be incorrect.
        /// </summary>
        internal static string WRN_TooManyLinesForDebugger {
            get {
                return ResourceManager.GetString("WRN_TooManyLinesForDebugger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file has exceeded the limit of 16,707,565 lines representable in the PDB; debug information will be incorrect.
        /// </summary>
        internal static string WRN_TooManyLinesForDebugger_Title {
            get {
                return ResourceManager.GetString("WRN_TooManyLinesForDebugger_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tuple element name &apos;{0}&apos; is ignored because a different name or no name is specified by the target type &apos;{1}&apos;..
        /// </summary>
        internal static string WRN_TupleLiteralNameMismatch {
            get {
                return ResourceManager.GetString("WRN_TupleLiteralNameMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tuple element name is ignored because a different name or no name is specified by the assignment target..
        /// </summary>
        internal static string WRN_TupleLiteralNameMismatch_Title {
            get {
                return ResourceManager.GetString("WRN_TupleLiteralNameMismatch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter &apos;{0}&apos; has the same name as the type parameter from outer type &apos;{1}&apos;.
        /// </summary>
        internal static string WRN_TypeParameterSameAsOuterTypeParameter {
            get {
                return ResourceManager.GetString("WRN_TypeParameterSameAsOuterTypeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameter has the same name as the type parameter from outer type.
        /// </summary>
        internal static string WRN_TypeParameterSameAsOuterTypeParameter_Title {
            get {
                return ResourceManager.GetString("WRN_TypeParameterSameAsOuterTypeParameter_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load Analyzer assembly {0} : {1}.
        /// </summary>
        internal static string WRN_UnableToLoadAnalyzer {
            get {
                return ResourceManager.GetString("WRN_UnableToLoadAnalyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load Analyzer assembly.
        /// </summary>
        internal static string WRN_UnableToLoadAnalyzer_Title {
            get {
                return ResourceManager.GetString("WRN_UnableToLoadAnalyzer_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; is never assigned to, and will always have its default value {1}.
        /// </summary>
        internal static string WRN_UnassignedInternalField {
            get {
                return ResourceManager.GetString("WRN_UnassignedInternalField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field is never assigned to, and will always have its default value.
        /// </summary>
        internal static string WRN_UnassignedInternalField_Title {
            get {
                return ResourceManager.GetString("WRN_UnassignedInternalField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference &apos;{0}&apos; used by &apos;{1}&apos; matches identity &apos;{2}&apos; of &apos;{3}&apos;, you may need to supply runtime policy.
        /// </summary>
        internal static string WRN_UnifyReferenceBldRev {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceBldRev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application&apos;s .config file, and you must provide the correct strong name of an assembly..
        /// </summary>
        internal static string WRN_UnifyReferenceBldRev_Description {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceBldRev_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference matches identity.
        /// </summary>
        internal static string WRN_UnifyReferenceBldRev_Title {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceBldRev_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference &apos;{0}&apos; used by &apos;{1}&apos; matches identity &apos;{2}&apos; of &apos;{3}&apos;, you may need to supply runtime policy.
        /// </summary>
        internal static string WRN_UnifyReferenceMajMin {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceMajMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application&apos;s .config file, and you must provide the correct strong name of an assembly..
        /// </summary>
        internal static string WRN_UnifyReferenceMajMin_Description {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceMajMin_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assuming assembly reference matches identity.
        /// </summary>
        internal static string WRN_UnifyReferenceMajMin_Title {
            get {
                return ResourceManager.GetString("WRN_UnifyReferenceMajMin_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command line switch &apos;{0}&apos; is not yet implemented and was ignored..
        /// </summary>
        internal static string WRN_UnimplementedCommandLineSwitch {
            get {
                return ResourceManager.GetString("WRN_UnimplementedCommandLineSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line switch is not yet implemented.
        /// </summary>
        internal static string WRN_UnimplementedCommandLineSwitch_Title {
            get {
                return ResourceManager.GetString("WRN_UnimplementedCommandLineSwitch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on &apos;{1}&apos; has a paramref tag for &apos;{0}&apos;, but there is no parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedParamRefTag {
            get {
                return ResourceManager.GetString("WRN_UnmatchedParamRefTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a paramref tag, but there is no parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedParamRefTag_Title {
            get {
                return ResourceManager.GetString("WRN_UnmatchedParamRefTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a param tag for &apos;{0}&apos;, but there is no parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedParamTag {
            get {
                return ResourceManager.GetString("WRN_UnmatchedParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a param tag, but there is no parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_UnmatchedParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment on &apos;{1}&apos; has a typeparamref tag for &apos;{0}&apos;, but there is no type parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedTypeParamRefTag {
            get {
                return ResourceManager.GetString("WRN_UnmatchedTypeParamRefTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a typeparamref tag, but there is no type parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedTypeParamRefTag_Title {
            get {
                return ResourceManager.GetString("WRN_UnmatchedTypeParamRefTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a typeparam tag for &apos;{0}&apos;, but there is no type parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedTypeParamTag {
            get {
                return ResourceManager.GetString("WRN_UnmatchedTypeParamTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has a typeparam tag, but there is no type parameter by that name.
        /// </summary>
        internal static string WRN_UnmatchedTypeParamTag_Title {
            get {
                return ResourceManager.GetString("WRN_UnmatchedTypeParamTag_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the &apos;await&apos; operator to the result of the call..
        /// </summary>
        internal static string WRN_UnobservedAwaitableExpression {
            get {
                return ResourceManager.GetString("WRN_UnobservedAwaitableExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current method calls an async method that returns a Task or a Task&lt;TResult&gt; and doesn&apos;t apply the await operator to the result. The call to the async method starts an asynchronous task. However, because no await operator is applied, the program continues without waiting for the task to complete. In most cases, that behavior isn&apos;t what you expect. Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WRN_UnobservedAwaitableExpression_Description {
            get {
                return ResourceManager.GetString("WRN_UnobservedAwaitableExpression_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because this call is not awaited, execution of the current method continues before the call is completed.
        /// </summary>
        internal static string WRN_UnobservedAwaitableExpression_Title {
            get {
                return ResourceManager.GetString("WRN_UnobservedAwaitableExpression_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment is not placed on a valid language element.
        /// </summary>
        internal static string WRN_UnprocessedXMLComment {
            get {
                return ResourceManager.GetString("WRN_UnprocessedXMLComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment is not placed on a valid language element.
        /// </summary>
        internal static string WRN_UnprocessedXMLComment_Title {
            get {
                return ResourceManager.GetString("WRN_UnprocessedXMLComment_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Within cref attributes, nested types of generic types should be qualified..
        /// </summary>
        internal static string WRN_UnqualifiedNestedTypeInCref {
            get {
                return ResourceManager.GetString("WRN_UnqualifiedNestedTypeInCref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Within cref attributes, nested types of generic types should be qualified.
        /// </summary>
        internal static string WRN_UnqualifiedNestedTypeInCref_Title {
            get {
                return ResourceManager.GetString("WRN_UnqualifiedNestedTypeInCref_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable code detected.
        /// </summary>
        internal static string WRN_UnreachableCode {
            get {
                return ResourceManager.GetString("WRN_UnreachableCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unreachable code detected.
        /// </summary>
        internal static string WRN_UnreachableCode_Title {
            get {
                return ResourceManager.GetString("WRN_UnreachableCode_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous catch clause already catches all exceptions. All non-exceptions thrown will be wrapped in a System.Runtime.CompilerServices.RuntimeWrappedException..
        /// </summary>
        internal static string WRN_UnreachableGeneralCatch {
            get {
                return ResourceManager.GetString("WRN_UnreachableGeneralCatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This warning is caused when a catch() block has no specified exception type after a catch (System.Exception e) block. The warning advises that the catch() block will not catch any exceptions.
        ///
        ///A catch() block after a catch (System.Exception e) block can catch non-CLS exceptions if the RuntimeCompatibilityAttribute is set to false in the AssemblyInfo.cs file: [assembly: RuntimeCompatibilityAttribute(WrapNonExceptionThrows = false)]. If this attribute is not set explicitly to false, all thrown non-CLS excep [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WRN_UnreachableGeneralCatch_Description {
            get {
                return ResourceManager.GetString("WRN_UnreachableGeneralCatch_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous catch clause already catches all exceptions.
        /// </summary>
        internal static string WRN_UnreachableGeneralCatch_Title {
            get {
                return ResourceManager.GetString("WRN_UnreachableGeneralCatch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event &apos;{0}&apos; is never used.
        /// </summary>
        internal static string WRN_UnreferencedEvent {
            get {
                return ResourceManager.GetString("WRN_UnreferencedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event is never used.
        /// </summary>
        internal static string WRN_UnreferencedEvent_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedEvent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &apos;{0}&apos; is never used.
        /// </summary>
        internal static string WRN_UnreferencedField {
            get {
                return ResourceManager.GetString("WRN_UnreferencedField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field is never used.
        /// </summary>
        internal static string WRN_UnreferencedField_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedField_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field &apos;{0}&apos; is assigned but its value is never used.
        /// </summary>
        internal static string WRN_UnreferencedFieldAssg {
            get {
                return ResourceManager.GetString("WRN_UnreferencedFieldAssg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field is assigned but its value is never used.
        /// </summary>
        internal static string WRN_UnreferencedFieldAssg_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedFieldAssg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This label has not been referenced.
        /// </summary>
        internal static string WRN_UnreferencedLabel {
            get {
                return ResourceManager.GetString("WRN_UnreferencedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This label has not been referenced.
        /// </summary>
        internal static string WRN_UnreferencedLabel_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedLabel_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable &apos;{0}&apos; is declared but never used.
        /// </summary>
        internal static string WRN_UnreferencedVar {
            get {
                return ResourceManager.GetString("WRN_UnreferencedVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable is declared but never used.
        /// </summary>
        internal static string WRN_UnreferencedVar_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedVar_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable &apos;{0}&apos; is assigned but its value is never used.
        /// </summary>
        internal static string WRN_UnreferencedVarAssg {
            get {
                return ResourceManager.GetString("WRN_UnreferencedVarAssg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable is assigned but its value is never used.
        /// </summary>
        internal static string WRN_UnreferencedVarAssg_Title {
            get {
                return ResourceManager.GetString("WRN_UnreferencedVarAssg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison to integral constant is useless; the constant is outside the range of type &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_VacuousIntegralComp {
            get {
                return ResourceManager.GetString("WRN_VacuousIntegralComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparison to integral constant is useless; the constant is outside the range of the type.
        /// </summary>
        internal static string WRN_VacuousIntegralComp_Title {
            get {
                return ResourceManager.GetString("WRN_VacuousIntegralComp_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: a reference to a volatile field will not be treated as volatile.
        /// </summary>
        internal static string WRN_VolatileByRef {
            get {
                return ResourceManager.GetString("WRN_VolatileByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A volatile field should not normally be used as a ref or out value, since it will not be treated as volatile. There are exceptions to this, such as when calling an interlocked API..
        /// </summary>
        internal static string WRN_VolatileByRef_Description {
            get {
                return ResourceManager.GetString("WRN_VolatileByRef_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference to a volatile field will not be treated as volatile.
        /// </summary>
        internal static string WRN_VolatileByRef_Title {
            get {
                return ResourceManager.GetString("WRN_VolatileByRef_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #warning: &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_WarningDirective {
            get {
                return ResourceManager.GetString("WRN_WarningDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #warning directive.
        /// </summary>
        internal static string WRN_WarningDirective_Title {
            get {
                return ResourceManager.GetString("WRN_WarningDirective_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has badly formed XML -- &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_XMLParseError {
            get {
                return ResourceManager.GetString("WRN_XMLParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML comment has badly formed XML.
        /// </summary>
        internal static string WRN_XMLParseError_Title {
            get {
                return ResourceManager.GetString("WRN_XMLParseError_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Badly formed XML in included comments file -- &apos;{0}&apos;.
        /// </summary>
        internal static string WRN_XMLParseIncludeError {
            get {
                return ResourceManager.GetString("WRN_XMLParseIncludeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Badly formed XML in included comments file.
        /// </summary>
        internal static string WRN_XMLParseIncludeError_Title {
            get {
                return ResourceManager.GetString("WRN_XMLParseIncludeError_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong number of type arguments.
        /// </summary>
        internal static string WrongNumberOfTypeArguments {
            get {
                return ResourceManager.GetString("WrongNumberOfTypeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a {0} SemanticModel..
        /// </summary>
        internal static string WrongSemanticModelType {
            get {
                return ResourceManager.GetString("WrongSemanticModelType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The literal string &apos;]]&gt;&apos; is not allowed in element content..
        /// </summary>
        internal static string XML_CDataEndTagNotAllowed {
            get {
                return ResourceManager.GetString("XML_CDataEndTagNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &apos;{0}&apos; attribute.
        /// </summary>
        internal static string XML_DuplicateAttribute {
            get {
                return ResourceManager.GetString("XML_DuplicateAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End tag &apos;{0}&apos; does not match the start tag &apos;{1}&apos;..
        /// </summary>
        internal static string XML_ElementTypeMatch {
            get {
                return ResourceManager.GetString("XML_ElementTypeMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected an end tag for element &apos;{0}&apos;..
        /// </summary>
        internal static string XML_EndTagExpected {
            get {
                return ResourceManager.GetString("XML_EndTagExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End tag was not expected at this location..
        /// </summary>
        internal static string XML_EndTagNotExpected {
            get {
                return ResourceManager.GetString("XML_EndTagNotExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected &apos;&gt;&apos; or &apos;/&gt;&apos; to close tag &apos;{0}&apos;..
        /// </summary>
        internal static string XML_ExpectedEndOfTag {
            get {
                return ResourceManager.GetString("XML_ExpectedEndOfTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected character at this location..
        /// </summary>
        internal static string XML_ExpectedEndOfXml {
            get {
                return ResourceManager.GetString("XML_ExpectedEndOfXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An identifier was expected..
        /// </summary>
        internal static string XML_ExpectedIdentifier {
            get {
                return ResourceManager.GetString("XML_ExpectedIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect syntax was used in a comment..
        /// </summary>
        internal static string XML_IncorrectComment {
            get {
                return ResourceManager.GetString("XML_IncorrectComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid character was found inside an entity reference..
        /// </summary>
        internal static string XML_InvalidCharEntity {
            get {
                return ResourceManager.GetString("XML_InvalidCharEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character(s) &apos;{0}&apos; cannot be used at this location..
        /// </summary>
        internal static string XML_InvalidToken {
            get {
                return ResourceManager.GetString("XML_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid unicode character..
        /// </summary>
        internal static string XML_InvalidUnicodeChar {
            get {
                return ResourceManager.GetString("XML_InvalidUnicodeChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whitespace is not allowed at this location..
        /// </summary>
        internal static string XML_InvalidWhitespace {
            get {
                return ResourceManager.GetString("XML_InvalidWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character &apos;&lt;&apos; cannot be used in an attribute value..
        /// </summary>
        internal static string XML_LessThanInAttributeValue {
            get {
                return ResourceManager.GetString("XML_LessThanInAttributeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing equals sign between attribute and attribute value..
        /// </summary>
        internal static string XML_MissingEqualsAttribute {
            get {
                return ResourceManager.GetString("XML_MissingEqualsAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference to undefined entity &apos;{0}&apos;..
        /// </summary>
        internal static string XML_RefUndefinedEntity_1 {
            get {
                return ResourceManager.GetString("XML_RefUndefinedEntity_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing closing quotation mark for string literal..
        /// </summary>
        internal static string XML_StringLiteralNoEndQuote {
            get {
                return ResourceManager.GetString("XML_StringLiteralNoEndQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-ASCII quotations marks may not be used around string literals..
        /// </summary>
        internal static string XML_StringLiteralNonAsciiQuote {
            get {
                return ResourceManager.GetString("XML_StringLiteralNonAsciiQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string literal was expected, but no opening quotation mark was found..
        /// </summary>
        internal static string XML_StringLiteralNoStartQuote {
            get {
                return ResourceManager.GetString("XML_StringLiteralNoStartQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required white space was missing..
        /// </summary>
        internal static string XML_WhitespaceMissing {
            get {
                return ResourceManager.GetString("XML_WhitespaceMissing", resourceCulture);
            }
        }
    }
}
