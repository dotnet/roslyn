using Roslyn.Utilities;
namespace Microsoft.CodeAnalysis.CSharp
{
    internal static partial class ErrorFacts
    {
        public static bool IsWarning(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.WRN_InvalidMainSig:
                case ErrorCode.WRN_UnreferencedEvent:
                case ErrorCode.WRN_LowercaseEllSuffix:
                case ErrorCode.WRN_DuplicateUsing:
                case ErrorCode.WRN_NewRequired:
                case ErrorCode.WRN_NewNotRequired:
                case ErrorCode.WRN_NewOrOverrideExpected:
                case ErrorCode.WRN_UnreachableCode:
                case ErrorCode.WRN_UnreferencedLabel:
                case ErrorCode.WRN_UnreferencedVar:
                case ErrorCode.WRN_UnreferencedField:
                case ErrorCode.WRN_IsAlwaysTrue:
                case ErrorCode.WRN_IsAlwaysFalse:
                case ErrorCode.WRN_ByRefNonAgileField:
                case ErrorCode.WRN_UnreferencedVarAssg:
                case ErrorCode.WRN_NegativeArrayIndex:
                case ErrorCode.WRN_BadRefCompareLeft:
                case ErrorCode.WRN_BadRefCompareRight:
                case ErrorCode.WRN_PatternIsAmbiguous:
                case ErrorCode.WRN_PatternNotPublicOrNotInstance:
                case ErrorCode.WRN_PatternBadSignature:
                case ErrorCode.WRN_SequentialOnPartialClass:
                case ErrorCode.WRN_MainCantBeGeneric:
                case ErrorCode.WRN_UnreferencedFieldAssg:
                case ErrorCode.WRN_AmbiguousXMLReference:
                case ErrorCode.WRN_VolatileByRef:
                case ErrorCode.WRN_SameFullNameThisNsAgg:
                case ErrorCode.WRN_SameFullNameThisAggAgg:
                case ErrorCode.WRN_SameFullNameThisAggNs:
                case ErrorCode.WRN_GlobalAliasDefn:
                case ErrorCode.WRN_AlwaysNull:
                case ErrorCode.WRN_CmpAlwaysFalse:
                case ErrorCode.WRN_FinalizeMethod:
                case ErrorCode.WRN_GotoCaseShouldConvert:
                case ErrorCode.WRN_NubExprIsConstBool:
                case ErrorCode.WRN_ExplicitImplCollision:
                case ErrorCode.WRN_DeprecatedSymbol:
                case ErrorCode.WRN_DeprecatedSymbolStr:
                case ErrorCode.WRN_ExternMethodNoImplementation:
                case ErrorCode.WRN_ProtectedInSealed:
                case ErrorCode.WRN_PossibleMistakenNullStatement:
                case ErrorCode.WRN_UnassignedInternalField:
                case ErrorCode.WRN_VacuousIntegralComp:
                case ErrorCode.WRN_AttributeLocationOnBadDeclaration:
                case ErrorCode.WRN_InvalidAttributeLocation:
                case ErrorCode.WRN_EqualsWithoutGetHashCode:
                case ErrorCode.WRN_EqualityOpWithoutEquals:
                case ErrorCode.WRN_EqualityOpWithoutGetHashCode:
                case ErrorCode.WRN_IncorrectBooleanAssg:
                case ErrorCode.WRN_NonObsoleteOverridingObsolete:
                case ErrorCode.WRN_BitwiseOrSignExtend:
                case ErrorCode.WRN_CoClassWithoutComImport:
                case ErrorCode.WRN_TypeParameterSameAsOuterTypeParameter:
                case ErrorCode.WRN_AssignmentToLockOrDispose:
                case ErrorCode.WRN_ObsoleteOverridingNonObsolete:
                case ErrorCode.WRN_DebugFullNameTooLong:
                case ErrorCode.WRN_ExternCtorNoImplementation:
                case ErrorCode.WRN_WarningDirective:
                case ErrorCode.WRN_UnreachableGeneralCatch:
                case ErrorCode.WRN_DeprecatedCollectionInitAddStr:
                case ErrorCode.WRN_DeprecatedCollectionInitAdd:
                case ErrorCode.WRN_DefaultValueForUnconsumedLocation:
                case ErrorCode.WRN_IdentifierOrNumericLiteralExpected:
                case ErrorCode.WRN_EmptySwitch:
                case ErrorCode.WRN_XMLParseError:
                case ErrorCode.WRN_DuplicateParamTag:
                case ErrorCode.WRN_UnmatchedParamTag:
                case ErrorCode.WRN_MissingParamTag:
                case ErrorCode.WRN_BadXMLRef:
                case ErrorCode.WRN_BadXMLRefParamType:
                case ErrorCode.WRN_BadXMLRefReturnType:
                case ErrorCode.WRN_BadXMLRefSyntax:
                case ErrorCode.WRN_UnprocessedXMLComment:
                case ErrorCode.WRN_FailedInclude:
                case ErrorCode.WRN_InvalidInclude:
                case ErrorCode.WRN_MissingXMLComment:
                case ErrorCode.WRN_XMLParseIncludeError:
                case ErrorCode.WRN_ALinkWarn:
                case ErrorCode.WRN_CmdOptionConflictsSource:
                case ErrorCode.WRN_IllegalPragma:
                case ErrorCode.WRN_IllegalPPWarning:
                case ErrorCode.WRN_BadRestoreNumber:
                case ErrorCode.WRN_NonECMAFeature:
                case ErrorCode.WRN_ErrorOverride:
                case ErrorCode.WRN_InvalidSearchPathDir:
                case ErrorCode.WRN_MultiplePredefTypes:
                case ErrorCode.WRN_TooManyLinesForDebugger:
                case ErrorCode.WRN_CallOnNonAgileField:
                case ErrorCode.WRN_InvalidNumber:
                case ErrorCode.WRN_IllegalPPChecksum:
                case ErrorCode.WRN_EndOfPPLineExpected:
                case ErrorCode.WRN_ConflictingChecksum:
                case ErrorCode.WRN_InvalidAssemblyName:
                case ErrorCode.WRN_UnifyReferenceMajMin:
                case ErrorCode.WRN_UnifyReferenceBldRev:
                case ErrorCode.WRN_DuplicateTypeParamTag:
                case ErrorCode.WRN_UnmatchedTypeParamTag:
                case ErrorCode.WRN_MissingTypeParamTag:
                case ErrorCode.WRN_AssignmentToSelf:
                case ErrorCode.WRN_ComparisonToSelf:
                case ErrorCode.WRN_DotOnDefault:
                case ErrorCode.WRN_BadXMLRefTypeVar:
                case ErrorCode.WRN_UnmatchedParamRefTag:
                case ErrorCode.WRN_UnmatchedTypeParamRefTag:
                case ErrorCode.WRN_ReferencedAssemblyReferencesLinkedPIA:
                case ErrorCode.WRN_CantHaveManifestForModule:
                case ErrorCode.WRN_MultipleRuntimeImplementationMatches:
                case ErrorCode.WRN_MultipleRuntimeOverrideMatches:
                case ErrorCode.WRN_DynamicDispatchToConditionalMethod:
                case ErrorCode.WRN_IsDynamicIsConfusing:
                case ErrorCode.WRN_AsyncLacksAwaits:
                case ErrorCode.WRN_FileAlreadyIncluded:
                case ErrorCode.WRN_NoSources:
                case ErrorCode.WRN_NoConfigNotOnCommandLine:
                case ErrorCode.WRN_DefineIdentifierRequired:
                case ErrorCode.WRN_BadUILang:
                case ErrorCode.WRN_CLS_NoVarArgs:
                case ErrorCode.WRN_CLS_BadArgType:
                case ErrorCode.WRN_CLS_BadReturnType:
                case ErrorCode.WRN_CLS_BadFieldPropType:
                case ErrorCode.WRN_CLS_BadIdentifierCase:
                case ErrorCode.WRN_CLS_OverloadRefOut:
                case ErrorCode.WRN_CLS_OverloadUnnamed:
                case ErrorCode.WRN_CLS_BadIdentifier:
                case ErrorCode.WRN_CLS_BadBase:
                case ErrorCode.WRN_CLS_BadInterfaceMember:
                case ErrorCode.WRN_CLS_NoAbstractMembers:
                case ErrorCode.WRN_CLS_NotOnModules:
                case ErrorCode.WRN_CLS_ModuleMissingCLS:
                case ErrorCode.WRN_CLS_AssemblyNotCLS:
                case ErrorCode.WRN_CLS_BadAttributeType:
                case ErrorCode.WRN_CLS_ArrayArgumentToAttribute:
                case ErrorCode.WRN_CLS_NotOnModules2:
                case ErrorCode.WRN_CLS_IllegalTrueInFalse:
                case ErrorCode.WRN_CLS_MeaninglessOnPrivateType:
                case ErrorCode.WRN_CLS_AssemblyNotCLS2:
                case ErrorCode.WRN_CLS_MeaninglessOnParam:
                case ErrorCode.WRN_CLS_MeaninglessOnReturn:
                case ErrorCode.WRN_CLS_BadTypeVar:
                case ErrorCode.WRN_CLS_VolatileField:
                case ErrorCode.WRN_CLS_BadInterface:
                case ErrorCode.WRN_UnobservedAwaitableExpression:
                case ErrorCode.WRN_CallerLineNumberParamForUnconsumedLocation:
                case ErrorCode.WRN_CallerFilePathParamForUnconsumedLocation:
                case ErrorCode.WRN_CallerMemberNameParamForUnconsumedLocation:
                case ErrorCode.WRN_MainIgnored:
                case ErrorCode.WRN_StaticInAsOrIs:
                case ErrorCode.WRN_DelaySignButNoKey:
                case ErrorCode.WRN_InvalidVersionFormat:
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerMemberName:
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerMemberName:
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerFilePath:
                case ErrorCode.WRN_AssemblyAttributeFromModuleIsOverridden:
                case ErrorCode.WRN_FilterIsConstantTrue:
                case ErrorCode.WRN_UnimplementedCommandLineSwitch:
                case ErrorCode.WRN_ReferencedAssemblyDoesNotHaveStrongName:
                case ErrorCode.WRN_RefCultureMismatch:
                case ErrorCode.WRN_ConflictingMachineAssembly:
                case ErrorCode.WRN_UnqualifiedNestedTypeInCref:
                case ErrorCode.WRN_NoRuntimeMetadataVersion:
                case ErrorCode.WRN_PdbLocalNameTooLong:
                case ErrorCode.WRN_AnalyzerCannotBeCreated:
                case ErrorCode.WRN_NoAnalyzerInAssembly:
                case ErrorCode.WRN_UnableToLoadAnalyzer:
                case ErrorCode.WRN_NubExprIsConstBool2:
                case ErrorCode.WRN_AlignmentMagnitude:
                case ErrorCode.WRN_AttributeIgnoredWhenPublicSigning:
                case ErrorCode.WRN_TupleLiteralNameMismatch:
                case ErrorCode.WRN_WindowsExperimental:
                case ErrorCode.WRN_UnreferencedLocalFunction:
                case ErrorCode.WRN_FilterIsConstantFalse:
                case ErrorCode.WRN_FilterIsConstantFalseRedundantTryCatch:
                case ErrorCode.WRN_AttributesOnBackingFieldsNotAvailable:
                case ErrorCode.WRN_TupleBinopLiteralNameMismatch:
                case ErrorCode.WRN_TypeParameterSameAsOuterMethodTypeParameter:
                case ErrorCode.WRN_UnconsumedEnumeratorCancellationAttributeUsage:
                case ErrorCode.WRN_UndecoratedCancellationTokenParameter:
                case ErrorCode.WRN_ManagedAddr:
                case ErrorCode.WRN_SwitchExpressionNotExhaustive:
                case ErrorCode.WRN_CaseConstantNamedUnderscore:
                case ErrorCode.WRN_IsTypeNamedUnderscore:
                case ErrorCode.WRN_GivenExpressionNeverMatchesPattern:
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesConstant:
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue:
                case ErrorCode.WRN_ThrowPossibleNull:
                case ErrorCode.WRN_ConvertingNullableToNonNullable:
                case ErrorCode.WRN_NullReferenceAssignment:
                case ErrorCode.WRN_NullReferenceReceiver:
                case ErrorCode.WRN_NullReferenceReturn:
                case ErrorCode.WRN_NullReferenceArgument:
                case ErrorCode.WRN_UnboxPossibleNull:
                case ErrorCode.WRN_DisallowNullAttributeForbidsMaybeNullAssignment:
                case ErrorCode.WRN_NullabilityMismatchInTypeOnOverride:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnOverride:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnOverride:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnPartial:
                case ErrorCode.WRN_NullabilityMismatchInTypeOnImplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInTypeOnExplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation:
                case ErrorCode.WRN_UninitializedNonNullableField:
                case ErrorCode.WRN_NullabilityMismatchInAssignment:
                case ErrorCode.WRN_NullabilityMismatchInArgument:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOfTargetDelegate:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate:
                case ErrorCode.WRN_NullabilityMismatchInArgumentForOutput:
                case ErrorCode.WRN_NullAsNonNullable:
                case ErrorCode.WRN_NullableValueTypeMayBeNull:
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterConstraint:
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotation:
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnImplicitImplementation:
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint:
                case ErrorCode.WRN_NullabilityMismatchInExplicitlyImplementedInterface:
                case ErrorCode.WRN_NullabilityMismatchInInterfaceImplementedByBase:
                case ErrorCode.WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList:
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNull:
                case ErrorCode.WRN_ImplicitCopyInReadOnlyMember:
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnPartialImplementation:
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode:
                case ErrorCode.WRN_NullReferenceInitializer:
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterNotNullConstraint:
                case ErrorCode.WRN_ParameterConditionallyDisallowsNull:
                case ErrorCode.WRN_ShouldNotReturn:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation:
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation:
                case ErrorCode.WRN_DoesNotReturnMismatch:
                case ErrorCode.WRN_MemberNotNull:
                case ErrorCode.WRN_MemberNotNullWhen:
                case ErrorCode.WRN_MemberNotNullBadMember:
                case ErrorCode.WRN_ParameterDisallowsNull:
                case ErrorCode.WRN_ConstOutOfRangeChecked:
                case ErrorCode.WRN_GeneratorFailedDuringInitialization:
                case ErrorCode.WRN_GeneratorFailedDuringGeneration:
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesPattern:
                case ErrorCode.WRN_IsPatternAlways:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnPartial:
                case ErrorCode.WRN_ParameterNotNullIfNotNull:
                case ErrorCode.WRN_ReturnNotNullIfNotNull:
                case ErrorCode.WRN_PartialMethodTypeDifference:
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithWhen:
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNullWithWhen:
                case ErrorCode.WRN_PrecedenceInversion:
                case ErrorCode.WRN_AnalyzerReferencesFramework:
                case ErrorCode.WRN_RecordEqualsWithoutGetHashCode:
                case ErrorCode.WRN_RecordNamedDisallowed:
                case ErrorCode.WRN_UnassignedThisAutoPropertyUnsupportedVersion:
                case ErrorCode.WRN_UnassignedThisUnsupportedVersion:
                case ErrorCode.WRN_ParamUnassigned:
                case ErrorCode.WRN_UseDefViolationProperty:
                case ErrorCode.WRN_UseDefViolationField:
                case ErrorCode.WRN_UseDefViolationThisUnsupportedVersion:
                case ErrorCode.WRN_UseDefViolationOut:
                case ErrorCode.WRN_UseDefViolation:
                case ErrorCode.WRN_SyncAndAsyncEntryPoints:
                case ErrorCode.WRN_ParameterIsStaticClass:
                case ErrorCode.WRN_ReturnTypeIsStaticClass:
                case ErrorCode.WRN_UnreadRecordParameter:
                case ErrorCode.WRN_DoNotCompareFunctionPointers:
                case ErrorCode.WRN_ParameterOccursAfterInterpolatedStringHandlerParameter:
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerArgumentExpression:
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerArgumentExpression:
                case ErrorCode.WRN_CallerMemberNamePreferredOverCallerArgumentExpression:
                case ErrorCode.WRN_CallerArgumentExpressionAttributeHasInvalidParameterName:
                case ErrorCode.WRN_CallerArgumentExpressionAttributeSelfReferential:
                case ErrorCode.WRN_CallerArgumentExpressionParamForUnconsumedLocation:
                case ErrorCode.WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters:
                case ErrorCode.WRN_CompileTimeCheckedOverflow:
                case ErrorCode.WRN_MethGrpToNonDel:
                case ErrorCode.WRN_LowerCaseTypeName:
                case ErrorCode.WRN_UseDefViolationPropertyUnsupportedVersion:
                case ErrorCode.WRN_UseDefViolationFieldUnsupportedVersion:
                case ErrorCode.WRN_UseDefViolationPropertySupportedVersion:
                case ErrorCode.WRN_UseDefViolationFieldSupportedVersion:
                case ErrorCode.WRN_UseDefViolationThisSupportedVersion:
                case ErrorCode.WRN_UnassignedThisAutoPropertySupportedVersion:
                case ErrorCode.WRN_UnassignedThisSupportedVersion:
                case ErrorCode.WRN_ObsoleteMembersShouldNotBeRequired:
                case ErrorCode.WRN_AnalyzerReferencesNewerCompiler:
                case ErrorCode.WRN_DuplicateAnalyzerReference:
                case ErrorCode.WRN_ScopedMismatchInParameterOfTarget:
                case ErrorCode.WRN_ScopedMismatchInParameterOfOverrideOrImplementation:
                case ErrorCode.WRN_EscapeVariable:
                case ErrorCode.WRN_EscapeStackAlloc:
                case ErrorCode.WRN_RefReturnNonreturnableLocal:
                case ErrorCode.WRN_RefReturnNonreturnableLocal2:
                case ErrorCode.WRN_RefReturnStructThis:
                case ErrorCode.WRN_RefAssignNarrower:
                case ErrorCode.WRN_MismatchedRefEscapeInTernary:
                case ErrorCode.WRN_RefReturnParameter:
                case ErrorCode.WRN_RefReturnScopedParameter:
                case ErrorCode.WRN_RefReturnParameter2:
                case ErrorCode.WRN_RefReturnScopedParameter2:
                case ErrorCode.WRN_RefReturnLocal:
                case ErrorCode.WRN_RefReturnLocal2:
                case ErrorCode.WRN_RefAssignReturnOnly:
                case ErrorCode.WRN_RefReturnOnlyParameter:
                case ErrorCode.WRN_RefReturnOnlyParameter2:
                case ErrorCode.WRN_RefAssignValEscapeWider:
                case ErrorCode.WRN_OptionalParamValueMismatch:
                case ErrorCode.WRN_ParamsArrayInLambdaOnly:
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterPassedToBase:
                case ErrorCode.WRN_UnreadPrimaryConstructorParameter:
                case ErrorCode.WRN_AddressOfInAsync:
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterInFieldInitializer:
                case ErrorCode.WRN_ByValArraySizeConstRequired:
                case ErrorCode.WRN_InterceptorSignatureMismatch:
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnInterceptor:
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnInterceptor:
                case ErrorCode.WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase:
                case ErrorCode.WRN_InlineArrayIndexerNotUsed:
                case ErrorCode.WRN_InlineArraySliceNotUsed:
                case ErrorCode.WRN_InlineArrayConversionOperatorNotUsed:
                case ErrorCode.WRN_InlineArrayNotSupportedByLanguage:
                case ErrorCode.WRN_BadArgRef:
                case ErrorCode.WRN_ArgExpectedRefOrIn:
                case ErrorCode.WRN_RefReadonlyNotVariable:
                case ErrorCode.WRN_ArgExpectedIn:
                case ErrorCode.WRN_OverridingDifferentRefness:
                case ErrorCode.WRN_HidingDifferentRefness:
                case ErrorCode.WRN_TargetDifferentRefness:
                case ErrorCode.WRN_RefReadonlyParameterDefaultValue:
                case ErrorCode.WRN_UseDefViolationRefField:
                case ErrorCode.WRN_Experimental:
                case ErrorCode.WRN_CollectionExpressionRefStructMayAllocate:
                case ErrorCode.WRN_CollectionExpressionRefStructSpreadMayAllocate:
                case ErrorCode.WRN_ConvertingLock:
                case ErrorCode.WRN_PartialPropertySignatureDifference:
                    return true;
                default:
                    return false;
            }
        }

        public static bool IsFatal(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.FTL_MetadataCantOpenFile:
                case ErrorCode.FTL_DebugEmitFailure:
                case ErrorCode.FTL_BadCodepage:
                case ErrorCode.FTL_InvalidTarget:
                case ErrorCode.FTL_InvalidInputFileName:
                case ErrorCode.FTL_OutputFileExists:
                case ErrorCode.FTL_BadChecksumAlgorithm:
                    return true;
                default:
                    return false;
            }
        }

        public static bool IsInfo(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.INF_UnableToLoadSomeTypesInAnalyzer:
                case ErrorCode.INF_TooManyBoundLambdas:
                case ErrorCode.INF_IdentifierConflictWithContextualKeyword:
                    return true;
                default:
                    return false;
            }
        }

        public static bool IsHidden(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.HDN_UnusedUsingDirective:
                case ErrorCode.HDN_UnusedExternAlias:
                case ErrorCode.HDN_DuplicateWithGlobalUsing:
                    return true;
                default:
                    return false;
            }
        }
        public static string ToString(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.WRN_InvalidMainSig: return "WRN_InvalidMainSig";
                case ErrorCode.WRN_UnreferencedEvent: return "WRN_UnreferencedEvent";
                case ErrorCode.WRN_LowercaseEllSuffix: return "WRN_LowercaseEllSuffix";
                case ErrorCode.WRN_DuplicateUsing: return "WRN_DuplicateUsing";
                case ErrorCode.WRN_NewRequired: return "WRN_NewRequired";
                case ErrorCode.WRN_NewNotRequired: return "WRN_NewNotRequired";
                case ErrorCode.WRN_NewOrOverrideExpected: return "WRN_NewOrOverrideExpected";
                case ErrorCode.WRN_UnreachableCode: return "WRN_UnreachableCode";
                case ErrorCode.WRN_UnreferencedLabel: return "WRN_UnreferencedLabel";
                case ErrorCode.WRN_UnreferencedVar: return "WRN_UnreferencedVar";
                case ErrorCode.WRN_UnreferencedField: return "WRN_UnreferencedField";
                case ErrorCode.WRN_IsAlwaysTrue: return "WRN_IsAlwaysTrue";
                case ErrorCode.WRN_IsAlwaysFalse: return "WRN_IsAlwaysFalse";
                case ErrorCode.WRN_ByRefNonAgileField: return "WRN_ByRefNonAgileField";
                case ErrorCode.WRN_UnreferencedVarAssg: return "WRN_UnreferencedVarAssg";
                case ErrorCode.WRN_NegativeArrayIndex: return "WRN_NegativeArrayIndex";
                case ErrorCode.WRN_BadRefCompareLeft: return "WRN_BadRefCompareLeft";
                case ErrorCode.WRN_BadRefCompareRight: return "WRN_BadRefCompareRight";
                case ErrorCode.WRN_PatternIsAmbiguous: return "WRN_PatternIsAmbiguous";
                case ErrorCode.WRN_PatternNotPublicOrNotInstance: return "WRN_PatternNotPublicOrNotInstance";
                case ErrorCode.WRN_PatternBadSignature: return "WRN_PatternBadSignature";
                case ErrorCode.WRN_SequentialOnPartialClass: return "WRN_SequentialOnPartialClass";
                case ErrorCode.WRN_MainCantBeGeneric: return "WRN_MainCantBeGeneric";
                case ErrorCode.WRN_UnreferencedFieldAssg: return "WRN_UnreferencedFieldAssg";
                case ErrorCode.WRN_AmbiguousXMLReference: return "WRN_AmbiguousXMLReference";
                case ErrorCode.WRN_VolatileByRef: return "WRN_VolatileByRef";
                case ErrorCode.WRN_SameFullNameThisNsAgg: return "WRN_SameFullNameThisNsAgg";
                case ErrorCode.WRN_SameFullNameThisAggAgg: return "WRN_SameFullNameThisAggAgg";
                case ErrorCode.WRN_SameFullNameThisAggNs: return "WRN_SameFullNameThisAggNs";
                case ErrorCode.WRN_GlobalAliasDefn: return "WRN_GlobalAliasDefn";
                case ErrorCode.WRN_AlwaysNull: return "WRN_AlwaysNull";
                case ErrorCode.WRN_CmpAlwaysFalse: return "WRN_CmpAlwaysFalse";
                case ErrorCode.WRN_FinalizeMethod: return "WRN_FinalizeMethod";
                case ErrorCode.WRN_GotoCaseShouldConvert: return "WRN_GotoCaseShouldConvert";
                case ErrorCode.WRN_NubExprIsConstBool: return "WRN_NubExprIsConstBool";
                case ErrorCode.WRN_ExplicitImplCollision: return "WRN_ExplicitImplCollision";
                case ErrorCode.WRN_DeprecatedSymbol: return "WRN_DeprecatedSymbol";
                case ErrorCode.WRN_DeprecatedSymbolStr: return "WRN_DeprecatedSymbolStr";
                case ErrorCode.WRN_ExternMethodNoImplementation: return "WRN_ExternMethodNoImplementation";
                case ErrorCode.WRN_ProtectedInSealed: return "WRN_ProtectedInSealed";
                case ErrorCode.WRN_PossibleMistakenNullStatement: return "WRN_PossibleMistakenNullStatement";
                case ErrorCode.WRN_UnassignedInternalField: return "WRN_UnassignedInternalField";
                case ErrorCode.WRN_VacuousIntegralComp: return "WRN_VacuousIntegralComp";
                case ErrorCode.WRN_AttributeLocationOnBadDeclaration: return "WRN_AttributeLocationOnBadDeclaration";
                case ErrorCode.WRN_InvalidAttributeLocation: return "WRN_InvalidAttributeLocation";
                case ErrorCode.WRN_EqualsWithoutGetHashCode: return "WRN_EqualsWithoutGetHashCode";
                case ErrorCode.WRN_EqualityOpWithoutEquals: return "WRN_EqualityOpWithoutEquals";
                case ErrorCode.WRN_EqualityOpWithoutGetHashCode: return "WRN_EqualityOpWithoutGetHashCode";
                case ErrorCode.WRN_IncorrectBooleanAssg: return "WRN_IncorrectBooleanAssg";
                case ErrorCode.WRN_NonObsoleteOverridingObsolete: return "WRN_NonObsoleteOverridingObsolete";
                case ErrorCode.WRN_BitwiseOrSignExtend: return "WRN_BitwiseOrSignExtend";
                case ErrorCode.WRN_CoClassWithoutComImport: return "WRN_CoClassWithoutComImport";
                case ErrorCode.WRN_TypeParameterSameAsOuterTypeParameter: return "WRN_TypeParameterSameAsOuterTypeParameter";
                case ErrorCode.WRN_AssignmentToLockOrDispose: return "WRN_AssignmentToLockOrDispose";
                case ErrorCode.WRN_ObsoleteOverridingNonObsolete: return "WRN_ObsoleteOverridingNonObsolete";
                case ErrorCode.WRN_DebugFullNameTooLong: return "WRN_DebugFullNameTooLong";
                case ErrorCode.WRN_ExternCtorNoImplementation: return "WRN_ExternCtorNoImplementation";
                case ErrorCode.WRN_WarningDirective: return "WRN_WarningDirective";
                case ErrorCode.WRN_UnreachableGeneralCatch: return "WRN_UnreachableGeneralCatch";
                case ErrorCode.WRN_DeprecatedCollectionInitAddStr: return "WRN_DeprecatedCollectionInitAddStr";
                case ErrorCode.WRN_DeprecatedCollectionInitAdd: return "WRN_DeprecatedCollectionInitAdd";
                case ErrorCode.WRN_DefaultValueForUnconsumedLocation: return "WRN_DefaultValueForUnconsumedLocation";
                case ErrorCode.WRN_IdentifierOrNumericLiteralExpected: return "WRN_IdentifierOrNumericLiteralExpected";
                case ErrorCode.WRN_EmptySwitch: return "WRN_EmptySwitch";
                case ErrorCode.WRN_XMLParseError: return "WRN_XMLParseError";
                case ErrorCode.WRN_DuplicateParamTag: return "WRN_DuplicateParamTag";
                case ErrorCode.WRN_UnmatchedParamTag: return "WRN_UnmatchedParamTag";
                case ErrorCode.WRN_MissingParamTag: return "WRN_MissingParamTag";
                case ErrorCode.WRN_BadXMLRef: return "WRN_BadXMLRef";
                case ErrorCode.WRN_BadXMLRefParamType: return "WRN_BadXMLRefParamType";
                case ErrorCode.WRN_BadXMLRefReturnType: return "WRN_BadXMLRefReturnType";
                case ErrorCode.WRN_BadXMLRefSyntax: return "WRN_BadXMLRefSyntax";
                case ErrorCode.WRN_UnprocessedXMLComment: return "WRN_UnprocessedXMLComment";
                case ErrorCode.WRN_FailedInclude: return "WRN_FailedInclude";
                case ErrorCode.WRN_InvalidInclude: return "WRN_InvalidInclude";
                case ErrorCode.WRN_MissingXMLComment: return "WRN_MissingXMLComment";
                case ErrorCode.WRN_XMLParseIncludeError: return "WRN_XMLParseIncludeError";
                case ErrorCode.WRN_ALinkWarn: return "WRN_ALinkWarn";
                case ErrorCode.WRN_CmdOptionConflictsSource: return "WRN_CmdOptionConflictsSource";
                case ErrorCode.WRN_IllegalPragma: return "WRN_IllegalPragma";
                case ErrorCode.WRN_IllegalPPWarning: return "WRN_IllegalPPWarning";
                case ErrorCode.WRN_BadRestoreNumber: return "WRN_BadRestoreNumber";
                case ErrorCode.WRN_NonECMAFeature: return "WRN_NonECMAFeature";
                case ErrorCode.WRN_ErrorOverride: return "WRN_ErrorOverride";
                case ErrorCode.WRN_InvalidSearchPathDir: return "WRN_InvalidSearchPathDir";
                case ErrorCode.WRN_MultiplePredefTypes: return "WRN_MultiplePredefTypes";
                case ErrorCode.WRN_TooManyLinesForDebugger: return "WRN_TooManyLinesForDebugger";
                case ErrorCode.WRN_CallOnNonAgileField: return "WRN_CallOnNonAgileField";
                case ErrorCode.WRN_InvalidNumber: return "WRN_InvalidNumber";
                case ErrorCode.WRN_IllegalPPChecksum: return "WRN_IllegalPPChecksum";
                case ErrorCode.WRN_EndOfPPLineExpected: return "WRN_EndOfPPLineExpected";
                case ErrorCode.WRN_ConflictingChecksum: return "WRN_ConflictingChecksum";
                case ErrorCode.WRN_InvalidAssemblyName: return "WRN_InvalidAssemblyName";
                case ErrorCode.WRN_UnifyReferenceMajMin: return "WRN_UnifyReferenceMajMin";
                case ErrorCode.WRN_UnifyReferenceBldRev: return "WRN_UnifyReferenceBldRev";
                case ErrorCode.WRN_DuplicateTypeParamTag: return "WRN_DuplicateTypeParamTag";
                case ErrorCode.WRN_UnmatchedTypeParamTag: return "WRN_UnmatchedTypeParamTag";
                case ErrorCode.WRN_MissingTypeParamTag: return "WRN_MissingTypeParamTag";
                case ErrorCode.WRN_AssignmentToSelf: return "WRN_AssignmentToSelf";
                case ErrorCode.WRN_ComparisonToSelf: return "WRN_ComparisonToSelf";
                case ErrorCode.WRN_DotOnDefault: return "WRN_DotOnDefault";
                case ErrorCode.WRN_BadXMLRefTypeVar: return "WRN_BadXMLRefTypeVar";
                case ErrorCode.WRN_UnmatchedParamRefTag: return "WRN_UnmatchedParamRefTag";
                case ErrorCode.WRN_UnmatchedTypeParamRefTag: return "WRN_UnmatchedTypeParamRefTag";
                case ErrorCode.WRN_ReferencedAssemblyReferencesLinkedPIA: return "WRN_ReferencedAssemblyReferencesLinkedPIA";
                case ErrorCode.WRN_CantHaveManifestForModule: return "WRN_CantHaveManifestForModule";
                case ErrorCode.WRN_MultipleRuntimeImplementationMatches: return "WRN_MultipleRuntimeImplementationMatches";
                case ErrorCode.WRN_MultipleRuntimeOverrideMatches: return "WRN_MultipleRuntimeOverrideMatches";
                case ErrorCode.WRN_DynamicDispatchToConditionalMethod: return "WRN_DynamicDispatchToConditionalMethod";
                case ErrorCode.WRN_IsDynamicIsConfusing: return "WRN_IsDynamicIsConfusing";
                case ErrorCode.WRN_AsyncLacksAwaits: return "WRN_AsyncLacksAwaits";
                case ErrorCode.WRN_FileAlreadyIncluded: return "WRN_FileAlreadyIncluded";
                case ErrorCode.WRN_NoSources: return "WRN_NoSources";
                case ErrorCode.WRN_NoConfigNotOnCommandLine: return "WRN_NoConfigNotOnCommandLine";
                case ErrorCode.WRN_DefineIdentifierRequired: return "WRN_DefineIdentifierRequired";
                case ErrorCode.WRN_BadUILang: return "WRN_BadUILang";
                case ErrorCode.WRN_CLS_NoVarArgs: return "WRN_CLS_NoVarArgs";
                case ErrorCode.WRN_CLS_BadArgType: return "WRN_CLS_BadArgType";
                case ErrorCode.WRN_CLS_BadReturnType: return "WRN_CLS_BadReturnType";
                case ErrorCode.WRN_CLS_BadFieldPropType: return "WRN_CLS_BadFieldPropType";
                case ErrorCode.WRN_CLS_BadIdentifierCase: return "WRN_CLS_BadIdentifierCase";
                case ErrorCode.WRN_CLS_OverloadRefOut: return "WRN_CLS_OverloadRefOut";
                case ErrorCode.WRN_CLS_OverloadUnnamed: return "WRN_CLS_OverloadUnnamed";
                case ErrorCode.WRN_CLS_BadIdentifier: return "WRN_CLS_BadIdentifier";
                case ErrorCode.WRN_CLS_BadBase: return "WRN_CLS_BadBase";
                case ErrorCode.WRN_CLS_BadInterfaceMember: return "WRN_CLS_BadInterfaceMember";
                case ErrorCode.WRN_CLS_NoAbstractMembers: return "WRN_CLS_NoAbstractMembers";
                case ErrorCode.WRN_CLS_NotOnModules: return "WRN_CLS_NotOnModules";
                case ErrorCode.WRN_CLS_ModuleMissingCLS: return "WRN_CLS_ModuleMissingCLS";
                case ErrorCode.WRN_CLS_AssemblyNotCLS: return "WRN_CLS_AssemblyNotCLS";
                case ErrorCode.WRN_CLS_BadAttributeType: return "WRN_CLS_BadAttributeType";
                case ErrorCode.WRN_CLS_ArrayArgumentToAttribute: return "WRN_CLS_ArrayArgumentToAttribute";
                case ErrorCode.WRN_CLS_NotOnModules2: return "WRN_CLS_NotOnModules2";
                case ErrorCode.WRN_CLS_IllegalTrueInFalse: return "WRN_CLS_IllegalTrueInFalse";
                case ErrorCode.WRN_CLS_MeaninglessOnPrivateType: return "WRN_CLS_MeaninglessOnPrivateType";
                case ErrorCode.WRN_CLS_AssemblyNotCLS2: return "WRN_CLS_AssemblyNotCLS2";
                case ErrorCode.WRN_CLS_MeaninglessOnParam: return "WRN_CLS_MeaninglessOnParam";
                case ErrorCode.WRN_CLS_MeaninglessOnReturn: return "WRN_CLS_MeaninglessOnReturn";
                case ErrorCode.WRN_CLS_BadTypeVar: return "WRN_CLS_BadTypeVar";
                case ErrorCode.WRN_CLS_VolatileField: return "WRN_CLS_VolatileField";
                case ErrorCode.WRN_CLS_BadInterface: return "WRN_CLS_BadInterface";
                case ErrorCode.WRN_UnobservedAwaitableExpression: return "WRN_UnobservedAwaitableExpression";
                case ErrorCode.WRN_CallerLineNumberParamForUnconsumedLocation: return "WRN_CallerLineNumberParamForUnconsumedLocation";
                case ErrorCode.WRN_CallerFilePathParamForUnconsumedLocation: return "WRN_CallerFilePathParamForUnconsumedLocation";
                case ErrorCode.WRN_CallerMemberNameParamForUnconsumedLocation: return "WRN_CallerMemberNameParamForUnconsumedLocation";
                case ErrorCode.WRN_MainIgnored: return "WRN_MainIgnored";
                case ErrorCode.WRN_StaticInAsOrIs: return "WRN_StaticInAsOrIs";
                case ErrorCode.WRN_DelaySignButNoKey: return "WRN_DelaySignButNoKey";
                case ErrorCode.WRN_InvalidVersionFormat: return "WRN_InvalidVersionFormat";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerMemberName: return "WRN_CallerFilePathPreferredOverCallerMemberName";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerMemberName: return "WRN_CallerLineNumberPreferredOverCallerMemberName";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerFilePath: return "WRN_CallerLineNumberPreferredOverCallerFilePath";
                case ErrorCode.WRN_AssemblyAttributeFromModuleIsOverridden: return "WRN_AssemblyAttributeFromModuleIsOverridden";
                case ErrorCode.WRN_FilterIsConstantTrue: return "WRN_FilterIsConstantTrue";
                case ErrorCode.WRN_UnimplementedCommandLineSwitch: return "WRN_UnimplementedCommandLineSwitch";
                case ErrorCode.WRN_ReferencedAssemblyDoesNotHaveStrongName: return "WRN_ReferencedAssemblyDoesNotHaveStrongName";
                case ErrorCode.WRN_RefCultureMismatch: return "WRN_RefCultureMismatch";
                case ErrorCode.WRN_ConflictingMachineAssembly: return "WRN_ConflictingMachineAssembly";
                case ErrorCode.WRN_UnqualifiedNestedTypeInCref: return "WRN_UnqualifiedNestedTypeInCref";
                case ErrorCode.WRN_NoRuntimeMetadataVersion: return "WRN_NoRuntimeMetadataVersion";
                case ErrorCode.WRN_PdbLocalNameTooLong: return "WRN_PdbLocalNameTooLong";
                case ErrorCode.WRN_AnalyzerCannotBeCreated: return "WRN_AnalyzerCannotBeCreated";
                case ErrorCode.WRN_NoAnalyzerInAssembly: return "WRN_NoAnalyzerInAssembly";
                case ErrorCode.WRN_UnableToLoadAnalyzer: return "WRN_UnableToLoadAnalyzer";
                case ErrorCode.WRN_NubExprIsConstBool2: return "WRN_NubExprIsConstBool2";
                case ErrorCode.WRN_AlignmentMagnitude: return "WRN_AlignmentMagnitude";
                case ErrorCode.WRN_AttributeIgnoredWhenPublicSigning: return "WRN_AttributeIgnoredWhenPublicSigning";
                case ErrorCode.WRN_TupleLiteralNameMismatch: return "WRN_TupleLiteralNameMismatch";
                case ErrorCode.WRN_WindowsExperimental: return "WRN_WindowsExperimental";
                case ErrorCode.WRN_UnreferencedLocalFunction: return "WRN_UnreferencedLocalFunction";
                case ErrorCode.WRN_FilterIsConstantFalse: return "WRN_FilterIsConstantFalse";
                case ErrorCode.WRN_FilterIsConstantFalseRedundantTryCatch: return "WRN_FilterIsConstantFalseRedundantTryCatch";
                case ErrorCode.WRN_AttributesOnBackingFieldsNotAvailable: return "WRN_AttributesOnBackingFieldsNotAvailable";
                case ErrorCode.WRN_TupleBinopLiteralNameMismatch: return "WRN_TupleBinopLiteralNameMismatch";
                case ErrorCode.WRN_TypeParameterSameAsOuterMethodTypeParameter: return "WRN_TypeParameterSameAsOuterMethodTypeParameter";
                case ErrorCode.WRN_UnconsumedEnumeratorCancellationAttributeUsage: return "WRN_UnconsumedEnumeratorCancellationAttributeUsage";
                case ErrorCode.WRN_UndecoratedCancellationTokenParameter: return "WRN_UndecoratedCancellationTokenParameter";
                case ErrorCode.WRN_ManagedAddr: return "WRN_ManagedAddr";
                case ErrorCode.WRN_SwitchExpressionNotExhaustive: return "WRN_SwitchExpressionNotExhaustive";
                case ErrorCode.WRN_CaseConstantNamedUnderscore: return "WRN_CaseConstantNamedUnderscore";
                case ErrorCode.WRN_IsTypeNamedUnderscore: return "WRN_IsTypeNamedUnderscore";
                case ErrorCode.WRN_GivenExpressionNeverMatchesPattern: return "WRN_GivenExpressionNeverMatchesPattern";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesConstant: return "WRN_GivenExpressionAlwaysMatchesConstant";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue: return "WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue";
                case ErrorCode.WRN_ThrowPossibleNull: return "WRN_ThrowPossibleNull";
                case ErrorCode.WRN_ConvertingNullableToNonNullable: return "WRN_ConvertingNullableToNonNullable";
                case ErrorCode.WRN_NullReferenceAssignment: return "WRN_NullReferenceAssignment";
                case ErrorCode.WRN_NullReferenceReceiver: return "WRN_NullReferenceReceiver";
                case ErrorCode.WRN_NullReferenceReturn: return "WRN_NullReferenceReturn";
                case ErrorCode.WRN_NullReferenceArgument: return "WRN_NullReferenceArgument";
                case ErrorCode.WRN_UnboxPossibleNull: return "WRN_UnboxPossibleNull";
                case ErrorCode.WRN_DisallowNullAttributeForbidsMaybeNullAssignment: return "WRN_DisallowNullAttributeForbidsMaybeNullAssignment";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnOverride: return "WRN_NullabilityMismatchInTypeOnOverride";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnOverride: return "WRN_NullabilityMismatchInReturnTypeOnOverride";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnOverride: return "WRN_NullabilityMismatchInParameterTypeOnOverride";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnPartial: return "WRN_NullabilityMismatchInParameterTypeOnPartial";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInTypeOnImplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInTypeOnExplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation";
                case ErrorCode.WRN_UninitializedNonNullableField: return "WRN_UninitializedNonNullableField";
                case ErrorCode.WRN_NullabilityMismatchInAssignment: return "WRN_NullabilityMismatchInAssignment";
                case ErrorCode.WRN_NullabilityMismatchInArgument: return "WRN_NullabilityMismatchInArgument";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOfTargetDelegate: return "WRN_NullabilityMismatchInReturnTypeOfTargetDelegate";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate: return "WRN_NullabilityMismatchInParameterTypeOfTargetDelegate";
                case ErrorCode.WRN_NullabilityMismatchInArgumentForOutput: return "WRN_NullabilityMismatchInArgumentForOutput";
                case ErrorCode.WRN_NullAsNonNullable: return "WRN_NullAsNonNullable";
                case ErrorCode.WRN_NullableValueTypeMayBeNull: return "WRN_NullableValueTypeMayBeNull";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterConstraint: return "WRN_NullabilityMismatchInTypeParameterConstraint";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotation: return "WRN_MissingNonNullTypesContextForAnnotation";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnImplicitImplementation: return "WRN_NullabilityMismatchInConstraintsOnImplicitImplementation";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint: return "WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint";
                case ErrorCode.WRN_NullabilityMismatchInExplicitlyImplementedInterface: return "WRN_NullabilityMismatchInExplicitlyImplementedInterface";
                case ErrorCode.WRN_NullabilityMismatchInInterfaceImplementedByBase: return "WRN_NullabilityMismatchInInterfaceImplementedByBase";
                case ErrorCode.WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList: return "WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNull: return "WRN_SwitchExpressionNotExhaustiveForNull";
                case ErrorCode.WRN_ImplicitCopyInReadOnlyMember: return "WRN_ImplicitCopyInReadOnlyMember";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnPartialImplementation: return "WRN_NullabilityMismatchInConstraintsOnPartialImplementation";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode: return "WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode";
                case ErrorCode.WRN_NullReferenceInitializer: return "WRN_NullReferenceInitializer";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterNotNullConstraint: return "WRN_NullabilityMismatchInTypeParameterNotNullConstraint";
                case ErrorCode.WRN_ParameterConditionallyDisallowsNull: return "WRN_ParameterConditionallyDisallowsNull";
                case ErrorCode.WRN_ShouldNotReturn: return "WRN_ShouldNotReturn";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation";
                case ErrorCode.WRN_DoesNotReturnMismatch: return "WRN_DoesNotReturnMismatch";
                case ErrorCode.WRN_MemberNotNull: return "WRN_MemberNotNull";
                case ErrorCode.WRN_MemberNotNullWhen: return "WRN_MemberNotNullWhen";
                case ErrorCode.WRN_MemberNotNullBadMember: return "WRN_MemberNotNullBadMember";
                case ErrorCode.WRN_ParameterDisallowsNull: return "WRN_ParameterDisallowsNull";
                case ErrorCode.WRN_ConstOutOfRangeChecked: return "WRN_ConstOutOfRangeChecked";
                case ErrorCode.WRN_GeneratorFailedDuringInitialization: return "WRN_GeneratorFailedDuringInitialization";
                case ErrorCode.WRN_GeneratorFailedDuringGeneration: return "WRN_GeneratorFailedDuringGeneration";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesPattern: return "WRN_GivenExpressionAlwaysMatchesPattern";
                case ErrorCode.WRN_IsPatternAlways: return "WRN_IsPatternAlways";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnPartial: return "WRN_NullabilityMismatchInReturnTypeOnPartial";
                case ErrorCode.WRN_ParameterNotNullIfNotNull: return "WRN_ParameterNotNullIfNotNull";
                case ErrorCode.WRN_ReturnNotNullIfNotNull: return "WRN_ReturnNotNullIfNotNull";
                case ErrorCode.WRN_PartialMethodTypeDifference: return "WRN_PartialMethodTypeDifference";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithWhen: return "WRN_SwitchExpressionNotExhaustiveWithWhen";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNullWithWhen: return "WRN_SwitchExpressionNotExhaustiveForNullWithWhen";
                case ErrorCode.WRN_PrecedenceInversion: return "WRN_PrecedenceInversion";
                case ErrorCode.WRN_AnalyzerReferencesFramework: return "WRN_AnalyzerReferencesFramework";
                case ErrorCode.WRN_RecordEqualsWithoutGetHashCode: return "WRN_RecordEqualsWithoutGetHashCode";
                case ErrorCode.WRN_RecordNamedDisallowed: return "WRN_RecordNamedDisallowed";
                case ErrorCode.WRN_UnassignedThisAutoPropertyUnsupportedVersion: return "WRN_UnassignedThisAutoPropertyUnsupportedVersion";
                case ErrorCode.WRN_UnassignedThisUnsupportedVersion: return "WRN_UnassignedThisUnsupportedVersion";
                case ErrorCode.WRN_ParamUnassigned: return "WRN_ParamUnassigned";
                case ErrorCode.WRN_UseDefViolationProperty: return "WRN_UseDefViolationProperty";
                case ErrorCode.WRN_UseDefViolationField: return "WRN_UseDefViolationField";
                case ErrorCode.WRN_UseDefViolationThisUnsupportedVersion: return "WRN_UseDefViolationThisUnsupportedVersion";
                case ErrorCode.WRN_UseDefViolationOut: return "WRN_UseDefViolationOut";
                case ErrorCode.WRN_UseDefViolation: return "WRN_UseDefViolation";
                case ErrorCode.WRN_SyncAndAsyncEntryPoints: return "WRN_SyncAndAsyncEntryPoints";
                case ErrorCode.WRN_ParameterIsStaticClass: return "WRN_ParameterIsStaticClass";
                case ErrorCode.WRN_ReturnTypeIsStaticClass: return "WRN_ReturnTypeIsStaticClass";
                case ErrorCode.WRN_UnreadRecordParameter: return "WRN_UnreadRecordParameter";
                case ErrorCode.WRN_DoNotCompareFunctionPointers: return "WRN_DoNotCompareFunctionPointers";
                case ErrorCode.WRN_ParameterOccursAfterInterpolatedStringHandlerParameter: return "WRN_ParameterOccursAfterInterpolatedStringHandlerParameter";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerArgumentExpression: return "WRN_CallerLineNumberPreferredOverCallerArgumentExpression";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerArgumentExpression: return "WRN_CallerFilePathPreferredOverCallerArgumentExpression";
                case ErrorCode.WRN_CallerMemberNamePreferredOverCallerArgumentExpression: return "WRN_CallerMemberNamePreferredOverCallerArgumentExpression";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeHasInvalidParameterName: return "WRN_CallerArgumentExpressionAttributeHasInvalidParameterName";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeSelfReferential: return "WRN_CallerArgumentExpressionAttributeSelfReferential";
                case ErrorCode.WRN_CallerArgumentExpressionParamForUnconsumedLocation: return "WRN_CallerArgumentExpressionParamForUnconsumedLocation";
                case ErrorCode.WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters: return "WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters";
                case ErrorCode.WRN_CompileTimeCheckedOverflow: return "WRN_CompileTimeCheckedOverflow";
                case ErrorCode.WRN_MethGrpToNonDel: return "WRN_MethGrpToNonDel";
                case ErrorCode.WRN_LowerCaseTypeName: return "WRN_LowerCaseTypeName";
                case ErrorCode.WRN_UseDefViolationPropertyUnsupportedVersion: return "WRN_UseDefViolationPropertyUnsupportedVersion";
                case ErrorCode.WRN_UseDefViolationFieldUnsupportedVersion: return "WRN_UseDefViolationFieldUnsupportedVersion";
                case ErrorCode.WRN_UseDefViolationPropertySupportedVersion: return "WRN_UseDefViolationPropertySupportedVersion";
                case ErrorCode.WRN_UseDefViolationFieldSupportedVersion: return "WRN_UseDefViolationFieldSupportedVersion";
                case ErrorCode.WRN_UseDefViolationThisSupportedVersion: return "WRN_UseDefViolationThisSupportedVersion";
                case ErrorCode.WRN_UnassignedThisAutoPropertySupportedVersion: return "WRN_UnassignedThisAutoPropertySupportedVersion";
                case ErrorCode.WRN_UnassignedThisSupportedVersion: return "WRN_UnassignedThisSupportedVersion";
                case ErrorCode.WRN_ObsoleteMembersShouldNotBeRequired: return "WRN_ObsoleteMembersShouldNotBeRequired";
                case ErrorCode.WRN_AnalyzerReferencesNewerCompiler: return "WRN_AnalyzerReferencesNewerCompiler";
                case ErrorCode.WRN_DuplicateAnalyzerReference: return "WRN_DuplicateAnalyzerReference";
                case ErrorCode.WRN_ScopedMismatchInParameterOfTarget: return "WRN_ScopedMismatchInParameterOfTarget";
                case ErrorCode.WRN_ScopedMismatchInParameterOfOverrideOrImplementation: return "WRN_ScopedMismatchInParameterOfOverrideOrImplementation";
                case ErrorCode.WRN_EscapeVariable: return "WRN_EscapeVariable";
                case ErrorCode.WRN_EscapeStackAlloc: return "WRN_EscapeStackAlloc";
                case ErrorCode.WRN_RefReturnNonreturnableLocal: return "WRN_RefReturnNonreturnableLocal";
                case ErrorCode.WRN_RefReturnNonreturnableLocal2: return "WRN_RefReturnNonreturnableLocal2";
                case ErrorCode.WRN_RefReturnStructThis: return "WRN_RefReturnStructThis";
                case ErrorCode.WRN_RefAssignNarrower: return "WRN_RefAssignNarrower";
                case ErrorCode.WRN_MismatchedRefEscapeInTernary: return "WRN_MismatchedRefEscapeInTernary";
                case ErrorCode.WRN_RefReturnParameter: return "WRN_RefReturnParameter";
                case ErrorCode.WRN_RefReturnScopedParameter: return "WRN_RefReturnScopedParameter";
                case ErrorCode.WRN_RefReturnParameter2: return "WRN_RefReturnParameter2";
                case ErrorCode.WRN_RefReturnScopedParameter2: return "WRN_RefReturnScopedParameter2";
                case ErrorCode.WRN_RefReturnLocal: return "WRN_RefReturnLocal";
                case ErrorCode.WRN_RefReturnLocal2: return "WRN_RefReturnLocal2";
                case ErrorCode.WRN_RefAssignReturnOnly: return "WRN_RefAssignReturnOnly";
                case ErrorCode.WRN_RefReturnOnlyParameter: return "WRN_RefReturnOnlyParameter";
                case ErrorCode.WRN_RefReturnOnlyParameter2: return "WRN_RefReturnOnlyParameter2";
                case ErrorCode.WRN_RefAssignValEscapeWider: return "WRN_RefAssignValEscapeWider";
                case ErrorCode.WRN_OptionalParamValueMismatch: return "WRN_OptionalParamValueMismatch";
                case ErrorCode.WRN_ParamsArrayInLambdaOnly: return "WRN_ParamsArrayInLambdaOnly";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterPassedToBase: return "WRN_CapturedPrimaryConstructorParameterPassedToBase";
                case ErrorCode.WRN_UnreadPrimaryConstructorParameter: return "WRN_UnreadPrimaryConstructorParameter";
                case ErrorCode.WRN_AddressOfInAsync: return "WRN_AddressOfInAsync";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterInFieldInitializer: return "WRN_CapturedPrimaryConstructorParameterInFieldInitializer";
                case ErrorCode.WRN_ByValArraySizeConstRequired: return "WRN_ByValArraySizeConstRequired";
                case ErrorCode.WRN_InterceptorSignatureMismatch: return "WRN_InterceptorSignatureMismatch";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnInterceptor: return "WRN_NullabilityMismatchInReturnTypeOnInterceptor";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnInterceptor: return "WRN_NullabilityMismatchInParameterTypeOnInterceptor";
                case ErrorCode.WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase: return "WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase";
                case ErrorCode.WRN_InlineArrayIndexerNotUsed: return "WRN_InlineArrayIndexerNotUsed";
                case ErrorCode.WRN_InlineArraySliceNotUsed: return "WRN_InlineArraySliceNotUsed";
                case ErrorCode.WRN_InlineArrayConversionOperatorNotUsed: return "WRN_InlineArrayConversionOperatorNotUsed";
                case ErrorCode.WRN_InlineArrayNotSupportedByLanguage: return "WRN_InlineArrayNotSupportedByLanguage";
                case ErrorCode.WRN_BadArgRef: return "WRN_BadArgRef";
                case ErrorCode.WRN_ArgExpectedRefOrIn: return "WRN_ArgExpectedRefOrIn";
                case ErrorCode.WRN_RefReadonlyNotVariable: return "WRN_RefReadonlyNotVariable";
                case ErrorCode.WRN_ArgExpectedIn: return "WRN_ArgExpectedIn";
                case ErrorCode.WRN_OverridingDifferentRefness: return "WRN_OverridingDifferentRefness";
                case ErrorCode.WRN_HidingDifferentRefness: return "WRN_HidingDifferentRefness";
                case ErrorCode.WRN_TargetDifferentRefness: return "WRN_TargetDifferentRefness";
                case ErrorCode.WRN_RefReadonlyParameterDefaultValue: return "WRN_RefReadonlyParameterDefaultValue";
                case ErrorCode.WRN_UseDefViolationRefField: return "WRN_UseDefViolationRefField";
                case ErrorCode.WRN_Experimental: return "WRN_Experimental";
                case ErrorCode.WRN_CollectionExpressionRefStructMayAllocate: return "WRN_CollectionExpressionRefStructMayAllocate";
                case ErrorCode.WRN_CollectionExpressionRefStructSpreadMayAllocate: return "WRN_CollectionExpressionRefStructSpreadMayAllocate";
                case ErrorCode.WRN_ConvertingLock: return "WRN_ConvertingLock";
                case ErrorCode.WRN_PartialPropertySignatureDifference: return "WRN_PartialPropertySignatureDifference";
                case ErrorCode.FTL_MetadataCantOpenFile: return "FTL_MetadataCantOpenFile";
                case ErrorCode.FTL_DebugEmitFailure: return "FTL_DebugEmitFailure";
                case ErrorCode.FTL_BadCodepage: return "FTL_BadCodepage";
                case ErrorCode.FTL_InvalidTarget: return "FTL_InvalidTarget";
                case ErrorCode.FTL_InvalidInputFileName: return "FTL_InvalidInputFileName";
                case ErrorCode.FTL_OutputFileExists: return "FTL_OutputFileExists";
                case ErrorCode.FTL_BadChecksumAlgorithm: return "FTL_BadChecksumAlgorithm";
                case ErrorCode.INF_UnableToLoadSomeTypesInAnalyzer: return "INF_UnableToLoadSomeTypesInAnalyzer";
                case ErrorCode.INF_TooManyBoundLambdas: return "INF_TooManyBoundLambdas";
                case ErrorCode.INF_IdentifierConflictWithContextualKeyword: return "INF_IdentifierConflictWithContextualKeyword";
                case ErrorCode.HDN_UnusedUsingDirective: return "HDN_UnusedUsingDirective";
                case ErrorCode.HDN_UnusedExternAlias: return "HDN_UnusedExternAlias";
                case ErrorCode.HDN_DuplicateWithGlobalUsing: return "HDN_DuplicateWithGlobalUsing";
                case ErrorCode.Void: return "Void";
                case ErrorCode.Unknown: return "Unknown";
                case ErrorCode.ERR_NoMetadataFile: return "ERR_NoMetadataFile";
                case ErrorCode.ERR_NoTypeDef: return "ERR_NoTypeDef";
                case ErrorCode.ERR_OutputWriteFailed: return "ERR_OutputWriteFailed";
                case ErrorCode.ERR_MultipleEntryPoints: return "ERR_MultipleEntryPoints";
                case ErrorCode.ERR_BadBinaryOps: return "ERR_BadBinaryOps";
                case ErrorCode.ERR_IntDivByZero: return "ERR_IntDivByZero";
                case ErrorCode.ERR_BadIndexLHS: return "ERR_BadIndexLHS";
                case ErrorCode.ERR_BadIndexCount: return "ERR_BadIndexCount";
                case ErrorCode.ERR_BadUnaryOp: return "ERR_BadUnaryOp";
                case ErrorCode.ERR_ThisInStaticMeth: return "ERR_ThisInStaticMeth";
                case ErrorCode.ERR_ThisInBadContext: return "ERR_ThisInBadContext";
                case ErrorCode.ERR_NoImplicitConv: return "ERR_NoImplicitConv";
                case ErrorCode.ERR_NoExplicitConv: return "ERR_NoExplicitConv";
                case ErrorCode.ERR_ConstOutOfRange: return "ERR_ConstOutOfRange";
                case ErrorCode.ERR_AmbigBinaryOps: return "ERR_AmbigBinaryOps";
                case ErrorCode.ERR_AmbigUnaryOp: return "ERR_AmbigUnaryOp";
                case ErrorCode.ERR_InAttrOnOutParam: return "ERR_InAttrOnOutParam";
                case ErrorCode.ERR_ValueCantBeNull: return "ERR_ValueCantBeNull";
                case ErrorCode.ERR_NoExplicitBuiltinConv: return "ERR_NoExplicitBuiltinConv";
                case ErrorCode.ERR_BadVisReturnType: return "ERR_BadVisReturnType";
                case ErrorCode.ERR_BadVisParamType: return "ERR_BadVisParamType";
                case ErrorCode.ERR_BadVisFieldType: return "ERR_BadVisFieldType";
                case ErrorCode.ERR_BadVisPropertyType: return "ERR_BadVisPropertyType";
                case ErrorCode.ERR_BadVisIndexerReturn: return "ERR_BadVisIndexerReturn";
                case ErrorCode.ERR_BadVisIndexerParam: return "ERR_BadVisIndexerParam";
                case ErrorCode.ERR_BadVisOpReturn: return "ERR_BadVisOpReturn";
                case ErrorCode.ERR_BadVisOpParam: return "ERR_BadVisOpParam";
                case ErrorCode.ERR_BadVisDelegateReturn: return "ERR_BadVisDelegateReturn";
                case ErrorCode.ERR_BadVisDelegateParam: return "ERR_BadVisDelegateParam";
                case ErrorCode.ERR_BadVisBaseClass: return "ERR_BadVisBaseClass";
                case ErrorCode.ERR_BadVisBaseInterface: return "ERR_BadVisBaseInterface";
                case ErrorCode.ERR_EventNeedsBothAccessors: return "ERR_EventNeedsBothAccessors";
                case ErrorCode.ERR_EventNotDelegate: return "ERR_EventNotDelegate";
                case ErrorCode.ERR_InterfaceEventInitializer: return "ERR_InterfaceEventInitializer";
                case ErrorCode.ERR_BadEventUsage: return "ERR_BadEventUsage";
                case ErrorCode.ERR_ExplicitEventFieldImpl: return "ERR_ExplicitEventFieldImpl";
                case ErrorCode.ERR_CantOverrideNonEvent: return "ERR_CantOverrideNonEvent";
                case ErrorCode.ERR_AddRemoveMustHaveBody: return "ERR_AddRemoveMustHaveBody";
                case ErrorCode.ERR_AbstractEventInitializer: return "ERR_AbstractEventInitializer";
                case ErrorCode.ERR_PossibleBadNegCast: return "ERR_PossibleBadNegCast";
                case ErrorCode.ERR_ReservedEnumerator: return "ERR_ReservedEnumerator";
                case ErrorCode.ERR_AsMustHaveReferenceType: return "ERR_AsMustHaveReferenceType";
                case ErrorCode.ERR_BadEventUsageNoField: return "ERR_BadEventUsageNoField";
                case ErrorCode.ERR_ConstraintOnlyAllowedOnGenericDecl: return "ERR_ConstraintOnlyAllowedOnGenericDecl";
                case ErrorCode.ERR_TypeParamMustBeIdentifier: return "ERR_TypeParamMustBeIdentifier";
                case ErrorCode.ERR_MemberReserved: return "ERR_MemberReserved";
                case ErrorCode.ERR_DuplicateParamName: return "ERR_DuplicateParamName";
                case ErrorCode.ERR_DuplicateNameInNS: return "ERR_DuplicateNameInNS";
                case ErrorCode.ERR_DuplicateNameInClass: return "ERR_DuplicateNameInClass";
                case ErrorCode.ERR_NameNotInContext: return "ERR_NameNotInContext";
                case ErrorCode.ERR_AmbigContext: return "ERR_AmbigContext";
                case ErrorCode.ERR_BadMemberFlag: return "ERR_BadMemberFlag";
                case ErrorCode.ERR_BadMemberProtection: return "ERR_BadMemberProtection";
                case ErrorCode.ERR_CircConstValue: return "ERR_CircConstValue";
                case ErrorCode.ERR_MemberAlreadyExists: return "ERR_MemberAlreadyExists";
                case ErrorCode.ERR_StaticNotVirtual: return "ERR_StaticNotVirtual";
                case ErrorCode.ERR_OverrideNotNew: return "ERR_OverrideNotNew";
                case ErrorCode.ERR_OverrideNotExpected: return "ERR_OverrideNotExpected";
                case ErrorCode.ERR_NamespaceUnexpected: return "ERR_NamespaceUnexpected";
                case ErrorCode.ERR_NoSuchMember: return "ERR_NoSuchMember";
                case ErrorCode.ERR_BadSKknown: return "ERR_BadSKknown";
                case ErrorCode.ERR_BadSKunknown: return "ERR_BadSKunknown";
                case ErrorCode.ERR_ObjectRequired: return "ERR_ObjectRequired";
                case ErrorCode.ERR_AmbigCall: return "ERR_AmbigCall";
                case ErrorCode.ERR_BadAccess: return "ERR_BadAccess";
                case ErrorCode.ERR_MethDelegateMismatch: return "ERR_MethDelegateMismatch";
                case ErrorCode.ERR_RetObjectRequired: return "ERR_RetObjectRequired";
                case ErrorCode.ERR_RetNoObjectRequired: return "ERR_RetNoObjectRequired";
                case ErrorCode.ERR_LocalDuplicate: return "ERR_LocalDuplicate";
                case ErrorCode.ERR_AssgLvalueExpected: return "ERR_AssgLvalueExpected";
                case ErrorCode.ERR_StaticConstParam: return "ERR_StaticConstParam";
                case ErrorCode.ERR_NotConstantExpression: return "ERR_NotConstantExpression";
                case ErrorCode.ERR_NotNullConstRefField: return "ERR_NotNullConstRefField";
                case ErrorCode.ERR_LocalIllegallyOverrides: return "ERR_LocalIllegallyOverrides";
                case ErrorCode.ERR_BadUsingNamespace: return "ERR_BadUsingNamespace";
                case ErrorCode.ERR_NoBreakOrCont: return "ERR_NoBreakOrCont";
                case ErrorCode.ERR_DuplicateLabel: return "ERR_DuplicateLabel";
                case ErrorCode.ERR_NoConstructors: return "ERR_NoConstructors";
                case ErrorCode.ERR_NoNewAbstract: return "ERR_NoNewAbstract";
                case ErrorCode.ERR_ConstValueRequired: return "ERR_ConstValueRequired";
                case ErrorCode.ERR_CircularBase: return "ERR_CircularBase";
                case ErrorCode.ERR_BadDelegateConstructor: return "ERR_BadDelegateConstructor";
                case ErrorCode.ERR_MethodNameExpected: return "ERR_MethodNameExpected";
                case ErrorCode.ERR_ConstantExpected: return "ERR_ConstantExpected";
                case ErrorCode.ERR_V6SwitchGoverningTypeValueExpected: return "ERR_V6SwitchGoverningTypeValueExpected";
                case ErrorCode.ERR_DuplicateCaseLabel: return "ERR_DuplicateCaseLabel";
                case ErrorCode.ERR_InvalidGotoCase: return "ERR_InvalidGotoCase";
                case ErrorCode.ERR_PropertyLacksGet: return "ERR_PropertyLacksGet";
                case ErrorCode.ERR_BadExceptionType: return "ERR_BadExceptionType";
                case ErrorCode.ERR_BadEmptyThrow: return "ERR_BadEmptyThrow";
                case ErrorCode.ERR_BadFinallyLeave: return "ERR_BadFinallyLeave";
                case ErrorCode.ERR_LabelShadow: return "ERR_LabelShadow";
                case ErrorCode.ERR_LabelNotFound: return "ERR_LabelNotFound";
                case ErrorCode.ERR_UnreachableCatch: return "ERR_UnreachableCatch";
                case ErrorCode.ERR_ReturnExpected: return "ERR_ReturnExpected";
                case ErrorCode.ERR_SwitchFallThrough: return "ERR_SwitchFallThrough";
                case ErrorCode.ERR_UseDefViolation: return "ERR_UseDefViolation";
                case ErrorCode.ERR_UseDefViolationField: return "ERR_UseDefViolationField";
                case ErrorCode.ERR_UnassignedThisUnsupportedVersion: return "ERR_UnassignedThisUnsupportedVersion";
                case ErrorCode.ERR_AmbigQM: return "ERR_AmbigQM";
                case ErrorCode.ERR_InvalidQM: return "ERR_InvalidQM";
                case ErrorCode.ERR_NoBaseClass: return "ERR_NoBaseClass";
                case ErrorCode.ERR_BaseIllegal: return "ERR_BaseIllegal";
                case ErrorCode.ERR_ObjectProhibited: return "ERR_ObjectProhibited";
                case ErrorCode.ERR_ParamUnassigned: return "ERR_ParamUnassigned";
                case ErrorCode.ERR_InvalidArray: return "ERR_InvalidArray";
                case ErrorCode.ERR_ExternHasBody: return "ERR_ExternHasBody";
                case ErrorCode.ERR_AbstractAndExtern: return "ERR_AbstractAndExtern";
                case ErrorCode.ERR_BadAttributeParamType: return "ERR_BadAttributeParamType";
                case ErrorCode.ERR_BadAttributeArgument: return "ERR_BadAttributeArgument";
                case ErrorCode.ERR_LockNeedsReference: return "ERR_LockNeedsReference";
                case ErrorCode.ERR_NullNotValid: return "ERR_NullNotValid";
                case ErrorCode.ERR_UseDefViolationThisUnsupportedVersion: return "ERR_UseDefViolationThisUnsupportedVersion";
                case ErrorCode.ERR_ArgsInvalid: return "ERR_ArgsInvalid";
                case ErrorCode.ERR_AssgReadonly: return "ERR_AssgReadonly";
                case ErrorCode.ERR_RefReadonly: return "ERR_RefReadonly";
                case ErrorCode.ERR_PtrExpected: return "ERR_PtrExpected";
                case ErrorCode.ERR_PtrIndexSingle: return "ERR_PtrIndexSingle";
                case ErrorCode.ERR_AssgReadonlyStatic: return "ERR_AssgReadonlyStatic";
                case ErrorCode.ERR_RefReadonlyStatic: return "ERR_RefReadonlyStatic";
                case ErrorCode.ERR_AssgReadonlyProp: return "ERR_AssgReadonlyProp";
                case ErrorCode.ERR_IllegalStatement: return "ERR_IllegalStatement";
                case ErrorCode.ERR_BadGetEnumerator: return "ERR_BadGetEnumerator";
                case ErrorCode.ERR_TooManyLocals: return "ERR_TooManyLocals";
                case ErrorCode.ERR_AbstractBaseCall: return "ERR_AbstractBaseCall";
                case ErrorCode.ERR_RefProperty: return "ERR_RefProperty";
                case ErrorCode.ERR_ManagedAddr: return "ERR_ManagedAddr";
                case ErrorCode.ERR_BadFixedInitType: return "ERR_BadFixedInitType";
                case ErrorCode.ERR_FixedMustInit: return "ERR_FixedMustInit";
                case ErrorCode.ERR_InvalidAddrOp: return "ERR_InvalidAddrOp";
                case ErrorCode.ERR_FixedNeeded: return "ERR_FixedNeeded";
                case ErrorCode.ERR_FixedNotNeeded: return "ERR_FixedNotNeeded";
                case ErrorCode.ERR_UnsafeNeeded: return "ERR_UnsafeNeeded";
                case ErrorCode.ERR_OpTFRetType: return "ERR_OpTFRetType";
                case ErrorCode.ERR_OperatorNeedsMatch: return "ERR_OperatorNeedsMatch";
                case ErrorCode.ERR_BadBoolOp: return "ERR_BadBoolOp";
                case ErrorCode.ERR_MustHaveOpTF: return "ERR_MustHaveOpTF";
                case ErrorCode.ERR_CheckedOverflow: return "ERR_CheckedOverflow";
                case ErrorCode.ERR_ConstOutOfRangeChecked: return "ERR_ConstOutOfRangeChecked";
                case ErrorCode.ERR_BadVarargs: return "ERR_BadVarargs";
                case ErrorCode.ERR_ParamsMustBeCollection: return "ERR_ParamsMustBeCollection";
                case ErrorCode.ERR_IllegalArglist: return "ERR_IllegalArglist";
                case ErrorCode.ERR_IllegalUnsafe: return "ERR_IllegalUnsafe";
                case ErrorCode.ERR_AmbigMember: return "ERR_AmbigMember";
                case ErrorCode.ERR_BadForeachDecl: return "ERR_BadForeachDecl";
                case ErrorCode.ERR_ParamsLast: return "ERR_ParamsLast";
                case ErrorCode.ERR_SizeofUnsafe: return "ERR_SizeofUnsafe";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNS: return "ERR_DottedTypeNameNotFoundInNS";
                case ErrorCode.ERR_FieldInitRefNonstatic: return "ERR_FieldInitRefNonstatic";
                case ErrorCode.ERR_SealedNonOverride: return "ERR_SealedNonOverride";
                case ErrorCode.ERR_CantOverrideSealed: return "ERR_CantOverrideSealed";
                case ErrorCode.ERR_VoidError: return "ERR_VoidError";
                case ErrorCode.ERR_ConditionalOnOverride: return "ERR_ConditionalOnOverride";
                case ErrorCode.ERR_PointerInAsOrIs: return "ERR_PointerInAsOrIs";
                case ErrorCode.ERR_CallingFinalizeDeprecated: return "ERR_CallingFinalizeDeprecated";
                case ErrorCode.ERR_SingleTypeNameNotFound: return "ERR_SingleTypeNameNotFound";
                case ErrorCode.ERR_NegativeStackAllocSize: return "ERR_NegativeStackAllocSize";
                case ErrorCode.ERR_NegativeArraySize: return "ERR_NegativeArraySize";
                case ErrorCode.ERR_OverrideFinalizeDeprecated: return "ERR_OverrideFinalizeDeprecated";
                case ErrorCode.ERR_CallingBaseFinalizeDeprecated: return "ERR_CallingBaseFinalizeDeprecated";
                case ErrorCode.ERR_BadCastInFixed: return "ERR_BadCastInFixed";
                case ErrorCode.ERR_StackallocInCatchFinally: return "ERR_StackallocInCatchFinally";
                case ErrorCode.ERR_VarargsLast: return "ERR_VarargsLast";
                case ErrorCode.ERR_MissingPartial: return "ERR_MissingPartial";
                case ErrorCode.ERR_PartialTypeKindConflict: return "ERR_PartialTypeKindConflict";
                case ErrorCode.ERR_PartialModifierConflict: return "ERR_PartialModifierConflict";
                case ErrorCode.ERR_PartialMultipleBases: return "ERR_PartialMultipleBases";
                case ErrorCode.ERR_PartialWrongTypeParams: return "ERR_PartialWrongTypeParams";
                case ErrorCode.ERR_PartialWrongConstraints: return "ERR_PartialWrongConstraints";
                case ErrorCode.ERR_NoImplicitConvCast: return "ERR_NoImplicitConvCast";
                case ErrorCode.ERR_PartialMisplaced: return "ERR_PartialMisplaced";
                case ErrorCode.ERR_ImportedCircularBase: return "ERR_ImportedCircularBase";
                case ErrorCode.ERR_UseDefViolationOut: return "ERR_UseDefViolationOut";
                case ErrorCode.ERR_ArraySizeInDeclaration: return "ERR_ArraySizeInDeclaration";
                case ErrorCode.ERR_InaccessibleGetter: return "ERR_InaccessibleGetter";
                case ErrorCode.ERR_InaccessibleSetter: return "ERR_InaccessibleSetter";
                case ErrorCode.ERR_InvalidPropertyAccessMod: return "ERR_InvalidPropertyAccessMod";
                case ErrorCode.ERR_DuplicatePropertyAccessMods: return "ERR_DuplicatePropertyAccessMods";
                case ErrorCode.ERR_AccessModMissingAccessor: return "ERR_AccessModMissingAccessor";
                case ErrorCode.ERR_UnimplementedInterfaceAccessor: return "ERR_UnimplementedInterfaceAccessor";
                case ErrorCode.ERR_FriendRefNotEqualToThis: return "ERR_FriendRefNotEqualToThis";
                case ErrorCode.ERR_BadConstType: return "ERR_BadConstType";
                case ErrorCode.ERR_NoNewTyvar: return "ERR_NoNewTyvar";
                case ErrorCode.ERR_BadArity: return "ERR_BadArity";
                case ErrorCode.ERR_BadTypeArgument: return "ERR_BadTypeArgument";
                case ErrorCode.ERR_TypeArgsNotAllowed: return "ERR_TypeArgsNotAllowed";
                case ErrorCode.ERR_HasNoTypeVars: return "ERR_HasNoTypeVars";
                case ErrorCode.ERR_NewConstraintNotSatisfied: return "ERR_NewConstraintNotSatisfied";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedRefType: return "ERR_GenericConstraintNotSatisfiedRefType";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableEnum: return "ERR_GenericConstraintNotSatisfiedNullableEnum";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableInterface: return "ERR_GenericConstraintNotSatisfiedNullableInterface";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedTyVar: return "ERR_GenericConstraintNotSatisfiedTyVar";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedValType: return "ERR_GenericConstraintNotSatisfiedValType";
                case ErrorCode.ERR_DuplicateGeneratedName: return "ERR_DuplicateGeneratedName";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFound: return "ERR_GlobalSingleTypeNameNotFound";
                case ErrorCode.ERR_NewBoundMustBeLast: return "ERR_NewBoundMustBeLast";
                case ErrorCode.ERR_TypeVarCantBeNull: return "ERR_TypeVarCantBeNull";
                case ErrorCode.ERR_DuplicateBound: return "ERR_DuplicateBound";
                case ErrorCode.ERR_ClassBoundNotFirst: return "ERR_ClassBoundNotFirst";
                case ErrorCode.ERR_BadRetType: return "ERR_BadRetType";
                case ErrorCode.ERR_DuplicateConstraintClause: return "ERR_DuplicateConstraintClause";
                case ErrorCode.ERR_CantInferMethTypeArgs: return "ERR_CantInferMethTypeArgs";
                case ErrorCode.ERR_LocalSameNameAsTypeParam: return "ERR_LocalSameNameAsTypeParam";
                case ErrorCode.ERR_AsWithTypeVar: return "ERR_AsWithTypeVar";
                case ErrorCode.ERR_BadIndexerNameAttr: return "ERR_BadIndexerNameAttr";
                case ErrorCode.ERR_AttrArgWithTypeVars: return "ERR_AttrArgWithTypeVars";
                case ErrorCode.ERR_NewTyvarWithArgs: return "ERR_NewTyvarWithArgs";
                case ErrorCode.ERR_AbstractSealedStatic: return "ERR_AbstractSealedStatic";
                case ErrorCode.ERR_ComImportWithImpl: return "ERR_ComImportWithImpl";
                case ErrorCode.ERR_ComImportWithBase: return "ERR_ComImportWithBase";
                case ErrorCode.ERR_ImplBadConstraints: return "ERR_ImplBadConstraints";
                case ErrorCode.ERR_DottedTypeNameNotFoundInAgg: return "ERR_DottedTypeNameNotFoundInAgg";
                case ErrorCode.ERR_MethGrpToNonDel: return "ERR_MethGrpToNonDel";
                case ErrorCode.ERR_BadExternAlias: return "ERR_BadExternAlias";
                case ErrorCode.ERR_ColColWithTypeAlias: return "ERR_ColColWithTypeAlias";
                case ErrorCode.ERR_AliasNotFound: return "ERR_AliasNotFound";
                case ErrorCode.ERR_SameFullNameAggAgg: return "ERR_SameFullNameAggAgg";
                case ErrorCode.ERR_SameFullNameNsAgg: return "ERR_SameFullNameNsAgg";
                case ErrorCode.ERR_SameFullNameThisAggThisNs: return "ERR_SameFullNameThisAggThisNs";
                case ErrorCode.ERR_ExternAfterElements: return "ERR_ExternAfterElements";
                case ErrorCode.ERR_SealedStaticClass: return "ERR_SealedStaticClass";
                case ErrorCode.ERR_PrivateAbstractAccessor: return "ERR_PrivateAbstractAccessor";
                case ErrorCode.ERR_ValueExpected: return "ERR_ValueExpected";
                case ErrorCode.ERR_UnboxNotLValue: return "ERR_UnboxNotLValue";
                case ErrorCode.ERR_AnonMethGrpInForEach: return "ERR_AnonMethGrpInForEach";
                case ErrorCode.ERR_BadIncDecRetType: return "ERR_BadIncDecRetType";
                case ErrorCode.ERR_TypeConstraintsMustBeUniqueAndFirst: return "ERR_TypeConstraintsMustBeUniqueAndFirst";
                case ErrorCode.ERR_RefValBoundWithClass: return "ERR_RefValBoundWithClass";
                case ErrorCode.ERR_NewBoundWithVal: return "ERR_NewBoundWithVal";
                case ErrorCode.ERR_RefConstraintNotSatisfied: return "ERR_RefConstraintNotSatisfied";
                case ErrorCode.ERR_ValConstraintNotSatisfied: return "ERR_ValConstraintNotSatisfied";
                case ErrorCode.ERR_CircularConstraint: return "ERR_CircularConstraint";
                case ErrorCode.ERR_BaseConstraintConflict: return "ERR_BaseConstraintConflict";
                case ErrorCode.ERR_ConWithValCon: return "ERR_ConWithValCon";
                case ErrorCode.ERR_AmbigUDConv: return "ERR_AmbigUDConv";
                case ErrorCode.ERR_OverrideWithConstraints: return "ERR_OverrideWithConstraints";
                case ErrorCode.ERR_AmbigOverride: return "ERR_AmbigOverride";
                case ErrorCode.ERR_DecConstError: return "ERR_DecConstError";
                case ErrorCode.ERR_ExplicitImplParams: return "ERR_ExplicitImplParams";
                case ErrorCode.ERR_MethodImplementingAccessor: return "ERR_MethodImplementingAccessor";
                case ErrorCode.ERR_AbstractHasBody: return "ERR_AbstractHasBody";
                case ErrorCode.ERR_ConcreteMissingBody: return "ERR_ConcreteMissingBody";
                case ErrorCode.ERR_AbstractAndSealed: return "ERR_AbstractAndSealed";
                case ErrorCode.ERR_AbstractNotVirtual: return "ERR_AbstractNotVirtual";
                case ErrorCode.ERR_StaticConstant: return "ERR_StaticConstant";
                case ErrorCode.ERR_CantOverrideNonFunction: return "ERR_CantOverrideNonFunction";
                case ErrorCode.ERR_CantOverrideNonVirtual: return "ERR_CantOverrideNonVirtual";
                case ErrorCode.ERR_CantChangeAccessOnOverride: return "ERR_CantChangeAccessOnOverride";
                case ErrorCode.ERR_CantChangeReturnTypeOnOverride: return "ERR_CantChangeReturnTypeOnOverride";
                case ErrorCode.ERR_CantDeriveFromSealedType: return "ERR_CantDeriveFromSealedType";
                case ErrorCode.ERR_AbstractInConcreteClass: return "ERR_AbstractInConcreteClass";
                case ErrorCode.ERR_StaticConstructorWithExplicitConstructorCall: return "ERR_StaticConstructorWithExplicitConstructorCall";
                case ErrorCode.ERR_StaticConstructorWithAccessModifiers: return "ERR_StaticConstructorWithAccessModifiers";
                case ErrorCode.ERR_RecursiveConstructorCall: return "ERR_RecursiveConstructorCall";
                case ErrorCode.ERR_ObjectCallingBaseConstructor: return "ERR_ObjectCallingBaseConstructor";
                case ErrorCode.ERR_PredefinedTypeNotFound: return "ERR_PredefinedTypeNotFound";
                case ErrorCode.ERR_StructWithBaseConstructorCall: return "ERR_StructWithBaseConstructorCall";
                case ErrorCode.ERR_StructLayoutCycle: return "ERR_StructLayoutCycle";
                case ErrorCode.ERR_InterfacesCantContainFields: return "ERR_InterfacesCantContainFields";
                case ErrorCode.ERR_InterfacesCantContainConstructors: return "ERR_InterfacesCantContainConstructors";
                case ErrorCode.ERR_NonInterfaceInInterfaceList: return "ERR_NonInterfaceInInterfaceList";
                case ErrorCode.ERR_DuplicateInterfaceInBaseList: return "ERR_DuplicateInterfaceInBaseList";
                case ErrorCode.ERR_CycleInInterfaceInheritance: return "ERR_CycleInInterfaceInheritance";
                case ErrorCode.ERR_HidingAbstractMethod: return "ERR_HidingAbstractMethod";
                case ErrorCode.ERR_UnimplementedAbstractMethod: return "ERR_UnimplementedAbstractMethod";
                case ErrorCode.ERR_UnimplementedInterfaceMember: return "ERR_UnimplementedInterfaceMember";
                case ErrorCode.ERR_ObjectCantHaveBases: return "ERR_ObjectCantHaveBases";
                case ErrorCode.ERR_ExplicitInterfaceImplementationNotInterface: return "ERR_ExplicitInterfaceImplementationNotInterface";
                case ErrorCode.ERR_InterfaceMemberNotFound: return "ERR_InterfaceMemberNotFound";
                case ErrorCode.ERR_ClassDoesntImplementInterface: return "ERR_ClassDoesntImplementInterface";
                case ErrorCode.ERR_ExplicitInterfaceImplementationInNonClassOrStruct: return "ERR_ExplicitInterfaceImplementationInNonClassOrStruct";
                case ErrorCode.ERR_MemberNameSameAsType: return "ERR_MemberNameSameAsType";
                case ErrorCode.ERR_EnumeratorOverflow: return "ERR_EnumeratorOverflow";
                case ErrorCode.ERR_CantOverrideNonProperty: return "ERR_CantOverrideNonProperty";
                case ErrorCode.ERR_NoGetToOverride: return "ERR_NoGetToOverride";
                case ErrorCode.ERR_NoSetToOverride: return "ERR_NoSetToOverride";
                case ErrorCode.ERR_PropertyCantHaveVoidType: return "ERR_PropertyCantHaveVoidType";
                case ErrorCode.ERR_PropertyWithNoAccessors: return "ERR_PropertyWithNoAccessors";
                case ErrorCode.ERR_NewVirtualInSealed: return "ERR_NewVirtualInSealed";
                case ErrorCode.ERR_ExplicitPropertyAddingAccessor: return "ERR_ExplicitPropertyAddingAccessor";
                case ErrorCode.ERR_ExplicitPropertyMissingAccessor: return "ERR_ExplicitPropertyMissingAccessor";
                case ErrorCode.ERR_ConversionWithInterface: return "ERR_ConversionWithInterface";
                case ErrorCode.ERR_ConversionWithBase: return "ERR_ConversionWithBase";
                case ErrorCode.ERR_ConversionWithDerived: return "ERR_ConversionWithDerived";
                case ErrorCode.ERR_IdentityConversion: return "ERR_IdentityConversion";
                case ErrorCode.ERR_ConversionNotInvolvingContainedType: return "ERR_ConversionNotInvolvingContainedType";
                case ErrorCode.ERR_DuplicateConversionInClass: return "ERR_DuplicateConversionInClass";
                case ErrorCode.ERR_OperatorsMustBeStatic: return "ERR_OperatorsMustBeStatic";
                case ErrorCode.ERR_BadIncDecSignature: return "ERR_BadIncDecSignature";
                case ErrorCode.ERR_BadUnaryOperatorSignature: return "ERR_BadUnaryOperatorSignature";
                case ErrorCode.ERR_BadBinaryOperatorSignature: return "ERR_BadBinaryOperatorSignature";
                case ErrorCode.ERR_BadShiftOperatorSignature: return "ERR_BadShiftOperatorSignature";
                case ErrorCode.ERR_InterfacesCantContainConversionOrEqualityOperators: return "ERR_InterfacesCantContainConversionOrEqualityOperators";
                case ErrorCode.ERR_CantOverrideBogusMethod: return "ERR_CantOverrideBogusMethod";
                case ErrorCode.ERR_BindToBogus: return "ERR_BindToBogus";
                case ErrorCode.ERR_CantCallSpecialMethod: return "ERR_CantCallSpecialMethod";
                case ErrorCode.ERR_BadTypeReference: return "ERR_BadTypeReference";
                case ErrorCode.ERR_BadDestructorName: return "ERR_BadDestructorName";
                case ErrorCode.ERR_OnlyClassesCanContainDestructors: return "ERR_OnlyClassesCanContainDestructors";
                case ErrorCode.ERR_ConflictAliasAndMember: return "ERR_ConflictAliasAndMember";
                case ErrorCode.ERR_ConditionalOnSpecialMethod: return "ERR_ConditionalOnSpecialMethod";
                case ErrorCode.ERR_ConditionalMustReturnVoid: return "ERR_ConditionalMustReturnVoid";
                case ErrorCode.ERR_DuplicateAttribute: return "ERR_DuplicateAttribute";
                case ErrorCode.ERR_ConditionalOnInterfaceMethod: return "ERR_ConditionalOnInterfaceMethod";
                case ErrorCode.ERR_OperatorCantReturnVoid: return "ERR_OperatorCantReturnVoid";
                case ErrorCode.ERR_InvalidAttributeArgument: return "ERR_InvalidAttributeArgument";
                case ErrorCode.ERR_AttributeOnBadSymbolType: return "ERR_AttributeOnBadSymbolType";
                case ErrorCode.ERR_FloatOverflow: return "ERR_FloatOverflow";
                case ErrorCode.ERR_InvalidReal: return "ERR_InvalidReal";
                case ErrorCode.ERR_ComImportWithoutUuidAttribute: return "ERR_ComImportWithoutUuidAttribute";
                case ErrorCode.ERR_InvalidNamedArgument: return "ERR_InvalidNamedArgument";
                case ErrorCode.ERR_DllImportOnInvalidMethod: return "ERR_DllImportOnInvalidMethod";
                case ErrorCode.ERR_FieldCantBeRefAny: return "ERR_FieldCantBeRefAny";
                case ErrorCode.ERR_ArrayElementCantBeRefAny: return "ERR_ArrayElementCantBeRefAny";
                case ErrorCode.ERR_NotAnAttributeClass: return "ERR_NotAnAttributeClass";
                case ErrorCode.ERR_BadNamedAttributeArgument: return "ERR_BadNamedAttributeArgument";
                case ErrorCode.ERR_DeprecatedSymbolStr: return "ERR_DeprecatedSymbolStr";
                case ErrorCode.ERR_IndexerCantHaveVoidType: return "ERR_IndexerCantHaveVoidType";
                case ErrorCode.ERR_VirtualPrivate: return "ERR_VirtualPrivate";
                case ErrorCode.ERR_ArrayInitToNonArrayType: return "ERR_ArrayInitToNonArrayType";
                case ErrorCode.ERR_ArrayInitInBadPlace: return "ERR_ArrayInitInBadPlace";
                case ErrorCode.ERR_MissingStructOffset: return "ERR_MissingStructOffset";
                case ErrorCode.ERR_InterfaceImplementedByConditional: return "ERR_InterfaceImplementedByConditional";
                case ErrorCode.ERR_InterfaceImplementedImplicitlyByVariadic: return "ERR_InterfaceImplementedImplicitlyByVariadic";
                case ErrorCode.ERR_IllegalRefParam: return "ERR_IllegalRefParam";
                case ErrorCode.ERR_BadArgumentToAttribute: return "ERR_BadArgumentToAttribute";
                case ErrorCode.ERR_StructOffsetOnBadStruct: return "ERR_StructOffsetOnBadStruct";
                case ErrorCode.ERR_StructOffsetOnBadField: return "ERR_StructOffsetOnBadField";
                case ErrorCode.ERR_AttributeUsageOnNonAttributeClass: return "ERR_AttributeUsageOnNonAttributeClass";
                case ErrorCode.ERR_DuplicateNamedAttributeArgument: return "ERR_DuplicateNamedAttributeArgument";
                case ErrorCode.ERR_DeriveFromEnumOrValueType: return "ERR_DeriveFromEnumOrValueType";
                case ErrorCode.ERR_DefaultMemberOnIndexedType: return "ERR_DefaultMemberOnIndexedType";
                case ErrorCode.ERR_BogusType: return "ERR_BogusType";
                case ErrorCode.ERR_CStyleArray: return "ERR_CStyleArray";
                case ErrorCode.ERR_AbstractAttributeClass: return "ERR_AbstractAttributeClass";
                case ErrorCode.ERR_BadNamedAttributeArgumentType: return "ERR_BadNamedAttributeArgumentType";
                case ErrorCode.ERR_MissingPredefinedMember: return "ERR_MissingPredefinedMember";
                case ErrorCode.ERR_OutAttrOnRefParam: return "ERR_OutAttrOnRefParam";
                case ErrorCode.ERR_OverloadRefKind: return "ERR_OverloadRefKind";
                case ErrorCode.ERR_LiteralDoubleCast: return "ERR_LiteralDoubleCast";
                case ErrorCode.ERR_ProtectedInStruct: return "ERR_ProtectedInStruct";
                case ErrorCode.ERR_InconsistentIndexerNames: return "ERR_InconsistentIndexerNames";
                case ErrorCode.ERR_ComImportWithUserCtor: return "ERR_ComImportWithUserCtor";
                case ErrorCode.ERR_FieldCantHaveVoidType: return "ERR_FieldCantHaveVoidType";
                case ErrorCode.ERR_SystemVoid: return "ERR_SystemVoid";
                case ErrorCode.ERR_ExplicitParamArrayOrCollection: return "ERR_ExplicitParamArrayOrCollection";
                case ErrorCode.ERR_VolatileStruct: return "ERR_VolatileStruct";
                case ErrorCode.ERR_VolatileAndReadonly: return "ERR_VolatileAndReadonly";
                case ErrorCode.ERR_AbstractField: return "ERR_AbstractField";
                case ErrorCode.ERR_BogusExplicitImpl: return "ERR_BogusExplicitImpl";
                case ErrorCode.ERR_ExplicitMethodImplAccessor: return "ERR_ExplicitMethodImplAccessor";
                case ErrorCode.ERR_ConditionalWithOutParam: return "ERR_ConditionalWithOutParam";
                case ErrorCode.ERR_AccessorImplementingMethod: return "ERR_AccessorImplementingMethod";
                case ErrorCode.ERR_AliasQualAsExpression: return "ERR_AliasQualAsExpression";
                case ErrorCode.ERR_DerivingFromATyVar: return "ERR_DerivingFromATyVar";
                case ErrorCode.ERR_DuplicateTypeParameter: return "ERR_DuplicateTypeParameter";
                case ErrorCode.ERR_TypeVariableSameAsParent: return "ERR_TypeVariableSameAsParent";
                case ErrorCode.ERR_UnifyingInterfaceInstantiations: return "ERR_UnifyingInterfaceInstantiations";
                case ErrorCode.ERR_TyVarNotFoundInConstraint: return "ERR_TyVarNotFoundInConstraint";
                case ErrorCode.ERR_BadBoundType: return "ERR_BadBoundType";
                case ErrorCode.ERR_SpecialTypeAsBound: return "ERR_SpecialTypeAsBound";
                case ErrorCode.ERR_BadVisBound: return "ERR_BadVisBound";
                case ErrorCode.ERR_LookupInTypeVariable: return "ERR_LookupInTypeVariable";
                case ErrorCode.ERR_BadConstraintType: return "ERR_BadConstraintType";
                case ErrorCode.ERR_InstanceMemberInStaticClass: return "ERR_InstanceMemberInStaticClass";
                case ErrorCode.ERR_StaticBaseClass: return "ERR_StaticBaseClass";
                case ErrorCode.ERR_ConstructorInStaticClass: return "ERR_ConstructorInStaticClass";
                case ErrorCode.ERR_DestructorInStaticClass: return "ERR_DestructorInStaticClass";
                case ErrorCode.ERR_InstantiatingStaticClass: return "ERR_InstantiatingStaticClass";
                case ErrorCode.ERR_StaticDerivedFromNonObject: return "ERR_StaticDerivedFromNonObject";
                case ErrorCode.ERR_StaticClassInterfaceImpl: return "ERR_StaticClassInterfaceImpl";
                case ErrorCode.ERR_OperatorInStaticClass: return "ERR_OperatorInStaticClass";
                case ErrorCode.ERR_ConvertToStaticClass: return "ERR_ConvertToStaticClass";
                case ErrorCode.ERR_ConstraintIsStaticClass: return "ERR_ConstraintIsStaticClass";
                case ErrorCode.ERR_GenericArgIsStaticClass: return "ERR_GenericArgIsStaticClass";
                case ErrorCode.ERR_ArrayOfStaticClass: return "ERR_ArrayOfStaticClass";
                case ErrorCode.ERR_IndexerInStaticClass: return "ERR_IndexerInStaticClass";
                case ErrorCode.ERR_ParameterIsStaticClass: return "ERR_ParameterIsStaticClass";
                case ErrorCode.ERR_ReturnTypeIsStaticClass: return "ERR_ReturnTypeIsStaticClass";
                case ErrorCode.ERR_VarDeclIsStaticClass: return "ERR_VarDeclIsStaticClass";
                case ErrorCode.ERR_BadEmptyThrowInFinally: return "ERR_BadEmptyThrowInFinally";
                case ErrorCode.ERR_InvalidSpecifier: return "ERR_InvalidSpecifier";
                case ErrorCode.ERR_ForwardedTypeInThisAssembly: return "ERR_ForwardedTypeInThisAssembly";
                case ErrorCode.ERR_ForwardedTypeIsNested: return "ERR_ForwardedTypeIsNested";
                case ErrorCode.ERR_CycleInTypeForwarder: return "ERR_CycleInTypeForwarder";
                case ErrorCode.ERR_AssemblyNameOnNonModule: return "ERR_AssemblyNameOnNonModule";
                case ErrorCode.ERR_InvalidFwdType: return "ERR_InvalidFwdType";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberStatic: return "ERR_CloseUnimplementedInterfaceMemberStatic";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotPublic: return "ERR_CloseUnimplementedInterfaceMemberNotPublic";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongReturnType: return "ERR_CloseUnimplementedInterfaceMemberWrongReturnType";
                case ErrorCode.ERR_DuplicateTypeForwarder: return "ERR_DuplicateTypeForwarder";
                case ErrorCode.ERR_ExpectedSelectOrGroup: return "ERR_ExpectedSelectOrGroup";
                case ErrorCode.ERR_ExpectedContextualKeywordOn: return "ERR_ExpectedContextualKeywordOn";
                case ErrorCode.ERR_ExpectedContextualKeywordEquals: return "ERR_ExpectedContextualKeywordEquals";
                case ErrorCode.ERR_ExpectedContextualKeywordBy: return "ERR_ExpectedContextualKeywordBy";
                case ErrorCode.ERR_InvalidAnonymousTypeMemberDeclarator: return "ERR_InvalidAnonymousTypeMemberDeclarator";
                case ErrorCode.ERR_InvalidInitializerElementInitializer: return "ERR_InvalidInitializerElementInitializer";
                case ErrorCode.ERR_InconsistentLambdaParameterUsage: return "ERR_InconsistentLambdaParameterUsage";
                case ErrorCode.ERR_PartialMemberCannotBeAbstract: return "ERR_PartialMemberCannotBeAbstract";
                case ErrorCode.ERR_PartialMemberOnlyInPartialClass: return "ERR_PartialMemberOnlyInPartialClass";
                case ErrorCode.ERR_PartialMemberNotExplicit: return "ERR_PartialMemberNotExplicit";
                case ErrorCode.ERR_PartialMethodExtensionDifference: return "ERR_PartialMethodExtensionDifference";
                case ErrorCode.ERR_PartialMethodOnlyOneLatent: return "ERR_PartialMethodOnlyOneLatent";
                case ErrorCode.ERR_PartialMethodOnlyOneActual: return "ERR_PartialMethodOnlyOneActual";
                case ErrorCode.ERR_PartialMemberParamsDifference: return "ERR_PartialMemberParamsDifference";
                case ErrorCode.ERR_PartialMethodMustHaveLatent: return "ERR_PartialMethodMustHaveLatent";
                case ErrorCode.ERR_PartialMethodInconsistentConstraints: return "ERR_PartialMethodInconsistentConstraints";
                case ErrorCode.ERR_PartialMethodToDelegate: return "ERR_PartialMethodToDelegate";
                case ErrorCode.ERR_PartialMemberStaticDifference: return "ERR_PartialMemberStaticDifference";
                case ErrorCode.ERR_PartialMemberUnsafeDifference: return "ERR_PartialMemberUnsafeDifference";
                case ErrorCode.ERR_PartialMethodInExpressionTree: return "ERR_PartialMethodInExpressionTree";
                case ErrorCode.ERR_ExplicitImplCollisionOnRefOut: return "ERR_ExplicitImplCollisionOnRefOut";
                case ErrorCode.ERR_IndirectRecursiveConstructorCall: return "ERR_IndirectRecursiveConstructorCall";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedBadValue: return "ERR_ImplicitlyTypedVariableAssignedBadValue";
                case ErrorCode.ERR_ImplicitlyTypedVariableWithNoInitializer: return "ERR_ImplicitlyTypedVariableWithNoInitializer";
                case ErrorCode.ERR_ImplicitlyTypedVariableMultipleDeclarator: return "ERR_ImplicitlyTypedVariableMultipleDeclarator";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedArrayInitializer: return "ERR_ImplicitlyTypedVariableAssignedArrayInitializer";
                case ErrorCode.ERR_ImplicitlyTypedLocalCannotBeFixed: return "ERR_ImplicitlyTypedLocalCannotBeFixed";
                case ErrorCode.ERR_ImplicitlyTypedVariableCannotBeConst: return "ERR_ImplicitlyTypedVariableCannotBeConst";
                case ErrorCode.ERR_TypeVarNotFound: return "ERR_TypeVarNotFound";
                case ErrorCode.ERR_ImplicitlyTypedArrayNoBestType: return "ERR_ImplicitlyTypedArrayNoBestType";
                case ErrorCode.ERR_AnonymousTypePropertyAssignedBadValue: return "ERR_AnonymousTypePropertyAssignedBadValue";
                case ErrorCode.ERR_ExpressionTreeContainsBaseAccess: return "ERR_ExpressionTreeContainsBaseAccess";
                case ErrorCode.ERR_ExpressionTreeContainsAssignment: return "ERR_ExpressionTreeContainsAssignment";
                case ErrorCode.ERR_AnonymousTypeDuplicatePropertyName: return "ERR_AnonymousTypeDuplicatePropertyName";
                case ErrorCode.ERR_StatementLambdaToExpressionTree: return "ERR_StatementLambdaToExpressionTree";
                case ErrorCode.ERR_ExpressionTreeMustHaveDelegate: return "ERR_ExpressionTreeMustHaveDelegate";
                case ErrorCode.ERR_AnonymousTypeNotAvailable: return "ERR_AnonymousTypeNotAvailable";
                case ErrorCode.ERR_LambdaInIsAs: return "ERR_LambdaInIsAs";
                case ErrorCode.ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer: return "ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer";
                case ErrorCode.ERR_MissingArgument: return "ERR_MissingArgument";
                case ErrorCode.ERR_VariableUsedBeforeDeclaration: return "ERR_VariableUsedBeforeDeclaration";
                case ErrorCode.ERR_UnassignedThisAutoPropertyUnsupportedVersion: return "ERR_UnassignedThisAutoPropertyUnsupportedVersion";
                case ErrorCode.ERR_VariableUsedBeforeDeclarationAndHidesField: return "ERR_VariableUsedBeforeDeclarationAndHidesField";
                case ErrorCode.ERR_ExpressionTreeContainsBadCoalesce: return "ERR_ExpressionTreeContainsBadCoalesce";
                case ErrorCode.ERR_ArrayInitializerExpected: return "ERR_ArrayInitializerExpected";
                case ErrorCode.ERR_ArrayInitializerIncorrectLength: return "ERR_ArrayInitializerIncorrectLength";
                case ErrorCode.ERR_ExpressionTreeContainsNamedArgument: return "ERR_ExpressionTreeContainsNamedArgument";
                case ErrorCode.ERR_ExpressionTreeContainsOptionalArgument: return "ERR_ExpressionTreeContainsOptionalArgument";
                case ErrorCode.ERR_ExpressionTreeContainsIndexedProperty: return "ERR_ExpressionTreeContainsIndexedProperty";
                case ErrorCode.ERR_IndexedPropertyRequiresParams: return "ERR_IndexedPropertyRequiresParams";
                case ErrorCode.ERR_IndexedPropertyMustHaveAllOptionalParams: return "ERR_IndexedPropertyMustHaveAllOptionalParams";
                case ErrorCode.ERR_IdentifierExpected: return "ERR_IdentifierExpected";
                case ErrorCode.ERR_SemicolonExpected: return "ERR_SemicolonExpected";
                case ErrorCode.ERR_SyntaxError: return "ERR_SyntaxError";
                case ErrorCode.ERR_DuplicateModifier: return "ERR_DuplicateModifier";
                case ErrorCode.ERR_DuplicateAccessor: return "ERR_DuplicateAccessor";
                case ErrorCode.ERR_IntegralTypeExpected: return "ERR_IntegralTypeExpected";
                case ErrorCode.ERR_IllegalEscape: return "ERR_IllegalEscape";
                case ErrorCode.ERR_NewlineInConst: return "ERR_NewlineInConst";
                case ErrorCode.ERR_EmptyCharConst: return "ERR_EmptyCharConst";
                case ErrorCode.ERR_TooManyCharsInConst: return "ERR_TooManyCharsInConst";
                case ErrorCode.ERR_InvalidNumber: return "ERR_InvalidNumber";
                case ErrorCode.ERR_GetOrSetExpected: return "ERR_GetOrSetExpected";
                case ErrorCode.ERR_ClassTypeExpected: return "ERR_ClassTypeExpected";
                case ErrorCode.ERR_NamedArgumentExpected: return "ERR_NamedArgumentExpected";
                case ErrorCode.ERR_TooManyCatches: return "ERR_TooManyCatches";
                case ErrorCode.ERR_ThisOrBaseExpected: return "ERR_ThisOrBaseExpected";
                case ErrorCode.ERR_OvlUnaryOperatorExpected: return "ERR_OvlUnaryOperatorExpected";
                case ErrorCode.ERR_OvlBinaryOperatorExpected: return "ERR_OvlBinaryOperatorExpected";
                case ErrorCode.ERR_IntOverflow: return "ERR_IntOverflow";
                case ErrorCode.ERR_EOFExpected: return "ERR_EOFExpected";
                case ErrorCode.ERR_BadEmbeddedStmt: return "ERR_BadEmbeddedStmt";
                case ErrorCode.ERR_PPDirectiveExpected: return "ERR_PPDirectiveExpected";
                case ErrorCode.ERR_EndOfPPLineExpected: return "ERR_EndOfPPLineExpected";
                case ErrorCode.ERR_CloseParenExpected: return "ERR_CloseParenExpected";
                case ErrorCode.ERR_EndifDirectiveExpected: return "ERR_EndifDirectiveExpected";
                case ErrorCode.ERR_UnexpectedDirective: return "ERR_UnexpectedDirective";
                case ErrorCode.ERR_ErrorDirective: return "ERR_ErrorDirective";
                case ErrorCode.ERR_TypeExpected: return "ERR_TypeExpected";
                case ErrorCode.ERR_PPDefFollowsToken: return "ERR_PPDefFollowsToken";
                case ErrorCode.ERR_OpenEndedComment: return "ERR_OpenEndedComment";
                case ErrorCode.ERR_OvlOperatorExpected: return "ERR_OvlOperatorExpected";
                case ErrorCode.ERR_EndRegionDirectiveExpected: return "ERR_EndRegionDirectiveExpected";
                case ErrorCode.ERR_UnterminatedStringLit: return "ERR_UnterminatedStringLit";
                case ErrorCode.ERR_BadDirectivePlacement: return "ERR_BadDirectivePlacement";
                case ErrorCode.ERR_IdentifierExpectedKW: return "ERR_IdentifierExpectedKW";
                case ErrorCode.ERR_SemiOrLBraceExpected: return "ERR_SemiOrLBraceExpected";
                case ErrorCode.ERR_MultiTypeInDeclaration: return "ERR_MultiTypeInDeclaration";
                case ErrorCode.ERR_AddOrRemoveExpected: return "ERR_AddOrRemoveExpected";
                case ErrorCode.ERR_UnexpectedCharacter: return "ERR_UnexpectedCharacter";
                case ErrorCode.ERR_ProtectedInStatic: return "ERR_ProtectedInStatic";
                case ErrorCode.ERR_IncrementLvalueExpected: return "ERR_IncrementLvalueExpected";
                case ErrorCode.ERR_NoSuchMemberOrExtension: return "ERR_NoSuchMemberOrExtension";
                case ErrorCode.ERR_DeprecatedCollectionInitAddStr: return "ERR_DeprecatedCollectionInitAddStr";
                case ErrorCode.ERR_DefaultValueNotAllowed: return "ERR_DefaultValueNotAllowed";
                case ErrorCode.ERR_PartialWrongTypeParamsVariance: return "ERR_PartialWrongTypeParamsVariance";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFoundFwd: return "ERR_GlobalSingleTypeNameNotFoundFwd";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNSFwd: return "ERR_DottedTypeNameNotFoundInNSFwd";
                case ErrorCode.ERR_SingleTypeNameNotFoundFwd: return "ERR_SingleTypeNameNotFoundFwd";
                case ErrorCode.ERR_UnexpectedToken: return "ERR_UnexpectedToken";
                case ErrorCode.ERR_BadThisParam: return "ERR_BadThisParam";
                case ErrorCode.ERR_BadTypeforThis: return "ERR_BadTypeforThis";
                case ErrorCode.ERR_BadParamModThis: return "ERR_BadParamModThis";
                case ErrorCode.ERR_BadExtensionMeth: return "ERR_BadExtensionMeth";
                case ErrorCode.ERR_BadExtensionAgg: return "ERR_BadExtensionAgg";
                case ErrorCode.ERR_DupParamMod: return "ERR_DupParamMod";
                case ErrorCode.ERR_ExtensionMethodsDecl: return "ERR_ExtensionMethodsDecl";
                case ErrorCode.ERR_ExtensionAttrNotFound: return "ERR_ExtensionAttrNotFound";
                case ErrorCode.ERR_ExplicitExtension: return "ERR_ExplicitExtension";
                case ErrorCode.ERR_ValueTypeExtDelegate: return "ERR_ValueTypeExtDelegate";
                case ErrorCode.ERR_BadArgCount: return "ERR_BadArgCount";
                case ErrorCode.ERR_BadArgType: return "ERR_BadArgType";
                case ErrorCode.ERR_NoSourceFile: return "ERR_NoSourceFile";
                case ErrorCode.ERR_CantRefResource: return "ERR_CantRefResource";
                case ErrorCode.ERR_ResourceNotUnique: return "ERR_ResourceNotUnique";
                case ErrorCode.ERR_ImportNonAssembly: return "ERR_ImportNonAssembly";
                case ErrorCode.ERR_RefLvalueExpected: return "ERR_RefLvalueExpected";
                case ErrorCode.ERR_BaseInStaticMeth: return "ERR_BaseInStaticMeth";
                case ErrorCode.ERR_BaseInBadContext: return "ERR_BaseInBadContext";
                case ErrorCode.ERR_RbraceExpected: return "ERR_RbraceExpected";
                case ErrorCode.ERR_LbraceExpected: return "ERR_LbraceExpected";
                case ErrorCode.ERR_InExpected: return "ERR_InExpected";
                case ErrorCode.ERR_InvalidPreprocExpr: return "ERR_InvalidPreprocExpr";
                case ErrorCode.ERR_InvalidMemberDecl: return "ERR_InvalidMemberDecl";
                case ErrorCode.ERR_MemberNeedsType: return "ERR_MemberNeedsType";
                case ErrorCode.ERR_BadBaseType: return "ERR_BadBaseType";
                case ErrorCode.ERR_ExpectedEndTry: return "ERR_ExpectedEndTry";
                case ErrorCode.ERR_InvalidExprTerm: return "ERR_InvalidExprTerm";
                case ErrorCode.ERR_BadNewExpr: return "ERR_BadNewExpr";
                case ErrorCode.ERR_NoNamespacePrivate: return "ERR_NoNamespacePrivate";
                case ErrorCode.ERR_BadVarDecl: return "ERR_BadVarDecl";
                case ErrorCode.ERR_UsingAfterElements: return "ERR_UsingAfterElements";
                case ErrorCode.ERR_BadBinOpArgs: return "ERR_BadBinOpArgs";
                case ErrorCode.ERR_BadUnOpArgs: return "ERR_BadUnOpArgs";
                case ErrorCode.ERR_NoVoidParameter: return "ERR_NoVoidParameter";
                case ErrorCode.ERR_DuplicateAlias: return "ERR_DuplicateAlias";
                case ErrorCode.ERR_BadProtectedAccess: return "ERR_BadProtectedAccess";
                case ErrorCode.ERR_AddModuleAssembly: return "ERR_AddModuleAssembly";
                case ErrorCode.ERR_BindToBogusProp2: return "ERR_BindToBogusProp2";
                case ErrorCode.ERR_BindToBogusProp1: return "ERR_BindToBogusProp1";
                case ErrorCode.ERR_NoVoidHere: return "ERR_NoVoidHere";
                case ErrorCode.ERR_IndexerNeedsParam: return "ERR_IndexerNeedsParam";
                case ErrorCode.ERR_BadArraySyntax: return "ERR_BadArraySyntax";
                case ErrorCode.ERR_BadOperatorSyntax: return "ERR_BadOperatorSyntax";
                case ErrorCode.ERR_MainClassNotFound: return "ERR_MainClassNotFound";
                case ErrorCode.ERR_MainClassNotClass: return "ERR_MainClassNotClass";
                case ErrorCode.ERR_NoMainInClass: return "ERR_NoMainInClass";
                case ErrorCode.ERR_OutputNeedsName: return "ERR_OutputNeedsName";
                case ErrorCode.ERR_CantHaveWin32ResAndManifest: return "ERR_CantHaveWin32ResAndManifest";
                case ErrorCode.ERR_CantHaveWin32ResAndIcon: return "ERR_CantHaveWin32ResAndIcon";
                case ErrorCode.ERR_CantReadResource: return "ERR_CantReadResource";
                case ErrorCode.ERR_DocFileGen: return "ERR_DocFileGen";
                case ErrorCode.ERR_BadStackAllocExpr: return "ERR_BadStackAllocExpr";
                case ErrorCode.ERR_InvalidLineNumber: return "ERR_InvalidLineNumber";
                case ErrorCode.ERR_MissingPPFile: return "ERR_MissingPPFile";
                case ErrorCode.ERR_ForEachMissingMember: return "ERR_ForEachMissingMember";
                case ErrorCode.ERR_BadWin32Res: return "ERR_BadWin32Res";
                case ErrorCode.ERR_BadModifierLocation: return "ERR_BadModifierLocation";
                case ErrorCode.ERR_MissingArraySize: return "ERR_MissingArraySize";
                case ErrorCode.ERR_BadDelArgCount: return "ERR_BadDelArgCount";
                case ErrorCode.ERR_UnexpectedSemicolon: return "ERR_UnexpectedSemicolon";
                case ErrorCode.ERR_MethodReturnCantBeRefAny: return "ERR_MethodReturnCantBeRefAny";
                case ErrorCode.ERR_CompileCancelled: return "ERR_CompileCancelled";
                case ErrorCode.ERR_MethodArgCantBeRefAny: return "ERR_MethodArgCantBeRefAny";
                case ErrorCode.ERR_AssgReadonlyLocal: return "ERR_AssgReadonlyLocal";
                case ErrorCode.ERR_RefReadonlyLocal: return "ERR_RefReadonlyLocal";
                case ErrorCode.ERR_CantUseRequiredAttribute: return "ERR_CantUseRequiredAttribute";
                case ErrorCode.ERR_NoModifiersOnAccessor: return "ERR_NoModifiersOnAccessor";
                case ErrorCode.ERR_ParamsCantBeWithModifier: return "ERR_ParamsCantBeWithModifier";
                case ErrorCode.ERR_ReturnNotLValue: return "ERR_ReturnNotLValue";
                case ErrorCode.ERR_MissingCoClass: return "ERR_MissingCoClass";
                case ErrorCode.ERR_AmbiguousAttribute: return "ERR_AmbiguousAttribute";
                case ErrorCode.ERR_BadArgExtraRef: return "ERR_BadArgExtraRef";
                case ErrorCode.ERR_BadCompatMode: return "ERR_BadCompatMode";
                case ErrorCode.ERR_DelegateOnConditional: return "ERR_DelegateOnConditional";
                case ErrorCode.ERR_CantMakeTempFile: return "ERR_CantMakeTempFile";
                case ErrorCode.ERR_BadArgRef: return "ERR_BadArgRef";
                case ErrorCode.ERR_YieldInAnonMeth: return "ERR_YieldInAnonMeth";
                case ErrorCode.ERR_ReturnInIterator: return "ERR_ReturnInIterator";
                case ErrorCode.ERR_BadIteratorArgType: return "ERR_BadIteratorArgType";
                case ErrorCode.ERR_BadIteratorReturn: return "ERR_BadIteratorReturn";
                case ErrorCode.ERR_BadYieldInFinally: return "ERR_BadYieldInFinally";
                case ErrorCode.ERR_BadYieldInTryOfCatch: return "ERR_BadYieldInTryOfCatch";
                case ErrorCode.ERR_EmptyYield: return "ERR_EmptyYield";
                case ErrorCode.ERR_AnonDelegateCantUse: return "ERR_AnonDelegateCantUse";
                case ErrorCode.ERR_BadYieldInCatch: return "ERR_BadYieldInCatch";
                case ErrorCode.ERR_BadDelegateLeave: return "ERR_BadDelegateLeave";
                case ErrorCode.ERR_VarargsIterator: return "ERR_VarargsIterator";
                case ErrorCode.ERR_UnsafeIteratorArgType: return "ERR_UnsafeIteratorArgType";
                case ErrorCode.ERR_BadCoClassSig: return "ERR_BadCoClassSig";
                case ErrorCode.ERR_MultipleIEnumOfT: return "ERR_MultipleIEnumOfT";
                case ErrorCode.ERR_FixedDimsRequired: return "ERR_FixedDimsRequired";
                case ErrorCode.ERR_FixedNotInStruct: return "ERR_FixedNotInStruct";
                case ErrorCode.ERR_AnonymousReturnExpected: return "ERR_AnonymousReturnExpected";
                case ErrorCode.ERR_ExpectedVerbatimLiteral: return "ERR_ExpectedVerbatimLiteral";
                case ErrorCode.ERR_AssgReadonly2: return "ERR_AssgReadonly2";
                case ErrorCode.ERR_RefReadonly2: return "ERR_RefReadonly2";
                case ErrorCode.ERR_AssgReadonlyStatic2: return "ERR_AssgReadonlyStatic2";
                case ErrorCode.ERR_RefReadonlyStatic2: return "ERR_RefReadonlyStatic2";
                case ErrorCode.ERR_AssgReadonlyLocal2Cause: return "ERR_AssgReadonlyLocal2Cause";
                case ErrorCode.ERR_RefReadonlyLocal2Cause: return "ERR_RefReadonlyLocal2Cause";
                case ErrorCode.ERR_AssgReadonlyLocalCause: return "ERR_AssgReadonlyLocalCause";
                case ErrorCode.ERR_RefReadonlyLocalCause: return "ERR_RefReadonlyLocalCause";
                case ErrorCode.ERR_AnonMethToNonDel: return "ERR_AnonMethToNonDel";
                case ErrorCode.ERR_CantConvAnonMethParams: return "ERR_CantConvAnonMethParams";
                case ErrorCode.ERR_CantConvAnonMethReturns: return "ERR_CantConvAnonMethReturns";
                case ErrorCode.ERR_IllegalFixedType: return "ERR_IllegalFixedType";
                case ErrorCode.ERR_FixedOverflow: return "ERR_FixedOverflow";
                case ErrorCode.ERR_InvalidFixedArraySize: return "ERR_InvalidFixedArraySize";
                case ErrorCode.ERR_FixedBufferNotFixed: return "ERR_FixedBufferNotFixed";
                case ErrorCode.ERR_AttributeNotOnAccessor: return "ERR_AttributeNotOnAccessor";
                case ErrorCode.ERR_IllegalVarArgs: return "ERR_IllegalVarArgs";
                case ErrorCode.ERR_IllegalParams: return "ERR_IllegalParams";
                case ErrorCode.ERR_BadModifiersOnNamespace: return "ERR_BadModifiersOnNamespace";
                case ErrorCode.ERR_BadPlatformType: return "ERR_BadPlatformType";
                case ErrorCode.ERR_ThisStructNotInAnonMeth: return "ERR_ThisStructNotInAnonMeth";
                case ErrorCode.ERR_NoConvToIDisp: return "ERR_NoConvToIDisp";
                case ErrorCode.ERR_BadParamRef: return "ERR_BadParamRef";
                case ErrorCode.ERR_BadParamExtraRef: return "ERR_BadParamExtraRef";
                case ErrorCode.ERR_BadParamType: return "ERR_BadParamType";
                case ErrorCode.ERR_BadExternIdentifier: return "ERR_BadExternIdentifier";
                case ErrorCode.ERR_AliasMissingFile: return "ERR_AliasMissingFile";
                case ErrorCode.ERR_GlobalExternAlias: return "ERR_GlobalExternAlias";
                case ErrorCode.ERR_LocalCantBeFixedAndHoisted: return "ERR_LocalCantBeFixedAndHoisted";
                case ErrorCode.ERR_CantConvAnonMethNoParams: return "ERR_CantConvAnonMethNoParams";
                case ErrorCode.ERR_ConditionalOnNonAttributeClass: return "ERR_ConditionalOnNonAttributeClass";
                case ErrorCode.ERR_DuplicateImport: return "ERR_DuplicateImport";
                case ErrorCode.ERR_DuplicateImportSimple: return "ERR_DuplicateImportSimple";
                case ErrorCode.ERR_AssemblyMatchBadVersion: return "ERR_AssemblyMatchBadVersion";
                case ErrorCode.ERR_FixedNeedsLvalue: return "ERR_FixedNeedsLvalue";
                case ErrorCode.ERR_CantChangeTypeOnOverride: return "ERR_CantChangeTypeOnOverride";
                case ErrorCode.ERR_DoNotUseFixedBufferAttr: return "ERR_DoNotUseFixedBufferAttr";
                case ErrorCode.ERR_CantOpenWin32Res: return "ERR_CantOpenWin32Res";
                case ErrorCode.ERR_NoMultipleInheritance: return "ERR_NoMultipleInheritance";
                case ErrorCode.ERR_BaseClassMustBeFirst: return "ERR_BaseClassMustBeFirst";
                case ErrorCode.ERR_FriendAssemblyBadArgs: return "ERR_FriendAssemblyBadArgs";
                case ErrorCode.ERR_FriendAssemblySNReq: return "ERR_FriendAssemblySNReq";
                case ErrorCode.ERR_DelegateOnNullable: return "ERR_DelegateOnNullable";
                case ErrorCode.ERR_BadCtorArgCount: return "ERR_BadCtorArgCount";
                case ErrorCode.ERR_GlobalAttributesNotFirst: return "ERR_GlobalAttributesNotFirst";
                case ErrorCode.ERR_ExpressionExpected: return "ERR_ExpressionExpected";
                case ErrorCode.ERR_DefaultValueMustBeConstant: return "ERR_DefaultValueMustBeConstant";
                case ErrorCode.ERR_DefaultValueBeforeRequiredValue: return "ERR_DefaultValueBeforeRequiredValue";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgument: return "ERR_NamedArgumentSpecificationBeforeFixedArgument";
                case ErrorCode.ERR_BadNamedArgument: return "ERR_BadNamedArgument";
                case ErrorCode.ERR_DuplicateNamedArgument: return "ERR_DuplicateNamedArgument";
                case ErrorCode.ERR_RefOutDefaultValue: return "ERR_RefOutDefaultValue";
                case ErrorCode.ERR_NamedArgumentForArray: return "ERR_NamedArgumentForArray";
                case ErrorCode.ERR_DefaultValueForExtensionParameter: return "ERR_DefaultValueForExtensionParameter";
                case ErrorCode.ERR_NamedArgumentUsedInPositional: return "ERR_NamedArgumentUsedInPositional";
                case ErrorCode.ERR_DefaultValueUsedWithAttributes: return "ERR_DefaultValueUsedWithAttributes";
                case ErrorCode.ERR_BadNamedArgumentForDelegateInvoke: return "ERR_BadNamedArgumentForDelegateInvoke";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttribute: return "ERR_NoPIAAssemblyMissingAttribute";
                case ErrorCode.ERR_NoCanonicalView: return "ERR_NoCanonicalView";
                case ErrorCode.ERR_NoConversionForDefaultParam: return "ERR_NoConversionForDefaultParam";
                case ErrorCode.ERR_DefaultValueForParamsParameter: return "ERR_DefaultValueForParamsParameter";
                case ErrorCode.ERR_NewCoClassOnLink: return "ERR_NewCoClassOnLink";
                case ErrorCode.ERR_NoPIANestedType: return "ERR_NoPIANestedType";
                case ErrorCode.ERR_InteropTypeMissingAttribute: return "ERR_InteropTypeMissingAttribute";
                case ErrorCode.ERR_InteropStructContainsMethods: return "ERR_InteropStructContainsMethods";
                case ErrorCode.ERR_InteropTypesWithSameNameAndGuid: return "ERR_InteropTypesWithSameNameAndGuid";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttributes: return "ERR_NoPIAAssemblyMissingAttributes";
                case ErrorCode.ERR_AssemblySpecifiedForLinkAndRef: return "ERR_AssemblySpecifiedForLinkAndRef";
                case ErrorCode.ERR_LocalTypeNameClash: return "ERR_LocalTypeNameClash";
                case ErrorCode.ERR_NotNullRefDefaultParameter: return "ERR_NotNullRefDefaultParameter";
                case ErrorCode.ERR_FixedLocalInLambda: return "ERR_FixedLocalInLambda";
                case ErrorCode.ERR_MissingMethodOnSourceInterface: return "ERR_MissingMethodOnSourceInterface";
                case ErrorCode.ERR_MissingSourceInterface: return "ERR_MissingSourceInterface";
                case ErrorCode.ERR_GenericsUsedInNoPIAType: return "ERR_GenericsUsedInNoPIAType";
                case ErrorCode.ERR_GenericsUsedAcrossAssemblies: return "ERR_GenericsUsedAcrossAssemblies";
                case ErrorCode.ERR_NoConversionForNubDefaultParam: return "ERR_NoConversionForNubDefaultParam";
                case ErrorCode.ERR_InvalidSubsystemVersion: return "ERR_InvalidSubsystemVersion";
                case ErrorCode.ERR_InteropMethodWithBody: return "ERR_InteropMethodWithBody";
                case ErrorCode.ERR_BadWarningLevel: return "ERR_BadWarningLevel";
                case ErrorCode.ERR_BadDebugType: return "ERR_BadDebugType";
                case ErrorCode.ERR_BadResourceVis: return "ERR_BadResourceVis";
                case ErrorCode.ERR_DefaultValueTypeMustMatch: return "ERR_DefaultValueTypeMustMatch";
                case ErrorCode.ERR_DefaultValueBadValueType: return "ERR_DefaultValueBadValueType";
                case ErrorCode.ERR_MemberAlreadyInitialized: return "ERR_MemberAlreadyInitialized";
                case ErrorCode.ERR_MemberCannotBeInitialized: return "ERR_MemberCannotBeInitialized";
                case ErrorCode.ERR_StaticMemberInObjectInitializer: return "ERR_StaticMemberInObjectInitializer";
                case ErrorCode.ERR_ReadonlyValueTypeInObjectInitializer: return "ERR_ReadonlyValueTypeInObjectInitializer";
                case ErrorCode.ERR_ValueTypePropertyInObjectInitializer: return "ERR_ValueTypePropertyInObjectInitializer";
                case ErrorCode.ERR_UnsafeTypeInObjectCreation: return "ERR_UnsafeTypeInObjectCreation";
                case ErrorCode.ERR_EmptyElementInitializer: return "ERR_EmptyElementInitializer";
                case ErrorCode.ERR_InitializerAddHasWrongSignature: return "ERR_InitializerAddHasWrongSignature";
                case ErrorCode.ERR_CollectionInitRequiresIEnumerable: return "ERR_CollectionInitRequiresIEnumerable";
                case ErrorCode.ERR_CantOpenWin32Manifest: return "ERR_CantOpenWin32Manifest";
                case ErrorCode.ERR_BadInstanceArgType: return "ERR_BadInstanceArgType";
                case ErrorCode.ERR_QueryDuplicateRangeVariable: return "ERR_QueryDuplicateRangeVariable";
                case ErrorCode.ERR_QueryRangeVariableOverrides: return "ERR_QueryRangeVariableOverrides";
                case ErrorCode.ERR_QueryRangeVariableAssignedBadValue: return "ERR_QueryRangeVariableAssignedBadValue";
                case ErrorCode.ERR_QueryNoProviderCastable: return "ERR_QueryNoProviderCastable";
                case ErrorCode.ERR_QueryNoProviderStandard: return "ERR_QueryNoProviderStandard";
                case ErrorCode.ERR_QueryNoProvider: return "ERR_QueryNoProvider";
                case ErrorCode.ERR_QueryOuterKey: return "ERR_QueryOuterKey";
                case ErrorCode.ERR_QueryInnerKey: return "ERR_QueryInnerKey";
                case ErrorCode.ERR_QueryOutRefRangeVariable: return "ERR_QueryOutRefRangeVariable";
                case ErrorCode.ERR_QueryMultipleProviders: return "ERR_QueryMultipleProviders";
                case ErrorCode.ERR_QueryTypeInferenceFailedMulti: return "ERR_QueryTypeInferenceFailedMulti";
                case ErrorCode.ERR_QueryTypeInferenceFailed: return "ERR_QueryTypeInferenceFailed";
                case ErrorCode.ERR_QueryTypeInferenceFailedSelectMany: return "ERR_QueryTypeInferenceFailedSelectMany";
                case ErrorCode.ERR_ExpressionTreeContainsPointerOp: return "ERR_ExpressionTreeContainsPointerOp";
                case ErrorCode.ERR_ExpressionTreeContainsAnonymousMethod: return "ERR_ExpressionTreeContainsAnonymousMethod";
                case ErrorCode.ERR_AnonymousMethodToExpressionTree: return "ERR_AnonymousMethodToExpressionTree";
                case ErrorCode.ERR_QueryRangeVariableReadOnly: return "ERR_QueryRangeVariableReadOnly";
                case ErrorCode.ERR_QueryRangeVariableSameAsTypeParam: return "ERR_QueryRangeVariableSameAsTypeParam";
                case ErrorCode.ERR_TypeVarNotFoundRangeVariable: return "ERR_TypeVarNotFoundRangeVariable";
                case ErrorCode.ERR_BadArgTypesForCollectionAdd: return "ERR_BadArgTypesForCollectionAdd";
                case ErrorCode.ERR_ByRefParameterInExpressionTree: return "ERR_ByRefParameterInExpressionTree";
                case ErrorCode.ERR_VarArgsInExpressionTree: return "ERR_VarArgsInExpressionTree";
                case ErrorCode.ERR_InitializerAddHasParamModifiers: return "ERR_InitializerAddHasParamModifiers";
                case ErrorCode.ERR_NonInvocableMemberCalled: return "ERR_NonInvocableMemberCalled";
                case ErrorCode.ERR_ObjectOrCollectionInitializerWithDelegateCreation: return "ERR_ObjectOrCollectionInitializerWithDelegateCreation";
                case ErrorCode.ERR_InvalidConstantDeclarationType: return "ERR_InvalidConstantDeclarationType";
                case ErrorCode.ERR_IllegalVarianceSyntax: return "ERR_IllegalVarianceSyntax";
                case ErrorCode.ERR_UnexpectedVariance: return "ERR_UnexpectedVariance";
                case ErrorCode.ERR_BadDynamicTypeof: return "ERR_BadDynamicTypeof";
                case ErrorCode.ERR_ExpressionTreeContainsDynamicOperation: return "ERR_ExpressionTreeContainsDynamicOperation";
                case ErrorCode.ERR_BadDynamicConversion: return "ERR_BadDynamicConversion";
                case ErrorCode.ERR_DeriveFromDynamic: return "ERR_DeriveFromDynamic";
                case ErrorCode.ERR_DeriveFromConstructedDynamic: return "ERR_DeriveFromConstructedDynamic";
                case ErrorCode.ERR_DynamicTypeAsBound: return "ERR_DynamicTypeAsBound";
                case ErrorCode.ERR_ConstructedDynamicTypeAsBound: return "ERR_ConstructedDynamicTypeAsBound";
                case ErrorCode.ERR_DynamicRequiredTypesMissing: return "ERR_DynamicRequiredTypesMissing";
                case ErrorCode.ERR_ExplicitDynamicAttr: return "ERR_ExplicitDynamicAttr";
                case ErrorCode.ERR_NoDynamicPhantomOnBase: return "ERR_NoDynamicPhantomOnBase";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseIndexer: return "ERR_NoDynamicPhantomOnBaseIndexer";
                case ErrorCode.ERR_BadArgTypeDynamicExtension: return "ERR_BadArgTypeDynamicExtension";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseCtor: return "ERR_NoDynamicPhantomOnBaseCtor";
                case ErrorCode.ERR_BadDynamicMethodArgMemgrp: return "ERR_BadDynamicMethodArgMemgrp";
                case ErrorCode.ERR_BadDynamicMethodArgLambda: return "ERR_BadDynamicMethodArgLambda";
                case ErrorCode.ERR_BadDynamicMethodArg: return "ERR_BadDynamicMethodArg";
                case ErrorCode.ERR_BadDynamicQuery: return "ERR_BadDynamicQuery";
                case ErrorCode.ERR_DynamicAttributeMissing: return "ERR_DynamicAttributeMissing";
                case ErrorCode.ERR_BadAsyncReturn: return "ERR_BadAsyncReturn";
                case ErrorCode.ERR_BadAwaitInFinally: return "ERR_BadAwaitInFinally";
                case ErrorCode.ERR_BadAwaitInCatch: return "ERR_BadAwaitInCatch";
                case ErrorCode.ERR_BadAwaitArg: return "ERR_BadAwaitArg";
                case ErrorCode.ERR_BadAsyncArgType: return "ERR_BadAsyncArgType";
                case ErrorCode.ERR_BadAsyncExpressionTree: return "ERR_BadAsyncExpressionTree";
                case ErrorCode.ERR_MixingWinRTEventWithRegular: return "ERR_MixingWinRTEventWithRegular";
                case ErrorCode.ERR_BadAwaitWithoutAsync: return "ERR_BadAwaitWithoutAsync";
                case ErrorCode.ERR_BadAsyncLacksBody: return "ERR_BadAsyncLacksBody";
                case ErrorCode.ERR_BadAwaitInQuery: return "ERR_BadAwaitInQuery";
                case ErrorCode.ERR_BadAwaitInLock: return "ERR_BadAwaitInLock";
                case ErrorCode.ERR_TaskRetNoObjectRequired: return "ERR_TaskRetNoObjectRequired";
                case ErrorCode.ERR_FileNotFound: return "ERR_FileNotFound";
                case ErrorCode.ERR_NoFileSpec: return "ERR_NoFileSpec";
                case ErrorCode.ERR_SwitchNeedsString: return "ERR_SwitchNeedsString";
                case ErrorCode.ERR_BadSwitch: return "ERR_BadSwitch";
                case ErrorCode.ERR_OpenResponseFile: return "ERR_OpenResponseFile";
                case ErrorCode.ERR_CantOpenFileWrite: return "ERR_CantOpenFileWrite";
                case ErrorCode.ERR_BadBaseNumber: return "ERR_BadBaseNumber";
                case ErrorCode.ERR_BinaryFile: return "ERR_BinaryFile";
                case ErrorCode.ERR_NoMainOnDLL: return "ERR_NoMainOnDLL";
                case ErrorCode.ERR_InvalidFileAlignment: return "ERR_InvalidFileAlignment";
                case ErrorCode.ERR_OneAliasPerReference: return "ERR_OneAliasPerReference";
                case ErrorCode.ERR_SwitchNeedsNumber: return "ERR_SwitchNeedsNumber";
                case ErrorCode.ERR_MissingDebugSwitch: return "ERR_MissingDebugSwitch";
                case ErrorCode.ERR_ComRefCallInExpressionTree: return "ERR_ComRefCallInExpressionTree";
                case ErrorCode.ERR_InvalidFormatForGuidForOption: return "ERR_InvalidFormatForGuidForOption";
                case ErrorCode.ERR_MissingGuidForOption: return "ERR_MissingGuidForOption";
                case ErrorCode.ERR_InvalidOutputName: return "ERR_InvalidOutputName";
                case ErrorCode.ERR_InvalidDebugInformationFormat: return "ERR_InvalidDebugInformationFormat";
                case ErrorCode.ERR_LegacyObjectIdSyntax: return "ERR_LegacyObjectIdSyntax";
                case ErrorCode.ERR_SourceLinkRequiresPdb: return "ERR_SourceLinkRequiresPdb";
                case ErrorCode.ERR_CannotEmbedWithoutPdb: return "ERR_CannotEmbedWithoutPdb";
                case ErrorCode.ERR_BadSwitchValue: return "ERR_BadSwitchValue";
                case ErrorCode.ERR_BadAwaitArgIntrinsic: return "ERR_BadAwaitArgIntrinsic";
                case ErrorCode.ERR_BadAwaitAsIdentifier: return "ERR_BadAwaitAsIdentifier";
                case ErrorCode.ERR_AwaitInUnsafeContext: return "ERR_AwaitInUnsafeContext";
                case ErrorCode.ERR_UnsafeAsyncArgType: return "ERR_UnsafeAsyncArgType";
                case ErrorCode.ERR_VarargsAsync: return "ERR_VarargsAsync";
                case ErrorCode.ERR_ByRefTypeAndAwait: return "ERR_ByRefTypeAndAwait";
                case ErrorCode.ERR_BadAwaitArgVoidCall: return "ERR_BadAwaitArgVoidCall";
                case ErrorCode.ERR_NonTaskMainCantBeAsync: return "ERR_NonTaskMainCantBeAsync";
                case ErrorCode.ERR_CantConvAsyncAnonFuncReturns: return "ERR_CantConvAsyncAnonFuncReturns";
                case ErrorCode.ERR_BadAwaiterPattern: return "ERR_BadAwaiterPattern";
                case ErrorCode.ERR_BadSpecialByRefParameter: return "ERR_BadSpecialByRefParameter";
                case ErrorCode.ERR_SpecialByRefInLambda: return "ERR_SpecialByRefInLambda";
                case ErrorCode.ERR_SynchronizedAsyncMethod: return "ERR_SynchronizedAsyncMethod";
                case ErrorCode.ERR_BadAsyncReturnExpression: return "ERR_BadAsyncReturnExpression";
                case ErrorCode.ERR_NoConversionForCallerLineNumberParam: return "ERR_NoConversionForCallerLineNumberParam";
                case ErrorCode.ERR_NoConversionForCallerFilePathParam: return "ERR_NoConversionForCallerFilePathParam";
                case ErrorCode.ERR_NoConversionForCallerMemberNameParam: return "ERR_NoConversionForCallerMemberNameParam";
                case ErrorCode.ERR_BadCallerLineNumberParamWithoutDefaultValue: return "ERR_BadCallerLineNumberParamWithoutDefaultValue";
                case ErrorCode.ERR_BadCallerFilePathParamWithoutDefaultValue: return "ERR_BadCallerFilePathParamWithoutDefaultValue";
                case ErrorCode.ERR_BadCallerMemberNameParamWithoutDefaultValue: return "ERR_BadCallerMemberNameParamWithoutDefaultValue";
                case ErrorCode.ERR_BadPrefer32OnLib: return "ERR_BadPrefer32OnLib";
                case ErrorCode.ERR_DoesntImplementAwaitInterface: return "ERR_DoesntImplementAwaitInterface";
                case ErrorCode.ERR_BadAwaitArg_NeedSystem: return "ERR_BadAwaitArg_NeedSystem";
                case ErrorCode.ERR_CantReturnVoid: return "ERR_CantReturnVoid";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct";
                case ErrorCode.ERR_BadAwaitWithoutAsyncMethod: return "ERR_BadAwaitWithoutAsyncMethod";
                case ErrorCode.ERR_BadAwaitWithoutVoidAsyncMethod: return "ERR_BadAwaitWithoutVoidAsyncMethod";
                case ErrorCode.ERR_BadAwaitWithoutAsyncLambda: return "ERR_BadAwaitWithoutAsyncLambda";
                case ErrorCode.ERR_NoSuchMemberOrExtensionNeedUsing: return "ERR_NoSuchMemberOrExtensionNeedUsing";
                case ErrorCode.ERR_NoEntryPoint: return "ERR_NoEntryPoint";
                case ErrorCode.ERR_UnexpectedAliasedName: return "ERR_UnexpectedAliasedName";
                case ErrorCode.ERR_UnexpectedGenericName: return "ERR_UnexpectedGenericName";
                case ErrorCode.ERR_UnexpectedUnboundGenericName: return "ERR_UnexpectedUnboundGenericName";
                case ErrorCode.ERR_GlobalStatement: return "ERR_GlobalStatement";
                case ErrorCode.ERR_BadUsingType: return "ERR_BadUsingType";
                case ErrorCode.ERR_ReservedAssemblyName: return "ERR_ReservedAssemblyName";
                case ErrorCode.ERR_PPReferenceFollowsToken: return "ERR_PPReferenceFollowsToken";
                case ErrorCode.ERR_ExpectedPPFile: return "ERR_ExpectedPPFile";
                case ErrorCode.ERR_ReferenceDirectiveOnlyAllowedInScripts: return "ERR_ReferenceDirectiveOnlyAllowedInScripts";
                case ErrorCode.ERR_NameNotInContextPossibleMissingReference: return "ERR_NameNotInContextPossibleMissingReference";
                case ErrorCode.ERR_MetadataNameTooLong: return "ERR_MetadataNameTooLong";
                case ErrorCode.ERR_AttributesNotAllowed: return "ERR_AttributesNotAllowed";
                case ErrorCode.ERR_ExternAliasNotAllowed: return "ERR_ExternAliasNotAllowed";
                case ErrorCode.ERR_ConflictingAliasAndDefinition: return "ERR_ConflictingAliasAndDefinition";
                case ErrorCode.ERR_GlobalDefinitionOrStatementExpected: return "ERR_GlobalDefinitionOrStatementExpected";
                case ErrorCode.ERR_ExpectedSingleScript: return "ERR_ExpectedSingleScript";
                case ErrorCode.ERR_RecursivelyTypedVariable: return "ERR_RecursivelyTypedVariable";
                case ErrorCode.ERR_YieldNotAllowedInScript: return "ERR_YieldNotAllowedInScript";
                case ErrorCode.ERR_NamespaceNotAllowedInScript: return "ERR_NamespaceNotAllowedInScript";
                case ErrorCode.ERR_InvalidDelegateType: return "ERR_InvalidDelegateType";
                case ErrorCode.ERR_BadVisEventType: return "ERR_BadVisEventType";
                case ErrorCode.ERR_GlobalAttributesNotAllowed: return "ERR_GlobalAttributesNotAllowed";
                case ErrorCode.ERR_PublicKeyFileFailure: return "ERR_PublicKeyFileFailure";
                case ErrorCode.ERR_PublicKeyContainerFailure: return "ERR_PublicKeyContainerFailure";
                case ErrorCode.ERR_FriendRefSigningMismatch: return "ERR_FriendRefSigningMismatch";
                case ErrorCode.ERR_CannotPassNullForFriendAssembly: return "ERR_CannotPassNullForFriendAssembly";
                case ErrorCode.ERR_SignButNoPrivateKey: return "ERR_SignButNoPrivateKey";
                case ErrorCode.ERR_InvalidVersionFormat: return "ERR_InvalidVersionFormat";
                case ErrorCode.ERR_NoCorrespondingArgument: return "ERR_NoCorrespondingArgument";
                case ErrorCode.ERR_ModuleEmitFailure: return "ERR_ModuleEmitFailure";
                case ErrorCode.ERR_ResourceFileNameNotUnique: return "ERR_ResourceFileNameNotUnique";
                case ErrorCode.ERR_DllImportOnGenericMethod: return "ERR_DllImportOnGenericMethod";
                case ErrorCode.ERR_EncUpdateFailedMissingAttribute: return "ERR_EncUpdateFailedMissingAttribute";
                case ErrorCode.ERR_ParameterNotValidForType: return "ERR_ParameterNotValidForType";
                case ErrorCode.ERR_AttributeParameterRequired1: return "ERR_AttributeParameterRequired1";
                case ErrorCode.ERR_AttributeParameterRequired2: return "ERR_AttributeParameterRequired2";
                case ErrorCode.ERR_SecurityAttributeMissingAction: return "ERR_SecurityAttributeMissingAction";
                case ErrorCode.ERR_SecurityAttributeInvalidAction: return "ERR_SecurityAttributeInvalidAction";
                case ErrorCode.ERR_SecurityAttributeInvalidActionAssembly: return "ERR_SecurityAttributeInvalidActionAssembly";
                case ErrorCode.ERR_SecurityAttributeInvalidActionTypeOrMethod: return "ERR_SecurityAttributeInvalidActionTypeOrMethod";
                case ErrorCode.ERR_PrincipalPermissionInvalidAction: return "ERR_PrincipalPermissionInvalidAction";
                case ErrorCode.ERR_FeatureNotValidInExpressionTree: return "ERR_FeatureNotValidInExpressionTree";
                case ErrorCode.ERR_MarshalUnmanagedTypeNotValidForFields: return "ERR_MarshalUnmanagedTypeNotValidForFields";
                case ErrorCode.ERR_MarshalUnmanagedTypeOnlyValidForFields: return "ERR_MarshalUnmanagedTypeOnlyValidForFields";
                case ErrorCode.ERR_PermissionSetAttributeInvalidFile: return "ERR_PermissionSetAttributeInvalidFile";
                case ErrorCode.ERR_PermissionSetAttributeFileReadError: return "ERR_PermissionSetAttributeFileReadError";
                case ErrorCode.ERR_InvalidVersionFormat2: return "ERR_InvalidVersionFormat2";
                case ErrorCode.ERR_InvalidAssemblyCultureForExe: return "ERR_InvalidAssemblyCultureForExe";
                case ErrorCode.ERR_DuplicateAttributeInNetModule: return "ERR_DuplicateAttributeInNetModule";
                case ErrorCode.ERR_CantOpenIcon: return "ERR_CantOpenIcon";
                case ErrorCode.ERR_ErrorBuildingWin32Resources: return "ERR_ErrorBuildingWin32Resources";
                case ErrorCode.ERR_BadAttributeParamDefaultArgument: return "ERR_BadAttributeParamDefaultArgument";
                case ErrorCode.ERR_MissingTypeInSource: return "ERR_MissingTypeInSource";
                case ErrorCode.ERR_MissingTypeInAssembly: return "ERR_MissingTypeInAssembly";
                case ErrorCode.ERR_SecurityAttributeInvalidTarget: return "ERR_SecurityAttributeInvalidTarget";
                case ErrorCode.ERR_InvalidAssemblyName: return "ERR_InvalidAssemblyName";
                case ErrorCode.ERR_NoTypeDefFromModule: return "ERR_NoTypeDefFromModule";
                case ErrorCode.ERR_InvalidDynamicCondition: return "ERR_InvalidDynamicCondition";
                case ErrorCode.ERR_WinRtEventPassedByRef: return "ERR_WinRtEventPassedByRef";
                case ErrorCode.ERR_NetModuleNameMismatch: return "ERR_NetModuleNameMismatch";
                case ErrorCode.ERR_BadModuleName: return "ERR_BadModuleName";
                case ErrorCode.ERR_BadCompilationOptionValue: return "ERR_BadCompilationOptionValue";
                case ErrorCode.ERR_BadAppConfigPath: return "ERR_BadAppConfigPath";
                case ErrorCode.ERR_CmdOptionConflictsSource: return "ERR_CmdOptionConflictsSource";
                case ErrorCode.ERR_FixedBufferTooManyDimensions: return "ERR_FixedBufferTooManyDimensions";
                case ErrorCode.ERR_CantReadConfigFile: return "ERR_CantReadConfigFile";
                case ErrorCode.ERR_BadAwaitInCatchFilter: return "ERR_BadAwaitInCatchFilter";
                case ErrorCode.ERR_EncNoPIAReference: return "ERR_EncNoPIAReference";
                case ErrorCode.ERR_LinkedNetmoduleMetadataMustProvideFullPEImage: return "ERR_LinkedNetmoduleMetadataMustProvideFullPEImage";
                case ErrorCode.ERR_MetadataReferencesNotSupported: return "ERR_MetadataReferencesNotSupported";
                case ErrorCode.ERR_InvalidAssemblyCulture: return "ERR_InvalidAssemblyCulture";
                case ErrorCode.ERR_EncReferenceToAddedMember: return "ERR_EncReferenceToAddedMember";
                case ErrorCode.ERR_MutuallyExclusiveOptions: return "ERR_MutuallyExclusiveOptions";
                case ErrorCode.ERR_InvalidDebugInfo: return "ERR_InvalidDebugInfo";
                case ErrorCode.ERR_InvalidSignaturePublicKey: return "ERR_InvalidSignaturePublicKey";
                case ErrorCode.ERR_ExportedTypeConflictsWithDeclaration: return "ERR_ExportedTypeConflictsWithDeclaration";
                case ErrorCode.ERR_ExportedTypesConflict: return "ERR_ExportedTypesConflict";
                case ErrorCode.ERR_ForwardedTypeConflictsWithDeclaration: return "ERR_ForwardedTypeConflictsWithDeclaration";
                case ErrorCode.ERR_ForwardedTypesConflict: return "ERR_ForwardedTypesConflict";
                case ErrorCode.ERR_ForwardedTypeConflictsWithExportedType: return "ERR_ForwardedTypeConflictsWithExportedType";
                case ErrorCode.ERR_AgnosticToMachineModule: return "ERR_AgnosticToMachineModule";
                case ErrorCode.ERR_ConflictingMachineModule: return "ERR_ConflictingMachineModule";
                case ErrorCode.ERR_CryptoHashFailed: return "ERR_CryptoHashFailed";
                case ErrorCode.ERR_MissingNetModuleReference: return "ERR_MissingNetModuleReference";
                case ErrorCode.ERR_NetModuleNameMustBeUnique: return "ERR_NetModuleNameMustBeUnique";
                case ErrorCode.ERR_UnsupportedTransparentIdentifierAccess: return "ERR_UnsupportedTransparentIdentifierAccess";
                case ErrorCode.ERR_ParamDefaultValueDiffersFromAttribute: return "ERR_ParamDefaultValueDiffersFromAttribute";
                case ErrorCode.ERR_FeatureNotAvailableInVersion1: return "ERR_FeatureNotAvailableInVersion1";
                case ErrorCode.ERR_FeatureNotAvailableInVersion2: return "ERR_FeatureNotAvailableInVersion2";
                case ErrorCode.ERR_FeatureNotAvailableInVersion3: return "ERR_FeatureNotAvailableInVersion3";
                case ErrorCode.ERR_FeatureNotAvailableInVersion4: return "ERR_FeatureNotAvailableInVersion4";
                case ErrorCode.ERR_FeatureNotAvailableInVersion5: return "ERR_FeatureNotAvailableInVersion5";
                case ErrorCode.ERR_FieldHasMultipleDistinctConstantValues: return "ERR_FieldHasMultipleDistinctConstantValues";
                case ErrorCode.ERR_ComImportWithInitializers: return "ERR_ComImportWithInitializers";
                case ErrorCode.ERR_RetNoObjectRequiredLambda: return "ERR_RetNoObjectRequiredLambda";
                case ErrorCode.ERR_TaskRetNoObjectRequiredLambda: return "ERR_TaskRetNoObjectRequiredLambda";
                case ErrorCode.ERR_CantReadRulesetFile: return "ERR_CantReadRulesetFile";
                case ErrorCode.ERR_BadPdbData: return "ERR_BadPdbData";
                case ErrorCode.ERR_InitializerOnNonAutoProperty: return "ERR_InitializerOnNonAutoProperty";
                case ErrorCode.ERR_AutoPropertyMustHaveGetAccessor: return "ERR_AutoPropertyMustHaveGetAccessor";
                case ErrorCode.ERR_InstancePropertyInitializerInInterface: return "ERR_InstancePropertyInitializerInInterface";
                case ErrorCode.ERR_EnumsCantContainDefaultConstructor: return "ERR_EnumsCantContainDefaultConstructor";
                case ErrorCode.ERR_EncodinglessSyntaxTree: return "ERR_EncodinglessSyntaxTree";
                case ErrorCode.ERR_BlockBodyAndExpressionBody: return "ERR_BlockBodyAndExpressionBody";
                case ErrorCode.ERR_FeatureIsExperimental: return "ERR_FeatureIsExperimental";
                case ErrorCode.ERR_FeatureNotAvailableInVersion6: return "ERR_FeatureNotAvailableInVersion6";
                case ErrorCode.ERR_SwitchFallOut: return "ERR_SwitchFallOut";
                case ErrorCode.ERR_NullPropagatingOpInExpressionTree: return "ERR_NullPropagatingOpInExpressionTree";
                case ErrorCode.ERR_DictionaryInitializerInExpressionTree: return "ERR_DictionaryInitializerInExpressionTree";
                case ErrorCode.ERR_ExtensionCollectionElementInitializerInExpressionTree: return "ERR_ExtensionCollectionElementInitializerInExpressionTree";
                case ErrorCode.ERR_UnclosedExpressionHole: return "ERR_UnclosedExpressionHole";
                case ErrorCode.ERR_InsufficientStack: return "ERR_InsufficientStack";
                case ErrorCode.ERR_UseDefViolationProperty: return "ERR_UseDefViolationProperty";
                case ErrorCode.ERR_AutoPropertyMustOverrideSet: return "ERR_AutoPropertyMustOverrideSet";
                case ErrorCode.ERR_ExpressionHasNoName: return "ERR_ExpressionHasNoName";
                case ErrorCode.ERR_SubexpressionNotInNameof: return "ERR_SubexpressionNotInNameof";
                case ErrorCode.ERR_AliasQualifiedNameNotAnExpression: return "ERR_AliasQualifiedNameNotAnExpression";
                case ErrorCode.ERR_NameofMethodGroupWithTypeParameters: return "ERR_NameofMethodGroupWithTypeParameters";
                case ErrorCode.ERR_NoAliasHere: return "ERR_NoAliasHere";
                case ErrorCode.ERR_UnescapedCurly: return "ERR_UnescapedCurly";
                case ErrorCode.ERR_EscapedCurly: return "ERR_EscapedCurly";
                case ErrorCode.ERR_TrailingWhitespaceInFormatSpecifier: return "ERR_TrailingWhitespaceInFormatSpecifier";
                case ErrorCode.ERR_EmptyFormatSpecifier: return "ERR_EmptyFormatSpecifier";
                case ErrorCode.ERR_ErrorInReferencedAssembly: return "ERR_ErrorInReferencedAssembly";
                case ErrorCode.ERR_ExternHasConstructorInitializer: return "ERR_ExternHasConstructorInitializer";
                case ErrorCode.ERR_ExpressionOrDeclarationExpected: return "ERR_ExpressionOrDeclarationExpected";
                case ErrorCode.ERR_NameofExtensionMethod: return "ERR_NameofExtensionMethod";
                case ErrorCode.ERR_ConstantStringTooLong: return "ERR_ConstantStringTooLong";
                case ErrorCode.ERR_DebugEntryPointNotSourceMethodDefinition: return "ERR_DebugEntryPointNotSourceMethodDefinition";
                case ErrorCode.ERR_LoadDirectiveOnlyAllowedInScripts: return "ERR_LoadDirectiveOnlyAllowedInScripts";
                case ErrorCode.ERR_PPLoadFollowsToken: return "ERR_PPLoadFollowsToken";
                case ErrorCode.ERR_SourceFileReferencesNotSupported: return "ERR_SourceFileReferencesNotSupported";
                case ErrorCode.ERR_BadAwaitInStaticVariableInitializer: return "ERR_BadAwaitInStaticVariableInitializer";
                case ErrorCode.ERR_InvalidPathMap: return "ERR_InvalidPathMap";
                case ErrorCode.ERR_PublicSignButNoKey: return "ERR_PublicSignButNoKey";
                case ErrorCode.ERR_TooManyUserStrings: return "ERR_TooManyUserStrings";
                case ErrorCode.ERR_PeWritingFailure: return "ERR_PeWritingFailure";
                case ErrorCode.ERR_OptionMustBeAbsolutePath: return "ERR_OptionMustBeAbsolutePath";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7: return "ERR_FeatureNotAvailableInVersion7";
                case ErrorCode.ERR_DynamicLocalFunctionParamsParameter: return "ERR_DynamicLocalFunctionParamsParameter";
                case ErrorCode.ERR_ExpressionTreeContainsLocalFunction: return "ERR_ExpressionTreeContainsLocalFunction";
                case ErrorCode.ERR_InvalidInstrumentationKind: return "ERR_InvalidInstrumentationKind";
                case ErrorCode.ERR_LocalFunctionMissingBody: return "ERR_LocalFunctionMissingBody";
                case ErrorCode.ERR_InvalidHashAlgorithmName: return "ERR_InvalidHashAlgorithmName";
                case ErrorCode.ERR_ThrowMisplaced: return "ERR_ThrowMisplaced";
                case ErrorCode.ERR_PatternNullableType: return "ERR_PatternNullableType";
                case ErrorCode.ERR_BadPatternExpression: return "ERR_BadPatternExpression";
                case ErrorCode.ERR_SwitchExpressionValueExpected: return "ERR_SwitchExpressionValueExpected";
                case ErrorCode.ERR_SwitchCaseSubsumed: return "ERR_SwitchCaseSubsumed";
                case ErrorCode.ERR_PatternWrongType: return "ERR_PatternWrongType";
                case ErrorCode.ERR_ExpressionTreeContainsIsMatch: return "ERR_ExpressionTreeContainsIsMatch";
                case ErrorCode.ERR_TupleTooFewElements: return "ERR_TupleTooFewElements";
                case ErrorCode.ERR_TupleReservedElementName: return "ERR_TupleReservedElementName";
                case ErrorCode.ERR_TupleReservedElementNameAnyPosition: return "ERR_TupleReservedElementNameAnyPosition";
                case ErrorCode.ERR_TupleDuplicateElementName: return "ERR_TupleDuplicateElementName";
                case ErrorCode.ERR_PredefinedTypeMemberNotFoundInAssembly: return "ERR_PredefinedTypeMemberNotFoundInAssembly";
                case ErrorCode.ERR_MissingDeconstruct: return "ERR_MissingDeconstruct";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable";
                case ErrorCode.ERR_DeconstructRequiresExpression: return "ERR_DeconstructRequiresExpression";
                case ErrorCode.ERR_DeconstructWrongCardinality: return "ERR_DeconstructWrongCardinality";
                case ErrorCode.ERR_CannotDeconstructDynamic: return "ERR_CannotDeconstructDynamic";
                case ErrorCode.ERR_DeconstructTooFewElements: return "ERR_DeconstructTooFewElements";
                case ErrorCode.ERR_ConversionNotTupleCompatible: return "ERR_ConversionNotTupleCompatible";
                case ErrorCode.ERR_DeconstructionVarFormDisallowsSpecificType: return "ERR_DeconstructionVarFormDisallowsSpecificType";
                case ErrorCode.ERR_TupleElementNamesAttributeMissing: return "ERR_TupleElementNamesAttributeMissing";
                case ErrorCode.ERR_ExplicitTupleElementNamesAttribute: return "ERR_ExplicitTupleElementNamesAttribute";
                case ErrorCode.ERR_CantChangeTupleNamesOnOverride: return "ERR_CantChangeTupleNamesOnOverride";
                case ErrorCode.ERR_DuplicateInterfaceWithTupleNamesInBaseList: return "ERR_DuplicateInterfaceWithTupleNamesInBaseList";
                case ErrorCode.ERR_ImplBadTupleNames: return "ERR_ImplBadTupleNames";
                case ErrorCode.ERR_PartialMemberInconsistentTupleNames: return "ERR_PartialMemberInconsistentTupleNames";
                case ErrorCode.ERR_ExpressionTreeContainsTupleLiteral: return "ERR_ExpressionTreeContainsTupleLiteral";
                case ErrorCode.ERR_ExpressionTreeContainsTupleConversion: return "ERR_ExpressionTreeContainsTupleConversion";
                case ErrorCode.ERR_AutoPropertyCannotBeRefReturning: return "ERR_AutoPropertyCannotBeRefReturning";
                case ErrorCode.ERR_RefPropertyMustHaveGetAccessor: return "ERR_RefPropertyMustHaveGetAccessor";
                case ErrorCode.ERR_RefPropertyCannotHaveSetAccessor: return "ERR_RefPropertyCannotHaveSetAccessor";
                case ErrorCode.ERR_CantChangeRefReturnOnOverride: return "ERR_CantChangeRefReturnOnOverride";
                case ErrorCode.ERR_MustNotHaveRefReturn: return "ERR_MustNotHaveRefReturn";
                case ErrorCode.ERR_MustHaveRefReturn: return "ERR_MustHaveRefReturn";
                case ErrorCode.ERR_RefReturnMustHaveIdentityConversion: return "ERR_RefReturnMustHaveIdentityConversion";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongRefReturn: return "ERR_CloseUnimplementedInterfaceMemberWrongRefReturn";
                case ErrorCode.ERR_RefReturningCallInExpressionTree: return "ERR_RefReturningCallInExpressionTree";
                case ErrorCode.ERR_BadIteratorReturnRef: return "ERR_BadIteratorReturnRef";
                case ErrorCode.ERR_BadRefReturnExpressionTree: return "ERR_BadRefReturnExpressionTree";
                case ErrorCode.ERR_RefReturnLvalueExpected: return "ERR_RefReturnLvalueExpected";
                case ErrorCode.ERR_RefReturnNonreturnableLocal: return "ERR_RefReturnNonreturnableLocal";
                case ErrorCode.ERR_RefReturnNonreturnableLocal2: return "ERR_RefReturnNonreturnableLocal2";
                case ErrorCode.ERR_RefReturnRangeVariable: return "ERR_RefReturnRangeVariable";
                case ErrorCode.ERR_RefReturnReadonly: return "ERR_RefReturnReadonly";
                case ErrorCode.ERR_RefReturnReadonlyStatic: return "ERR_RefReturnReadonlyStatic";
                case ErrorCode.ERR_RefReturnReadonly2: return "ERR_RefReturnReadonly2";
                case ErrorCode.ERR_RefReturnReadonlyStatic2: return "ERR_RefReturnReadonlyStatic2";
                case ErrorCode.ERR_RefReturnParameter: return "ERR_RefReturnParameter";
                case ErrorCode.ERR_RefReturnParameter2: return "ERR_RefReturnParameter2";
                case ErrorCode.ERR_RefReturnLocal: return "ERR_RefReturnLocal";
                case ErrorCode.ERR_RefReturnLocal2: return "ERR_RefReturnLocal2";
                case ErrorCode.ERR_RefReturnStructThis: return "ERR_RefReturnStructThis";
                case ErrorCode.ERR_InitializeByValueVariableWithReference: return "ERR_InitializeByValueVariableWithReference";
                case ErrorCode.ERR_InitializeByReferenceVariableWithValue: return "ERR_InitializeByReferenceVariableWithValue";
                case ErrorCode.ERR_RefAssignmentMustHaveIdentityConversion: return "ERR_RefAssignmentMustHaveIdentityConversion";
                case ErrorCode.ERR_ByReferenceVariableMustBeInitialized: return "ERR_ByReferenceVariableMustBeInitialized";
                case ErrorCode.ERR_AnonDelegateCantUseLocal: return "ERR_AnonDelegateCantUseLocal";
                case ErrorCode.ERR_RefReturningCallAndAwait: return "ERR_RefReturningCallAndAwait";
                case ErrorCode.ERR_PredefinedValueTupleTypeNotFound: return "ERR_PredefinedValueTupleTypeNotFound";
                case ErrorCode.ERR_SemiOrLBraceOrArrowExpected: return "ERR_SemiOrLBraceOrArrowExpected";
                case ErrorCode.ERR_NewWithTupleTypeSyntax: return "ERR_NewWithTupleTypeSyntax";
                case ErrorCode.ERR_PredefinedValueTupleTypeMustBeStruct: return "ERR_PredefinedValueTupleTypeMustBeStruct";
                case ErrorCode.ERR_DiscardTypeInferenceFailed: return "ERR_DiscardTypeInferenceFailed";
                case ErrorCode.ERR_DeclarationExpressionNotPermitted: return "ERR_DeclarationExpressionNotPermitted";
                case ErrorCode.ERR_MustDeclareForeachIteration: return "ERR_MustDeclareForeachIteration";
                case ErrorCode.ERR_TupleElementNamesInDeconstruction: return "ERR_TupleElementNamesInDeconstruction";
                case ErrorCode.ERR_ExpressionTreeContainsThrowExpression: return "ERR_ExpressionTreeContainsThrowExpression";
                case ErrorCode.ERR_DelegateRefMismatch: return "ERR_DelegateRefMismatch";
                case ErrorCode.ERR_BadSourceCodeKind: return "ERR_BadSourceCodeKind";
                case ErrorCode.ERR_BadDocumentationMode: return "ERR_BadDocumentationMode";
                case ErrorCode.ERR_BadLanguageVersion: return "ERR_BadLanguageVersion";
                case ErrorCode.ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList: return "ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedOutVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedOutVariable";
                case ErrorCode.ERR_ExpressionTreeContainsOutVariable: return "ERR_ExpressionTreeContainsOutVariable";
                case ErrorCode.ERR_VarInvocationLvalueReserved: return "ERR_VarInvocationLvalueReserved";
                case ErrorCode.ERR_PublicSignNetModule: return "ERR_PublicSignNetModule";
                case ErrorCode.ERR_BadAssemblyName: return "ERR_BadAssemblyName";
                case ErrorCode.ERR_BadAsyncMethodBuilderTaskProperty: return "ERR_BadAsyncMethodBuilderTaskProperty";
                case ErrorCode.ERR_TypeForwardedToMultipleAssemblies: return "ERR_TypeForwardedToMultipleAssemblies";
                case ErrorCode.ERR_ExpressionTreeContainsDiscard: return "ERR_ExpressionTreeContainsDiscard";
                case ErrorCode.ERR_PatternDynamicType: return "ERR_PatternDynamicType";
                case ErrorCode.ERR_VoidAssignment: return "ERR_VoidAssignment";
                case ErrorCode.ERR_VoidInTuple: return "ERR_VoidInTuple";
                case ErrorCode.ERR_Merge_conflict_marker_encountered: return "ERR_Merge_conflict_marker_encountered";
                case ErrorCode.ERR_InvalidPreprocessingSymbol: return "ERR_InvalidPreprocessingSymbol";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_1: return "ERR_FeatureNotAvailableInVersion7_1";
                case ErrorCode.ERR_LanguageVersionCannotHaveLeadingZeroes: return "ERR_LanguageVersionCannotHaveLeadingZeroes";
                case ErrorCode.ERR_CompilerAndLanguageVersion: return "ERR_CompilerAndLanguageVersion";
                case ErrorCode.ERR_TupleInferredNamesNotAvailable: return "ERR_TupleInferredNamesNotAvailable";
                case ErrorCode.ERR_TypelessTupleInAs: return "ERR_TypelessTupleInAs";
                case ErrorCode.ERR_NoRefOutWhenRefOnly: return "ERR_NoRefOutWhenRefOnly";
                case ErrorCode.ERR_NoNetModuleOutputWhenRefOutOrRefOnly: return "ERR_NoNetModuleOutputWhenRefOutOrRefOnly";
                case ErrorCode.ERR_BadOpOnNullOrDefaultOrNew: return "ERR_BadOpOnNullOrDefaultOrNew";
                case ErrorCode.ERR_DefaultLiteralNotValid: return "ERR_DefaultLiteralNotValid";
                case ErrorCode.ERR_PatternWrongGenericTypeInVersion: return "ERR_PatternWrongGenericTypeInVersion";
                case ErrorCode.ERR_AmbigBinaryOpsOnDefault: return "ERR_AmbigBinaryOpsOnDefault";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_2: return "ERR_FeatureNotAvailableInVersion7_2";
                case ErrorCode.ERR_DynamicLocalFunctionTypeParameter: return "ERR_DynamicLocalFunctionTypeParameter";
                case ErrorCode.ERR_BadNonTrailingNamedArgument: return "ERR_BadNonTrailingNamedArgument";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation: return "ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation";
                case ErrorCode.ERR_RefConditionalAndAwait: return "ERR_RefConditionalAndAwait";
                case ErrorCode.ERR_RefConditionalNeedsTwoRefs: return "ERR_RefConditionalNeedsTwoRefs";
                case ErrorCode.ERR_RefConditionalDifferentTypes: return "ERR_RefConditionalDifferentTypes";
                case ErrorCode.ERR_BadParameterModifiers: return "ERR_BadParameterModifiers";
                case ErrorCode.ERR_RefReadonlyNotField: return "ERR_RefReadonlyNotField";
                case ErrorCode.ERR_RefReadonlyNotField2: return "ERR_RefReadonlyNotField2";
                case ErrorCode.ERR_AssignReadonlyNotField: return "ERR_AssignReadonlyNotField";
                case ErrorCode.ERR_AssignReadonlyNotField2: return "ERR_AssignReadonlyNotField2";
                case ErrorCode.ERR_RefReturnReadonlyNotField: return "ERR_RefReturnReadonlyNotField";
                case ErrorCode.ERR_RefReturnReadonlyNotField2: return "ERR_RefReturnReadonlyNotField2";
                case ErrorCode.ERR_ExplicitReservedAttr: return "ERR_ExplicitReservedAttr";
                case ErrorCode.ERR_TypeReserved: return "ERR_TypeReserved";
                case ErrorCode.ERR_RefExtensionMustBeValueTypeOrConstrainedToOne: return "ERR_RefExtensionMustBeValueTypeOrConstrainedToOne";
                case ErrorCode.ERR_InExtensionMustBeValueType: return "ERR_InExtensionMustBeValueType";
                case ErrorCode.ERR_FieldsInRoStruct: return "ERR_FieldsInRoStruct";
                case ErrorCode.ERR_AutoPropsInRoStruct: return "ERR_AutoPropsInRoStruct";
                case ErrorCode.ERR_FieldlikeEventsInRoStruct: return "ERR_FieldlikeEventsInRoStruct";
                case ErrorCode.ERR_FieldAutoPropCantBeByRefLike: return "ERR_FieldAutoPropCantBeByRefLike";
                case ErrorCode.ERR_StackAllocConversionNotPossible: return "ERR_StackAllocConversionNotPossible";
                case ErrorCode.ERR_EscapeCall: return "ERR_EscapeCall";
                case ErrorCode.ERR_EscapeCall2: return "ERR_EscapeCall2";
                case ErrorCode.ERR_EscapeOther: return "ERR_EscapeOther";
                case ErrorCode.ERR_CallArgMixing: return "ERR_CallArgMixing";
                case ErrorCode.ERR_MismatchedRefEscapeInTernary: return "ERR_MismatchedRefEscapeInTernary";
                case ErrorCode.ERR_EscapeVariable: return "ERR_EscapeVariable";
                case ErrorCode.ERR_EscapeStackAlloc: return "ERR_EscapeStackAlloc";
                case ErrorCode.ERR_RefReturnThis: return "ERR_RefReturnThis";
                case ErrorCode.ERR_OutAttrOnInParam: return "ERR_OutAttrOnInParam";
                case ErrorCode.ERR_PredefinedValueTupleTypeAmbiguous3: return "ERR_PredefinedValueTupleTypeAmbiguous3";
                case ErrorCode.ERR_InvalidVersionFormatDeterministic: return "ERR_InvalidVersionFormatDeterministic";
                case ErrorCode.ERR_AttributeCtorInParameter: return "ERR_AttributeCtorInParameter";
                case ErrorCode.ERR_ConditionalInInterpolation: return "ERR_ConditionalInInterpolation";
                case ErrorCode.ERR_CantUseVoidInArglist: return "ERR_CantUseVoidInArglist";
                case ErrorCode.ERR_InDynamicMethodArg: return "ERR_InDynamicMethodArg";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_3: return "ERR_FeatureNotAvailableInVersion7_3";
                case ErrorCode.ERR_DoNotUseFixedBufferAttrOnProperty: return "ERR_DoNotUseFixedBufferAttrOnProperty";
                case ErrorCode.ERR_RefLocalOrParamExpected: return "ERR_RefLocalOrParamExpected";
                case ErrorCode.ERR_RefAssignNarrower: return "ERR_RefAssignNarrower";
                case ErrorCode.ERR_NewBoundWithUnmanaged: return "ERR_NewBoundWithUnmanaged";
                case ErrorCode.ERR_UnmanagedConstraintNotSatisfied: return "ERR_UnmanagedConstraintNotSatisfied";
                case ErrorCode.ERR_CantUseInOrOutInArglist: return "ERR_CantUseInOrOutInArglist";
                case ErrorCode.ERR_ConWithUnmanagedCon: return "ERR_ConWithUnmanagedCon";
                case ErrorCode.ERR_UnmanagedBoundWithClass: return "ERR_UnmanagedBoundWithClass";
                case ErrorCode.ERR_InvalidStackAllocArray: return "ERR_InvalidStackAllocArray";
                case ErrorCode.ERR_ExpressionTreeContainsTupleBinOp: return "ERR_ExpressionTreeContainsTupleBinOp";
                case ErrorCode.ERR_TupleSizesMismatchForBinOps: return "ERR_TupleSizesMismatchForBinOps";
                case ErrorCode.ERR_ExprCannotBeFixed: return "ERR_ExprCannotBeFixed";
                case ErrorCode.ERR_InvalidObjectCreation: return "ERR_InvalidObjectCreation";
                case ErrorCode.ERR_OutVariableCannotBeByRef: return "ERR_OutVariableCannotBeByRef";
                case ErrorCode.ERR_OmittedTypeArgument: return "ERR_OmittedTypeArgument";
                case ErrorCode.ERR_FeatureNotAvailableInVersion8: return "ERR_FeatureNotAvailableInVersion8";
                case ErrorCode.ERR_AltInterpolatedVerbatimStringsNotAvailable: return "ERR_AltInterpolatedVerbatimStringsNotAvailable";
                case ErrorCode.ERR_IteratorMustBeAsync: return "ERR_IteratorMustBeAsync";
                case ErrorCode.ERR_NoConvToIAsyncDisp: return "ERR_NoConvToIAsyncDisp";
                case ErrorCode.ERR_AwaitForEachMissingMember: return "ERR_AwaitForEachMissingMember";
                case ErrorCode.ERR_BadGetAsyncEnumerator: return "ERR_BadGetAsyncEnumerator";
                case ErrorCode.ERR_MultipleIAsyncEnumOfT: return "ERR_MultipleIAsyncEnumOfT";
                case ErrorCode.ERR_ForEachMissingMemberWrongAsync: return "ERR_ForEachMissingMemberWrongAsync";
                case ErrorCode.ERR_AwaitForEachMissingMemberWrongAsync: return "ERR_AwaitForEachMissingMemberWrongAsync";
                case ErrorCode.ERR_BadDynamicAwaitForEach: return "ERR_BadDynamicAwaitForEach";
                case ErrorCode.ERR_NoConvToIAsyncDispWrongAsync: return "ERR_NoConvToIAsyncDispWrongAsync";
                case ErrorCode.ERR_NoConvToIDispWrongAsync: return "ERR_NoConvToIDispWrongAsync";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYield: return "ERR_PossibleAsyncIteratorWithoutYield";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYieldOrAwait: return "ERR_PossibleAsyncIteratorWithoutYieldOrAwait";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureVariable: return "ERR_StaticLocalFunctionCannotCaptureVariable";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureThis: return "ERR_StaticLocalFunctionCannotCaptureThis";
                case ErrorCode.ERR_AttributeNotOnEventAccessor: return "ERR_AttributeNotOnEventAccessor";
                case ErrorCode.ERR_MultipleEnumeratorCancellationAttributes: return "ERR_MultipleEnumeratorCancellationAttributes";
                case ErrorCode.ERR_VarianceInterfaceNesting: return "ERR_VarianceInterfaceNesting";
                case ErrorCode.ERR_ImplicitIndexIndexerWithName: return "ERR_ImplicitIndexIndexerWithName";
                case ErrorCode.ERR_ImplicitRangeIndexerWithName: return "ERR_ImplicitRangeIndexerWithName";
                case ErrorCode.ERR_WrongNumberOfSubpatterns: return "ERR_WrongNumberOfSubpatterns";
                case ErrorCode.ERR_PropertyPatternNameMissing: return "ERR_PropertyPatternNameMissing";
                case ErrorCode.ERR_MissingPattern: return "ERR_MissingPattern";
                case ErrorCode.ERR_DefaultPattern: return "ERR_DefaultPattern";
                case ErrorCode.ERR_SwitchExpressionNoBestType: return "ERR_SwitchExpressionNoBestType";
                case ErrorCode.ERR_VarMayNotBindToType: return "ERR_VarMayNotBindToType";
                case ErrorCode.ERR_SwitchArmSubsumed: return "ERR_SwitchArmSubsumed";
                case ErrorCode.ERR_ConstantPatternVsOpenType: return "ERR_ConstantPatternVsOpenType";
                case ErrorCode.ERR_ExpressionTreeContainsSwitchExpression: return "ERR_ExpressionTreeContainsSwitchExpression";
                case ErrorCode.ERR_SwitchGoverningExpressionRequiresParens: return "ERR_SwitchGoverningExpressionRequiresParens";
                case ErrorCode.ERR_TupleElementNameMismatch: return "ERR_TupleElementNameMismatch";
                case ErrorCode.ERR_DeconstructParameterNameMismatch: return "ERR_DeconstructParameterNameMismatch";
                case ErrorCode.ERR_IsPatternImpossible: return "ERR_IsPatternImpossible";
                case ErrorCode.ERR_PointerTypeInPatternMatching: return "ERR_PointerTypeInPatternMatching";
                case ErrorCode.ERR_ArgumentNameInITuplePattern: return "ERR_ArgumentNameInITuplePattern";
                case ErrorCode.ERR_DiscardPatternInSwitchStatement: return "ERR_DiscardPatternInSwitchStatement";
                case ErrorCode.ERR_IllegalSuppression: return "ERR_IllegalSuppression";
                case ErrorCode.ERR_ExplicitNullableAttribute: return "ERR_ExplicitNullableAttribute";
                case ErrorCode.ERR_NullableUnconstrainedTypeParameter: return "ERR_NullableUnconstrainedTypeParameter";
                case ErrorCode.ERR_AnnotationDisallowedInObjectCreation: return "ERR_AnnotationDisallowedInObjectCreation";
                case ErrorCode.ERR_NullableOptionNotAvailable: return "ERR_NullableOptionNotAvailable";
                case ErrorCode.ERR_TripleDotNotAllowed: return "ERR_TripleDotNotAllowed";
                case ErrorCode.ERR_BadNullableContextOption: return "ERR_BadNullableContextOption";
                case ErrorCode.ERR_NullableDirectiveQualifierExpected: return "ERR_NullableDirectiveQualifierExpected";
                case ErrorCode.ERR_BadNullableTypeof: return "ERR_BadNullableTypeof";
                case ErrorCode.ERR_ExpressionTreeCantContainRefStruct: return "ERR_ExpressionTreeCantContainRefStruct";
                case ErrorCode.ERR_ElseCannotStartStatement: return "ERR_ElseCannotStartStatement";
                case ErrorCode.ERR_ExpressionTreeCantContainNullCoalescingAssignment: return "ERR_ExpressionTreeCantContainNullCoalescingAssignment";
                case ErrorCode.ERR_DuplicateExplicitImpl: return "ERR_DuplicateExplicitImpl";
                case ErrorCode.ERR_UsingVarInSwitchCase: return "ERR_UsingVarInSwitchCase";
                case ErrorCode.ERR_GoToForwardJumpOverUsingVar: return "ERR_GoToForwardJumpOverUsingVar";
                case ErrorCode.ERR_GoToBackwardJumpOverUsingVar: return "ERR_GoToBackwardJumpOverUsingVar";
                case ErrorCode.ERR_IsNullableType: return "ERR_IsNullableType";
                case ErrorCode.ERR_AsNullableType: return "ERR_AsNullableType";
                case ErrorCode.ERR_FeatureInPreview: return "ERR_FeatureInPreview";
                case ErrorCode.ERR_StaticMemberCantBeReadOnly: return "ERR_StaticMemberCantBeReadOnly";
                case ErrorCode.ERR_AutoSetterCantBeReadOnly: return "ERR_AutoSetterCantBeReadOnly";
                case ErrorCode.ERR_AutoPropertyWithSetterCantBeReadOnly: return "ERR_AutoPropertyWithSetterCantBeReadOnly";
                case ErrorCode.ERR_InvalidPropertyReadOnlyMods: return "ERR_InvalidPropertyReadOnlyMods";
                case ErrorCode.ERR_DuplicatePropertyReadOnlyMods: return "ERR_DuplicatePropertyReadOnlyMods";
                case ErrorCode.ERR_FieldLikeEventCantBeReadOnly: return "ERR_FieldLikeEventCantBeReadOnly";
                case ErrorCode.ERR_PartialMemberReadOnlyDifference: return "ERR_PartialMemberReadOnlyDifference";
                case ErrorCode.ERR_ReadOnlyModMissingAccessor: return "ERR_ReadOnlyModMissingAccessor";
                case ErrorCode.ERR_OverrideRefConstraintNotSatisfied: return "ERR_OverrideRefConstraintNotSatisfied";
                case ErrorCode.ERR_OverrideValConstraintNotSatisfied: return "ERR_OverrideValConstraintNotSatisfied";
                case ErrorCode.ERR_NullableDirectiveTargetExpected: return "ERR_NullableDirectiveTargetExpected";
                case ErrorCode.ERR_MultipleAnalyzerConfigsInSameDir: return "ERR_MultipleAnalyzerConfigsInSameDir";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember";
                case ErrorCode.ERR_InvalidModifierForLanguageVersion: return "ERR_InvalidModifierForLanguageVersion";
                case ErrorCode.ERR_ImplicitImplementationOfNonPublicInterfaceMember: return "ERR_ImplicitImplementationOfNonPublicInterfaceMember";
                case ErrorCode.ERR_MostSpecificImplementationIsNotFound: return "ERR_MostSpecificImplementationIsNotFound";
                case ErrorCode.ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember: return "ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember";
                case ErrorCode.ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember: return "ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember";
                case ErrorCode.ERR_DefaultInterfaceImplementationInNoPIAType: return "ERR_DefaultInterfaceImplementationInNoPIAType";
                case ErrorCode.ERR_AbstractEventHasAccessors: return "ERR_AbstractEventHasAccessors";
                case ErrorCode.ERR_DuplicateNullSuppression: return "ERR_DuplicateNullSuppression";
                case ErrorCode.ERR_DefaultLiteralNoTargetType: return "ERR_DefaultLiteralNoTargetType";
                case ErrorCode.ERR_ReAbstractionInNoPIAType: return "ERR_ReAbstractionInNoPIAType";
                case ErrorCode.ERR_InternalError: return "ERR_InternalError";
                case ErrorCode.ERR_ImplicitObjectCreationIllegalTargetType: return "ERR_ImplicitObjectCreationIllegalTargetType";
                case ErrorCode.ERR_ImplicitObjectCreationNotValid: return "ERR_ImplicitObjectCreationNotValid";
                case ErrorCode.ERR_ImplicitObjectCreationNoTargetType: return "ERR_ImplicitObjectCreationNoTargetType";
                case ErrorCode.ERR_BadFuncPointerParamModifier: return "ERR_BadFuncPointerParamModifier";
                case ErrorCode.ERR_BadFuncPointerArgCount: return "ERR_BadFuncPointerArgCount";
                case ErrorCode.ERR_MethFuncPtrMismatch: return "ERR_MethFuncPtrMismatch";
                case ErrorCode.ERR_FuncPtrRefMismatch: return "ERR_FuncPtrRefMismatch";
                case ErrorCode.ERR_FuncPtrMethMustBeStatic: return "ERR_FuncPtrMethMustBeStatic";
                case ErrorCode.ERR_ExternEventInitializer: return "ERR_ExternEventInitializer";
                case ErrorCode.ERR_AmbigBinaryOpsOnUnconstrainedDefault: return "ERR_AmbigBinaryOpsOnUnconstrainedDefault";
                case ErrorCode.ERR_NoOutputDirectory: return "ERR_NoOutputDirectory";
                case ErrorCode.ERR_StdInOptionProvidedButConsoleInputIsNotRedirected: return "ERR_StdInOptionProvidedButConsoleInputIsNotRedirected";
                case ErrorCode.ERR_FeatureNotAvailableInVersion9: return "ERR_FeatureNotAvailableInVersion9";
                case ErrorCode.ERR_DuplicateInterfaceWithDifferencesInBaseList: return "ERR_DuplicateInterfaceWithDifferencesInBaseList";
                case ErrorCode.ERR_DesignatorBeneathPatternCombinator: return "ERR_DesignatorBeneathPatternCombinator";
                case ErrorCode.ERR_UnsupportedTypeForRelationalPattern: return "ERR_UnsupportedTypeForRelationalPattern";
                case ErrorCode.ERR_RelationalPatternWithNaN: return "ERR_RelationalPatternWithNaN";
                case ErrorCode.ERR_ConditionalOnLocalFunction: return "ERR_ConditionalOnLocalFunction";
                case ErrorCode.ERR_WrongFuncPtrCallingConvention: return "ERR_WrongFuncPtrCallingConvention";
                case ErrorCode.ERR_MissingAddressOf: return "ERR_MissingAddressOf";
                case ErrorCode.ERR_CannotUseReducedExtensionMethodInAddressOf: return "ERR_CannotUseReducedExtensionMethodInAddressOf";
                case ErrorCode.ERR_CannotUseFunctionPointerAsFixedLocal: return "ERR_CannotUseFunctionPointerAsFixedLocal";
                case ErrorCode.ERR_ExpressionTreeContainsPatternImplicitIndexer: return "ERR_ExpressionTreeContainsPatternImplicitIndexer";
                case ErrorCode.ERR_ExpressionTreeContainsFromEndIndexExpression: return "ERR_ExpressionTreeContainsFromEndIndexExpression";
                case ErrorCode.ERR_ExpressionTreeContainsRangeExpression: return "ERR_ExpressionTreeContainsRangeExpression";
                case ErrorCode.ERR_PartialMethodWithAccessibilityModsMustHaveImplementation: return "ERR_PartialMethodWithAccessibilityModsMustHaveImplementation";
                case ErrorCode.ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods: return "ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods";
                case ErrorCode.ERR_PartialMethodWithOutParamMustHaveAccessMods: return "ERR_PartialMethodWithOutParamMustHaveAccessMods";
                case ErrorCode.ERR_PartialMethodWithExtendedModMustHaveAccessMods: return "ERR_PartialMethodWithExtendedModMustHaveAccessMods";
                case ErrorCode.ERR_PartialMemberAccessibilityDifference: return "ERR_PartialMemberAccessibilityDifference";
                case ErrorCode.ERR_PartialMemberExtendedModDifference: return "ERR_PartialMemberExtendedModDifference";
                case ErrorCode.ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement: return "ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement";
                case ErrorCode.ERR_SimpleProgramMultipleUnitsWithTopLevelStatements: return "ERR_SimpleProgramMultipleUnitsWithTopLevelStatements";
                case ErrorCode.ERR_TopLevelStatementAfterNamespaceOrType: return "ERR_TopLevelStatementAfterNamespaceOrType";
                case ErrorCode.ERR_SimpleProgramDisallowsMainType: return "ERR_SimpleProgramDisallowsMainType";
                case ErrorCode.ERR_SimpleProgramNotAnExecutable: return "ERR_SimpleProgramNotAnExecutable";
                case ErrorCode.ERR_UnsupportedCallingConvention: return "ERR_UnsupportedCallingConvention";
                case ErrorCode.ERR_InvalidFunctionPointerCallingConvention: return "ERR_InvalidFunctionPointerCallingConvention";
                case ErrorCode.ERR_InvalidFuncPointerReturnTypeModifier: return "ERR_InvalidFuncPointerReturnTypeModifier";
                case ErrorCode.ERR_DupReturnTypeMod: return "ERR_DupReturnTypeMod";
                case ErrorCode.ERR_AddressOfMethodGroupInExpressionTree: return "ERR_AddressOfMethodGroupInExpressionTree";
                case ErrorCode.ERR_CannotConvertAddressOfToDelegate: return "ERR_CannotConvertAddressOfToDelegate";
                case ErrorCode.ERR_AddressOfToNonFunctionPointer: return "ERR_AddressOfToNonFunctionPointer";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeOrdinary: return "ERR_ModuleInitializerMethodMustBeOrdinary";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType: return "ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid: return "ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid";
                case ErrorCode.ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric: return "ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric";
                case ErrorCode.ERR_PartialMethodReturnTypeDifference: return "ERR_PartialMethodReturnTypeDifference";
                case ErrorCode.ERR_PartialMemberRefReturnDifference: return "ERR_PartialMemberRefReturnDifference";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureVariable: return "ERR_StaticAnonymousFunctionCannotCaptureVariable";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureThis: return "ERR_StaticAnonymousFunctionCannotCaptureThis";
                case ErrorCode.ERR_OverrideDefaultConstraintNotSatisfied: return "ERR_OverrideDefaultConstraintNotSatisfied";
                case ErrorCode.ERR_DefaultConstraintOverrideOnly: return "ERR_DefaultConstraintOverrideOnly";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses: return "ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses: return "ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses";
                case ErrorCode.ERR_ExpressionTreeContainsWithExpression: return "ERR_ExpressionTreeContainsWithExpression";
                case ErrorCode.ERR_AssignmentInitOnly: return "ERR_AssignmentInitOnly";
                case ErrorCode.ERR_CantChangeInitOnlyOnOverride: return "ERR_CantChangeInitOnlyOnOverride";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongInitOnly: return "ERR_CloseUnimplementedInterfaceMemberWrongInitOnly";
                case ErrorCode.ERR_ExplicitPropertyMismatchInitOnly: return "ERR_ExplicitPropertyMismatchInitOnly";
                case ErrorCode.ERR_BadInitAccessor: return "ERR_BadInitAccessor";
                case ErrorCode.ERR_InvalidWithReceiverType: return "ERR_InvalidWithReceiverType";
                case ErrorCode.ERR_CannotClone: return "ERR_CannotClone";
                case ErrorCode.ERR_CloneDisallowedInRecord: return "ERR_CloneDisallowedInRecord";
                case ErrorCode.ERR_UnexpectedArgumentList: return "ERR_UnexpectedArgumentList";
                case ErrorCode.ERR_UnexpectedOrMissingConstructorInitializerInRecord: return "ERR_UnexpectedOrMissingConstructorInitializerInRecord";
                case ErrorCode.ERR_MultipleRecordParameterLists: return "ERR_MultipleRecordParameterLists";
                case ErrorCode.ERR_BadRecordBase: return "ERR_BadRecordBase";
                case ErrorCode.ERR_BadInheritanceFromRecord: return "ERR_BadInheritanceFromRecord";
                case ErrorCode.ERR_BadRecordMemberForPositionalParameter: return "ERR_BadRecordMemberForPositionalParameter";
                case ErrorCode.ERR_NoCopyConstructorInBaseType: return "ERR_NoCopyConstructorInBaseType";
                case ErrorCode.ERR_CopyConstructorMustInvokeBaseCopyConstructor: return "ERR_CopyConstructorMustInvokeBaseCopyConstructor";
                case ErrorCode.ERR_DoesNotOverrideMethodFromObject: return "ERR_DoesNotOverrideMethodFromObject";
                case ErrorCode.ERR_SealedAPIInRecord: return "ERR_SealedAPIInRecord";
                case ErrorCode.ERR_DoesNotOverrideBaseMethod: return "ERR_DoesNotOverrideBaseMethod";
                case ErrorCode.ERR_NotOverridableAPIInRecord: return "ERR_NotOverridableAPIInRecord";
                case ErrorCode.ERR_NonPublicAPIInRecord: return "ERR_NonPublicAPIInRecord";
                case ErrorCode.ERR_SignatureMismatchInRecord: return "ERR_SignatureMismatchInRecord";
                case ErrorCode.ERR_NonProtectedAPIInRecord: return "ERR_NonProtectedAPIInRecord";
                case ErrorCode.ERR_DoesNotOverrideBaseEqualityContract: return "ERR_DoesNotOverrideBaseEqualityContract";
                case ErrorCode.ERR_StaticAPIInRecord: return "ERR_StaticAPIInRecord";
                case ErrorCode.ERR_CopyConstructorWrongAccessibility: return "ERR_CopyConstructorWrongAccessibility";
                case ErrorCode.ERR_NonPrivateAPIInRecord: return "ERR_NonPrivateAPIInRecord";
                case ErrorCode.ERR_CannotSpecifyManagedWithUnmanagedSpecifiers: return "ERR_CannotSpecifyManagedWithUnmanagedSpecifiers";
                case ErrorCode.ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv: return "ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv";
                case ErrorCode.ERR_TypeNotFound: return "ERR_TypeNotFound";
                case ErrorCode.ERR_TypeMustBePublic: return "ERR_TypeMustBePublic";
                case ErrorCode.ERR_InvalidUnmanagedCallersOnlyCallConv: return "ERR_InvalidUnmanagedCallersOnlyCallConv";
                case ErrorCode.ERR_CannotUseManagedTypeInUnmanagedCallersOnly: return "ERR_CannotUseManagedTypeInUnmanagedCallersOnly";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric: return "ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric";
                case ErrorCode.ERR_UnmanagedCallersOnlyRequiresStatic: return "ERR_UnmanagedCallersOnlyRequiresStatic";
                case ErrorCode.ERR_EntryPointCannotBeUnmanagedCallersOnly: return "ERR_EntryPointCannotBeUnmanagedCallersOnly";
                case ErrorCode.ERR_ModuleInitializerCannotBeUnmanagedCallersOnly: return "ERR_ModuleInitializerCannotBeUnmanagedCallersOnly";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly: return "ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate: return "ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate";
                case ErrorCode.ERR_InitCannotBeReadonly: return "ERR_InitCannotBeReadonly";
                case ErrorCode.ERR_UnexpectedVarianceStaticMember: return "ERR_UnexpectedVarianceStaticMember";
                case ErrorCode.ERR_FunctionPointersCannotBeCalledWithNamedArguments: return "ERR_FunctionPointersCannotBeCalledWithNamedArguments";
                case ErrorCode.ERR_EqualityContractRequiresGetter: return "ERR_EqualityContractRequiresGetter";
                case ErrorCode.ERR_BadFieldTypeInRecord: return "ERR_BadFieldTypeInRecord";
                case ErrorCode.ERR_RecordAmbigCtor: return "ERR_RecordAmbigCtor";
                case ErrorCode.ERR_FunctionPointerTypesInAttributeNotSupported: return "ERR_FunctionPointerTypesInAttributeNotSupported";
                case ErrorCode.ERR_InheritingFromRecordWithSealedToString: return "ERR_InheritingFromRecordWithSealedToString";
                case ErrorCode.ERR_HiddenPositionalMember: return "ERR_HiddenPositionalMember";
                case ErrorCode.ERR_GlobalUsingInNamespace: return "ERR_GlobalUsingInNamespace";
                case ErrorCode.ERR_GlobalUsingOutOfOrder: return "ERR_GlobalUsingOutOfOrder";
                case ErrorCode.ERR_AttributesRequireParenthesizedLambdaExpression: return "ERR_AttributesRequireParenthesizedLambdaExpression";
                case ErrorCode.ERR_CannotInferDelegateType: return "ERR_CannotInferDelegateType";
                case ErrorCode.ERR_InvalidNameInSubpattern: return "ERR_InvalidNameInSubpattern";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers: return "ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers";
                case ErrorCode.ERR_BadAbstractUnaryOperatorSignature: return "ERR_BadAbstractUnaryOperatorSignature";
                case ErrorCode.ERR_BadAbstractIncDecSignature: return "ERR_BadAbstractIncDecSignature";
                case ErrorCode.ERR_BadAbstractIncDecRetType: return "ERR_BadAbstractIncDecRetType";
                case ErrorCode.ERR_BadAbstractBinaryOperatorSignature: return "ERR_BadAbstractBinaryOperatorSignature";
                case ErrorCode.ERR_BadAbstractShiftOperatorSignature: return "ERR_BadAbstractShiftOperatorSignature";
                case ErrorCode.ERR_BadAbstractStaticMemberAccess: return "ERR_BadAbstractStaticMemberAccess";
                case ErrorCode.ERR_ExpressionTreeContainsAbstractStaticMemberAccess: return "ERR_ExpressionTreeContainsAbstractStaticMemberAccess";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotStatic: return "ERR_CloseUnimplementedInterfaceMemberNotStatic";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember";
                case ErrorCode.ERR_ExplicitImplementationOfOperatorsMustBeStatic: return "ERR_ExplicitImplementationOfOperatorsMustBeStatic";
                case ErrorCode.ERR_AbstractConversionNotInvolvingContainedType: return "ERR_AbstractConversionNotInvolvingContainedType";
                case ErrorCode.ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod: return "ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod";
                case ErrorCode.ERR_CantConvAnonMethReturnType: return "ERR_CantConvAnonMethReturnType";
                case ErrorCode.ERR_BuilderAttributeDisallowed: return "ERR_BuilderAttributeDisallowed";
                case ErrorCode.ERR_FeatureNotAvailableInVersion10: return "ERR_FeatureNotAvailableInVersion10";
                case ErrorCode.ERR_SimpleProgramIsEmpty: return "ERR_SimpleProgramIsEmpty";
                case ErrorCode.ERR_LineSpanDirectiveInvalidValue: return "ERR_LineSpanDirectiveInvalidValue";
                case ErrorCode.ERR_LineSpanDirectiveEndLessThanStart: return "ERR_LineSpanDirectiveEndLessThanStart";
                case ErrorCode.ERR_WrongArityAsyncReturn: return "ERR_WrongArityAsyncReturn";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnMalformed: return "ERR_InterpolatedStringHandlerMethodReturnMalformed";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnInconsistent: return "ERR_InterpolatedStringHandlerMethodReturnInconsistent";
                case ErrorCode.ERR_NullInvalidInterpolatedStringHandlerArgumentName: return "ERR_NullInvalidInterpolatedStringHandlerArgumentName";
                case ErrorCode.ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName: return "ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName";
                case ErrorCode.ERR_InvalidInterpolatedStringHandlerArgumentName: return "ERR_InvalidInterpolatedStringHandlerArgumentName";
                case ErrorCode.ERR_TypeIsNotAnInterpolatedStringHandlerType: return "ERR_TypeIsNotAnInterpolatedStringHandlerType";
                case ErrorCode.ERR_CannotUseSelfAsInterpolatedStringHandlerArgument: return "ERR_CannotUseSelfAsInterpolatedStringHandlerArgument";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentAttributeMalformed: return "ERR_InterpolatedStringHandlerArgumentAttributeMalformed";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString: return "ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified: return "ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified";
                case ErrorCode.ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion: return "ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion";
                case ErrorCode.ERR_InterpolatedStringHandlerCreationCannotUseDynamic: return "ERR_InterpolatedStringHandlerCreationCannotUseDynamic";
                case ErrorCode.ERR_MultipleFileScopedNamespace: return "ERR_MultipleFileScopedNamespace";
                case ErrorCode.ERR_FileScopedAndNormalNamespace: return "ERR_FileScopedAndNormalNamespace";
                case ErrorCode.ERR_FileScopedNamespaceNotBeforeAllMembers: return "ERR_FileScopedNamespaceNotBeforeAllMembers";
                case ErrorCode.ERR_NoImplicitConvTargetTypedConditional: return "ERR_NoImplicitConvTargetTypedConditional";
                case ErrorCode.ERR_NonPublicParameterlessStructConstructor: return "ERR_NonPublicParameterlessStructConstructor";
                case ErrorCode.ERR_NoConversionForCallerArgumentExpressionParam: return "ERR_NoConversionForCallerArgumentExpressionParam";
                case ErrorCode.ERR_BadCallerArgumentExpressionParamWithoutDefaultValue: return "ERR_BadCallerArgumentExpressionParamWithoutDefaultValue";
                case ErrorCode.ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString: return "ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString";
                case ErrorCode.ERR_AttrTypeArgCannotBeTypeVar: return "ERR_AttrTypeArgCannotBeTypeVar";
                case ErrorCode.ERR_AttrDependentTypeNotAllowed: return "ERR_AttrDependentTypeNotAllowed";
                case ErrorCode.ERR_LambdaWithAttributesToExpressionTree: return "ERR_LambdaWithAttributesToExpressionTree";
                case ErrorCode.ERR_LambdaExplicitReturnTypeVar: return "ERR_LambdaExplicitReturnTypeVar";
                case ErrorCode.ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers: return "ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers";
                case ErrorCode.ERR_CannotUseRefInUnmanagedCallersOnly: return "ERR_CannotUseRefInUnmanagedCallersOnly";
                case ErrorCode.ERR_CannotBeMadeNullable: return "ERR_CannotBeMadeNullable";
                case ErrorCode.ERR_UnsupportedTypeForListPattern: return "ERR_UnsupportedTypeForListPattern";
                case ErrorCode.ERR_MisplacedSlicePattern: return "ERR_MisplacedSlicePattern";
                case ErrorCode.ERR_RecordStructConstructorCallsDefaultConstructor: return "ERR_RecordStructConstructorCallsDefaultConstructor";
                case ErrorCode.ERR_StructHasInitializersAndNoDeclaredConstructor: return "ERR_StructHasInitializersAndNoDeclaredConstructor";
                case ErrorCode.ERR_ListPatternRequiresLength: return "ERR_ListPatternRequiresLength";
                case ErrorCode.ERR_ScopedMismatchInParameterOfTarget: return "ERR_ScopedMismatchInParameterOfTarget";
                case ErrorCode.ERR_ScopedMismatchInParameterOfOverrideOrImplementation: return "ERR_ScopedMismatchInParameterOfOverrideOrImplementation";
                case ErrorCode.ERR_ScopedMismatchInParameterOfPartial: return "ERR_ScopedMismatchInParameterOfPartial";
                case ErrorCode.ERR_ParameterNullCheckingNotSupported: return "ERR_ParameterNullCheckingNotSupported";
                case ErrorCode.ERR_RawStringNotInDirectives: return "ERR_RawStringNotInDirectives";
                case ErrorCode.ERR_UnterminatedRawString: return "ERR_UnterminatedRawString";
                case ErrorCode.ERR_TooManyQuotesForRawString: return "ERR_TooManyQuotesForRawString";
                case ErrorCode.ERR_LineDoesNotStartWithSameWhitespace: return "ERR_LineDoesNotStartWithSameWhitespace";
                case ErrorCode.ERR_RawStringDelimiterOnOwnLine: return "ERR_RawStringDelimiterOnOwnLine";
                case ErrorCode.ERR_RawStringInVerbatimInterpolatedStrings: return "ERR_RawStringInVerbatimInterpolatedStrings";
                case ErrorCode.ERR_RawStringMustContainContent: return "ERR_RawStringMustContainContent";
                case ErrorCode.ERR_LineContainsDifferentWhitespace: return "ERR_LineContainsDifferentWhitespace";
                case ErrorCode.ERR_NotEnoughQuotesForRawString: return "ERR_NotEnoughQuotesForRawString";
                case ErrorCode.ERR_NotEnoughCloseBracesForRawString: return "ERR_NotEnoughCloseBracesForRawString";
                case ErrorCode.ERR_TooManyOpenBracesForRawString: return "ERR_TooManyOpenBracesForRawString";
                case ErrorCode.ERR_TooManyCloseBracesForRawString: return "ERR_TooManyCloseBracesForRawString";
                case ErrorCode.ERR_IllegalAtSequence: return "ERR_IllegalAtSequence";
                case ErrorCode.ERR_StringMustStartWithQuoteCharacter: return "ERR_StringMustStartWithQuoteCharacter";
                case ErrorCode.ERR_NoEnumConstraint: return "ERR_NoEnumConstraint";
                case ErrorCode.ERR_NoDelegateConstraint: return "ERR_NoDelegateConstraint";
                case ErrorCode.ERR_MisplacedRecord: return "ERR_MisplacedRecord";
                case ErrorCode.ERR_PatternSpanCharCannotBeStringNull: return "ERR_PatternSpanCharCannotBeStringNull";
                case ErrorCode.ERR_UseDefViolationPropertyUnsupportedVersion: return "ERR_UseDefViolationPropertyUnsupportedVersion";
                case ErrorCode.ERR_UseDefViolationFieldUnsupportedVersion: return "ERR_UseDefViolationFieldUnsupportedVersion";
                case ErrorCode.ERR_OperatorCantBeChecked: return "ERR_OperatorCantBeChecked";
                case ErrorCode.ERR_ImplicitConversionOperatorCantBeChecked: return "ERR_ImplicitConversionOperatorCantBeChecked";
                case ErrorCode.ERR_CheckedOperatorNeedsMatch: return "ERR_CheckedOperatorNeedsMatch";
                case ErrorCode.ERR_CannotBeConvertedToUtf8: return "ERR_CannotBeConvertedToUtf8";
                case ErrorCode.ERR_MisplacedUnchecked: return "ERR_MisplacedUnchecked";
                case ErrorCode.ERR_LineSpanDirectiveRequiresSpace: return "ERR_LineSpanDirectiveRequiresSpace";
                case ErrorCode.ERR_RequiredNameDisallowed: return "ERR_RequiredNameDisallowed";
                case ErrorCode.ERR_OverrideMustHaveRequired: return "ERR_OverrideMustHaveRequired";
                case ErrorCode.ERR_RequiredMemberCannotBeHidden: return "ERR_RequiredMemberCannotBeHidden";
                case ErrorCode.ERR_RequiredMemberCannotBeLessVisibleThanContainingType: return "ERR_RequiredMemberCannotBeLessVisibleThanContainingType";
                case ErrorCode.ERR_ExplicitRequiredMember: return "ERR_ExplicitRequiredMember";
                case ErrorCode.ERR_RequiredMemberMustBeSettable: return "ERR_RequiredMemberMustBeSettable";
                case ErrorCode.ERR_RequiredMemberMustBeSet: return "ERR_RequiredMemberMustBeSet";
                case ErrorCode.ERR_RequiredMembersMustBeAssignedValue: return "ERR_RequiredMembersMustBeAssignedValue";
                case ErrorCode.ERR_RequiredMembersInvalid: return "ERR_RequiredMembersInvalid";
                case ErrorCode.ERR_RequiredMembersBaseTypeInvalid: return "ERR_RequiredMembersBaseTypeInvalid";
                case ErrorCode.ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers: return "ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers";
                case ErrorCode.ERR_NewConstraintCannotHaveRequiredMembers: return "ERR_NewConstraintCannotHaveRequiredMembers";
                case ErrorCode.ERR_UnsupportedCompilerFeature: return "ERR_UnsupportedCompilerFeature";
                case ErrorCode.ERR_RefReturningPropertiesCannotBeRequired: return "ERR_RefReturningPropertiesCannotBeRequired";
                case ErrorCode.ERR_ImplicitImplementationOfInaccessibleInterfaceMember: return "ERR_ImplicitImplementationOfInaccessibleInterfaceMember";
                case ErrorCode.ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers: return "ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers";
                case ErrorCode.ERR_BadAbstractEqualityOperatorSignature: return "ERR_BadAbstractEqualityOperatorSignature";
                case ErrorCode.ERR_BadBinaryReadOnlySpanConcatenation: return "ERR_BadBinaryReadOnlySpanConcatenation";
                case ErrorCode.ERR_ScopedRefAndRefStructOnly: return "ERR_ScopedRefAndRefStructOnly";
                case ErrorCode.ERR_FixedFieldMustNotBeRef: return "ERR_FixedFieldMustNotBeRef";
                case ErrorCode.ERR_RefFieldCannotReferToRefStruct: return "ERR_RefFieldCannotReferToRefStruct";
                case ErrorCode.ERR_FileTypeDisallowedInSignature: return "ERR_FileTypeDisallowedInSignature";
                case ErrorCode.ERR_FileTypeNoExplicitAccessibility: return "ERR_FileTypeNoExplicitAccessibility";
                case ErrorCode.ERR_FileTypeBase: return "ERR_FileTypeBase";
                case ErrorCode.ERR_FileTypeNested: return "ERR_FileTypeNested";
                case ErrorCode.ERR_GlobalUsingStaticFileType: return "ERR_GlobalUsingStaticFileType";
                case ErrorCode.ERR_FileTypeNameDisallowed: return "ERR_FileTypeNameDisallowed";
                case ErrorCode.ERR_FeatureNotAvailableInVersion11: return "ERR_FeatureNotAvailableInVersion11";
                case ErrorCode.ERR_RefFieldInNonRefStruct: return "ERR_RefFieldInNonRefStruct";
                case ErrorCode.ERR_CannotMatchOnINumberBase: return "ERR_CannotMatchOnINumberBase";
                case ErrorCode.ERR_ScopedDiscard: return "ERR_ScopedDiscard";
                case ErrorCode.ERR_ScopedTypeNameDisallowed: return "ERR_ScopedTypeNameDisallowed";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedTarget: return "ERR_UnscopedRefAttributeUnsupportedTarget";
                case ErrorCode.ERR_RuntimeDoesNotSupportRefFields: return "ERR_RuntimeDoesNotSupportRefFields";
                case ErrorCode.ERR_ExplicitScopedRef: return "ERR_ExplicitScopedRef";
                case ErrorCode.ERR_UnscopedScoped: return "ERR_UnscopedScoped";
                case ErrorCode.ERR_FileTypeNonUniquePath: return "ERR_FileTypeNonUniquePath";
                case ErrorCode.ERR_FilePathCannotBeConvertedToUtf8: return "ERR_FilePathCannotBeConvertedToUtf8";
                case ErrorCode.ERR_FileLocalDuplicateNameInNS: return "ERR_FileLocalDuplicateNameInNS";
                case ErrorCode.ERR_DeconstructVariableCannotBeByRef: return "ERR_DeconstructVariableCannotBeByRef";
                case ErrorCode.ERR_RefReturnScopedParameter: return "ERR_RefReturnScopedParameter";
                case ErrorCode.ERR_RefReturnScopedParameter2: return "ERR_RefReturnScopedParameter2";
                case ErrorCode.ERR_RefReturnOnlyParameter: return "ERR_RefReturnOnlyParameter";
                case ErrorCode.ERR_RefReturnOnlyParameter2: return "ERR_RefReturnOnlyParameter2";
                case ErrorCode.ERR_RefAssignReturnOnly: return "ERR_RefAssignReturnOnly";
                case ErrorCode.ERR_RefAssignValEscapeWider: return "ERR_RefAssignValEscapeWider";
                case ErrorCode.ERR_ImplicitlyTypedDefaultParameter: return "ERR_ImplicitlyTypedDefaultParameter";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedMemberTarget: return "ERR_UnscopedRefAttributeUnsupportedMemberTarget";
                case ErrorCode.ERR_UnscopedRefAttributeInterfaceImplementation: return "ERR_UnscopedRefAttributeInterfaceImplementation";
                case ErrorCode.ERR_UnrecognizedRefSafetyRulesAttributeVersion: return "ERR_UnrecognizedRefSafetyRulesAttributeVersion";
                case ErrorCode.ERR_InvalidPrimaryConstructorParameterReference: return "ERR_InvalidPrimaryConstructorParameterReference";
                case ErrorCode.ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver: return "ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver";
                case ErrorCode.ERR_AnonDelegateCantUseRefLike: return "ERR_AnonDelegateCantUseRefLike";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRef: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRef";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter: return "ERR_AssgReadonlyPrimaryConstructorParameter";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter: return "ERR_RefReturnReadonlyPrimaryConstructorParameter";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter: return "ERR_RefReadonlyPrimaryConstructorParameter";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter2: return "ERR_AssgReadonlyPrimaryConstructorParameter2";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter2: return "ERR_RefReturnReadonlyPrimaryConstructorParameter2";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter2: return "ERR_RefReadonlyPrimaryConstructorParameter2";
                case ErrorCode.ERR_RefReturnPrimaryConstructorParameter: return "ERR_RefReturnPrimaryConstructorParameter";
                case ErrorCode.ERR_StructLayoutCyclePrimaryConstructorParameter: return "ERR_StructLayoutCyclePrimaryConstructorParameter";
                case ErrorCode.ERR_UnexpectedParameterList: return "ERR_UnexpectedParameterList";
                case ErrorCode.ERR_BadRefInUsingAlias: return "ERR_BadRefInUsingAlias";
                case ErrorCode.ERR_BadUnsafeInUsingDirective: return "ERR_BadUnsafeInUsingDirective";
                case ErrorCode.ERR_BadNullableReferenceTypeInUsingAlias: return "ERR_BadNullableReferenceTypeInUsingAlias";
                case ErrorCode.ERR_BadStaticAfterUnsafe: return "ERR_BadStaticAfterUnsafe";
                case ErrorCode.ERR_BadCaseInSwitchArm: return "ERR_BadCaseInSwitchArm";
                case ErrorCode.ERR_ConstantValueOfTypeExpected: return "ERR_ConstantValueOfTypeExpected";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny";
                case ErrorCode.ERR_InterceptorsFeatureNotEnabled: return "ERR_InterceptorsFeatureNotEnabled";
                case ErrorCode.ERR_InterceptorContainingTypeCannotBeGeneric: return "ERR_InterceptorContainingTypeCannotBeGeneric";
                case ErrorCode.ERR_InterceptorPathNotInCompilation: return "ERR_InterceptorPathNotInCompilation";
                case ErrorCode.ERR_InterceptorPathNotInCompilationWithCandidate: return "ERR_InterceptorPathNotInCompilationWithCandidate";
                case ErrorCode.ERR_InterceptorPositionBadToken: return "ERR_InterceptorPositionBadToken";
                case ErrorCode.ERR_InterceptorLineOutOfRange: return "ERR_InterceptorLineOutOfRange";
                case ErrorCode.ERR_InterceptorCharacterOutOfRange: return "ERR_InterceptorCharacterOutOfRange";
                case ErrorCode.ERR_InterceptorSignatureMismatch: return "ERR_InterceptorSignatureMismatch";
                case ErrorCode.ERR_InterceptorMethodMustBeOrdinary: return "ERR_InterceptorMethodMustBeOrdinary";
                case ErrorCode.ERR_InterceptorMustReferToStartOfTokenPosition: return "ERR_InterceptorMustReferToStartOfTokenPosition";
                case ErrorCode.ERR_InterceptorMustHaveMatchingThisParameter: return "ERR_InterceptorMustHaveMatchingThisParameter";
                case ErrorCode.ERR_InterceptorMustNotHaveThisParameter: return "ERR_InterceptorMustNotHaveThisParameter";
                case ErrorCode.ERR_InterceptorFilePathCannotBeNull: return "ERR_InterceptorFilePathCannotBeNull";
                case ErrorCode.ERR_InterceptorNameNotInvoked: return "ERR_InterceptorNameNotInvoked";
                case ErrorCode.ERR_InterceptorNonUniquePath: return "ERR_InterceptorNonUniquePath";
                case ErrorCode.ERR_DuplicateInterceptor: return "ERR_DuplicateInterceptor";
                case ErrorCode.ERR_InterceptorNotAccessible: return "ERR_InterceptorNotAccessible";
                case ErrorCode.ERR_InterceptorScopedMismatch: return "ERR_InterceptorScopedMismatch";
                case ErrorCode.ERR_InterceptorLineCharacterMustBePositive: return "ERR_InterceptorLineCharacterMustBePositive";
                case ErrorCode.ERR_InterceptorCannotInterceptNameof: return "ERR_InterceptorCannotInterceptNameof";
                case ErrorCode.ERR_InterceptorCannotUseUnmanagedCallersOnly: return "ERR_InterceptorCannotUseUnmanagedCallersOnly";
                case ErrorCode.ERR_BadUsingStaticType: return "ERR_BadUsingStaticType";
                case ErrorCode.ERR_SymbolDefinedInAssembly: return "ERR_SymbolDefinedInAssembly";
                case ErrorCode.ERR_InlineArrayConversionToSpanNotSupported: return "ERR_InlineArrayConversionToSpanNotSupported";
                case ErrorCode.ERR_InlineArrayConversionToReadOnlySpanNotSupported: return "ERR_InlineArrayConversionToReadOnlySpanNotSupported";
                case ErrorCode.ERR_InlineArrayIndexOutOfRange: return "ERR_InlineArrayIndexOutOfRange";
                case ErrorCode.ERR_InvalidInlineArrayLength: return "ERR_InvalidInlineArrayLength";
                case ErrorCode.ERR_InvalidInlineArrayLayout: return "ERR_InvalidInlineArrayLayout";
                case ErrorCode.ERR_InvalidInlineArrayFields: return "ERR_InvalidInlineArrayFields";
                case ErrorCode.ERR_ExpressionTreeContainsInlineArrayOperation: return "ERR_ExpressionTreeContainsInlineArrayOperation";
                case ErrorCode.ERR_RuntimeDoesNotSupportInlineArrayTypes: return "ERR_RuntimeDoesNotSupportInlineArrayTypes";
                case ErrorCode.ERR_InlineArrayBadIndex: return "ERR_InlineArrayBadIndex";
                case ErrorCode.ERR_NamedArgumentForInlineArray: return "ERR_NamedArgumentForInlineArray";
                case ErrorCode.ERR_CollectionExpressionTargetTypeNotConstructible: return "ERR_CollectionExpressionTargetTypeNotConstructible";
                case ErrorCode.ERR_ExpressionTreeContainsCollectionExpression: return "ERR_ExpressionTreeContainsCollectionExpression";
                case ErrorCode.ERR_CollectionExpressionNoTargetType: return "ERR_CollectionExpressionNoTargetType";
                case ErrorCode.ERR_InterceptorArityNotCompatible: return "ERR_InterceptorArityNotCompatible";
                case ErrorCode.ERR_InterceptorCannotBeGeneric: return "ERR_InterceptorCannotBeGeneric";
                case ErrorCode.ERR_InlineArrayUnsupportedElementFieldModifier: return "ERR_InlineArrayUnsupportedElementFieldModifier";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidType: return "ERR_CollectionBuilderAttributeInvalidType";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidMethodName: return "ERR_CollectionBuilderAttributeInvalidMethodName";
                case ErrorCode.ERR_CollectionBuilderAttributeMethodNotFound: return "ERR_CollectionBuilderAttributeMethodNotFound";
                case ErrorCode.ERR_CollectionBuilderNoElementType: return "ERR_CollectionBuilderNoElementType";
                case ErrorCode.ERR_InlineArrayForEachNotSupported: return "ERR_InlineArrayForEachNotSupported";
                case ErrorCode.ERR_RefReadOnlyWrongOrdering: return "ERR_RefReadOnlyWrongOrdering";
                case ErrorCode.ERR_BadArgExtraRefLangVersion: return "ERR_BadArgExtraRefLangVersion";
                case ErrorCode.ERR_OutAttrOnRefReadonlyParam: return "ERR_OutAttrOnRefReadonlyParam";
                case ErrorCode.ERR_FeatureNotAvailableInVersion12: return "ERR_FeatureNotAvailableInVersion12";
                case ErrorCode.ERR_CollectionExpressionEscape: return "ERR_CollectionExpressionEscape";
                case ErrorCode.ERR_ExpectedInterpolatedString: return "ERR_ExpectedInterpolatedString";
                case ErrorCode.ERR_InterceptorGlobalNamespace: return "ERR_InterceptorGlobalNamespace";
                case ErrorCode.ERR_InterceptableMethodMustBeOrdinary: return "ERR_InterceptableMethodMustBeOrdinary";
                case ErrorCode.ERR_CollectionExpressionImmutableArray: return "ERR_CollectionExpressionImmutableArray";
                case ErrorCode.ERR_InvalidExperimentalDiagID: return "ERR_InvalidExperimentalDiagID";
                case ErrorCode.ERR_SpreadMissingMember: return "ERR_SpreadMissingMember";
                case ErrorCode.ERR_CollectionExpressionTargetNoElementType: return "ERR_CollectionExpressionTargetNoElementType";
                case ErrorCode.ERR_CollectionExpressionMissingConstructor: return "ERR_CollectionExpressionMissingConstructor";
                case ErrorCode.ERR_CollectionExpressionMissingAdd: return "ERR_CollectionExpressionMissingAdd";
                case ErrorCode.ERR_RefLocalAcrossAwait: return "ERR_RefLocalAcrossAwait";
                case ErrorCode.ERR_DynamicDispatchToParamsCollection: return "ERR_DynamicDispatchToParamsCollection";
                case ErrorCode.ERR_CollectionInitializerInfiniteChainOfAddCalls: return "ERR_CollectionInitializerInfiniteChainOfAddCalls";
                case ErrorCode.ERR_ParamsCollectionInfiniteChainOfConstructorCalls: return "ERR_ParamsCollectionInfiniteChainOfConstructorCalls";
                case ErrorCode.ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember: return "ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember";
                case ErrorCode.ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember: return "ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember";
                case ErrorCode.ERR_ParamsCollectionExpressionTree: return "ERR_ParamsCollectionExpressionTree";
                case ErrorCode.ERR_ParamsCollectionExtensionAddMethod: return "ERR_ParamsCollectionExtensionAddMethod";
                case ErrorCode.ERR_ParamsCollectionMissingConstructor: return "ERR_ParamsCollectionMissingConstructor";
                case ErrorCode.ERR_NoModifiersOnUsing: return "ERR_NoModifiersOnUsing";
                case ErrorCode.ERR_CannotDynamicInvokeOnExpression: return "ERR_CannotDynamicInvokeOnExpression";
                case ErrorCode.ERR_InterceptsLocationDataInvalidFormat: return "ERR_InterceptsLocationDataInvalidFormat";
                case ErrorCode.ERR_InterceptsLocationUnsupportedVersion: return "ERR_InterceptsLocationUnsupportedVersion";
                case ErrorCode.ERR_InterceptsLocationDuplicateFile: return "ERR_InterceptsLocationDuplicateFile";
                case ErrorCode.ERR_InterceptsLocationFileNotFound: return "ERR_InterceptsLocationFileNotFound";
                case ErrorCode.ERR_InterceptsLocationDataInvalidPosition: return "ERR_InterceptsLocationDataInvalidPosition";
                case ErrorCode.ERR_BadYieldInUnsafe: return "ERR_BadYieldInUnsafe";
                case ErrorCode.ERR_AddressOfInIterator: return "ERR_AddressOfInIterator";
                case ErrorCode.ERR_RuntimeDoesNotSupportByRefLikeGenerics: return "ERR_RuntimeDoesNotSupportByRefLikeGenerics";
                case ErrorCode.ERR_RefStructConstraintAlreadySpecified: return "ERR_RefStructConstraintAlreadySpecified";
                case ErrorCode.ERR_AllowsClauseMustBeLast: return "ERR_AllowsClauseMustBeLast";
                case ErrorCode.ERR_ClassIsCombinedWithRefStruct: return "ERR_ClassIsCombinedWithRefStruct";
                case ErrorCode.ERR_NotRefStructConstraintNotSatisfied: return "ERR_NotRefStructConstraintNotSatisfied";
                case ErrorCode.ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember";
                case ErrorCode.ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike: return "ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike";
                case ErrorCode.ERR_BadAllowByRefLikeEnumerator: return "ERR_BadAllowByRefLikeEnumerator";
                case ErrorCode.ERR_PartialPropertyMissingImplementation: return "ERR_PartialPropertyMissingImplementation";
                case ErrorCode.ERR_PartialPropertyMissingDefinition: return "ERR_PartialPropertyMissingDefinition";
                case ErrorCode.ERR_PartialPropertyDuplicateDefinition: return "ERR_PartialPropertyDuplicateDefinition";
                case ErrorCode.ERR_PartialPropertyDuplicateImplementation: return "ERR_PartialPropertyDuplicateImplementation";
                case ErrorCode.ERR_PartialPropertyMissingAccessor: return "ERR_PartialPropertyMissingAccessor";
                case ErrorCode.ERR_PartialPropertyUnexpectedAccessor: return "ERR_PartialPropertyUnexpectedAccessor";
                case ErrorCode.ERR_PartialPropertyInitMismatch: return "ERR_PartialPropertyInitMismatch";
                case ErrorCode.ERR_PartialPropertyTypeDifference: return "ERR_PartialPropertyTypeDifference";
                case ErrorCode.ERR_PartialPropertyRequiredDifference: return "ERR_PartialPropertyRequiredDifference";
                case ErrorCode.ERR_InlineArrayAttributeOnRecord: return "ERR_InlineArrayAttributeOnRecord";
                case ErrorCode.ERR_FeatureNotAvailableInVersion13: return "ERR_FeatureNotAvailableInVersion13";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToOverride: return "ERR_CannotApplyOverloadResolutionPriorityToOverride";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToMember: return "ERR_CannotApplyOverloadResolutionPriorityToMember";
                default: throw ExceptionUtilities.UnexpectedValue(code);
            }
        }
        public static string ToStringWithTitle(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.WRN_InvalidMainSig: return "WRN_InvalidMainSig_Title";
                case ErrorCode.WRN_UnreferencedEvent: return "WRN_UnreferencedEvent_Title";
                case ErrorCode.WRN_LowercaseEllSuffix: return "WRN_LowercaseEllSuffix_Title";
                case ErrorCode.WRN_DuplicateUsing: return "WRN_DuplicateUsing_Title";
                case ErrorCode.WRN_NewRequired: return "WRN_NewRequired_Title";
                case ErrorCode.WRN_NewNotRequired: return "WRN_NewNotRequired_Title";
                case ErrorCode.WRN_NewOrOverrideExpected: return "WRN_NewOrOverrideExpected_Title";
                case ErrorCode.WRN_UnreachableCode: return "WRN_UnreachableCode_Title";
                case ErrorCode.WRN_UnreferencedLabel: return "WRN_UnreferencedLabel_Title";
                case ErrorCode.WRN_UnreferencedVar: return "WRN_UnreferencedVar_Title";
                case ErrorCode.WRN_UnreferencedField: return "WRN_UnreferencedField_Title";
                case ErrorCode.WRN_IsAlwaysTrue: return "WRN_IsAlwaysTrue_Title";
                case ErrorCode.WRN_IsAlwaysFalse: return "WRN_IsAlwaysFalse_Title";
                case ErrorCode.WRN_ByRefNonAgileField: return "WRN_ByRefNonAgileField_Title";
                case ErrorCode.WRN_UnreferencedVarAssg: return "WRN_UnreferencedVarAssg_Title";
                case ErrorCode.WRN_NegativeArrayIndex: return "WRN_NegativeArrayIndex_Title";
                case ErrorCode.WRN_BadRefCompareLeft: return "WRN_BadRefCompareLeft_Title";
                case ErrorCode.WRN_BadRefCompareRight: return "WRN_BadRefCompareRight_Title";
                case ErrorCode.WRN_PatternIsAmbiguous: return "WRN_PatternIsAmbiguous_Title";
                case ErrorCode.WRN_PatternNotPublicOrNotInstance: return "WRN_PatternNotPublicOrNotInstance_Title";
                case ErrorCode.WRN_PatternBadSignature: return "WRN_PatternBadSignature_Title";
                case ErrorCode.WRN_SequentialOnPartialClass: return "WRN_SequentialOnPartialClass_Title";
                case ErrorCode.WRN_MainCantBeGeneric: return "WRN_MainCantBeGeneric_Title";
                case ErrorCode.WRN_UnreferencedFieldAssg: return "WRN_UnreferencedFieldAssg_Title";
                case ErrorCode.WRN_AmbiguousXMLReference: return "WRN_AmbiguousXMLReference_Title";
                case ErrorCode.WRN_VolatileByRef: return "WRN_VolatileByRef_Title";
                case ErrorCode.WRN_SameFullNameThisNsAgg: return "WRN_SameFullNameThisNsAgg_Title";
                case ErrorCode.WRN_SameFullNameThisAggAgg: return "WRN_SameFullNameThisAggAgg_Title";
                case ErrorCode.WRN_SameFullNameThisAggNs: return "WRN_SameFullNameThisAggNs_Title";
                case ErrorCode.WRN_GlobalAliasDefn: return "WRN_GlobalAliasDefn_Title";
                case ErrorCode.WRN_AlwaysNull: return "WRN_AlwaysNull_Title";
                case ErrorCode.WRN_CmpAlwaysFalse: return "WRN_CmpAlwaysFalse_Title";
                case ErrorCode.WRN_FinalizeMethod: return "WRN_FinalizeMethod_Title";
                case ErrorCode.WRN_GotoCaseShouldConvert: return "WRN_GotoCaseShouldConvert_Title";
                case ErrorCode.WRN_NubExprIsConstBool: return "WRN_NubExprIsConstBool_Title";
                case ErrorCode.WRN_ExplicitImplCollision: return "WRN_ExplicitImplCollision_Title";
                case ErrorCode.WRN_DeprecatedSymbol: return "WRN_DeprecatedSymbol_Title";
                case ErrorCode.WRN_DeprecatedSymbolStr: return "WRN_DeprecatedSymbolStr_Title";
                case ErrorCode.WRN_ExternMethodNoImplementation: return "WRN_ExternMethodNoImplementation_Title";
                case ErrorCode.WRN_ProtectedInSealed: return "WRN_ProtectedInSealed_Title";
                case ErrorCode.WRN_PossibleMistakenNullStatement: return "WRN_PossibleMistakenNullStatement_Title";
                case ErrorCode.WRN_UnassignedInternalField: return "WRN_UnassignedInternalField_Title";
                case ErrorCode.WRN_VacuousIntegralComp: return "WRN_VacuousIntegralComp_Title";
                case ErrorCode.WRN_AttributeLocationOnBadDeclaration: return "WRN_AttributeLocationOnBadDeclaration_Title";
                case ErrorCode.WRN_InvalidAttributeLocation: return "WRN_InvalidAttributeLocation_Title";
                case ErrorCode.WRN_EqualsWithoutGetHashCode: return "WRN_EqualsWithoutGetHashCode_Title";
                case ErrorCode.WRN_EqualityOpWithoutEquals: return "WRN_EqualityOpWithoutEquals_Title";
                case ErrorCode.WRN_EqualityOpWithoutGetHashCode: return "WRN_EqualityOpWithoutGetHashCode_Title";
                case ErrorCode.WRN_IncorrectBooleanAssg: return "WRN_IncorrectBooleanAssg_Title";
                case ErrorCode.WRN_NonObsoleteOverridingObsolete: return "WRN_NonObsoleteOverridingObsolete_Title";
                case ErrorCode.WRN_BitwiseOrSignExtend: return "WRN_BitwiseOrSignExtend_Title";
                case ErrorCode.WRN_CoClassWithoutComImport: return "WRN_CoClassWithoutComImport_Title";
                case ErrorCode.WRN_TypeParameterSameAsOuterTypeParameter: return "WRN_TypeParameterSameAsOuterTypeParameter_Title";
                case ErrorCode.WRN_AssignmentToLockOrDispose: return "WRN_AssignmentToLockOrDispose_Title";
                case ErrorCode.WRN_ObsoleteOverridingNonObsolete: return "WRN_ObsoleteOverridingNonObsolete_Title";
                case ErrorCode.WRN_DebugFullNameTooLong: return "WRN_DebugFullNameTooLong_Title";
                case ErrorCode.WRN_ExternCtorNoImplementation: return "WRN_ExternCtorNoImplementation_Title";
                case ErrorCode.WRN_WarningDirective: return "WRN_WarningDirective_Title";
                case ErrorCode.WRN_UnreachableGeneralCatch: return "WRN_UnreachableGeneralCatch_Title";
                case ErrorCode.WRN_DeprecatedCollectionInitAddStr: return "WRN_DeprecatedCollectionInitAddStr_Title";
                case ErrorCode.WRN_DeprecatedCollectionInitAdd: return "WRN_DeprecatedCollectionInitAdd_Title";
                case ErrorCode.WRN_DefaultValueForUnconsumedLocation: return "WRN_DefaultValueForUnconsumedLocation_Title";
                case ErrorCode.WRN_IdentifierOrNumericLiteralExpected: return "WRN_IdentifierOrNumericLiteralExpected_Title";
                case ErrorCode.WRN_EmptySwitch: return "WRN_EmptySwitch_Title";
                case ErrorCode.WRN_XMLParseError: return "WRN_XMLParseError_Title";
                case ErrorCode.WRN_DuplicateParamTag: return "WRN_DuplicateParamTag_Title";
                case ErrorCode.WRN_UnmatchedParamTag: return "WRN_UnmatchedParamTag_Title";
                case ErrorCode.WRN_MissingParamTag: return "WRN_MissingParamTag_Title";
                case ErrorCode.WRN_BadXMLRef: return "WRN_BadXMLRef_Title";
                case ErrorCode.WRN_BadXMLRefParamType: return "WRN_BadXMLRefParamType_Title";
                case ErrorCode.WRN_BadXMLRefReturnType: return "WRN_BadXMLRefReturnType_Title";
                case ErrorCode.WRN_BadXMLRefSyntax: return "WRN_BadXMLRefSyntax_Title";
                case ErrorCode.WRN_UnprocessedXMLComment: return "WRN_UnprocessedXMLComment_Title";
                case ErrorCode.WRN_FailedInclude: return "WRN_FailedInclude_Title";
                case ErrorCode.WRN_InvalidInclude: return "WRN_InvalidInclude_Title";
                case ErrorCode.WRN_MissingXMLComment: return "WRN_MissingXMLComment_Title";
                case ErrorCode.WRN_XMLParseIncludeError: return "WRN_XMLParseIncludeError_Title";
                case ErrorCode.WRN_ALinkWarn: return "WRN_ALinkWarn_Title";
                case ErrorCode.WRN_CmdOptionConflictsSource: return "WRN_CmdOptionConflictsSource_Title";
                case ErrorCode.WRN_IllegalPragma: return "WRN_IllegalPragma_Title";
                case ErrorCode.WRN_IllegalPPWarning: return "WRN_IllegalPPWarning_Title";
                case ErrorCode.WRN_BadRestoreNumber: return "WRN_BadRestoreNumber_Title";
                case ErrorCode.WRN_NonECMAFeature: return "WRN_NonECMAFeature_Title";
                case ErrorCode.WRN_ErrorOverride: return "WRN_ErrorOverride_Title";
                case ErrorCode.WRN_InvalidSearchPathDir: return "WRN_InvalidSearchPathDir_Title";
                case ErrorCode.WRN_MultiplePredefTypes: return "WRN_MultiplePredefTypes_Title";
                case ErrorCode.WRN_TooManyLinesForDebugger: return "WRN_TooManyLinesForDebugger_Title";
                case ErrorCode.WRN_CallOnNonAgileField: return "WRN_CallOnNonAgileField_Title";
                case ErrorCode.WRN_InvalidNumber: return "WRN_InvalidNumber_Title";
                case ErrorCode.WRN_IllegalPPChecksum: return "WRN_IllegalPPChecksum_Title";
                case ErrorCode.WRN_EndOfPPLineExpected: return "WRN_EndOfPPLineExpected_Title";
                case ErrorCode.WRN_ConflictingChecksum: return "WRN_ConflictingChecksum_Title";
                case ErrorCode.WRN_InvalidAssemblyName: return "WRN_InvalidAssemblyName_Title";
                case ErrorCode.WRN_UnifyReferenceMajMin: return "WRN_UnifyReferenceMajMin_Title";
                case ErrorCode.WRN_UnifyReferenceBldRev: return "WRN_UnifyReferenceBldRev_Title";
                case ErrorCode.WRN_DuplicateTypeParamTag: return "WRN_DuplicateTypeParamTag_Title";
                case ErrorCode.WRN_UnmatchedTypeParamTag: return "WRN_UnmatchedTypeParamTag_Title";
                case ErrorCode.WRN_MissingTypeParamTag: return "WRN_MissingTypeParamTag_Title";
                case ErrorCode.WRN_AssignmentToSelf: return "WRN_AssignmentToSelf_Title";
                case ErrorCode.WRN_ComparisonToSelf: return "WRN_ComparisonToSelf_Title";
                case ErrorCode.WRN_DotOnDefault: return "WRN_DotOnDefault_Title";
                case ErrorCode.WRN_BadXMLRefTypeVar: return "WRN_BadXMLRefTypeVar_Title";
                case ErrorCode.WRN_UnmatchedParamRefTag: return "WRN_UnmatchedParamRefTag_Title";
                case ErrorCode.WRN_UnmatchedTypeParamRefTag: return "WRN_UnmatchedTypeParamRefTag_Title";
                case ErrorCode.WRN_ReferencedAssemblyReferencesLinkedPIA: return "WRN_ReferencedAssemblyReferencesLinkedPIA_Title";
                case ErrorCode.WRN_CantHaveManifestForModule: return "WRN_CantHaveManifestForModule_Title";
                case ErrorCode.WRN_MultipleRuntimeImplementationMatches: return "WRN_MultipleRuntimeImplementationMatches_Title";
                case ErrorCode.WRN_MultipleRuntimeOverrideMatches: return "WRN_MultipleRuntimeOverrideMatches_Title";
                case ErrorCode.WRN_DynamicDispatchToConditionalMethod: return "WRN_DynamicDispatchToConditionalMethod_Title";
                case ErrorCode.WRN_IsDynamicIsConfusing: return "WRN_IsDynamicIsConfusing_Title";
                case ErrorCode.WRN_AsyncLacksAwaits: return "WRN_AsyncLacksAwaits_Title";
                case ErrorCode.WRN_FileAlreadyIncluded: return "WRN_FileAlreadyIncluded_Title";
                case ErrorCode.WRN_NoSources: return "WRN_NoSources_Title";
                case ErrorCode.WRN_NoConfigNotOnCommandLine: return "WRN_NoConfigNotOnCommandLine_Title";
                case ErrorCode.WRN_DefineIdentifierRequired: return "WRN_DefineIdentifierRequired_Title";
                case ErrorCode.WRN_BadUILang: return "WRN_BadUILang_Title";
                case ErrorCode.WRN_CLS_NoVarArgs: return "WRN_CLS_NoVarArgs_Title";
                case ErrorCode.WRN_CLS_BadArgType: return "WRN_CLS_BadArgType_Title";
                case ErrorCode.WRN_CLS_BadReturnType: return "WRN_CLS_BadReturnType_Title";
                case ErrorCode.WRN_CLS_BadFieldPropType: return "WRN_CLS_BadFieldPropType_Title";
                case ErrorCode.WRN_CLS_BadIdentifierCase: return "WRN_CLS_BadIdentifierCase_Title";
                case ErrorCode.WRN_CLS_OverloadRefOut: return "WRN_CLS_OverloadRefOut_Title";
                case ErrorCode.WRN_CLS_OverloadUnnamed: return "WRN_CLS_OverloadUnnamed_Title";
                case ErrorCode.WRN_CLS_BadIdentifier: return "WRN_CLS_BadIdentifier_Title";
                case ErrorCode.WRN_CLS_BadBase: return "WRN_CLS_BadBase_Title";
                case ErrorCode.WRN_CLS_BadInterfaceMember: return "WRN_CLS_BadInterfaceMember_Title";
                case ErrorCode.WRN_CLS_NoAbstractMembers: return "WRN_CLS_NoAbstractMembers_Title";
                case ErrorCode.WRN_CLS_NotOnModules: return "WRN_CLS_NotOnModules_Title";
                case ErrorCode.WRN_CLS_ModuleMissingCLS: return "WRN_CLS_ModuleMissingCLS_Title";
                case ErrorCode.WRN_CLS_AssemblyNotCLS: return "WRN_CLS_AssemblyNotCLS_Title";
                case ErrorCode.WRN_CLS_BadAttributeType: return "WRN_CLS_BadAttributeType_Title";
                case ErrorCode.WRN_CLS_ArrayArgumentToAttribute: return "WRN_CLS_ArrayArgumentToAttribute_Title";
                case ErrorCode.WRN_CLS_NotOnModules2: return "WRN_CLS_NotOnModules2_Title";
                case ErrorCode.WRN_CLS_IllegalTrueInFalse: return "WRN_CLS_IllegalTrueInFalse_Title";
                case ErrorCode.WRN_CLS_MeaninglessOnPrivateType: return "WRN_CLS_MeaninglessOnPrivateType_Title";
                case ErrorCode.WRN_CLS_AssemblyNotCLS2: return "WRN_CLS_AssemblyNotCLS2_Title";
                case ErrorCode.WRN_CLS_MeaninglessOnParam: return "WRN_CLS_MeaninglessOnParam_Title";
                case ErrorCode.WRN_CLS_MeaninglessOnReturn: return "WRN_CLS_MeaninglessOnReturn_Title";
                case ErrorCode.WRN_CLS_BadTypeVar: return "WRN_CLS_BadTypeVar_Title";
                case ErrorCode.WRN_CLS_VolatileField: return "WRN_CLS_VolatileField_Title";
                case ErrorCode.WRN_CLS_BadInterface: return "WRN_CLS_BadInterface_Title";
                case ErrorCode.WRN_UnobservedAwaitableExpression: return "WRN_UnobservedAwaitableExpression_Title";
                case ErrorCode.WRN_CallerLineNumberParamForUnconsumedLocation: return "WRN_CallerLineNumberParamForUnconsumedLocation_Title";
                case ErrorCode.WRN_CallerFilePathParamForUnconsumedLocation: return "WRN_CallerFilePathParamForUnconsumedLocation_Title";
                case ErrorCode.WRN_CallerMemberNameParamForUnconsumedLocation: return "WRN_CallerMemberNameParamForUnconsumedLocation_Title";
                case ErrorCode.WRN_MainIgnored: return "WRN_MainIgnored_Title";
                case ErrorCode.WRN_StaticInAsOrIs: return "WRN_StaticInAsOrIs_Title";
                case ErrorCode.WRN_DelaySignButNoKey: return "WRN_DelaySignButNoKey_Title";
                case ErrorCode.WRN_InvalidVersionFormat: return "WRN_InvalidVersionFormat_Title";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerMemberName: return "WRN_CallerFilePathPreferredOverCallerMemberName_Title";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerMemberName: return "WRN_CallerLineNumberPreferredOverCallerMemberName_Title";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerFilePath: return "WRN_CallerLineNumberPreferredOverCallerFilePath_Title";
                case ErrorCode.WRN_AssemblyAttributeFromModuleIsOverridden: return "WRN_AssemblyAttributeFromModuleIsOverridden_Title";
                case ErrorCode.WRN_FilterIsConstantTrue: return "WRN_FilterIsConstantTrue_Title";
                case ErrorCode.WRN_UnimplementedCommandLineSwitch: return "WRN_UnimplementedCommandLineSwitch_Title";
                case ErrorCode.WRN_ReferencedAssemblyDoesNotHaveStrongName: return "WRN_ReferencedAssemblyDoesNotHaveStrongName_Title";
                case ErrorCode.WRN_RefCultureMismatch: return "WRN_RefCultureMismatch_Title";
                case ErrorCode.WRN_ConflictingMachineAssembly: return "WRN_ConflictingMachineAssembly_Title";
                case ErrorCode.WRN_UnqualifiedNestedTypeInCref: return "WRN_UnqualifiedNestedTypeInCref_Title";
                case ErrorCode.WRN_NoRuntimeMetadataVersion: return "WRN_NoRuntimeMetadataVersion_Title";
                case ErrorCode.WRN_PdbLocalNameTooLong: return "WRN_PdbLocalNameTooLong_Title";
                case ErrorCode.WRN_AnalyzerCannotBeCreated: return "WRN_AnalyzerCannotBeCreated_Title";
                case ErrorCode.WRN_NoAnalyzerInAssembly: return "WRN_NoAnalyzerInAssembly_Title";
                case ErrorCode.WRN_UnableToLoadAnalyzer: return "WRN_UnableToLoadAnalyzer_Title";
                case ErrorCode.WRN_NubExprIsConstBool2: return "WRN_NubExprIsConstBool2_Title";
                case ErrorCode.WRN_AlignmentMagnitude: return "WRN_AlignmentMagnitude_Title";
                case ErrorCode.WRN_AttributeIgnoredWhenPublicSigning: return "WRN_AttributeIgnoredWhenPublicSigning_Title";
                case ErrorCode.WRN_TupleLiteralNameMismatch: return "WRN_TupleLiteralNameMismatch_Title";
                case ErrorCode.WRN_WindowsExperimental: return "WRN_WindowsExperimental_Title";
                case ErrorCode.WRN_UnreferencedLocalFunction: return "WRN_UnreferencedLocalFunction_Title";
                case ErrorCode.WRN_FilterIsConstantFalse: return "WRN_FilterIsConstantFalse_Title";
                case ErrorCode.WRN_FilterIsConstantFalseRedundantTryCatch: return "WRN_FilterIsConstantFalseRedundantTryCatch_Title";
                case ErrorCode.WRN_AttributesOnBackingFieldsNotAvailable: return "WRN_AttributesOnBackingFieldsNotAvailable_Title";
                case ErrorCode.WRN_TupleBinopLiteralNameMismatch: return "WRN_TupleBinopLiteralNameMismatch_Title";
                case ErrorCode.WRN_TypeParameterSameAsOuterMethodTypeParameter: return "WRN_TypeParameterSameAsOuterMethodTypeParameter_Title";
                case ErrorCode.WRN_UnconsumedEnumeratorCancellationAttributeUsage: return "WRN_UnconsumedEnumeratorCancellationAttributeUsage_Title";
                case ErrorCode.WRN_UndecoratedCancellationTokenParameter: return "WRN_UndecoratedCancellationTokenParameter_Title";
                case ErrorCode.WRN_ManagedAddr: return "WRN_ManagedAddr_Title";
                case ErrorCode.WRN_SwitchExpressionNotExhaustive: return "WRN_SwitchExpressionNotExhaustive_Title";
                case ErrorCode.WRN_CaseConstantNamedUnderscore: return "WRN_CaseConstantNamedUnderscore_Title";
                case ErrorCode.WRN_IsTypeNamedUnderscore: return "WRN_IsTypeNamedUnderscore_Title";
                case ErrorCode.WRN_GivenExpressionNeverMatchesPattern: return "WRN_GivenExpressionNeverMatchesPattern_Title";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesConstant: return "WRN_GivenExpressionAlwaysMatchesConstant_Title";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue: return "WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue_Title";
                case ErrorCode.WRN_ThrowPossibleNull: return "WRN_ThrowPossibleNull_Title";
                case ErrorCode.WRN_ConvertingNullableToNonNullable: return "WRN_ConvertingNullableToNonNullable_Title";
                case ErrorCode.WRN_NullReferenceAssignment: return "WRN_NullReferenceAssignment_Title";
                case ErrorCode.WRN_NullReferenceReceiver: return "WRN_NullReferenceReceiver_Title";
                case ErrorCode.WRN_NullReferenceReturn: return "WRN_NullReferenceReturn_Title";
                case ErrorCode.WRN_NullReferenceArgument: return "WRN_NullReferenceArgument_Title";
                case ErrorCode.WRN_UnboxPossibleNull: return "WRN_UnboxPossibleNull_Title";
                case ErrorCode.WRN_DisallowNullAttributeForbidsMaybeNullAssignment: return "WRN_DisallowNullAttributeForbidsMaybeNullAssignment_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnOverride: return "WRN_NullabilityMismatchInTypeOnOverride_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnOverride: return "WRN_NullabilityMismatchInReturnTypeOnOverride_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnOverride: return "WRN_NullabilityMismatchInParameterTypeOnOverride_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnPartial: return "WRN_NullabilityMismatchInParameterTypeOnPartial_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInTypeOnImplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInTypeOnExplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation_Title";
                case ErrorCode.WRN_UninitializedNonNullableField: return "WRN_UninitializedNonNullableField_Title";
                case ErrorCode.WRN_NullabilityMismatchInAssignment: return "WRN_NullabilityMismatchInAssignment_Title";
                case ErrorCode.WRN_NullabilityMismatchInArgument: return "WRN_NullabilityMismatchInArgument_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOfTargetDelegate: return "WRN_NullabilityMismatchInReturnTypeOfTargetDelegate_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate: return "WRN_NullabilityMismatchInParameterTypeOfTargetDelegate_Title";
                case ErrorCode.WRN_NullabilityMismatchInArgumentForOutput: return "WRN_NullabilityMismatchInArgumentForOutput_Title";
                case ErrorCode.WRN_NullAsNonNullable: return "WRN_NullAsNonNullable_Title";
                case ErrorCode.WRN_NullableValueTypeMayBeNull: return "WRN_NullableValueTypeMayBeNull_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterConstraint: return "WRN_NullabilityMismatchInTypeParameterConstraint_Title";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotation: return "WRN_MissingNonNullTypesContextForAnnotation_Title";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnImplicitImplementation: return "WRN_NullabilityMismatchInConstraintsOnImplicitImplementation_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint: return "WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint_Title";
                case ErrorCode.WRN_NullabilityMismatchInExplicitlyImplementedInterface: return "WRN_NullabilityMismatchInExplicitlyImplementedInterface_Title";
                case ErrorCode.WRN_NullabilityMismatchInInterfaceImplementedByBase: return "WRN_NullabilityMismatchInInterfaceImplementedByBase_Title";
                case ErrorCode.WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList: return "WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList_Title";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNull: return "WRN_SwitchExpressionNotExhaustiveForNull_Title";
                case ErrorCode.WRN_ImplicitCopyInReadOnlyMember: return "WRN_ImplicitCopyInReadOnlyMember_Title";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnPartialImplementation: return "WRN_NullabilityMismatchInConstraintsOnPartialImplementation_Title";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode: return "WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode_Title";
                case ErrorCode.WRN_NullReferenceInitializer: return "WRN_NullReferenceInitializer_Title";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterNotNullConstraint: return "WRN_NullabilityMismatchInTypeParameterNotNullConstraint_Title";
                case ErrorCode.WRN_ParameterConditionallyDisallowsNull: return "WRN_ParameterConditionallyDisallowsNull_Title";
                case ErrorCode.WRN_ShouldNotReturn: return "WRN_ShouldNotReturn_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation_Title";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation_Title";
                case ErrorCode.WRN_DoesNotReturnMismatch: return "WRN_DoesNotReturnMismatch_Title";
                case ErrorCode.WRN_MemberNotNull: return "WRN_MemberNotNull_Title";
                case ErrorCode.WRN_MemberNotNullWhen: return "WRN_MemberNotNullWhen_Title";
                case ErrorCode.WRN_MemberNotNullBadMember: return "WRN_MemberNotNullBadMember_Title";
                case ErrorCode.WRN_ParameterDisallowsNull: return "WRN_ParameterDisallowsNull_Title";
                case ErrorCode.WRN_ConstOutOfRangeChecked: return "WRN_ConstOutOfRangeChecked_Title";
                case ErrorCode.WRN_GeneratorFailedDuringInitialization: return "WRN_GeneratorFailedDuringInitialization_Title";
                case ErrorCode.WRN_GeneratorFailedDuringGeneration: return "WRN_GeneratorFailedDuringGeneration_Title";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesPattern: return "WRN_GivenExpressionAlwaysMatchesPattern_Title";
                case ErrorCode.WRN_IsPatternAlways: return "WRN_IsPatternAlways_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnPartial: return "WRN_NullabilityMismatchInReturnTypeOnPartial_Title";
                case ErrorCode.WRN_ParameterNotNullIfNotNull: return "WRN_ParameterNotNullIfNotNull_Title";
                case ErrorCode.WRN_ReturnNotNullIfNotNull: return "WRN_ReturnNotNullIfNotNull_Title";
                case ErrorCode.WRN_PartialMethodTypeDifference: return "WRN_PartialMethodTypeDifference_Title";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithWhen: return "WRN_SwitchExpressionNotExhaustiveWithWhen_Title";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNullWithWhen: return "WRN_SwitchExpressionNotExhaustiveForNullWithWhen_Title";
                case ErrorCode.WRN_PrecedenceInversion: return "WRN_PrecedenceInversion_Title";
                case ErrorCode.WRN_AnalyzerReferencesFramework: return "WRN_AnalyzerReferencesFramework_Title";
                case ErrorCode.WRN_RecordEqualsWithoutGetHashCode: return "WRN_RecordEqualsWithoutGetHashCode_Title";
                case ErrorCode.WRN_RecordNamedDisallowed: return "WRN_RecordNamedDisallowed_Title";
                case ErrorCode.WRN_UnassignedThisAutoPropertyUnsupportedVersion: return "WRN_UnassignedThisAutoPropertyUnsupportedVersion_Title";
                case ErrorCode.WRN_UnassignedThisUnsupportedVersion: return "WRN_UnassignedThisUnsupportedVersion_Title";
                case ErrorCode.WRN_ParamUnassigned: return "WRN_ParamUnassigned_Title";
                case ErrorCode.WRN_UseDefViolationProperty: return "WRN_UseDefViolationProperty_Title";
                case ErrorCode.WRN_UseDefViolationField: return "WRN_UseDefViolationField_Title";
                case ErrorCode.WRN_UseDefViolationThisUnsupportedVersion: return "WRN_UseDefViolationThisUnsupportedVersion_Title";
                case ErrorCode.WRN_UseDefViolationOut: return "WRN_UseDefViolationOut_Title";
                case ErrorCode.WRN_UseDefViolation: return "WRN_UseDefViolation_Title";
                case ErrorCode.WRN_SyncAndAsyncEntryPoints: return "WRN_SyncAndAsyncEntryPoints_Title";
                case ErrorCode.WRN_ParameterIsStaticClass: return "WRN_ParameterIsStaticClass_Title";
                case ErrorCode.WRN_ReturnTypeIsStaticClass: return "WRN_ReturnTypeIsStaticClass_Title";
                case ErrorCode.WRN_UnreadRecordParameter: return "WRN_UnreadRecordParameter_Title";
                case ErrorCode.WRN_DoNotCompareFunctionPointers: return "WRN_DoNotCompareFunctionPointers_Title";
                case ErrorCode.WRN_ParameterOccursAfterInterpolatedStringHandlerParameter: return "WRN_ParameterOccursAfterInterpolatedStringHandlerParameter_Title";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerArgumentExpression: return "WRN_CallerLineNumberPreferredOverCallerArgumentExpression_Title";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerArgumentExpression: return "WRN_CallerFilePathPreferredOverCallerArgumentExpression_Title";
                case ErrorCode.WRN_CallerMemberNamePreferredOverCallerArgumentExpression: return "WRN_CallerMemberNamePreferredOverCallerArgumentExpression_Title";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeHasInvalidParameterName: return "WRN_CallerArgumentExpressionAttributeHasInvalidParameterName_Title";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeSelfReferential: return "WRN_CallerArgumentExpressionAttributeSelfReferential_Title";
                case ErrorCode.WRN_CallerArgumentExpressionParamForUnconsumedLocation: return "WRN_CallerArgumentExpressionParamForUnconsumedLocation_Title";
                case ErrorCode.WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters: return "WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters_Title";
                case ErrorCode.WRN_CompileTimeCheckedOverflow: return "WRN_CompileTimeCheckedOverflow_Title";
                case ErrorCode.WRN_MethGrpToNonDel: return "WRN_MethGrpToNonDel_Title";
                case ErrorCode.WRN_LowerCaseTypeName: return "WRN_LowerCaseTypeName_Title";
                case ErrorCode.WRN_UseDefViolationPropertyUnsupportedVersion: return "WRN_UseDefViolationPropertyUnsupportedVersion_Title";
                case ErrorCode.WRN_UseDefViolationFieldUnsupportedVersion: return "WRN_UseDefViolationFieldUnsupportedVersion_Title";
                case ErrorCode.WRN_UseDefViolationPropertySupportedVersion: return "WRN_UseDefViolationPropertySupportedVersion_Title";
                case ErrorCode.WRN_UseDefViolationFieldSupportedVersion: return "WRN_UseDefViolationFieldSupportedVersion_Title";
                case ErrorCode.WRN_UseDefViolationThisSupportedVersion: return "WRN_UseDefViolationThisSupportedVersion_Title";
                case ErrorCode.WRN_UnassignedThisAutoPropertySupportedVersion: return "WRN_UnassignedThisAutoPropertySupportedVersion_Title";
                case ErrorCode.WRN_UnassignedThisSupportedVersion: return "WRN_UnassignedThisSupportedVersion_Title";
                case ErrorCode.WRN_ObsoleteMembersShouldNotBeRequired: return "WRN_ObsoleteMembersShouldNotBeRequired_Title";
                case ErrorCode.WRN_AnalyzerReferencesNewerCompiler: return "WRN_AnalyzerReferencesNewerCompiler_Title";
                case ErrorCode.WRN_DuplicateAnalyzerReference: return "WRN_DuplicateAnalyzerReference_Title";
                case ErrorCode.WRN_ScopedMismatchInParameterOfTarget: return "WRN_ScopedMismatchInParameterOfTarget_Title";
                case ErrorCode.WRN_ScopedMismatchInParameterOfOverrideOrImplementation: return "WRN_ScopedMismatchInParameterOfOverrideOrImplementation_Title";
                case ErrorCode.WRN_EscapeVariable: return "WRN_EscapeVariable_Title";
                case ErrorCode.WRN_EscapeStackAlloc: return "WRN_EscapeStackAlloc_Title";
                case ErrorCode.WRN_RefReturnNonreturnableLocal: return "WRN_RefReturnNonreturnableLocal_Title";
                case ErrorCode.WRN_RefReturnNonreturnableLocal2: return "WRN_RefReturnNonreturnableLocal2_Title";
                case ErrorCode.WRN_RefReturnStructThis: return "WRN_RefReturnStructThis_Title";
                case ErrorCode.WRN_RefAssignNarrower: return "WRN_RefAssignNarrower_Title";
                case ErrorCode.WRN_MismatchedRefEscapeInTernary: return "WRN_MismatchedRefEscapeInTernary_Title";
                case ErrorCode.WRN_RefReturnParameter: return "WRN_RefReturnParameter_Title";
                case ErrorCode.WRN_RefReturnScopedParameter: return "WRN_RefReturnScopedParameter_Title";
                case ErrorCode.WRN_RefReturnParameter2: return "WRN_RefReturnParameter2_Title";
                case ErrorCode.WRN_RefReturnScopedParameter2: return "WRN_RefReturnScopedParameter2_Title";
                case ErrorCode.WRN_RefReturnLocal: return "WRN_RefReturnLocal_Title";
                case ErrorCode.WRN_RefReturnLocal2: return "WRN_RefReturnLocal2_Title";
                case ErrorCode.WRN_RefAssignReturnOnly: return "WRN_RefAssignReturnOnly_Title";
                case ErrorCode.WRN_RefReturnOnlyParameter: return "WRN_RefReturnOnlyParameter_Title";
                case ErrorCode.WRN_RefReturnOnlyParameter2: return "WRN_RefReturnOnlyParameter2_Title";
                case ErrorCode.WRN_RefAssignValEscapeWider: return "WRN_RefAssignValEscapeWider_Title";
                case ErrorCode.WRN_OptionalParamValueMismatch: return "WRN_OptionalParamValueMismatch_Title";
                case ErrorCode.WRN_ParamsArrayInLambdaOnly: return "WRN_ParamsArrayInLambdaOnly_Title";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterPassedToBase: return "WRN_CapturedPrimaryConstructorParameterPassedToBase_Title";
                case ErrorCode.WRN_UnreadPrimaryConstructorParameter: return "WRN_UnreadPrimaryConstructorParameter_Title";
                case ErrorCode.WRN_AddressOfInAsync: return "WRN_AddressOfInAsync_Title";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterInFieldInitializer: return "WRN_CapturedPrimaryConstructorParameterInFieldInitializer_Title";
                case ErrorCode.WRN_ByValArraySizeConstRequired: return "WRN_ByValArraySizeConstRequired_Title";
                case ErrorCode.WRN_InterceptorSignatureMismatch: return "WRN_InterceptorSignatureMismatch_Title";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnInterceptor: return "WRN_NullabilityMismatchInReturnTypeOnInterceptor_Title";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnInterceptor: return "WRN_NullabilityMismatchInParameterTypeOnInterceptor_Title";
                case ErrorCode.WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase: return "WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase_Title";
                case ErrorCode.WRN_InlineArrayIndexerNotUsed: return "WRN_InlineArrayIndexerNotUsed_Title";
                case ErrorCode.WRN_InlineArraySliceNotUsed: return "WRN_InlineArraySliceNotUsed_Title";
                case ErrorCode.WRN_InlineArrayConversionOperatorNotUsed: return "WRN_InlineArrayConversionOperatorNotUsed_Title";
                case ErrorCode.WRN_InlineArrayNotSupportedByLanguage: return "WRN_InlineArrayNotSupportedByLanguage_Title";
                case ErrorCode.WRN_BadArgRef: return "WRN_BadArgRef_Title";
                case ErrorCode.WRN_ArgExpectedRefOrIn: return "WRN_ArgExpectedRefOrIn_Title";
                case ErrorCode.WRN_RefReadonlyNotVariable: return "WRN_RefReadonlyNotVariable_Title";
                case ErrorCode.WRN_ArgExpectedIn: return "WRN_ArgExpectedIn_Title";
                case ErrorCode.WRN_OverridingDifferentRefness: return "WRN_OverridingDifferentRefness_Title";
                case ErrorCode.WRN_HidingDifferentRefness: return "WRN_HidingDifferentRefness_Title";
                case ErrorCode.WRN_TargetDifferentRefness: return "WRN_TargetDifferentRefness_Title";
                case ErrorCode.WRN_RefReadonlyParameterDefaultValue: return "WRN_RefReadonlyParameterDefaultValue_Title";
                case ErrorCode.WRN_UseDefViolationRefField: return "WRN_UseDefViolationRefField_Title";
                case ErrorCode.WRN_Experimental: return "WRN_Experimental_Title";
                case ErrorCode.WRN_CollectionExpressionRefStructMayAllocate: return "WRN_CollectionExpressionRefStructMayAllocate_Title";
                case ErrorCode.WRN_CollectionExpressionRefStructSpreadMayAllocate: return "WRN_CollectionExpressionRefStructSpreadMayAllocate_Title";
                case ErrorCode.WRN_ConvertingLock: return "WRN_ConvertingLock_Title";
                case ErrorCode.WRN_PartialPropertySignatureDifference: return "WRN_PartialPropertySignatureDifference_Title";
                case ErrorCode.FTL_MetadataCantOpenFile: return "FTL_MetadataCantOpenFile_Title";
                case ErrorCode.FTL_DebugEmitFailure: return "FTL_DebugEmitFailure_Title";
                case ErrorCode.FTL_BadCodepage: return "FTL_BadCodepage_Title";
                case ErrorCode.FTL_InvalidTarget: return "FTL_InvalidTarget_Title";
                case ErrorCode.FTL_InvalidInputFileName: return "FTL_InvalidInputFileName_Title";
                case ErrorCode.FTL_OutputFileExists: return "FTL_OutputFileExists_Title";
                case ErrorCode.FTL_BadChecksumAlgorithm: return "FTL_BadChecksumAlgorithm_Title";
                case ErrorCode.INF_UnableToLoadSomeTypesInAnalyzer: return "INF_UnableToLoadSomeTypesInAnalyzer_Title";
                case ErrorCode.INF_TooManyBoundLambdas: return "INF_TooManyBoundLambdas_Title";
                case ErrorCode.INF_IdentifierConflictWithContextualKeyword: return "INF_IdentifierConflictWithContextualKeyword_Title";
                case ErrorCode.HDN_UnusedUsingDirective: return "HDN_UnusedUsingDirective_Title";
                case ErrorCode.HDN_UnusedExternAlias: return "HDN_UnusedExternAlias_Title";
                case ErrorCode.HDN_DuplicateWithGlobalUsing: return "HDN_DuplicateWithGlobalUsing_Title";
                case ErrorCode.Void: return "Void_Title";
                case ErrorCode.Unknown: return "Unknown_Title";
                case ErrorCode.ERR_NoMetadataFile: return "ERR_NoMetadataFile_Title";
                case ErrorCode.ERR_NoTypeDef: return "ERR_NoTypeDef_Title";
                case ErrorCode.ERR_OutputWriteFailed: return "ERR_OutputWriteFailed_Title";
                case ErrorCode.ERR_MultipleEntryPoints: return "ERR_MultipleEntryPoints_Title";
                case ErrorCode.ERR_BadBinaryOps: return "ERR_BadBinaryOps_Title";
                case ErrorCode.ERR_IntDivByZero: return "ERR_IntDivByZero_Title";
                case ErrorCode.ERR_BadIndexLHS: return "ERR_BadIndexLHS_Title";
                case ErrorCode.ERR_BadIndexCount: return "ERR_BadIndexCount_Title";
                case ErrorCode.ERR_BadUnaryOp: return "ERR_BadUnaryOp_Title";
                case ErrorCode.ERR_ThisInStaticMeth: return "ERR_ThisInStaticMeth_Title";
                case ErrorCode.ERR_ThisInBadContext: return "ERR_ThisInBadContext_Title";
                case ErrorCode.ERR_NoImplicitConv: return "ERR_NoImplicitConv_Title";
                case ErrorCode.ERR_NoExplicitConv: return "ERR_NoExplicitConv_Title";
                case ErrorCode.ERR_ConstOutOfRange: return "ERR_ConstOutOfRange_Title";
                case ErrorCode.ERR_AmbigBinaryOps: return "ERR_AmbigBinaryOps_Title";
                case ErrorCode.ERR_AmbigUnaryOp: return "ERR_AmbigUnaryOp_Title";
                case ErrorCode.ERR_InAttrOnOutParam: return "ERR_InAttrOnOutParam_Title";
                case ErrorCode.ERR_ValueCantBeNull: return "ERR_ValueCantBeNull_Title";
                case ErrorCode.ERR_NoExplicitBuiltinConv: return "ERR_NoExplicitBuiltinConv_Title";
                case ErrorCode.ERR_BadVisReturnType: return "ERR_BadVisReturnType_Title";
                case ErrorCode.ERR_BadVisParamType: return "ERR_BadVisParamType_Title";
                case ErrorCode.ERR_BadVisFieldType: return "ERR_BadVisFieldType_Title";
                case ErrorCode.ERR_BadVisPropertyType: return "ERR_BadVisPropertyType_Title";
                case ErrorCode.ERR_BadVisIndexerReturn: return "ERR_BadVisIndexerReturn_Title";
                case ErrorCode.ERR_BadVisIndexerParam: return "ERR_BadVisIndexerParam_Title";
                case ErrorCode.ERR_BadVisOpReturn: return "ERR_BadVisOpReturn_Title";
                case ErrorCode.ERR_BadVisOpParam: return "ERR_BadVisOpParam_Title";
                case ErrorCode.ERR_BadVisDelegateReturn: return "ERR_BadVisDelegateReturn_Title";
                case ErrorCode.ERR_BadVisDelegateParam: return "ERR_BadVisDelegateParam_Title";
                case ErrorCode.ERR_BadVisBaseClass: return "ERR_BadVisBaseClass_Title";
                case ErrorCode.ERR_BadVisBaseInterface: return "ERR_BadVisBaseInterface_Title";
                case ErrorCode.ERR_EventNeedsBothAccessors: return "ERR_EventNeedsBothAccessors_Title";
                case ErrorCode.ERR_EventNotDelegate: return "ERR_EventNotDelegate_Title";
                case ErrorCode.ERR_InterfaceEventInitializer: return "ERR_InterfaceEventInitializer_Title";
                case ErrorCode.ERR_BadEventUsage: return "ERR_BadEventUsage_Title";
                case ErrorCode.ERR_ExplicitEventFieldImpl: return "ERR_ExplicitEventFieldImpl_Title";
                case ErrorCode.ERR_CantOverrideNonEvent: return "ERR_CantOverrideNonEvent_Title";
                case ErrorCode.ERR_AddRemoveMustHaveBody: return "ERR_AddRemoveMustHaveBody_Title";
                case ErrorCode.ERR_AbstractEventInitializer: return "ERR_AbstractEventInitializer_Title";
                case ErrorCode.ERR_PossibleBadNegCast: return "ERR_PossibleBadNegCast_Title";
                case ErrorCode.ERR_ReservedEnumerator: return "ERR_ReservedEnumerator_Title";
                case ErrorCode.ERR_AsMustHaveReferenceType: return "ERR_AsMustHaveReferenceType_Title";
                case ErrorCode.ERR_BadEventUsageNoField: return "ERR_BadEventUsageNoField_Title";
                case ErrorCode.ERR_ConstraintOnlyAllowedOnGenericDecl: return "ERR_ConstraintOnlyAllowedOnGenericDecl_Title";
                case ErrorCode.ERR_TypeParamMustBeIdentifier: return "ERR_TypeParamMustBeIdentifier_Title";
                case ErrorCode.ERR_MemberReserved: return "ERR_MemberReserved_Title";
                case ErrorCode.ERR_DuplicateParamName: return "ERR_DuplicateParamName_Title";
                case ErrorCode.ERR_DuplicateNameInNS: return "ERR_DuplicateNameInNS_Title";
                case ErrorCode.ERR_DuplicateNameInClass: return "ERR_DuplicateNameInClass_Title";
                case ErrorCode.ERR_NameNotInContext: return "ERR_NameNotInContext_Title";
                case ErrorCode.ERR_AmbigContext: return "ERR_AmbigContext_Title";
                case ErrorCode.ERR_BadMemberFlag: return "ERR_BadMemberFlag_Title";
                case ErrorCode.ERR_BadMemberProtection: return "ERR_BadMemberProtection_Title";
                case ErrorCode.ERR_CircConstValue: return "ERR_CircConstValue_Title";
                case ErrorCode.ERR_MemberAlreadyExists: return "ERR_MemberAlreadyExists_Title";
                case ErrorCode.ERR_StaticNotVirtual: return "ERR_StaticNotVirtual_Title";
                case ErrorCode.ERR_OverrideNotNew: return "ERR_OverrideNotNew_Title";
                case ErrorCode.ERR_OverrideNotExpected: return "ERR_OverrideNotExpected_Title";
                case ErrorCode.ERR_NamespaceUnexpected: return "ERR_NamespaceUnexpected_Title";
                case ErrorCode.ERR_NoSuchMember: return "ERR_NoSuchMember_Title";
                case ErrorCode.ERR_BadSKknown: return "ERR_BadSKknown_Title";
                case ErrorCode.ERR_BadSKunknown: return "ERR_BadSKunknown_Title";
                case ErrorCode.ERR_ObjectRequired: return "ERR_ObjectRequired_Title";
                case ErrorCode.ERR_AmbigCall: return "ERR_AmbigCall_Title";
                case ErrorCode.ERR_BadAccess: return "ERR_BadAccess_Title";
                case ErrorCode.ERR_MethDelegateMismatch: return "ERR_MethDelegateMismatch_Title";
                case ErrorCode.ERR_RetObjectRequired: return "ERR_RetObjectRequired_Title";
                case ErrorCode.ERR_RetNoObjectRequired: return "ERR_RetNoObjectRequired_Title";
                case ErrorCode.ERR_LocalDuplicate: return "ERR_LocalDuplicate_Title";
                case ErrorCode.ERR_AssgLvalueExpected: return "ERR_AssgLvalueExpected_Title";
                case ErrorCode.ERR_StaticConstParam: return "ERR_StaticConstParam_Title";
                case ErrorCode.ERR_NotConstantExpression: return "ERR_NotConstantExpression_Title";
                case ErrorCode.ERR_NotNullConstRefField: return "ERR_NotNullConstRefField_Title";
                case ErrorCode.ERR_LocalIllegallyOverrides: return "ERR_LocalIllegallyOverrides_Title";
                case ErrorCode.ERR_BadUsingNamespace: return "ERR_BadUsingNamespace_Title";
                case ErrorCode.ERR_NoBreakOrCont: return "ERR_NoBreakOrCont_Title";
                case ErrorCode.ERR_DuplicateLabel: return "ERR_DuplicateLabel_Title";
                case ErrorCode.ERR_NoConstructors: return "ERR_NoConstructors_Title";
                case ErrorCode.ERR_NoNewAbstract: return "ERR_NoNewAbstract_Title";
                case ErrorCode.ERR_ConstValueRequired: return "ERR_ConstValueRequired_Title";
                case ErrorCode.ERR_CircularBase: return "ERR_CircularBase_Title";
                case ErrorCode.ERR_BadDelegateConstructor: return "ERR_BadDelegateConstructor_Title";
                case ErrorCode.ERR_MethodNameExpected: return "ERR_MethodNameExpected_Title";
                case ErrorCode.ERR_ConstantExpected: return "ERR_ConstantExpected_Title";
                case ErrorCode.ERR_V6SwitchGoverningTypeValueExpected: return "ERR_V6SwitchGoverningTypeValueExpected_Title";
                case ErrorCode.ERR_DuplicateCaseLabel: return "ERR_DuplicateCaseLabel_Title";
                case ErrorCode.ERR_InvalidGotoCase: return "ERR_InvalidGotoCase_Title";
                case ErrorCode.ERR_PropertyLacksGet: return "ERR_PropertyLacksGet_Title";
                case ErrorCode.ERR_BadExceptionType: return "ERR_BadExceptionType_Title";
                case ErrorCode.ERR_BadEmptyThrow: return "ERR_BadEmptyThrow_Title";
                case ErrorCode.ERR_BadFinallyLeave: return "ERR_BadFinallyLeave_Title";
                case ErrorCode.ERR_LabelShadow: return "ERR_LabelShadow_Title";
                case ErrorCode.ERR_LabelNotFound: return "ERR_LabelNotFound_Title";
                case ErrorCode.ERR_UnreachableCatch: return "ERR_UnreachableCatch_Title";
                case ErrorCode.ERR_ReturnExpected: return "ERR_ReturnExpected_Title";
                case ErrorCode.ERR_SwitchFallThrough: return "ERR_SwitchFallThrough_Title";
                case ErrorCode.ERR_UseDefViolation: return "ERR_UseDefViolation_Title";
                case ErrorCode.ERR_UseDefViolationField: return "ERR_UseDefViolationField_Title";
                case ErrorCode.ERR_UnassignedThisUnsupportedVersion: return "ERR_UnassignedThisUnsupportedVersion_Title";
                case ErrorCode.ERR_AmbigQM: return "ERR_AmbigQM_Title";
                case ErrorCode.ERR_InvalidQM: return "ERR_InvalidQM_Title";
                case ErrorCode.ERR_NoBaseClass: return "ERR_NoBaseClass_Title";
                case ErrorCode.ERR_BaseIllegal: return "ERR_BaseIllegal_Title";
                case ErrorCode.ERR_ObjectProhibited: return "ERR_ObjectProhibited_Title";
                case ErrorCode.ERR_ParamUnassigned: return "ERR_ParamUnassigned_Title";
                case ErrorCode.ERR_InvalidArray: return "ERR_InvalidArray_Title";
                case ErrorCode.ERR_ExternHasBody: return "ERR_ExternHasBody_Title";
                case ErrorCode.ERR_AbstractAndExtern: return "ERR_AbstractAndExtern_Title";
                case ErrorCode.ERR_BadAttributeParamType: return "ERR_BadAttributeParamType_Title";
                case ErrorCode.ERR_BadAttributeArgument: return "ERR_BadAttributeArgument_Title";
                case ErrorCode.ERR_LockNeedsReference: return "ERR_LockNeedsReference_Title";
                case ErrorCode.ERR_NullNotValid: return "ERR_NullNotValid_Title";
                case ErrorCode.ERR_UseDefViolationThisUnsupportedVersion: return "ERR_UseDefViolationThisUnsupportedVersion_Title";
                case ErrorCode.ERR_ArgsInvalid: return "ERR_ArgsInvalid_Title";
                case ErrorCode.ERR_AssgReadonly: return "ERR_AssgReadonly_Title";
                case ErrorCode.ERR_RefReadonly: return "ERR_RefReadonly_Title";
                case ErrorCode.ERR_PtrExpected: return "ERR_PtrExpected_Title";
                case ErrorCode.ERR_PtrIndexSingle: return "ERR_PtrIndexSingle_Title";
                case ErrorCode.ERR_AssgReadonlyStatic: return "ERR_AssgReadonlyStatic_Title";
                case ErrorCode.ERR_RefReadonlyStatic: return "ERR_RefReadonlyStatic_Title";
                case ErrorCode.ERR_AssgReadonlyProp: return "ERR_AssgReadonlyProp_Title";
                case ErrorCode.ERR_IllegalStatement: return "ERR_IllegalStatement_Title";
                case ErrorCode.ERR_BadGetEnumerator: return "ERR_BadGetEnumerator_Title";
                case ErrorCode.ERR_TooManyLocals: return "ERR_TooManyLocals_Title";
                case ErrorCode.ERR_AbstractBaseCall: return "ERR_AbstractBaseCall_Title";
                case ErrorCode.ERR_RefProperty: return "ERR_RefProperty_Title";
                case ErrorCode.ERR_ManagedAddr: return "ERR_ManagedAddr_Title";
                case ErrorCode.ERR_BadFixedInitType: return "ERR_BadFixedInitType_Title";
                case ErrorCode.ERR_FixedMustInit: return "ERR_FixedMustInit_Title";
                case ErrorCode.ERR_InvalidAddrOp: return "ERR_InvalidAddrOp_Title";
                case ErrorCode.ERR_FixedNeeded: return "ERR_FixedNeeded_Title";
                case ErrorCode.ERR_FixedNotNeeded: return "ERR_FixedNotNeeded_Title";
                case ErrorCode.ERR_UnsafeNeeded: return "ERR_UnsafeNeeded_Title";
                case ErrorCode.ERR_OpTFRetType: return "ERR_OpTFRetType_Title";
                case ErrorCode.ERR_OperatorNeedsMatch: return "ERR_OperatorNeedsMatch_Title";
                case ErrorCode.ERR_BadBoolOp: return "ERR_BadBoolOp_Title";
                case ErrorCode.ERR_MustHaveOpTF: return "ERR_MustHaveOpTF_Title";
                case ErrorCode.ERR_CheckedOverflow: return "ERR_CheckedOverflow_Title";
                case ErrorCode.ERR_ConstOutOfRangeChecked: return "ERR_ConstOutOfRangeChecked_Title";
                case ErrorCode.ERR_BadVarargs: return "ERR_BadVarargs_Title";
                case ErrorCode.ERR_ParamsMustBeCollection: return "ERR_ParamsMustBeCollection_Title";
                case ErrorCode.ERR_IllegalArglist: return "ERR_IllegalArglist_Title";
                case ErrorCode.ERR_IllegalUnsafe: return "ERR_IllegalUnsafe_Title";
                case ErrorCode.ERR_AmbigMember: return "ERR_AmbigMember_Title";
                case ErrorCode.ERR_BadForeachDecl: return "ERR_BadForeachDecl_Title";
                case ErrorCode.ERR_ParamsLast: return "ERR_ParamsLast_Title";
                case ErrorCode.ERR_SizeofUnsafe: return "ERR_SizeofUnsafe_Title";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNS: return "ERR_DottedTypeNameNotFoundInNS_Title";
                case ErrorCode.ERR_FieldInitRefNonstatic: return "ERR_FieldInitRefNonstatic_Title";
                case ErrorCode.ERR_SealedNonOverride: return "ERR_SealedNonOverride_Title";
                case ErrorCode.ERR_CantOverrideSealed: return "ERR_CantOverrideSealed_Title";
                case ErrorCode.ERR_VoidError: return "ERR_VoidError_Title";
                case ErrorCode.ERR_ConditionalOnOverride: return "ERR_ConditionalOnOverride_Title";
                case ErrorCode.ERR_PointerInAsOrIs: return "ERR_PointerInAsOrIs_Title";
                case ErrorCode.ERR_CallingFinalizeDeprecated: return "ERR_CallingFinalizeDeprecated_Title";
                case ErrorCode.ERR_SingleTypeNameNotFound: return "ERR_SingleTypeNameNotFound_Title";
                case ErrorCode.ERR_NegativeStackAllocSize: return "ERR_NegativeStackAllocSize_Title";
                case ErrorCode.ERR_NegativeArraySize: return "ERR_NegativeArraySize_Title";
                case ErrorCode.ERR_OverrideFinalizeDeprecated: return "ERR_OverrideFinalizeDeprecated_Title";
                case ErrorCode.ERR_CallingBaseFinalizeDeprecated: return "ERR_CallingBaseFinalizeDeprecated_Title";
                case ErrorCode.ERR_BadCastInFixed: return "ERR_BadCastInFixed_Title";
                case ErrorCode.ERR_StackallocInCatchFinally: return "ERR_StackallocInCatchFinally_Title";
                case ErrorCode.ERR_VarargsLast: return "ERR_VarargsLast_Title";
                case ErrorCode.ERR_MissingPartial: return "ERR_MissingPartial_Title";
                case ErrorCode.ERR_PartialTypeKindConflict: return "ERR_PartialTypeKindConflict_Title";
                case ErrorCode.ERR_PartialModifierConflict: return "ERR_PartialModifierConflict_Title";
                case ErrorCode.ERR_PartialMultipleBases: return "ERR_PartialMultipleBases_Title";
                case ErrorCode.ERR_PartialWrongTypeParams: return "ERR_PartialWrongTypeParams_Title";
                case ErrorCode.ERR_PartialWrongConstraints: return "ERR_PartialWrongConstraints_Title";
                case ErrorCode.ERR_NoImplicitConvCast: return "ERR_NoImplicitConvCast_Title";
                case ErrorCode.ERR_PartialMisplaced: return "ERR_PartialMisplaced_Title";
                case ErrorCode.ERR_ImportedCircularBase: return "ERR_ImportedCircularBase_Title";
                case ErrorCode.ERR_UseDefViolationOut: return "ERR_UseDefViolationOut_Title";
                case ErrorCode.ERR_ArraySizeInDeclaration: return "ERR_ArraySizeInDeclaration_Title";
                case ErrorCode.ERR_InaccessibleGetter: return "ERR_InaccessibleGetter_Title";
                case ErrorCode.ERR_InaccessibleSetter: return "ERR_InaccessibleSetter_Title";
                case ErrorCode.ERR_InvalidPropertyAccessMod: return "ERR_InvalidPropertyAccessMod_Title";
                case ErrorCode.ERR_DuplicatePropertyAccessMods: return "ERR_DuplicatePropertyAccessMods_Title";
                case ErrorCode.ERR_AccessModMissingAccessor: return "ERR_AccessModMissingAccessor_Title";
                case ErrorCode.ERR_UnimplementedInterfaceAccessor: return "ERR_UnimplementedInterfaceAccessor_Title";
                case ErrorCode.ERR_FriendRefNotEqualToThis: return "ERR_FriendRefNotEqualToThis_Title";
                case ErrorCode.ERR_BadConstType: return "ERR_BadConstType_Title";
                case ErrorCode.ERR_NoNewTyvar: return "ERR_NoNewTyvar_Title";
                case ErrorCode.ERR_BadArity: return "ERR_BadArity_Title";
                case ErrorCode.ERR_BadTypeArgument: return "ERR_BadTypeArgument_Title";
                case ErrorCode.ERR_TypeArgsNotAllowed: return "ERR_TypeArgsNotAllowed_Title";
                case ErrorCode.ERR_HasNoTypeVars: return "ERR_HasNoTypeVars_Title";
                case ErrorCode.ERR_NewConstraintNotSatisfied: return "ERR_NewConstraintNotSatisfied_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedRefType: return "ERR_GenericConstraintNotSatisfiedRefType_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableEnum: return "ERR_GenericConstraintNotSatisfiedNullableEnum_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableInterface: return "ERR_GenericConstraintNotSatisfiedNullableInterface_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedTyVar: return "ERR_GenericConstraintNotSatisfiedTyVar_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedValType: return "ERR_GenericConstraintNotSatisfiedValType_Title";
                case ErrorCode.ERR_DuplicateGeneratedName: return "ERR_DuplicateGeneratedName_Title";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFound: return "ERR_GlobalSingleTypeNameNotFound_Title";
                case ErrorCode.ERR_NewBoundMustBeLast: return "ERR_NewBoundMustBeLast_Title";
                case ErrorCode.ERR_TypeVarCantBeNull: return "ERR_TypeVarCantBeNull_Title";
                case ErrorCode.ERR_DuplicateBound: return "ERR_DuplicateBound_Title";
                case ErrorCode.ERR_ClassBoundNotFirst: return "ERR_ClassBoundNotFirst_Title";
                case ErrorCode.ERR_BadRetType: return "ERR_BadRetType_Title";
                case ErrorCode.ERR_DuplicateConstraintClause: return "ERR_DuplicateConstraintClause_Title";
                case ErrorCode.ERR_CantInferMethTypeArgs: return "ERR_CantInferMethTypeArgs_Title";
                case ErrorCode.ERR_LocalSameNameAsTypeParam: return "ERR_LocalSameNameAsTypeParam_Title";
                case ErrorCode.ERR_AsWithTypeVar: return "ERR_AsWithTypeVar_Title";
                case ErrorCode.ERR_BadIndexerNameAttr: return "ERR_BadIndexerNameAttr_Title";
                case ErrorCode.ERR_AttrArgWithTypeVars: return "ERR_AttrArgWithTypeVars_Title";
                case ErrorCode.ERR_NewTyvarWithArgs: return "ERR_NewTyvarWithArgs_Title";
                case ErrorCode.ERR_AbstractSealedStatic: return "ERR_AbstractSealedStatic_Title";
                case ErrorCode.ERR_ComImportWithImpl: return "ERR_ComImportWithImpl_Title";
                case ErrorCode.ERR_ComImportWithBase: return "ERR_ComImportWithBase_Title";
                case ErrorCode.ERR_ImplBadConstraints: return "ERR_ImplBadConstraints_Title";
                case ErrorCode.ERR_DottedTypeNameNotFoundInAgg: return "ERR_DottedTypeNameNotFoundInAgg_Title";
                case ErrorCode.ERR_MethGrpToNonDel: return "ERR_MethGrpToNonDel_Title";
                case ErrorCode.ERR_BadExternAlias: return "ERR_BadExternAlias_Title";
                case ErrorCode.ERR_ColColWithTypeAlias: return "ERR_ColColWithTypeAlias_Title";
                case ErrorCode.ERR_AliasNotFound: return "ERR_AliasNotFound_Title";
                case ErrorCode.ERR_SameFullNameAggAgg: return "ERR_SameFullNameAggAgg_Title";
                case ErrorCode.ERR_SameFullNameNsAgg: return "ERR_SameFullNameNsAgg_Title";
                case ErrorCode.ERR_SameFullNameThisAggThisNs: return "ERR_SameFullNameThisAggThisNs_Title";
                case ErrorCode.ERR_ExternAfterElements: return "ERR_ExternAfterElements_Title";
                case ErrorCode.ERR_SealedStaticClass: return "ERR_SealedStaticClass_Title";
                case ErrorCode.ERR_PrivateAbstractAccessor: return "ERR_PrivateAbstractAccessor_Title";
                case ErrorCode.ERR_ValueExpected: return "ERR_ValueExpected_Title";
                case ErrorCode.ERR_UnboxNotLValue: return "ERR_UnboxNotLValue_Title";
                case ErrorCode.ERR_AnonMethGrpInForEach: return "ERR_AnonMethGrpInForEach_Title";
                case ErrorCode.ERR_BadIncDecRetType: return "ERR_BadIncDecRetType_Title";
                case ErrorCode.ERR_TypeConstraintsMustBeUniqueAndFirst: return "ERR_TypeConstraintsMustBeUniqueAndFirst_Title";
                case ErrorCode.ERR_RefValBoundWithClass: return "ERR_RefValBoundWithClass_Title";
                case ErrorCode.ERR_NewBoundWithVal: return "ERR_NewBoundWithVal_Title";
                case ErrorCode.ERR_RefConstraintNotSatisfied: return "ERR_RefConstraintNotSatisfied_Title";
                case ErrorCode.ERR_ValConstraintNotSatisfied: return "ERR_ValConstraintNotSatisfied_Title";
                case ErrorCode.ERR_CircularConstraint: return "ERR_CircularConstraint_Title";
                case ErrorCode.ERR_BaseConstraintConflict: return "ERR_BaseConstraintConflict_Title";
                case ErrorCode.ERR_ConWithValCon: return "ERR_ConWithValCon_Title";
                case ErrorCode.ERR_AmbigUDConv: return "ERR_AmbigUDConv_Title";
                case ErrorCode.ERR_OverrideWithConstraints: return "ERR_OverrideWithConstraints_Title";
                case ErrorCode.ERR_AmbigOverride: return "ERR_AmbigOverride_Title";
                case ErrorCode.ERR_DecConstError: return "ERR_DecConstError_Title";
                case ErrorCode.ERR_ExplicitImplParams: return "ERR_ExplicitImplParams_Title";
                case ErrorCode.ERR_MethodImplementingAccessor: return "ERR_MethodImplementingAccessor_Title";
                case ErrorCode.ERR_AbstractHasBody: return "ERR_AbstractHasBody_Title";
                case ErrorCode.ERR_ConcreteMissingBody: return "ERR_ConcreteMissingBody_Title";
                case ErrorCode.ERR_AbstractAndSealed: return "ERR_AbstractAndSealed_Title";
                case ErrorCode.ERR_AbstractNotVirtual: return "ERR_AbstractNotVirtual_Title";
                case ErrorCode.ERR_StaticConstant: return "ERR_StaticConstant_Title";
                case ErrorCode.ERR_CantOverrideNonFunction: return "ERR_CantOverrideNonFunction_Title";
                case ErrorCode.ERR_CantOverrideNonVirtual: return "ERR_CantOverrideNonVirtual_Title";
                case ErrorCode.ERR_CantChangeAccessOnOverride: return "ERR_CantChangeAccessOnOverride_Title";
                case ErrorCode.ERR_CantChangeReturnTypeOnOverride: return "ERR_CantChangeReturnTypeOnOverride_Title";
                case ErrorCode.ERR_CantDeriveFromSealedType: return "ERR_CantDeriveFromSealedType_Title";
                case ErrorCode.ERR_AbstractInConcreteClass: return "ERR_AbstractInConcreteClass_Title";
                case ErrorCode.ERR_StaticConstructorWithExplicitConstructorCall: return "ERR_StaticConstructorWithExplicitConstructorCall_Title";
                case ErrorCode.ERR_StaticConstructorWithAccessModifiers: return "ERR_StaticConstructorWithAccessModifiers_Title";
                case ErrorCode.ERR_RecursiveConstructorCall: return "ERR_RecursiveConstructorCall_Title";
                case ErrorCode.ERR_ObjectCallingBaseConstructor: return "ERR_ObjectCallingBaseConstructor_Title";
                case ErrorCode.ERR_PredefinedTypeNotFound: return "ERR_PredefinedTypeNotFound_Title";
                case ErrorCode.ERR_StructWithBaseConstructorCall: return "ERR_StructWithBaseConstructorCall_Title";
                case ErrorCode.ERR_StructLayoutCycle: return "ERR_StructLayoutCycle_Title";
                case ErrorCode.ERR_InterfacesCantContainFields: return "ERR_InterfacesCantContainFields_Title";
                case ErrorCode.ERR_InterfacesCantContainConstructors: return "ERR_InterfacesCantContainConstructors_Title";
                case ErrorCode.ERR_NonInterfaceInInterfaceList: return "ERR_NonInterfaceInInterfaceList_Title";
                case ErrorCode.ERR_DuplicateInterfaceInBaseList: return "ERR_DuplicateInterfaceInBaseList_Title";
                case ErrorCode.ERR_CycleInInterfaceInheritance: return "ERR_CycleInInterfaceInheritance_Title";
                case ErrorCode.ERR_HidingAbstractMethod: return "ERR_HidingAbstractMethod_Title";
                case ErrorCode.ERR_UnimplementedAbstractMethod: return "ERR_UnimplementedAbstractMethod_Title";
                case ErrorCode.ERR_UnimplementedInterfaceMember: return "ERR_UnimplementedInterfaceMember_Title";
                case ErrorCode.ERR_ObjectCantHaveBases: return "ERR_ObjectCantHaveBases_Title";
                case ErrorCode.ERR_ExplicitInterfaceImplementationNotInterface: return "ERR_ExplicitInterfaceImplementationNotInterface_Title";
                case ErrorCode.ERR_InterfaceMemberNotFound: return "ERR_InterfaceMemberNotFound_Title";
                case ErrorCode.ERR_ClassDoesntImplementInterface: return "ERR_ClassDoesntImplementInterface_Title";
                case ErrorCode.ERR_ExplicitInterfaceImplementationInNonClassOrStruct: return "ERR_ExplicitInterfaceImplementationInNonClassOrStruct_Title";
                case ErrorCode.ERR_MemberNameSameAsType: return "ERR_MemberNameSameAsType_Title";
                case ErrorCode.ERR_EnumeratorOverflow: return "ERR_EnumeratorOverflow_Title";
                case ErrorCode.ERR_CantOverrideNonProperty: return "ERR_CantOverrideNonProperty_Title";
                case ErrorCode.ERR_NoGetToOverride: return "ERR_NoGetToOverride_Title";
                case ErrorCode.ERR_NoSetToOverride: return "ERR_NoSetToOverride_Title";
                case ErrorCode.ERR_PropertyCantHaveVoidType: return "ERR_PropertyCantHaveVoidType_Title";
                case ErrorCode.ERR_PropertyWithNoAccessors: return "ERR_PropertyWithNoAccessors_Title";
                case ErrorCode.ERR_NewVirtualInSealed: return "ERR_NewVirtualInSealed_Title";
                case ErrorCode.ERR_ExplicitPropertyAddingAccessor: return "ERR_ExplicitPropertyAddingAccessor_Title";
                case ErrorCode.ERR_ExplicitPropertyMissingAccessor: return "ERR_ExplicitPropertyMissingAccessor_Title";
                case ErrorCode.ERR_ConversionWithInterface: return "ERR_ConversionWithInterface_Title";
                case ErrorCode.ERR_ConversionWithBase: return "ERR_ConversionWithBase_Title";
                case ErrorCode.ERR_ConversionWithDerived: return "ERR_ConversionWithDerived_Title";
                case ErrorCode.ERR_IdentityConversion: return "ERR_IdentityConversion_Title";
                case ErrorCode.ERR_ConversionNotInvolvingContainedType: return "ERR_ConversionNotInvolvingContainedType_Title";
                case ErrorCode.ERR_DuplicateConversionInClass: return "ERR_DuplicateConversionInClass_Title";
                case ErrorCode.ERR_OperatorsMustBeStatic: return "ERR_OperatorsMustBeStatic_Title";
                case ErrorCode.ERR_BadIncDecSignature: return "ERR_BadIncDecSignature_Title";
                case ErrorCode.ERR_BadUnaryOperatorSignature: return "ERR_BadUnaryOperatorSignature_Title";
                case ErrorCode.ERR_BadBinaryOperatorSignature: return "ERR_BadBinaryOperatorSignature_Title";
                case ErrorCode.ERR_BadShiftOperatorSignature: return "ERR_BadShiftOperatorSignature_Title";
                case ErrorCode.ERR_InterfacesCantContainConversionOrEqualityOperators: return "ERR_InterfacesCantContainConversionOrEqualityOperators_Title";
                case ErrorCode.ERR_CantOverrideBogusMethod: return "ERR_CantOverrideBogusMethod_Title";
                case ErrorCode.ERR_BindToBogus: return "ERR_BindToBogus_Title";
                case ErrorCode.ERR_CantCallSpecialMethod: return "ERR_CantCallSpecialMethod_Title";
                case ErrorCode.ERR_BadTypeReference: return "ERR_BadTypeReference_Title";
                case ErrorCode.ERR_BadDestructorName: return "ERR_BadDestructorName_Title";
                case ErrorCode.ERR_OnlyClassesCanContainDestructors: return "ERR_OnlyClassesCanContainDestructors_Title";
                case ErrorCode.ERR_ConflictAliasAndMember: return "ERR_ConflictAliasAndMember_Title";
                case ErrorCode.ERR_ConditionalOnSpecialMethod: return "ERR_ConditionalOnSpecialMethod_Title";
                case ErrorCode.ERR_ConditionalMustReturnVoid: return "ERR_ConditionalMustReturnVoid_Title";
                case ErrorCode.ERR_DuplicateAttribute: return "ERR_DuplicateAttribute_Title";
                case ErrorCode.ERR_ConditionalOnInterfaceMethod: return "ERR_ConditionalOnInterfaceMethod_Title";
                case ErrorCode.ERR_OperatorCantReturnVoid: return "ERR_OperatorCantReturnVoid_Title";
                case ErrorCode.ERR_InvalidAttributeArgument: return "ERR_InvalidAttributeArgument_Title";
                case ErrorCode.ERR_AttributeOnBadSymbolType: return "ERR_AttributeOnBadSymbolType_Title";
                case ErrorCode.ERR_FloatOverflow: return "ERR_FloatOverflow_Title";
                case ErrorCode.ERR_InvalidReal: return "ERR_InvalidReal_Title";
                case ErrorCode.ERR_ComImportWithoutUuidAttribute: return "ERR_ComImportWithoutUuidAttribute_Title";
                case ErrorCode.ERR_InvalidNamedArgument: return "ERR_InvalidNamedArgument_Title";
                case ErrorCode.ERR_DllImportOnInvalidMethod: return "ERR_DllImportOnInvalidMethod_Title";
                case ErrorCode.ERR_FieldCantBeRefAny: return "ERR_FieldCantBeRefAny_Title";
                case ErrorCode.ERR_ArrayElementCantBeRefAny: return "ERR_ArrayElementCantBeRefAny_Title";
                case ErrorCode.ERR_NotAnAttributeClass: return "ERR_NotAnAttributeClass_Title";
                case ErrorCode.ERR_BadNamedAttributeArgument: return "ERR_BadNamedAttributeArgument_Title";
                case ErrorCode.ERR_DeprecatedSymbolStr: return "ERR_DeprecatedSymbolStr_Title";
                case ErrorCode.ERR_IndexerCantHaveVoidType: return "ERR_IndexerCantHaveVoidType_Title";
                case ErrorCode.ERR_VirtualPrivate: return "ERR_VirtualPrivate_Title";
                case ErrorCode.ERR_ArrayInitToNonArrayType: return "ERR_ArrayInitToNonArrayType_Title";
                case ErrorCode.ERR_ArrayInitInBadPlace: return "ERR_ArrayInitInBadPlace_Title";
                case ErrorCode.ERR_MissingStructOffset: return "ERR_MissingStructOffset_Title";
                case ErrorCode.ERR_InterfaceImplementedByConditional: return "ERR_InterfaceImplementedByConditional_Title";
                case ErrorCode.ERR_InterfaceImplementedImplicitlyByVariadic: return "ERR_InterfaceImplementedImplicitlyByVariadic_Title";
                case ErrorCode.ERR_IllegalRefParam: return "ERR_IllegalRefParam_Title";
                case ErrorCode.ERR_BadArgumentToAttribute: return "ERR_BadArgumentToAttribute_Title";
                case ErrorCode.ERR_StructOffsetOnBadStruct: return "ERR_StructOffsetOnBadStruct_Title";
                case ErrorCode.ERR_StructOffsetOnBadField: return "ERR_StructOffsetOnBadField_Title";
                case ErrorCode.ERR_AttributeUsageOnNonAttributeClass: return "ERR_AttributeUsageOnNonAttributeClass_Title";
                case ErrorCode.ERR_DuplicateNamedAttributeArgument: return "ERR_DuplicateNamedAttributeArgument_Title";
                case ErrorCode.ERR_DeriveFromEnumOrValueType: return "ERR_DeriveFromEnumOrValueType_Title";
                case ErrorCode.ERR_DefaultMemberOnIndexedType: return "ERR_DefaultMemberOnIndexedType_Title";
                case ErrorCode.ERR_BogusType: return "ERR_BogusType_Title";
                case ErrorCode.ERR_CStyleArray: return "ERR_CStyleArray_Title";
                case ErrorCode.ERR_AbstractAttributeClass: return "ERR_AbstractAttributeClass_Title";
                case ErrorCode.ERR_BadNamedAttributeArgumentType: return "ERR_BadNamedAttributeArgumentType_Title";
                case ErrorCode.ERR_MissingPredefinedMember: return "ERR_MissingPredefinedMember_Title";
                case ErrorCode.ERR_OutAttrOnRefParam: return "ERR_OutAttrOnRefParam_Title";
                case ErrorCode.ERR_OverloadRefKind: return "ERR_OverloadRefKind_Title";
                case ErrorCode.ERR_LiteralDoubleCast: return "ERR_LiteralDoubleCast_Title";
                case ErrorCode.ERR_ProtectedInStruct: return "ERR_ProtectedInStruct_Title";
                case ErrorCode.ERR_InconsistentIndexerNames: return "ERR_InconsistentIndexerNames_Title";
                case ErrorCode.ERR_ComImportWithUserCtor: return "ERR_ComImportWithUserCtor_Title";
                case ErrorCode.ERR_FieldCantHaveVoidType: return "ERR_FieldCantHaveVoidType_Title";
                case ErrorCode.ERR_SystemVoid: return "ERR_SystemVoid_Title";
                case ErrorCode.ERR_ExplicitParamArrayOrCollection: return "ERR_ExplicitParamArrayOrCollection_Title";
                case ErrorCode.ERR_VolatileStruct: return "ERR_VolatileStruct_Title";
                case ErrorCode.ERR_VolatileAndReadonly: return "ERR_VolatileAndReadonly_Title";
                case ErrorCode.ERR_AbstractField: return "ERR_AbstractField_Title";
                case ErrorCode.ERR_BogusExplicitImpl: return "ERR_BogusExplicitImpl_Title";
                case ErrorCode.ERR_ExplicitMethodImplAccessor: return "ERR_ExplicitMethodImplAccessor_Title";
                case ErrorCode.ERR_ConditionalWithOutParam: return "ERR_ConditionalWithOutParam_Title";
                case ErrorCode.ERR_AccessorImplementingMethod: return "ERR_AccessorImplementingMethod_Title";
                case ErrorCode.ERR_AliasQualAsExpression: return "ERR_AliasQualAsExpression_Title";
                case ErrorCode.ERR_DerivingFromATyVar: return "ERR_DerivingFromATyVar_Title";
                case ErrorCode.ERR_DuplicateTypeParameter: return "ERR_DuplicateTypeParameter_Title";
                case ErrorCode.ERR_TypeVariableSameAsParent: return "ERR_TypeVariableSameAsParent_Title";
                case ErrorCode.ERR_UnifyingInterfaceInstantiations: return "ERR_UnifyingInterfaceInstantiations_Title";
                case ErrorCode.ERR_TyVarNotFoundInConstraint: return "ERR_TyVarNotFoundInConstraint_Title";
                case ErrorCode.ERR_BadBoundType: return "ERR_BadBoundType_Title";
                case ErrorCode.ERR_SpecialTypeAsBound: return "ERR_SpecialTypeAsBound_Title";
                case ErrorCode.ERR_BadVisBound: return "ERR_BadVisBound_Title";
                case ErrorCode.ERR_LookupInTypeVariable: return "ERR_LookupInTypeVariable_Title";
                case ErrorCode.ERR_BadConstraintType: return "ERR_BadConstraintType_Title";
                case ErrorCode.ERR_InstanceMemberInStaticClass: return "ERR_InstanceMemberInStaticClass_Title";
                case ErrorCode.ERR_StaticBaseClass: return "ERR_StaticBaseClass_Title";
                case ErrorCode.ERR_ConstructorInStaticClass: return "ERR_ConstructorInStaticClass_Title";
                case ErrorCode.ERR_DestructorInStaticClass: return "ERR_DestructorInStaticClass_Title";
                case ErrorCode.ERR_InstantiatingStaticClass: return "ERR_InstantiatingStaticClass_Title";
                case ErrorCode.ERR_StaticDerivedFromNonObject: return "ERR_StaticDerivedFromNonObject_Title";
                case ErrorCode.ERR_StaticClassInterfaceImpl: return "ERR_StaticClassInterfaceImpl_Title";
                case ErrorCode.ERR_OperatorInStaticClass: return "ERR_OperatorInStaticClass_Title";
                case ErrorCode.ERR_ConvertToStaticClass: return "ERR_ConvertToStaticClass_Title";
                case ErrorCode.ERR_ConstraintIsStaticClass: return "ERR_ConstraintIsStaticClass_Title";
                case ErrorCode.ERR_GenericArgIsStaticClass: return "ERR_GenericArgIsStaticClass_Title";
                case ErrorCode.ERR_ArrayOfStaticClass: return "ERR_ArrayOfStaticClass_Title";
                case ErrorCode.ERR_IndexerInStaticClass: return "ERR_IndexerInStaticClass_Title";
                case ErrorCode.ERR_ParameterIsStaticClass: return "ERR_ParameterIsStaticClass_Title";
                case ErrorCode.ERR_ReturnTypeIsStaticClass: return "ERR_ReturnTypeIsStaticClass_Title";
                case ErrorCode.ERR_VarDeclIsStaticClass: return "ERR_VarDeclIsStaticClass_Title";
                case ErrorCode.ERR_BadEmptyThrowInFinally: return "ERR_BadEmptyThrowInFinally_Title";
                case ErrorCode.ERR_InvalidSpecifier: return "ERR_InvalidSpecifier_Title";
                case ErrorCode.ERR_ForwardedTypeInThisAssembly: return "ERR_ForwardedTypeInThisAssembly_Title";
                case ErrorCode.ERR_ForwardedTypeIsNested: return "ERR_ForwardedTypeIsNested_Title";
                case ErrorCode.ERR_CycleInTypeForwarder: return "ERR_CycleInTypeForwarder_Title";
                case ErrorCode.ERR_AssemblyNameOnNonModule: return "ERR_AssemblyNameOnNonModule_Title";
                case ErrorCode.ERR_InvalidFwdType: return "ERR_InvalidFwdType_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberStatic: return "ERR_CloseUnimplementedInterfaceMemberStatic_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotPublic: return "ERR_CloseUnimplementedInterfaceMemberNotPublic_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongReturnType: return "ERR_CloseUnimplementedInterfaceMemberWrongReturnType_Title";
                case ErrorCode.ERR_DuplicateTypeForwarder: return "ERR_DuplicateTypeForwarder_Title";
                case ErrorCode.ERR_ExpectedSelectOrGroup: return "ERR_ExpectedSelectOrGroup_Title";
                case ErrorCode.ERR_ExpectedContextualKeywordOn: return "ERR_ExpectedContextualKeywordOn_Title";
                case ErrorCode.ERR_ExpectedContextualKeywordEquals: return "ERR_ExpectedContextualKeywordEquals_Title";
                case ErrorCode.ERR_ExpectedContextualKeywordBy: return "ERR_ExpectedContextualKeywordBy_Title";
                case ErrorCode.ERR_InvalidAnonymousTypeMemberDeclarator: return "ERR_InvalidAnonymousTypeMemberDeclarator_Title";
                case ErrorCode.ERR_InvalidInitializerElementInitializer: return "ERR_InvalidInitializerElementInitializer_Title";
                case ErrorCode.ERR_InconsistentLambdaParameterUsage: return "ERR_InconsistentLambdaParameterUsage_Title";
                case ErrorCode.ERR_PartialMemberCannotBeAbstract: return "ERR_PartialMemberCannotBeAbstract_Title";
                case ErrorCode.ERR_PartialMemberOnlyInPartialClass: return "ERR_PartialMemberOnlyInPartialClass_Title";
                case ErrorCode.ERR_PartialMemberNotExplicit: return "ERR_PartialMemberNotExplicit_Title";
                case ErrorCode.ERR_PartialMethodExtensionDifference: return "ERR_PartialMethodExtensionDifference_Title";
                case ErrorCode.ERR_PartialMethodOnlyOneLatent: return "ERR_PartialMethodOnlyOneLatent_Title";
                case ErrorCode.ERR_PartialMethodOnlyOneActual: return "ERR_PartialMethodOnlyOneActual_Title";
                case ErrorCode.ERR_PartialMemberParamsDifference: return "ERR_PartialMemberParamsDifference_Title";
                case ErrorCode.ERR_PartialMethodMustHaveLatent: return "ERR_PartialMethodMustHaveLatent_Title";
                case ErrorCode.ERR_PartialMethodInconsistentConstraints: return "ERR_PartialMethodInconsistentConstraints_Title";
                case ErrorCode.ERR_PartialMethodToDelegate: return "ERR_PartialMethodToDelegate_Title";
                case ErrorCode.ERR_PartialMemberStaticDifference: return "ERR_PartialMemberStaticDifference_Title";
                case ErrorCode.ERR_PartialMemberUnsafeDifference: return "ERR_PartialMemberUnsafeDifference_Title";
                case ErrorCode.ERR_PartialMethodInExpressionTree: return "ERR_PartialMethodInExpressionTree_Title";
                case ErrorCode.ERR_ExplicitImplCollisionOnRefOut: return "ERR_ExplicitImplCollisionOnRefOut_Title";
                case ErrorCode.ERR_IndirectRecursiveConstructorCall: return "ERR_IndirectRecursiveConstructorCall_Title";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedBadValue: return "ERR_ImplicitlyTypedVariableAssignedBadValue_Title";
                case ErrorCode.ERR_ImplicitlyTypedVariableWithNoInitializer: return "ERR_ImplicitlyTypedVariableWithNoInitializer_Title";
                case ErrorCode.ERR_ImplicitlyTypedVariableMultipleDeclarator: return "ERR_ImplicitlyTypedVariableMultipleDeclarator_Title";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedArrayInitializer: return "ERR_ImplicitlyTypedVariableAssignedArrayInitializer_Title";
                case ErrorCode.ERR_ImplicitlyTypedLocalCannotBeFixed: return "ERR_ImplicitlyTypedLocalCannotBeFixed_Title";
                case ErrorCode.ERR_ImplicitlyTypedVariableCannotBeConst: return "ERR_ImplicitlyTypedVariableCannotBeConst_Title";
                case ErrorCode.ERR_TypeVarNotFound: return "ERR_TypeVarNotFound_Title";
                case ErrorCode.ERR_ImplicitlyTypedArrayNoBestType: return "ERR_ImplicitlyTypedArrayNoBestType_Title";
                case ErrorCode.ERR_AnonymousTypePropertyAssignedBadValue: return "ERR_AnonymousTypePropertyAssignedBadValue_Title";
                case ErrorCode.ERR_ExpressionTreeContainsBaseAccess: return "ERR_ExpressionTreeContainsBaseAccess_Title";
                case ErrorCode.ERR_ExpressionTreeContainsAssignment: return "ERR_ExpressionTreeContainsAssignment_Title";
                case ErrorCode.ERR_AnonymousTypeDuplicatePropertyName: return "ERR_AnonymousTypeDuplicatePropertyName_Title";
                case ErrorCode.ERR_StatementLambdaToExpressionTree: return "ERR_StatementLambdaToExpressionTree_Title";
                case ErrorCode.ERR_ExpressionTreeMustHaveDelegate: return "ERR_ExpressionTreeMustHaveDelegate_Title";
                case ErrorCode.ERR_AnonymousTypeNotAvailable: return "ERR_AnonymousTypeNotAvailable_Title";
                case ErrorCode.ERR_LambdaInIsAs: return "ERR_LambdaInIsAs_Title";
                case ErrorCode.ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer: return "ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer_Title";
                case ErrorCode.ERR_MissingArgument: return "ERR_MissingArgument_Title";
                case ErrorCode.ERR_VariableUsedBeforeDeclaration: return "ERR_VariableUsedBeforeDeclaration_Title";
                case ErrorCode.ERR_UnassignedThisAutoPropertyUnsupportedVersion: return "ERR_UnassignedThisAutoPropertyUnsupportedVersion_Title";
                case ErrorCode.ERR_VariableUsedBeforeDeclarationAndHidesField: return "ERR_VariableUsedBeforeDeclarationAndHidesField_Title";
                case ErrorCode.ERR_ExpressionTreeContainsBadCoalesce: return "ERR_ExpressionTreeContainsBadCoalesce_Title";
                case ErrorCode.ERR_ArrayInitializerExpected: return "ERR_ArrayInitializerExpected_Title";
                case ErrorCode.ERR_ArrayInitializerIncorrectLength: return "ERR_ArrayInitializerIncorrectLength_Title";
                case ErrorCode.ERR_ExpressionTreeContainsNamedArgument: return "ERR_ExpressionTreeContainsNamedArgument_Title";
                case ErrorCode.ERR_ExpressionTreeContainsOptionalArgument: return "ERR_ExpressionTreeContainsOptionalArgument_Title";
                case ErrorCode.ERR_ExpressionTreeContainsIndexedProperty: return "ERR_ExpressionTreeContainsIndexedProperty_Title";
                case ErrorCode.ERR_IndexedPropertyRequiresParams: return "ERR_IndexedPropertyRequiresParams_Title";
                case ErrorCode.ERR_IndexedPropertyMustHaveAllOptionalParams: return "ERR_IndexedPropertyMustHaveAllOptionalParams_Title";
                case ErrorCode.ERR_IdentifierExpected: return "ERR_IdentifierExpected_Title";
                case ErrorCode.ERR_SemicolonExpected: return "ERR_SemicolonExpected_Title";
                case ErrorCode.ERR_SyntaxError: return "ERR_SyntaxError_Title";
                case ErrorCode.ERR_DuplicateModifier: return "ERR_DuplicateModifier_Title";
                case ErrorCode.ERR_DuplicateAccessor: return "ERR_DuplicateAccessor_Title";
                case ErrorCode.ERR_IntegralTypeExpected: return "ERR_IntegralTypeExpected_Title";
                case ErrorCode.ERR_IllegalEscape: return "ERR_IllegalEscape_Title";
                case ErrorCode.ERR_NewlineInConst: return "ERR_NewlineInConst_Title";
                case ErrorCode.ERR_EmptyCharConst: return "ERR_EmptyCharConst_Title";
                case ErrorCode.ERR_TooManyCharsInConst: return "ERR_TooManyCharsInConst_Title";
                case ErrorCode.ERR_InvalidNumber: return "ERR_InvalidNumber_Title";
                case ErrorCode.ERR_GetOrSetExpected: return "ERR_GetOrSetExpected_Title";
                case ErrorCode.ERR_ClassTypeExpected: return "ERR_ClassTypeExpected_Title";
                case ErrorCode.ERR_NamedArgumentExpected: return "ERR_NamedArgumentExpected_Title";
                case ErrorCode.ERR_TooManyCatches: return "ERR_TooManyCatches_Title";
                case ErrorCode.ERR_ThisOrBaseExpected: return "ERR_ThisOrBaseExpected_Title";
                case ErrorCode.ERR_OvlUnaryOperatorExpected: return "ERR_OvlUnaryOperatorExpected_Title";
                case ErrorCode.ERR_OvlBinaryOperatorExpected: return "ERR_OvlBinaryOperatorExpected_Title";
                case ErrorCode.ERR_IntOverflow: return "ERR_IntOverflow_Title";
                case ErrorCode.ERR_EOFExpected: return "ERR_EOFExpected_Title";
                case ErrorCode.ERR_BadEmbeddedStmt: return "ERR_BadEmbeddedStmt_Title";
                case ErrorCode.ERR_PPDirectiveExpected: return "ERR_PPDirectiveExpected_Title";
                case ErrorCode.ERR_EndOfPPLineExpected: return "ERR_EndOfPPLineExpected_Title";
                case ErrorCode.ERR_CloseParenExpected: return "ERR_CloseParenExpected_Title";
                case ErrorCode.ERR_EndifDirectiveExpected: return "ERR_EndifDirectiveExpected_Title";
                case ErrorCode.ERR_UnexpectedDirective: return "ERR_UnexpectedDirective_Title";
                case ErrorCode.ERR_ErrorDirective: return "ERR_ErrorDirective_Title";
                case ErrorCode.ERR_TypeExpected: return "ERR_TypeExpected_Title";
                case ErrorCode.ERR_PPDefFollowsToken: return "ERR_PPDefFollowsToken_Title";
                case ErrorCode.ERR_OpenEndedComment: return "ERR_OpenEndedComment_Title";
                case ErrorCode.ERR_OvlOperatorExpected: return "ERR_OvlOperatorExpected_Title";
                case ErrorCode.ERR_EndRegionDirectiveExpected: return "ERR_EndRegionDirectiveExpected_Title";
                case ErrorCode.ERR_UnterminatedStringLit: return "ERR_UnterminatedStringLit_Title";
                case ErrorCode.ERR_BadDirectivePlacement: return "ERR_BadDirectivePlacement_Title";
                case ErrorCode.ERR_IdentifierExpectedKW: return "ERR_IdentifierExpectedKW_Title";
                case ErrorCode.ERR_SemiOrLBraceExpected: return "ERR_SemiOrLBraceExpected_Title";
                case ErrorCode.ERR_MultiTypeInDeclaration: return "ERR_MultiTypeInDeclaration_Title";
                case ErrorCode.ERR_AddOrRemoveExpected: return "ERR_AddOrRemoveExpected_Title";
                case ErrorCode.ERR_UnexpectedCharacter: return "ERR_UnexpectedCharacter_Title";
                case ErrorCode.ERR_ProtectedInStatic: return "ERR_ProtectedInStatic_Title";
                case ErrorCode.ERR_IncrementLvalueExpected: return "ERR_IncrementLvalueExpected_Title";
                case ErrorCode.ERR_NoSuchMemberOrExtension: return "ERR_NoSuchMemberOrExtension_Title";
                case ErrorCode.ERR_DeprecatedCollectionInitAddStr: return "ERR_DeprecatedCollectionInitAddStr_Title";
                case ErrorCode.ERR_DefaultValueNotAllowed: return "ERR_DefaultValueNotAllowed_Title";
                case ErrorCode.ERR_PartialWrongTypeParamsVariance: return "ERR_PartialWrongTypeParamsVariance_Title";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFoundFwd: return "ERR_GlobalSingleTypeNameNotFoundFwd_Title";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNSFwd: return "ERR_DottedTypeNameNotFoundInNSFwd_Title";
                case ErrorCode.ERR_SingleTypeNameNotFoundFwd: return "ERR_SingleTypeNameNotFoundFwd_Title";
                case ErrorCode.ERR_UnexpectedToken: return "ERR_UnexpectedToken_Title";
                case ErrorCode.ERR_BadThisParam: return "ERR_BadThisParam_Title";
                case ErrorCode.ERR_BadTypeforThis: return "ERR_BadTypeforThis_Title";
                case ErrorCode.ERR_BadParamModThis: return "ERR_BadParamModThis_Title";
                case ErrorCode.ERR_BadExtensionMeth: return "ERR_BadExtensionMeth_Title";
                case ErrorCode.ERR_BadExtensionAgg: return "ERR_BadExtensionAgg_Title";
                case ErrorCode.ERR_DupParamMod: return "ERR_DupParamMod_Title";
                case ErrorCode.ERR_ExtensionMethodsDecl: return "ERR_ExtensionMethodsDecl_Title";
                case ErrorCode.ERR_ExtensionAttrNotFound: return "ERR_ExtensionAttrNotFound_Title";
                case ErrorCode.ERR_ExplicitExtension: return "ERR_ExplicitExtension_Title";
                case ErrorCode.ERR_ValueTypeExtDelegate: return "ERR_ValueTypeExtDelegate_Title";
                case ErrorCode.ERR_BadArgCount: return "ERR_BadArgCount_Title";
                case ErrorCode.ERR_BadArgType: return "ERR_BadArgType_Title";
                case ErrorCode.ERR_NoSourceFile: return "ERR_NoSourceFile_Title";
                case ErrorCode.ERR_CantRefResource: return "ERR_CantRefResource_Title";
                case ErrorCode.ERR_ResourceNotUnique: return "ERR_ResourceNotUnique_Title";
                case ErrorCode.ERR_ImportNonAssembly: return "ERR_ImportNonAssembly_Title";
                case ErrorCode.ERR_RefLvalueExpected: return "ERR_RefLvalueExpected_Title";
                case ErrorCode.ERR_BaseInStaticMeth: return "ERR_BaseInStaticMeth_Title";
                case ErrorCode.ERR_BaseInBadContext: return "ERR_BaseInBadContext_Title";
                case ErrorCode.ERR_RbraceExpected: return "ERR_RbraceExpected_Title";
                case ErrorCode.ERR_LbraceExpected: return "ERR_LbraceExpected_Title";
                case ErrorCode.ERR_InExpected: return "ERR_InExpected_Title";
                case ErrorCode.ERR_InvalidPreprocExpr: return "ERR_InvalidPreprocExpr_Title";
                case ErrorCode.ERR_InvalidMemberDecl: return "ERR_InvalidMemberDecl_Title";
                case ErrorCode.ERR_MemberNeedsType: return "ERR_MemberNeedsType_Title";
                case ErrorCode.ERR_BadBaseType: return "ERR_BadBaseType_Title";
                case ErrorCode.ERR_ExpectedEndTry: return "ERR_ExpectedEndTry_Title";
                case ErrorCode.ERR_InvalidExprTerm: return "ERR_InvalidExprTerm_Title";
                case ErrorCode.ERR_BadNewExpr: return "ERR_BadNewExpr_Title";
                case ErrorCode.ERR_NoNamespacePrivate: return "ERR_NoNamespacePrivate_Title";
                case ErrorCode.ERR_BadVarDecl: return "ERR_BadVarDecl_Title";
                case ErrorCode.ERR_UsingAfterElements: return "ERR_UsingAfterElements_Title";
                case ErrorCode.ERR_BadBinOpArgs: return "ERR_BadBinOpArgs_Title";
                case ErrorCode.ERR_BadUnOpArgs: return "ERR_BadUnOpArgs_Title";
                case ErrorCode.ERR_NoVoidParameter: return "ERR_NoVoidParameter_Title";
                case ErrorCode.ERR_DuplicateAlias: return "ERR_DuplicateAlias_Title";
                case ErrorCode.ERR_BadProtectedAccess: return "ERR_BadProtectedAccess_Title";
                case ErrorCode.ERR_AddModuleAssembly: return "ERR_AddModuleAssembly_Title";
                case ErrorCode.ERR_BindToBogusProp2: return "ERR_BindToBogusProp2_Title";
                case ErrorCode.ERR_BindToBogusProp1: return "ERR_BindToBogusProp1_Title";
                case ErrorCode.ERR_NoVoidHere: return "ERR_NoVoidHere_Title";
                case ErrorCode.ERR_IndexerNeedsParam: return "ERR_IndexerNeedsParam_Title";
                case ErrorCode.ERR_BadArraySyntax: return "ERR_BadArraySyntax_Title";
                case ErrorCode.ERR_BadOperatorSyntax: return "ERR_BadOperatorSyntax_Title";
                case ErrorCode.ERR_MainClassNotFound: return "ERR_MainClassNotFound_Title";
                case ErrorCode.ERR_MainClassNotClass: return "ERR_MainClassNotClass_Title";
                case ErrorCode.ERR_NoMainInClass: return "ERR_NoMainInClass_Title";
                case ErrorCode.ERR_OutputNeedsName: return "ERR_OutputNeedsName_Title";
                case ErrorCode.ERR_CantHaveWin32ResAndManifest: return "ERR_CantHaveWin32ResAndManifest_Title";
                case ErrorCode.ERR_CantHaveWin32ResAndIcon: return "ERR_CantHaveWin32ResAndIcon_Title";
                case ErrorCode.ERR_CantReadResource: return "ERR_CantReadResource_Title";
                case ErrorCode.ERR_DocFileGen: return "ERR_DocFileGen_Title";
                case ErrorCode.ERR_BadStackAllocExpr: return "ERR_BadStackAllocExpr_Title";
                case ErrorCode.ERR_InvalidLineNumber: return "ERR_InvalidLineNumber_Title";
                case ErrorCode.ERR_MissingPPFile: return "ERR_MissingPPFile_Title";
                case ErrorCode.ERR_ForEachMissingMember: return "ERR_ForEachMissingMember_Title";
                case ErrorCode.ERR_BadWin32Res: return "ERR_BadWin32Res_Title";
                case ErrorCode.ERR_BadModifierLocation: return "ERR_BadModifierLocation_Title";
                case ErrorCode.ERR_MissingArraySize: return "ERR_MissingArraySize_Title";
                case ErrorCode.ERR_BadDelArgCount: return "ERR_BadDelArgCount_Title";
                case ErrorCode.ERR_UnexpectedSemicolon: return "ERR_UnexpectedSemicolon_Title";
                case ErrorCode.ERR_MethodReturnCantBeRefAny: return "ERR_MethodReturnCantBeRefAny_Title";
                case ErrorCode.ERR_CompileCancelled: return "ERR_CompileCancelled_Title";
                case ErrorCode.ERR_MethodArgCantBeRefAny: return "ERR_MethodArgCantBeRefAny_Title";
                case ErrorCode.ERR_AssgReadonlyLocal: return "ERR_AssgReadonlyLocal_Title";
                case ErrorCode.ERR_RefReadonlyLocal: return "ERR_RefReadonlyLocal_Title";
                case ErrorCode.ERR_CantUseRequiredAttribute: return "ERR_CantUseRequiredAttribute_Title";
                case ErrorCode.ERR_NoModifiersOnAccessor: return "ERR_NoModifiersOnAccessor_Title";
                case ErrorCode.ERR_ParamsCantBeWithModifier: return "ERR_ParamsCantBeWithModifier_Title";
                case ErrorCode.ERR_ReturnNotLValue: return "ERR_ReturnNotLValue_Title";
                case ErrorCode.ERR_MissingCoClass: return "ERR_MissingCoClass_Title";
                case ErrorCode.ERR_AmbiguousAttribute: return "ERR_AmbiguousAttribute_Title";
                case ErrorCode.ERR_BadArgExtraRef: return "ERR_BadArgExtraRef_Title";
                case ErrorCode.ERR_BadCompatMode: return "ERR_BadCompatMode_Title";
                case ErrorCode.ERR_DelegateOnConditional: return "ERR_DelegateOnConditional_Title";
                case ErrorCode.ERR_CantMakeTempFile: return "ERR_CantMakeTempFile_Title";
                case ErrorCode.ERR_BadArgRef: return "ERR_BadArgRef_Title";
                case ErrorCode.ERR_YieldInAnonMeth: return "ERR_YieldInAnonMeth_Title";
                case ErrorCode.ERR_ReturnInIterator: return "ERR_ReturnInIterator_Title";
                case ErrorCode.ERR_BadIteratorArgType: return "ERR_BadIteratorArgType_Title";
                case ErrorCode.ERR_BadIteratorReturn: return "ERR_BadIteratorReturn_Title";
                case ErrorCode.ERR_BadYieldInFinally: return "ERR_BadYieldInFinally_Title";
                case ErrorCode.ERR_BadYieldInTryOfCatch: return "ERR_BadYieldInTryOfCatch_Title";
                case ErrorCode.ERR_EmptyYield: return "ERR_EmptyYield_Title";
                case ErrorCode.ERR_AnonDelegateCantUse: return "ERR_AnonDelegateCantUse_Title";
                case ErrorCode.ERR_BadYieldInCatch: return "ERR_BadYieldInCatch_Title";
                case ErrorCode.ERR_BadDelegateLeave: return "ERR_BadDelegateLeave_Title";
                case ErrorCode.ERR_VarargsIterator: return "ERR_VarargsIterator_Title";
                case ErrorCode.ERR_UnsafeIteratorArgType: return "ERR_UnsafeIteratorArgType_Title";
                case ErrorCode.ERR_BadCoClassSig: return "ERR_BadCoClassSig_Title";
                case ErrorCode.ERR_MultipleIEnumOfT: return "ERR_MultipleIEnumOfT_Title";
                case ErrorCode.ERR_FixedDimsRequired: return "ERR_FixedDimsRequired_Title";
                case ErrorCode.ERR_FixedNotInStruct: return "ERR_FixedNotInStruct_Title";
                case ErrorCode.ERR_AnonymousReturnExpected: return "ERR_AnonymousReturnExpected_Title";
                case ErrorCode.ERR_ExpectedVerbatimLiteral: return "ERR_ExpectedVerbatimLiteral_Title";
                case ErrorCode.ERR_AssgReadonly2: return "ERR_AssgReadonly2_Title";
                case ErrorCode.ERR_RefReadonly2: return "ERR_RefReadonly2_Title";
                case ErrorCode.ERR_AssgReadonlyStatic2: return "ERR_AssgReadonlyStatic2_Title";
                case ErrorCode.ERR_RefReadonlyStatic2: return "ERR_RefReadonlyStatic2_Title";
                case ErrorCode.ERR_AssgReadonlyLocal2Cause: return "ERR_AssgReadonlyLocal2Cause_Title";
                case ErrorCode.ERR_RefReadonlyLocal2Cause: return "ERR_RefReadonlyLocal2Cause_Title";
                case ErrorCode.ERR_AssgReadonlyLocalCause: return "ERR_AssgReadonlyLocalCause_Title";
                case ErrorCode.ERR_RefReadonlyLocalCause: return "ERR_RefReadonlyLocalCause_Title";
                case ErrorCode.ERR_AnonMethToNonDel: return "ERR_AnonMethToNonDel_Title";
                case ErrorCode.ERR_CantConvAnonMethParams: return "ERR_CantConvAnonMethParams_Title";
                case ErrorCode.ERR_CantConvAnonMethReturns: return "ERR_CantConvAnonMethReturns_Title";
                case ErrorCode.ERR_IllegalFixedType: return "ERR_IllegalFixedType_Title";
                case ErrorCode.ERR_FixedOverflow: return "ERR_FixedOverflow_Title";
                case ErrorCode.ERR_InvalidFixedArraySize: return "ERR_InvalidFixedArraySize_Title";
                case ErrorCode.ERR_FixedBufferNotFixed: return "ERR_FixedBufferNotFixed_Title";
                case ErrorCode.ERR_AttributeNotOnAccessor: return "ERR_AttributeNotOnAccessor_Title";
                case ErrorCode.ERR_IllegalVarArgs: return "ERR_IllegalVarArgs_Title";
                case ErrorCode.ERR_IllegalParams: return "ERR_IllegalParams_Title";
                case ErrorCode.ERR_BadModifiersOnNamespace: return "ERR_BadModifiersOnNamespace_Title";
                case ErrorCode.ERR_BadPlatformType: return "ERR_BadPlatformType_Title";
                case ErrorCode.ERR_ThisStructNotInAnonMeth: return "ERR_ThisStructNotInAnonMeth_Title";
                case ErrorCode.ERR_NoConvToIDisp: return "ERR_NoConvToIDisp_Title";
                case ErrorCode.ERR_BadParamRef: return "ERR_BadParamRef_Title";
                case ErrorCode.ERR_BadParamExtraRef: return "ERR_BadParamExtraRef_Title";
                case ErrorCode.ERR_BadParamType: return "ERR_BadParamType_Title";
                case ErrorCode.ERR_BadExternIdentifier: return "ERR_BadExternIdentifier_Title";
                case ErrorCode.ERR_AliasMissingFile: return "ERR_AliasMissingFile_Title";
                case ErrorCode.ERR_GlobalExternAlias: return "ERR_GlobalExternAlias_Title";
                case ErrorCode.ERR_LocalCantBeFixedAndHoisted: return "ERR_LocalCantBeFixedAndHoisted_Title";
                case ErrorCode.ERR_CantConvAnonMethNoParams: return "ERR_CantConvAnonMethNoParams_Title";
                case ErrorCode.ERR_ConditionalOnNonAttributeClass: return "ERR_ConditionalOnNonAttributeClass_Title";
                case ErrorCode.ERR_DuplicateImport: return "ERR_DuplicateImport_Title";
                case ErrorCode.ERR_DuplicateImportSimple: return "ERR_DuplicateImportSimple_Title";
                case ErrorCode.ERR_AssemblyMatchBadVersion: return "ERR_AssemblyMatchBadVersion_Title";
                case ErrorCode.ERR_FixedNeedsLvalue: return "ERR_FixedNeedsLvalue_Title";
                case ErrorCode.ERR_CantChangeTypeOnOverride: return "ERR_CantChangeTypeOnOverride_Title";
                case ErrorCode.ERR_DoNotUseFixedBufferAttr: return "ERR_DoNotUseFixedBufferAttr_Title";
                case ErrorCode.ERR_CantOpenWin32Res: return "ERR_CantOpenWin32Res_Title";
                case ErrorCode.ERR_NoMultipleInheritance: return "ERR_NoMultipleInheritance_Title";
                case ErrorCode.ERR_BaseClassMustBeFirst: return "ERR_BaseClassMustBeFirst_Title";
                case ErrorCode.ERR_FriendAssemblyBadArgs: return "ERR_FriendAssemblyBadArgs_Title";
                case ErrorCode.ERR_FriendAssemblySNReq: return "ERR_FriendAssemblySNReq_Title";
                case ErrorCode.ERR_DelegateOnNullable: return "ERR_DelegateOnNullable_Title";
                case ErrorCode.ERR_BadCtorArgCount: return "ERR_BadCtorArgCount_Title";
                case ErrorCode.ERR_GlobalAttributesNotFirst: return "ERR_GlobalAttributesNotFirst_Title";
                case ErrorCode.ERR_ExpressionExpected: return "ERR_ExpressionExpected_Title";
                case ErrorCode.ERR_DefaultValueMustBeConstant: return "ERR_DefaultValueMustBeConstant_Title";
                case ErrorCode.ERR_DefaultValueBeforeRequiredValue: return "ERR_DefaultValueBeforeRequiredValue_Title";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgument: return "ERR_NamedArgumentSpecificationBeforeFixedArgument_Title";
                case ErrorCode.ERR_BadNamedArgument: return "ERR_BadNamedArgument_Title";
                case ErrorCode.ERR_DuplicateNamedArgument: return "ERR_DuplicateNamedArgument_Title";
                case ErrorCode.ERR_RefOutDefaultValue: return "ERR_RefOutDefaultValue_Title";
                case ErrorCode.ERR_NamedArgumentForArray: return "ERR_NamedArgumentForArray_Title";
                case ErrorCode.ERR_DefaultValueForExtensionParameter: return "ERR_DefaultValueForExtensionParameter_Title";
                case ErrorCode.ERR_NamedArgumentUsedInPositional: return "ERR_NamedArgumentUsedInPositional_Title";
                case ErrorCode.ERR_DefaultValueUsedWithAttributes: return "ERR_DefaultValueUsedWithAttributes_Title";
                case ErrorCode.ERR_BadNamedArgumentForDelegateInvoke: return "ERR_BadNamedArgumentForDelegateInvoke_Title";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttribute: return "ERR_NoPIAAssemblyMissingAttribute_Title";
                case ErrorCode.ERR_NoCanonicalView: return "ERR_NoCanonicalView_Title";
                case ErrorCode.ERR_NoConversionForDefaultParam: return "ERR_NoConversionForDefaultParam_Title";
                case ErrorCode.ERR_DefaultValueForParamsParameter: return "ERR_DefaultValueForParamsParameter_Title";
                case ErrorCode.ERR_NewCoClassOnLink: return "ERR_NewCoClassOnLink_Title";
                case ErrorCode.ERR_NoPIANestedType: return "ERR_NoPIANestedType_Title";
                case ErrorCode.ERR_InteropTypeMissingAttribute: return "ERR_InteropTypeMissingAttribute_Title";
                case ErrorCode.ERR_InteropStructContainsMethods: return "ERR_InteropStructContainsMethods_Title";
                case ErrorCode.ERR_InteropTypesWithSameNameAndGuid: return "ERR_InteropTypesWithSameNameAndGuid_Title";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttributes: return "ERR_NoPIAAssemblyMissingAttributes_Title";
                case ErrorCode.ERR_AssemblySpecifiedForLinkAndRef: return "ERR_AssemblySpecifiedForLinkAndRef_Title";
                case ErrorCode.ERR_LocalTypeNameClash: return "ERR_LocalTypeNameClash_Title";
                case ErrorCode.ERR_NotNullRefDefaultParameter: return "ERR_NotNullRefDefaultParameter_Title";
                case ErrorCode.ERR_FixedLocalInLambda: return "ERR_FixedLocalInLambda_Title";
                case ErrorCode.ERR_MissingMethodOnSourceInterface: return "ERR_MissingMethodOnSourceInterface_Title";
                case ErrorCode.ERR_MissingSourceInterface: return "ERR_MissingSourceInterface_Title";
                case ErrorCode.ERR_GenericsUsedInNoPIAType: return "ERR_GenericsUsedInNoPIAType_Title";
                case ErrorCode.ERR_GenericsUsedAcrossAssemblies: return "ERR_GenericsUsedAcrossAssemblies_Title";
                case ErrorCode.ERR_NoConversionForNubDefaultParam: return "ERR_NoConversionForNubDefaultParam_Title";
                case ErrorCode.ERR_InvalidSubsystemVersion: return "ERR_InvalidSubsystemVersion_Title";
                case ErrorCode.ERR_InteropMethodWithBody: return "ERR_InteropMethodWithBody_Title";
                case ErrorCode.ERR_BadWarningLevel: return "ERR_BadWarningLevel_Title";
                case ErrorCode.ERR_BadDebugType: return "ERR_BadDebugType_Title";
                case ErrorCode.ERR_BadResourceVis: return "ERR_BadResourceVis_Title";
                case ErrorCode.ERR_DefaultValueTypeMustMatch: return "ERR_DefaultValueTypeMustMatch_Title";
                case ErrorCode.ERR_DefaultValueBadValueType: return "ERR_DefaultValueBadValueType_Title";
                case ErrorCode.ERR_MemberAlreadyInitialized: return "ERR_MemberAlreadyInitialized_Title";
                case ErrorCode.ERR_MemberCannotBeInitialized: return "ERR_MemberCannotBeInitialized_Title";
                case ErrorCode.ERR_StaticMemberInObjectInitializer: return "ERR_StaticMemberInObjectInitializer_Title";
                case ErrorCode.ERR_ReadonlyValueTypeInObjectInitializer: return "ERR_ReadonlyValueTypeInObjectInitializer_Title";
                case ErrorCode.ERR_ValueTypePropertyInObjectInitializer: return "ERR_ValueTypePropertyInObjectInitializer_Title";
                case ErrorCode.ERR_UnsafeTypeInObjectCreation: return "ERR_UnsafeTypeInObjectCreation_Title";
                case ErrorCode.ERR_EmptyElementInitializer: return "ERR_EmptyElementInitializer_Title";
                case ErrorCode.ERR_InitializerAddHasWrongSignature: return "ERR_InitializerAddHasWrongSignature_Title";
                case ErrorCode.ERR_CollectionInitRequiresIEnumerable: return "ERR_CollectionInitRequiresIEnumerable_Title";
                case ErrorCode.ERR_CantOpenWin32Manifest: return "ERR_CantOpenWin32Manifest_Title";
                case ErrorCode.ERR_BadInstanceArgType: return "ERR_BadInstanceArgType_Title";
                case ErrorCode.ERR_QueryDuplicateRangeVariable: return "ERR_QueryDuplicateRangeVariable_Title";
                case ErrorCode.ERR_QueryRangeVariableOverrides: return "ERR_QueryRangeVariableOverrides_Title";
                case ErrorCode.ERR_QueryRangeVariableAssignedBadValue: return "ERR_QueryRangeVariableAssignedBadValue_Title";
                case ErrorCode.ERR_QueryNoProviderCastable: return "ERR_QueryNoProviderCastable_Title";
                case ErrorCode.ERR_QueryNoProviderStandard: return "ERR_QueryNoProviderStandard_Title";
                case ErrorCode.ERR_QueryNoProvider: return "ERR_QueryNoProvider_Title";
                case ErrorCode.ERR_QueryOuterKey: return "ERR_QueryOuterKey_Title";
                case ErrorCode.ERR_QueryInnerKey: return "ERR_QueryInnerKey_Title";
                case ErrorCode.ERR_QueryOutRefRangeVariable: return "ERR_QueryOutRefRangeVariable_Title";
                case ErrorCode.ERR_QueryMultipleProviders: return "ERR_QueryMultipleProviders_Title";
                case ErrorCode.ERR_QueryTypeInferenceFailedMulti: return "ERR_QueryTypeInferenceFailedMulti_Title";
                case ErrorCode.ERR_QueryTypeInferenceFailed: return "ERR_QueryTypeInferenceFailed_Title";
                case ErrorCode.ERR_QueryTypeInferenceFailedSelectMany: return "ERR_QueryTypeInferenceFailedSelectMany_Title";
                case ErrorCode.ERR_ExpressionTreeContainsPointerOp: return "ERR_ExpressionTreeContainsPointerOp_Title";
                case ErrorCode.ERR_ExpressionTreeContainsAnonymousMethod: return "ERR_ExpressionTreeContainsAnonymousMethod_Title";
                case ErrorCode.ERR_AnonymousMethodToExpressionTree: return "ERR_AnonymousMethodToExpressionTree_Title";
                case ErrorCode.ERR_QueryRangeVariableReadOnly: return "ERR_QueryRangeVariableReadOnly_Title";
                case ErrorCode.ERR_QueryRangeVariableSameAsTypeParam: return "ERR_QueryRangeVariableSameAsTypeParam_Title";
                case ErrorCode.ERR_TypeVarNotFoundRangeVariable: return "ERR_TypeVarNotFoundRangeVariable_Title";
                case ErrorCode.ERR_BadArgTypesForCollectionAdd: return "ERR_BadArgTypesForCollectionAdd_Title";
                case ErrorCode.ERR_ByRefParameterInExpressionTree: return "ERR_ByRefParameterInExpressionTree_Title";
                case ErrorCode.ERR_VarArgsInExpressionTree: return "ERR_VarArgsInExpressionTree_Title";
                case ErrorCode.ERR_InitializerAddHasParamModifiers: return "ERR_InitializerAddHasParamModifiers_Title";
                case ErrorCode.ERR_NonInvocableMemberCalled: return "ERR_NonInvocableMemberCalled_Title";
                case ErrorCode.ERR_ObjectOrCollectionInitializerWithDelegateCreation: return "ERR_ObjectOrCollectionInitializerWithDelegateCreation_Title";
                case ErrorCode.ERR_InvalidConstantDeclarationType: return "ERR_InvalidConstantDeclarationType_Title";
                case ErrorCode.ERR_IllegalVarianceSyntax: return "ERR_IllegalVarianceSyntax_Title";
                case ErrorCode.ERR_UnexpectedVariance: return "ERR_UnexpectedVariance_Title";
                case ErrorCode.ERR_BadDynamicTypeof: return "ERR_BadDynamicTypeof_Title";
                case ErrorCode.ERR_ExpressionTreeContainsDynamicOperation: return "ERR_ExpressionTreeContainsDynamicOperation_Title";
                case ErrorCode.ERR_BadDynamicConversion: return "ERR_BadDynamicConversion_Title";
                case ErrorCode.ERR_DeriveFromDynamic: return "ERR_DeriveFromDynamic_Title";
                case ErrorCode.ERR_DeriveFromConstructedDynamic: return "ERR_DeriveFromConstructedDynamic_Title";
                case ErrorCode.ERR_DynamicTypeAsBound: return "ERR_DynamicTypeAsBound_Title";
                case ErrorCode.ERR_ConstructedDynamicTypeAsBound: return "ERR_ConstructedDynamicTypeAsBound_Title";
                case ErrorCode.ERR_DynamicRequiredTypesMissing: return "ERR_DynamicRequiredTypesMissing_Title";
                case ErrorCode.ERR_ExplicitDynamicAttr: return "ERR_ExplicitDynamicAttr_Title";
                case ErrorCode.ERR_NoDynamicPhantomOnBase: return "ERR_NoDynamicPhantomOnBase_Title";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseIndexer: return "ERR_NoDynamicPhantomOnBaseIndexer_Title";
                case ErrorCode.ERR_BadArgTypeDynamicExtension: return "ERR_BadArgTypeDynamicExtension_Title";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseCtor: return "ERR_NoDynamicPhantomOnBaseCtor_Title";
                case ErrorCode.ERR_BadDynamicMethodArgMemgrp: return "ERR_BadDynamicMethodArgMemgrp_Title";
                case ErrorCode.ERR_BadDynamicMethodArgLambda: return "ERR_BadDynamicMethodArgLambda_Title";
                case ErrorCode.ERR_BadDynamicMethodArg: return "ERR_BadDynamicMethodArg_Title";
                case ErrorCode.ERR_BadDynamicQuery: return "ERR_BadDynamicQuery_Title";
                case ErrorCode.ERR_DynamicAttributeMissing: return "ERR_DynamicAttributeMissing_Title";
                case ErrorCode.ERR_BadAsyncReturn: return "ERR_BadAsyncReturn_Title";
                case ErrorCode.ERR_BadAwaitInFinally: return "ERR_BadAwaitInFinally_Title";
                case ErrorCode.ERR_BadAwaitInCatch: return "ERR_BadAwaitInCatch_Title";
                case ErrorCode.ERR_BadAwaitArg: return "ERR_BadAwaitArg_Title";
                case ErrorCode.ERR_BadAsyncArgType: return "ERR_BadAsyncArgType_Title";
                case ErrorCode.ERR_BadAsyncExpressionTree: return "ERR_BadAsyncExpressionTree_Title";
                case ErrorCode.ERR_MixingWinRTEventWithRegular: return "ERR_MixingWinRTEventWithRegular_Title";
                case ErrorCode.ERR_BadAwaitWithoutAsync: return "ERR_BadAwaitWithoutAsync_Title";
                case ErrorCode.ERR_BadAsyncLacksBody: return "ERR_BadAsyncLacksBody_Title";
                case ErrorCode.ERR_BadAwaitInQuery: return "ERR_BadAwaitInQuery_Title";
                case ErrorCode.ERR_BadAwaitInLock: return "ERR_BadAwaitInLock_Title";
                case ErrorCode.ERR_TaskRetNoObjectRequired: return "ERR_TaskRetNoObjectRequired_Title";
                case ErrorCode.ERR_FileNotFound: return "ERR_FileNotFound_Title";
                case ErrorCode.ERR_NoFileSpec: return "ERR_NoFileSpec_Title";
                case ErrorCode.ERR_SwitchNeedsString: return "ERR_SwitchNeedsString_Title";
                case ErrorCode.ERR_BadSwitch: return "ERR_BadSwitch_Title";
                case ErrorCode.ERR_OpenResponseFile: return "ERR_OpenResponseFile_Title";
                case ErrorCode.ERR_CantOpenFileWrite: return "ERR_CantOpenFileWrite_Title";
                case ErrorCode.ERR_BadBaseNumber: return "ERR_BadBaseNumber_Title";
                case ErrorCode.ERR_BinaryFile: return "ERR_BinaryFile_Title";
                case ErrorCode.ERR_NoMainOnDLL: return "ERR_NoMainOnDLL_Title";
                case ErrorCode.ERR_InvalidFileAlignment: return "ERR_InvalidFileAlignment_Title";
                case ErrorCode.ERR_OneAliasPerReference: return "ERR_OneAliasPerReference_Title";
                case ErrorCode.ERR_SwitchNeedsNumber: return "ERR_SwitchNeedsNumber_Title";
                case ErrorCode.ERR_MissingDebugSwitch: return "ERR_MissingDebugSwitch_Title";
                case ErrorCode.ERR_ComRefCallInExpressionTree: return "ERR_ComRefCallInExpressionTree_Title";
                case ErrorCode.ERR_InvalidFormatForGuidForOption: return "ERR_InvalidFormatForGuidForOption_Title";
                case ErrorCode.ERR_MissingGuidForOption: return "ERR_MissingGuidForOption_Title";
                case ErrorCode.ERR_InvalidOutputName: return "ERR_InvalidOutputName_Title";
                case ErrorCode.ERR_InvalidDebugInformationFormat: return "ERR_InvalidDebugInformationFormat_Title";
                case ErrorCode.ERR_LegacyObjectIdSyntax: return "ERR_LegacyObjectIdSyntax_Title";
                case ErrorCode.ERR_SourceLinkRequiresPdb: return "ERR_SourceLinkRequiresPdb_Title";
                case ErrorCode.ERR_CannotEmbedWithoutPdb: return "ERR_CannotEmbedWithoutPdb_Title";
                case ErrorCode.ERR_BadSwitchValue: return "ERR_BadSwitchValue_Title";
                case ErrorCode.ERR_BadAwaitArgIntrinsic: return "ERR_BadAwaitArgIntrinsic_Title";
                case ErrorCode.ERR_BadAwaitAsIdentifier: return "ERR_BadAwaitAsIdentifier_Title";
                case ErrorCode.ERR_AwaitInUnsafeContext: return "ERR_AwaitInUnsafeContext_Title";
                case ErrorCode.ERR_UnsafeAsyncArgType: return "ERR_UnsafeAsyncArgType_Title";
                case ErrorCode.ERR_VarargsAsync: return "ERR_VarargsAsync_Title";
                case ErrorCode.ERR_ByRefTypeAndAwait: return "ERR_ByRefTypeAndAwait_Title";
                case ErrorCode.ERR_BadAwaitArgVoidCall: return "ERR_BadAwaitArgVoidCall_Title";
                case ErrorCode.ERR_NonTaskMainCantBeAsync: return "ERR_NonTaskMainCantBeAsync_Title";
                case ErrorCode.ERR_CantConvAsyncAnonFuncReturns: return "ERR_CantConvAsyncAnonFuncReturns_Title";
                case ErrorCode.ERR_BadAwaiterPattern: return "ERR_BadAwaiterPattern_Title";
                case ErrorCode.ERR_BadSpecialByRefParameter: return "ERR_BadSpecialByRefParameter_Title";
                case ErrorCode.ERR_SpecialByRefInLambda: return "ERR_SpecialByRefInLambda_Title";
                case ErrorCode.ERR_SynchronizedAsyncMethod: return "ERR_SynchronizedAsyncMethod_Title";
                case ErrorCode.ERR_BadAsyncReturnExpression: return "ERR_BadAsyncReturnExpression_Title";
                case ErrorCode.ERR_NoConversionForCallerLineNumberParam: return "ERR_NoConversionForCallerLineNumberParam_Title";
                case ErrorCode.ERR_NoConversionForCallerFilePathParam: return "ERR_NoConversionForCallerFilePathParam_Title";
                case ErrorCode.ERR_NoConversionForCallerMemberNameParam: return "ERR_NoConversionForCallerMemberNameParam_Title";
                case ErrorCode.ERR_BadCallerLineNumberParamWithoutDefaultValue: return "ERR_BadCallerLineNumberParamWithoutDefaultValue_Title";
                case ErrorCode.ERR_BadCallerFilePathParamWithoutDefaultValue: return "ERR_BadCallerFilePathParamWithoutDefaultValue_Title";
                case ErrorCode.ERR_BadCallerMemberNameParamWithoutDefaultValue: return "ERR_BadCallerMemberNameParamWithoutDefaultValue_Title";
                case ErrorCode.ERR_BadPrefer32OnLib: return "ERR_BadPrefer32OnLib_Title";
                case ErrorCode.ERR_DoesntImplementAwaitInterface: return "ERR_DoesntImplementAwaitInterface_Title";
                case ErrorCode.ERR_BadAwaitArg_NeedSystem: return "ERR_BadAwaitArg_NeedSystem_Title";
                case ErrorCode.ERR_CantReturnVoid: return "ERR_CantReturnVoid_Title";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync_Title";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct_Title";
                case ErrorCode.ERR_BadAwaitWithoutAsyncMethod: return "ERR_BadAwaitWithoutAsyncMethod_Title";
                case ErrorCode.ERR_BadAwaitWithoutVoidAsyncMethod: return "ERR_BadAwaitWithoutVoidAsyncMethod_Title";
                case ErrorCode.ERR_BadAwaitWithoutAsyncLambda: return "ERR_BadAwaitWithoutAsyncLambda_Title";
                case ErrorCode.ERR_NoSuchMemberOrExtensionNeedUsing: return "ERR_NoSuchMemberOrExtensionNeedUsing_Title";
                case ErrorCode.ERR_NoEntryPoint: return "ERR_NoEntryPoint_Title";
                case ErrorCode.ERR_UnexpectedAliasedName: return "ERR_UnexpectedAliasedName_Title";
                case ErrorCode.ERR_UnexpectedGenericName: return "ERR_UnexpectedGenericName_Title";
                case ErrorCode.ERR_UnexpectedUnboundGenericName: return "ERR_UnexpectedUnboundGenericName_Title";
                case ErrorCode.ERR_GlobalStatement: return "ERR_GlobalStatement_Title";
                case ErrorCode.ERR_BadUsingType: return "ERR_BadUsingType_Title";
                case ErrorCode.ERR_ReservedAssemblyName: return "ERR_ReservedAssemblyName_Title";
                case ErrorCode.ERR_PPReferenceFollowsToken: return "ERR_PPReferenceFollowsToken_Title";
                case ErrorCode.ERR_ExpectedPPFile: return "ERR_ExpectedPPFile_Title";
                case ErrorCode.ERR_ReferenceDirectiveOnlyAllowedInScripts: return "ERR_ReferenceDirectiveOnlyAllowedInScripts_Title";
                case ErrorCode.ERR_NameNotInContextPossibleMissingReference: return "ERR_NameNotInContextPossibleMissingReference_Title";
                case ErrorCode.ERR_MetadataNameTooLong: return "ERR_MetadataNameTooLong_Title";
                case ErrorCode.ERR_AttributesNotAllowed: return "ERR_AttributesNotAllowed_Title";
                case ErrorCode.ERR_ExternAliasNotAllowed: return "ERR_ExternAliasNotAllowed_Title";
                case ErrorCode.ERR_ConflictingAliasAndDefinition: return "ERR_ConflictingAliasAndDefinition_Title";
                case ErrorCode.ERR_GlobalDefinitionOrStatementExpected: return "ERR_GlobalDefinitionOrStatementExpected_Title";
                case ErrorCode.ERR_ExpectedSingleScript: return "ERR_ExpectedSingleScript_Title";
                case ErrorCode.ERR_RecursivelyTypedVariable: return "ERR_RecursivelyTypedVariable_Title";
                case ErrorCode.ERR_YieldNotAllowedInScript: return "ERR_YieldNotAllowedInScript_Title";
                case ErrorCode.ERR_NamespaceNotAllowedInScript: return "ERR_NamespaceNotAllowedInScript_Title";
                case ErrorCode.ERR_InvalidDelegateType: return "ERR_InvalidDelegateType_Title";
                case ErrorCode.ERR_BadVisEventType: return "ERR_BadVisEventType_Title";
                case ErrorCode.ERR_GlobalAttributesNotAllowed: return "ERR_GlobalAttributesNotAllowed_Title";
                case ErrorCode.ERR_PublicKeyFileFailure: return "ERR_PublicKeyFileFailure_Title";
                case ErrorCode.ERR_PublicKeyContainerFailure: return "ERR_PublicKeyContainerFailure_Title";
                case ErrorCode.ERR_FriendRefSigningMismatch: return "ERR_FriendRefSigningMismatch_Title";
                case ErrorCode.ERR_CannotPassNullForFriendAssembly: return "ERR_CannotPassNullForFriendAssembly_Title";
                case ErrorCode.ERR_SignButNoPrivateKey: return "ERR_SignButNoPrivateKey_Title";
                case ErrorCode.ERR_InvalidVersionFormat: return "ERR_InvalidVersionFormat_Title";
                case ErrorCode.ERR_NoCorrespondingArgument: return "ERR_NoCorrespondingArgument_Title";
                case ErrorCode.ERR_ModuleEmitFailure: return "ERR_ModuleEmitFailure_Title";
                case ErrorCode.ERR_ResourceFileNameNotUnique: return "ERR_ResourceFileNameNotUnique_Title";
                case ErrorCode.ERR_DllImportOnGenericMethod: return "ERR_DllImportOnGenericMethod_Title";
                case ErrorCode.ERR_EncUpdateFailedMissingAttribute: return "ERR_EncUpdateFailedMissingAttribute_Title";
                case ErrorCode.ERR_ParameterNotValidForType: return "ERR_ParameterNotValidForType_Title";
                case ErrorCode.ERR_AttributeParameterRequired1: return "ERR_AttributeParameterRequired1_Title";
                case ErrorCode.ERR_AttributeParameterRequired2: return "ERR_AttributeParameterRequired2_Title";
                case ErrorCode.ERR_SecurityAttributeMissingAction: return "ERR_SecurityAttributeMissingAction_Title";
                case ErrorCode.ERR_SecurityAttributeInvalidAction: return "ERR_SecurityAttributeInvalidAction_Title";
                case ErrorCode.ERR_SecurityAttributeInvalidActionAssembly: return "ERR_SecurityAttributeInvalidActionAssembly_Title";
                case ErrorCode.ERR_SecurityAttributeInvalidActionTypeOrMethod: return "ERR_SecurityAttributeInvalidActionTypeOrMethod_Title";
                case ErrorCode.ERR_PrincipalPermissionInvalidAction: return "ERR_PrincipalPermissionInvalidAction_Title";
                case ErrorCode.ERR_FeatureNotValidInExpressionTree: return "ERR_FeatureNotValidInExpressionTree_Title";
                case ErrorCode.ERR_MarshalUnmanagedTypeNotValidForFields: return "ERR_MarshalUnmanagedTypeNotValidForFields_Title";
                case ErrorCode.ERR_MarshalUnmanagedTypeOnlyValidForFields: return "ERR_MarshalUnmanagedTypeOnlyValidForFields_Title";
                case ErrorCode.ERR_PermissionSetAttributeInvalidFile: return "ERR_PermissionSetAttributeInvalidFile_Title";
                case ErrorCode.ERR_PermissionSetAttributeFileReadError: return "ERR_PermissionSetAttributeFileReadError_Title";
                case ErrorCode.ERR_InvalidVersionFormat2: return "ERR_InvalidVersionFormat2_Title";
                case ErrorCode.ERR_InvalidAssemblyCultureForExe: return "ERR_InvalidAssemblyCultureForExe_Title";
                case ErrorCode.ERR_DuplicateAttributeInNetModule: return "ERR_DuplicateAttributeInNetModule_Title";
                case ErrorCode.ERR_CantOpenIcon: return "ERR_CantOpenIcon_Title";
                case ErrorCode.ERR_ErrorBuildingWin32Resources: return "ERR_ErrorBuildingWin32Resources_Title";
                case ErrorCode.ERR_BadAttributeParamDefaultArgument: return "ERR_BadAttributeParamDefaultArgument_Title";
                case ErrorCode.ERR_MissingTypeInSource: return "ERR_MissingTypeInSource_Title";
                case ErrorCode.ERR_MissingTypeInAssembly: return "ERR_MissingTypeInAssembly_Title";
                case ErrorCode.ERR_SecurityAttributeInvalidTarget: return "ERR_SecurityAttributeInvalidTarget_Title";
                case ErrorCode.ERR_InvalidAssemblyName: return "ERR_InvalidAssemblyName_Title";
                case ErrorCode.ERR_NoTypeDefFromModule: return "ERR_NoTypeDefFromModule_Title";
                case ErrorCode.ERR_InvalidDynamicCondition: return "ERR_InvalidDynamicCondition_Title";
                case ErrorCode.ERR_WinRtEventPassedByRef: return "ERR_WinRtEventPassedByRef_Title";
                case ErrorCode.ERR_NetModuleNameMismatch: return "ERR_NetModuleNameMismatch_Title";
                case ErrorCode.ERR_BadModuleName: return "ERR_BadModuleName_Title";
                case ErrorCode.ERR_BadCompilationOptionValue: return "ERR_BadCompilationOptionValue_Title";
                case ErrorCode.ERR_BadAppConfigPath: return "ERR_BadAppConfigPath_Title";
                case ErrorCode.ERR_CmdOptionConflictsSource: return "ERR_CmdOptionConflictsSource_Title";
                case ErrorCode.ERR_FixedBufferTooManyDimensions: return "ERR_FixedBufferTooManyDimensions_Title";
                case ErrorCode.ERR_CantReadConfigFile: return "ERR_CantReadConfigFile_Title";
                case ErrorCode.ERR_BadAwaitInCatchFilter: return "ERR_BadAwaitInCatchFilter_Title";
                case ErrorCode.ERR_EncNoPIAReference: return "ERR_EncNoPIAReference_Title";
                case ErrorCode.ERR_LinkedNetmoduleMetadataMustProvideFullPEImage: return "ERR_LinkedNetmoduleMetadataMustProvideFullPEImage_Title";
                case ErrorCode.ERR_MetadataReferencesNotSupported: return "ERR_MetadataReferencesNotSupported_Title";
                case ErrorCode.ERR_InvalidAssemblyCulture: return "ERR_InvalidAssemblyCulture_Title";
                case ErrorCode.ERR_EncReferenceToAddedMember: return "ERR_EncReferenceToAddedMember_Title";
                case ErrorCode.ERR_MutuallyExclusiveOptions: return "ERR_MutuallyExclusiveOptions_Title";
                case ErrorCode.ERR_InvalidDebugInfo: return "ERR_InvalidDebugInfo_Title";
                case ErrorCode.ERR_InvalidSignaturePublicKey: return "ERR_InvalidSignaturePublicKey_Title";
                case ErrorCode.ERR_ExportedTypeConflictsWithDeclaration: return "ERR_ExportedTypeConflictsWithDeclaration_Title";
                case ErrorCode.ERR_ExportedTypesConflict: return "ERR_ExportedTypesConflict_Title";
                case ErrorCode.ERR_ForwardedTypeConflictsWithDeclaration: return "ERR_ForwardedTypeConflictsWithDeclaration_Title";
                case ErrorCode.ERR_ForwardedTypesConflict: return "ERR_ForwardedTypesConflict_Title";
                case ErrorCode.ERR_ForwardedTypeConflictsWithExportedType: return "ERR_ForwardedTypeConflictsWithExportedType_Title";
                case ErrorCode.ERR_AgnosticToMachineModule: return "ERR_AgnosticToMachineModule_Title";
                case ErrorCode.ERR_ConflictingMachineModule: return "ERR_ConflictingMachineModule_Title";
                case ErrorCode.ERR_CryptoHashFailed: return "ERR_CryptoHashFailed_Title";
                case ErrorCode.ERR_MissingNetModuleReference: return "ERR_MissingNetModuleReference_Title";
                case ErrorCode.ERR_NetModuleNameMustBeUnique: return "ERR_NetModuleNameMustBeUnique_Title";
                case ErrorCode.ERR_UnsupportedTransparentIdentifierAccess: return "ERR_UnsupportedTransparentIdentifierAccess_Title";
                case ErrorCode.ERR_ParamDefaultValueDiffersFromAttribute: return "ERR_ParamDefaultValueDiffersFromAttribute_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion1: return "ERR_FeatureNotAvailableInVersion1_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion2: return "ERR_FeatureNotAvailableInVersion2_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion3: return "ERR_FeatureNotAvailableInVersion3_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion4: return "ERR_FeatureNotAvailableInVersion4_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion5: return "ERR_FeatureNotAvailableInVersion5_Title";
                case ErrorCode.ERR_FieldHasMultipleDistinctConstantValues: return "ERR_FieldHasMultipleDistinctConstantValues_Title";
                case ErrorCode.ERR_ComImportWithInitializers: return "ERR_ComImportWithInitializers_Title";
                case ErrorCode.ERR_RetNoObjectRequiredLambda: return "ERR_RetNoObjectRequiredLambda_Title";
                case ErrorCode.ERR_TaskRetNoObjectRequiredLambda: return "ERR_TaskRetNoObjectRequiredLambda_Title";
                case ErrorCode.ERR_CantReadRulesetFile: return "ERR_CantReadRulesetFile_Title";
                case ErrorCode.ERR_BadPdbData: return "ERR_BadPdbData_Title";
                case ErrorCode.ERR_InitializerOnNonAutoProperty: return "ERR_InitializerOnNonAutoProperty_Title";
                case ErrorCode.ERR_AutoPropertyMustHaveGetAccessor: return "ERR_AutoPropertyMustHaveGetAccessor_Title";
                case ErrorCode.ERR_InstancePropertyInitializerInInterface: return "ERR_InstancePropertyInitializerInInterface_Title";
                case ErrorCode.ERR_EnumsCantContainDefaultConstructor: return "ERR_EnumsCantContainDefaultConstructor_Title";
                case ErrorCode.ERR_EncodinglessSyntaxTree: return "ERR_EncodinglessSyntaxTree_Title";
                case ErrorCode.ERR_BlockBodyAndExpressionBody: return "ERR_BlockBodyAndExpressionBody_Title";
                case ErrorCode.ERR_FeatureIsExperimental: return "ERR_FeatureIsExperimental_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion6: return "ERR_FeatureNotAvailableInVersion6_Title";
                case ErrorCode.ERR_SwitchFallOut: return "ERR_SwitchFallOut_Title";
                case ErrorCode.ERR_NullPropagatingOpInExpressionTree: return "ERR_NullPropagatingOpInExpressionTree_Title";
                case ErrorCode.ERR_DictionaryInitializerInExpressionTree: return "ERR_DictionaryInitializerInExpressionTree_Title";
                case ErrorCode.ERR_ExtensionCollectionElementInitializerInExpressionTree: return "ERR_ExtensionCollectionElementInitializerInExpressionTree_Title";
                case ErrorCode.ERR_UnclosedExpressionHole: return "ERR_UnclosedExpressionHole_Title";
                case ErrorCode.ERR_InsufficientStack: return "ERR_InsufficientStack_Title";
                case ErrorCode.ERR_UseDefViolationProperty: return "ERR_UseDefViolationProperty_Title";
                case ErrorCode.ERR_AutoPropertyMustOverrideSet: return "ERR_AutoPropertyMustOverrideSet_Title";
                case ErrorCode.ERR_ExpressionHasNoName: return "ERR_ExpressionHasNoName_Title";
                case ErrorCode.ERR_SubexpressionNotInNameof: return "ERR_SubexpressionNotInNameof_Title";
                case ErrorCode.ERR_AliasQualifiedNameNotAnExpression: return "ERR_AliasQualifiedNameNotAnExpression_Title";
                case ErrorCode.ERR_NameofMethodGroupWithTypeParameters: return "ERR_NameofMethodGroupWithTypeParameters_Title";
                case ErrorCode.ERR_NoAliasHere: return "ERR_NoAliasHere_Title";
                case ErrorCode.ERR_UnescapedCurly: return "ERR_UnescapedCurly_Title";
                case ErrorCode.ERR_EscapedCurly: return "ERR_EscapedCurly_Title";
                case ErrorCode.ERR_TrailingWhitespaceInFormatSpecifier: return "ERR_TrailingWhitespaceInFormatSpecifier_Title";
                case ErrorCode.ERR_EmptyFormatSpecifier: return "ERR_EmptyFormatSpecifier_Title";
                case ErrorCode.ERR_ErrorInReferencedAssembly: return "ERR_ErrorInReferencedAssembly_Title";
                case ErrorCode.ERR_ExternHasConstructorInitializer: return "ERR_ExternHasConstructorInitializer_Title";
                case ErrorCode.ERR_ExpressionOrDeclarationExpected: return "ERR_ExpressionOrDeclarationExpected_Title";
                case ErrorCode.ERR_NameofExtensionMethod: return "ERR_NameofExtensionMethod_Title";
                case ErrorCode.ERR_ConstantStringTooLong: return "ERR_ConstantStringTooLong_Title";
                case ErrorCode.ERR_DebugEntryPointNotSourceMethodDefinition: return "ERR_DebugEntryPointNotSourceMethodDefinition_Title";
                case ErrorCode.ERR_LoadDirectiveOnlyAllowedInScripts: return "ERR_LoadDirectiveOnlyAllowedInScripts_Title";
                case ErrorCode.ERR_PPLoadFollowsToken: return "ERR_PPLoadFollowsToken_Title";
                case ErrorCode.ERR_SourceFileReferencesNotSupported: return "ERR_SourceFileReferencesNotSupported_Title";
                case ErrorCode.ERR_BadAwaitInStaticVariableInitializer: return "ERR_BadAwaitInStaticVariableInitializer_Title";
                case ErrorCode.ERR_InvalidPathMap: return "ERR_InvalidPathMap_Title";
                case ErrorCode.ERR_PublicSignButNoKey: return "ERR_PublicSignButNoKey_Title";
                case ErrorCode.ERR_TooManyUserStrings: return "ERR_TooManyUserStrings_Title";
                case ErrorCode.ERR_PeWritingFailure: return "ERR_PeWritingFailure_Title";
                case ErrorCode.ERR_OptionMustBeAbsolutePath: return "ERR_OptionMustBeAbsolutePath_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7: return "ERR_FeatureNotAvailableInVersion7_Title";
                case ErrorCode.ERR_DynamicLocalFunctionParamsParameter: return "ERR_DynamicLocalFunctionParamsParameter_Title";
                case ErrorCode.ERR_ExpressionTreeContainsLocalFunction: return "ERR_ExpressionTreeContainsLocalFunction_Title";
                case ErrorCode.ERR_InvalidInstrumentationKind: return "ERR_InvalidInstrumentationKind_Title";
                case ErrorCode.ERR_LocalFunctionMissingBody: return "ERR_LocalFunctionMissingBody_Title";
                case ErrorCode.ERR_InvalidHashAlgorithmName: return "ERR_InvalidHashAlgorithmName_Title";
                case ErrorCode.ERR_ThrowMisplaced: return "ERR_ThrowMisplaced_Title";
                case ErrorCode.ERR_PatternNullableType: return "ERR_PatternNullableType_Title";
                case ErrorCode.ERR_BadPatternExpression: return "ERR_BadPatternExpression_Title";
                case ErrorCode.ERR_SwitchExpressionValueExpected: return "ERR_SwitchExpressionValueExpected_Title";
                case ErrorCode.ERR_SwitchCaseSubsumed: return "ERR_SwitchCaseSubsumed_Title";
                case ErrorCode.ERR_PatternWrongType: return "ERR_PatternWrongType_Title";
                case ErrorCode.ERR_ExpressionTreeContainsIsMatch: return "ERR_ExpressionTreeContainsIsMatch_Title";
                case ErrorCode.ERR_TupleTooFewElements: return "ERR_TupleTooFewElements_Title";
                case ErrorCode.ERR_TupleReservedElementName: return "ERR_TupleReservedElementName_Title";
                case ErrorCode.ERR_TupleReservedElementNameAnyPosition: return "ERR_TupleReservedElementNameAnyPosition_Title";
                case ErrorCode.ERR_TupleDuplicateElementName: return "ERR_TupleDuplicateElementName_Title";
                case ErrorCode.ERR_PredefinedTypeMemberNotFoundInAssembly: return "ERR_PredefinedTypeMemberNotFoundInAssembly_Title";
                case ErrorCode.ERR_MissingDeconstruct: return "ERR_MissingDeconstruct_Title";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable_Title";
                case ErrorCode.ERR_DeconstructRequiresExpression: return "ERR_DeconstructRequiresExpression_Title";
                case ErrorCode.ERR_DeconstructWrongCardinality: return "ERR_DeconstructWrongCardinality_Title";
                case ErrorCode.ERR_CannotDeconstructDynamic: return "ERR_CannotDeconstructDynamic_Title";
                case ErrorCode.ERR_DeconstructTooFewElements: return "ERR_DeconstructTooFewElements_Title";
                case ErrorCode.ERR_ConversionNotTupleCompatible: return "ERR_ConversionNotTupleCompatible_Title";
                case ErrorCode.ERR_DeconstructionVarFormDisallowsSpecificType: return "ERR_DeconstructionVarFormDisallowsSpecificType_Title";
                case ErrorCode.ERR_TupleElementNamesAttributeMissing: return "ERR_TupleElementNamesAttributeMissing_Title";
                case ErrorCode.ERR_ExplicitTupleElementNamesAttribute: return "ERR_ExplicitTupleElementNamesAttribute_Title";
                case ErrorCode.ERR_CantChangeTupleNamesOnOverride: return "ERR_CantChangeTupleNamesOnOverride_Title";
                case ErrorCode.ERR_DuplicateInterfaceWithTupleNamesInBaseList: return "ERR_DuplicateInterfaceWithTupleNamesInBaseList_Title";
                case ErrorCode.ERR_ImplBadTupleNames: return "ERR_ImplBadTupleNames_Title";
                case ErrorCode.ERR_PartialMemberInconsistentTupleNames: return "ERR_PartialMemberInconsistentTupleNames_Title";
                case ErrorCode.ERR_ExpressionTreeContainsTupleLiteral: return "ERR_ExpressionTreeContainsTupleLiteral_Title";
                case ErrorCode.ERR_ExpressionTreeContainsTupleConversion: return "ERR_ExpressionTreeContainsTupleConversion_Title";
                case ErrorCode.ERR_AutoPropertyCannotBeRefReturning: return "ERR_AutoPropertyCannotBeRefReturning_Title";
                case ErrorCode.ERR_RefPropertyMustHaveGetAccessor: return "ERR_RefPropertyMustHaveGetAccessor_Title";
                case ErrorCode.ERR_RefPropertyCannotHaveSetAccessor: return "ERR_RefPropertyCannotHaveSetAccessor_Title";
                case ErrorCode.ERR_CantChangeRefReturnOnOverride: return "ERR_CantChangeRefReturnOnOverride_Title";
                case ErrorCode.ERR_MustNotHaveRefReturn: return "ERR_MustNotHaveRefReturn_Title";
                case ErrorCode.ERR_MustHaveRefReturn: return "ERR_MustHaveRefReturn_Title";
                case ErrorCode.ERR_RefReturnMustHaveIdentityConversion: return "ERR_RefReturnMustHaveIdentityConversion_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongRefReturn: return "ERR_CloseUnimplementedInterfaceMemberWrongRefReturn_Title";
                case ErrorCode.ERR_RefReturningCallInExpressionTree: return "ERR_RefReturningCallInExpressionTree_Title";
                case ErrorCode.ERR_BadIteratorReturnRef: return "ERR_BadIteratorReturnRef_Title";
                case ErrorCode.ERR_BadRefReturnExpressionTree: return "ERR_BadRefReturnExpressionTree_Title";
                case ErrorCode.ERR_RefReturnLvalueExpected: return "ERR_RefReturnLvalueExpected_Title";
                case ErrorCode.ERR_RefReturnNonreturnableLocal: return "ERR_RefReturnNonreturnableLocal_Title";
                case ErrorCode.ERR_RefReturnNonreturnableLocal2: return "ERR_RefReturnNonreturnableLocal2_Title";
                case ErrorCode.ERR_RefReturnRangeVariable: return "ERR_RefReturnRangeVariable_Title";
                case ErrorCode.ERR_RefReturnReadonly: return "ERR_RefReturnReadonly_Title";
                case ErrorCode.ERR_RefReturnReadonlyStatic: return "ERR_RefReturnReadonlyStatic_Title";
                case ErrorCode.ERR_RefReturnReadonly2: return "ERR_RefReturnReadonly2_Title";
                case ErrorCode.ERR_RefReturnReadonlyStatic2: return "ERR_RefReturnReadonlyStatic2_Title";
                case ErrorCode.ERR_RefReturnParameter: return "ERR_RefReturnParameter_Title";
                case ErrorCode.ERR_RefReturnParameter2: return "ERR_RefReturnParameter2_Title";
                case ErrorCode.ERR_RefReturnLocal: return "ERR_RefReturnLocal_Title";
                case ErrorCode.ERR_RefReturnLocal2: return "ERR_RefReturnLocal2_Title";
                case ErrorCode.ERR_RefReturnStructThis: return "ERR_RefReturnStructThis_Title";
                case ErrorCode.ERR_InitializeByValueVariableWithReference: return "ERR_InitializeByValueVariableWithReference_Title";
                case ErrorCode.ERR_InitializeByReferenceVariableWithValue: return "ERR_InitializeByReferenceVariableWithValue_Title";
                case ErrorCode.ERR_RefAssignmentMustHaveIdentityConversion: return "ERR_RefAssignmentMustHaveIdentityConversion_Title";
                case ErrorCode.ERR_ByReferenceVariableMustBeInitialized: return "ERR_ByReferenceVariableMustBeInitialized_Title";
                case ErrorCode.ERR_AnonDelegateCantUseLocal: return "ERR_AnonDelegateCantUseLocal_Title";
                case ErrorCode.ERR_RefReturningCallAndAwait: return "ERR_RefReturningCallAndAwait_Title";
                case ErrorCode.ERR_PredefinedValueTupleTypeNotFound: return "ERR_PredefinedValueTupleTypeNotFound_Title";
                case ErrorCode.ERR_SemiOrLBraceOrArrowExpected: return "ERR_SemiOrLBraceOrArrowExpected_Title";
                case ErrorCode.ERR_NewWithTupleTypeSyntax: return "ERR_NewWithTupleTypeSyntax_Title";
                case ErrorCode.ERR_PredefinedValueTupleTypeMustBeStruct: return "ERR_PredefinedValueTupleTypeMustBeStruct_Title";
                case ErrorCode.ERR_DiscardTypeInferenceFailed: return "ERR_DiscardTypeInferenceFailed_Title";
                case ErrorCode.ERR_DeclarationExpressionNotPermitted: return "ERR_DeclarationExpressionNotPermitted_Title";
                case ErrorCode.ERR_MustDeclareForeachIteration: return "ERR_MustDeclareForeachIteration_Title";
                case ErrorCode.ERR_TupleElementNamesInDeconstruction: return "ERR_TupleElementNamesInDeconstruction_Title";
                case ErrorCode.ERR_ExpressionTreeContainsThrowExpression: return "ERR_ExpressionTreeContainsThrowExpression_Title";
                case ErrorCode.ERR_DelegateRefMismatch: return "ERR_DelegateRefMismatch_Title";
                case ErrorCode.ERR_BadSourceCodeKind: return "ERR_BadSourceCodeKind_Title";
                case ErrorCode.ERR_BadDocumentationMode: return "ERR_BadDocumentationMode_Title";
                case ErrorCode.ERR_BadLanguageVersion: return "ERR_BadLanguageVersion_Title";
                case ErrorCode.ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList: return "ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList_Title";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedOutVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedOutVariable_Title";
                case ErrorCode.ERR_ExpressionTreeContainsOutVariable: return "ERR_ExpressionTreeContainsOutVariable_Title";
                case ErrorCode.ERR_VarInvocationLvalueReserved: return "ERR_VarInvocationLvalueReserved_Title";
                case ErrorCode.ERR_PublicSignNetModule: return "ERR_PublicSignNetModule_Title";
                case ErrorCode.ERR_BadAssemblyName: return "ERR_BadAssemblyName_Title";
                case ErrorCode.ERR_BadAsyncMethodBuilderTaskProperty: return "ERR_BadAsyncMethodBuilderTaskProperty_Title";
                case ErrorCode.ERR_TypeForwardedToMultipleAssemblies: return "ERR_TypeForwardedToMultipleAssemblies_Title";
                case ErrorCode.ERR_ExpressionTreeContainsDiscard: return "ERR_ExpressionTreeContainsDiscard_Title";
                case ErrorCode.ERR_PatternDynamicType: return "ERR_PatternDynamicType_Title";
                case ErrorCode.ERR_VoidAssignment: return "ERR_VoidAssignment_Title";
                case ErrorCode.ERR_VoidInTuple: return "ERR_VoidInTuple_Title";
                case ErrorCode.ERR_Merge_conflict_marker_encountered: return "ERR_Merge_conflict_marker_encountered_Title";
                case ErrorCode.ERR_InvalidPreprocessingSymbol: return "ERR_InvalidPreprocessingSymbol_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_1: return "ERR_FeatureNotAvailableInVersion7_1_Title";
                case ErrorCode.ERR_LanguageVersionCannotHaveLeadingZeroes: return "ERR_LanguageVersionCannotHaveLeadingZeroes_Title";
                case ErrorCode.ERR_CompilerAndLanguageVersion: return "ERR_CompilerAndLanguageVersion_Title";
                case ErrorCode.ERR_TupleInferredNamesNotAvailable: return "ERR_TupleInferredNamesNotAvailable_Title";
                case ErrorCode.ERR_TypelessTupleInAs: return "ERR_TypelessTupleInAs_Title";
                case ErrorCode.ERR_NoRefOutWhenRefOnly: return "ERR_NoRefOutWhenRefOnly_Title";
                case ErrorCode.ERR_NoNetModuleOutputWhenRefOutOrRefOnly: return "ERR_NoNetModuleOutputWhenRefOutOrRefOnly_Title";
                case ErrorCode.ERR_BadOpOnNullOrDefaultOrNew: return "ERR_BadOpOnNullOrDefaultOrNew_Title";
                case ErrorCode.ERR_DefaultLiteralNotValid: return "ERR_DefaultLiteralNotValid_Title";
                case ErrorCode.ERR_PatternWrongGenericTypeInVersion: return "ERR_PatternWrongGenericTypeInVersion_Title";
                case ErrorCode.ERR_AmbigBinaryOpsOnDefault: return "ERR_AmbigBinaryOpsOnDefault_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_2: return "ERR_FeatureNotAvailableInVersion7_2_Title";
                case ErrorCode.ERR_DynamicLocalFunctionTypeParameter: return "ERR_DynamicLocalFunctionTypeParameter_Title";
                case ErrorCode.ERR_BadNonTrailingNamedArgument: return "ERR_BadNonTrailingNamedArgument_Title";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation: return "ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation_Title";
                case ErrorCode.ERR_RefConditionalAndAwait: return "ERR_RefConditionalAndAwait_Title";
                case ErrorCode.ERR_RefConditionalNeedsTwoRefs: return "ERR_RefConditionalNeedsTwoRefs_Title";
                case ErrorCode.ERR_RefConditionalDifferentTypes: return "ERR_RefConditionalDifferentTypes_Title";
                case ErrorCode.ERR_BadParameterModifiers: return "ERR_BadParameterModifiers_Title";
                case ErrorCode.ERR_RefReadonlyNotField: return "ERR_RefReadonlyNotField_Title";
                case ErrorCode.ERR_RefReadonlyNotField2: return "ERR_RefReadonlyNotField2_Title";
                case ErrorCode.ERR_AssignReadonlyNotField: return "ERR_AssignReadonlyNotField_Title";
                case ErrorCode.ERR_AssignReadonlyNotField2: return "ERR_AssignReadonlyNotField2_Title";
                case ErrorCode.ERR_RefReturnReadonlyNotField: return "ERR_RefReturnReadonlyNotField_Title";
                case ErrorCode.ERR_RefReturnReadonlyNotField2: return "ERR_RefReturnReadonlyNotField2_Title";
                case ErrorCode.ERR_ExplicitReservedAttr: return "ERR_ExplicitReservedAttr_Title";
                case ErrorCode.ERR_TypeReserved: return "ERR_TypeReserved_Title";
                case ErrorCode.ERR_RefExtensionMustBeValueTypeOrConstrainedToOne: return "ERR_RefExtensionMustBeValueTypeOrConstrainedToOne_Title";
                case ErrorCode.ERR_InExtensionMustBeValueType: return "ERR_InExtensionMustBeValueType_Title";
                case ErrorCode.ERR_FieldsInRoStruct: return "ERR_FieldsInRoStruct_Title";
                case ErrorCode.ERR_AutoPropsInRoStruct: return "ERR_AutoPropsInRoStruct_Title";
                case ErrorCode.ERR_FieldlikeEventsInRoStruct: return "ERR_FieldlikeEventsInRoStruct_Title";
                case ErrorCode.ERR_FieldAutoPropCantBeByRefLike: return "ERR_FieldAutoPropCantBeByRefLike_Title";
                case ErrorCode.ERR_StackAllocConversionNotPossible: return "ERR_StackAllocConversionNotPossible_Title";
                case ErrorCode.ERR_EscapeCall: return "ERR_EscapeCall_Title";
                case ErrorCode.ERR_EscapeCall2: return "ERR_EscapeCall2_Title";
                case ErrorCode.ERR_EscapeOther: return "ERR_EscapeOther_Title";
                case ErrorCode.ERR_CallArgMixing: return "ERR_CallArgMixing_Title";
                case ErrorCode.ERR_MismatchedRefEscapeInTernary: return "ERR_MismatchedRefEscapeInTernary_Title";
                case ErrorCode.ERR_EscapeVariable: return "ERR_EscapeVariable_Title";
                case ErrorCode.ERR_EscapeStackAlloc: return "ERR_EscapeStackAlloc_Title";
                case ErrorCode.ERR_RefReturnThis: return "ERR_RefReturnThis_Title";
                case ErrorCode.ERR_OutAttrOnInParam: return "ERR_OutAttrOnInParam_Title";
                case ErrorCode.ERR_PredefinedValueTupleTypeAmbiguous3: return "ERR_PredefinedValueTupleTypeAmbiguous3_Title";
                case ErrorCode.ERR_InvalidVersionFormatDeterministic: return "ERR_InvalidVersionFormatDeterministic_Title";
                case ErrorCode.ERR_AttributeCtorInParameter: return "ERR_AttributeCtorInParameter_Title";
                case ErrorCode.ERR_ConditionalInInterpolation: return "ERR_ConditionalInInterpolation_Title";
                case ErrorCode.ERR_CantUseVoidInArglist: return "ERR_CantUseVoidInArglist_Title";
                case ErrorCode.ERR_InDynamicMethodArg: return "ERR_InDynamicMethodArg_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_3: return "ERR_FeatureNotAvailableInVersion7_3_Title";
                case ErrorCode.ERR_DoNotUseFixedBufferAttrOnProperty: return "ERR_DoNotUseFixedBufferAttrOnProperty_Title";
                case ErrorCode.ERR_RefLocalOrParamExpected: return "ERR_RefLocalOrParamExpected_Title";
                case ErrorCode.ERR_RefAssignNarrower: return "ERR_RefAssignNarrower_Title";
                case ErrorCode.ERR_NewBoundWithUnmanaged: return "ERR_NewBoundWithUnmanaged_Title";
                case ErrorCode.ERR_UnmanagedConstraintNotSatisfied: return "ERR_UnmanagedConstraintNotSatisfied_Title";
                case ErrorCode.ERR_CantUseInOrOutInArglist: return "ERR_CantUseInOrOutInArglist_Title";
                case ErrorCode.ERR_ConWithUnmanagedCon: return "ERR_ConWithUnmanagedCon_Title";
                case ErrorCode.ERR_UnmanagedBoundWithClass: return "ERR_UnmanagedBoundWithClass_Title";
                case ErrorCode.ERR_InvalidStackAllocArray: return "ERR_InvalidStackAllocArray_Title";
                case ErrorCode.ERR_ExpressionTreeContainsTupleBinOp: return "ERR_ExpressionTreeContainsTupleBinOp_Title";
                case ErrorCode.ERR_TupleSizesMismatchForBinOps: return "ERR_TupleSizesMismatchForBinOps_Title";
                case ErrorCode.ERR_ExprCannotBeFixed: return "ERR_ExprCannotBeFixed_Title";
                case ErrorCode.ERR_InvalidObjectCreation: return "ERR_InvalidObjectCreation_Title";
                case ErrorCode.ERR_OutVariableCannotBeByRef: return "ERR_OutVariableCannotBeByRef_Title";
                case ErrorCode.ERR_OmittedTypeArgument: return "ERR_OmittedTypeArgument_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion8: return "ERR_FeatureNotAvailableInVersion8_Title";
                case ErrorCode.ERR_AltInterpolatedVerbatimStringsNotAvailable: return "ERR_AltInterpolatedVerbatimStringsNotAvailable_Title";
                case ErrorCode.ERR_IteratorMustBeAsync: return "ERR_IteratorMustBeAsync_Title";
                case ErrorCode.ERR_NoConvToIAsyncDisp: return "ERR_NoConvToIAsyncDisp_Title";
                case ErrorCode.ERR_AwaitForEachMissingMember: return "ERR_AwaitForEachMissingMember_Title";
                case ErrorCode.ERR_BadGetAsyncEnumerator: return "ERR_BadGetAsyncEnumerator_Title";
                case ErrorCode.ERR_MultipleIAsyncEnumOfT: return "ERR_MultipleIAsyncEnumOfT_Title";
                case ErrorCode.ERR_ForEachMissingMemberWrongAsync: return "ERR_ForEachMissingMemberWrongAsync_Title";
                case ErrorCode.ERR_AwaitForEachMissingMemberWrongAsync: return "ERR_AwaitForEachMissingMemberWrongAsync_Title";
                case ErrorCode.ERR_BadDynamicAwaitForEach: return "ERR_BadDynamicAwaitForEach_Title";
                case ErrorCode.ERR_NoConvToIAsyncDispWrongAsync: return "ERR_NoConvToIAsyncDispWrongAsync_Title";
                case ErrorCode.ERR_NoConvToIDispWrongAsync: return "ERR_NoConvToIDispWrongAsync_Title";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYield: return "ERR_PossibleAsyncIteratorWithoutYield_Title";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYieldOrAwait: return "ERR_PossibleAsyncIteratorWithoutYieldOrAwait_Title";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureVariable: return "ERR_StaticLocalFunctionCannotCaptureVariable_Title";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureThis: return "ERR_StaticLocalFunctionCannotCaptureThis_Title";
                case ErrorCode.ERR_AttributeNotOnEventAccessor: return "ERR_AttributeNotOnEventAccessor_Title";
                case ErrorCode.ERR_MultipleEnumeratorCancellationAttributes: return "ERR_MultipleEnumeratorCancellationAttributes_Title";
                case ErrorCode.ERR_VarianceInterfaceNesting: return "ERR_VarianceInterfaceNesting_Title";
                case ErrorCode.ERR_ImplicitIndexIndexerWithName: return "ERR_ImplicitIndexIndexerWithName_Title";
                case ErrorCode.ERR_ImplicitRangeIndexerWithName: return "ERR_ImplicitRangeIndexerWithName_Title";
                case ErrorCode.ERR_WrongNumberOfSubpatterns: return "ERR_WrongNumberOfSubpatterns_Title";
                case ErrorCode.ERR_PropertyPatternNameMissing: return "ERR_PropertyPatternNameMissing_Title";
                case ErrorCode.ERR_MissingPattern: return "ERR_MissingPattern_Title";
                case ErrorCode.ERR_DefaultPattern: return "ERR_DefaultPattern_Title";
                case ErrorCode.ERR_SwitchExpressionNoBestType: return "ERR_SwitchExpressionNoBestType_Title";
                case ErrorCode.ERR_VarMayNotBindToType: return "ERR_VarMayNotBindToType_Title";
                case ErrorCode.ERR_SwitchArmSubsumed: return "ERR_SwitchArmSubsumed_Title";
                case ErrorCode.ERR_ConstantPatternVsOpenType: return "ERR_ConstantPatternVsOpenType_Title";
                case ErrorCode.ERR_ExpressionTreeContainsSwitchExpression: return "ERR_ExpressionTreeContainsSwitchExpression_Title";
                case ErrorCode.ERR_SwitchGoverningExpressionRequiresParens: return "ERR_SwitchGoverningExpressionRequiresParens_Title";
                case ErrorCode.ERR_TupleElementNameMismatch: return "ERR_TupleElementNameMismatch_Title";
                case ErrorCode.ERR_DeconstructParameterNameMismatch: return "ERR_DeconstructParameterNameMismatch_Title";
                case ErrorCode.ERR_IsPatternImpossible: return "ERR_IsPatternImpossible_Title";
                case ErrorCode.ERR_PointerTypeInPatternMatching: return "ERR_PointerTypeInPatternMatching_Title";
                case ErrorCode.ERR_ArgumentNameInITuplePattern: return "ERR_ArgumentNameInITuplePattern_Title";
                case ErrorCode.ERR_DiscardPatternInSwitchStatement: return "ERR_DiscardPatternInSwitchStatement_Title";
                case ErrorCode.ERR_IllegalSuppression: return "ERR_IllegalSuppression_Title";
                case ErrorCode.ERR_ExplicitNullableAttribute: return "ERR_ExplicitNullableAttribute_Title";
                case ErrorCode.ERR_NullableUnconstrainedTypeParameter: return "ERR_NullableUnconstrainedTypeParameter_Title";
                case ErrorCode.ERR_AnnotationDisallowedInObjectCreation: return "ERR_AnnotationDisallowedInObjectCreation_Title";
                case ErrorCode.ERR_NullableOptionNotAvailable: return "ERR_NullableOptionNotAvailable_Title";
                case ErrorCode.ERR_TripleDotNotAllowed: return "ERR_TripleDotNotAllowed_Title";
                case ErrorCode.ERR_BadNullableContextOption: return "ERR_BadNullableContextOption_Title";
                case ErrorCode.ERR_NullableDirectiveQualifierExpected: return "ERR_NullableDirectiveQualifierExpected_Title";
                case ErrorCode.ERR_BadNullableTypeof: return "ERR_BadNullableTypeof_Title";
                case ErrorCode.ERR_ExpressionTreeCantContainRefStruct: return "ERR_ExpressionTreeCantContainRefStruct_Title";
                case ErrorCode.ERR_ElseCannotStartStatement: return "ERR_ElseCannotStartStatement_Title";
                case ErrorCode.ERR_ExpressionTreeCantContainNullCoalescingAssignment: return "ERR_ExpressionTreeCantContainNullCoalescingAssignment_Title";
                case ErrorCode.ERR_DuplicateExplicitImpl: return "ERR_DuplicateExplicitImpl_Title";
                case ErrorCode.ERR_UsingVarInSwitchCase: return "ERR_UsingVarInSwitchCase_Title";
                case ErrorCode.ERR_GoToForwardJumpOverUsingVar: return "ERR_GoToForwardJumpOverUsingVar_Title";
                case ErrorCode.ERR_GoToBackwardJumpOverUsingVar: return "ERR_GoToBackwardJumpOverUsingVar_Title";
                case ErrorCode.ERR_IsNullableType: return "ERR_IsNullableType_Title";
                case ErrorCode.ERR_AsNullableType: return "ERR_AsNullableType_Title";
                case ErrorCode.ERR_FeatureInPreview: return "ERR_FeatureInPreview_Title";
                case ErrorCode.ERR_StaticMemberCantBeReadOnly: return "ERR_StaticMemberCantBeReadOnly_Title";
                case ErrorCode.ERR_AutoSetterCantBeReadOnly: return "ERR_AutoSetterCantBeReadOnly_Title";
                case ErrorCode.ERR_AutoPropertyWithSetterCantBeReadOnly: return "ERR_AutoPropertyWithSetterCantBeReadOnly_Title";
                case ErrorCode.ERR_InvalidPropertyReadOnlyMods: return "ERR_InvalidPropertyReadOnlyMods_Title";
                case ErrorCode.ERR_DuplicatePropertyReadOnlyMods: return "ERR_DuplicatePropertyReadOnlyMods_Title";
                case ErrorCode.ERR_FieldLikeEventCantBeReadOnly: return "ERR_FieldLikeEventCantBeReadOnly_Title";
                case ErrorCode.ERR_PartialMemberReadOnlyDifference: return "ERR_PartialMemberReadOnlyDifference_Title";
                case ErrorCode.ERR_ReadOnlyModMissingAccessor: return "ERR_ReadOnlyModMissingAccessor_Title";
                case ErrorCode.ERR_OverrideRefConstraintNotSatisfied: return "ERR_OverrideRefConstraintNotSatisfied_Title";
                case ErrorCode.ERR_OverrideValConstraintNotSatisfied: return "ERR_OverrideValConstraintNotSatisfied_Title";
                case ErrorCode.ERR_NullableDirectiveTargetExpected: return "ERR_NullableDirectiveTargetExpected_Title";
                case ErrorCode.ERR_MultipleAnalyzerConfigsInSameDir: return "ERR_MultipleAnalyzerConfigsInSameDir_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember_Title";
                case ErrorCode.ERR_InvalidModifierForLanguageVersion: return "ERR_InvalidModifierForLanguageVersion_Title";
                case ErrorCode.ERR_ImplicitImplementationOfNonPublicInterfaceMember: return "ERR_ImplicitImplementationOfNonPublicInterfaceMember_Title";
                case ErrorCode.ERR_MostSpecificImplementationIsNotFound: return "ERR_MostSpecificImplementationIsNotFound_Title";
                case ErrorCode.ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember: return "ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember: return "ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember_Title";
                case ErrorCode.ERR_DefaultInterfaceImplementationInNoPIAType: return "ERR_DefaultInterfaceImplementationInNoPIAType_Title";
                case ErrorCode.ERR_AbstractEventHasAccessors: return "ERR_AbstractEventHasAccessors_Title";
                case ErrorCode.ERR_DuplicateNullSuppression: return "ERR_DuplicateNullSuppression_Title";
                case ErrorCode.ERR_DefaultLiteralNoTargetType: return "ERR_DefaultLiteralNoTargetType_Title";
                case ErrorCode.ERR_ReAbstractionInNoPIAType: return "ERR_ReAbstractionInNoPIAType_Title";
                case ErrorCode.ERR_InternalError: return "ERR_InternalError_Title";
                case ErrorCode.ERR_ImplicitObjectCreationIllegalTargetType: return "ERR_ImplicitObjectCreationIllegalTargetType_Title";
                case ErrorCode.ERR_ImplicitObjectCreationNotValid: return "ERR_ImplicitObjectCreationNotValid_Title";
                case ErrorCode.ERR_ImplicitObjectCreationNoTargetType: return "ERR_ImplicitObjectCreationNoTargetType_Title";
                case ErrorCode.ERR_BadFuncPointerParamModifier: return "ERR_BadFuncPointerParamModifier_Title";
                case ErrorCode.ERR_BadFuncPointerArgCount: return "ERR_BadFuncPointerArgCount_Title";
                case ErrorCode.ERR_MethFuncPtrMismatch: return "ERR_MethFuncPtrMismatch_Title";
                case ErrorCode.ERR_FuncPtrRefMismatch: return "ERR_FuncPtrRefMismatch_Title";
                case ErrorCode.ERR_FuncPtrMethMustBeStatic: return "ERR_FuncPtrMethMustBeStatic_Title";
                case ErrorCode.ERR_ExternEventInitializer: return "ERR_ExternEventInitializer_Title";
                case ErrorCode.ERR_AmbigBinaryOpsOnUnconstrainedDefault: return "ERR_AmbigBinaryOpsOnUnconstrainedDefault_Title";
                case ErrorCode.ERR_NoOutputDirectory: return "ERR_NoOutputDirectory_Title";
                case ErrorCode.ERR_StdInOptionProvidedButConsoleInputIsNotRedirected: return "ERR_StdInOptionProvidedButConsoleInputIsNotRedirected_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion9: return "ERR_FeatureNotAvailableInVersion9_Title";
                case ErrorCode.ERR_DuplicateInterfaceWithDifferencesInBaseList: return "ERR_DuplicateInterfaceWithDifferencesInBaseList_Title";
                case ErrorCode.ERR_DesignatorBeneathPatternCombinator: return "ERR_DesignatorBeneathPatternCombinator_Title";
                case ErrorCode.ERR_UnsupportedTypeForRelationalPattern: return "ERR_UnsupportedTypeForRelationalPattern_Title";
                case ErrorCode.ERR_RelationalPatternWithNaN: return "ERR_RelationalPatternWithNaN_Title";
                case ErrorCode.ERR_ConditionalOnLocalFunction: return "ERR_ConditionalOnLocalFunction_Title";
                case ErrorCode.ERR_WrongFuncPtrCallingConvention: return "ERR_WrongFuncPtrCallingConvention_Title";
                case ErrorCode.ERR_MissingAddressOf: return "ERR_MissingAddressOf_Title";
                case ErrorCode.ERR_CannotUseReducedExtensionMethodInAddressOf: return "ERR_CannotUseReducedExtensionMethodInAddressOf_Title";
                case ErrorCode.ERR_CannotUseFunctionPointerAsFixedLocal: return "ERR_CannotUseFunctionPointerAsFixedLocal_Title";
                case ErrorCode.ERR_ExpressionTreeContainsPatternImplicitIndexer: return "ERR_ExpressionTreeContainsPatternImplicitIndexer_Title";
                case ErrorCode.ERR_ExpressionTreeContainsFromEndIndexExpression: return "ERR_ExpressionTreeContainsFromEndIndexExpression_Title";
                case ErrorCode.ERR_ExpressionTreeContainsRangeExpression: return "ERR_ExpressionTreeContainsRangeExpression_Title";
                case ErrorCode.ERR_PartialMethodWithAccessibilityModsMustHaveImplementation: return "ERR_PartialMethodWithAccessibilityModsMustHaveImplementation_Title";
                case ErrorCode.ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods: return "ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods_Title";
                case ErrorCode.ERR_PartialMethodWithOutParamMustHaveAccessMods: return "ERR_PartialMethodWithOutParamMustHaveAccessMods_Title";
                case ErrorCode.ERR_PartialMethodWithExtendedModMustHaveAccessMods: return "ERR_PartialMethodWithExtendedModMustHaveAccessMods_Title";
                case ErrorCode.ERR_PartialMemberAccessibilityDifference: return "ERR_PartialMemberAccessibilityDifference_Title";
                case ErrorCode.ERR_PartialMemberExtendedModDifference: return "ERR_PartialMemberExtendedModDifference_Title";
                case ErrorCode.ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement: return "ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement_Title";
                case ErrorCode.ERR_SimpleProgramMultipleUnitsWithTopLevelStatements: return "ERR_SimpleProgramMultipleUnitsWithTopLevelStatements_Title";
                case ErrorCode.ERR_TopLevelStatementAfterNamespaceOrType: return "ERR_TopLevelStatementAfterNamespaceOrType_Title";
                case ErrorCode.ERR_SimpleProgramDisallowsMainType: return "ERR_SimpleProgramDisallowsMainType_Title";
                case ErrorCode.ERR_SimpleProgramNotAnExecutable: return "ERR_SimpleProgramNotAnExecutable_Title";
                case ErrorCode.ERR_UnsupportedCallingConvention: return "ERR_UnsupportedCallingConvention_Title";
                case ErrorCode.ERR_InvalidFunctionPointerCallingConvention: return "ERR_InvalidFunctionPointerCallingConvention_Title";
                case ErrorCode.ERR_InvalidFuncPointerReturnTypeModifier: return "ERR_InvalidFuncPointerReturnTypeModifier_Title";
                case ErrorCode.ERR_DupReturnTypeMod: return "ERR_DupReturnTypeMod_Title";
                case ErrorCode.ERR_AddressOfMethodGroupInExpressionTree: return "ERR_AddressOfMethodGroupInExpressionTree_Title";
                case ErrorCode.ERR_CannotConvertAddressOfToDelegate: return "ERR_CannotConvertAddressOfToDelegate_Title";
                case ErrorCode.ERR_AddressOfToNonFunctionPointer: return "ERR_AddressOfToNonFunctionPointer_Title";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeOrdinary: return "ERR_ModuleInitializerMethodMustBeOrdinary_Title";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType: return "ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType_Title";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid: return "ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid_Title";
                case ErrorCode.ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric: return "ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric_Title";
                case ErrorCode.ERR_PartialMethodReturnTypeDifference: return "ERR_PartialMethodReturnTypeDifference_Title";
                case ErrorCode.ERR_PartialMemberRefReturnDifference: return "ERR_PartialMemberRefReturnDifference_Title";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureVariable: return "ERR_StaticAnonymousFunctionCannotCaptureVariable_Title";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureThis: return "ERR_StaticAnonymousFunctionCannotCaptureThis_Title";
                case ErrorCode.ERR_OverrideDefaultConstraintNotSatisfied: return "ERR_OverrideDefaultConstraintNotSatisfied_Title";
                case ErrorCode.ERR_DefaultConstraintOverrideOnly: return "ERR_DefaultConstraintOverrideOnly_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses: return "ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses: return "ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses_Title";
                case ErrorCode.ERR_ExpressionTreeContainsWithExpression: return "ERR_ExpressionTreeContainsWithExpression_Title";
                case ErrorCode.ERR_AssignmentInitOnly: return "ERR_AssignmentInitOnly_Title";
                case ErrorCode.ERR_CantChangeInitOnlyOnOverride: return "ERR_CantChangeInitOnlyOnOverride_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongInitOnly: return "ERR_CloseUnimplementedInterfaceMemberWrongInitOnly_Title";
                case ErrorCode.ERR_ExplicitPropertyMismatchInitOnly: return "ERR_ExplicitPropertyMismatchInitOnly_Title";
                case ErrorCode.ERR_BadInitAccessor: return "ERR_BadInitAccessor_Title";
                case ErrorCode.ERR_InvalidWithReceiverType: return "ERR_InvalidWithReceiverType_Title";
                case ErrorCode.ERR_CannotClone: return "ERR_CannotClone_Title";
                case ErrorCode.ERR_CloneDisallowedInRecord: return "ERR_CloneDisallowedInRecord_Title";
                case ErrorCode.ERR_UnexpectedArgumentList: return "ERR_UnexpectedArgumentList_Title";
                case ErrorCode.ERR_UnexpectedOrMissingConstructorInitializerInRecord: return "ERR_UnexpectedOrMissingConstructorInitializerInRecord_Title";
                case ErrorCode.ERR_MultipleRecordParameterLists: return "ERR_MultipleRecordParameterLists_Title";
                case ErrorCode.ERR_BadRecordBase: return "ERR_BadRecordBase_Title";
                case ErrorCode.ERR_BadInheritanceFromRecord: return "ERR_BadInheritanceFromRecord_Title";
                case ErrorCode.ERR_BadRecordMemberForPositionalParameter: return "ERR_BadRecordMemberForPositionalParameter_Title";
                case ErrorCode.ERR_NoCopyConstructorInBaseType: return "ERR_NoCopyConstructorInBaseType_Title";
                case ErrorCode.ERR_CopyConstructorMustInvokeBaseCopyConstructor: return "ERR_CopyConstructorMustInvokeBaseCopyConstructor_Title";
                case ErrorCode.ERR_DoesNotOverrideMethodFromObject: return "ERR_DoesNotOverrideMethodFromObject_Title";
                case ErrorCode.ERR_SealedAPIInRecord: return "ERR_SealedAPIInRecord_Title";
                case ErrorCode.ERR_DoesNotOverrideBaseMethod: return "ERR_DoesNotOverrideBaseMethod_Title";
                case ErrorCode.ERR_NotOverridableAPIInRecord: return "ERR_NotOverridableAPIInRecord_Title";
                case ErrorCode.ERR_NonPublicAPIInRecord: return "ERR_NonPublicAPIInRecord_Title";
                case ErrorCode.ERR_SignatureMismatchInRecord: return "ERR_SignatureMismatchInRecord_Title";
                case ErrorCode.ERR_NonProtectedAPIInRecord: return "ERR_NonProtectedAPIInRecord_Title";
                case ErrorCode.ERR_DoesNotOverrideBaseEqualityContract: return "ERR_DoesNotOverrideBaseEqualityContract_Title";
                case ErrorCode.ERR_StaticAPIInRecord: return "ERR_StaticAPIInRecord_Title";
                case ErrorCode.ERR_CopyConstructorWrongAccessibility: return "ERR_CopyConstructorWrongAccessibility_Title";
                case ErrorCode.ERR_NonPrivateAPIInRecord: return "ERR_NonPrivateAPIInRecord_Title";
                case ErrorCode.ERR_CannotSpecifyManagedWithUnmanagedSpecifiers: return "ERR_CannotSpecifyManagedWithUnmanagedSpecifiers_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv: return "ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv_Title";
                case ErrorCode.ERR_TypeNotFound: return "ERR_TypeNotFound_Title";
                case ErrorCode.ERR_TypeMustBePublic: return "ERR_TypeMustBePublic_Title";
                case ErrorCode.ERR_InvalidUnmanagedCallersOnlyCallConv: return "ERR_InvalidUnmanagedCallersOnlyCallConv_Title";
                case ErrorCode.ERR_CannotUseManagedTypeInUnmanagedCallersOnly: return "ERR_CannotUseManagedTypeInUnmanagedCallersOnly_Title";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric: return "ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric_Title";
                case ErrorCode.ERR_UnmanagedCallersOnlyRequiresStatic: return "ERR_UnmanagedCallersOnlyRequiresStatic_Title";
                case ErrorCode.ERR_EntryPointCannotBeUnmanagedCallersOnly: return "ERR_EntryPointCannotBeUnmanagedCallersOnly_Title";
                case ErrorCode.ERR_ModuleInitializerCannotBeUnmanagedCallersOnly: return "ERR_ModuleInitializerCannotBeUnmanagedCallersOnly_Title";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly: return "ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly_Title";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate: return "ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate_Title";
                case ErrorCode.ERR_InitCannotBeReadonly: return "ERR_InitCannotBeReadonly_Title";
                case ErrorCode.ERR_UnexpectedVarianceStaticMember: return "ERR_UnexpectedVarianceStaticMember_Title";
                case ErrorCode.ERR_FunctionPointersCannotBeCalledWithNamedArguments: return "ERR_FunctionPointersCannotBeCalledWithNamedArguments_Title";
                case ErrorCode.ERR_EqualityContractRequiresGetter: return "ERR_EqualityContractRequiresGetter_Title";
                case ErrorCode.ERR_BadFieldTypeInRecord: return "ERR_BadFieldTypeInRecord_Title";
                case ErrorCode.ERR_RecordAmbigCtor: return "ERR_RecordAmbigCtor_Title";
                case ErrorCode.ERR_FunctionPointerTypesInAttributeNotSupported: return "ERR_FunctionPointerTypesInAttributeNotSupported_Title";
                case ErrorCode.ERR_InheritingFromRecordWithSealedToString: return "ERR_InheritingFromRecordWithSealedToString_Title";
                case ErrorCode.ERR_HiddenPositionalMember: return "ERR_HiddenPositionalMember_Title";
                case ErrorCode.ERR_GlobalUsingInNamespace: return "ERR_GlobalUsingInNamespace_Title";
                case ErrorCode.ERR_GlobalUsingOutOfOrder: return "ERR_GlobalUsingOutOfOrder_Title";
                case ErrorCode.ERR_AttributesRequireParenthesizedLambdaExpression: return "ERR_AttributesRequireParenthesizedLambdaExpression_Title";
                case ErrorCode.ERR_CannotInferDelegateType: return "ERR_CannotInferDelegateType_Title";
                case ErrorCode.ERR_InvalidNameInSubpattern: return "ERR_InvalidNameInSubpattern_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces_Title";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers: return "ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers_Title";
                case ErrorCode.ERR_BadAbstractUnaryOperatorSignature: return "ERR_BadAbstractUnaryOperatorSignature_Title";
                case ErrorCode.ERR_BadAbstractIncDecSignature: return "ERR_BadAbstractIncDecSignature_Title";
                case ErrorCode.ERR_BadAbstractIncDecRetType: return "ERR_BadAbstractIncDecRetType_Title";
                case ErrorCode.ERR_BadAbstractBinaryOperatorSignature: return "ERR_BadAbstractBinaryOperatorSignature_Title";
                case ErrorCode.ERR_BadAbstractShiftOperatorSignature: return "ERR_BadAbstractShiftOperatorSignature_Title";
                case ErrorCode.ERR_BadAbstractStaticMemberAccess: return "ERR_BadAbstractStaticMemberAccess_Title";
                case ErrorCode.ERR_ExpressionTreeContainsAbstractStaticMemberAccess: return "ERR_ExpressionTreeContainsAbstractStaticMemberAccess_Title";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotStatic: return "ERR_CloseUnimplementedInterfaceMemberNotStatic_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember_Title";
                case ErrorCode.ERR_ExplicitImplementationOfOperatorsMustBeStatic: return "ERR_ExplicitImplementationOfOperatorsMustBeStatic_Title";
                case ErrorCode.ERR_AbstractConversionNotInvolvingContainedType: return "ERR_AbstractConversionNotInvolvingContainedType_Title";
                case ErrorCode.ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod: return "ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod_Title";
                case ErrorCode.ERR_CantConvAnonMethReturnType: return "ERR_CantConvAnonMethReturnType_Title";
                case ErrorCode.ERR_BuilderAttributeDisallowed: return "ERR_BuilderAttributeDisallowed_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion10: return "ERR_FeatureNotAvailableInVersion10_Title";
                case ErrorCode.ERR_SimpleProgramIsEmpty: return "ERR_SimpleProgramIsEmpty_Title";
                case ErrorCode.ERR_LineSpanDirectiveInvalidValue: return "ERR_LineSpanDirectiveInvalidValue_Title";
                case ErrorCode.ERR_LineSpanDirectiveEndLessThanStart: return "ERR_LineSpanDirectiveEndLessThanStart_Title";
                case ErrorCode.ERR_WrongArityAsyncReturn: return "ERR_WrongArityAsyncReturn_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnMalformed: return "ERR_InterpolatedStringHandlerMethodReturnMalformed_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnInconsistent: return "ERR_InterpolatedStringHandlerMethodReturnInconsistent_Title";
                case ErrorCode.ERR_NullInvalidInterpolatedStringHandlerArgumentName: return "ERR_NullInvalidInterpolatedStringHandlerArgumentName_Title";
                case ErrorCode.ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName: return "ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName_Title";
                case ErrorCode.ERR_InvalidInterpolatedStringHandlerArgumentName: return "ERR_InvalidInterpolatedStringHandlerArgumentName_Title";
                case ErrorCode.ERR_TypeIsNotAnInterpolatedStringHandlerType: return "ERR_TypeIsNotAnInterpolatedStringHandlerType_Title";
                case ErrorCode.ERR_CannotUseSelfAsInterpolatedStringHandlerArgument: return "ERR_CannotUseSelfAsInterpolatedStringHandlerArgument_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentAttributeMalformed: return "ERR_InterpolatedStringHandlerArgumentAttributeMalformed_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString: return "ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified: return "ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified_Title";
                case ErrorCode.ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion: return "ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion_Title";
                case ErrorCode.ERR_InterpolatedStringHandlerCreationCannotUseDynamic: return "ERR_InterpolatedStringHandlerCreationCannotUseDynamic_Title";
                case ErrorCode.ERR_MultipleFileScopedNamespace: return "ERR_MultipleFileScopedNamespace_Title";
                case ErrorCode.ERR_FileScopedAndNormalNamespace: return "ERR_FileScopedAndNormalNamespace_Title";
                case ErrorCode.ERR_FileScopedNamespaceNotBeforeAllMembers: return "ERR_FileScopedNamespaceNotBeforeAllMembers_Title";
                case ErrorCode.ERR_NoImplicitConvTargetTypedConditional: return "ERR_NoImplicitConvTargetTypedConditional_Title";
                case ErrorCode.ERR_NonPublicParameterlessStructConstructor: return "ERR_NonPublicParameterlessStructConstructor_Title";
                case ErrorCode.ERR_NoConversionForCallerArgumentExpressionParam: return "ERR_NoConversionForCallerArgumentExpressionParam_Title";
                case ErrorCode.ERR_BadCallerArgumentExpressionParamWithoutDefaultValue: return "ERR_BadCallerArgumentExpressionParamWithoutDefaultValue_Title";
                case ErrorCode.ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString: return "ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString_Title";
                case ErrorCode.ERR_AttrTypeArgCannotBeTypeVar: return "ERR_AttrTypeArgCannotBeTypeVar_Title";
                case ErrorCode.ERR_AttrDependentTypeNotAllowed: return "ERR_AttrDependentTypeNotAllowed_Title";
                case ErrorCode.ERR_LambdaWithAttributesToExpressionTree: return "ERR_LambdaWithAttributesToExpressionTree_Title";
                case ErrorCode.ERR_LambdaExplicitReturnTypeVar: return "ERR_LambdaExplicitReturnTypeVar_Title";
                case ErrorCode.ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers: return "ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers_Title";
                case ErrorCode.ERR_CannotUseRefInUnmanagedCallersOnly: return "ERR_CannotUseRefInUnmanagedCallersOnly_Title";
                case ErrorCode.ERR_CannotBeMadeNullable: return "ERR_CannotBeMadeNullable_Title";
                case ErrorCode.ERR_UnsupportedTypeForListPattern: return "ERR_UnsupportedTypeForListPattern_Title";
                case ErrorCode.ERR_MisplacedSlicePattern: return "ERR_MisplacedSlicePattern_Title";
                case ErrorCode.ERR_RecordStructConstructorCallsDefaultConstructor: return "ERR_RecordStructConstructorCallsDefaultConstructor_Title";
                case ErrorCode.ERR_StructHasInitializersAndNoDeclaredConstructor: return "ERR_StructHasInitializersAndNoDeclaredConstructor_Title";
                case ErrorCode.ERR_ListPatternRequiresLength: return "ERR_ListPatternRequiresLength_Title";
                case ErrorCode.ERR_ScopedMismatchInParameterOfTarget: return "ERR_ScopedMismatchInParameterOfTarget_Title";
                case ErrorCode.ERR_ScopedMismatchInParameterOfOverrideOrImplementation: return "ERR_ScopedMismatchInParameterOfOverrideOrImplementation_Title";
                case ErrorCode.ERR_ScopedMismatchInParameterOfPartial: return "ERR_ScopedMismatchInParameterOfPartial_Title";
                case ErrorCode.ERR_ParameterNullCheckingNotSupported: return "ERR_ParameterNullCheckingNotSupported_Title";
                case ErrorCode.ERR_RawStringNotInDirectives: return "ERR_RawStringNotInDirectives_Title";
                case ErrorCode.ERR_UnterminatedRawString: return "ERR_UnterminatedRawString_Title";
                case ErrorCode.ERR_TooManyQuotesForRawString: return "ERR_TooManyQuotesForRawString_Title";
                case ErrorCode.ERR_LineDoesNotStartWithSameWhitespace: return "ERR_LineDoesNotStartWithSameWhitespace_Title";
                case ErrorCode.ERR_RawStringDelimiterOnOwnLine: return "ERR_RawStringDelimiterOnOwnLine_Title";
                case ErrorCode.ERR_RawStringInVerbatimInterpolatedStrings: return "ERR_RawStringInVerbatimInterpolatedStrings_Title";
                case ErrorCode.ERR_RawStringMustContainContent: return "ERR_RawStringMustContainContent_Title";
                case ErrorCode.ERR_LineContainsDifferentWhitespace: return "ERR_LineContainsDifferentWhitespace_Title";
                case ErrorCode.ERR_NotEnoughQuotesForRawString: return "ERR_NotEnoughQuotesForRawString_Title";
                case ErrorCode.ERR_NotEnoughCloseBracesForRawString: return "ERR_NotEnoughCloseBracesForRawString_Title";
                case ErrorCode.ERR_TooManyOpenBracesForRawString: return "ERR_TooManyOpenBracesForRawString_Title";
                case ErrorCode.ERR_TooManyCloseBracesForRawString: return "ERR_TooManyCloseBracesForRawString_Title";
                case ErrorCode.ERR_IllegalAtSequence: return "ERR_IllegalAtSequence_Title";
                case ErrorCode.ERR_StringMustStartWithQuoteCharacter: return "ERR_StringMustStartWithQuoteCharacter_Title";
                case ErrorCode.ERR_NoEnumConstraint: return "ERR_NoEnumConstraint_Title";
                case ErrorCode.ERR_NoDelegateConstraint: return "ERR_NoDelegateConstraint_Title";
                case ErrorCode.ERR_MisplacedRecord: return "ERR_MisplacedRecord_Title";
                case ErrorCode.ERR_PatternSpanCharCannotBeStringNull: return "ERR_PatternSpanCharCannotBeStringNull_Title";
                case ErrorCode.ERR_UseDefViolationPropertyUnsupportedVersion: return "ERR_UseDefViolationPropertyUnsupportedVersion_Title";
                case ErrorCode.ERR_UseDefViolationFieldUnsupportedVersion: return "ERR_UseDefViolationFieldUnsupportedVersion_Title";
                case ErrorCode.ERR_OperatorCantBeChecked: return "ERR_OperatorCantBeChecked_Title";
                case ErrorCode.ERR_ImplicitConversionOperatorCantBeChecked: return "ERR_ImplicitConversionOperatorCantBeChecked_Title";
                case ErrorCode.ERR_CheckedOperatorNeedsMatch: return "ERR_CheckedOperatorNeedsMatch_Title";
                case ErrorCode.ERR_CannotBeConvertedToUtf8: return "ERR_CannotBeConvertedToUtf8_Title";
                case ErrorCode.ERR_MisplacedUnchecked: return "ERR_MisplacedUnchecked_Title";
                case ErrorCode.ERR_LineSpanDirectiveRequiresSpace: return "ERR_LineSpanDirectiveRequiresSpace_Title";
                case ErrorCode.ERR_RequiredNameDisallowed: return "ERR_RequiredNameDisallowed_Title";
                case ErrorCode.ERR_OverrideMustHaveRequired: return "ERR_OverrideMustHaveRequired_Title";
                case ErrorCode.ERR_RequiredMemberCannotBeHidden: return "ERR_RequiredMemberCannotBeHidden_Title";
                case ErrorCode.ERR_RequiredMemberCannotBeLessVisibleThanContainingType: return "ERR_RequiredMemberCannotBeLessVisibleThanContainingType_Title";
                case ErrorCode.ERR_ExplicitRequiredMember: return "ERR_ExplicitRequiredMember_Title";
                case ErrorCode.ERR_RequiredMemberMustBeSettable: return "ERR_RequiredMemberMustBeSettable_Title";
                case ErrorCode.ERR_RequiredMemberMustBeSet: return "ERR_RequiredMemberMustBeSet_Title";
                case ErrorCode.ERR_RequiredMembersMustBeAssignedValue: return "ERR_RequiredMembersMustBeAssignedValue_Title";
                case ErrorCode.ERR_RequiredMembersInvalid: return "ERR_RequiredMembersInvalid_Title";
                case ErrorCode.ERR_RequiredMembersBaseTypeInvalid: return "ERR_RequiredMembersBaseTypeInvalid_Title";
                case ErrorCode.ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers: return "ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers_Title";
                case ErrorCode.ERR_NewConstraintCannotHaveRequiredMembers: return "ERR_NewConstraintCannotHaveRequiredMembers_Title";
                case ErrorCode.ERR_UnsupportedCompilerFeature: return "ERR_UnsupportedCompilerFeature_Title";
                case ErrorCode.ERR_RefReturningPropertiesCannotBeRequired: return "ERR_RefReturningPropertiesCannotBeRequired_Title";
                case ErrorCode.ERR_ImplicitImplementationOfInaccessibleInterfaceMember: return "ERR_ImplicitImplementationOfInaccessibleInterfaceMember_Title";
                case ErrorCode.ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers: return "ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers_Title";
                case ErrorCode.ERR_BadAbstractEqualityOperatorSignature: return "ERR_BadAbstractEqualityOperatorSignature_Title";
                case ErrorCode.ERR_BadBinaryReadOnlySpanConcatenation: return "ERR_BadBinaryReadOnlySpanConcatenation_Title";
                case ErrorCode.ERR_ScopedRefAndRefStructOnly: return "ERR_ScopedRefAndRefStructOnly_Title";
                case ErrorCode.ERR_FixedFieldMustNotBeRef: return "ERR_FixedFieldMustNotBeRef_Title";
                case ErrorCode.ERR_RefFieldCannotReferToRefStruct: return "ERR_RefFieldCannotReferToRefStruct_Title";
                case ErrorCode.ERR_FileTypeDisallowedInSignature: return "ERR_FileTypeDisallowedInSignature_Title";
                case ErrorCode.ERR_FileTypeNoExplicitAccessibility: return "ERR_FileTypeNoExplicitAccessibility_Title";
                case ErrorCode.ERR_FileTypeBase: return "ERR_FileTypeBase_Title";
                case ErrorCode.ERR_FileTypeNested: return "ERR_FileTypeNested_Title";
                case ErrorCode.ERR_GlobalUsingStaticFileType: return "ERR_GlobalUsingStaticFileType_Title";
                case ErrorCode.ERR_FileTypeNameDisallowed: return "ERR_FileTypeNameDisallowed_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion11: return "ERR_FeatureNotAvailableInVersion11_Title";
                case ErrorCode.ERR_RefFieldInNonRefStruct: return "ERR_RefFieldInNonRefStruct_Title";
                case ErrorCode.ERR_CannotMatchOnINumberBase: return "ERR_CannotMatchOnINumberBase_Title";
                case ErrorCode.ERR_ScopedDiscard: return "ERR_ScopedDiscard_Title";
                case ErrorCode.ERR_ScopedTypeNameDisallowed: return "ERR_ScopedTypeNameDisallowed_Title";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedTarget: return "ERR_UnscopedRefAttributeUnsupportedTarget_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportRefFields: return "ERR_RuntimeDoesNotSupportRefFields_Title";
                case ErrorCode.ERR_ExplicitScopedRef: return "ERR_ExplicitScopedRef_Title";
                case ErrorCode.ERR_UnscopedScoped: return "ERR_UnscopedScoped_Title";
                case ErrorCode.ERR_FileTypeNonUniquePath: return "ERR_FileTypeNonUniquePath_Title";
                case ErrorCode.ERR_FilePathCannotBeConvertedToUtf8: return "ERR_FilePathCannotBeConvertedToUtf8_Title";
                case ErrorCode.ERR_FileLocalDuplicateNameInNS: return "ERR_FileLocalDuplicateNameInNS_Title";
                case ErrorCode.ERR_DeconstructVariableCannotBeByRef: return "ERR_DeconstructVariableCannotBeByRef_Title";
                case ErrorCode.ERR_RefReturnScopedParameter: return "ERR_RefReturnScopedParameter_Title";
                case ErrorCode.ERR_RefReturnScopedParameter2: return "ERR_RefReturnScopedParameter2_Title";
                case ErrorCode.ERR_RefReturnOnlyParameter: return "ERR_RefReturnOnlyParameter_Title";
                case ErrorCode.ERR_RefReturnOnlyParameter2: return "ERR_RefReturnOnlyParameter2_Title";
                case ErrorCode.ERR_RefAssignReturnOnly: return "ERR_RefAssignReturnOnly_Title";
                case ErrorCode.ERR_RefAssignValEscapeWider: return "ERR_RefAssignValEscapeWider_Title";
                case ErrorCode.ERR_ImplicitlyTypedDefaultParameter: return "ERR_ImplicitlyTypedDefaultParameter_Title";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedMemberTarget: return "ERR_UnscopedRefAttributeUnsupportedMemberTarget_Title";
                case ErrorCode.ERR_UnscopedRefAttributeInterfaceImplementation: return "ERR_UnscopedRefAttributeInterfaceImplementation_Title";
                case ErrorCode.ERR_UnrecognizedRefSafetyRulesAttributeVersion: return "ERR_UnrecognizedRefSafetyRulesAttributeVersion_Title";
                case ErrorCode.ERR_InvalidPrimaryConstructorParameterReference: return "ERR_InvalidPrimaryConstructorParameterReference_Title";
                case ErrorCode.ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver: return "ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver_Title";
                case ErrorCode.ERR_AnonDelegateCantUseRefLike: return "ERR_AnonDelegateCantUseRefLike_Title";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRef: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRef_Title";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike_Title";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember_Title";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured_Title";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter: return "ERR_AssgReadonlyPrimaryConstructorParameter_Title";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter: return "ERR_RefReturnReadonlyPrimaryConstructorParameter_Title";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter: return "ERR_RefReadonlyPrimaryConstructorParameter_Title";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter2: return "ERR_AssgReadonlyPrimaryConstructorParameter2_Title";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter2: return "ERR_RefReturnReadonlyPrimaryConstructorParameter2_Title";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter2: return "ERR_RefReadonlyPrimaryConstructorParameter2_Title";
                case ErrorCode.ERR_RefReturnPrimaryConstructorParameter: return "ERR_RefReturnPrimaryConstructorParameter_Title";
                case ErrorCode.ERR_StructLayoutCyclePrimaryConstructorParameter: return "ERR_StructLayoutCyclePrimaryConstructorParameter_Title";
                case ErrorCode.ERR_UnexpectedParameterList: return "ERR_UnexpectedParameterList_Title";
                case ErrorCode.ERR_BadRefInUsingAlias: return "ERR_BadRefInUsingAlias_Title";
                case ErrorCode.ERR_BadUnsafeInUsingDirective: return "ERR_BadUnsafeInUsingDirective_Title";
                case ErrorCode.ERR_BadNullableReferenceTypeInUsingAlias: return "ERR_BadNullableReferenceTypeInUsingAlias_Title";
                case ErrorCode.ERR_BadStaticAfterUnsafe: return "ERR_BadStaticAfterUnsafe_Title";
                case ErrorCode.ERR_BadCaseInSwitchArm: return "ERR_BadCaseInSwitchArm_Title";
                case ErrorCode.ERR_ConstantValueOfTypeExpected: return "ERR_ConstantValueOfTypeExpected_Title";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny_Title";
                case ErrorCode.ERR_InterceptorsFeatureNotEnabled: return "ERR_InterceptorsFeatureNotEnabled_Title";
                case ErrorCode.ERR_InterceptorContainingTypeCannotBeGeneric: return "ERR_InterceptorContainingTypeCannotBeGeneric_Title";
                case ErrorCode.ERR_InterceptorPathNotInCompilation: return "ERR_InterceptorPathNotInCompilation_Title";
                case ErrorCode.ERR_InterceptorPathNotInCompilationWithCandidate: return "ERR_InterceptorPathNotInCompilationWithCandidate_Title";
                case ErrorCode.ERR_InterceptorPositionBadToken: return "ERR_InterceptorPositionBadToken_Title";
                case ErrorCode.ERR_InterceptorLineOutOfRange: return "ERR_InterceptorLineOutOfRange_Title";
                case ErrorCode.ERR_InterceptorCharacterOutOfRange: return "ERR_InterceptorCharacterOutOfRange_Title";
                case ErrorCode.ERR_InterceptorSignatureMismatch: return "ERR_InterceptorSignatureMismatch_Title";
                case ErrorCode.ERR_InterceptorMethodMustBeOrdinary: return "ERR_InterceptorMethodMustBeOrdinary_Title";
                case ErrorCode.ERR_InterceptorMustReferToStartOfTokenPosition: return "ERR_InterceptorMustReferToStartOfTokenPosition_Title";
                case ErrorCode.ERR_InterceptorMustHaveMatchingThisParameter: return "ERR_InterceptorMustHaveMatchingThisParameter_Title";
                case ErrorCode.ERR_InterceptorMustNotHaveThisParameter: return "ERR_InterceptorMustNotHaveThisParameter_Title";
                case ErrorCode.ERR_InterceptorFilePathCannotBeNull: return "ERR_InterceptorFilePathCannotBeNull_Title";
                case ErrorCode.ERR_InterceptorNameNotInvoked: return "ERR_InterceptorNameNotInvoked_Title";
                case ErrorCode.ERR_InterceptorNonUniquePath: return "ERR_InterceptorNonUniquePath_Title";
                case ErrorCode.ERR_DuplicateInterceptor: return "ERR_DuplicateInterceptor_Title";
                case ErrorCode.ERR_InterceptorNotAccessible: return "ERR_InterceptorNotAccessible_Title";
                case ErrorCode.ERR_InterceptorScopedMismatch: return "ERR_InterceptorScopedMismatch_Title";
                case ErrorCode.ERR_InterceptorLineCharacterMustBePositive: return "ERR_InterceptorLineCharacterMustBePositive_Title";
                case ErrorCode.ERR_InterceptorCannotInterceptNameof: return "ERR_InterceptorCannotInterceptNameof_Title";
                case ErrorCode.ERR_InterceptorCannotUseUnmanagedCallersOnly: return "ERR_InterceptorCannotUseUnmanagedCallersOnly_Title";
                case ErrorCode.ERR_BadUsingStaticType: return "ERR_BadUsingStaticType_Title";
                case ErrorCode.ERR_SymbolDefinedInAssembly: return "ERR_SymbolDefinedInAssembly_Title";
                case ErrorCode.ERR_InlineArrayConversionToSpanNotSupported: return "ERR_InlineArrayConversionToSpanNotSupported_Title";
                case ErrorCode.ERR_InlineArrayConversionToReadOnlySpanNotSupported: return "ERR_InlineArrayConversionToReadOnlySpanNotSupported_Title";
                case ErrorCode.ERR_InlineArrayIndexOutOfRange: return "ERR_InlineArrayIndexOutOfRange_Title";
                case ErrorCode.ERR_InvalidInlineArrayLength: return "ERR_InvalidInlineArrayLength_Title";
                case ErrorCode.ERR_InvalidInlineArrayLayout: return "ERR_InvalidInlineArrayLayout_Title";
                case ErrorCode.ERR_InvalidInlineArrayFields: return "ERR_InvalidInlineArrayFields_Title";
                case ErrorCode.ERR_ExpressionTreeContainsInlineArrayOperation: return "ERR_ExpressionTreeContainsInlineArrayOperation_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportInlineArrayTypes: return "ERR_RuntimeDoesNotSupportInlineArrayTypes_Title";
                case ErrorCode.ERR_InlineArrayBadIndex: return "ERR_InlineArrayBadIndex_Title";
                case ErrorCode.ERR_NamedArgumentForInlineArray: return "ERR_NamedArgumentForInlineArray_Title";
                case ErrorCode.ERR_CollectionExpressionTargetTypeNotConstructible: return "ERR_CollectionExpressionTargetTypeNotConstructible_Title";
                case ErrorCode.ERR_ExpressionTreeContainsCollectionExpression: return "ERR_ExpressionTreeContainsCollectionExpression_Title";
                case ErrorCode.ERR_CollectionExpressionNoTargetType: return "ERR_CollectionExpressionNoTargetType_Title";
                case ErrorCode.ERR_InterceptorArityNotCompatible: return "ERR_InterceptorArityNotCompatible_Title";
                case ErrorCode.ERR_InterceptorCannotBeGeneric: return "ERR_InterceptorCannotBeGeneric_Title";
                case ErrorCode.ERR_InlineArrayUnsupportedElementFieldModifier: return "ERR_InlineArrayUnsupportedElementFieldModifier_Title";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidType: return "ERR_CollectionBuilderAttributeInvalidType_Title";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidMethodName: return "ERR_CollectionBuilderAttributeInvalidMethodName_Title";
                case ErrorCode.ERR_CollectionBuilderAttributeMethodNotFound: return "ERR_CollectionBuilderAttributeMethodNotFound_Title";
                case ErrorCode.ERR_CollectionBuilderNoElementType: return "ERR_CollectionBuilderNoElementType_Title";
                case ErrorCode.ERR_InlineArrayForEachNotSupported: return "ERR_InlineArrayForEachNotSupported_Title";
                case ErrorCode.ERR_RefReadOnlyWrongOrdering: return "ERR_RefReadOnlyWrongOrdering_Title";
                case ErrorCode.ERR_BadArgExtraRefLangVersion: return "ERR_BadArgExtraRefLangVersion_Title";
                case ErrorCode.ERR_OutAttrOnRefReadonlyParam: return "ERR_OutAttrOnRefReadonlyParam_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion12: return "ERR_FeatureNotAvailableInVersion12_Title";
                case ErrorCode.ERR_CollectionExpressionEscape: return "ERR_CollectionExpressionEscape_Title";
                case ErrorCode.ERR_ExpectedInterpolatedString: return "ERR_ExpectedInterpolatedString_Title";
                case ErrorCode.ERR_InterceptorGlobalNamespace: return "ERR_InterceptorGlobalNamespace_Title";
                case ErrorCode.ERR_InterceptableMethodMustBeOrdinary: return "ERR_InterceptableMethodMustBeOrdinary_Title";
                case ErrorCode.ERR_CollectionExpressionImmutableArray: return "ERR_CollectionExpressionImmutableArray_Title";
                case ErrorCode.ERR_InvalidExperimentalDiagID: return "ERR_InvalidExperimentalDiagID_Title";
                case ErrorCode.ERR_SpreadMissingMember: return "ERR_SpreadMissingMember_Title";
                case ErrorCode.ERR_CollectionExpressionTargetNoElementType: return "ERR_CollectionExpressionTargetNoElementType_Title";
                case ErrorCode.ERR_CollectionExpressionMissingConstructor: return "ERR_CollectionExpressionMissingConstructor_Title";
                case ErrorCode.ERR_CollectionExpressionMissingAdd: return "ERR_CollectionExpressionMissingAdd_Title";
                case ErrorCode.ERR_RefLocalAcrossAwait: return "ERR_RefLocalAcrossAwait_Title";
                case ErrorCode.ERR_DynamicDispatchToParamsCollection: return "ERR_DynamicDispatchToParamsCollection_Title";
                case ErrorCode.ERR_CollectionInitializerInfiniteChainOfAddCalls: return "ERR_CollectionInitializerInfiniteChainOfAddCalls_Title";
                case ErrorCode.ERR_ParamsCollectionInfiniteChainOfConstructorCalls: return "ERR_ParamsCollectionInfiniteChainOfConstructorCalls_Title";
                case ErrorCode.ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember: return "ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember_Title";
                case ErrorCode.ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember: return "ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember_Title";
                case ErrorCode.ERR_ParamsCollectionExpressionTree: return "ERR_ParamsCollectionExpressionTree_Title";
                case ErrorCode.ERR_ParamsCollectionExtensionAddMethod: return "ERR_ParamsCollectionExtensionAddMethod_Title";
                case ErrorCode.ERR_ParamsCollectionMissingConstructor: return "ERR_ParamsCollectionMissingConstructor_Title";
                case ErrorCode.ERR_NoModifiersOnUsing: return "ERR_NoModifiersOnUsing_Title";
                case ErrorCode.ERR_CannotDynamicInvokeOnExpression: return "ERR_CannotDynamicInvokeOnExpression_Title";
                case ErrorCode.ERR_InterceptsLocationDataInvalidFormat: return "ERR_InterceptsLocationDataInvalidFormat_Title";
                case ErrorCode.ERR_InterceptsLocationUnsupportedVersion: return "ERR_InterceptsLocationUnsupportedVersion_Title";
                case ErrorCode.ERR_InterceptsLocationDuplicateFile: return "ERR_InterceptsLocationDuplicateFile_Title";
                case ErrorCode.ERR_InterceptsLocationFileNotFound: return "ERR_InterceptsLocationFileNotFound_Title";
                case ErrorCode.ERR_InterceptsLocationDataInvalidPosition: return "ERR_InterceptsLocationDataInvalidPosition_Title";
                case ErrorCode.ERR_BadYieldInUnsafe: return "ERR_BadYieldInUnsafe_Title";
                case ErrorCode.ERR_AddressOfInIterator: return "ERR_AddressOfInIterator_Title";
                case ErrorCode.ERR_RuntimeDoesNotSupportByRefLikeGenerics: return "ERR_RuntimeDoesNotSupportByRefLikeGenerics_Title";
                case ErrorCode.ERR_RefStructConstraintAlreadySpecified: return "ERR_RefStructConstraintAlreadySpecified_Title";
                case ErrorCode.ERR_AllowsClauseMustBeLast: return "ERR_AllowsClauseMustBeLast_Title";
                case ErrorCode.ERR_ClassIsCombinedWithRefStruct: return "ERR_ClassIsCombinedWithRefStruct_Title";
                case ErrorCode.ERR_NotRefStructConstraintNotSatisfied: return "ERR_NotRefStructConstraintNotSatisfied_Title";
                case ErrorCode.ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember_Title";
                case ErrorCode.ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike: return "ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike_Title";
                case ErrorCode.ERR_BadAllowByRefLikeEnumerator: return "ERR_BadAllowByRefLikeEnumerator_Title";
                case ErrorCode.ERR_PartialPropertyMissingImplementation: return "ERR_PartialPropertyMissingImplementation_Title";
                case ErrorCode.ERR_PartialPropertyMissingDefinition: return "ERR_PartialPropertyMissingDefinition_Title";
                case ErrorCode.ERR_PartialPropertyDuplicateDefinition: return "ERR_PartialPropertyDuplicateDefinition_Title";
                case ErrorCode.ERR_PartialPropertyDuplicateImplementation: return "ERR_PartialPropertyDuplicateImplementation_Title";
                case ErrorCode.ERR_PartialPropertyMissingAccessor: return "ERR_PartialPropertyMissingAccessor_Title";
                case ErrorCode.ERR_PartialPropertyUnexpectedAccessor: return "ERR_PartialPropertyUnexpectedAccessor_Title";
                case ErrorCode.ERR_PartialPropertyInitMismatch: return "ERR_PartialPropertyInitMismatch_Title";
                case ErrorCode.ERR_PartialPropertyTypeDifference: return "ERR_PartialPropertyTypeDifference_Title";
                case ErrorCode.ERR_PartialPropertyRequiredDifference: return "ERR_PartialPropertyRequiredDifference_Title";
                case ErrorCode.ERR_InlineArrayAttributeOnRecord: return "ERR_InlineArrayAttributeOnRecord_Title";
                case ErrorCode.ERR_FeatureNotAvailableInVersion13: return "ERR_FeatureNotAvailableInVersion13_Title";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToOverride: return "ERR_CannotApplyOverloadResolutionPriorityToOverride_Title";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToMember: return "ERR_CannotApplyOverloadResolutionPriorityToMember_Title";
                default: throw ExceptionUtilities.UnexpectedValue(code);
            }
        }
        public static string ToStringWithDescription(ErrorCode code)
        {
            switch (code)
            {
                case ErrorCode.WRN_InvalidMainSig: return "WRN_InvalidMainSig_Description";
                case ErrorCode.WRN_UnreferencedEvent: return "WRN_UnreferencedEvent_Description";
                case ErrorCode.WRN_LowercaseEllSuffix: return "WRN_LowercaseEllSuffix_Description";
                case ErrorCode.WRN_DuplicateUsing: return "WRN_DuplicateUsing_Description";
                case ErrorCode.WRN_NewRequired: return "WRN_NewRequired_Description";
                case ErrorCode.WRN_NewNotRequired: return "WRN_NewNotRequired_Description";
                case ErrorCode.WRN_NewOrOverrideExpected: return "WRN_NewOrOverrideExpected_Description";
                case ErrorCode.WRN_UnreachableCode: return "WRN_UnreachableCode_Description";
                case ErrorCode.WRN_UnreferencedLabel: return "WRN_UnreferencedLabel_Description";
                case ErrorCode.WRN_UnreferencedVar: return "WRN_UnreferencedVar_Description";
                case ErrorCode.WRN_UnreferencedField: return "WRN_UnreferencedField_Description";
                case ErrorCode.WRN_IsAlwaysTrue: return "WRN_IsAlwaysTrue_Description";
                case ErrorCode.WRN_IsAlwaysFalse: return "WRN_IsAlwaysFalse_Description";
                case ErrorCode.WRN_ByRefNonAgileField: return "WRN_ByRefNonAgileField_Description";
                case ErrorCode.WRN_UnreferencedVarAssg: return "WRN_UnreferencedVarAssg_Description";
                case ErrorCode.WRN_NegativeArrayIndex: return "WRN_NegativeArrayIndex_Description";
                case ErrorCode.WRN_BadRefCompareLeft: return "WRN_BadRefCompareLeft_Description";
                case ErrorCode.WRN_BadRefCompareRight: return "WRN_BadRefCompareRight_Description";
                case ErrorCode.WRN_PatternIsAmbiguous: return "WRN_PatternIsAmbiguous_Description";
                case ErrorCode.WRN_PatternNotPublicOrNotInstance: return "WRN_PatternNotPublicOrNotInstance_Description";
                case ErrorCode.WRN_PatternBadSignature: return "WRN_PatternBadSignature_Description";
                case ErrorCode.WRN_SequentialOnPartialClass: return "WRN_SequentialOnPartialClass_Description";
                case ErrorCode.WRN_MainCantBeGeneric: return "WRN_MainCantBeGeneric_Description";
                case ErrorCode.WRN_UnreferencedFieldAssg: return "WRN_UnreferencedFieldAssg_Description";
                case ErrorCode.WRN_AmbiguousXMLReference: return "WRN_AmbiguousXMLReference_Description";
                case ErrorCode.WRN_VolatileByRef: return "WRN_VolatileByRef_Description";
                case ErrorCode.WRN_SameFullNameThisNsAgg: return "WRN_SameFullNameThisNsAgg_Description";
                case ErrorCode.WRN_SameFullNameThisAggAgg: return "WRN_SameFullNameThisAggAgg_Description";
                case ErrorCode.WRN_SameFullNameThisAggNs: return "WRN_SameFullNameThisAggNs_Description";
                case ErrorCode.WRN_GlobalAliasDefn: return "WRN_GlobalAliasDefn_Description";
                case ErrorCode.WRN_AlwaysNull: return "WRN_AlwaysNull_Description";
                case ErrorCode.WRN_CmpAlwaysFalse: return "WRN_CmpAlwaysFalse_Description";
                case ErrorCode.WRN_FinalizeMethod: return "WRN_FinalizeMethod_Description";
                case ErrorCode.WRN_GotoCaseShouldConvert: return "WRN_GotoCaseShouldConvert_Description";
                case ErrorCode.WRN_NubExprIsConstBool: return "WRN_NubExprIsConstBool_Description";
                case ErrorCode.WRN_ExplicitImplCollision: return "WRN_ExplicitImplCollision_Description";
                case ErrorCode.WRN_DeprecatedSymbol: return "WRN_DeprecatedSymbol_Description";
                case ErrorCode.WRN_DeprecatedSymbolStr: return "WRN_DeprecatedSymbolStr_Description";
                case ErrorCode.WRN_ExternMethodNoImplementation: return "WRN_ExternMethodNoImplementation_Description";
                case ErrorCode.WRN_ProtectedInSealed: return "WRN_ProtectedInSealed_Description";
                case ErrorCode.WRN_PossibleMistakenNullStatement: return "WRN_PossibleMistakenNullStatement_Description";
                case ErrorCode.WRN_UnassignedInternalField: return "WRN_UnassignedInternalField_Description";
                case ErrorCode.WRN_VacuousIntegralComp: return "WRN_VacuousIntegralComp_Description";
                case ErrorCode.WRN_AttributeLocationOnBadDeclaration: return "WRN_AttributeLocationOnBadDeclaration_Description";
                case ErrorCode.WRN_InvalidAttributeLocation: return "WRN_InvalidAttributeLocation_Description";
                case ErrorCode.WRN_EqualsWithoutGetHashCode: return "WRN_EqualsWithoutGetHashCode_Description";
                case ErrorCode.WRN_EqualityOpWithoutEquals: return "WRN_EqualityOpWithoutEquals_Description";
                case ErrorCode.WRN_EqualityOpWithoutGetHashCode: return "WRN_EqualityOpWithoutGetHashCode_Description";
                case ErrorCode.WRN_IncorrectBooleanAssg: return "WRN_IncorrectBooleanAssg_Description";
                case ErrorCode.WRN_NonObsoleteOverridingObsolete: return "WRN_NonObsoleteOverridingObsolete_Description";
                case ErrorCode.WRN_BitwiseOrSignExtend: return "WRN_BitwiseOrSignExtend_Description";
                case ErrorCode.WRN_CoClassWithoutComImport: return "WRN_CoClassWithoutComImport_Description";
                case ErrorCode.WRN_TypeParameterSameAsOuterTypeParameter: return "WRN_TypeParameterSameAsOuterTypeParameter_Description";
                case ErrorCode.WRN_AssignmentToLockOrDispose: return "WRN_AssignmentToLockOrDispose_Description";
                case ErrorCode.WRN_ObsoleteOverridingNonObsolete: return "WRN_ObsoleteOverridingNonObsolete_Description";
                case ErrorCode.WRN_DebugFullNameTooLong: return "WRN_DebugFullNameTooLong_Description";
                case ErrorCode.WRN_ExternCtorNoImplementation: return "WRN_ExternCtorNoImplementation_Description";
                case ErrorCode.WRN_WarningDirective: return "WRN_WarningDirective_Description";
                case ErrorCode.WRN_UnreachableGeneralCatch: return "WRN_UnreachableGeneralCatch_Description";
                case ErrorCode.WRN_DeprecatedCollectionInitAddStr: return "WRN_DeprecatedCollectionInitAddStr_Description";
                case ErrorCode.WRN_DeprecatedCollectionInitAdd: return "WRN_DeprecatedCollectionInitAdd_Description";
                case ErrorCode.WRN_DefaultValueForUnconsumedLocation: return "WRN_DefaultValueForUnconsumedLocation_Description";
                case ErrorCode.WRN_IdentifierOrNumericLiteralExpected: return "WRN_IdentifierOrNumericLiteralExpected_Description";
                case ErrorCode.WRN_EmptySwitch: return "WRN_EmptySwitch_Description";
                case ErrorCode.WRN_XMLParseError: return "WRN_XMLParseError_Description";
                case ErrorCode.WRN_DuplicateParamTag: return "WRN_DuplicateParamTag_Description";
                case ErrorCode.WRN_UnmatchedParamTag: return "WRN_UnmatchedParamTag_Description";
                case ErrorCode.WRN_MissingParamTag: return "WRN_MissingParamTag_Description";
                case ErrorCode.WRN_BadXMLRef: return "WRN_BadXMLRef_Description";
                case ErrorCode.WRN_BadXMLRefParamType: return "WRN_BadXMLRefParamType_Description";
                case ErrorCode.WRN_BadXMLRefReturnType: return "WRN_BadXMLRefReturnType_Description";
                case ErrorCode.WRN_BadXMLRefSyntax: return "WRN_BadXMLRefSyntax_Description";
                case ErrorCode.WRN_UnprocessedXMLComment: return "WRN_UnprocessedXMLComment_Description";
                case ErrorCode.WRN_FailedInclude: return "WRN_FailedInclude_Description";
                case ErrorCode.WRN_InvalidInclude: return "WRN_InvalidInclude_Description";
                case ErrorCode.WRN_MissingXMLComment: return "WRN_MissingXMLComment_Description";
                case ErrorCode.WRN_XMLParseIncludeError: return "WRN_XMLParseIncludeError_Description";
                case ErrorCode.WRN_ALinkWarn: return "WRN_ALinkWarn_Description";
                case ErrorCode.WRN_CmdOptionConflictsSource: return "WRN_CmdOptionConflictsSource_Description";
                case ErrorCode.WRN_IllegalPragma: return "WRN_IllegalPragma_Description";
                case ErrorCode.WRN_IllegalPPWarning: return "WRN_IllegalPPWarning_Description";
                case ErrorCode.WRN_BadRestoreNumber: return "WRN_BadRestoreNumber_Description";
                case ErrorCode.WRN_NonECMAFeature: return "WRN_NonECMAFeature_Description";
                case ErrorCode.WRN_ErrorOverride: return "WRN_ErrorOverride_Description";
                case ErrorCode.WRN_InvalidSearchPathDir: return "WRN_InvalidSearchPathDir_Description";
                case ErrorCode.WRN_MultiplePredefTypes: return "WRN_MultiplePredefTypes_Description";
                case ErrorCode.WRN_TooManyLinesForDebugger: return "WRN_TooManyLinesForDebugger_Description";
                case ErrorCode.WRN_CallOnNonAgileField: return "WRN_CallOnNonAgileField_Description";
                case ErrorCode.WRN_InvalidNumber: return "WRN_InvalidNumber_Description";
                case ErrorCode.WRN_IllegalPPChecksum: return "WRN_IllegalPPChecksum_Description";
                case ErrorCode.WRN_EndOfPPLineExpected: return "WRN_EndOfPPLineExpected_Description";
                case ErrorCode.WRN_ConflictingChecksum: return "WRN_ConflictingChecksum_Description";
                case ErrorCode.WRN_InvalidAssemblyName: return "WRN_InvalidAssemblyName_Description";
                case ErrorCode.WRN_UnifyReferenceMajMin: return "WRN_UnifyReferenceMajMin_Description";
                case ErrorCode.WRN_UnifyReferenceBldRev: return "WRN_UnifyReferenceBldRev_Description";
                case ErrorCode.WRN_DuplicateTypeParamTag: return "WRN_DuplicateTypeParamTag_Description";
                case ErrorCode.WRN_UnmatchedTypeParamTag: return "WRN_UnmatchedTypeParamTag_Description";
                case ErrorCode.WRN_MissingTypeParamTag: return "WRN_MissingTypeParamTag_Description";
                case ErrorCode.WRN_AssignmentToSelf: return "WRN_AssignmentToSelf_Description";
                case ErrorCode.WRN_ComparisonToSelf: return "WRN_ComparisonToSelf_Description";
                case ErrorCode.WRN_DotOnDefault: return "WRN_DotOnDefault_Description";
                case ErrorCode.WRN_BadXMLRefTypeVar: return "WRN_BadXMLRefTypeVar_Description";
                case ErrorCode.WRN_UnmatchedParamRefTag: return "WRN_UnmatchedParamRefTag_Description";
                case ErrorCode.WRN_UnmatchedTypeParamRefTag: return "WRN_UnmatchedTypeParamRefTag_Description";
                case ErrorCode.WRN_ReferencedAssemblyReferencesLinkedPIA: return "WRN_ReferencedAssemblyReferencesLinkedPIA_Description";
                case ErrorCode.WRN_CantHaveManifestForModule: return "WRN_CantHaveManifestForModule_Description";
                case ErrorCode.WRN_MultipleRuntimeImplementationMatches: return "WRN_MultipleRuntimeImplementationMatches_Description";
                case ErrorCode.WRN_MultipleRuntimeOverrideMatches: return "WRN_MultipleRuntimeOverrideMatches_Description";
                case ErrorCode.WRN_DynamicDispatchToConditionalMethod: return "WRN_DynamicDispatchToConditionalMethod_Description";
                case ErrorCode.WRN_IsDynamicIsConfusing: return "WRN_IsDynamicIsConfusing_Description";
                case ErrorCode.WRN_AsyncLacksAwaits: return "WRN_AsyncLacksAwaits_Description";
                case ErrorCode.WRN_FileAlreadyIncluded: return "WRN_FileAlreadyIncluded_Description";
                case ErrorCode.WRN_NoSources: return "WRN_NoSources_Description";
                case ErrorCode.WRN_NoConfigNotOnCommandLine: return "WRN_NoConfigNotOnCommandLine_Description";
                case ErrorCode.WRN_DefineIdentifierRequired: return "WRN_DefineIdentifierRequired_Description";
                case ErrorCode.WRN_BadUILang: return "WRN_BadUILang_Description";
                case ErrorCode.WRN_CLS_NoVarArgs: return "WRN_CLS_NoVarArgs_Description";
                case ErrorCode.WRN_CLS_BadArgType: return "WRN_CLS_BadArgType_Description";
                case ErrorCode.WRN_CLS_BadReturnType: return "WRN_CLS_BadReturnType_Description";
                case ErrorCode.WRN_CLS_BadFieldPropType: return "WRN_CLS_BadFieldPropType_Description";
                case ErrorCode.WRN_CLS_BadIdentifierCase: return "WRN_CLS_BadIdentifierCase_Description";
                case ErrorCode.WRN_CLS_OverloadRefOut: return "WRN_CLS_OverloadRefOut_Description";
                case ErrorCode.WRN_CLS_OverloadUnnamed: return "WRN_CLS_OverloadUnnamed_Description";
                case ErrorCode.WRN_CLS_BadIdentifier: return "WRN_CLS_BadIdentifier_Description";
                case ErrorCode.WRN_CLS_BadBase: return "WRN_CLS_BadBase_Description";
                case ErrorCode.WRN_CLS_BadInterfaceMember: return "WRN_CLS_BadInterfaceMember_Description";
                case ErrorCode.WRN_CLS_NoAbstractMembers: return "WRN_CLS_NoAbstractMembers_Description";
                case ErrorCode.WRN_CLS_NotOnModules: return "WRN_CLS_NotOnModules_Description";
                case ErrorCode.WRN_CLS_ModuleMissingCLS: return "WRN_CLS_ModuleMissingCLS_Description";
                case ErrorCode.WRN_CLS_AssemblyNotCLS: return "WRN_CLS_AssemblyNotCLS_Description";
                case ErrorCode.WRN_CLS_BadAttributeType: return "WRN_CLS_BadAttributeType_Description";
                case ErrorCode.WRN_CLS_ArrayArgumentToAttribute: return "WRN_CLS_ArrayArgumentToAttribute_Description";
                case ErrorCode.WRN_CLS_NotOnModules2: return "WRN_CLS_NotOnModules2_Description";
                case ErrorCode.WRN_CLS_IllegalTrueInFalse: return "WRN_CLS_IllegalTrueInFalse_Description";
                case ErrorCode.WRN_CLS_MeaninglessOnPrivateType: return "WRN_CLS_MeaninglessOnPrivateType_Description";
                case ErrorCode.WRN_CLS_AssemblyNotCLS2: return "WRN_CLS_AssemblyNotCLS2_Description";
                case ErrorCode.WRN_CLS_MeaninglessOnParam: return "WRN_CLS_MeaninglessOnParam_Description";
                case ErrorCode.WRN_CLS_MeaninglessOnReturn: return "WRN_CLS_MeaninglessOnReturn_Description";
                case ErrorCode.WRN_CLS_BadTypeVar: return "WRN_CLS_BadTypeVar_Description";
                case ErrorCode.WRN_CLS_VolatileField: return "WRN_CLS_VolatileField_Description";
                case ErrorCode.WRN_CLS_BadInterface: return "WRN_CLS_BadInterface_Description";
                case ErrorCode.WRN_UnobservedAwaitableExpression: return "WRN_UnobservedAwaitableExpression_Description";
                case ErrorCode.WRN_CallerLineNumberParamForUnconsumedLocation: return "WRN_CallerLineNumberParamForUnconsumedLocation_Description";
                case ErrorCode.WRN_CallerFilePathParamForUnconsumedLocation: return "WRN_CallerFilePathParamForUnconsumedLocation_Description";
                case ErrorCode.WRN_CallerMemberNameParamForUnconsumedLocation: return "WRN_CallerMemberNameParamForUnconsumedLocation_Description";
                case ErrorCode.WRN_MainIgnored: return "WRN_MainIgnored_Description";
                case ErrorCode.WRN_StaticInAsOrIs: return "WRN_StaticInAsOrIs_Description";
                case ErrorCode.WRN_DelaySignButNoKey: return "WRN_DelaySignButNoKey_Description";
                case ErrorCode.WRN_InvalidVersionFormat: return "WRN_InvalidVersionFormat_Description";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerMemberName: return "WRN_CallerFilePathPreferredOverCallerMemberName_Description";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerMemberName: return "WRN_CallerLineNumberPreferredOverCallerMemberName_Description";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerFilePath: return "WRN_CallerLineNumberPreferredOverCallerFilePath_Description";
                case ErrorCode.WRN_AssemblyAttributeFromModuleIsOverridden: return "WRN_AssemblyAttributeFromModuleIsOverridden_Description";
                case ErrorCode.WRN_FilterIsConstantTrue: return "WRN_FilterIsConstantTrue_Description";
                case ErrorCode.WRN_UnimplementedCommandLineSwitch: return "WRN_UnimplementedCommandLineSwitch_Description";
                case ErrorCode.WRN_ReferencedAssemblyDoesNotHaveStrongName: return "WRN_ReferencedAssemblyDoesNotHaveStrongName_Description";
                case ErrorCode.WRN_RefCultureMismatch: return "WRN_RefCultureMismatch_Description";
                case ErrorCode.WRN_ConflictingMachineAssembly: return "WRN_ConflictingMachineAssembly_Description";
                case ErrorCode.WRN_UnqualifiedNestedTypeInCref: return "WRN_UnqualifiedNestedTypeInCref_Description";
                case ErrorCode.WRN_NoRuntimeMetadataVersion: return "WRN_NoRuntimeMetadataVersion_Description";
                case ErrorCode.WRN_PdbLocalNameTooLong: return "WRN_PdbLocalNameTooLong_Description";
                case ErrorCode.WRN_AnalyzerCannotBeCreated: return "WRN_AnalyzerCannotBeCreated_Description";
                case ErrorCode.WRN_NoAnalyzerInAssembly: return "WRN_NoAnalyzerInAssembly_Description";
                case ErrorCode.WRN_UnableToLoadAnalyzer: return "WRN_UnableToLoadAnalyzer_Description";
                case ErrorCode.WRN_NubExprIsConstBool2: return "WRN_NubExprIsConstBool2_Description";
                case ErrorCode.WRN_AlignmentMagnitude: return "WRN_AlignmentMagnitude_Description";
                case ErrorCode.WRN_AttributeIgnoredWhenPublicSigning: return "WRN_AttributeIgnoredWhenPublicSigning_Description";
                case ErrorCode.WRN_TupleLiteralNameMismatch: return "WRN_TupleLiteralNameMismatch_Description";
                case ErrorCode.WRN_WindowsExperimental: return "WRN_WindowsExperimental_Description";
                case ErrorCode.WRN_UnreferencedLocalFunction: return "WRN_UnreferencedLocalFunction_Description";
                case ErrorCode.WRN_FilterIsConstantFalse: return "WRN_FilterIsConstantFalse_Description";
                case ErrorCode.WRN_FilterIsConstantFalseRedundantTryCatch: return "WRN_FilterIsConstantFalseRedundantTryCatch_Description";
                case ErrorCode.WRN_AttributesOnBackingFieldsNotAvailable: return "WRN_AttributesOnBackingFieldsNotAvailable_Description";
                case ErrorCode.WRN_TupleBinopLiteralNameMismatch: return "WRN_TupleBinopLiteralNameMismatch_Description";
                case ErrorCode.WRN_TypeParameterSameAsOuterMethodTypeParameter: return "WRN_TypeParameterSameAsOuterMethodTypeParameter_Description";
                case ErrorCode.WRN_UnconsumedEnumeratorCancellationAttributeUsage: return "WRN_UnconsumedEnumeratorCancellationAttributeUsage_Description";
                case ErrorCode.WRN_UndecoratedCancellationTokenParameter: return "WRN_UndecoratedCancellationTokenParameter_Description";
                case ErrorCode.WRN_ManagedAddr: return "WRN_ManagedAddr_Description";
                case ErrorCode.WRN_SwitchExpressionNotExhaustive: return "WRN_SwitchExpressionNotExhaustive_Description";
                case ErrorCode.WRN_CaseConstantNamedUnderscore: return "WRN_CaseConstantNamedUnderscore_Description";
                case ErrorCode.WRN_IsTypeNamedUnderscore: return "WRN_IsTypeNamedUnderscore_Description";
                case ErrorCode.WRN_GivenExpressionNeverMatchesPattern: return "WRN_GivenExpressionNeverMatchesPattern_Description";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesConstant: return "WRN_GivenExpressionAlwaysMatchesConstant_Description";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue: return "WRN_SwitchExpressionNotExhaustiveWithUnnamedEnumValue_Description";
                case ErrorCode.WRN_ThrowPossibleNull: return "WRN_ThrowPossibleNull_Description";
                case ErrorCode.WRN_ConvertingNullableToNonNullable: return "WRN_ConvertingNullableToNonNullable_Description";
                case ErrorCode.WRN_NullReferenceAssignment: return "WRN_NullReferenceAssignment_Description";
                case ErrorCode.WRN_NullReferenceReceiver: return "WRN_NullReferenceReceiver_Description";
                case ErrorCode.WRN_NullReferenceReturn: return "WRN_NullReferenceReturn_Description";
                case ErrorCode.WRN_NullReferenceArgument: return "WRN_NullReferenceArgument_Description";
                case ErrorCode.WRN_UnboxPossibleNull: return "WRN_UnboxPossibleNull_Description";
                case ErrorCode.WRN_DisallowNullAttributeForbidsMaybeNullAssignment: return "WRN_DisallowNullAttributeForbidsMaybeNullAssignment_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnOverride: return "WRN_NullabilityMismatchInTypeOnOverride_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnOverride: return "WRN_NullabilityMismatchInReturnTypeOnOverride_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnOverride: return "WRN_NullabilityMismatchInParameterTypeOnOverride_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnPartial: return "WRN_NullabilityMismatchInParameterTypeOnPartial_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInTypeOnImplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnImplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnImplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInTypeOnExplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInReturnTypeOnExplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_NullabilityMismatchInParameterTypeOnExplicitImplementation_Description";
                case ErrorCode.WRN_UninitializedNonNullableField: return "WRN_UninitializedNonNullableField_Description";
                case ErrorCode.WRN_NullabilityMismatchInAssignment: return "WRN_NullabilityMismatchInAssignment_Description";
                case ErrorCode.WRN_NullabilityMismatchInArgument: return "WRN_NullabilityMismatchInArgument_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOfTargetDelegate: return "WRN_NullabilityMismatchInReturnTypeOfTargetDelegate_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOfTargetDelegate: return "WRN_NullabilityMismatchInParameterTypeOfTargetDelegate_Description";
                case ErrorCode.WRN_NullabilityMismatchInArgumentForOutput: return "WRN_NullabilityMismatchInArgumentForOutput_Description";
                case ErrorCode.WRN_NullAsNonNullable: return "WRN_NullAsNonNullable_Description";
                case ErrorCode.WRN_NullableValueTypeMayBeNull: return "WRN_NullableValueTypeMayBeNull_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterConstraint: return "WRN_NullabilityMismatchInTypeParameterConstraint_Description";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotation: return "WRN_MissingNonNullTypesContextForAnnotation_Description";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnImplicitImplementation: return "WRN_NullabilityMismatchInConstraintsOnImplicitImplementation_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint: return "WRN_NullabilityMismatchInTypeParameterReferenceTypeConstraint_Description";
                case ErrorCode.WRN_NullabilityMismatchInExplicitlyImplementedInterface: return "WRN_NullabilityMismatchInExplicitlyImplementedInterface_Description";
                case ErrorCode.WRN_NullabilityMismatchInInterfaceImplementedByBase: return "WRN_NullabilityMismatchInInterfaceImplementedByBase_Description";
                case ErrorCode.WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList: return "WRN_DuplicateInterfaceWithNullabilityMismatchInBaseList_Description";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNull: return "WRN_SwitchExpressionNotExhaustiveForNull_Description";
                case ErrorCode.WRN_ImplicitCopyInReadOnlyMember: return "WRN_ImplicitCopyInReadOnlyMember_Description";
                case ErrorCode.WRN_NullabilityMismatchInConstraintsOnPartialImplementation: return "WRN_NullabilityMismatchInConstraintsOnPartialImplementation_Description";
                case ErrorCode.WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode: return "WRN_MissingNonNullTypesContextForAnnotationInGeneratedCode_Description";
                case ErrorCode.WRN_NullReferenceInitializer: return "WRN_NullReferenceInitializer_Description";
                case ErrorCode.WRN_NullabilityMismatchInTypeParameterNotNullConstraint: return "WRN_NullabilityMismatchInTypeParameterNotNullConstraint_Description";
                case ErrorCode.WRN_ParameterConditionallyDisallowsNull: return "WRN_ParameterConditionallyDisallowsNull_Description";
                case ErrorCode.WRN_ShouldNotReturn: return "WRN_ShouldNotReturn_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnOverride_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnOverride_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnImplicitImplementation_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnImplicitImplementation_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInReturnTypeOnExplicitImplementation_Description";
                case ErrorCode.WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation: return "WRN_TopLevelNullabilityMismatchInParameterTypeOnExplicitImplementation_Description";
                case ErrorCode.WRN_DoesNotReturnMismatch: return "WRN_DoesNotReturnMismatch_Description";
                case ErrorCode.WRN_MemberNotNull: return "WRN_MemberNotNull_Description";
                case ErrorCode.WRN_MemberNotNullWhen: return "WRN_MemberNotNullWhen_Description";
                case ErrorCode.WRN_MemberNotNullBadMember: return "WRN_MemberNotNullBadMember_Description";
                case ErrorCode.WRN_ParameterDisallowsNull: return "WRN_ParameterDisallowsNull_Description";
                case ErrorCode.WRN_ConstOutOfRangeChecked: return "WRN_ConstOutOfRangeChecked_Description";
                case ErrorCode.WRN_GeneratorFailedDuringInitialization: return "WRN_GeneratorFailedDuringInitialization_Description";
                case ErrorCode.WRN_GeneratorFailedDuringGeneration: return "WRN_GeneratorFailedDuringGeneration_Description";
                case ErrorCode.WRN_GivenExpressionAlwaysMatchesPattern: return "WRN_GivenExpressionAlwaysMatchesPattern_Description";
                case ErrorCode.WRN_IsPatternAlways: return "WRN_IsPatternAlways_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnPartial: return "WRN_NullabilityMismatchInReturnTypeOnPartial_Description";
                case ErrorCode.WRN_ParameterNotNullIfNotNull: return "WRN_ParameterNotNullIfNotNull_Description";
                case ErrorCode.WRN_ReturnNotNullIfNotNull: return "WRN_ReturnNotNullIfNotNull_Description";
                case ErrorCode.WRN_PartialMethodTypeDifference: return "WRN_PartialMethodTypeDifference_Description";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveWithWhen: return "WRN_SwitchExpressionNotExhaustiveWithWhen_Description";
                case ErrorCode.WRN_SwitchExpressionNotExhaustiveForNullWithWhen: return "WRN_SwitchExpressionNotExhaustiveForNullWithWhen_Description";
                case ErrorCode.WRN_PrecedenceInversion: return "WRN_PrecedenceInversion_Description";
                case ErrorCode.WRN_AnalyzerReferencesFramework: return "WRN_AnalyzerReferencesFramework_Description";
                case ErrorCode.WRN_RecordEqualsWithoutGetHashCode: return "WRN_RecordEqualsWithoutGetHashCode_Description";
                case ErrorCode.WRN_RecordNamedDisallowed: return "WRN_RecordNamedDisallowed_Description";
                case ErrorCode.WRN_UnassignedThisAutoPropertyUnsupportedVersion: return "WRN_UnassignedThisAutoPropertyUnsupportedVersion_Description";
                case ErrorCode.WRN_UnassignedThisUnsupportedVersion: return "WRN_UnassignedThisUnsupportedVersion_Description";
                case ErrorCode.WRN_ParamUnassigned: return "WRN_ParamUnassigned_Description";
                case ErrorCode.WRN_UseDefViolationProperty: return "WRN_UseDefViolationProperty_Description";
                case ErrorCode.WRN_UseDefViolationField: return "WRN_UseDefViolationField_Description";
                case ErrorCode.WRN_UseDefViolationThisUnsupportedVersion: return "WRN_UseDefViolationThisUnsupportedVersion_Description";
                case ErrorCode.WRN_UseDefViolationOut: return "WRN_UseDefViolationOut_Description";
                case ErrorCode.WRN_UseDefViolation: return "WRN_UseDefViolation_Description";
                case ErrorCode.WRN_SyncAndAsyncEntryPoints: return "WRN_SyncAndAsyncEntryPoints_Description";
                case ErrorCode.WRN_ParameterIsStaticClass: return "WRN_ParameterIsStaticClass_Description";
                case ErrorCode.WRN_ReturnTypeIsStaticClass: return "WRN_ReturnTypeIsStaticClass_Description";
                case ErrorCode.WRN_UnreadRecordParameter: return "WRN_UnreadRecordParameter_Description";
                case ErrorCode.WRN_DoNotCompareFunctionPointers: return "WRN_DoNotCompareFunctionPointers_Description";
                case ErrorCode.WRN_ParameterOccursAfterInterpolatedStringHandlerParameter: return "WRN_ParameterOccursAfterInterpolatedStringHandlerParameter_Description";
                case ErrorCode.WRN_CallerLineNumberPreferredOverCallerArgumentExpression: return "WRN_CallerLineNumberPreferredOverCallerArgumentExpression_Description";
                case ErrorCode.WRN_CallerFilePathPreferredOverCallerArgumentExpression: return "WRN_CallerFilePathPreferredOverCallerArgumentExpression_Description";
                case ErrorCode.WRN_CallerMemberNamePreferredOverCallerArgumentExpression: return "WRN_CallerMemberNamePreferredOverCallerArgumentExpression_Description";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeHasInvalidParameterName: return "WRN_CallerArgumentExpressionAttributeHasInvalidParameterName_Description";
                case ErrorCode.WRN_CallerArgumentExpressionAttributeSelfReferential: return "WRN_CallerArgumentExpressionAttributeSelfReferential_Description";
                case ErrorCode.WRN_CallerArgumentExpressionParamForUnconsumedLocation: return "WRN_CallerArgumentExpressionParamForUnconsumedLocation_Description";
                case ErrorCode.WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters: return "WRN_InterpolatedStringHandlerArgumentAttributeIgnoredOnLambdaParameters_Description";
                case ErrorCode.WRN_CompileTimeCheckedOverflow: return "WRN_CompileTimeCheckedOverflow_Description";
                case ErrorCode.WRN_MethGrpToNonDel: return "WRN_MethGrpToNonDel_Description";
                case ErrorCode.WRN_LowerCaseTypeName: return "WRN_LowerCaseTypeName_Description";
                case ErrorCode.WRN_UseDefViolationPropertyUnsupportedVersion: return "WRN_UseDefViolationPropertyUnsupportedVersion_Description";
                case ErrorCode.WRN_UseDefViolationFieldUnsupportedVersion: return "WRN_UseDefViolationFieldUnsupportedVersion_Description";
                case ErrorCode.WRN_UseDefViolationPropertySupportedVersion: return "WRN_UseDefViolationPropertySupportedVersion_Description";
                case ErrorCode.WRN_UseDefViolationFieldSupportedVersion: return "WRN_UseDefViolationFieldSupportedVersion_Description";
                case ErrorCode.WRN_UseDefViolationThisSupportedVersion: return "WRN_UseDefViolationThisSupportedVersion_Description";
                case ErrorCode.WRN_UnassignedThisAutoPropertySupportedVersion: return "WRN_UnassignedThisAutoPropertySupportedVersion_Description";
                case ErrorCode.WRN_UnassignedThisSupportedVersion: return "WRN_UnassignedThisSupportedVersion_Description";
                case ErrorCode.WRN_ObsoleteMembersShouldNotBeRequired: return "WRN_ObsoleteMembersShouldNotBeRequired_Description";
                case ErrorCode.WRN_AnalyzerReferencesNewerCompiler: return "WRN_AnalyzerReferencesNewerCompiler_Description";
                case ErrorCode.WRN_DuplicateAnalyzerReference: return "WRN_DuplicateAnalyzerReference_Description";
                case ErrorCode.WRN_ScopedMismatchInParameterOfTarget: return "WRN_ScopedMismatchInParameterOfTarget_Description";
                case ErrorCode.WRN_ScopedMismatchInParameterOfOverrideOrImplementation: return "WRN_ScopedMismatchInParameterOfOverrideOrImplementation_Description";
                case ErrorCode.WRN_EscapeVariable: return "WRN_EscapeVariable_Description";
                case ErrorCode.WRN_EscapeStackAlloc: return "WRN_EscapeStackAlloc_Description";
                case ErrorCode.WRN_RefReturnNonreturnableLocal: return "WRN_RefReturnNonreturnableLocal_Description";
                case ErrorCode.WRN_RefReturnNonreturnableLocal2: return "WRN_RefReturnNonreturnableLocal2_Description";
                case ErrorCode.WRN_RefReturnStructThis: return "WRN_RefReturnStructThis_Description";
                case ErrorCode.WRN_RefAssignNarrower: return "WRN_RefAssignNarrower_Description";
                case ErrorCode.WRN_MismatchedRefEscapeInTernary: return "WRN_MismatchedRefEscapeInTernary_Description";
                case ErrorCode.WRN_RefReturnParameter: return "WRN_RefReturnParameter_Description";
                case ErrorCode.WRN_RefReturnScopedParameter: return "WRN_RefReturnScopedParameter_Description";
                case ErrorCode.WRN_RefReturnParameter2: return "WRN_RefReturnParameter2_Description";
                case ErrorCode.WRN_RefReturnScopedParameter2: return "WRN_RefReturnScopedParameter2_Description";
                case ErrorCode.WRN_RefReturnLocal: return "WRN_RefReturnLocal_Description";
                case ErrorCode.WRN_RefReturnLocal2: return "WRN_RefReturnLocal2_Description";
                case ErrorCode.WRN_RefAssignReturnOnly: return "WRN_RefAssignReturnOnly_Description";
                case ErrorCode.WRN_RefReturnOnlyParameter: return "WRN_RefReturnOnlyParameter_Description";
                case ErrorCode.WRN_RefReturnOnlyParameter2: return "WRN_RefReturnOnlyParameter2_Description";
                case ErrorCode.WRN_RefAssignValEscapeWider: return "WRN_RefAssignValEscapeWider_Description";
                case ErrorCode.WRN_OptionalParamValueMismatch: return "WRN_OptionalParamValueMismatch_Description";
                case ErrorCode.WRN_ParamsArrayInLambdaOnly: return "WRN_ParamsArrayInLambdaOnly_Description";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterPassedToBase: return "WRN_CapturedPrimaryConstructorParameterPassedToBase_Description";
                case ErrorCode.WRN_UnreadPrimaryConstructorParameter: return "WRN_UnreadPrimaryConstructorParameter_Description";
                case ErrorCode.WRN_AddressOfInAsync: return "WRN_AddressOfInAsync_Description";
                case ErrorCode.WRN_CapturedPrimaryConstructorParameterInFieldInitializer: return "WRN_CapturedPrimaryConstructorParameterInFieldInitializer_Description";
                case ErrorCode.WRN_ByValArraySizeConstRequired: return "WRN_ByValArraySizeConstRequired_Description";
                case ErrorCode.WRN_InterceptorSignatureMismatch: return "WRN_InterceptorSignatureMismatch_Description";
                case ErrorCode.WRN_NullabilityMismatchInReturnTypeOnInterceptor: return "WRN_NullabilityMismatchInReturnTypeOnInterceptor_Description";
                case ErrorCode.WRN_NullabilityMismatchInParameterTypeOnInterceptor: return "WRN_NullabilityMismatchInParameterTypeOnInterceptor_Description";
                case ErrorCode.WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase: return "WRN_PrimaryConstructorParameterIsShadowedAndNotPassedToBase_Description";
                case ErrorCode.WRN_InlineArrayIndexerNotUsed: return "WRN_InlineArrayIndexerNotUsed_Description";
                case ErrorCode.WRN_InlineArraySliceNotUsed: return "WRN_InlineArraySliceNotUsed_Description";
                case ErrorCode.WRN_InlineArrayConversionOperatorNotUsed: return "WRN_InlineArrayConversionOperatorNotUsed_Description";
                case ErrorCode.WRN_InlineArrayNotSupportedByLanguage: return "WRN_InlineArrayNotSupportedByLanguage_Description";
                case ErrorCode.WRN_BadArgRef: return "WRN_BadArgRef_Description";
                case ErrorCode.WRN_ArgExpectedRefOrIn: return "WRN_ArgExpectedRefOrIn_Description";
                case ErrorCode.WRN_RefReadonlyNotVariable: return "WRN_RefReadonlyNotVariable_Description";
                case ErrorCode.WRN_ArgExpectedIn: return "WRN_ArgExpectedIn_Description";
                case ErrorCode.WRN_OverridingDifferentRefness: return "WRN_OverridingDifferentRefness_Description";
                case ErrorCode.WRN_HidingDifferentRefness: return "WRN_HidingDifferentRefness_Description";
                case ErrorCode.WRN_TargetDifferentRefness: return "WRN_TargetDifferentRefness_Description";
                case ErrorCode.WRN_RefReadonlyParameterDefaultValue: return "WRN_RefReadonlyParameterDefaultValue_Description";
                case ErrorCode.WRN_UseDefViolationRefField: return "WRN_UseDefViolationRefField_Description";
                case ErrorCode.WRN_Experimental: return "WRN_Experimental_Description";
                case ErrorCode.WRN_CollectionExpressionRefStructMayAllocate: return "WRN_CollectionExpressionRefStructMayAllocate_Description";
                case ErrorCode.WRN_CollectionExpressionRefStructSpreadMayAllocate: return "WRN_CollectionExpressionRefStructSpreadMayAllocate_Description";
                case ErrorCode.WRN_ConvertingLock: return "WRN_ConvertingLock_Description";
                case ErrorCode.WRN_PartialPropertySignatureDifference: return "WRN_PartialPropertySignatureDifference_Description";
                case ErrorCode.FTL_MetadataCantOpenFile: return "FTL_MetadataCantOpenFile_Description";
                case ErrorCode.FTL_DebugEmitFailure: return "FTL_DebugEmitFailure_Description";
                case ErrorCode.FTL_BadCodepage: return "FTL_BadCodepage_Description";
                case ErrorCode.FTL_InvalidTarget: return "FTL_InvalidTarget_Description";
                case ErrorCode.FTL_InvalidInputFileName: return "FTL_InvalidInputFileName_Description";
                case ErrorCode.FTL_OutputFileExists: return "FTL_OutputFileExists_Description";
                case ErrorCode.FTL_BadChecksumAlgorithm: return "FTL_BadChecksumAlgorithm_Description";
                case ErrorCode.INF_UnableToLoadSomeTypesInAnalyzer: return "INF_UnableToLoadSomeTypesInAnalyzer_Description";
                case ErrorCode.INF_TooManyBoundLambdas: return "INF_TooManyBoundLambdas_Description";
                case ErrorCode.INF_IdentifierConflictWithContextualKeyword: return "INF_IdentifierConflictWithContextualKeyword_Description";
                case ErrorCode.HDN_UnusedUsingDirective: return "HDN_UnusedUsingDirective_Description";
                case ErrorCode.HDN_UnusedExternAlias: return "HDN_UnusedExternAlias_Description";
                case ErrorCode.HDN_DuplicateWithGlobalUsing: return "HDN_DuplicateWithGlobalUsing_Description";
                case ErrorCode.Void: return "Void_Description";
                case ErrorCode.Unknown: return "Unknown_Description";
                case ErrorCode.ERR_NoMetadataFile: return "ERR_NoMetadataFile_Description";
                case ErrorCode.ERR_NoTypeDef: return "ERR_NoTypeDef_Description";
                case ErrorCode.ERR_OutputWriteFailed: return "ERR_OutputWriteFailed_Description";
                case ErrorCode.ERR_MultipleEntryPoints: return "ERR_MultipleEntryPoints_Description";
                case ErrorCode.ERR_BadBinaryOps: return "ERR_BadBinaryOps_Description";
                case ErrorCode.ERR_IntDivByZero: return "ERR_IntDivByZero_Description";
                case ErrorCode.ERR_BadIndexLHS: return "ERR_BadIndexLHS_Description";
                case ErrorCode.ERR_BadIndexCount: return "ERR_BadIndexCount_Description";
                case ErrorCode.ERR_BadUnaryOp: return "ERR_BadUnaryOp_Description";
                case ErrorCode.ERR_ThisInStaticMeth: return "ERR_ThisInStaticMeth_Description";
                case ErrorCode.ERR_ThisInBadContext: return "ERR_ThisInBadContext_Description";
                case ErrorCode.ERR_NoImplicitConv: return "ERR_NoImplicitConv_Description";
                case ErrorCode.ERR_NoExplicitConv: return "ERR_NoExplicitConv_Description";
                case ErrorCode.ERR_ConstOutOfRange: return "ERR_ConstOutOfRange_Description";
                case ErrorCode.ERR_AmbigBinaryOps: return "ERR_AmbigBinaryOps_Description";
                case ErrorCode.ERR_AmbigUnaryOp: return "ERR_AmbigUnaryOp_Description";
                case ErrorCode.ERR_InAttrOnOutParam: return "ERR_InAttrOnOutParam_Description";
                case ErrorCode.ERR_ValueCantBeNull: return "ERR_ValueCantBeNull_Description";
                case ErrorCode.ERR_NoExplicitBuiltinConv: return "ERR_NoExplicitBuiltinConv_Description";
                case ErrorCode.ERR_BadVisReturnType: return "ERR_BadVisReturnType_Description";
                case ErrorCode.ERR_BadVisParamType: return "ERR_BadVisParamType_Description";
                case ErrorCode.ERR_BadVisFieldType: return "ERR_BadVisFieldType_Description";
                case ErrorCode.ERR_BadVisPropertyType: return "ERR_BadVisPropertyType_Description";
                case ErrorCode.ERR_BadVisIndexerReturn: return "ERR_BadVisIndexerReturn_Description";
                case ErrorCode.ERR_BadVisIndexerParam: return "ERR_BadVisIndexerParam_Description";
                case ErrorCode.ERR_BadVisOpReturn: return "ERR_BadVisOpReturn_Description";
                case ErrorCode.ERR_BadVisOpParam: return "ERR_BadVisOpParam_Description";
                case ErrorCode.ERR_BadVisDelegateReturn: return "ERR_BadVisDelegateReturn_Description";
                case ErrorCode.ERR_BadVisDelegateParam: return "ERR_BadVisDelegateParam_Description";
                case ErrorCode.ERR_BadVisBaseClass: return "ERR_BadVisBaseClass_Description";
                case ErrorCode.ERR_BadVisBaseInterface: return "ERR_BadVisBaseInterface_Description";
                case ErrorCode.ERR_EventNeedsBothAccessors: return "ERR_EventNeedsBothAccessors_Description";
                case ErrorCode.ERR_EventNotDelegate: return "ERR_EventNotDelegate_Description";
                case ErrorCode.ERR_InterfaceEventInitializer: return "ERR_InterfaceEventInitializer_Description";
                case ErrorCode.ERR_BadEventUsage: return "ERR_BadEventUsage_Description";
                case ErrorCode.ERR_ExplicitEventFieldImpl: return "ERR_ExplicitEventFieldImpl_Description";
                case ErrorCode.ERR_CantOverrideNonEvent: return "ERR_CantOverrideNonEvent_Description";
                case ErrorCode.ERR_AddRemoveMustHaveBody: return "ERR_AddRemoveMustHaveBody_Description";
                case ErrorCode.ERR_AbstractEventInitializer: return "ERR_AbstractEventInitializer_Description";
                case ErrorCode.ERR_PossibleBadNegCast: return "ERR_PossibleBadNegCast_Description";
                case ErrorCode.ERR_ReservedEnumerator: return "ERR_ReservedEnumerator_Description";
                case ErrorCode.ERR_AsMustHaveReferenceType: return "ERR_AsMustHaveReferenceType_Description";
                case ErrorCode.ERR_BadEventUsageNoField: return "ERR_BadEventUsageNoField_Description";
                case ErrorCode.ERR_ConstraintOnlyAllowedOnGenericDecl: return "ERR_ConstraintOnlyAllowedOnGenericDecl_Description";
                case ErrorCode.ERR_TypeParamMustBeIdentifier: return "ERR_TypeParamMustBeIdentifier_Description";
                case ErrorCode.ERR_MemberReserved: return "ERR_MemberReserved_Description";
                case ErrorCode.ERR_DuplicateParamName: return "ERR_DuplicateParamName_Description";
                case ErrorCode.ERR_DuplicateNameInNS: return "ERR_DuplicateNameInNS_Description";
                case ErrorCode.ERR_DuplicateNameInClass: return "ERR_DuplicateNameInClass_Description";
                case ErrorCode.ERR_NameNotInContext: return "ERR_NameNotInContext_Description";
                case ErrorCode.ERR_AmbigContext: return "ERR_AmbigContext_Description";
                case ErrorCode.ERR_BadMemberFlag: return "ERR_BadMemberFlag_Description";
                case ErrorCode.ERR_BadMemberProtection: return "ERR_BadMemberProtection_Description";
                case ErrorCode.ERR_CircConstValue: return "ERR_CircConstValue_Description";
                case ErrorCode.ERR_MemberAlreadyExists: return "ERR_MemberAlreadyExists_Description";
                case ErrorCode.ERR_StaticNotVirtual: return "ERR_StaticNotVirtual_Description";
                case ErrorCode.ERR_OverrideNotNew: return "ERR_OverrideNotNew_Description";
                case ErrorCode.ERR_OverrideNotExpected: return "ERR_OverrideNotExpected_Description";
                case ErrorCode.ERR_NamespaceUnexpected: return "ERR_NamespaceUnexpected_Description";
                case ErrorCode.ERR_NoSuchMember: return "ERR_NoSuchMember_Description";
                case ErrorCode.ERR_BadSKknown: return "ERR_BadSKknown_Description";
                case ErrorCode.ERR_BadSKunknown: return "ERR_BadSKunknown_Description";
                case ErrorCode.ERR_ObjectRequired: return "ERR_ObjectRequired_Description";
                case ErrorCode.ERR_AmbigCall: return "ERR_AmbigCall_Description";
                case ErrorCode.ERR_BadAccess: return "ERR_BadAccess_Description";
                case ErrorCode.ERR_MethDelegateMismatch: return "ERR_MethDelegateMismatch_Description";
                case ErrorCode.ERR_RetObjectRequired: return "ERR_RetObjectRequired_Description";
                case ErrorCode.ERR_RetNoObjectRequired: return "ERR_RetNoObjectRequired_Description";
                case ErrorCode.ERR_LocalDuplicate: return "ERR_LocalDuplicate_Description";
                case ErrorCode.ERR_AssgLvalueExpected: return "ERR_AssgLvalueExpected_Description";
                case ErrorCode.ERR_StaticConstParam: return "ERR_StaticConstParam_Description";
                case ErrorCode.ERR_NotConstantExpression: return "ERR_NotConstantExpression_Description";
                case ErrorCode.ERR_NotNullConstRefField: return "ERR_NotNullConstRefField_Description";
                case ErrorCode.ERR_LocalIllegallyOverrides: return "ERR_LocalIllegallyOverrides_Description";
                case ErrorCode.ERR_BadUsingNamespace: return "ERR_BadUsingNamespace_Description";
                case ErrorCode.ERR_NoBreakOrCont: return "ERR_NoBreakOrCont_Description";
                case ErrorCode.ERR_DuplicateLabel: return "ERR_DuplicateLabel_Description";
                case ErrorCode.ERR_NoConstructors: return "ERR_NoConstructors_Description";
                case ErrorCode.ERR_NoNewAbstract: return "ERR_NoNewAbstract_Description";
                case ErrorCode.ERR_ConstValueRequired: return "ERR_ConstValueRequired_Description";
                case ErrorCode.ERR_CircularBase: return "ERR_CircularBase_Description";
                case ErrorCode.ERR_BadDelegateConstructor: return "ERR_BadDelegateConstructor_Description";
                case ErrorCode.ERR_MethodNameExpected: return "ERR_MethodNameExpected_Description";
                case ErrorCode.ERR_ConstantExpected: return "ERR_ConstantExpected_Description";
                case ErrorCode.ERR_V6SwitchGoverningTypeValueExpected: return "ERR_V6SwitchGoverningTypeValueExpected_Description";
                case ErrorCode.ERR_DuplicateCaseLabel: return "ERR_DuplicateCaseLabel_Description";
                case ErrorCode.ERR_InvalidGotoCase: return "ERR_InvalidGotoCase_Description";
                case ErrorCode.ERR_PropertyLacksGet: return "ERR_PropertyLacksGet_Description";
                case ErrorCode.ERR_BadExceptionType: return "ERR_BadExceptionType_Description";
                case ErrorCode.ERR_BadEmptyThrow: return "ERR_BadEmptyThrow_Description";
                case ErrorCode.ERR_BadFinallyLeave: return "ERR_BadFinallyLeave_Description";
                case ErrorCode.ERR_LabelShadow: return "ERR_LabelShadow_Description";
                case ErrorCode.ERR_LabelNotFound: return "ERR_LabelNotFound_Description";
                case ErrorCode.ERR_UnreachableCatch: return "ERR_UnreachableCatch_Description";
                case ErrorCode.ERR_ReturnExpected: return "ERR_ReturnExpected_Description";
                case ErrorCode.ERR_SwitchFallThrough: return "ERR_SwitchFallThrough_Description";
                case ErrorCode.ERR_UseDefViolation: return "ERR_UseDefViolation_Description";
                case ErrorCode.ERR_UseDefViolationField: return "ERR_UseDefViolationField_Description";
                case ErrorCode.ERR_UnassignedThisUnsupportedVersion: return "ERR_UnassignedThisUnsupportedVersion_Description";
                case ErrorCode.ERR_AmbigQM: return "ERR_AmbigQM_Description";
                case ErrorCode.ERR_InvalidQM: return "ERR_InvalidQM_Description";
                case ErrorCode.ERR_NoBaseClass: return "ERR_NoBaseClass_Description";
                case ErrorCode.ERR_BaseIllegal: return "ERR_BaseIllegal_Description";
                case ErrorCode.ERR_ObjectProhibited: return "ERR_ObjectProhibited_Description";
                case ErrorCode.ERR_ParamUnassigned: return "ERR_ParamUnassigned_Description";
                case ErrorCode.ERR_InvalidArray: return "ERR_InvalidArray_Description";
                case ErrorCode.ERR_ExternHasBody: return "ERR_ExternHasBody_Description";
                case ErrorCode.ERR_AbstractAndExtern: return "ERR_AbstractAndExtern_Description";
                case ErrorCode.ERR_BadAttributeParamType: return "ERR_BadAttributeParamType_Description";
                case ErrorCode.ERR_BadAttributeArgument: return "ERR_BadAttributeArgument_Description";
                case ErrorCode.ERR_LockNeedsReference: return "ERR_LockNeedsReference_Description";
                case ErrorCode.ERR_NullNotValid: return "ERR_NullNotValid_Description";
                case ErrorCode.ERR_UseDefViolationThisUnsupportedVersion: return "ERR_UseDefViolationThisUnsupportedVersion_Description";
                case ErrorCode.ERR_ArgsInvalid: return "ERR_ArgsInvalid_Description";
                case ErrorCode.ERR_AssgReadonly: return "ERR_AssgReadonly_Description";
                case ErrorCode.ERR_RefReadonly: return "ERR_RefReadonly_Description";
                case ErrorCode.ERR_PtrExpected: return "ERR_PtrExpected_Description";
                case ErrorCode.ERR_PtrIndexSingle: return "ERR_PtrIndexSingle_Description";
                case ErrorCode.ERR_AssgReadonlyStatic: return "ERR_AssgReadonlyStatic_Description";
                case ErrorCode.ERR_RefReadonlyStatic: return "ERR_RefReadonlyStatic_Description";
                case ErrorCode.ERR_AssgReadonlyProp: return "ERR_AssgReadonlyProp_Description";
                case ErrorCode.ERR_IllegalStatement: return "ERR_IllegalStatement_Description";
                case ErrorCode.ERR_BadGetEnumerator: return "ERR_BadGetEnumerator_Description";
                case ErrorCode.ERR_TooManyLocals: return "ERR_TooManyLocals_Description";
                case ErrorCode.ERR_AbstractBaseCall: return "ERR_AbstractBaseCall_Description";
                case ErrorCode.ERR_RefProperty: return "ERR_RefProperty_Description";
                case ErrorCode.ERR_ManagedAddr: return "ERR_ManagedAddr_Description";
                case ErrorCode.ERR_BadFixedInitType: return "ERR_BadFixedInitType_Description";
                case ErrorCode.ERR_FixedMustInit: return "ERR_FixedMustInit_Description";
                case ErrorCode.ERR_InvalidAddrOp: return "ERR_InvalidAddrOp_Description";
                case ErrorCode.ERR_FixedNeeded: return "ERR_FixedNeeded_Description";
                case ErrorCode.ERR_FixedNotNeeded: return "ERR_FixedNotNeeded_Description";
                case ErrorCode.ERR_UnsafeNeeded: return "ERR_UnsafeNeeded_Description";
                case ErrorCode.ERR_OpTFRetType: return "ERR_OpTFRetType_Description";
                case ErrorCode.ERR_OperatorNeedsMatch: return "ERR_OperatorNeedsMatch_Description";
                case ErrorCode.ERR_BadBoolOp: return "ERR_BadBoolOp_Description";
                case ErrorCode.ERR_MustHaveOpTF: return "ERR_MustHaveOpTF_Description";
                case ErrorCode.ERR_CheckedOverflow: return "ERR_CheckedOverflow_Description";
                case ErrorCode.ERR_ConstOutOfRangeChecked: return "ERR_ConstOutOfRangeChecked_Description";
                case ErrorCode.ERR_BadVarargs: return "ERR_BadVarargs_Description";
                case ErrorCode.ERR_ParamsMustBeCollection: return "ERR_ParamsMustBeCollection_Description";
                case ErrorCode.ERR_IllegalArglist: return "ERR_IllegalArglist_Description";
                case ErrorCode.ERR_IllegalUnsafe: return "ERR_IllegalUnsafe_Description";
                case ErrorCode.ERR_AmbigMember: return "ERR_AmbigMember_Description";
                case ErrorCode.ERR_BadForeachDecl: return "ERR_BadForeachDecl_Description";
                case ErrorCode.ERR_ParamsLast: return "ERR_ParamsLast_Description";
                case ErrorCode.ERR_SizeofUnsafe: return "ERR_SizeofUnsafe_Description";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNS: return "ERR_DottedTypeNameNotFoundInNS_Description";
                case ErrorCode.ERR_FieldInitRefNonstatic: return "ERR_FieldInitRefNonstatic_Description";
                case ErrorCode.ERR_SealedNonOverride: return "ERR_SealedNonOverride_Description";
                case ErrorCode.ERR_CantOverrideSealed: return "ERR_CantOverrideSealed_Description";
                case ErrorCode.ERR_VoidError: return "ERR_VoidError_Description";
                case ErrorCode.ERR_ConditionalOnOverride: return "ERR_ConditionalOnOverride_Description";
                case ErrorCode.ERR_PointerInAsOrIs: return "ERR_PointerInAsOrIs_Description";
                case ErrorCode.ERR_CallingFinalizeDeprecated: return "ERR_CallingFinalizeDeprecated_Description";
                case ErrorCode.ERR_SingleTypeNameNotFound: return "ERR_SingleTypeNameNotFound_Description";
                case ErrorCode.ERR_NegativeStackAllocSize: return "ERR_NegativeStackAllocSize_Description";
                case ErrorCode.ERR_NegativeArraySize: return "ERR_NegativeArraySize_Description";
                case ErrorCode.ERR_OverrideFinalizeDeprecated: return "ERR_OverrideFinalizeDeprecated_Description";
                case ErrorCode.ERR_CallingBaseFinalizeDeprecated: return "ERR_CallingBaseFinalizeDeprecated_Description";
                case ErrorCode.ERR_BadCastInFixed: return "ERR_BadCastInFixed_Description";
                case ErrorCode.ERR_StackallocInCatchFinally: return "ERR_StackallocInCatchFinally_Description";
                case ErrorCode.ERR_VarargsLast: return "ERR_VarargsLast_Description";
                case ErrorCode.ERR_MissingPartial: return "ERR_MissingPartial_Description";
                case ErrorCode.ERR_PartialTypeKindConflict: return "ERR_PartialTypeKindConflict_Description";
                case ErrorCode.ERR_PartialModifierConflict: return "ERR_PartialModifierConflict_Description";
                case ErrorCode.ERR_PartialMultipleBases: return "ERR_PartialMultipleBases_Description";
                case ErrorCode.ERR_PartialWrongTypeParams: return "ERR_PartialWrongTypeParams_Description";
                case ErrorCode.ERR_PartialWrongConstraints: return "ERR_PartialWrongConstraints_Description";
                case ErrorCode.ERR_NoImplicitConvCast: return "ERR_NoImplicitConvCast_Description";
                case ErrorCode.ERR_PartialMisplaced: return "ERR_PartialMisplaced_Description";
                case ErrorCode.ERR_ImportedCircularBase: return "ERR_ImportedCircularBase_Description";
                case ErrorCode.ERR_UseDefViolationOut: return "ERR_UseDefViolationOut_Description";
                case ErrorCode.ERR_ArraySizeInDeclaration: return "ERR_ArraySizeInDeclaration_Description";
                case ErrorCode.ERR_InaccessibleGetter: return "ERR_InaccessibleGetter_Description";
                case ErrorCode.ERR_InaccessibleSetter: return "ERR_InaccessibleSetter_Description";
                case ErrorCode.ERR_InvalidPropertyAccessMod: return "ERR_InvalidPropertyAccessMod_Description";
                case ErrorCode.ERR_DuplicatePropertyAccessMods: return "ERR_DuplicatePropertyAccessMods_Description";
                case ErrorCode.ERR_AccessModMissingAccessor: return "ERR_AccessModMissingAccessor_Description";
                case ErrorCode.ERR_UnimplementedInterfaceAccessor: return "ERR_UnimplementedInterfaceAccessor_Description";
                case ErrorCode.ERR_FriendRefNotEqualToThis: return "ERR_FriendRefNotEqualToThis_Description";
                case ErrorCode.ERR_BadConstType: return "ERR_BadConstType_Description";
                case ErrorCode.ERR_NoNewTyvar: return "ERR_NoNewTyvar_Description";
                case ErrorCode.ERR_BadArity: return "ERR_BadArity_Description";
                case ErrorCode.ERR_BadTypeArgument: return "ERR_BadTypeArgument_Description";
                case ErrorCode.ERR_TypeArgsNotAllowed: return "ERR_TypeArgsNotAllowed_Description";
                case ErrorCode.ERR_HasNoTypeVars: return "ERR_HasNoTypeVars_Description";
                case ErrorCode.ERR_NewConstraintNotSatisfied: return "ERR_NewConstraintNotSatisfied_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedRefType: return "ERR_GenericConstraintNotSatisfiedRefType_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableEnum: return "ERR_GenericConstraintNotSatisfiedNullableEnum_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedNullableInterface: return "ERR_GenericConstraintNotSatisfiedNullableInterface_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedTyVar: return "ERR_GenericConstraintNotSatisfiedTyVar_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedValType: return "ERR_GenericConstraintNotSatisfiedValType_Description";
                case ErrorCode.ERR_DuplicateGeneratedName: return "ERR_DuplicateGeneratedName_Description";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFound: return "ERR_GlobalSingleTypeNameNotFound_Description";
                case ErrorCode.ERR_NewBoundMustBeLast: return "ERR_NewBoundMustBeLast_Description";
                case ErrorCode.ERR_TypeVarCantBeNull: return "ERR_TypeVarCantBeNull_Description";
                case ErrorCode.ERR_DuplicateBound: return "ERR_DuplicateBound_Description";
                case ErrorCode.ERR_ClassBoundNotFirst: return "ERR_ClassBoundNotFirst_Description";
                case ErrorCode.ERR_BadRetType: return "ERR_BadRetType_Description";
                case ErrorCode.ERR_DuplicateConstraintClause: return "ERR_DuplicateConstraintClause_Description";
                case ErrorCode.ERR_CantInferMethTypeArgs: return "ERR_CantInferMethTypeArgs_Description";
                case ErrorCode.ERR_LocalSameNameAsTypeParam: return "ERR_LocalSameNameAsTypeParam_Description";
                case ErrorCode.ERR_AsWithTypeVar: return "ERR_AsWithTypeVar_Description";
                case ErrorCode.ERR_BadIndexerNameAttr: return "ERR_BadIndexerNameAttr_Description";
                case ErrorCode.ERR_AttrArgWithTypeVars: return "ERR_AttrArgWithTypeVars_Description";
                case ErrorCode.ERR_NewTyvarWithArgs: return "ERR_NewTyvarWithArgs_Description";
                case ErrorCode.ERR_AbstractSealedStatic: return "ERR_AbstractSealedStatic_Description";
                case ErrorCode.ERR_ComImportWithImpl: return "ERR_ComImportWithImpl_Description";
                case ErrorCode.ERR_ComImportWithBase: return "ERR_ComImportWithBase_Description";
                case ErrorCode.ERR_ImplBadConstraints: return "ERR_ImplBadConstraints_Description";
                case ErrorCode.ERR_DottedTypeNameNotFoundInAgg: return "ERR_DottedTypeNameNotFoundInAgg_Description";
                case ErrorCode.ERR_MethGrpToNonDel: return "ERR_MethGrpToNonDel_Description";
                case ErrorCode.ERR_BadExternAlias: return "ERR_BadExternAlias_Description";
                case ErrorCode.ERR_ColColWithTypeAlias: return "ERR_ColColWithTypeAlias_Description";
                case ErrorCode.ERR_AliasNotFound: return "ERR_AliasNotFound_Description";
                case ErrorCode.ERR_SameFullNameAggAgg: return "ERR_SameFullNameAggAgg_Description";
                case ErrorCode.ERR_SameFullNameNsAgg: return "ERR_SameFullNameNsAgg_Description";
                case ErrorCode.ERR_SameFullNameThisAggThisNs: return "ERR_SameFullNameThisAggThisNs_Description";
                case ErrorCode.ERR_ExternAfterElements: return "ERR_ExternAfterElements_Description";
                case ErrorCode.ERR_SealedStaticClass: return "ERR_SealedStaticClass_Description";
                case ErrorCode.ERR_PrivateAbstractAccessor: return "ERR_PrivateAbstractAccessor_Description";
                case ErrorCode.ERR_ValueExpected: return "ERR_ValueExpected_Description";
                case ErrorCode.ERR_UnboxNotLValue: return "ERR_UnboxNotLValue_Description";
                case ErrorCode.ERR_AnonMethGrpInForEach: return "ERR_AnonMethGrpInForEach_Description";
                case ErrorCode.ERR_BadIncDecRetType: return "ERR_BadIncDecRetType_Description";
                case ErrorCode.ERR_TypeConstraintsMustBeUniqueAndFirst: return "ERR_TypeConstraintsMustBeUniqueAndFirst_Description";
                case ErrorCode.ERR_RefValBoundWithClass: return "ERR_RefValBoundWithClass_Description";
                case ErrorCode.ERR_NewBoundWithVal: return "ERR_NewBoundWithVal_Description";
                case ErrorCode.ERR_RefConstraintNotSatisfied: return "ERR_RefConstraintNotSatisfied_Description";
                case ErrorCode.ERR_ValConstraintNotSatisfied: return "ERR_ValConstraintNotSatisfied_Description";
                case ErrorCode.ERR_CircularConstraint: return "ERR_CircularConstraint_Description";
                case ErrorCode.ERR_BaseConstraintConflict: return "ERR_BaseConstraintConflict_Description";
                case ErrorCode.ERR_ConWithValCon: return "ERR_ConWithValCon_Description";
                case ErrorCode.ERR_AmbigUDConv: return "ERR_AmbigUDConv_Description";
                case ErrorCode.ERR_OverrideWithConstraints: return "ERR_OverrideWithConstraints_Description";
                case ErrorCode.ERR_AmbigOverride: return "ERR_AmbigOverride_Description";
                case ErrorCode.ERR_DecConstError: return "ERR_DecConstError_Description";
                case ErrorCode.ERR_ExplicitImplParams: return "ERR_ExplicitImplParams_Description";
                case ErrorCode.ERR_MethodImplementingAccessor: return "ERR_MethodImplementingAccessor_Description";
                case ErrorCode.ERR_AbstractHasBody: return "ERR_AbstractHasBody_Description";
                case ErrorCode.ERR_ConcreteMissingBody: return "ERR_ConcreteMissingBody_Description";
                case ErrorCode.ERR_AbstractAndSealed: return "ERR_AbstractAndSealed_Description";
                case ErrorCode.ERR_AbstractNotVirtual: return "ERR_AbstractNotVirtual_Description";
                case ErrorCode.ERR_StaticConstant: return "ERR_StaticConstant_Description";
                case ErrorCode.ERR_CantOverrideNonFunction: return "ERR_CantOverrideNonFunction_Description";
                case ErrorCode.ERR_CantOverrideNonVirtual: return "ERR_CantOverrideNonVirtual_Description";
                case ErrorCode.ERR_CantChangeAccessOnOverride: return "ERR_CantChangeAccessOnOverride_Description";
                case ErrorCode.ERR_CantChangeReturnTypeOnOverride: return "ERR_CantChangeReturnTypeOnOverride_Description";
                case ErrorCode.ERR_CantDeriveFromSealedType: return "ERR_CantDeriveFromSealedType_Description";
                case ErrorCode.ERR_AbstractInConcreteClass: return "ERR_AbstractInConcreteClass_Description";
                case ErrorCode.ERR_StaticConstructorWithExplicitConstructorCall: return "ERR_StaticConstructorWithExplicitConstructorCall_Description";
                case ErrorCode.ERR_StaticConstructorWithAccessModifiers: return "ERR_StaticConstructorWithAccessModifiers_Description";
                case ErrorCode.ERR_RecursiveConstructorCall: return "ERR_RecursiveConstructorCall_Description";
                case ErrorCode.ERR_ObjectCallingBaseConstructor: return "ERR_ObjectCallingBaseConstructor_Description";
                case ErrorCode.ERR_PredefinedTypeNotFound: return "ERR_PredefinedTypeNotFound_Description";
                case ErrorCode.ERR_StructWithBaseConstructorCall: return "ERR_StructWithBaseConstructorCall_Description";
                case ErrorCode.ERR_StructLayoutCycle: return "ERR_StructLayoutCycle_Description";
                case ErrorCode.ERR_InterfacesCantContainFields: return "ERR_InterfacesCantContainFields_Description";
                case ErrorCode.ERR_InterfacesCantContainConstructors: return "ERR_InterfacesCantContainConstructors_Description";
                case ErrorCode.ERR_NonInterfaceInInterfaceList: return "ERR_NonInterfaceInInterfaceList_Description";
                case ErrorCode.ERR_DuplicateInterfaceInBaseList: return "ERR_DuplicateInterfaceInBaseList_Description";
                case ErrorCode.ERR_CycleInInterfaceInheritance: return "ERR_CycleInInterfaceInheritance_Description";
                case ErrorCode.ERR_HidingAbstractMethod: return "ERR_HidingAbstractMethod_Description";
                case ErrorCode.ERR_UnimplementedAbstractMethod: return "ERR_UnimplementedAbstractMethod_Description";
                case ErrorCode.ERR_UnimplementedInterfaceMember: return "ERR_UnimplementedInterfaceMember_Description";
                case ErrorCode.ERR_ObjectCantHaveBases: return "ERR_ObjectCantHaveBases_Description";
                case ErrorCode.ERR_ExplicitInterfaceImplementationNotInterface: return "ERR_ExplicitInterfaceImplementationNotInterface_Description";
                case ErrorCode.ERR_InterfaceMemberNotFound: return "ERR_InterfaceMemberNotFound_Description";
                case ErrorCode.ERR_ClassDoesntImplementInterface: return "ERR_ClassDoesntImplementInterface_Description";
                case ErrorCode.ERR_ExplicitInterfaceImplementationInNonClassOrStruct: return "ERR_ExplicitInterfaceImplementationInNonClassOrStruct_Description";
                case ErrorCode.ERR_MemberNameSameAsType: return "ERR_MemberNameSameAsType_Description";
                case ErrorCode.ERR_EnumeratorOverflow: return "ERR_EnumeratorOverflow_Description";
                case ErrorCode.ERR_CantOverrideNonProperty: return "ERR_CantOverrideNonProperty_Description";
                case ErrorCode.ERR_NoGetToOverride: return "ERR_NoGetToOverride_Description";
                case ErrorCode.ERR_NoSetToOverride: return "ERR_NoSetToOverride_Description";
                case ErrorCode.ERR_PropertyCantHaveVoidType: return "ERR_PropertyCantHaveVoidType_Description";
                case ErrorCode.ERR_PropertyWithNoAccessors: return "ERR_PropertyWithNoAccessors_Description";
                case ErrorCode.ERR_NewVirtualInSealed: return "ERR_NewVirtualInSealed_Description";
                case ErrorCode.ERR_ExplicitPropertyAddingAccessor: return "ERR_ExplicitPropertyAddingAccessor_Description";
                case ErrorCode.ERR_ExplicitPropertyMissingAccessor: return "ERR_ExplicitPropertyMissingAccessor_Description";
                case ErrorCode.ERR_ConversionWithInterface: return "ERR_ConversionWithInterface_Description";
                case ErrorCode.ERR_ConversionWithBase: return "ERR_ConversionWithBase_Description";
                case ErrorCode.ERR_ConversionWithDerived: return "ERR_ConversionWithDerived_Description";
                case ErrorCode.ERR_IdentityConversion: return "ERR_IdentityConversion_Description";
                case ErrorCode.ERR_ConversionNotInvolvingContainedType: return "ERR_ConversionNotInvolvingContainedType_Description";
                case ErrorCode.ERR_DuplicateConversionInClass: return "ERR_DuplicateConversionInClass_Description";
                case ErrorCode.ERR_OperatorsMustBeStatic: return "ERR_OperatorsMustBeStatic_Description";
                case ErrorCode.ERR_BadIncDecSignature: return "ERR_BadIncDecSignature_Description";
                case ErrorCode.ERR_BadUnaryOperatorSignature: return "ERR_BadUnaryOperatorSignature_Description";
                case ErrorCode.ERR_BadBinaryOperatorSignature: return "ERR_BadBinaryOperatorSignature_Description";
                case ErrorCode.ERR_BadShiftOperatorSignature: return "ERR_BadShiftOperatorSignature_Description";
                case ErrorCode.ERR_InterfacesCantContainConversionOrEqualityOperators: return "ERR_InterfacesCantContainConversionOrEqualityOperators_Description";
                case ErrorCode.ERR_CantOverrideBogusMethod: return "ERR_CantOverrideBogusMethod_Description";
                case ErrorCode.ERR_BindToBogus: return "ERR_BindToBogus_Description";
                case ErrorCode.ERR_CantCallSpecialMethod: return "ERR_CantCallSpecialMethod_Description";
                case ErrorCode.ERR_BadTypeReference: return "ERR_BadTypeReference_Description";
                case ErrorCode.ERR_BadDestructorName: return "ERR_BadDestructorName_Description";
                case ErrorCode.ERR_OnlyClassesCanContainDestructors: return "ERR_OnlyClassesCanContainDestructors_Description";
                case ErrorCode.ERR_ConflictAliasAndMember: return "ERR_ConflictAliasAndMember_Description";
                case ErrorCode.ERR_ConditionalOnSpecialMethod: return "ERR_ConditionalOnSpecialMethod_Description";
                case ErrorCode.ERR_ConditionalMustReturnVoid: return "ERR_ConditionalMustReturnVoid_Description";
                case ErrorCode.ERR_DuplicateAttribute: return "ERR_DuplicateAttribute_Description";
                case ErrorCode.ERR_ConditionalOnInterfaceMethod: return "ERR_ConditionalOnInterfaceMethod_Description";
                case ErrorCode.ERR_OperatorCantReturnVoid: return "ERR_OperatorCantReturnVoid_Description";
                case ErrorCode.ERR_InvalidAttributeArgument: return "ERR_InvalidAttributeArgument_Description";
                case ErrorCode.ERR_AttributeOnBadSymbolType: return "ERR_AttributeOnBadSymbolType_Description";
                case ErrorCode.ERR_FloatOverflow: return "ERR_FloatOverflow_Description";
                case ErrorCode.ERR_InvalidReal: return "ERR_InvalidReal_Description";
                case ErrorCode.ERR_ComImportWithoutUuidAttribute: return "ERR_ComImportWithoutUuidAttribute_Description";
                case ErrorCode.ERR_InvalidNamedArgument: return "ERR_InvalidNamedArgument_Description";
                case ErrorCode.ERR_DllImportOnInvalidMethod: return "ERR_DllImportOnInvalidMethod_Description";
                case ErrorCode.ERR_FieldCantBeRefAny: return "ERR_FieldCantBeRefAny_Description";
                case ErrorCode.ERR_ArrayElementCantBeRefAny: return "ERR_ArrayElementCantBeRefAny_Description";
                case ErrorCode.ERR_NotAnAttributeClass: return "ERR_NotAnAttributeClass_Description";
                case ErrorCode.ERR_BadNamedAttributeArgument: return "ERR_BadNamedAttributeArgument_Description";
                case ErrorCode.ERR_DeprecatedSymbolStr: return "ERR_DeprecatedSymbolStr_Description";
                case ErrorCode.ERR_IndexerCantHaveVoidType: return "ERR_IndexerCantHaveVoidType_Description";
                case ErrorCode.ERR_VirtualPrivate: return "ERR_VirtualPrivate_Description";
                case ErrorCode.ERR_ArrayInitToNonArrayType: return "ERR_ArrayInitToNonArrayType_Description";
                case ErrorCode.ERR_ArrayInitInBadPlace: return "ERR_ArrayInitInBadPlace_Description";
                case ErrorCode.ERR_MissingStructOffset: return "ERR_MissingStructOffset_Description";
                case ErrorCode.ERR_InterfaceImplementedByConditional: return "ERR_InterfaceImplementedByConditional_Description";
                case ErrorCode.ERR_InterfaceImplementedImplicitlyByVariadic: return "ERR_InterfaceImplementedImplicitlyByVariadic_Description";
                case ErrorCode.ERR_IllegalRefParam: return "ERR_IllegalRefParam_Description";
                case ErrorCode.ERR_BadArgumentToAttribute: return "ERR_BadArgumentToAttribute_Description";
                case ErrorCode.ERR_StructOffsetOnBadStruct: return "ERR_StructOffsetOnBadStruct_Description";
                case ErrorCode.ERR_StructOffsetOnBadField: return "ERR_StructOffsetOnBadField_Description";
                case ErrorCode.ERR_AttributeUsageOnNonAttributeClass: return "ERR_AttributeUsageOnNonAttributeClass_Description";
                case ErrorCode.ERR_DuplicateNamedAttributeArgument: return "ERR_DuplicateNamedAttributeArgument_Description";
                case ErrorCode.ERR_DeriveFromEnumOrValueType: return "ERR_DeriveFromEnumOrValueType_Description";
                case ErrorCode.ERR_DefaultMemberOnIndexedType: return "ERR_DefaultMemberOnIndexedType_Description";
                case ErrorCode.ERR_BogusType: return "ERR_BogusType_Description";
                case ErrorCode.ERR_CStyleArray: return "ERR_CStyleArray_Description";
                case ErrorCode.ERR_AbstractAttributeClass: return "ERR_AbstractAttributeClass_Description";
                case ErrorCode.ERR_BadNamedAttributeArgumentType: return "ERR_BadNamedAttributeArgumentType_Description";
                case ErrorCode.ERR_MissingPredefinedMember: return "ERR_MissingPredefinedMember_Description";
                case ErrorCode.ERR_OutAttrOnRefParam: return "ERR_OutAttrOnRefParam_Description";
                case ErrorCode.ERR_OverloadRefKind: return "ERR_OverloadRefKind_Description";
                case ErrorCode.ERR_LiteralDoubleCast: return "ERR_LiteralDoubleCast_Description";
                case ErrorCode.ERR_ProtectedInStruct: return "ERR_ProtectedInStruct_Description";
                case ErrorCode.ERR_InconsistentIndexerNames: return "ERR_InconsistentIndexerNames_Description";
                case ErrorCode.ERR_ComImportWithUserCtor: return "ERR_ComImportWithUserCtor_Description";
                case ErrorCode.ERR_FieldCantHaveVoidType: return "ERR_FieldCantHaveVoidType_Description";
                case ErrorCode.ERR_SystemVoid: return "ERR_SystemVoid_Description";
                case ErrorCode.ERR_ExplicitParamArrayOrCollection: return "ERR_ExplicitParamArrayOrCollection_Description";
                case ErrorCode.ERR_VolatileStruct: return "ERR_VolatileStruct_Description";
                case ErrorCode.ERR_VolatileAndReadonly: return "ERR_VolatileAndReadonly_Description";
                case ErrorCode.ERR_AbstractField: return "ERR_AbstractField_Description";
                case ErrorCode.ERR_BogusExplicitImpl: return "ERR_BogusExplicitImpl_Description";
                case ErrorCode.ERR_ExplicitMethodImplAccessor: return "ERR_ExplicitMethodImplAccessor_Description";
                case ErrorCode.ERR_ConditionalWithOutParam: return "ERR_ConditionalWithOutParam_Description";
                case ErrorCode.ERR_AccessorImplementingMethod: return "ERR_AccessorImplementingMethod_Description";
                case ErrorCode.ERR_AliasQualAsExpression: return "ERR_AliasQualAsExpression_Description";
                case ErrorCode.ERR_DerivingFromATyVar: return "ERR_DerivingFromATyVar_Description";
                case ErrorCode.ERR_DuplicateTypeParameter: return "ERR_DuplicateTypeParameter_Description";
                case ErrorCode.ERR_TypeVariableSameAsParent: return "ERR_TypeVariableSameAsParent_Description";
                case ErrorCode.ERR_UnifyingInterfaceInstantiations: return "ERR_UnifyingInterfaceInstantiations_Description";
                case ErrorCode.ERR_TyVarNotFoundInConstraint: return "ERR_TyVarNotFoundInConstraint_Description";
                case ErrorCode.ERR_BadBoundType: return "ERR_BadBoundType_Description";
                case ErrorCode.ERR_SpecialTypeAsBound: return "ERR_SpecialTypeAsBound_Description";
                case ErrorCode.ERR_BadVisBound: return "ERR_BadVisBound_Description";
                case ErrorCode.ERR_LookupInTypeVariable: return "ERR_LookupInTypeVariable_Description";
                case ErrorCode.ERR_BadConstraintType: return "ERR_BadConstraintType_Description";
                case ErrorCode.ERR_InstanceMemberInStaticClass: return "ERR_InstanceMemberInStaticClass_Description";
                case ErrorCode.ERR_StaticBaseClass: return "ERR_StaticBaseClass_Description";
                case ErrorCode.ERR_ConstructorInStaticClass: return "ERR_ConstructorInStaticClass_Description";
                case ErrorCode.ERR_DestructorInStaticClass: return "ERR_DestructorInStaticClass_Description";
                case ErrorCode.ERR_InstantiatingStaticClass: return "ERR_InstantiatingStaticClass_Description";
                case ErrorCode.ERR_StaticDerivedFromNonObject: return "ERR_StaticDerivedFromNonObject_Description";
                case ErrorCode.ERR_StaticClassInterfaceImpl: return "ERR_StaticClassInterfaceImpl_Description";
                case ErrorCode.ERR_OperatorInStaticClass: return "ERR_OperatorInStaticClass_Description";
                case ErrorCode.ERR_ConvertToStaticClass: return "ERR_ConvertToStaticClass_Description";
                case ErrorCode.ERR_ConstraintIsStaticClass: return "ERR_ConstraintIsStaticClass_Description";
                case ErrorCode.ERR_GenericArgIsStaticClass: return "ERR_GenericArgIsStaticClass_Description";
                case ErrorCode.ERR_ArrayOfStaticClass: return "ERR_ArrayOfStaticClass_Description";
                case ErrorCode.ERR_IndexerInStaticClass: return "ERR_IndexerInStaticClass_Description";
                case ErrorCode.ERR_ParameterIsStaticClass: return "ERR_ParameterIsStaticClass_Description";
                case ErrorCode.ERR_ReturnTypeIsStaticClass: return "ERR_ReturnTypeIsStaticClass_Description";
                case ErrorCode.ERR_VarDeclIsStaticClass: return "ERR_VarDeclIsStaticClass_Description";
                case ErrorCode.ERR_BadEmptyThrowInFinally: return "ERR_BadEmptyThrowInFinally_Description";
                case ErrorCode.ERR_InvalidSpecifier: return "ERR_InvalidSpecifier_Description";
                case ErrorCode.ERR_ForwardedTypeInThisAssembly: return "ERR_ForwardedTypeInThisAssembly_Description";
                case ErrorCode.ERR_ForwardedTypeIsNested: return "ERR_ForwardedTypeIsNested_Description";
                case ErrorCode.ERR_CycleInTypeForwarder: return "ERR_CycleInTypeForwarder_Description";
                case ErrorCode.ERR_AssemblyNameOnNonModule: return "ERR_AssemblyNameOnNonModule_Description";
                case ErrorCode.ERR_InvalidFwdType: return "ERR_InvalidFwdType_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberStatic: return "ERR_CloseUnimplementedInterfaceMemberStatic_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotPublic: return "ERR_CloseUnimplementedInterfaceMemberNotPublic_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongReturnType: return "ERR_CloseUnimplementedInterfaceMemberWrongReturnType_Description";
                case ErrorCode.ERR_DuplicateTypeForwarder: return "ERR_DuplicateTypeForwarder_Description";
                case ErrorCode.ERR_ExpectedSelectOrGroup: return "ERR_ExpectedSelectOrGroup_Description";
                case ErrorCode.ERR_ExpectedContextualKeywordOn: return "ERR_ExpectedContextualKeywordOn_Description";
                case ErrorCode.ERR_ExpectedContextualKeywordEquals: return "ERR_ExpectedContextualKeywordEquals_Description";
                case ErrorCode.ERR_ExpectedContextualKeywordBy: return "ERR_ExpectedContextualKeywordBy_Description";
                case ErrorCode.ERR_InvalidAnonymousTypeMemberDeclarator: return "ERR_InvalidAnonymousTypeMemberDeclarator_Description";
                case ErrorCode.ERR_InvalidInitializerElementInitializer: return "ERR_InvalidInitializerElementInitializer_Description";
                case ErrorCode.ERR_InconsistentLambdaParameterUsage: return "ERR_InconsistentLambdaParameterUsage_Description";
                case ErrorCode.ERR_PartialMemberCannotBeAbstract: return "ERR_PartialMemberCannotBeAbstract_Description";
                case ErrorCode.ERR_PartialMemberOnlyInPartialClass: return "ERR_PartialMemberOnlyInPartialClass_Description";
                case ErrorCode.ERR_PartialMemberNotExplicit: return "ERR_PartialMemberNotExplicit_Description";
                case ErrorCode.ERR_PartialMethodExtensionDifference: return "ERR_PartialMethodExtensionDifference_Description";
                case ErrorCode.ERR_PartialMethodOnlyOneLatent: return "ERR_PartialMethodOnlyOneLatent_Description";
                case ErrorCode.ERR_PartialMethodOnlyOneActual: return "ERR_PartialMethodOnlyOneActual_Description";
                case ErrorCode.ERR_PartialMemberParamsDifference: return "ERR_PartialMemberParamsDifference_Description";
                case ErrorCode.ERR_PartialMethodMustHaveLatent: return "ERR_PartialMethodMustHaveLatent_Description";
                case ErrorCode.ERR_PartialMethodInconsistentConstraints: return "ERR_PartialMethodInconsistentConstraints_Description";
                case ErrorCode.ERR_PartialMethodToDelegate: return "ERR_PartialMethodToDelegate_Description";
                case ErrorCode.ERR_PartialMemberStaticDifference: return "ERR_PartialMemberStaticDifference_Description";
                case ErrorCode.ERR_PartialMemberUnsafeDifference: return "ERR_PartialMemberUnsafeDifference_Description";
                case ErrorCode.ERR_PartialMethodInExpressionTree: return "ERR_PartialMethodInExpressionTree_Description";
                case ErrorCode.ERR_ExplicitImplCollisionOnRefOut: return "ERR_ExplicitImplCollisionOnRefOut_Description";
                case ErrorCode.ERR_IndirectRecursiveConstructorCall: return "ERR_IndirectRecursiveConstructorCall_Description";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedBadValue: return "ERR_ImplicitlyTypedVariableAssignedBadValue_Description";
                case ErrorCode.ERR_ImplicitlyTypedVariableWithNoInitializer: return "ERR_ImplicitlyTypedVariableWithNoInitializer_Description";
                case ErrorCode.ERR_ImplicitlyTypedVariableMultipleDeclarator: return "ERR_ImplicitlyTypedVariableMultipleDeclarator_Description";
                case ErrorCode.ERR_ImplicitlyTypedVariableAssignedArrayInitializer: return "ERR_ImplicitlyTypedVariableAssignedArrayInitializer_Description";
                case ErrorCode.ERR_ImplicitlyTypedLocalCannotBeFixed: return "ERR_ImplicitlyTypedLocalCannotBeFixed_Description";
                case ErrorCode.ERR_ImplicitlyTypedVariableCannotBeConst: return "ERR_ImplicitlyTypedVariableCannotBeConst_Description";
                case ErrorCode.ERR_TypeVarNotFound: return "ERR_TypeVarNotFound_Description";
                case ErrorCode.ERR_ImplicitlyTypedArrayNoBestType: return "ERR_ImplicitlyTypedArrayNoBestType_Description";
                case ErrorCode.ERR_AnonymousTypePropertyAssignedBadValue: return "ERR_AnonymousTypePropertyAssignedBadValue_Description";
                case ErrorCode.ERR_ExpressionTreeContainsBaseAccess: return "ERR_ExpressionTreeContainsBaseAccess_Description";
                case ErrorCode.ERR_ExpressionTreeContainsAssignment: return "ERR_ExpressionTreeContainsAssignment_Description";
                case ErrorCode.ERR_AnonymousTypeDuplicatePropertyName: return "ERR_AnonymousTypeDuplicatePropertyName_Description";
                case ErrorCode.ERR_StatementLambdaToExpressionTree: return "ERR_StatementLambdaToExpressionTree_Description";
                case ErrorCode.ERR_ExpressionTreeMustHaveDelegate: return "ERR_ExpressionTreeMustHaveDelegate_Description";
                case ErrorCode.ERR_AnonymousTypeNotAvailable: return "ERR_AnonymousTypeNotAvailable_Description";
                case ErrorCode.ERR_LambdaInIsAs: return "ERR_LambdaInIsAs_Description";
                case ErrorCode.ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer: return "ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer_Description";
                case ErrorCode.ERR_MissingArgument: return "ERR_MissingArgument_Description";
                case ErrorCode.ERR_VariableUsedBeforeDeclaration: return "ERR_VariableUsedBeforeDeclaration_Description";
                case ErrorCode.ERR_UnassignedThisAutoPropertyUnsupportedVersion: return "ERR_UnassignedThisAutoPropertyUnsupportedVersion_Description";
                case ErrorCode.ERR_VariableUsedBeforeDeclarationAndHidesField: return "ERR_VariableUsedBeforeDeclarationAndHidesField_Description";
                case ErrorCode.ERR_ExpressionTreeContainsBadCoalesce: return "ERR_ExpressionTreeContainsBadCoalesce_Description";
                case ErrorCode.ERR_ArrayInitializerExpected: return "ERR_ArrayInitializerExpected_Description";
                case ErrorCode.ERR_ArrayInitializerIncorrectLength: return "ERR_ArrayInitializerIncorrectLength_Description";
                case ErrorCode.ERR_ExpressionTreeContainsNamedArgument: return "ERR_ExpressionTreeContainsNamedArgument_Description";
                case ErrorCode.ERR_ExpressionTreeContainsOptionalArgument: return "ERR_ExpressionTreeContainsOptionalArgument_Description";
                case ErrorCode.ERR_ExpressionTreeContainsIndexedProperty: return "ERR_ExpressionTreeContainsIndexedProperty_Description";
                case ErrorCode.ERR_IndexedPropertyRequiresParams: return "ERR_IndexedPropertyRequiresParams_Description";
                case ErrorCode.ERR_IndexedPropertyMustHaveAllOptionalParams: return "ERR_IndexedPropertyMustHaveAllOptionalParams_Description";
                case ErrorCode.ERR_IdentifierExpected: return "ERR_IdentifierExpected_Description";
                case ErrorCode.ERR_SemicolonExpected: return "ERR_SemicolonExpected_Description";
                case ErrorCode.ERR_SyntaxError: return "ERR_SyntaxError_Description";
                case ErrorCode.ERR_DuplicateModifier: return "ERR_DuplicateModifier_Description";
                case ErrorCode.ERR_DuplicateAccessor: return "ERR_DuplicateAccessor_Description";
                case ErrorCode.ERR_IntegralTypeExpected: return "ERR_IntegralTypeExpected_Description";
                case ErrorCode.ERR_IllegalEscape: return "ERR_IllegalEscape_Description";
                case ErrorCode.ERR_NewlineInConst: return "ERR_NewlineInConst_Description";
                case ErrorCode.ERR_EmptyCharConst: return "ERR_EmptyCharConst_Description";
                case ErrorCode.ERR_TooManyCharsInConst: return "ERR_TooManyCharsInConst_Description";
                case ErrorCode.ERR_InvalidNumber: return "ERR_InvalidNumber_Description";
                case ErrorCode.ERR_GetOrSetExpected: return "ERR_GetOrSetExpected_Description";
                case ErrorCode.ERR_ClassTypeExpected: return "ERR_ClassTypeExpected_Description";
                case ErrorCode.ERR_NamedArgumentExpected: return "ERR_NamedArgumentExpected_Description";
                case ErrorCode.ERR_TooManyCatches: return "ERR_TooManyCatches_Description";
                case ErrorCode.ERR_ThisOrBaseExpected: return "ERR_ThisOrBaseExpected_Description";
                case ErrorCode.ERR_OvlUnaryOperatorExpected: return "ERR_OvlUnaryOperatorExpected_Description";
                case ErrorCode.ERR_OvlBinaryOperatorExpected: return "ERR_OvlBinaryOperatorExpected_Description";
                case ErrorCode.ERR_IntOverflow: return "ERR_IntOverflow_Description";
                case ErrorCode.ERR_EOFExpected: return "ERR_EOFExpected_Description";
                case ErrorCode.ERR_BadEmbeddedStmt: return "ERR_BadEmbeddedStmt_Description";
                case ErrorCode.ERR_PPDirectiveExpected: return "ERR_PPDirectiveExpected_Description";
                case ErrorCode.ERR_EndOfPPLineExpected: return "ERR_EndOfPPLineExpected_Description";
                case ErrorCode.ERR_CloseParenExpected: return "ERR_CloseParenExpected_Description";
                case ErrorCode.ERR_EndifDirectiveExpected: return "ERR_EndifDirectiveExpected_Description";
                case ErrorCode.ERR_UnexpectedDirective: return "ERR_UnexpectedDirective_Description";
                case ErrorCode.ERR_ErrorDirective: return "ERR_ErrorDirective_Description";
                case ErrorCode.ERR_TypeExpected: return "ERR_TypeExpected_Description";
                case ErrorCode.ERR_PPDefFollowsToken: return "ERR_PPDefFollowsToken_Description";
                case ErrorCode.ERR_OpenEndedComment: return "ERR_OpenEndedComment_Description";
                case ErrorCode.ERR_OvlOperatorExpected: return "ERR_OvlOperatorExpected_Description";
                case ErrorCode.ERR_EndRegionDirectiveExpected: return "ERR_EndRegionDirectiveExpected_Description";
                case ErrorCode.ERR_UnterminatedStringLit: return "ERR_UnterminatedStringLit_Description";
                case ErrorCode.ERR_BadDirectivePlacement: return "ERR_BadDirectivePlacement_Description";
                case ErrorCode.ERR_IdentifierExpectedKW: return "ERR_IdentifierExpectedKW_Description";
                case ErrorCode.ERR_SemiOrLBraceExpected: return "ERR_SemiOrLBraceExpected_Description";
                case ErrorCode.ERR_MultiTypeInDeclaration: return "ERR_MultiTypeInDeclaration_Description";
                case ErrorCode.ERR_AddOrRemoveExpected: return "ERR_AddOrRemoveExpected_Description";
                case ErrorCode.ERR_UnexpectedCharacter: return "ERR_UnexpectedCharacter_Description";
                case ErrorCode.ERR_ProtectedInStatic: return "ERR_ProtectedInStatic_Description";
                case ErrorCode.ERR_IncrementLvalueExpected: return "ERR_IncrementLvalueExpected_Description";
                case ErrorCode.ERR_NoSuchMemberOrExtension: return "ERR_NoSuchMemberOrExtension_Description";
                case ErrorCode.ERR_DeprecatedCollectionInitAddStr: return "ERR_DeprecatedCollectionInitAddStr_Description";
                case ErrorCode.ERR_DefaultValueNotAllowed: return "ERR_DefaultValueNotAllowed_Description";
                case ErrorCode.ERR_PartialWrongTypeParamsVariance: return "ERR_PartialWrongTypeParamsVariance_Description";
                case ErrorCode.ERR_GlobalSingleTypeNameNotFoundFwd: return "ERR_GlobalSingleTypeNameNotFoundFwd_Description";
                case ErrorCode.ERR_DottedTypeNameNotFoundInNSFwd: return "ERR_DottedTypeNameNotFoundInNSFwd_Description";
                case ErrorCode.ERR_SingleTypeNameNotFoundFwd: return "ERR_SingleTypeNameNotFoundFwd_Description";
                case ErrorCode.ERR_UnexpectedToken: return "ERR_UnexpectedToken_Description";
                case ErrorCode.ERR_BadThisParam: return "ERR_BadThisParam_Description";
                case ErrorCode.ERR_BadTypeforThis: return "ERR_BadTypeforThis_Description";
                case ErrorCode.ERR_BadParamModThis: return "ERR_BadParamModThis_Description";
                case ErrorCode.ERR_BadExtensionMeth: return "ERR_BadExtensionMeth_Description";
                case ErrorCode.ERR_BadExtensionAgg: return "ERR_BadExtensionAgg_Description";
                case ErrorCode.ERR_DupParamMod: return "ERR_DupParamMod_Description";
                case ErrorCode.ERR_ExtensionMethodsDecl: return "ERR_ExtensionMethodsDecl_Description";
                case ErrorCode.ERR_ExtensionAttrNotFound: return "ERR_ExtensionAttrNotFound_Description";
                case ErrorCode.ERR_ExplicitExtension: return "ERR_ExplicitExtension_Description";
                case ErrorCode.ERR_ValueTypeExtDelegate: return "ERR_ValueTypeExtDelegate_Description";
                case ErrorCode.ERR_BadArgCount: return "ERR_BadArgCount_Description";
                case ErrorCode.ERR_BadArgType: return "ERR_BadArgType_Description";
                case ErrorCode.ERR_NoSourceFile: return "ERR_NoSourceFile_Description";
                case ErrorCode.ERR_CantRefResource: return "ERR_CantRefResource_Description";
                case ErrorCode.ERR_ResourceNotUnique: return "ERR_ResourceNotUnique_Description";
                case ErrorCode.ERR_ImportNonAssembly: return "ERR_ImportNonAssembly_Description";
                case ErrorCode.ERR_RefLvalueExpected: return "ERR_RefLvalueExpected_Description";
                case ErrorCode.ERR_BaseInStaticMeth: return "ERR_BaseInStaticMeth_Description";
                case ErrorCode.ERR_BaseInBadContext: return "ERR_BaseInBadContext_Description";
                case ErrorCode.ERR_RbraceExpected: return "ERR_RbraceExpected_Description";
                case ErrorCode.ERR_LbraceExpected: return "ERR_LbraceExpected_Description";
                case ErrorCode.ERR_InExpected: return "ERR_InExpected_Description";
                case ErrorCode.ERR_InvalidPreprocExpr: return "ERR_InvalidPreprocExpr_Description";
                case ErrorCode.ERR_InvalidMemberDecl: return "ERR_InvalidMemberDecl_Description";
                case ErrorCode.ERR_MemberNeedsType: return "ERR_MemberNeedsType_Description";
                case ErrorCode.ERR_BadBaseType: return "ERR_BadBaseType_Description";
                case ErrorCode.ERR_ExpectedEndTry: return "ERR_ExpectedEndTry_Description";
                case ErrorCode.ERR_InvalidExprTerm: return "ERR_InvalidExprTerm_Description";
                case ErrorCode.ERR_BadNewExpr: return "ERR_BadNewExpr_Description";
                case ErrorCode.ERR_NoNamespacePrivate: return "ERR_NoNamespacePrivate_Description";
                case ErrorCode.ERR_BadVarDecl: return "ERR_BadVarDecl_Description";
                case ErrorCode.ERR_UsingAfterElements: return "ERR_UsingAfterElements_Description";
                case ErrorCode.ERR_BadBinOpArgs: return "ERR_BadBinOpArgs_Description";
                case ErrorCode.ERR_BadUnOpArgs: return "ERR_BadUnOpArgs_Description";
                case ErrorCode.ERR_NoVoidParameter: return "ERR_NoVoidParameter_Description";
                case ErrorCode.ERR_DuplicateAlias: return "ERR_DuplicateAlias_Description";
                case ErrorCode.ERR_BadProtectedAccess: return "ERR_BadProtectedAccess_Description";
                case ErrorCode.ERR_AddModuleAssembly: return "ERR_AddModuleAssembly_Description";
                case ErrorCode.ERR_BindToBogusProp2: return "ERR_BindToBogusProp2_Description";
                case ErrorCode.ERR_BindToBogusProp1: return "ERR_BindToBogusProp1_Description";
                case ErrorCode.ERR_NoVoidHere: return "ERR_NoVoidHere_Description";
                case ErrorCode.ERR_IndexerNeedsParam: return "ERR_IndexerNeedsParam_Description";
                case ErrorCode.ERR_BadArraySyntax: return "ERR_BadArraySyntax_Description";
                case ErrorCode.ERR_BadOperatorSyntax: return "ERR_BadOperatorSyntax_Description";
                case ErrorCode.ERR_MainClassNotFound: return "ERR_MainClassNotFound_Description";
                case ErrorCode.ERR_MainClassNotClass: return "ERR_MainClassNotClass_Description";
                case ErrorCode.ERR_NoMainInClass: return "ERR_NoMainInClass_Description";
                case ErrorCode.ERR_OutputNeedsName: return "ERR_OutputNeedsName_Description";
                case ErrorCode.ERR_CantHaveWin32ResAndManifest: return "ERR_CantHaveWin32ResAndManifest_Description";
                case ErrorCode.ERR_CantHaveWin32ResAndIcon: return "ERR_CantHaveWin32ResAndIcon_Description";
                case ErrorCode.ERR_CantReadResource: return "ERR_CantReadResource_Description";
                case ErrorCode.ERR_DocFileGen: return "ERR_DocFileGen_Description";
                case ErrorCode.ERR_BadStackAllocExpr: return "ERR_BadStackAllocExpr_Description";
                case ErrorCode.ERR_InvalidLineNumber: return "ERR_InvalidLineNumber_Description";
                case ErrorCode.ERR_MissingPPFile: return "ERR_MissingPPFile_Description";
                case ErrorCode.ERR_ForEachMissingMember: return "ERR_ForEachMissingMember_Description";
                case ErrorCode.ERR_BadWin32Res: return "ERR_BadWin32Res_Description";
                case ErrorCode.ERR_BadModifierLocation: return "ERR_BadModifierLocation_Description";
                case ErrorCode.ERR_MissingArraySize: return "ERR_MissingArraySize_Description";
                case ErrorCode.ERR_BadDelArgCount: return "ERR_BadDelArgCount_Description";
                case ErrorCode.ERR_UnexpectedSemicolon: return "ERR_UnexpectedSemicolon_Description";
                case ErrorCode.ERR_MethodReturnCantBeRefAny: return "ERR_MethodReturnCantBeRefAny_Description";
                case ErrorCode.ERR_CompileCancelled: return "ERR_CompileCancelled_Description";
                case ErrorCode.ERR_MethodArgCantBeRefAny: return "ERR_MethodArgCantBeRefAny_Description";
                case ErrorCode.ERR_AssgReadonlyLocal: return "ERR_AssgReadonlyLocal_Description";
                case ErrorCode.ERR_RefReadonlyLocal: return "ERR_RefReadonlyLocal_Description";
                case ErrorCode.ERR_CantUseRequiredAttribute: return "ERR_CantUseRequiredAttribute_Description";
                case ErrorCode.ERR_NoModifiersOnAccessor: return "ERR_NoModifiersOnAccessor_Description";
                case ErrorCode.ERR_ParamsCantBeWithModifier: return "ERR_ParamsCantBeWithModifier_Description";
                case ErrorCode.ERR_ReturnNotLValue: return "ERR_ReturnNotLValue_Description";
                case ErrorCode.ERR_MissingCoClass: return "ERR_MissingCoClass_Description";
                case ErrorCode.ERR_AmbiguousAttribute: return "ERR_AmbiguousAttribute_Description";
                case ErrorCode.ERR_BadArgExtraRef: return "ERR_BadArgExtraRef_Description";
                case ErrorCode.ERR_BadCompatMode: return "ERR_BadCompatMode_Description";
                case ErrorCode.ERR_DelegateOnConditional: return "ERR_DelegateOnConditional_Description";
                case ErrorCode.ERR_CantMakeTempFile: return "ERR_CantMakeTempFile_Description";
                case ErrorCode.ERR_BadArgRef: return "ERR_BadArgRef_Description";
                case ErrorCode.ERR_YieldInAnonMeth: return "ERR_YieldInAnonMeth_Description";
                case ErrorCode.ERR_ReturnInIterator: return "ERR_ReturnInIterator_Description";
                case ErrorCode.ERR_BadIteratorArgType: return "ERR_BadIteratorArgType_Description";
                case ErrorCode.ERR_BadIteratorReturn: return "ERR_BadIteratorReturn_Description";
                case ErrorCode.ERR_BadYieldInFinally: return "ERR_BadYieldInFinally_Description";
                case ErrorCode.ERR_BadYieldInTryOfCatch: return "ERR_BadYieldInTryOfCatch_Description";
                case ErrorCode.ERR_EmptyYield: return "ERR_EmptyYield_Description";
                case ErrorCode.ERR_AnonDelegateCantUse: return "ERR_AnonDelegateCantUse_Description";
                case ErrorCode.ERR_BadYieldInCatch: return "ERR_BadYieldInCatch_Description";
                case ErrorCode.ERR_BadDelegateLeave: return "ERR_BadDelegateLeave_Description";
                case ErrorCode.ERR_VarargsIterator: return "ERR_VarargsIterator_Description";
                case ErrorCode.ERR_UnsafeIteratorArgType: return "ERR_UnsafeIteratorArgType_Description";
                case ErrorCode.ERR_BadCoClassSig: return "ERR_BadCoClassSig_Description";
                case ErrorCode.ERR_MultipleIEnumOfT: return "ERR_MultipleIEnumOfT_Description";
                case ErrorCode.ERR_FixedDimsRequired: return "ERR_FixedDimsRequired_Description";
                case ErrorCode.ERR_FixedNotInStruct: return "ERR_FixedNotInStruct_Description";
                case ErrorCode.ERR_AnonymousReturnExpected: return "ERR_AnonymousReturnExpected_Description";
                case ErrorCode.ERR_ExpectedVerbatimLiteral: return "ERR_ExpectedVerbatimLiteral_Description";
                case ErrorCode.ERR_AssgReadonly2: return "ERR_AssgReadonly2_Description";
                case ErrorCode.ERR_RefReadonly2: return "ERR_RefReadonly2_Description";
                case ErrorCode.ERR_AssgReadonlyStatic2: return "ERR_AssgReadonlyStatic2_Description";
                case ErrorCode.ERR_RefReadonlyStatic2: return "ERR_RefReadonlyStatic2_Description";
                case ErrorCode.ERR_AssgReadonlyLocal2Cause: return "ERR_AssgReadonlyLocal2Cause_Description";
                case ErrorCode.ERR_RefReadonlyLocal2Cause: return "ERR_RefReadonlyLocal2Cause_Description";
                case ErrorCode.ERR_AssgReadonlyLocalCause: return "ERR_AssgReadonlyLocalCause_Description";
                case ErrorCode.ERR_RefReadonlyLocalCause: return "ERR_RefReadonlyLocalCause_Description";
                case ErrorCode.ERR_AnonMethToNonDel: return "ERR_AnonMethToNonDel_Description";
                case ErrorCode.ERR_CantConvAnonMethParams: return "ERR_CantConvAnonMethParams_Description";
                case ErrorCode.ERR_CantConvAnonMethReturns: return "ERR_CantConvAnonMethReturns_Description";
                case ErrorCode.ERR_IllegalFixedType: return "ERR_IllegalFixedType_Description";
                case ErrorCode.ERR_FixedOverflow: return "ERR_FixedOverflow_Description";
                case ErrorCode.ERR_InvalidFixedArraySize: return "ERR_InvalidFixedArraySize_Description";
                case ErrorCode.ERR_FixedBufferNotFixed: return "ERR_FixedBufferNotFixed_Description";
                case ErrorCode.ERR_AttributeNotOnAccessor: return "ERR_AttributeNotOnAccessor_Description";
                case ErrorCode.ERR_IllegalVarArgs: return "ERR_IllegalVarArgs_Description";
                case ErrorCode.ERR_IllegalParams: return "ERR_IllegalParams_Description";
                case ErrorCode.ERR_BadModifiersOnNamespace: return "ERR_BadModifiersOnNamespace_Description";
                case ErrorCode.ERR_BadPlatformType: return "ERR_BadPlatformType_Description";
                case ErrorCode.ERR_ThisStructNotInAnonMeth: return "ERR_ThisStructNotInAnonMeth_Description";
                case ErrorCode.ERR_NoConvToIDisp: return "ERR_NoConvToIDisp_Description";
                case ErrorCode.ERR_BadParamRef: return "ERR_BadParamRef_Description";
                case ErrorCode.ERR_BadParamExtraRef: return "ERR_BadParamExtraRef_Description";
                case ErrorCode.ERR_BadParamType: return "ERR_BadParamType_Description";
                case ErrorCode.ERR_BadExternIdentifier: return "ERR_BadExternIdentifier_Description";
                case ErrorCode.ERR_AliasMissingFile: return "ERR_AliasMissingFile_Description";
                case ErrorCode.ERR_GlobalExternAlias: return "ERR_GlobalExternAlias_Description";
                case ErrorCode.ERR_LocalCantBeFixedAndHoisted: return "ERR_LocalCantBeFixedAndHoisted_Description";
                case ErrorCode.ERR_CantConvAnonMethNoParams: return "ERR_CantConvAnonMethNoParams_Description";
                case ErrorCode.ERR_ConditionalOnNonAttributeClass: return "ERR_ConditionalOnNonAttributeClass_Description";
                case ErrorCode.ERR_DuplicateImport: return "ERR_DuplicateImport_Description";
                case ErrorCode.ERR_DuplicateImportSimple: return "ERR_DuplicateImportSimple_Description";
                case ErrorCode.ERR_AssemblyMatchBadVersion: return "ERR_AssemblyMatchBadVersion_Description";
                case ErrorCode.ERR_FixedNeedsLvalue: return "ERR_FixedNeedsLvalue_Description";
                case ErrorCode.ERR_CantChangeTypeOnOverride: return "ERR_CantChangeTypeOnOverride_Description";
                case ErrorCode.ERR_DoNotUseFixedBufferAttr: return "ERR_DoNotUseFixedBufferAttr_Description";
                case ErrorCode.ERR_CantOpenWin32Res: return "ERR_CantOpenWin32Res_Description";
                case ErrorCode.ERR_NoMultipleInheritance: return "ERR_NoMultipleInheritance_Description";
                case ErrorCode.ERR_BaseClassMustBeFirst: return "ERR_BaseClassMustBeFirst_Description";
                case ErrorCode.ERR_FriendAssemblyBadArgs: return "ERR_FriendAssemblyBadArgs_Description";
                case ErrorCode.ERR_FriendAssemblySNReq: return "ERR_FriendAssemblySNReq_Description";
                case ErrorCode.ERR_DelegateOnNullable: return "ERR_DelegateOnNullable_Description";
                case ErrorCode.ERR_BadCtorArgCount: return "ERR_BadCtorArgCount_Description";
                case ErrorCode.ERR_GlobalAttributesNotFirst: return "ERR_GlobalAttributesNotFirst_Description";
                case ErrorCode.ERR_ExpressionExpected: return "ERR_ExpressionExpected_Description";
                case ErrorCode.ERR_DefaultValueMustBeConstant: return "ERR_DefaultValueMustBeConstant_Description";
                case ErrorCode.ERR_DefaultValueBeforeRequiredValue: return "ERR_DefaultValueBeforeRequiredValue_Description";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgument: return "ERR_NamedArgumentSpecificationBeforeFixedArgument_Description";
                case ErrorCode.ERR_BadNamedArgument: return "ERR_BadNamedArgument_Description";
                case ErrorCode.ERR_DuplicateNamedArgument: return "ERR_DuplicateNamedArgument_Description";
                case ErrorCode.ERR_RefOutDefaultValue: return "ERR_RefOutDefaultValue_Description";
                case ErrorCode.ERR_NamedArgumentForArray: return "ERR_NamedArgumentForArray_Description";
                case ErrorCode.ERR_DefaultValueForExtensionParameter: return "ERR_DefaultValueForExtensionParameter_Description";
                case ErrorCode.ERR_NamedArgumentUsedInPositional: return "ERR_NamedArgumentUsedInPositional_Description";
                case ErrorCode.ERR_DefaultValueUsedWithAttributes: return "ERR_DefaultValueUsedWithAttributes_Description";
                case ErrorCode.ERR_BadNamedArgumentForDelegateInvoke: return "ERR_BadNamedArgumentForDelegateInvoke_Description";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttribute: return "ERR_NoPIAAssemblyMissingAttribute_Description";
                case ErrorCode.ERR_NoCanonicalView: return "ERR_NoCanonicalView_Description";
                case ErrorCode.ERR_NoConversionForDefaultParam: return "ERR_NoConversionForDefaultParam_Description";
                case ErrorCode.ERR_DefaultValueForParamsParameter: return "ERR_DefaultValueForParamsParameter_Description";
                case ErrorCode.ERR_NewCoClassOnLink: return "ERR_NewCoClassOnLink_Description";
                case ErrorCode.ERR_NoPIANestedType: return "ERR_NoPIANestedType_Description";
                case ErrorCode.ERR_InteropTypeMissingAttribute: return "ERR_InteropTypeMissingAttribute_Description";
                case ErrorCode.ERR_InteropStructContainsMethods: return "ERR_InteropStructContainsMethods_Description";
                case ErrorCode.ERR_InteropTypesWithSameNameAndGuid: return "ERR_InteropTypesWithSameNameAndGuid_Description";
                case ErrorCode.ERR_NoPIAAssemblyMissingAttributes: return "ERR_NoPIAAssemblyMissingAttributes_Description";
                case ErrorCode.ERR_AssemblySpecifiedForLinkAndRef: return "ERR_AssemblySpecifiedForLinkAndRef_Description";
                case ErrorCode.ERR_LocalTypeNameClash: return "ERR_LocalTypeNameClash_Description";
                case ErrorCode.ERR_NotNullRefDefaultParameter: return "ERR_NotNullRefDefaultParameter_Description";
                case ErrorCode.ERR_FixedLocalInLambda: return "ERR_FixedLocalInLambda_Description";
                case ErrorCode.ERR_MissingMethodOnSourceInterface: return "ERR_MissingMethodOnSourceInterface_Description";
                case ErrorCode.ERR_MissingSourceInterface: return "ERR_MissingSourceInterface_Description";
                case ErrorCode.ERR_GenericsUsedInNoPIAType: return "ERR_GenericsUsedInNoPIAType_Description";
                case ErrorCode.ERR_GenericsUsedAcrossAssemblies: return "ERR_GenericsUsedAcrossAssemblies_Description";
                case ErrorCode.ERR_NoConversionForNubDefaultParam: return "ERR_NoConversionForNubDefaultParam_Description";
                case ErrorCode.ERR_InvalidSubsystemVersion: return "ERR_InvalidSubsystemVersion_Description";
                case ErrorCode.ERR_InteropMethodWithBody: return "ERR_InteropMethodWithBody_Description";
                case ErrorCode.ERR_BadWarningLevel: return "ERR_BadWarningLevel_Description";
                case ErrorCode.ERR_BadDebugType: return "ERR_BadDebugType_Description";
                case ErrorCode.ERR_BadResourceVis: return "ERR_BadResourceVis_Description";
                case ErrorCode.ERR_DefaultValueTypeMustMatch: return "ERR_DefaultValueTypeMustMatch_Description";
                case ErrorCode.ERR_DefaultValueBadValueType: return "ERR_DefaultValueBadValueType_Description";
                case ErrorCode.ERR_MemberAlreadyInitialized: return "ERR_MemberAlreadyInitialized_Description";
                case ErrorCode.ERR_MemberCannotBeInitialized: return "ERR_MemberCannotBeInitialized_Description";
                case ErrorCode.ERR_StaticMemberInObjectInitializer: return "ERR_StaticMemberInObjectInitializer_Description";
                case ErrorCode.ERR_ReadonlyValueTypeInObjectInitializer: return "ERR_ReadonlyValueTypeInObjectInitializer_Description";
                case ErrorCode.ERR_ValueTypePropertyInObjectInitializer: return "ERR_ValueTypePropertyInObjectInitializer_Description";
                case ErrorCode.ERR_UnsafeTypeInObjectCreation: return "ERR_UnsafeTypeInObjectCreation_Description";
                case ErrorCode.ERR_EmptyElementInitializer: return "ERR_EmptyElementInitializer_Description";
                case ErrorCode.ERR_InitializerAddHasWrongSignature: return "ERR_InitializerAddHasWrongSignature_Description";
                case ErrorCode.ERR_CollectionInitRequiresIEnumerable: return "ERR_CollectionInitRequiresIEnumerable_Description";
                case ErrorCode.ERR_CantOpenWin32Manifest: return "ERR_CantOpenWin32Manifest_Description";
                case ErrorCode.ERR_BadInstanceArgType: return "ERR_BadInstanceArgType_Description";
                case ErrorCode.ERR_QueryDuplicateRangeVariable: return "ERR_QueryDuplicateRangeVariable_Description";
                case ErrorCode.ERR_QueryRangeVariableOverrides: return "ERR_QueryRangeVariableOverrides_Description";
                case ErrorCode.ERR_QueryRangeVariableAssignedBadValue: return "ERR_QueryRangeVariableAssignedBadValue_Description";
                case ErrorCode.ERR_QueryNoProviderCastable: return "ERR_QueryNoProviderCastable_Description";
                case ErrorCode.ERR_QueryNoProviderStandard: return "ERR_QueryNoProviderStandard_Description";
                case ErrorCode.ERR_QueryNoProvider: return "ERR_QueryNoProvider_Description";
                case ErrorCode.ERR_QueryOuterKey: return "ERR_QueryOuterKey_Description";
                case ErrorCode.ERR_QueryInnerKey: return "ERR_QueryInnerKey_Description";
                case ErrorCode.ERR_QueryOutRefRangeVariable: return "ERR_QueryOutRefRangeVariable_Description";
                case ErrorCode.ERR_QueryMultipleProviders: return "ERR_QueryMultipleProviders_Description";
                case ErrorCode.ERR_QueryTypeInferenceFailedMulti: return "ERR_QueryTypeInferenceFailedMulti_Description";
                case ErrorCode.ERR_QueryTypeInferenceFailed: return "ERR_QueryTypeInferenceFailed_Description";
                case ErrorCode.ERR_QueryTypeInferenceFailedSelectMany: return "ERR_QueryTypeInferenceFailedSelectMany_Description";
                case ErrorCode.ERR_ExpressionTreeContainsPointerOp: return "ERR_ExpressionTreeContainsPointerOp_Description";
                case ErrorCode.ERR_ExpressionTreeContainsAnonymousMethod: return "ERR_ExpressionTreeContainsAnonymousMethod_Description";
                case ErrorCode.ERR_AnonymousMethodToExpressionTree: return "ERR_AnonymousMethodToExpressionTree_Description";
                case ErrorCode.ERR_QueryRangeVariableReadOnly: return "ERR_QueryRangeVariableReadOnly_Description";
                case ErrorCode.ERR_QueryRangeVariableSameAsTypeParam: return "ERR_QueryRangeVariableSameAsTypeParam_Description";
                case ErrorCode.ERR_TypeVarNotFoundRangeVariable: return "ERR_TypeVarNotFoundRangeVariable_Description";
                case ErrorCode.ERR_BadArgTypesForCollectionAdd: return "ERR_BadArgTypesForCollectionAdd_Description";
                case ErrorCode.ERR_ByRefParameterInExpressionTree: return "ERR_ByRefParameterInExpressionTree_Description";
                case ErrorCode.ERR_VarArgsInExpressionTree: return "ERR_VarArgsInExpressionTree_Description";
                case ErrorCode.ERR_InitializerAddHasParamModifiers: return "ERR_InitializerAddHasParamModifiers_Description";
                case ErrorCode.ERR_NonInvocableMemberCalled: return "ERR_NonInvocableMemberCalled_Description";
                case ErrorCode.ERR_ObjectOrCollectionInitializerWithDelegateCreation: return "ERR_ObjectOrCollectionInitializerWithDelegateCreation_Description";
                case ErrorCode.ERR_InvalidConstantDeclarationType: return "ERR_InvalidConstantDeclarationType_Description";
                case ErrorCode.ERR_IllegalVarianceSyntax: return "ERR_IllegalVarianceSyntax_Description";
                case ErrorCode.ERR_UnexpectedVariance: return "ERR_UnexpectedVariance_Description";
                case ErrorCode.ERR_BadDynamicTypeof: return "ERR_BadDynamicTypeof_Description";
                case ErrorCode.ERR_ExpressionTreeContainsDynamicOperation: return "ERR_ExpressionTreeContainsDynamicOperation_Description";
                case ErrorCode.ERR_BadDynamicConversion: return "ERR_BadDynamicConversion_Description";
                case ErrorCode.ERR_DeriveFromDynamic: return "ERR_DeriveFromDynamic_Description";
                case ErrorCode.ERR_DeriveFromConstructedDynamic: return "ERR_DeriveFromConstructedDynamic_Description";
                case ErrorCode.ERR_DynamicTypeAsBound: return "ERR_DynamicTypeAsBound_Description";
                case ErrorCode.ERR_ConstructedDynamicTypeAsBound: return "ERR_ConstructedDynamicTypeAsBound_Description";
                case ErrorCode.ERR_DynamicRequiredTypesMissing: return "ERR_DynamicRequiredTypesMissing_Description";
                case ErrorCode.ERR_ExplicitDynamicAttr: return "ERR_ExplicitDynamicAttr_Description";
                case ErrorCode.ERR_NoDynamicPhantomOnBase: return "ERR_NoDynamicPhantomOnBase_Description";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseIndexer: return "ERR_NoDynamicPhantomOnBaseIndexer_Description";
                case ErrorCode.ERR_BadArgTypeDynamicExtension: return "ERR_BadArgTypeDynamicExtension_Description";
                case ErrorCode.ERR_NoDynamicPhantomOnBaseCtor: return "ERR_NoDynamicPhantomOnBaseCtor_Description";
                case ErrorCode.ERR_BadDynamicMethodArgMemgrp: return "ERR_BadDynamicMethodArgMemgrp_Description";
                case ErrorCode.ERR_BadDynamicMethodArgLambda: return "ERR_BadDynamicMethodArgLambda_Description";
                case ErrorCode.ERR_BadDynamicMethodArg: return "ERR_BadDynamicMethodArg_Description";
                case ErrorCode.ERR_BadDynamicQuery: return "ERR_BadDynamicQuery_Description";
                case ErrorCode.ERR_DynamicAttributeMissing: return "ERR_DynamicAttributeMissing_Description";
                case ErrorCode.ERR_BadAsyncReturn: return "ERR_BadAsyncReturn_Description";
                case ErrorCode.ERR_BadAwaitInFinally: return "ERR_BadAwaitInFinally_Description";
                case ErrorCode.ERR_BadAwaitInCatch: return "ERR_BadAwaitInCatch_Description";
                case ErrorCode.ERR_BadAwaitArg: return "ERR_BadAwaitArg_Description";
                case ErrorCode.ERR_BadAsyncArgType: return "ERR_BadAsyncArgType_Description";
                case ErrorCode.ERR_BadAsyncExpressionTree: return "ERR_BadAsyncExpressionTree_Description";
                case ErrorCode.ERR_MixingWinRTEventWithRegular: return "ERR_MixingWinRTEventWithRegular_Description";
                case ErrorCode.ERR_BadAwaitWithoutAsync: return "ERR_BadAwaitWithoutAsync_Description";
                case ErrorCode.ERR_BadAsyncLacksBody: return "ERR_BadAsyncLacksBody_Description";
                case ErrorCode.ERR_BadAwaitInQuery: return "ERR_BadAwaitInQuery_Description";
                case ErrorCode.ERR_BadAwaitInLock: return "ERR_BadAwaitInLock_Description";
                case ErrorCode.ERR_TaskRetNoObjectRequired: return "ERR_TaskRetNoObjectRequired_Description";
                case ErrorCode.ERR_FileNotFound: return "ERR_FileNotFound_Description";
                case ErrorCode.ERR_NoFileSpec: return "ERR_NoFileSpec_Description";
                case ErrorCode.ERR_SwitchNeedsString: return "ERR_SwitchNeedsString_Description";
                case ErrorCode.ERR_BadSwitch: return "ERR_BadSwitch_Description";
                case ErrorCode.ERR_OpenResponseFile: return "ERR_OpenResponseFile_Description";
                case ErrorCode.ERR_CantOpenFileWrite: return "ERR_CantOpenFileWrite_Description";
                case ErrorCode.ERR_BadBaseNumber: return "ERR_BadBaseNumber_Description";
                case ErrorCode.ERR_BinaryFile: return "ERR_BinaryFile_Description";
                case ErrorCode.ERR_NoMainOnDLL: return "ERR_NoMainOnDLL_Description";
                case ErrorCode.ERR_InvalidFileAlignment: return "ERR_InvalidFileAlignment_Description";
                case ErrorCode.ERR_OneAliasPerReference: return "ERR_OneAliasPerReference_Description";
                case ErrorCode.ERR_SwitchNeedsNumber: return "ERR_SwitchNeedsNumber_Description";
                case ErrorCode.ERR_MissingDebugSwitch: return "ERR_MissingDebugSwitch_Description";
                case ErrorCode.ERR_ComRefCallInExpressionTree: return "ERR_ComRefCallInExpressionTree_Description";
                case ErrorCode.ERR_InvalidFormatForGuidForOption: return "ERR_InvalidFormatForGuidForOption_Description";
                case ErrorCode.ERR_MissingGuidForOption: return "ERR_MissingGuidForOption_Description";
                case ErrorCode.ERR_InvalidOutputName: return "ERR_InvalidOutputName_Description";
                case ErrorCode.ERR_InvalidDebugInformationFormat: return "ERR_InvalidDebugInformationFormat_Description";
                case ErrorCode.ERR_LegacyObjectIdSyntax: return "ERR_LegacyObjectIdSyntax_Description";
                case ErrorCode.ERR_SourceLinkRequiresPdb: return "ERR_SourceLinkRequiresPdb_Description";
                case ErrorCode.ERR_CannotEmbedWithoutPdb: return "ERR_CannotEmbedWithoutPdb_Description";
                case ErrorCode.ERR_BadSwitchValue: return "ERR_BadSwitchValue_Description";
                case ErrorCode.ERR_BadAwaitArgIntrinsic: return "ERR_BadAwaitArgIntrinsic_Description";
                case ErrorCode.ERR_BadAwaitAsIdentifier: return "ERR_BadAwaitAsIdentifier_Description";
                case ErrorCode.ERR_AwaitInUnsafeContext: return "ERR_AwaitInUnsafeContext_Description";
                case ErrorCode.ERR_UnsafeAsyncArgType: return "ERR_UnsafeAsyncArgType_Description";
                case ErrorCode.ERR_VarargsAsync: return "ERR_VarargsAsync_Description";
                case ErrorCode.ERR_ByRefTypeAndAwait: return "ERR_ByRefTypeAndAwait_Description";
                case ErrorCode.ERR_BadAwaitArgVoidCall: return "ERR_BadAwaitArgVoidCall_Description";
                case ErrorCode.ERR_NonTaskMainCantBeAsync: return "ERR_NonTaskMainCantBeAsync_Description";
                case ErrorCode.ERR_CantConvAsyncAnonFuncReturns: return "ERR_CantConvAsyncAnonFuncReturns_Description";
                case ErrorCode.ERR_BadAwaiterPattern: return "ERR_BadAwaiterPattern_Description";
                case ErrorCode.ERR_BadSpecialByRefParameter: return "ERR_BadSpecialByRefParameter_Description";
                case ErrorCode.ERR_SpecialByRefInLambda: return "ERR_SpecialByRefInLambda_Description";
                case ErrorCode.ERR_SynchronizedAsyncMethod: return "ERR_SynchronizedAsyncMethod_Description";
                case ErrorCode.ERR_BadAsyncReturnExpression: return "ERR_BadAsyncReturnExpression_Description";
                case ErrorCode.ERR_NoConversionForCallerLineNumberParam: return "ERR_NoConversionForCallerLineNumberParam_Description";
                case ErrorCode.ERR_NoConversionForCallerFilePathParam: return "ERR_NoConversionForCallerFilePathParam_Description";
                case ErrorCode.ERR_NoConversionForCallerMemberNameParam: return "ERR_NoConversionForCallerMemberNameParam_Description";
                case ErrorCode.ERR_BadCallerLineNumberParamWithoutDefaultValue: return "ERR_BadCallerLineNumberParamWithoutDefaultValue_Description";
                case ErrorCode.ERR_BadCallerFilePathParamWithoutDefaultValue: return "ERR_BadCallerFilePathParamWithoutDefaultValue_Description";
                case ErrorCode.ERR_BadCallerMemberNameParamWithoutDefaultValue: return "ERR_BadCallerMemberNameParamWithoutDefaultValue_Description";
                case ErrorCode.ERR_BadPrefer32OnLib: return "ERR_BadPrefer32OnLib_Description";
                case ErrorCode.ERR_DoesntImplementAwaitInterface: return "ERR_DoesntImplementAwaitInterface_Description";
                case ErrorCode.ERR_BadAwaitArg_NeedSystem: return "ERR_BadAwaitArg_NeedSystem_Description";
                case ErrorCode.ERR_CantReturnVoid: return "ERR_CantReturnVoid_Description";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsync_Description";
                case ErrorCode.ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct: return "ERR_SecurityCriticalOrSecuritySafeCriticalOnAsyncInClassOrStruct_Description";
                case ErrorCode.ERR_BadAwaitWithoutAsyncMethod: return "ERR_BadAwaitWithoutAsyncMethod_Description";
                case ErrorCode.ERR_BadAwaitWithoutVoidAsyncMethod: return "ERR_BadAwaitWithoutVoidAsyncMethod_Description";
                case ErrorCode.ERR_BadAwaitWithoutAsyncLambda: return "ERR_BadAwaitWithoutAsyncLambda_Description";
                case ErrorCode.ERR_NoSuchMemberOrExtensionNeedUsing: return "ERR_NoSuchMemberOrExtensionNeedUsing_Description";
                case ErrorCode.ERR_NoEntryPoint: return "ERR_NoEntryPoint_Description";
                case ErrorCode.ERR_UnexpectedAliasedName: return "ERR_UnexpectedAliasedName_Description";
                case ErrorCode.ERR_UnexpectedGenericName: return "ERR_UnexpectedGenericName_Description";
                case ErrorCode.ERR_UnexpectedUnboundGenericName: return "ERR_UnexpectedUnboundGenericName_Description";
                case ErrorCode.ERR_GlobalStatement: return "ERR_GlobalStatement_Description";
                case ErrorCode.ERR_BadUsingType: return "ERR_BadUsingType_Description";
                case ErrorCode.ERR_ReservedAssemblyName: return "ERR_ReservedAssemblyName_Description";
                case ErrorCode.ERR_PPReferenceFollowsToken: return "ERR_PPReferenceFollowsToken_Description";
                case ErrorCode.ERR_ExpectedPPFile: return "ERR_ExpectedPPFile_Description";
                case ErrorCode.ERR_ReferenceDirectiveOnlyAllowedInScripts: return "ERR_ReferenceDirectiveOnlyAllowedInScripts_Description";
                case ErrorCode.ERR_NameNotInContextPossibleMissingReference: return "ERR_NameNotInContextPossibleMissingReference_Description";
                case ErrorCode.ERR_MetadataNameTooLong: return "ERR_MetadataNameTooLong_Description";
                case ErrorCode.ERR_AttributesNotAllowed: return "ERR_AttributesNotAllowed_Description";
                case ErrorCode.ERR_ExternAliasNotAllowed: return "ERR_ExternAliasNotAllowed_Description";
                case ErrorCode.ERR_ConflictingAliasAndDefinition: return "ERR_ConflictingAliasAndDefinition_Description";
                case ErrorCode.ERR_GlobalDefinitionOrStatementExpected: return "ERR_GlobalDefinitionOrStatementExpected_Description";
                case ErrorCode.ERR_ExpectedSingleScript: return "ERR_ExpectedSingleScript_Description";
                case ErrorCode.ERR_RecursivelyTypedVariable: return "ERR_RecursivelyTypedVariable_Description";
                case ErrorCode.ERR_YieldNotAllowedInScript: return "ERR_YieldNotAllowedInScript_Description";
                case ErrorCode.ERR_NamespaceNotAllowedInScript: return "ERR_NamespaceNotAllowedInScript_Description";
                case ErrorCode.ERR_InvalidDelegateType: return "ERR_InvalidDelegateType_Description";
                case ErrorCode.ERR_BadVisEventType: return "ERR_BadVisEventType_Description";
                case ErrorCode.ERR_GlobalAttributesNotAllowed: return "ERR_GlobalAttributesNotAllowed_Description";
                case ErrorCode.ERR_PublicKeyFileFailure: return "ERR_PublicKeyFileFailure_Description";
                case ErrorCode.ERR_PublicKeyContainerFailure: return "ERR_PublicKeyContainerFailure_Description";
                case ErrorCode.ERR_FriendRefSigningMismatch: return "ERR_FriendRefSigningMismatch_Description";
                case ErrorCode.ERR_CannotPassNullForFriendAssembly: return "ERR_CannotPassNullForFriendAssembly_Description";
                case ErrorCode.ERR_SignButNoPrivateKey: return "ERR_SignButNoPrivateKey_Description";
                case ErrorCode.ERR_InvalidVersionFormat: return "ERR_InvalidVersionFormat_Description";
                case ErrorCode.ERR_NoCorrespondingArgument: return "ERR_NoCorrespondingArgument_Description";
                case ErrorCode.ERR_ModuleEmitFailure: return "ERR_ModuleEmitFailure_Description";
                case ErrorCode.ERR_ResourceFileNameNotUnique: return "ERR_ResourceFileNameNotUnique_Description";
                case ErrorCode.ERR_DllImportOnGenericMethod: return "ERR_DllImportOnGenericMethod_Description";
                case ErrorCode.ERR_EncUpdateFailedMissingAttribute: return "ERR_EncUpdateFailedMissingAttribute_Description";
                case ErrorCode.ERR_ParameterNotValidForType: return "ERR_ParameterNotValidForType_Description";
                case ErrorCode.ERR_AttributeParameterRequired1: return "ERR_AttributeParameterRequired1_Description";
                case ErrorCode.ERR_AttributeParameterRequired2: return "ERR_AttributeParameterRequired2_Description";
                case ErrorCode.ERR_SecurityAttributeMissingAction: return "ERR_SecurityAttributeMissingAction_Description";
                case ErrorCode.ERR_SecurityAttributeInvalidAction: return "ERR_SecurityAttributeInvalidAction_Description";
                case ErrorCode.ERR_SecurityAttributeInvalidActionAssembly: return "ERR_SecurityAttributeInvalidActionAssembly_Description";
                case ErrorCode.ERR_SecurityAttributeInvalidActionTypeOrMethod: return "ERR_SecurityAttributeInvalidActionTypeOrMethod_Description";
                case ErrorCode.ERR_PrincipalPermissionInvalidAction: return "ERR_PrincipalPermissionInvalidAction_Description";
                case ErrorCode.ERR_FeatureNotValidInExpressionTree: return "ERR_FeatureNotValidInExpressionTree_Description";
                case ErrorCode.ERR_MarshalUnmanagedTypeNotValidForFields: return "ERR_MarshalUnmanagedTypeNotValidForFields_Description";
                case ErrorCode.ERR_MarshalUnmanagedTypeOnlyValidForFields: return "ERR_MarshalUnmanagedTypeOnlyValidForFields_Description";
                case ErrorCode.ERR_PermissionSetAttributeInvalidFile: return "ERR_PermissionSetAttributeInvalidFile_Description";
                case ErrorCode.ERR_PermissionSetAttributeFileReadError: return "ERR_PermissionSetAttributeFileReadError_Description";
                case ErrorCode.ERR_InvalidVersionFormat2: return "ERR_InvalidVersionFormat2_Description";
                case ErrorCode.ERR_InvalidAssemblyCultureForExe: return "ERR_InvalidAssemblyCultureForExe_Description";
                case ErrorCode.ERR_DuplicateAttributeInNetModule: return "ERR_DuplicateAttributeInNetModule_Description";
                case ErrorCode.ERR_CantOpenIcon: return "ERR_CantOpenIcon_Description";
                case ErrorCode.ERR_ErrorBuildingWin32Resources: return "ERR_ErrorBuildingWin32Resources_Description";
                case ErrorCode.ERR_BadAttributeParamDefaultArgument: return "ERR_BadAttributeParamDefaultArgument_Description";
                case ErrorCode.ERR_MissingTypeInSource: return "ERR_MissingTypeInSource_Description";
                case ErrorCode.ERR_MissingTypeInAssembly: return "ERR_MissingTypeInAssembly_Description";
                case ErrorCode.ERR_SecurityAttributeInvalidTarget: return "ERR_SecurityAttributeInvalidTarget_Description";
                case ErrorCode.ERR_InvalidAssemblyName: return "ERR_InvalidAssemblyName_Description";
                case ErrorCode.ERR_NoTypeDefFromModule: return "ERR_NoTypeDefFromModule_Description";
                case ErrorCode.ERR_InvalidDynamicCondition: return "ERR_InvalidDynamicCondition_Description";
                case ErrorCode.ERR_WinRtEventPassedByRef: return "ERR_WinRtEventPassedByRef_Description";
                case ErrorCode.ERR_NetModuleNameMismatch: return "ERR_NetModuleNameMismatch_Description";
                case ErrorCode.ERR_BadModuleName: return "ERR_BadModuleName_Description";
                case ErrorCode.ERR_BadCompilationOptionValue: return "ERR_BadCompilationOptionValue_Description";
                case ErrorCode.ERR_BadAppConfigPath: return "ERR_BadAppConfigPath_Description";
                case ErrorCode.ERR_CmdOptionConflictsSource: return "ERR_CmdOptionConflictsSource_Description";
                case ErrorCode.ERR_FixedBufferTooManyDimensions: return "ERR_FixedBufferTooManyDimensions_Description";
                case ErrorCode.ERR_CantReadConfigFile: return "ERR_CantReadConfigFile_Description";
                case ErrorCode.ERR_BadAwaitInCatchFilter: return "ERR_BadAwaitInCatchFilter_Description";
                case ErrorCode.ERR_EncNoPIAReference: return "ERR_EncNoPIAReference_Description";
                case ErrorCode.ERR_LinkedNetmoduleMetadataMustProvideFullPEImage: return "ERR_LinkedNetmoduleMetadataMustProvideFullPEImage_Description";
                case ErrorCode.ERR_MetadataReferencesNotSupported: return "ERR_MetadataReferencesNotSupported_Description";
                case ErrorCode.ERR_InvalidAssemblyCulture: return "ERR_InvalidAssemblyCulture_Description";
                case ErrorCode.ERR_EncReferenceToAddedMember: return "ERR_EncReferenceToAddedMember_Description";
                case ErrorCode.ERR_MutuallyExclusiveOptions: return "ERR_MutuallyExclusiveOptions_Description";
                case ErrorCode.ERR_InvalidDebugInfo: return "ERR_InvalidDebugInfo_Description";
                case ErrorCode.ERR_InvalidSignaturePublicKey: return "ERR_InvalidSignaturePublicKey_Description";
                case ErrorCode.ERR_ExportedTypeConflictsWithDeclaration: return "ERR_ExportedTypeConflictsWithDeclaration_Description";
                case ErrorCode.ERR_ExportedTypesConflict: return "ERR_ExportedTypesConflict_Description";
                case ErrorCode.ERR_ForwardedTypeConflictsWithDeclaration: return "ERR_ForwardedTypeConflictsWithDeclaration_Description";
                case ErrorCode.ERR_ForwardedTypesConflict: return "ERR_ForwardedTypesConflict_Description";
                case ErrorCode.ERR_ForwardedTypeConflictsWithExportedType: return "ERR_ForwardedTypeConflictsWithExportedType_Description";
                case ErrorCode.ERR_AgnosticToMachineModule: return "ERR_AgnosticToMachineModule_Description";
                case ErrorCode.ERR_ConflictingMachineModule: return "ERR_ConflictingMachineModule_Description";
                case ErrorCode.ERR_CryptoHashFailed: return "ERR_CryptoHashFailed_Description";
                case ErrorCode.ERR_MissingNetModuleReference: return "ERR_MissingNetModuleReference_Description";
                case ErrorCode.ERR_NetModuleNameMustBeUnique: return "ERR_NetModuleNameMustBeUnique_Description";
                case ErrorCode.ERR_UnsupportedTransparentIdentifierAccess: return "ERR_UnsupportedTransparentIdentifierAccess_Description";
                case ErrorCode.ERR_ParamDefaultValueDiffersFromAttribute: return "ERR_ParamDefaultValueDiffersFromAttribute_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion1: return "ERR_FeatureNotAvailableInVersion1_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion2: return "ERR_FeatureNotAvailableInVersion2_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion3: return "ERR_FeatureNotAvailableInVersion3_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion4: return "ERR_FeatureNotAvailableInVersion4_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion5: return "ERR_FeatureNotAvailableInVersion5_Description";
                case ErrorCode.ERR_FieldHasMultipleDistinctConstantValues: return "ERR_FieldHasMultipleDistinctConstantValues_Description";
                case ErrorCode.ERR_ComImportWithInitializers: return "ERR_ComImportWithInitializers_Description";
                case ErrorCode.ERR_RetNoObjectRequiredLambda: return "ERR_RetNoObjectRequiredLambda_Description";
                case ErrorCode.ERR_TaskRetNoObjectRequiredLambda: return "ERR_TaskRetNoObjectRequiredLambda_Description";
                case ErrorCode.ERR_CantReadRulesetFile: return "ERR_CantReadRulesetFile_Description";
                case ErrorCode.ERR_BadPdbData: return "ERR_BadPdbData_Description";
                case ErrorCode.ERR_InitializerOnNonAutoProperty: return "ERR_InitializerOnNonAutoProperty_Description";
                case ErrorCode.ERR_AutoPropertyMustHaveGetAccessor: return "ERR_AutoPropertyMustHaveGetAccessor_Description";
                case ErrorCode.ERR_InstancePropertyInitializerInInterface: return "ERR_InstancePropertyInitializerInInterface_Description";
                case ErrorCode.ERR_EnumsCantContainDefaultConstructor: return "ERR_EnumsCantContainDefaultConstructor_Description";
                case ErrorCode.ERR_EncodinglessSyntaxTree: return "ERR_EncodinglessSyntaxTree_Description";
                case ErrorCode.ERR_BlockBodyAndExpressionBody: return "ERR_BlockBodyAndExpressionBody_Description";
                case ErrorCode.ERR_FeatureIsExperimental: return "ERR_FeatureIsExperimental_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion6: return "ERR_FeatureNotAvailableInVersion6_Description";
                case ErrorCode.ERR_SwitchFallOut: return "ERR_SwitchFallOut_Description";
                case ErrorCode.ERR_NullPropagatingOpInExpressionTree: return "ERR_NullPropagatingOpInExpressionTree_Description";
                case ErrorCode.ERR_DictionaryInitializerInExpressionTree: return "ERR_DictionaryInitializerInExpressionTree_Description";
                case ErrorCode.ERR_ExtensionCollectionElementInitializerInExpressionTree: return "ERR_ExtensionCollectionElementInitializerInExpressionTree_Description";
                case ErrorCode.ERR_UnclosedExpressionHole: return "ERR_UnclosedExpressionHole_Description";
                case ErrorCode.ERR_InsufficientStack: return "ERR_InsufficientStack_Description";
                case ErrorCode.ERR_UseDefViolationProperty: return "ERR_UseDefViolationProperty_Description";
                case ErrorCode.ERR_AutoPropertyMustOverrideSet: return "ERR_AutoPropertyMustOverrideSet_Description";
                case ErrorCode.ERR_ExpressionHasNoName: return "ERR_ExpressionHasNoName_Description";
                case ErrorCode.ERR_SubexpressionNotInNameof: return "ERR_SubexpressionNotInNameof_Description";
                case ErrorCode.ERR_AliasQualifiedNameNotAnExpression: return "ERR_AliasQualifiedNameNotAnExpression_Description";
                case ErrorCode.ERR_NameofMethodGroupWithTypeParameters: return "ERR_NameofMethodGroupWithTypeParameters_Description";
                case ErrorCode.ERR_NoAliasHere: return "ERR_NoAliasHere_Description";
                case ErrorCode.ERR_UnescapedCurly: return "ERR_UnescapedCurly_Description";
                case ErrorCode.ERR_EscapedCurly: return "ERR_EscapedCurly_Description";
                case ErrorCode.ERR_TrailingWhitespaceInFormatSpecifier: return "ERR_TrailingWhitespaceInFormatSpecifier_Description";
                case ErrorCode.ERR_EmptyFormatSpecifier: return "ERR_EmptyFormatSpecifier_Description";
                case ErrorCode.ERR_ErrorInReferencedAssembly: return "ERR_ErrorInReferencedAssembly_Description";
                case ErrorCode.ERR_ExternHasConstructorInitializer: return "ERR_ExternHasConstructorInitializer_Description";
                case ErrorCode.ERR_ExpressionOrDeclarationExpected: return "ERR_ExpressionOrDeclarationExpected_Description";
                case ErrorCode.ERR_NameofExtensionMethod: return "ERR_NameofExtensionMethod_Description";
                case ErrorCode.ERR_ConstantStringTooLong: return "ERR_ConstantStringTooLong_Description";
                case ErrorCode.ERR_DebugEntryPointNotSourceMethodDefinition: return "ERR_DebugEntryPointNotSourceMethodDefinition_Description";
                case ErrorCode.ERR_LoadDirectiveOnlyAllowedInScripts: return "ERR_LoadDirectiveOnlyAllowedInScripts_Description";
                case ErrorCode.ERR_PPLoadFollowsToken: return "ERR_PPLoadFollowsToken_Description";
                case ErrorCode.ERR_SourceFileReferencesNotSupported: return "ERR_SourceFileReferencesNotSupported_Description";
                case ErrorCode.ERR_BadAwaitInStaticVariableInitializer: return "ERR_BadAwaitInStaticVariableInitializer_Description";
                case ErrorCode.ERR_InvalidPathMap: return "ERR_InvalidPathMap_Description";
                case ErrorCode.ERR_PublicSignButNoKey: return "ERR_PublicSignButNoKey_Description";
                case ErrorCode.ERR_TooManyUserStrings: return "ERR_TooManyUserStrings_Description";
                case ErrorCode.ERR_PeWritingFailure: return "ERR_PeWritingFailure_Description";
                case ErrorCode.ERR_OptionMustBeAbsolutePath: return "ERR_OptionMustBeAbsolutePath_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7: return "ERR_FeatureNotAvailableInVersion7_Description";
                case ErrorCode.ERR_DynamicLocalFunctionParamsParameter: return "ERR_DynamicLocalFunctionParamsParameter_Description";
                case ErrorCode.ERR_ExpressionTreeContainsLocalFunction: return "ERR_ExpressionTreeContainsLocalFunction_Description";
                case ErrorCode.ERR_InvalidInstrumentationKind: return "ERR_InvalidInstrumentationKind_Description";
                case ErrorCode.ERR_LocalFunctionMissingBody: return "ERR_LocalFunctionMissingBody_Description";
                case ErrorCode.ERR_InvalidHashAlgorithmName: return "ERR_InvalidHashAlgorithmName_Description";
                case ErrorCode.ERR_ThrowMisplaced: return "ERR_ThrowMisplaced_Description";
                case ErrorCode.ERR_PatternNullableType: return "ERR_PatternNullableType_Description";
                case ErrorCode.ERR_BadPatternExpression: return "ERR_BadPatternExpression_Description";
                case ErrorCode.ERR_SwitchExpressionValueExpected: return "ERR_SwitchExpressionValueExpected_Description";
                case ErrorCode.ERR_SwitchCaseSubsumed: return "ERR_SwitchCaseSubsumed_Description";
                case ErrorCode.ERR_PatternWrongType: return "ERR_PatternWrongType_Description";
                case ErrorCode.ERR_ExpressionTreeContainsIsMatch: return "ERR_ExpressionTreeContainsIsMatch_Description";
                case ErrorCode.ERR_TupleTooFewElements: return "ERR_TupleTooFewElements_Description";
                case ErrorCode.ERR_TupleReservedElementName: return "ERR_TupleReservedElementName_Description";
                case ErrorCode.ERR_TupleReservedElementNameAnyPosition: return "ERR_TupleReservedElementNameAnyPosition_Description";
                case ErrorCode.ERR_TupleDuplicateElementName: return "ERR_TupleDuplicateElementName_Description";
                case ErrorCode.ERR_PredefinedTypeMemberNotFoundInAssembly: return "ERR_PredefinedTypeMemberNotFoundInAssembly_Description";
                case ErrorCode.ERR_MissingDeconstruct: return "ERR_MissingDeconstruct_Description";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedDeconstructionVariable_Description";
                case ErrorCode.ERR_DeconstructRequiresExpression: return "ERR_DeconstructRequiresExpression_Description";
                case ErrorCode.ERR_DeconstructWrongCardinality: return "ERR_DeconstructWrongCardinality_Description";
                case ErrorCode.ERR_CannotDeconstructDynamic: return "ERR_CannotDeconstructDynamic_Description";
                case ErrorCode.ERR_DeconstructTooFewElements: return "ERR_DeconstructTooFewElements_Description";
                case ErrorCode.ERR_ConversionNotTupleCompatible: return "ERR_ConversionNotTupleCompatible_Description";
                case ErrorCode.ERR_DeconstructionVarFormDisallowsSpecificType: return "ERR_DeconstructionVarFormDisallowsSpecificType_Description";
                case ErrorCode.ERR_TupleElementNamesAttributeMissing: return "ERR_TupleElementNamesAttributeMissing_Description";
                case ErrorCode.ERR_ExplicitTupleElementNamesAttribute: return "ERR_ExplicitTupleElementNamesAttribute_Description";
                case ErrorCode.ERR_CantChangeTupleNamesOnOverride: return "ERR_CantChangeTupleNamesOnOverride_Description";
                case ErrorCode.ERR_DuplicateInterfaceWithTupleNamesInBaseList: return "ERR_DuplicateInterfaceWithTupleNamesInBaseList_Description";
                case ErrorCode.ERR_ImplBadTupleNames: return "ERR_ImplBadTupleNames_Description";
                case ErrorCode.ERR_PartialMemberInconsistentTupleNames: return "ERR_PartialMemberInconsistentTupleNames_Description";
                case ErrorCode.ERR_ExpressionTreeContainsTupleLiteral: return "ERR_ExpressionTreeContainsTupleLiteral_Description";
                case ErrorCode.ERR_ExpressionTreeContainsTupleConversion: return "ERR_ExpressionTreeContainsTupleConversion_Description";
                case ErrorCode.ERR_AutoPropertyCannotBeRefReturning: return "ERR_AutoPropertyCannotBeRefReturning_Description";
                case ErrorCode.ERR_RefPropertyMustHaveGetAccessor: return "ERR_RefPropertyMustHaveGetAccessor_Description";
                case ErrorCode.ERR_RefPropertyCannotHaveSetAccessor: return "ERR_RefPropertyCannotHaveSetAccessor_Description";
                case ErrorCode.ERR_CantChangeRefReturnOnOverride: return "ERR_CantChangeRefReturnOnOverride_Description";
                case ErrorCode.ERR_MustNotHaveRefReturn: return "ERR_MustNotHaveRefReturn_Description";
                case ErrorCode.ERR_MustHaveRefReturn: return "ERR_MustHaveRefReturn_Description";
                case ErrorCode.ERR_RefReturnMustHaveIdentityConversion: return "ERR_RefReturnMustHaveIdentityConversion_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongRefReturn: return "ERR_CloseUnimplementedInterfaceMemberWrongRefReturn_Description";
                case ErrorCode.ERR_RefReturningCallInExpressionTree: return "ERR_RefReturningCallInExpressionTree_Description";
                case ErrorCode.ERR_BadIteratorReturnRef: return "ERR_BadIteratorReturnRef_Description";
                case ErrorCode.ERR_BadRefReturnExpressionTree: return "ERR_BadRefReturnExpressionTree_Description";
                case ErrorCode.ERR_RefReturnLvalueExpected: return "ERR_RefReturnLvalueExpected_Description";
                case ErrorCode.ERR_RefReturnNonreturnableLocal: return "ERR_RefReturnNonreturnableLocal_Description";
                case ErrorCode.ERR_RefReturnNonreturnableLocal2: return "ERR_RefReturnNonreturnableLocal2_Description";
                case ErrorCode.ERR_RefReturnRangeVariable: return "ERR_RefReturnRangeVariable_Description";
                case ErrorCode.ERR_RefReturnReadonly: return "ERR_RefReturnReadonly_Description";
                case ErrorCode.ERR_RefReturnReadonlyStatic: return "ERR_RefReturnReadonlyStatic_Description";
                case ErrorCode.ERR_RefReturnReadonly2: return "ERR_RefReturnReadonly2_Description";
                case ErrorCode.ERR_RefReturnReadonlyStatic2: return "ERR_RefReturnReadonlyStatic2_Description";
                case ErrorCode.ERR_RefReturnParameter: return "ERR_RefReturnParameter_Description";
                case ErrorCode.ERR_RefReturnParameter2: return "ERR_RefReturnParameter2_Description";
                case ErrorCode.ERR_RefReturnLocal: return "ERR_RefReturnLocal_Description";
                case ErrorCode.ERR_RefReturnLocal2: return "ERR_RefReturnLocal2_Description";
                case ErrorCode.ERR_RefReturnStructThis: return "ERR_RefReturnStructThis_Description";
                case ErrorCode.ERR_InitializeByValueVariableWithReference: return "ERR_InitializeByValueVariableWithReference_Description";
                case ErrorCode.ERR_InitializeByReferenceVariableWithValue: return "ERR_InitializeByReferenceVariableWithValue_Description";
                case ErrorCode.ERR_RefAssignmentMustHaveIdentityConversion: return "ERR_RefAssignmentMustHaveIdentityConversion_Description";
                case ErrorCode.ERR_ByReferenceVariableMustBeInitialized: return "ERR_ByReferenceVariableMustBeInitialized_Description";
                case ErrorCode.ERR_AnonDelegateCantUseLocal: return "ERR_AnonDelegateCantUseLocal_Description";
                case ErrorCode.ERR_RefReturningCallAndAwait: return "ERR_RefReturningCallAndAwait_Description";
                case ErrorCode.ERR_PredefinedValueTupleTypeNotFound: return "ERR_PredefinedValueTupleTypeNotFound_Description";
                case ErrorCode.ERR_SemiOrLBraceOrArrowExpected: return "ERR_SemiOrLBraceOrArrowExpected_Description";
                case ErrorCode.ERR_NewWithTupleTypeSyntax: return "ERR_NewWithTupleTypeSyntax_Description";
                case ErrorCode.ERR_PredefinedValueTupleTypeMustBeStruct: return "ERR_PredefinedValueTupleTypeMustBeStruct_Description";
                case ErrorCode.ERR_DiscardTypeInferenceFailed: return "ERR_DiscardTypeInferenceFailed_Description";
                case ErrorCode.ERR_DeclarationExpressionNotPermitted: return "ERR_DeclarationExpressionNotPermitted_Description";
                case ErrorCode.ERR_MustDeclareForeachIteration: return "ERR_MustDeclareForeachIteration_Description";
                case ErrorCode.ERR_TupleElementNamesInDeconstruction: return "ERR_TupleElementNamesInDeconstruction_Description";
                case ErrorCode.ERR_ExpressionTreeContainsThrowExpression: return "ERR_ExpressionTreeContainsThrowExpression_Description";
                case ErrorCode.ERR_DelegateRefMismatch: return "ERR_DelegateRefMismatch_Description";
                case ErrorCode.ERR_BadSourceCodeKind: return "ERR_BadSourceCodeKind_Description";
                case ErrorCode.ERR_BadDocumentationMode: return "ERR_BadDocumentationMode_Description";
                case ErrorCode.ERR_BadLanguageVersion: return "ERR_BadLanguageVersion_Description";
                case ErrorCode.ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList: return "ERR_ImplicitlyTypedOutVariableUsedInTheSameArgumentList_Description";
                case ErrorCode.ERR_TypeInferenceFailedForImplicitlyTypedOutVariable: return "ERR_TypeInferenceFailedForImplicitlyTypedOutVariable_Description";
                case ErrorCode.ERR_ExpressionTreeContainsOutVariable: return "ERR_ExpressionTreeContainsOutVariable_Description";
                case ErrorCode.ERR_VarInvocationLvalueReserved: return "ERR_VarInvocationLvalueReserved_Description";
                case ErrorCode.ERR_PublicSignNetModule: return "ERR_PublicSignNetModule_Description";
                case ErrorCode.ERR_BadAssemblyName: return "ERR_BadAssemblyName_Description";
                case ErrorCode.ERR_BadAsyncMethodBuilderTaskProperty: return "ERR_BadAsyncMethodBuilderTaskProperty_Description";
                case ErrorCode.ERR_TypeForwardedToMultipleAssemblies: return "ERR_TypeForwardedToMultipleAssemblies_Description";
                case ErrorCode.ERR_ExpressionTreeContainsDiscard: return "ERR_ExpressionTreeContainsDiscard_Description";
                case ErrorCode.ERR_PatternDynamicType: return "ERR_PatternDynamicType_Description";
                case ErrorCode.ERR_VoidAssignment: return "ERR_VoidAssignment_Description";
                case ErrorCode.ERR_VoidInTuple: return "ERR_VoidInTuple_Description";
                case ErrorCode.ERR_Merge_conflict_marker_encountered: return "ERR_Merge_conflict_marker_encountered_Description";
                case ErrorCode.ERR_InvalidPreprocessingSymbol: return "ERR_InvalidPreprocessingSymbol_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_1: return "ERR_FeatureNotAvailableInVersion7_1_Description";
                case ErrorCode.ERR_LanguageVersionCannotHaveLeadingZeroes: return "ERR_LanguageVersionCannotHaveLeadingZeroes_Description";
                case ErrorCode.ERR_CompilerAndLanguageVersion: return "ERR_CompilerAndLanguageVersion_Description";
                case ErrorCode.ERR_TupleInferredNamesNotAvailable: return "ERR_TupleInferredNamesNotAvailable_Description";
                case ErrorCode.ERR_TypelessTupleInAs: return "ERR_TypelessTupleInAs_Description";
                case ErrorCode.ERR_NoRefOutWhenRefOnly: return "ERR_NoRefOutWhenRefOnly_Description";
                case ErrorCode.ERR_NoNetModuleOutputWhenRefOutOrRefOnly: return "ERR_NoNetModuleOutputWhenRefOutOrRefOnly_Description";
                case ErrorCode.ERR_BadOpOnNullOrDefaultOrNew: return "ERR_BadOpOnNullOrDefaultOrNew_Description";
                case ErrorCode.ERR_DefaultLiteralNotValid: return "ERR_DefaultLiteralNotValid_Description";
                case ErrorCode.ERR_PatternWrongGenericTypeInVersion: return "ERR_PatternWrongGenericTypeInVersion_Description";
                case ErrorCode.ERR_AmbigBinaryOpsOnDefault: return "ERR_AmbigBinaryOpsOnDefault_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_2: return "ERR_FeatureNotAvailableInVersion7_2_Description";
                case ErrorCode.ERR_DynamicLocalFunctionTypeParameter: return "ERR_DynamicLocalFunctionTypeParameter_Description";
                case ErrorCode.ERR_BadNonTrailingNamedArgument: return "ERR_BadNonTrailingNamedArgument_Description";
                case ErrorCode.ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation: return "ERR_NamedArgumentSpecificationBeforeFixedArgumentInDynamicInvocation_Description";
                case ErrorCode.ERR_RefConditionalAndAwait: return "ERR_RefConditionalAndAwait_Description";
                case ErrorCode.ERR_RefConditionalNeedsTwoRefs: return "ERR_RefConditionalNeedsTwoRefs_Description";
                case ErrorCode.ERR_RefConditionalDifferentTypes: return "ERR_RefConditionalDifferentTypes_Description";
                case ErrorCode.ERR_BadParameterModifiers: return "ERR_BadParameterModifiers_Description";
                case ErrorCode.ERR_RefReadonlyNotField: return "ERR_RefReadonlyNotField_Description";
                case ErrorCode.ERR_RefReadonlyNotField2: return "ERR_RefReadonlyNotField2_Description";
                case ErrorCode.ERR_AssignReadonlyNotField: return "ERR_AssignReadonlyNotField_Description";
                case ErrorCode.ERR_AssignReadonlyNotField2: return "ERR_AssignReadonlyNotField2_Description";
                case ErrorCode.ERR_RefReturnReadonlyNotField: return "ERR_RefReturnReadonlyNotField_Description";
                case ErrorCode.ERR_RefReturnReadonlyNotField2: return "ERR_RefReturnReadonlyNotField2_Description";
                case ErrorCode.ERR_ExplicitReservedAttr: return "ERR_ExplicitReservedAttr_Description";
                case ErrorCode.ERR_TypeReserved: return "ERR_TypeReserved_Description";
                case ErrorCode.ERR_RefExtensionMustBeValueTypeOrConstrainedToOne: return "ERR_RefExtensionMustBeValueTypeOrConstrainedToOne_Description";
                case ErrorCode.ERR_InExtensionMustBeValueType: return "ERR_InExtensionMustBeValueType_Description";
                case ErrorCode.ERR_FieldsInRoStruct: return "ERR_FieldsInRoStruct_Description";
                case ErrorCode.ERR_AutoPropsInRoStruct: return "ERR_AutoPropsInRoStruct_Description";
                case ErrorCode.ERR_FieldlikeEventsInRoStruct: return "ERR_FieldlikeEventsInRoStruct_Description";
                case ErrorCode.ERR_FieldAutoPropCantBeByRefLike: return "ERR_FieldAutoPropCantBeByRefLike_Description";
                case ErrorCode.ERR_StackAllocConversionNotPossible: return "ERR_StackAllocConversionNotPossible_Description";
                case ErrorCode.ERR_EscapeCall: return "ERR_EscapeCall_Description";
                case ErrorCode.ERR_EscapeCall2: return "ERR_EscapeCall2_Description";
                case ErrorCode.ERR_EscapeOther: return "ERR_EscapeOther_Description";
                case ErrorCode.ERR_CallArgMixing: return "ERR_CallArgMixing_Description";
                case ErrorCode.ERR_MismatchedRefEscapeInTernary: return "ERR_MismatchedRefEscapeInTernary_Description";
                case ErrorCode.ERR_EscapeVariable: return "ERR_EscapeVariable_Description";
                case ErrorCode.ERR_EscapeStackAlloc: return "ERR_EscapeStackAlloc_Description";
                case ErrorCode.ERR_RefReturnThis: return "ERR_RefReturnThis_Description";
                case ErrorCode.ERR_OutAttrOnInParam: return "ERR_OutAttrOnInParam_Description";
                case ErrorCode.ERR_PredefinedValueTupleTypeAmbiguous3: return "ERR_PredefinedValueTupleTypeAmbiguous3_Description";
                case ErrorCode.ERR_InvalidVersionFormatDeterministic: return "ERR_InvalidVersionFormatDeterministic_Description";
                case ErrorCode.ERR_AttributeCtorInParameter: return "ERR_AttributeCtorInParameter_Description";
                case ErrorCode.ERR_ConditionalInInterpolation: return "ERR_ConditionalInInterpolation_Description";
                case ErrorCode.ERR_CantUseVoidInArglist: return "ERR_CantUseVoidInArglist_Description";
                case ErrorCode.ERR_InDynamicMethodArg: return "ERR_InDynamicMethodArg_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion7_3: return "ERR_FeatureNotAvailableInVersion7_3_Description";
                case ErrorCode.ERR_DoNotUseFixedBufferAttrOnProperty: return "ERR_DoNotUseFixedBufferAttrOnProperty_Description";
                case ErrorCode.ERR_RefLocalOrParamExpected: return "ERR_RefLocalOrParamExpected_Description";
                case ErrorCode.ERR_RefAssignNarrower: return "ERR_RefAssignNarrower_Description";
                case ErrorCode.ERR_NewBoundWithUnmanaged: return "ERR_NewBoundWithUnmanaged_Description";
                case ErrorCode.ERR_UnmanagedConstraintNotSatisfied: return "ERR_UnmanagedConstraintNotSatisfied_Description";
                case ErrorCode.ERR_CantUseInOrOutInArglist: return "ERR_CantUseInOrOutInArglist_Description";
                case ErrorCode.ERR_ConWithUnmanagedCon: return "ERR_ConWithUnmanagedCon_Description";
                case ErrorCode.ERR_UnmanagedBoundWithClass: return "ERR_UnmanagedBoundWithClass_Description";
                case ErrorCode.ERR_InvalidStackAllocArray: return "ERR_InvalidStackAllocArray_Description";
                case ErrorCode.ERR_ExpressionTreeContainsTupleBinOp: return "ERR_ExpressionTreeContainsTupleBinOp_Description";
                case ErrorCode.ERR_TupleSizesMismatchForBinOps: return "ERR_TupleSizesMismatchForBinOps_Description";
                case ErrorCode.ERR_ExprCannotBeFixed: return "ERR_ExprCannotBeFixed_Description";
                case ErrorCode.ERR_InvalidObjectCreation: return "ERR_InvalidObjectCreation_Description";
                case ErrorCode.ERR_OutVariableCannotBeByRef: return "ERR_OutVariableCannotBeByRef_Description";
                case ErrorCode.ERR_OmittedTypeArgument: return "ERR_OmittedTypeArgument_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion8: return "ERR_FeatureNotAvailableInVersion8_Description";
                case ErrorCode.ERR_AltInterpolatedVerbatimStringsNotAvailable: return "ERR_AltInterpolatedVerbatimStringsNotAvailable_Description";
                case ErrorCode.ERR_IteratorMustBeAsync: return "ERR_IteratorMustBeAsync_Description";
                case ErrorCode.ERR_NoConvToIAsyncDisp: return "ERR_NoConvToIAsyncDisp_Description";
                case ErrorCode.ERR_AwaitForEachMissingMember: return "ERR_AwaitForEachMissingMember_Description";
                case ErrorCode.ERR_BadGetAsyncEnumerator: return "ERR_BadGetAsyncEnumerator_Description";
                case ErrorCode.ERR_MultipleIAsyncEnumOfT: return "ERR_MultipleIAsyncEnumOfT_Description";
                case ErrorCode.ERR_ForEachMissingMemberWrongAsync: return "ERR_ForEachMissingMemberWrongAsync_Description";
                case ErrorCode.ERR_AwaitForEachMissingMemberWrongAsync: return "ERR_AwaitForEachMissingMemberWrongAsync_Description";
                case ErrorCode.ERR_BadDynamicAwaitForEach: return "ERR_BadDynamicAwaitForEach_Description";
                case ErrorCode.ERR_NoConvToIAsyncDispWrongAsync: return "ERR_NoConvToIAsyncDispWrongAsync_Description";
                case ErrorCode.ERR_NoConvToIDispWrongAsync: return "ERR_NoConvToIDispWrongAsync_Description";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYield: return "ERR_PossibleAsyncIteratorWithoutYield_Description";
                case ErrorCode.ERR_PossibleAsyncIteratorWithoutYieldOrAwait: return "ERR_PossibleAsyncIteratorWithoutYieldOrAwait_Description";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureVariable: return "ERR_StaticLocalFunctionCannotCaptureVariable_Description";
                case ErrorCode.ERR_StaticLocalFunctionCannotCaptureThis: return "ERR_StaticLocalFunctionCannotCaptureThis_Description";
                case ErrorCode.ERR_AttributeNotOnEventAccessor: return "ERR_AttributeNotOnEventAccessor_Description";
                case ErrorCode.ERR_MultipleEnumeratorCancellationAttributes: return "ERR_MultipleEnumeratorCancellationAttributes_Description";
                case ErrorCode.ERR_VarianceInterfaceNesting: return "ERR_VarianceInterfaceNesting_Description";
                case ErrorCode.ERR_ImplicitIndexIndexerWithName: return "ERR_ImplicitIndexIndexerWithName_Description";
                case ErrorCode.ERR_ImplicitRangeIndexerWithName: return "ERR_ImplicitRangeIndexerWithName_Description";
                case ErrorCode.ERR_WrongNumberOfSubpatterns: return "ERR_WrongNumberOfSubpatterns_Description";
                case ErrorCode.ERR_PropertyPatternNameMissing: return "ERR_PropertyPatternNameMissing_Description";
                case ErrorCode.ERR_MissingPattern: return "ERR_MissingPattern_Description";
                case ErrorCode.ERR_DefaultPattern: return "ERR_DefaultPattern_Description";
                case ErrorCode.ERR_SwitchExpressionNoBestType: return "ERR_SwitchExpressionNoBestType_Description";
                case ErrorCode.ERR_VarMayNotBindToType: return "ERR_VarMayNotBindToType_Description";
                case ErrorCode.ERR_SwitchArmSubsumed: return "ERR_SwitchArmSubsumed_Description";
                case ErrorCode.ERR_ConstantPatternVsOpenType: return "ERR_ConstantPatternVsOpenType_Description";
                case ErrorCode.ERR_ExpressionTreeContainsSwitchExpression: return "ERR_ExpressionTreeContainsSwitchExpression_Description";
                case ErrorCode.ERR_SwitchGoverningExpressionRequiresParens: return "ERR_SwitchGoverningExpressionRequiresParens_Description";
                case ErrorCode.ERR_TupleElementNameMismatch: return "ERR_TupleElementNameMismatch_Description";
                case ErrorCode.ERR_DeconstructParameterNameMismatch: return "ERR_DeconstructParameterNameMismatch_Description";
                case ErrorCode.ERR_IsPatternImpossible: return "ERR_IsPatternImpossible_Description";
                case ErrorCode.ERR_PointerTypeInPatternMatching: return "ERR_PointerTypeInPatternMatching_Description";
                case ErrorCode.ERR_ArgumentNameInITuplePattern: return "ERR_ArgumentNameInITuplePattern_Description";
                case ErrorCode.ERR_DiscardPatternInSwitchStatement: return "ERR_DiscardPatternInSwitchStatement_Description";
                case ErrorCode.ERR_IllegalSuppression: return "ERR_IllegalSuppression_Description";
                case ErrorCode.ERR_ExplicitNullableAttribute: return "ERR_ExplicitNullableAttribute_Description";
                case ErrorCode.ERR_NullableUnconstrainedTypeParameter: return "ERR_NullableUnconstrainedTypeParameter_Description";
                case ErrorCode.ERR_AnnotationDisallowedInObjectCreation: return "ERR_AnnotationDisallowedInObjectCreation_Description";
                case ErrorCode.ERR_NullableOptionNotAvailable: return "ERR_NullableOptionNotAvailable_Description";
                case ErrorCode.ERR_TripleDotNotAllowed: return "ERR_TripleDotNotAllowed_Description";
                case ErrorCode.ERR_BadNullableContextOption: return "ERR_BadNullableContextOption_Description";
                case ErrorCode.ERR_NullableDirectiveQualifierExpected: return "ERR_NullableDirectiveQualifierExpected_Description";
                case ErrorCode.ERR_BadNullableTypeof: return "ERR_BadNullableTypeof_Description";
                case ErrorCode.ERR_ExpressionTreeCantContainRefStruct: return "ERR_ExpressionTreeCantContainRefStruct_Description";
                case ErrorCode.ERR_ElseCannotStartStatement: return "ERR_ElseCannotStartStatement_Description";
                case ErrorCode.ERR_ExpressionTreeCantContainNullCoalescingAssignment: return "ERR_ExpressionTreeCantContainNullCoalescingAssignment_Description";
                case ErrorCode.ERR_DuplicateExplicitImpl: return "ERR_DuplicateExplicitImpl_Description";
                case ErrorCode.ERR_UsingVarInSwitchCase: return "ERR_UsingVarInSwitchCase_Description";
                case ErrorCode.ERR_GoToForwardJumpOverUsingVar: return "ERR_GoToForwardJumpOverUsingVar_Description";
                case ErrorCode.ERR_GoToBackwardJumpOverUsingVar: return "ERR_GoToBackwardJumpOverUsingVar_Description";
                case ErrorCode.ERR_IsNullableType: return "ERR_IsNullableType_Description";
                case ErrorCode.ERR_AsNullableType: return "ERR_AsNullableType_Description";
                case ErrorCode.ERR_FeatureInPreview: return "ERR_FeatureInPreview_Description";
                case ErrorCode.ERR_StaticMemberCantBeReadOnly: return "ERR_StaticMemberCantBeReadOnly_Description";
                case ErrorCode.ERR_AutoSetterCantBeReadOnly: return "ERR_AutoSetterCantBeReadOnly_Description";
                case ErrorCode.ERR_AutoPropertyWithSetterCantBeReadOnly: return "ERR_AutoPropertyWithSetterCantBeReadOnly_Description";
                case ErrorCode.ERR_InvalidPropertyReadOnlyMods: return "ERR_InvalidPropertyReadOnlyMods_Description";
                case ErrorCode.ERR_DuplicatePropertyReadOnlyMods: return "ERR_DuplicatePropertyReadOnlyMods_Description";
                case ErrorCode.ERR_FieldLikeEventCantBeReadOnly: return "ERR_FieldLikeEventCantBeReadOnly_Description";
                case ErrorCode.ERR_PartialMemberReadOnlyDifference: return "ERR_PartialMemberReadOnlyDifference_Description";
                case ErrorCode.ERR_ReadOnlyModMissingAccessor: return "ERR_ReadOnlyModMissingAccessor_Description";
                case ErrorCode.ERR_OverrideRefConstraintNotSatisfied: return "ERR_OverrideRefConstraintNotSatisfied_Description";
                case ErrorCode.ERR_OverrideValConstraintNotSatisfied: return "ERR_OverrideValConstraintNotSatisfied_Description";
                case ErrorCode.ERR_NullableDirectiveTargetExpected: return "ERR_NullableDirectiveTargetExpected_Description";
                case ErrorCode.ERR_MultipleAnalyzerConfigsInSameDir: return "ERR_MultipleAnalyzerConfigsInSameDir_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementation_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RuntimeDoesNotSupportDefaultInterfaceImplementationForMember_Description";
                case ErrorCode.ERR_InvalidModifierForLanguageVersion: return "ERR_InvalidModifierForLanguageVersion_Description";
                case ErrorCode.ERR_ImplicitImplementationOfNonPublicInterfaceMember: return "ERR_ImplicitImplementationOfNonPublicInterfaceMember_Description";
                case ErrorCode.ERR_MostSpecificImplementationIsNotFound: return "ERR_MostSpecificImplementationIsNotFound_Description";
                case ErrorCode.ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember: return "ERR_LanguageVersionDoesNotSupportInterfaceImplementationForMember_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember: return "ERR_RuntimeDoesNotSupportProtectedAccessForInterfaceMember_Description";
                case ErrorCode.ERR_DefaultInterfaceImplementationInNoPIAType: return "ERR_DefaultInterfaceImplementationInNoPIAType_Description";
                case ErrorCode.ERR_AbstractEventHasAccessors: return "ERR_AbstractEventHasAccessors_Description";
                case ErrorCode.ERR_DuplicateNullSuppression: return "ERR_DuplicateNullSuppression_Description";
                case ErrorCode.ERR_DefaultLiteralNoTargetType: return "ERR_DefaultLiteralNoTargetType_Description";
                case ErrorCode.ERR_ReAbstractionInNoPIAType: return "ERR_ReAbstractionInNoPIAType_Description";
                case ErrorCode.ERR_InternalError: return "ERR_InternalError_Description";
                case ErrorCode.ERR_ImplicitObjectCreationIllegalTargetType: return "ERR_ImplicitObjectCreationIllegalTargetType_Description";
                case ErrorCode.ERR_ImplicitObjectCreationNotValid: return "ERR_ImplicitObjectCreationNotValid_Description";
                case ErrorCode.ERR_ImplicitObjectCreationNoTargetType: return "ERR_ImplicitObjectCreationNoTargetType_Description";
                case ErrorCode.ERR_BadFuncPointerParamModifier: return "ERR_BadFuncPointerParamModifier_Description";
                case ErrorCode.ERR_BadFuncPointerArgCount: return "ERR_BadFuncPointerArgCount_Description";
                case ErrorCode.ERR_MethFuncPtrMismatch: return "ERR_MethFuncPtrMismatch_Description";
                case ErrorCode.ERR_FuncPtrRefMismatch: return "ERR_FuncPtrRefMismatch_Description";
                case ErrorCode.ERR_FuncPtrMethMustBeStatic: return "ERR_FuncPtrMethMustBeStatic_Description";
                case ErrorCode.ERR_ExternEventInitializer: return "ERR_ExternEventInitializer_Description";
                case ErrorCode.ERR_AmbigBinaryOpsOnUnconstrainedDefault: return "ERR_AmbigBinaryOpsOnUnconstrainedDefault_Description";
                case ErrorCode.ERR_NoOutputDirectory: return "ERR_NoOutputDirectory_Description";
                case ErrorCode.ERR_StdInOptionProvidedButConsoleInputIsNotRedirected: return "ERR_StdInOptionProvidedButConsoleInputIsNotRedirected_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion9: return "ERR_FeatureNotAvailableInVersion9_Description";
                case ErrorCode.ERR_DuplicateInterfaceWithDifferencesInBaseList: return "ERR_DuplicateInterfaceWithDifferencesInBaseList_Description";
                case ErrorCode.ERR_DesignatorBeneathPatternCombinator: return "ERR_DesignatorBeneathPatternCombinator_Description";
                case ErrorCode.ERR_UnsupportedTypeForRelationalPattern: return "ERR_UnsupportedTypeForRelationalPattern_Description";
                case ErrorCode.ERR_RelationalPatternWithNaN: return "ERR_RelationalPatternWithNaN_Description";
                case ErrorCode.ERR_ConditionalOnLocalFunction: return "ERR_ConditionalOnLocalFunction_Description";
                case ErrorCode.ERR_WrongFuncPtrCallingConvention: return "ERR_WrongFuncPtrCallingConvention_Description";
                case ErrorCode.ERR_MissingAddressOf: return "ERR_MissingAddressOf_Description";
                case ErrorCode.ERR_CannotUseReducedExtensionMethodInAddressOf: return "ERR_CannotUseReducedExtensionMethodInAddressOf_Description";
                case ErrorCode.ERR_CannotUseFunctionPointerAsFixedLocal: return "ERR_CannotUseFunctionPointerAsFixedLocal_Description";
                case ErrorCode.ERR_ExpressionTreeContainsPatternImplicitIndexer: return "ERR_ExpressionTreeContainsPatternImplicitIndexer_Description";
                case ErrorCode.ERR_ExpressionTreeContainsFromEndIndexExpression: return "ERR_ExpressionTreeContainsFromEndIndexExpression_Description";
                case ErrorCode.ERR_ExpressionTreeContainsRangeExpression: return "ERR_ExpressionTreeContainsRangeExpression_Description";
                case ErrorCode.ERR_PartialMethodWithAccessibilityModsMustHaveImplementation: return "ERR_PartialMethodWithAccessibilityModsMustHaveImplementation_Description";
                case ErrorCode.ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods: return "ERR_PartialMethodWithNonVoidReturnMustHaveAccessMods_Description";
                case ErrorCode.ERR_PartialMethodWithOutParamMustHaveAccessMods: return "ERR_PartialMethodWithOutParamMustHaveAccessMods_Description";
                case ErrorCode.ERR_PartialMethodWithExtendedModMustHaveAccessMods: return "ERR_PartialMethodWithExtendedModMustHaveAccessMods_Description";
                case ErrorCode.ERR_PartialMemberAccessibilityDifference: return "ERR_PartialMemberAccessibilityDifference_Description";
                case ErrorCode.ERR_PartialMemberExtendedModDifference: return "ERR_PartialMemberExtendedModDifference_Description";
                case ErrorCode.ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement: return "ERR_SimpleProgramLocalIsReferencedOutsideOfTopLevelStatement_Description";
                case ErrorCode.ERR_SimpleProgramMultipleUnitsWithTopLevelStatements: return "ERR_SimpleProgramMultipleUnitsWithTopLevelStatements_Description";
                case ErrorCode.ERR_TopLevelStatementAfterNamespaceOrType: return "ERR_TopLevelStatementAfterNamespaceOrType_Description";
                case ErrorCode.ERR_SimpleProgramDisallowsMainType: return "ERR_SimpleProgramDisallowsMainType_Description";
                case ErrorCode.ERR_SimpleProgramNotAnExecutable: return "ERR_SimpleProgramNotAnExecutable_Description";
                case ErrorCode.ERR_UnsupportedCallingConvention: return "ERR_UnsupportedCallingConvention_Description";
                case ErrorCode.ERR_InvalidFunctionPointerCallingConvention: return "ERR_InvalidFunctionPointerCallingConvention_Description";
                case ErrorCode.ERR_InvalidFuncPointerReturnTypeModifier: return "ERR_InvalidFuncPointerReturnTypeModifier_Description";
                case ErrorCode.ERR_DupReturnTypeMod: return "ERR_DupReturnTypeMod_Description";
                case ErrorCode.ERR_AddressOfMethodGroupInExpressionTree: return "ERR_AddressOfMethodGroupInExpressionTree_Description";
                case ErrorCode.ERR_CannotConvertAddressOfToDelegate: return "ERR_CannotConvertAddressOfToDelegate_Description";
                case ErrorCode.ERR_AddressOfToNonFunctionPointer: return "ERR_AddressOfToNonFunctionPointer_Description";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeOrdinary: return "ERR_ModuleInitializerMethodMustBeOrdinary_Description";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType: return "ERR_ModuleInitializerMethodMustBeAccessibleOutsideTopLevelType_Description";
                case ErrorCode.ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid: return "ERR_ModuleInitializerMethodMustBeStaticParameterlessVoid_Description";
                case ErrorCode.ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric: return "ERR_ModuleInitializerMethodAndContainingTypesMustNotBeGeneric_Description";
                case ErrorCode.ERR_PartialMethodReturnTypeDifference: return "ERR_PartialMethodReturnTypeDifference_Description";
                case ErrorCode.ERR_PartialMemberRefReturnDifference: return "ERR_PartialMemberRefReturnDifference_Description";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureVariable: return "ERR_StaticAnonymousFunctionCannotCaptureVariable_Description";
                case ErrorCode.ERR_StaticAnonymousFunctionCannotCaptureThis: return "ERR_StaticAnonymousFunctionCannotCaptureThis_Description";
                case ErrorCode.ERR_OverrideDefaultConstraintNotSatisfied: return "ERR_OverrideDefaultConstraintNotSatisfied_Description";
                case ErrorCode.ERR_DefaultConstraintOverrideOnly: return "ERR_DefaultConstraintOverrideOnly_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses: return "ERR_RuntimeDoesNotSupportCovariantReturnsOfClasses_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses: return "ERR_RuntimeDoesNotSupportCovariantPropertiesOfClasses_Description";
                case ErrorCode.ERR_ExpressionTreeContainsWithExpression: return "ERR_ExpressionTreeContainsWithExpression_Description";
                case ErrorCode.ERR_AssignmentInitOnly: return "ERR_AssignmentInitOnly_Description";
                case ErrorCode.ERR_CantChangeInitOnlyOnOverride: return "ERR_CantChangeInitOnlyOnOverride_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberWrongInitOnly: return "ERR_CloseUnimplementedInterfaceMemberWrongInitOnly_Description";
                case ErrorCode.ERR_ExplicitPropertyMismatchInitOnly: return "ERR_ExplicitPropertyMismatchInitOnly_Description";
                case ErrorCode.ERR_BadInitAccessor: return "ERR_BadInitAccessor_Description";
                case ErrorCode.ERR_InvalidWithReceiverType: return "ERR_InvalidWithReceiverType_Description";
                case ErrorCode.ERR_CannotClone: return "ERR_CannotClone_Description";
                case ErrorCode.ERR_CloneDisallowedInRecord: return "ERR_CloneDisallowedInRecord_Description";
                case ErrorCode.ERR_UnexpectedArgumentList: return "ERR_UnexpectedArgumentList_Description";
                case ErrorCode.ERR_UnexpectedOrMissingConstructorInitializerInRecord: return "ERR_UnexpectedOrMissingConstructorInitializerInRecord_Description";
                case ErrorCode.ERR_MultipleRecordParameterLists: return "ERR_MultipleRecordParameterLists_Description";
                case ErrorCode.ERR_BadRecordBase: return "ERR_BadRecordBase_Description";
                case ErrorCode.ERR_BadInheritanceFromRecord: return "ERR_BadInheritanceFromRecord_Description";
                case ErrorCode.ERR_BadRecordMemberForPositionalParameter: return "ERR_BadRecordMemberForPositionalParameter_Description";
                case ErrorCode.ERR_NoCopyConstructorInBaseType: return "ERR_NoCopyConstructorInBaseType_Description";
                case ErrorCode.ERR_CopyConstructorMustInvokeBaseCopyConstructor: return "ERR_CopyConstructorMustInvokeBaseCopyConstructor_Description";
                case ErrorCode.ERR_DoesNotOverrideMethodFromObject: return "ERR_DoesNotOverrideMethodFromObject_Description";
                case ErrorCode.ERR_SealedAPIInRecord: return "ERR_SealedAPIInRecord_Description";
                case ErrorCode.ERR_DoesNotOverrideBaseMethod: return "ERR_DoesNotOverrideBaseMethod_Description";
                case ErrorCode.ERR_NotOverridableAPIInRecord: return "ERR_NotOverridableAPIInRecord_Description";
                case ErrorCode.ERR_NonPublicAPIInRecord: return "ERR_NonPublicAPIInRecord_Description";
                case ErrorCode.ERR_SignatureMismatchInRecord: return "ERR_SignatureMismatchInRecord_Description";
                case ErrorCode.ERR_NonProtectedAPIInRecord: return "ERR_NonProtectedAPIInRecord_Description";
                case ErrorCode.ERR_DoesNotOverrideBaseEqualityContract: return "ERR_DoesNotOverrideBaseEqualityContract_Description";
                case ErrorCode.ERR_StaticAPIInRecord: return "ERR_StaticAPIInRecord_Description";
                case ErrorCode.ERR_CopyConstructorWrongAccessibility: return "ERR_CopyConstructorWrongAccessibility_Description";
                case ErrorCode.ERR_NonPrivateAPIInRecord: return "ERR_NonPrivateAPIInRecord_Description";
                case ErrorCode.ERR_CannotSpecifyManagedWithUnmanagedSpecifiers: return "ERR_CannotSpecifyManagedWithUnmanagedSpecifiers_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv: return "ERR_RuntimeDoesNotSupportUnmanagedDefaultCallConv_Description";
                case ErrorCode.ERR_TypeNotFound: return "ERR_TypeNotFound_Description";
                case ErrorCode.ERR_TypeMustBePublic: return "ERR_TypeMustBePublic_Description";
                case ErrorCode.ERR_InvalidUnmanagedCallersOnlyCallConv: return "ERR_InvalidUnmanagedCallersOnlyCallConv_Description";
                case ErrorCode.ERR_CannotUseManagedTypeInUnmanagedCallersOnly: return "ERR_CannotUseManagedTypeInUnmanagedCallersOnly_Description";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric: return "ERR_UnmanagedCallersOnlyMethodOrTypeCannotBeGeneric_Description";
                case ErrorCode.ERR_UnmanagedCallersOnlyRequiresStatic: return "ERR_UnmanagedCallersOnlyRequiresStatic_Description";
                case ErrorCode.ERR_EntryPointCannotBeUnmanagedCallersOnly: return "ERR_EntryPointCannotBeUnmanagedCallersOnly_Description";
                case ErrorCode.ERR_ModuleInitializerCannotBeUnmanagedCallersOnly: return "ERR_ModuleInitializerCannotBeUnmanagedCallersOnly_Description";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly: return "ERR_UnmanagedCallersOnlyMethodsCannotBeCalledDirectly_Description";
                case ErrorCode.ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate: return "ERR_UnmanagedCallersOnlyMethodsCannotBeConvertedToDelegate_Description";
                case ErrorCode.ERR_InitCannotBeReadonly: return "ERR_InitCannotBeReadonly_Description";
                case ErrorCode.ERR_UnexpectedVarianceStaticMember: return "ERR_UnexpectedVarianceStaticMember_Description";
                case ErrorCode.ERR_FunctionPointersCannotBeCalledWithNamedArguments: return "ERR_FunctionPointersCannotBeCalledWithNamedArguments_Description";
                case ErrorCode.ERR_EqualityContractRequiresGetter: return "ERR_EqualityContractRequiresGetter_Description";
                case ErrorCode.ERR_BadFieldTypeInRecord: return "ERR_BadFieldTypeInRecord_Description";
                case ErrorCode.ERR_RecordAmbigCtor: return "ERR_RecordAmbigCtor_Description";
                case ErrorCode.ERR_FunctionPointerTypesInAttributeNotSupported: return "ERR_FunctionPointerTypesInAttributeNotSupported_Description";
                case ErrorCode.ERR_InheritingFromRecordWithSealedToString: return "ERR_InheritingFromRecordWithSealedToString_Description";
                case ErrorCode.ERR_HiddenPositionalMember: return "ERR_HiddenPositionalMember_Description";
                case ErrorCode.ERR_GlobalUsingInNamespace: return "ERR_GlobalUsingInNamespace_Description";
                case ErrorCode.ERR_GlobalUsingOutOfOrder: return "ERR_GlobalUsingOutOfOrder_Description";
                case ErrorCode.ERR_AttributesRequireParenthesizedLambdaExpression: return "ERR_AttributesRequireParenthesizedLambdaExpression_Description";
                case ErrorCode.ERR_CannotInferDelegateType: return "ERR_CannotInferDelegateType_Description";
                case ErrorCode.ERR_InvalidNameInSubpattern: return "ERR_InvalidNameInSubpattern_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfaces_Description";
                case ErrorCode.ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers: return "ERR_GenericConstraintNotSatisfiedInterfaceWithStaticAbstractMembers_Description";
                case ErrorCode.ERR_BadAbstractUnaryOperatorSignature: return "ERR_BadAbstractUnaryOperatorSignature_Description";
                case ErrorCode.ERR_BadAbstractIncDecSignature: return "ERR_BadAbstractIncDecSignature_Description";
                case ErrorCode.ERR_BadAbstractIncDecRetType: return "ERR_BadAbstractIncDecRetType_Description";
                case ErrorCode.ERR_BadAbstractBinaryOperatorSignature: return "ERR_BadAbstractBinaryOperatorSignature_Description";
                case ErrorCode.ERR_BadAbstractShiftOperatorSignature: return "ERR_BadAbstractShiftOperatorSignature_Description";
                case ErrorCode.ERR_BadAbstractStaticMemberAccess: return "ERR_BadAbstractStaticMemberAccess_Description";
                case ErrorCode.ERR_ExpressionTreeContainsAbstractStaticMemberAccess: return "ERR_ExpressionTreeContainsAbstractStaticMemberAccess_Description";
                case ErrorCode.ERR_CloseUnimplementedInterfaceMemberNotStatic: return "ERR_CloseUnimplementedInterfaceMemberNotStatic_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember: return "ERR_RuntimeDoesNotSupportStaticAbstractMembersInInterfacesForMember_Description";
                case ErrorCode.ERR_ExplicitImplementationOfOperatorsMustBeStatic: return "ERR_ExplicitImplementationOfOperatorsMustBeStatic_Description";
                case ErrorCode.ERR_AbstractConversionNotInvolvingContainedType: return "ERR_AbstractConversionNotInvolvingContainedType_Description";
                case ErrorCode.ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod: return "ERR_InterfaceImplementedByUnmanagedCallersOnlyMethod_Description";
                case ErrorCode.ERR_CantConvAnonMethReturnType: return "ERR_CantConvAnonMethReturnType_Description";
                case ErrorCode.ERR_BuilderAttributeDisallowed: return "ERR_BuilderAttributeDisallowed_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion10: return "ERR_FeatureNotAvailableInVersion10_Description";
                case ErrorCode.ERR_SimpleProgramIsEmpty: return "ERR_SimpleProgramIsEmpty_Description";
                case ErrorCode.ERR_LineSpanDirectiveInvalidValue: return "ERR_LineSpanDirectiveInvalidValue_Description";
                case ErrorCode.ERR_LineSpanDirectiveEndLessThanStart: return "ERR_LineSpanDirectiveEndLessThanStart_Description";
                case ErrorCode.ERR_WrongArityAsyncReturn: return "ERR_WrongArityAsyncReturn_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnMalformed: return "ERR_InterpolatedStringHandlerMethodReturnMalformed_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerMethodReturnInconsistent: return "ERR_InterpolatedStringHandlerMethodReturnInconsistent_Description";
                case ErrorCode.ERR_NullInvalidInterpolatedStringHandlerArgumentName: return "ERR_NullInvalidInterpolatedStringHandlerArgumentName_Description";
                case ErrorCode.ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName: return "ERR_NotInstanceInvalidInterpolatedStringHandlerArgumentName_Description";
                case ErrorCode.ERR_InvalidInterpolatedStringHandlerArgumentName: return "ERR_InvalidInterpolatedStringHandlerArgumentName_Description";
                case ErrorCode.ERR_TypeIsNotAnInterpolatedStringHandlerType: return "ERR_TypeIsNotAnInterpolatedStringHandlerType_Description";
                case ErrorCode.ERR_CannotUseSelfAsInterpolatedStringHandlerArgument: return "ERR_CannotUseSelfAsInterpolatedStringHandlerArgument_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentAttributeMalformed: return "ERR_InterpolatedStringHandlerArgumentAttributeMalformed_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString: return "ERR_InterpolatedStringHandlerArgumentLocatedAfterInterpolatedString_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified: return "ERR_InterpolatedStringHandlerArgumentOptionalNotSpecified_Description";
                case ErrorCode.ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion: return "ERR_ExpressionTreeContainsInterpolatedStringHandlerConversion_Description";
                case ErrorCode.ERR_InterpolatedStringHandlerCreationCannotUseDynamic: return "ERR_InterpolatedStringHandlerCreationCannotUseDynamic_Description";
                case ErrorCode.ERR_MultipleFileScopedNamespace: return "ERR_MultipleFileScopedNamespace_Description";
                case ErrorCode.ERR_FileScopedAndNormalNamespace: return "ERR_FileScopedAndNormalNamespace_Description";
                case ErrorCode.ERR_FileScopedNamespaceNotBeforeAllMembers: return "ERR_FileScopedNamespaceNotBeforeAllMembers_Description";
                case ErrorCode.ERR_NoImplicitConvTargetTypedConditional: return "ERR_NoImplicitConvTargetTypedConditional_Description";
                case ErrorCode.ERR_NonPublicParameterlessStructConstructor: return "ERR_NonPublicParameterlessStructConstructor_Description";
                case ErrorCode.ERR_NoConversionForCallerArgumentExpressionParam: return "ERR_NoConversionForCallerArgumentExpressionParam_Description";
                case ErrorCode.ERR_BadCallerArgumentExpressionParamWithoutDefaultValue: return "ERR_BadCallerArgumentExpressionParamWithoutDefaultValue_Description";
                case ErrorCode.ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString: return "ERR_NewlinesAreNotAllowedInsideANonVerbatimInterpolatedString_Description";
                case ErrorCode.ERR_AttrTypeArgCannotBeTypeVar: return "ERR_AttrTypeArgCannotBeTypeVar_Description";
                case ErrorCode.ERR_AttrDependentTypeNotAllowed: return "ERR_AttrDependentTypeNotAllowed_Description";
                case ErrorCode.ERR_LambdaWithAttributesToExpressionTree: return "ERR_LambdaWithAttributesToExpressionTree_Description";
                case ErrorCode.ERR_LambdaExplicitReturnTypeVar: return "ERR_LambdaExplicitReturnTypeVar_Description";
                case ErrorCode.ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers: return "ERR_InterpolatedStringsReferencingInstanceCannotBeInObjectInitializers_Description";
                case ErrorCode.ERR_CannotUseRefInUnmanagedCallersOnly: return "ERR_CannotUseRefInUnmanagedCallersOnly_Description";
                case ErrorCode.ERR_CannotBeMadeNullable: return "ERR_CannotBeMadeNullable_Description";
                case ErrorCode.ERR_UnsupportedTypeForListPattern: return "ERR_UnsupportedTypeForListPattern_Description";
                case ErrorCode.ERR_MisplacedSlicePattern: return "ERR_MisplacedSlicePattern_Description";
                case ErrorCode.ERR_RecordStructConstructorCallsDefaultConstructor: return "ERR_RecordStructConstructorCallsDefaultConstructor_Description";
                case ErrorCode.ERR_StructHasInitializersAndNoDeclaredConstructor: return "ERR_StructHasInitializersAndNoDeclaredConstructor_Description";
                case ErrorCode.ERR_ListPatternRequiresLength: return "ERR_ListPatternRequiresLength_Description";
                case ErrorCode.ERR_ScopedMismatchInParameterOfTarget: return "ERR_ScopedMismatchInParameterOfTarget_Description";
                case ErrorCode.ERR_ScopedMismatchInParameterOfOverrideOrImplementation: return "ERR_ScopedMismatchInParameterOfOverrideOrImplementation_Description";
                case ErrorCode.ERR_ScopedMismatchInParameterOfPartial: return "ERR_ScopedMismatchInParameterOfPartial_Description";
                case ErrorCode.ERR_ParameterNullCheckingNotSupported: return "ERR_ParameterNullCheckingNotSupported_Description";
                case ErrorCode.ERR_RawStringNotInDirectives: return "ERR_RawStringNotInDirectives_Description";
                case ErrorCode.ERR_UnterminatedRawString: return "ERR_UnterminatedRawString_Description";
                case ErrorCode.ERR_TooManyQuotesForRawString: return "ERR_TooManyQuotesForRawString_Description";
                case ErrorCode.ERR_LineDoesNotStartWithSameWhitespace: return "ERR_LineDoesNotStartWithSameWhitespace_Description";
                case ErrorCode.ERR_RawStringDelimiterOnOwnLine: return "ERR_RawStringDelimiterOnOwnLine_Description";
                case ErrorCode.ERR_RawStringInVerbatimInterpolatedStrings: return "ERR_RawStringInVerbatimInterpolatedStrings_Description";
                case ErrorCode.ERR_RawStringMustContainContent: return "ERR_RawStringMustContainContent_Description";
                case ErrorCode.ERR_LineContainsDifferentWhitespace: return "ERR_LineContainsDifferentWhitespace_Description";
                case ErrorCode.ERR_NotEnoughQuotesForRawString: return "ERR_NotEnoughQuotesForRawString_Description";
                case ErrorCode.ERR_NotEnoughCloseBracesForRawString: return "ERR_NotEnoughCloseBracesForRawString_Description";
                case ErrorCode.ERR_TooManyOpenBracesForRawString: return "ERR_TooManyOpenBracesForRawString_Description";
                case ErrorCode.ERR_TooManyCloseBracesForRawString: return "ERR_TooManyCloseBracesForRawString_Description";
                case ErrorCode.ERR_IllegalAtSequence: return "ERR_IllegalAtSequence_Description";
                case ErrorCode.ERR_StringMustStartWithQuoteCharacter: return "ERR_StringMustStartWithQuoteCharacter_Description";
                case ErrorCode.ERR_NoEnumConstraint: return "ERR_NoEnumConstraint_Description";
                case ErrorCode.ERR_NoDelegateConstraint: return "ERR_NoDelegateConstraint_Description";
                case ErrorCode.ERR_MisplacedRecord: return "ERR_MisplacedRecord_Description";
                case ErrorCode.ERR_PatternSpanCharCannotBeStringNull: return "ERR_PatternSpanCharCannotBeStringNull_Description";
                case ErrorCode.ERR_UseDefViolationPropertyUnsupportedVersion: return "ERR_UseDefViolationPropertyUnsupportedVersion_Description";
                case ErrorCode.ERR_UseDefViolationFieldUnsupportedVersion: return "ERR_UseDefViolationFieldUnsupportedVersion_Description";
                case ErrorCode.ERR_OperatorCantBeChecked: return "ERR_OperatorCantBeChecked_Description";
                case ErrorCode.ERR_ImplicitConversionOperatorCantBeChecked: return "ERR_ImplicitConversionOperatorCantBeChecked_Description";
                case ErrorCode.ERR_CheckedOperatorNeedsMatch: return "ERR_CheckedOperatorNeedsMatch_Description";
                case ErrorCode.ERR_CannotBeConvertedToUtf8: return "ERR_CannotBeConvertedToUtf8_Description";
                case ErrorCode.ERR_MisplacedUnchecked: return "ERR_MisplacedUnchecked_Description";
                case ErrorCode.ERR_LineSpanDirectiveRequiresSpace: return "ERR_LineSpanDirectiveRequiresSpace_Description";
                case ErrorCode.ERR_RequiredNameDisallowed: return "ERR_RequiredNameDisallowed_Description";
                case ErrorCode.ERR_OverrideMustHaveRequired: return "ERR_OverrideMustHaveRequired_Description";
                case ErrorCode.ERR_RequiredMemberCannotBeHidden: return "ERR_RequiredMemberCannotBeHidden_Description";
                case ErrorCode.ERR_RequiredMemberCannotBeLessVisibleThanContainingType: return "ERR_RequiredMemberCannotBeLessVisibleThanContainingType_Description";
                case ErrorCode.ERR_ExplicitRequiredMember: return "ERR_ExplicitRequiredMember_Description";
                case ErrorCode.ERR_RequiredMemberMustBeSettable: return "ERR_RequiredMemberMustBeSettable_Description";
                case ErrorCode.ERR_RequiredMemberMustBeSet: return "ERR_RequiredMemberMustBeSet_Description";
                case ErrorCode.ERR_RequiredMembersMustBeAssignedValue: return "ERR_RequiredMembersMustBeAssignedValue_Description";
                case ErrorCode.ERR_RequiredMembersInvalid: return "ERR_RequiredMembersInvalid_Description";
                case ErrorCode.ERR_RequiredMembersBaseTypeInvalid: return "ERR_RequiredMembersBaseTypeInvalid_Description";
                case ErrorCode.ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers: return "ERR_ChainingToSetsRequiredMembersRequiresSetsRequiredMembers_Description";
                case ErrorCode.ERR_NewConstraintCannotHaveRequiredMembers: return "ERR_NewConstraintCannotHaveRequiredMembers_Description";
                case ErrorCode.ERR_UnsupportedCompilerFeature: return "ERR_UnsupportedCompilerFeature_Description";
                case ErrorCode.ERR_RefReturningPropertiesCannotBeRequired: return "ERR_RefReturningPropertiesCannotBeRequired_Description";
                case ErrorCode.ERR_ImplicitImplementationOfInaccessibleInterfaceMember: return "ERR_ImplicitImplementationOfInaccessibleInterfaceMember_Description";
                case ErrorCode.ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers: return "ERR_ScriptsAndSubmissionsCannotHaveRequiredMembers_Description";
                case ErrorCode.ERR_BadAbstractEqualityOperatorSignature: return "ERR_BadAbstractEqualityOperatorSignature_Description";
                case ErrorCode.ERR_BadBinaryReadOnlySpanConcatenation: return "ERR_BadBinaryReadOnlySpanConcatenation_Description";
                case ErrorCode.ERR_ScopedRefAndRefStructOnly: return "ERR_ScopedRefAndRefStructOnly_Description";
                case ErrorCode.ERR_FixedFieldMustNotBeRef: return "ERR_FixedFieldMustNotBeRef_Description";
                case ErrorCode.ERR_RefFieldCannotReferToRefStruct: return "ERR_RefFieldCannotReferToRefStruct_Description";
                case ErrorCode.ERR_FileTypeDisallowedInSignature: return "ERR_FileTypeDisallowedInSignature_Description";
                case ErrorCode.ERR_FileTypeNoExplicitAccessibility: return "ERR_FileTypeNoExplicitAccessibility_Description";
                case ErrorCode.ERR_FileTypeBase: return "ERR_FileTypeBase_Description";
                case ErrorCode.ERR_FileTypeNested: return "ERR_FileTypeNested_Description";
                case ErrorCode.ERR_GlobalUsingStaticFileType: return "ERR_GlobalUsingStaticFileType_Description";
                case ErrorCode.ERR_FileTypeNameDisallowed: return "ERR_FileTypeNameDisallowed_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion11: return "ERR_FeatureNotAvailableInVersion11_Description";
                case ErrorCode.ERR_RefFieldInNonRefStruct: return "ERR_RefFieldInNonRefStruct_Description";
                case ErrorCode.ERR_CannotMatchOnINumberBase: return "ERR_CannotMatchOnINumberBase_Description";
                case ErrorCode.ERR_ScopedDiscard: return "ERR_ScopedDiscard_Description";
                case ErrorCode.ERR_ScopedTypeNameDisallowed: return "ERR_ScopedTypeNameDisallowed_Description";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedTarget: return "ERR_UnscopedRefAttributeUnsupportedTarget_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportRefFields: return "ERR_RuntimeDoesNotSupportRefFields_Description";
                case ErrorCode.ERR_ExplicitScopedRef: return "ERR_ExplicitScopedRef_Description";
                case ErrorCode.ERR_UnscopedScoped: return "ERR_UnscopedScoped_Description";
                case ErrorCode.ERR_FileTypeNonUniquePath: return "ERR_FileTypeNonUniquePath_Description";
                case ErrorCode.ERR_FilePathCannotBeConvertedToUtf8: return "ERR_FilePathCannotBeConvertedToUtf8_Description";
                case ErrorCode.ERR_FileLocalDuplicateNameInNS: return "ERR_FileLocalDuplicateNameInNS_Description";
                case ErrorCode.ERR_DeconstructVariableCannotBeByRef: return "ERR_DeconstructVariableCannotBeByRef_Description";
                case ErrorCode.ERR_RefReturnScopedParameter: return "ERR_RefReturnScopedParameter_Description";
                case ErrorCode.ERR_RefReturnScopedParameter2: return "ERR_RefReturnScopedParameter2_Description";
                case ErrorCode.ERR_RefReturnOnlyParameter: return "ERR_RefReturnOnlyParameter_Description";
                case ErrorCode.ERR_RefReturnOnlyParameter2: return "ERR_RefReturnOnlyParameter2_Description";
                case ErrorCode.ERR_RefAssignReturnOnly: return "ERR_RefAssignReturnOnly_Description";
                case ErrorCode.ERR_RefAssignValEscapeWider: return "ERR_RefAssignValEscapeWider_Description";
                case ErrorCode.ERR_ImplicitlyTypedDefaultParameter: return "ERR_ImplicitlyTypedDefaultParameter_Description";
                case ErrorCode.ERR_UnscopedRefAttributeUnsupportedMemberTarget: return "ERR_UnscopedRefAttributeUnsupportedMemberTarget_Description";
                case ErrorCode.ERR_UnscopedRefAttributeInterfaceImplementation: return "ERR_UnscopedRefAttributeInterfaceImplementation_Description";
                case ErrorCode.ERR_UnrecognizedRefSafetyRulesAttributeVersion: return "ERR_UnrecognizedRefSafetyRulesAttributeVersion_Description";
                case ErrorCode.ERR_InvalidPrimaryConstructorParameterReference: return "ERR_InvalidPrimaryConstructorParameterReference_Description";
                case ErrorCode.ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver: return "ERR_AmbiguousPrimaryConstructorParameterAsColorColorReceiver_Description";
                case ErrorCode.ERR_AnonDelegateCantUseRefLike: return "ERR_AnonDelegateCantUseRefLike_Description";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRef: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRef_Description";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefLike_Description";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterInMember_Description";
                case ErrorCode.ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured: return "ERR_AnonDelegateCantUseStructPrimaryConstructorParameterCaptured_Description";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter: return "ERR_AssgReadonlyPrimaryConstructorParameter_Description";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter: return "ERR_RefReturnReadonlyPrimaryConstructorParameter_Description";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter: return "ERR_RefReadonlyPrimaryConstructorParameter_Description";
                case ErrorCode.ERR_AssgReadonlyPrimaryConstructorParameter2: return "ERR_AssgReadonlyPrimaryConstructorParameter2_Description";
                case ErrorCode.ERR_RefReturnReadonlyPrimaryConstructorParameter2: return "ERR_RefReturnReadonlyPrimaryConstructorParameter2_Description";
                case ErrorCode.ERR_RefReadonlyPrimaryConstructorParameter2: return "ERR_RefReadonlyPrimaryConstructorParameter2_Description";
                case ErrorCode.ERR_RefReturnPrimaryConstructorParameter: return "ERR_RefReturnPrimaryConstructorParameter_Description";
                case ErrorCode.ERR_StructLayoutCyclePrimaryConstructorParameter: return "ERR_StructLayoutCyclePrimaryConstructorParameter_Description";
                case ErrorCode.ERR_UnexpectedParameterList: return "ERR_UnexpectedParameterList_Description";
                case ErrorCode.ERR_BadRefInUsingAlias: return "ERR_BadRefInUsingAlias_Description";
                case ErrorCode.ERR_BadUnsafeInUsingDirective: return "ERR_BadUnsafeInUsingDirective_Description";
                case ErrorCode.ERR_BadNullableReferenceTypeInUsingAlias: return "ERR_BadNullableReferenceTypeInUsingAlias_Description";
                case ErrorCode.ERR_BadStaticAfterUnsafe: return "ERR_BadStaticAfterUnsafe_Description";
                case ErrorCode.ERR_BadCaseInSwitchArm: return "ERR_BadCaseInSwitchArm_Description";
                case ErrorCode.ERR_ConstantValueOfTypeExpected: return "ERR_ConstantValueOfTypeExpected_Description";
                case ErrorCode.ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny: return "ERR_UnsupportedPrimaryConstructorParameterCapturingRefAny_Description";
                case ErrorCode.ERR_InterceptorsFeatureNotEnabled: return "ERR_InterceptorsFeatureNotEnabled_Description";
                case ErrorCode.ERR_InterceptorContainingTypeCannotBeGeneric: return "ERR_InterceptorContainingTypeCannotBeGeneric_Description";
                case ErrorCode.ERR_InterceptorPathNotInCompilation: return "ERR_InterceptorPathNotInCompilation_Description";
                case ErrorCode.ERR_InterceptorPathNotInCompilationWithCandidate: return "ERR_InterceptorPathNotInCompilationWithCandidate_Description";
                case ErrorCode.ERR_InterceptorPositionBadToken: return "ERR_InterceptorPositionBadToken_Description";
                case ErrorCode.ERR_InterceptorLineOutOfRange: return "ERR_InterceptorLineOutOfRange_Description";
                case ErrorCode.ERR_InterceptorCharacterOutOfRange: return "ERR_InterceptorCharacterOutOfRange_Description";
                case ErrorCode.ERR_InterceptorSignatureMismatch: return "ERR_InterceptorSignatureMismatch_Description";
                case ErrorCode.ERR_InterceptorMethodMustBeOrdinary: return "ERR_InterceptorMethodMustBeOrdinary_Description";
                case ErrorCode.ERR_InterceptorMustReferToStartOfTokenPosition: return "ERR_InterceptorMustReferToStartOfTokenPosition_Description";
                case ErrorCode.ERR_InterceptorMustHaveMatchingThisParameter: return "ERR_InterceptorMustHaveMatchingThisParameter_Description";
                case ErrorCode.ERR_InterceptorMustNotHaveThisParameter: return "ERR_InterceptorMustNotHaveThisParameter_Description";
                case ErrorCode.ERR_InterceptorFilePathCannotBeNull: return "ERR_InterceptorFilePathCannotBeNull_Description";
                case ErrorCode.ERR_InterceptorNameNotInvoked: return "ERR_InterceptorNameNotInvoked_Description";
                case ErrorCode.ERR_InterceptorNonUniquePath: return "ERR_InterceptorNonUniquePath_Description";
                case ErrorCode.ERR_DuplicateInterceptor: return "ERR_DuplicateInterceptor_Description";
                case ErrorCode.ERR_InterceptorNotAccessible: return "ERR_InterceptorNotAccessible_Description";
                case ErrorCode.ERR_InterceptorScopedMismatch: return "ERR_InterceptorScopedMismatch_Description";
                case ErrorCode.ERR_InterceptorLineCharacterMustBePositive: return "ERR_InterceptorLineCharacterMustBePositive_Description";
                case ErrorCode.ERR_InterceptorCannotInterceptNameof: return "ERR_InterceptorCannotInterceptNameof_Description";
                case ErrorCode.ERR_InterceptorCannotUseUnmanagedCallersOnly: return "ERR_InterceptorCannotUseUnmanagedCallersOnly_Description";
                case ErrorCode.ERR_BadUsingStaticType: return "ERR_BadUsingStaticType_Description";
                case ErrorCode.ERR_SymbolDefinedInAssembly: return "ERR_SymbolDefinedInAssembly_Description";
                case ErrorCode.ERR_InlineArrayConversionToSpanNotSupported: return "ERR_InlineArrayConversionToSpanNotSupported_Description";
                case ErrorCode.ERR_InlineArrayConversionToReadOnlySpanNotSupported: return "ERR_InlineArrayConversionToReadOnlySpanNotSupported_Description";
                case ErrorCode.ERR_InlineArrayIndexOutOfRange: return "ERR_InlineArrayIndexOutOfRange_Description";
                case ErrorCode.ERR_InvalidInlineArrayLength: return "ERR_InvalidInlineArrayLength_Description";
                case ErrorCode.ERR_InvalidInlineArrayLayout: return "ERR_InvalidInlineArrayLayout_Description";
                case ErrorCode.ERR_InvalidInlineArrayFields: return "ERR_InvalidInlineArrayFields_Description";
                case ErrorCode.ERR_ExpressionTreeContainsInlineArrayOperation: return "ERR_ExpressionTreeContainsInlineArrayOperation_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportInlineArrayTypes: return "ERR_RuntimeDoesNotSupportInlineArrayTypes_Description";
                case ErrorCode.ERR_InlineArrayBadIndex: return "ERR_InlineArrayBadIndex_Description";
                case ErrorCode.ERR_NamedArgumentForInlineArray: return "ERR_NamedArgumentForInlineArray_Description";
                case ErrorCode.ERR_CollectionExpressionTargetTypeNotConstructible: return "ERR_CollectionExpressionTargetTypeNotConstructible_Description";
                case ErrorCode.ERR_ExpressionTreeContainsCollectionExpression: return "ERR_ExpressionTreeContainsCollectionExpression_Description";
                case ErrorCode.ERR_CollectionExpressionNoTargetType: return "ERR_CollectionExpressionNoTargetType_Description";
                case ErrorCode.ERR_InterceptorArityNotCompatible: return "ERR_InterceptorArityNotCompatible_Description";
                case ErrorCode.ERR_InterceptorCannotBeGeneric: return "ERR_InterceptorCannotBeGeneric_Description";
                case ErrorCode.ERR_InlineArrayUnsupportedElementFieldModifier: return "ERR_InlineArrayUnsupportedElementFieldModifier_Description";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidType: return "ERR_CollectionBuilderAttributeInvalidType_Description";
                case ErrorCode.ERR_CollectionBuilderAttributeInvalidMethodName: return "ERR_CollectionBuilderAttributeInvalidMethodName_Description";
                case ErrorCode.ERR_CollectionBuilderAttributeMethodNotFound: return "ERR_CollectionBuilderAttributeMethodNotFound_Description";
                case ErrorCode.ERR_CollectionBuilderNoElementType: return "ERR_CollectionBuilderNoElementType_Description";
                case ErrorCode.ERR_InlineArrayForEachNotSupported: return "ERR_InlineArrayForEachNotSupported_Description";
                case ErrorCode.ERR_RefReadOnlyWrongOrdering: return "ERR_RefReadOnlyWrongOrdering_Description";
                case ErrorCode.ERR_BadArgExtraRefLangVersion: return "ERR_BadArgExtraRefLangVersion_Description";
                case ErrorCode.ERR_OutAttrOnRefReadonlyParam: return "ERR_OutAttrOnRefReadonlyParam_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion12: return "ERR_FeatureNotAvailableInVersion12_Description";
                case ErrorCode.ERR_CollectionExpressionEscape: return "ERR_CollectionExpressionEscape_Description";
                case ErrorCode.ERR_ExpectedInterpolatedString: return "ERR_ExpectedInterpolatedString_Description";
                case ErrorCode.ERR_InterceptorGlobalNamespace: return "ERR_InterceptorGlobalNamespace_Description";
                case ErrorCode.ERR_InterceptableMethodMustBeOrdinary: return "ERR_InterceptableMethodMustBeOrdinary_Description";
                case ErrorCode.ERR_CollectionExpressionImmutableArray: return "ERR_CollectionExpressionImmutableArray_Description";
                case ErrorCode.ERR_InvalidExperimentalDiagID: return "ERR_InvalidExperimentalDiagID_Description";
                case ErrorCode.ERR_SpreadMissingMember: return "ERR_SpreadMissingMember_Description";
                case ErrorCode.ERR_CollectionExpressionTargetNoElementType: return "ERR_CollectionExpressionTargetNoElementType_Description";
                case ErrorCode.ERR_CollectionExpressionMissingConstructor: return "ERR_CollectionExpressionMissingConstructor_Description";
                case ErrorCode.ERR_CollectionExpressionMissingAdd: return "ERR_CollectionExpressionMissingAdd_Description";
                case ErrorCode.ERR_RefLocalAcrossAwait: return "ERR_RefLocalAcrossAwait_Description";
                case ErrorCode.ERR_DynamicDispatchToParamsCollection: return "ERR_DynamicDispatchToParamsCollection_Description";
                case ErrorCode.ERR_CollectionInitializerInfiniteChainOfAddCalls: return "ERR_CollectionInitializerInfiniteChainOfAddCalls_Description";
                case ErrorCode.ERR_ParamsCollectionInfiniteChainOfConstructorCalls: return "ERR_ParamsCollectionInfiniteChainOfConstructorCalls_Description";
                case ErrorCode.ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember: return "ERR_ParamsMemberCannotBeLessVisibleThanDeclaringMember_Description";
                case ErrorCode.ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember: return "ERR_ParamsCollectionConstructorDoesntInitializeRequiredMember_Description";
                case ErrorCode.ERR_ParamsCollectionExpressionTree: return "ERR_ParamsCollectionExpressionTree_Description";
                case ErrorCode.ERR_ParamsCollectionExtensionAddMethod: return "ERR_ParamsCollectionExtensionAddMethod_Description";
                case ErrorCode.ERR_ParamsCollectionMissingConstructor: return "ERR_ParamsCollectionMissingConstructor_Description";
                case ErrorCode.ERR_NoModifiersOnUsing: return "ERR_NoModifiersOnUsing_Description";
                case ErrorCode.ERR_CannotDynamicInvokeOnExpression: return "ERR_CannotDynamicInvokeOnExpression_Description";
                case ErrorCode.ERR_InterceptsLocationDataInvalidFormat: return "ERR_InterceptsLocationDataInvalidFormat_Description";
                case ErrorCode.ERR_InterceptsLocationUnsupportedVersion: return "ERR_InterceptsLocationUnsupportedVersion_Description";
                case ErrorCode.ERR_InterceptsLocationDuplicateFile: return "ERR_InterceptsLocationDuplicateFile_Description";
                case ErrorCode.ERR_InterceptsLocationFileNotFound: return "ERR_InterceptsLocationFileNotFound_Description";
                case ErrorCode.ERR_InterceptsLocationDataInvalidPosition: return "ERR_InterceptsLocationDataInvalidPosition_Description";
                case ErrorCode.ERR_BadYieldInUnsafe: return "ERR_BadYieldInUnsafe_Description";
                case ErrorCode.ERR_AddressOfInIterator: return "ERR_AddressOfInIterator_Description";
                case ErrorCode.ERR_RuntimeDoesNotSupportByRefLikeGenerics: return "ERR_RuntimeDoesNotSupportByRefLikeGenerics_Description";
                case ErrorCode.ERR_RefStructConstraintAlreadySpecified: return "ERR_RefStructConstraintAlreadySpecified_Description";
                case ErrorCode.ERR_AllowsClauseMustBeLast: return "ERR_AllowsClauseMustBeLast_Description";
                case ErrorCode.ERR_ClassIsCombinedWithRefStruct: return "ERR_ClassIsCombinedWithRefStruct_Description";
                case ErrorCode.ERR_NotRefStructConstraintNotSatisfied: return "ERR_NotRefStructConstraintNotSatisfied_Description";
                case ErrorCode.ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember: return "ERR_RefStructDoesNotSupportDefaultInterfaceImplementationForMember_Description";
                case ErrorCode.ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike: return "ERR_BadNonVirtualInterfaceMemberAccessOnAllowsRefLike_Description";
                case ErrorCode.ERR_BadAllowByRefLikeEnumerator: return "ERR_BadAllowByRefLikeEnumerator_Description";
                case ErrorCode.ERR_PartialPropertyMissingImplementation: return "ERR_PartialPropertyMissingImplementation_Description";
                case ErrorCode.ERR_PartialPropertyMissingDefinition: return "ERR_PartialPropertyMissingDefinition_Description";
                case ErrorCode.ERR_PartialPropertyDuplicateDefinition: return "ERR_PartialPropertyDuplicateDefinition_Description";
                case ErrorCode.ERR_PartialPropertyDuplicateImplementation: return "ERR_PartialPropertyDuplicateImplementation_Description";
                case ErrorCode.ERR_PartialPropertyMissingAccessor: return "ERR_PartialPropertyMissingAccessor_Description";
                case ErrorCode.ERR_PartialPropertyUnexpectedAccessor: return "ERR_PartialPropertyUnexpectedAccessor_Description";
                case ErrorCode.ERR_PartialPropertyInitMismatch: return "ERR_PartialPropertyInitMismatch_Description";
                case ErrorCode.ERR_PartialPropertyTypeDifference: return "ERR_PartialPropertyTypeDifference_Description";
                case ErrorCode.ERR_PartialPropertyRequiredDifference: return "ERR_PartialPropertyRequiredDifference_Description";
                case ErrorCode.ERR_InlineArrayAttributeOnRecord: return "ERR_InlineArrayAttributeOnRecord_Description";
                case ErrorCode.ERR_FeatureNotAvailableInVersion13: return "ERR_FeatureNotAvailableInVersion13_Description";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToOverride: return "ERR_CannotApplyOverloadResolutionPriorityToOverride_Description";
                case ErrorCode.ERR_CannotApplyOverloadResolutionPriorityToMember: return "ERR_CannotApplyOverloadResolutionPriorityToMember_Description";
                default: throw ExceptionUtilities.UnexpectedValue(code);
            }
        }
    }
}
