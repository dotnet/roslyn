//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18250
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Reflection;

namespace Microsoft.CodeAnalysis.CSharp.UnitTests {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CodeAnalysis.CSharp.UnitTests.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to extern alias libAlias=other_library.dll;
        ///class myClass
        ///{
        ///}.
        /// </summary>
        public static string InvalidExternAlias01 {
            get {
                return ResourceManager.GetString("InvalidExternAlias01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///namespace ConsoleApplication1
        ///{
        ///    class Program
        ///    {
        ///        static void Main(string[] args)
        ///        {
        ///        }
        ///    }
        ///}
        ///public class Class_1_L0
        ///{
        ///    //Sub [No Params] Qty: 10 [Specific Code Block]
        ///    public void TestSub_1_L1()
        ///    {
        ///    }
        ///    public void TestSub_2_L1()
        ///    {
        ///    }
        ///    public void TestSub_3_L1()
        ///    {
        ///    }
        ///    public void TestSub_4_L1()
        ///    {
        ///    }
        ///    public void TestSub_ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LongWithoutStmts_cs {
            get {
                return ResourceManager.GetString("LongWithoutStmts_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace ConsoleApplication1
        ///{
        ///    class Program
        ///    {
        ///        static void Main(string[] args)
        ///        {
        ///        }
        ///    }
        ///}
        ///
        ///
        ///        public class Class_1_L0
        ///        {
        ///      
        ///    //Sub [No Params] Qty: 10 [Specific Code Block]/Repeating:15
        ///    
        ///        public void TestSub_1_L1()
        ///        {
        ///      
        ///     System.Console.WriteLine(&quot;Test&quot; + 2); 
        ///     System.Console.WriteLine(&quot;Test&quot; + 2); 
        ///     System.Co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LongWithStmts_cs {
            get {
                return ResourceManager.GetString("LongWithStmts_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;Area&gt;Declaration of Methods with Optional Parameters&lt;/Area&gt;
        ///// &lt;Title&gt;Declaration of Optional Params&lt;/Title&gt;
        ///// &lt;Description&gt;Simple Declaration of a method with optional parameters. cast of an int to long&lt;/Description&gt;
        ///// &lt;Expects status=success&gt;&lt;/Expects&gt;
        ///// &lt;Code&gt;
        ///
        ///using System.Runtime.InteropServices;
        ///public struct Parent{
        ///
        ///	public int Goo([Optional] int i,  [Optional] long j, [Optional] float f, [Optional]  decimal d){
        ///	if(d==0 ) return 0;
        ///	return 1;
        ///	}
        ///}
        ///
        ///class Test{
        ///	public static  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OptionalFloat {
            get {
                return ResourceManager.GetString("OptionalFloat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;Area&gt;Declaration of Methods with Optional Parameters&lt;/Area&gt;
        ///// &lt;Title&gt;Declaration of Optional Params&lt;/Title&gt;
        ///// &lt;Description&gt;Simple Declaration of a method with optional parameters
        ///// Params can&apos;t be defaulted&lt;/Description&gt;
        ///// &lt;RelatedBugs&gt;Dev10:477862&lt;/RelatedBugs&gt;
        ///// &lt;Expects status=error&gt;CS1751&lt;/Expects&gt;
        ///// &lt;Code&gt;
        ///
        ///public class Parent{
        ///
        ///	public int Goo( int x=2,params object[] array= null){
        ///	x=2;
        ///	if(x ==2) return 0;
        ///	return 1;
        ///	}
        ///}
        ///
        ///class Test{
        ///	public static int Main(){
        ///		Parent  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OptionalParamsArray {
            get {
                return ResourceManager.GetString("OptionalParamsArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class Test : N1.I1
        ///    {
        ///        int global::N.
        /// </summary>
        public static string PartialAliasedName {
            get {
                return ResourceManager.GetString("PartialAliasedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class C
        ///{
        ///public static int Main()
        ///{
        ///switch(str)
        ///{ 
        ///default:
        ///List&lt;in.
        /// </summary>
        public static string PartialInKeyword {
            get {
                return ResourceManager.GetString("PartialInKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StringText oldText = new StringText(@&quot;using System;
        ///
        ///class AAttribute : Attribute {
        ///  public AAttribute(object o) { }
        ///}
        ///
        ///[A(new string[] is { &quot;&quot;&quot;);
        ///            var startTree = SyntaxTree.Parse(oldText);
        ///            var roundTrip = startTree.Root.ToString().Equals(oldText);.
        /// </summary>
        public static string PartialNewAttributeArray {
            get {
                return ResourceManager.GetString("PartialNewAttributeArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define TEST 
        ///#define TEST2
        ///class Test
        ///{
        ///static int Main() 
        ///{
        ///int x = 1;
        ///
        ///#if TEST3
        ///x++;
        ///#elif TEST2 &amp;.
        /// </summary>
        public static string PartialPreprocessorExpression {
            get {
                return ResourceManager.GetString("PartialPreprocessorExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///public class Test
        ///{
        ///public static int Main(string [] args)
        ///{
        ///switch (false) {
        ///case true:
        ///break;
        ///default false:.
        /// </summary>
        public static string PartialSwitchBlock {
            get {
                return ResourceManager.GetString("PartialSwitchBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define A
        ///using System;
        ///class Program
        ///{
        ///static int Main()
        ///{
        ///int x = 0;
        ///#if A == A\.
        /// </summary>
        public static string PartialUnicodeIdentifier {
            get {
                return ResourceManager.GetString("PartialUnicodeIdentifier", resourceCulture);
            }
        }
    }
}
