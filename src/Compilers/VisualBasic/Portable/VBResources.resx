<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Trees0" xml:space="preserve">
    <value>trees({0})</value>
  </data>
  <data name="TreesMustHaveRootNode" xml:space="preserve">
    <value>trees({0}) must have root node with SyntaxKind.CompilationUnit.</value>
  </data>
  <data name="CannotAddCompilerSpecialTree" xml:space="preserve">
    <value>Cannot add compiler special tree</value>
  </data>
  <data name="SyntaxTreeAlreadyPresent" xml:space="preserve">
    <value>Syntax tree already present</value>
  </data>
  <data name="SubmissionCanHaveAtMostOneSyntaxTree" xml:space="preserve">
    <value>Submission can have at most one syntax tree.</value>
  </data>
  <data name="CannotRemoveCompilerSpecialTree" xml:space="preserve">
    <value>Cannot remove compiler special tree</value>
  </data>
  <data name="SyntaxTreeNotFoundToRemove" xml:space="preserve">
    <value>SyntaxTree '{0}' not found to remove</value>
  </data>
  <data name="TreeMustHaveARootNodeWithCompilationUnit" xml:space="preserve">
    <value>Tree must have a root node with SyntaxKind.CompilationUnit</value>
  </data>
  <data name="CompilationVisualBasic" xml:space="preserve">
    <value>Compilation (Visual Basic): </value>
  </data>
  <data name="NodeIsNotWithinSyntaxTree" xml:space="preserve">
    <value>Node is not within syntax tree</value>
  </data>
  <data name="CantReferenceCompilationFromTypes" xml:space="preserve">
    <value>Can't reference compilation of type '{0}' from {1} compilation.</value>
  </data>
  <data name="PositionOfTypeParameterTooLarge" xml:space="preserve">
    <value>position of type parameter too large</value>
  </data>
  <data name="AssociatedTypeDoesNotHaveTypeParameters" xml:space="preserve">
    <value>Associated type does not have type parameters</value>
  </data>
  <data name="IDS_FunctionReturnType" xml:space="preserve">
    <value>function return type</value>
  </data>
  <data name="TypeArgumentCannotBeNothing" xml:space="preserve">
    <value>Type argument cannot be Nothing</value>
  </data>
  <data name="WrongNumberOfTypeArguments" xml:space="preserve">
    <value>Wrong number of type arguments</value>
  </data>
  <data name="ERR_FileNotFound" xml:space="preserve">
    <value>file '{0}' could not be found</value>
  </data>
  <data name="ERR_NoResponseFile" xml:space="preserve">
    <value>unable to open response file '{0}'</value>
  </data>
  <data name="ERR_ArgumentRequired" xml:space="preserve">
    <value>option '{0}' requires '{1}'</value>
  </data>
  <data name="ERR_SwitchNeedsBool" xml:space="preserve">
    <value>option '{0}' can be followed only by '+' or '-'</value>
  </data>
  <data name="ERR_InvalidSwitchValue" xml:space="preserve">
    <value>the value '{1}' is invalid for option '{0}'</value>
  </data>
  <data name="ERR_MutuallyExclusiveOptions" xml:space="preserve">
    <value>Compilation options '{0}' and '{1}' can't both be specified at the same time.</value>
  </data>
  <data name="WRN_BadUILang" xml:space="preserve">
    <value>The language name '{0}' is invalid.</value>
  </data>
  <data name="WRN_BadUILang_Title" xml:space="preserve">
    <value>The language name for /preferreduilang is invalid</value>
  </data>
  <data name="ERR_VBCoreNetModuleConflict" xml:space="preserve">
    <value>The options /vbruntime* and /target:module cannot be combined.</value>
  </data>
  <data name="ERR_InvalidFormatForGuidForOption" xml:space="preserve">
    <value>Command-line syntax error: Invalid Guid format '{0}' for option '{1}'</value>
  </data>
  <data name="ERR_MissingGuidForOption" xml:space="preserve">
    <value>Command-line syntax error: Missing Guid for option '{1}'</value>
  </data>
  <data name="WRN_BadSwitch" xml:space="preserve">
    <value>unrecognized option '{0}'; ignored</value>
  </data>
  <data name="WRN_BadSwitch_Title" xml:space="preserve">
    <value>Unrecognized command-line option</value>
  </data>
  <data name="ERR_NoSources" xml:space="preserve">
    <value>no input sources specified</value>
  </data>
  <data name="WRN_FileAlreadyIncluded" xml:space="preserve">
    <value>source file '{0}' specified multiple times</value>
  </data>
  <data name="WRN_FileAlreadyIncluded_Title" xml:space="preserve">
    <value>Source file specified multiple times</value>
  </data>
  <data name="ERR_CantOpenFileWrite" xml:space="preserve">
    <value>can't open '{0}' for writing: {1}</value>
  </data>
  <data name="ERR_BadCodepage" xml:space="preserve">
    <value>code page '{0}' is invalid or not installed</value>
  </data>
  <data name="ERR_BinaryFile" xml:space="preserve">
    <value>the file '{0}' is not a text file</value>
  </data>
  <data name="ERR_LibNotFound" xml:space="preserve">
    <value>could not find library '{0}'</value>
  </data>
  <data name="ERR_MetadataReferencesNotSupported" xml:space="preserve">
    <value>Metadata references not supported.</value>
  </data>
  <data name="ERR_IconFileAndWin32ResFile" xml:space="preserve">
    <value>cannot specify both /win32icon and /win32resource</value>
  </data>
  <data name="WRN_NoConfigInResponseFile" xml:space="preserve">
    <value>ignoring /noconfig option because it was specified in a response file</value>
  </data>
  <data name="WRN_NoConfigInResponseFile_Title" xml:space="preserve">
    <value>Ignoring /noconfig option because it was specified in a response file</value>
  </data>
  <data name="WRN_InvalidWarningId" xml:space="preserve">
    <value>warning number '{0}' for the option '{1}' is either not configurable or not valid</value>
  </data>
  <data name="WRN_InvalidWarningId_Title" xml:space="preserve">
    <value>Warning number is either not configurable or not valid</value>
  </data>
  <data name="ERR_NoSourcesOut" xml:space="preserve">
    <value>cannot infer an output file name from resource only input files; provide the '/out' option</value>
  </data>
  <data name="ERR_NeedModule" xml:space="preserve">
    <value>the /moduleassemblyname option may only be specified when building a target of type 'module'</value>
  </data>
  <data name="ERR_InvalidAssemblyName" xml:space="preserve">
    <value>'{0}' is not a valid value for /moduleassemblyname</value>
  </data>
  <data name="ERR_ConflictingManifestSwitches" xml:space="preserve">
    <value>Error embedding Win32 manifest: Option /win32manifest conflicts with /nowin32manifest.</value>
  </data>
  <data name="WRN_IgnoreModuleManifest" xml:space="preserve">
    <value>Option /win32manifest ignored. It can be specified only when the target is an assembly.</value>
  </data>
  <data name="WRN_IgnoreModuleManifest_Title" xml:space="preserve">
    <value>Option /win32manifest ignored</value>
  </data>
  <data name="FTL_InputFileNameTooLong" xml:space="preserve">
    <value>File name '{0}' is empty, contains invalid characters, has a drive specification without an absolute path, or is too long</value>
  </data>
  <data name="ERR_InvalidInNamespace" xml:space="preserve">
    <value>Statement is not valid in a namespace.</value>
  </data>
  <data name="ERR_UndefinedType1" xml:space="preserve">
    <value>Type '{0}' is not defined.</value>
  </data>
  <data name="ERR_MissingNext" xml:space="preserve">
    <value>'Next' expected.</value>
  </data>
  <data name="ERR_IllegalCharConstant" xml:space="preserve">
    <value>Character constant must contain exactly one character.</value>
  </data>
  <data name="ERR_UnreferencedAssemblyEvent3" xml:space="preserve">
    <value>Reference required to assembly '{0}' containing the definition for event '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedModuleEvent3" xml:space="preserve">
    <value>Reference required to module '{0}' containing the definition for event '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedAssemblyBase3" xml:space="preserve">
    <value>Reference required to assembly '{0}' containing the base class '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedModuleBase3" xml:space="preserve">
    <value>Reference required to module '{0}' containing the base class '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedAssemblyImplements3" xml:space="preserve">
    <value>Reference required to assembly '{0}' containing the implemented interface '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedModuleImplements3" xml:space="preserve">
    <value>Reference required to module '{0}' containing the implemented interface '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_LbExpectedEndIf" xml:space="preserve">
    <value>'#If' block must end with a matching '#End If'.</value>
  </data>
  <data name="ERR_LbNoMatchingIf" xml:space="preserve">
    <value>'#ElseIf', '#Else', or '#End If' must be preceded by a matching '#If'.</value>
  </data>
  <data name="ERR_LbBadElseif" xml:space="preserve">
    <value>'#ElseIf' must be preceded by a matching '#If' or '#ElseIf'.</value>
  </data>
  <data name="ERR_InheritsFromRestrictedType1" xml:space="preserve">
    <value>Inheriting from '{0}' is not valid.</value>
  </data>
  <data name="ERR_InvOutsideProc" xml:space="preserve">
    <value>Labels are not valid outside methods.</value>
  </data>
  <data name="ERR_DelegateCantImplement" xml:space="preserve">
    <value>Delegates cannot implement interface methods.</value>
  </data>
  <data name="ERR_DelegateCantHandleEvents" xml:space="preserve">
    <value>Delegates cannot handle events.</value>
  </data>
  <data name="ERR_IsOperatorRequiresReferenceTypes1" xml:space="preserve">
    <value>'Is' operator does not accept operands of type '{0}'. Operands must be reference or nullable types.</value>
  </data>
  <data name="ERR_TypeOfRequiresReferenceType1" xml:space="preserve">
    <value>'TypeOf ... Is' requires its left operand to have a reference type, but this operand has the value type '{0}'.</value>
  </data>
  <data name="ERR_ReadOnlyHasSet" xml:space="preserve">
    <value>Properties declared 'ReadOnly' cannot have a 'Set'.</value>
  </data>
  <data name="ERR_WriteOnlyHasGet" xml:space="preserve">
    <value>Properties declared 'WriteOnly' cannot have a 'Get'.</value>
  </data>
  <data name="ERR_InvInsideProc" xml:space="preserve">
    <value>Statement is not valid inside a method.</value>
  </data>
  <data name="ERR_InvInsideBlock" xml:space="preserve">
    <value>Statement is not valid inside '{0}' block.</value>
  </data>
  <data name="ERR_UnexpectedExpressionStatement" xml:space="preserve">
    <value>Expression statement is only allowed at the end of an interactive submission.</value>
  </data>
  <data name="ERR_EndProp" xml:space="preserve">
    <value>Property missing 'End Property'.</value>
  </data>
  <data name="ERR_EndSubExpected" xml:space="preserve">
    <value>'End Sub' expected.</value>
  </data>
  <data name="ERR_EndFunctionExpected" xml:space="preserve">
    <value>'End Function' expected.</value>
  </data>
  <data name="ERR_LbElseNoMatchingIf" xml:space="preserve">
    <value>'#Else' must be preceded by a matching '#If' or '#ElseIf'.</value>
  </data>
  <data name="ERR_CantRaiseBaseEvent" xml:space="preserve">
    <value>Derived classes cannot raise base class events.</value>
  </data>
  <data name="ERR_TryWithoutCatchOrFinally" xml:space="preserve">
    <value>Try must have at least one 'Catch' or a 'Finally'.</value>
  </data>
  <data name="ERR_EventsCantBeFunctions" xml:space="preserve">
    <value>Events cannot have a return type.</value>
  </data>
  <data name="ERR_MissingEndBrack" xml:space="preserve">
    <value>Bracketed identifier is missing closing ']'.</value>
  </data>
  <data name="ERR_Syntax" xml:space="preserve">
    <value>Syntax error.</value>
  </data>
  <data name="ERR_Overflow" xml:space="preserve">
    <value>Overflow.</value>
  </data>
  <data name="ERR_IllegalChar" xml:space="preserve">
    <value>Character is not valid.</value>
  </data>
  <data name="ERR_StrictDisallowsObjectOperand1" xml:space="preserve">
    <value>Option Strict On prohibits operands of type Object for operator '{0}'.</value>
  </data>
  <data name="ERR_LoopControlMustNotBeProperty" xml:space="preserve">
    <value>Loop control variable cannot be a property or a late-bound indexed array.</value>
  </data>
  <data name="ERR_MethodBodyNotAtLineStart" xml:space="preserve">
    <value>First statement of a method body cannot be on the same line as the method declaration.</value>
  </data>
  <data name="ERR_MaximumNumberOfErrors" xml:space="preserve">
    <value>Maximum number of errors has been exceeded.</value>
  </data>
  <data name="ERR_UseOfKeywordNotInInstanceMethod1" xml:space="preserve">
    <value>'{0}' is valid only within an instance method.</value>
  </data>
  <data name="ERR_UseOfKeywordFromStructure1" xml:space="preserve">
    <value>'{0}' is not valid within a structure.</value>
  </data>
  <data name="ERR_BadAttributeConstructor1" xml:space="preserve">
    <value>Attribute constructor has a parameter of type '{0}', which is not an integral, floating-point or Enum type or one of Object, Char, String, Boolean, System.Type or 1-dimensional array of these types.</value>
  </data>
  <data name="ERR_ParamArrayWithOptArgs" xml:space="preserve">
    <value>Method cannot have both a ParamArray and Optional parameters.</value>
  </data>
  <data name="ERR_ExpectedArray1" xml:space="preserve">
    <value>'{0}' statement requires an array.</value>
  </data>
  <data name="ERR_ParamArrayNotArray" xml:space="preserve">
    <value>ParamArray parameter must be an array.</value>
  </data>
  <data name="ERR_ParamArrayRank" xml:space="preserve">
    <value>ParamArray parameter must be a one-dimensional array.</value>
  </data>
  <data name="ERR_ArrayRankLimit" xml:space="preserve">
    <value>Array exceeds the limit of 32 dimensions.</value>
  </data>
  <data name="ERR_AsNewArray" xml:space="preserve">
    <value>Arrays cannot be declared with 'New'.</value>
  </data>
  <data name="ERR_TooManyArgs1" xml:space="preserve">
    <value>Too many arguments to '{0}'.</value>
  </data>
  <data name="ERR_ExpectedCase" xml:space="preserve">
    <value>Statements and labels are not valid between 'Select Case' and first 'Case'.</value>
  </data>
  <data name="ERR_RequiredConstExpr" xml:space="preserve">
    <value>Constant expression is required.</value>
  </data>
  <data name="ERR_RequiredConstConversion2" xml:space="preserve">
    <value>Conversion from '{0}' to '{1}' cannot occur in a constant expression.</value>
  </data>
  <data name="ERR_InvalidMe" xml:space="preserve">
    <value>'Me' cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_ReadOnlyAssignment" xml:space="preserve">
    <value>'ReadOnly' variable cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_ExitSubOfFunc" xml:space="preserve">
    <value>'Exit Sub' is not valid in a Function or Property.</value>
  </data>
  <data name="ERR_ExitPropNot" xml:space="preserve">
    <value>'Exit Property' is not valid in a Function or Sub.</value>
  </data>
  <data name="ERR_ExitFuncOfSub" xml:space="preserve">
    <value>'Exit Function' is not valid in a Sub or Property.</value>
  </data>
  <data name="ERR_LValueRequired" xml:space="preserve">
    <value>Expression is a value and therefore cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_ForIndexInUse1" xml:space="preserve">
    <value>For loop control variable '{0}' already in use by an enclosing For loop.</value>
  </data>
  <data name="ERR_NextForMismatch1" xml:space="preserve">
    <value>Next control variable does not match For loop control variable '{0}'.</value>
  </data>
  <data name="ERR_CaseElseNoSelect" xml:space="preserve">
    <value>'Case Else' can only appear inside a 'Select Case' statement.</value>
  </data>
  <data name="ERR_CaseNoSelect" xml:space="preserve">
    <value>'Case' can only appear inside a 'Select Case' statement.</value>
  </data>
  <data name="ERR_CantAssignToConst" xml:space="preserve">
    <value>Constant cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_NamedSubscript" xml:space="preserve">
    <value>Named arguments are not valid as array subscripts.</value>
  </data>
  <data name="ERR_ExpectedEndIf" xml:space="preserve">
    <value>'If' must end with a matching 'End If'.</value>
  </data>
  <data name="ERR_ExpectedEndWhile" xml:space="preserve">
    <value>'While' must end with a matching 'End While'.</value>
  </data>
  <data name="ERR_ExpectedLoop" xml:space="preserve">
    <value>'Do' must end with a matching 'Loop'.</value>
  </data>
  <data name="ERR_ExpectedNext" xml:space="preserve">
    <value>'For' must end with a matching 'Next'.</value>
  </data>
  <data name="ERR_ExpectedEndWith" xml:space="preserve">
    <value>'With' must end with a matching 'End With'.</value>
  </data>
  <data name="ERR_ElseNoMatchingIf" xml:space="preserve">
    <value>'Else' must be preceded by a matching 'If' or 'ElseIf'.</value>
  </data>
  <data name="ERR_EndIfNoMatchingIf" xml:space="preserve">
    <value>'End If' must be preceded by a matching 'If'.</value>
  </data>
  <data name="ERR_EndSelectNoSelect" xml:space="preserve">
    <value>'End Select' must be preceded by a matching 'Select Case'.</value>
  </data>
  <data name="ERR_ExitDoNotWithinDo" xml:space="preserve">
    <value>'Exit Do' can only appear inside a 'Do' statement.</value>
  </data>
  <data name="ERR_EndWhileNoWhile" xml:space="preserve">
    <value>'End While' must be preceded by a matching 'While'.</value>
  </data>
  <data name="ERR_LoopNoMatchingDo" xml:space="preserve">
    <value>'Loop' must be preceded by a matching 'Do'.</value>
  </data>
  <data name="ERR_NextNoMatchingFor" xml:space="preserve">
    <value>'Next' must be preceded by a matching 'For'.</value>
  </data>
  <data name="ERR_EndWithWithoutWith" xml:space="preserve">
    <value>'End With' must be preceded by a matching 'With'.</value>
  </data>
  <data name="ERR_MultiplyDefined1" xml:space="preserve">
    <value>Label '{0}' is already defined in the current method.</value>
  </data>
  <data name="ERR_ExpectedEndSelect" xml:space="preserve">
    <value>'Select Case' must end with a matching 'End Select'.</value>
  </data>
  <data name="ERR_ExitForNotWithinFor" xml:space="preserve">
    <value>'Exit For' can only appear inside a 'For' statement.</value>
  </data>
  <data name="ERR_ExitWhileNotWithinWhile" xml:space="preserve">
    <value>'Exit While' can only appear inside a 'While' statement.</value>
  </data>
  <data name="ERR_ReadOnlyProperty1" xml:space="preserve">
    <value>'ReadOnly' property '{0}' cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_ExitSelectNotWithinSelect" xml:space="preserve">
    <value>'Exit Select' can only appear inside a 'Select' statement.</value>
  </data>
  <data name="ERR_BranchOutOfFinally" xml:space="preserve">
    <value>Branching out of a 'Finally' is not valid.</value>
  </data>
  <data name="ERR_QualNotObjectRecord1" xml:space="preserve">
    <value>'!' requires its left operand to have a type parameter, class or interface type, but this operand has the type '{0}'.</value>
  </data>
  <data name="ERR_TooFewIndices" xml:space="preserve">
    <value>Number of indices is less than the number of dimensions of the indexed array.</value>
  </data>
  <data name="ERR_TooManyIndices" xml:space="preserve">
    <value>Number of indices exceeds the number of dimensions of the indexed array.</value>
  </data>
  <data name="ERR_EnumNotExpression1" xml:space="preserve">
    <value>'{0}' is an Enum type and cannot be used as an expression.</value>
  </data>
  <data name="ERR_TypeNotExpression1" xml:space="preserve">
    <value>'{0}' is a type and cannot be used as an expression.</value>
  </data>
  <data name="ERR_ClassNotExpression1" xml:space="preserve">
    <value>'{0}' is a class type and cannot be used as an expression.</value>
  </data>
  <data name="ERR_StructureNotExpression1" xml:space="preserve">
    <value>'{0}' is a structure type and cannot be used as an expression.</value>
  </data>
  <data name="ERR_InterfaceNotExpression1" xml:space="preserve">
    <value>'{0}' is an interface type and cannot be used as an expression.</value>
  </data>
  <data name="ERR_NamespaceNotExpression1" xml:space="preserve">
    <value>'{0}' is a namespace and cannot be used as an expression.</value>
  </data>
  <data name="ERR_BadNamespaceName1" xml:space="preserve">
    <value>'{0}' is not a valid name and cannot be used as the root namespace name.</value>
  </data>
  <data name="ERR_XmlPrefixNotExpression" xml:space="preserve">
    <value>'{0}' is an XML prefix and cannot be used as an expression.  Use the GetXmlNamespace operator to create a namespace object.</value>
  </data>
  <data name="ERR_MultipleExtends" xml:space="preserve">
    <value>'Inherits' can appear only once within a 'Class' statement and can only specify one class.</value>
  </data>
  <data name="ERR_PropMustHaveGetSet" xml:space="preserve">
    <value>Property without a 'ReadOnly' or 'WriteOnly' specifier must provide both a 'Get' and a 'Set'.</value>
  </data>
  <data name="ERR_WriteOnlyHasNoWrite" xml:space="preserve">
    <value>'WriteOnly' property must provide a 'Set'.</value>
  </data>
  <data name="ERR_ReadOnlyHasNoGet" xml:space="preserve">
    <value>'ReadOnly' property must provide a 'Get'.</value>
  </data>
  <data name="ERR_BadAttribute1" xml:space="preserve">
    <value>Attribute '{0}' is not valid: Incorrect argument value.</value>
  </data>
  <data name="ERR_LabelNotDefined1" xml:space="preserve">
    <value>Label '{0}' is not defined.</value>
  </data>
  <data name="ERR_ErrorCreatingWin32ResourceFile" xml:space="preserve">
    <value>Error creating Win32 resources: {0}</value>
  </data>
  <data name="ERR_UnableToCreateTempFile" xml:space="preserve">
    <value>Cannot create temporary file: {0}</value>
  </data>
  <data name="ERR_RequiredNewCall2" xml:space="preserve">
    <value>First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</value>
  </data>
  <data name="ERR_UnimplementedMember3" xml:space="preserve">
    <value>{0} '{1}' must implement '{2}' for interface '{3}'.</value>
  </data>
  <data name="ERR_BadWithRef" xml:space="preserve">
    <value>Leading '.' or '!' can only appear inside a 'With' statement.</value>
  </data>
  <data name="ERR_DuplicateAccessCategoryUsed" xml:space="preserve">
    <value>Only one of 'Public', 'Private', 'Protected', 'Friend', or 'Protected Friend' can be specified.</value>
  </data>
  <data name="ERR_DuplicateModifierCategoryUsed" xml:space="preserve">
    <value>Only one of 'NotOverridable', 'MustOverride', or 'Overridable' can be specified.</value>
  </data>
  <data name="ERR_DuplicateSpecifier" xml:space="preserve">
    <value>Specifier is duplicated.</value>
  </data>
  <data name="ERR_TypeConflict6" xml:space="preserve">
    <value>{0} '{1}' and {2} '{3}' conflict in {4} '{5}'.</value>
  </data>
  <data name="ERR_UnrecognizedTypeKeyword" xml:space="preserve">
    <value>Keyword does not name a type.</value>
  </data>
  <data name="ERR_ExtraSpecifiers" xml:space="preserve">
    <value>Specifiers valid only at the beginning of a declaration.</value>
  </data>
  <data name="ERR_UnrecognizedType" xml:space="preserve">
    <value>Type expected.</value>
  </data>
  <data name="ERR_InvalidUseOfKeyword" xml:space="preserve">
    <value>Keyword is not valid as an identifier.</value>
  </data>
  <data name="ERR_InvalidEndEnum" xml:space="preserve">
    <value>'End Enum' must be preceded by a matching 'Enum'.</value>
  </data>
  <data name="ERR_MissingEndEnum" xml:space="preserve">
    <value>'Enum' must end with a matching 'End Enum'.</value>
  </data>
  <data name="ERR_ExpectedDeclaration" xml:space="preserve">
    <value>Declaration expected.</value>
  </data>
  <data name="ERR_ParamArrayMustBeLast" xml:space="preserve">
    <value>End of parameter list expected. Cannot define parameters after a paramarray parameter.</value>
  </data>
  <data name="ERR_SpecifiersInvalidOnInheritsImplOpt" xml:space="preserve">
    <value>Specifiers and attributes are not valid on this statement.</value>
  </data>
  <data name="ERR_ExpectedSpecifier" xml:space="preserve">
    <value>Expected one of 'Dim', 'Const', 'Public', 'Private', 'Protected', 'Friend', 'Shadows', 'ReadOnly' or 'Shared'.</value>
  </data>
  <data name="ERR_ExpectedComma" xml:space="preserve">
    <value>Comma expected.</value>
  </data>
  <data name="ERR_ExpectedAs" xml:space="preserve">
    <value>'As' expected.</value>
  </data>
  <data name="ERR_ExpectedRparen" xml:space="preserve">
    <value>')' expected.</value>
  </data>
  <data name="ERR_ExpectedLparen" xml:space="preserve">
    <value>'(' expected.</value>
  </data>
  <data name="ERR_InvalidNewInType" xml:space="preserve">
    <value>'New' is not valid in this context.</value>
  </data>
  <data name="ERR_ExpectedExpression" xml:space="preserve">
    <value>Expression expected.</value>
  </data>
  <data name="ERR_ExpectedOptional" xml:space="preserve">
    <value>'Optional' expected.</value>
  </data>
  <data name="ERR_ExpectedIdentifier" xml:space="preserve">
    <value>Identifier expected.</value>
  </data>
  <data name="ERR_ExpectedIntLiteral" xml:space="preserve">
    <value>Integer constant expected.</value>
  </data>
  <data name="ERR_ExpectedEOS" xml:space="preserve">
    <value>End of statement expected.</value>
  </data>
  <data name="ERR_ExpectedForOptionStmt" xml:space="preserve">
    <value>'Option' must be followed by 'Compare', 'Explicit', 'Infer', or 'Strict'.</value>
  </data>
  <data name="ERR_InvalidOptionCompare" xml:space="preserve">
    <value>'Option Compare' must be followed by 'Text' or 'Binary'.</value>
  </data>
  <data name="ERR_ExpectedOptionCompare" xml:space="preserve">
    <value>'Compare' expected.</value>
  </data>
  <data name="ERR_StrictDisallowImplicitObject" xml:space="preserve">
    <value>Option Strict On requires all variable declarations to have an 'As' clause.</value>
  </data>
  <data name="ERR_StrictDisallowsImplicitProc" xml:space="preserve">
    <value>Option Strict On requires all Function, Property, and Operator declarations to have an 'As' clause.</value>
  </data>
  <data name="ERR_StrictDisallowsImplicitArgs" xml:space="preserve">
    <value>Option Strict On requires that all method parameters have an 'As' clause.</value>
  </data>
  <data name="ERR_InvalidParameterSyntax" xml:space="preserve">
    <value>Comma or ')' expected.</value>
  </data>
  <data name="ERR_ExpectedSubFunction" xml:space="preserve">
    <value>'Sub' or 'Function' expected.</value>
  </data>
  <data name="ERR_ExpectedStringLiteral" xml:space="preserve">
    <value>String constant expected.</value>
  </data>
  <data name="ERR_MissingLibInDeclare" xml:space="preserve">
    <value>'Lib' expected.</value>
  </data>
  <data name="ERR_DelegateNoInvoke1" xml:space="preserve">
    <value>Delegate class '{0}' has no Invoke method, so an expression of this type cannot be the target of a method call.</value>
  </data>
  <data name="ERR_MissingIsInTypeOf" xml:space="preserve">
    <value>'Is' expected.</value>
  </data>
  <data name="ERR_DuplicateOption1" xml:space="preserve">
    <value>'Option {0}' statement can only appear once per file.</value>
  </data>
  <data name="ERR_ModuleCantInherit" xml:space="preserve">
    <value>'Inherits' not valid in Modules.</value>
  </data>
  <data name="ERR_ModuleCantImplement" xml:space="preserve">
    <value>'Implements' not valid in Modules.</value>
  </data>
  <data name="ERR_BadImplementsType" xml:space="preserve">
    <value>Implemented type must be an interface.</value>
  </data>
  <data name="ERR_BadConstFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a constant declaration.</value>
  </data>
  <data name="ERR_BadWithEventsFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a WithEvents declaration.</value>
  </data>
  <data name="ERR_BadDimFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a member variable declaration.</value>
  </data>
  <data name="ERR_DuplicateParamName1" xml:space="preserve">
    <value>Parameter already declared with name '{0}'.</value>
  </data>
  <data name="ERR_LoopDoubleCondition" xml:space="preserve">
    <value>'Loop' cannot have a condition if matching 'Do' has one.</value>
  </data>
  <data name="ERR_ExpectedRelational" xml:space="preserve">
    <value>Relational operator expected.</value>
  </data>
  <data name="ERR_ExpectedExitKind" xml:space="preserve">
    <value>'Exit' must be followed by 'Sub', 'Function', 'Property', 'Do', 'For', 'While', 'Select', or 'Try'.</value>
  </data>
  <data name="ERR_ExpectedNamedArgument" xml:space="preserve">
    <value>Named argument expected.</value>
  </data>
  <data name="ERR_BadMethodFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a method declaration.</value>
  </data>
  <data name="ERR_BadEventFlags1" xml:space="preserve">
    <value>'{0}' is not valid on an event declaration.</value>
  </data>
  <data name="ERR_BadDeclareFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a Declare.</value>
  </data>
  <data name="ERR_BadLocalConstFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a local constant declaration.</value>
  </data>
  <data name="ERR_BadLocalDimFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a local variable declaration.</value>
  </data>
  <data name="ERR_ExpectedConditionalDirective" xml:space="preserve">
    <value>'If', 'ElseIf', 'Else', 'Const', 'Region', 'ExternalSource', 'ExternalChecksum', 'Enable', 'Disable', or 'End' expected.</value>
  </data>
  <data name="ERR_ExpectedEQ" xml:space="preserve">
    <value>'=' expected.</value>
  </data>
  <data name="ERR_ConstructorNotFound1" xml:space="preserve">
    <value>Type '{0}' has no constructors.</value>
  </data>
  <data name="ERR_InvalidEndInterface" xml:space="preserve">
    <value>'End Interface' must be preceded by a matching 'Interface'.</value>
  </data>
  <data name="ERR_MissingEndInterface" xml:space="preserve">
    <value>'Interface' must end with a matching 'End Interface'.</value>
  </data>
  <data name="ERR_InheritsFrom2" xml:space="preserve">
    <value>
    '{0}' inherits from '{1}'.</value>
  </data>
  <data name="ERR_IsNestedIn2" xml:space="preserve">
    <value>
    '{0}' is nested in '{1}'.</value>
  </data>
  <data name="ERR_InheritanceCycle1" xml:space="preserve">
    <value>Class '{0}' cannot inherit from itself: {1}</value>
  </data>
  <data name="ERR_InheritsFromNonClass" xml:space="preserve">
    <value>Classes can inherit only from other classes.</value>
  </data>
  <data name="ERR_MultiplyDefinedType3" xml:space="preserve">
    <value>'{0}' is already declared as '{1}' in this {2}.</value>
  </data>
  <data name="ERR_BadOverrideAccess2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they have different access levels.</value>
  </data>
  <data name="ERR_CantOverrideNotOverridable2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because it is declared 'NotOverridable'.</value>
  </data>
  <data name="ERR_DuplicateProcDef1" xml:space="preserve">
    <value>'{0}' has multiple definitions with identical signatures.</value>
  </data>
  <data name="ERR_BadInterfaceMethodFlags1" xml:space="preserve">
    <value>'{0}' is not valid on an interface method declaration.</value>
  </data>
  <data name="ERR_NamedParamNotFound2" xml:space="preserve">
    <value>'{0}' is not a parameter of '{1}'.</value>
  </data>
  <data name="ERR_BadInterfacePropertyFlags1" xml:space="preserve">
    <value>'{0}' is not valid on an interface property declaration.</value>
  </data>
  <data name="ERR_NamedArgUsedTwice2" xml:space="preserve">
    <value>Parameter '{0}' of '{1}' already has a matching argument.</value>
  </data>
  <data name="ERR_InterfaceCantUseEventSpecifier1" xml:space="preserve">
    <value>'{0}' is not valid on an interface event declaration.</value>
  </data>
  <data name="ERR_TypecharNoMatch2" xml:space="preserve">
    <value>Type character '{0}' does not match declared data type '{1}'.</value>
  </data>
  <data name="ERR_ExpectedSubOrFunction" xml:space="preserve">
    <value>'Sub' or 'Function' expected after 'Delegate'.</value>
  </data>
  <data name="ERR_BadEmptyEnum1" xml:space="preserve">
    <value>Enum '{0}' must contain at least one member.</value>
  </data>
  <data name="ERR_InvalidConstructorCall" xml:space="preserve">
    <value>Constructor call is valid only as the first statement in an instance constructor.</value>
  </data>
  <data name="ERR_CantOverrideConstructor" xml:space="preserve">
    <value>'Sub New' cannot be declared 'Overrides'.</value>
  </data>
  <data name="ERR_ConstructorCannotBeDeclaredPartial" xml:space="preserve">
    <value>'Sub New' cannot be declared 'Partial'.</value>
  </data>
  <data name="ERR_ModuleEmitFailure" xml:space="preserve">
    <value>Failed to emit module '{0}'.</value>
  </data>
  <data name="ERR_OverrideNotNeeded3" xml:space="preserve">
    <value>{0} '{1}' cannot be declared 'Overrides' because it does not override a {0} in a base class.</value>
  </data>
  <data name="ERR_ExpectedDot" xml:space="preserve">
    <value>'.' expected.</value>
  </data>
  <data name="ERR_DuplicateLocals1" xml:space="preserve">
    <value>Local variable '{0}' is already declared in the current block.</value>
  </data>
  <data name="ERR_InvInsideEndsProc" xml:space="preserve">
    <value>Statement cannot appear within a method body. End of method assumed.</value>
  </data>
  <data name="ERR_LocalSameAsFunc" xml:space="preserve">
    <value>Local variable cannot have the same name as the function containing it.</value>
  </data>
  <data name="ERR_RecordEmbeds2" xml:space="preserve">
    <value>
    '{0}' contains '{1}' (variable '{2}').</value>
  </data>
  <data name="ERR_RecordCycle2" xml:space="preserve">
    <value>Structure '{0}' cannot contain an instance of itself: {1}</value>
  </data>
  <data name="ERR_InterfaceCycle1" xml:space="preserve">
    <value>Interface '{0}' cannot inherit from itself: {1}</value>
  </data>
  <data name="ERR_SubNewCycle2" xml:space="preserve">
    <value>
    '{0}' calls '{1}'.</value>
  </data>
  <data name="ERR_SubNewCycle1" xml:space="preserve">
    <value>Constructor '{0}' cannot call itself: {1}</value>
  </data>
  <data name="ERR_InheritsFromCantInherit3" xml:space="preserve">
    <value>'{0}' cannot inherit from {2} '{1}' because '{1}' is declared 'NotInheritable'.</value>
  </data>
  <data name="ERR_OverloadWithOptional2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by optional parameters.</value>
  </data>
  <data name="ERR_OverloadWithReturnType2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by return types.</value>
  </data>
  <data name="ERR_TypeCharWithType1" xml:space="preserve">
    <value>Type character '{0}' cannot be used in a declaration with an explicit type.</value>
  </data>
  <data name="ERR_TypeCharOnSub" xml:space="preserve">
    <value>Type character cannot be used in a 'Sub' declaration because a 'Sub' doesn't return a value.</value>
  </data>
  <data name="ERR_OverloadWithDefault2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by the default values of optional parameters.</value>
  </data>
  <data name="ERR_MissingSubscript" xml:space="preserve">
    <value>Array subscript expression missing.</value>
  </data>
  <data name="ERR_OverrideWithDefault2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by the default values of optional parameters.</value>
  </data>
  <data name="ERR_OverrideWithOptional2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by optional parameters.</value>
  </data>
  <data name="ERR_FieldOfValueFieldOfMarshalByRef3" xml:space="preserve">
    <value>Cannot refer to '{0}' because it is a member of the value-typed field '{1}' of class '{2}' which has 'System.MarshalByRefObject' as a base class.</value>
  </data>
  <data name="ERR_TypeMismatch2" xml:space="preserve">
    <value>Value of type '{0}' cannot be converted to '{1}'.</value>
  </data>
  <data name="ERR_CaseAfterCaseElse" xml:space="preserve">
    <value>'Case' cannot follow a 'Case Else' in the same 'Select' statement.</value>
  </data>
  <data name="ERR_ConvertArrayMismatch4" xml:space="preserve">
    <value>Value of type '{0}' cannot be converted to '{1}' because '{2}' is not derived from '{3}'.</value>
  </data>
  <data name="ERR_ConvertObjectArrayMismatch3" xml:space="preserve">
    <value>Value of type '{0}' cannot be converted to '{1}' because '{2}' is not a reference type.</value>
  </data>
  <data name="ERR_ForLoopType1" xml:space="preserve">
    <value>'For' loop control variable cannot be of type '{0}' because the type does not support the required operators.</value>
  </data>
  <data name="ERR_OverloadWithByref2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ByRef' or 'ByVal'.</value>
  </data>
  <data name="ERR_InheritsFromNonInterface" xml:space="preserve">
    <value>Interface can inherit only from another interface.</value>
  </data>
  <data name="ERR_BadInterfaceOrderOnInherits" xml:space="preserve">
    <value>'Inherits' statements must precede all declarations in an interface.</value>
  </data>
  <data name="ERR_DuplicateDefaultProps1" xml:space="preserve">
    <value>'Default' can be applied to only one property name in a {0}.</value>
  </data>
  <data name="ERR_DefaultMissingFromProperty2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because only one is declared 'Default'.</value>
  </data>
  <data name="ERR_OverridingPropertyKind2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by 'ReadOnly' or 'WriteOnly'.</value>
  </data>
  <data name="ERR_NewInInterface" xml:space="preserve">
    <value>'Sub New' cannot be declared in an interface.</value>
  </data>
  <data name="ERR_BadFlagsOnNew1" xml:space="preserve">
    <value>'Sub New' cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_OverloadingPropertyKind2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by 'ReadOnly' or 'WriteOnly'.</value>
  </data>
  <data name="ERR_NoDefaultNotExtend1" xml:space="preserve">
    <value>Class '{0}' cannot be indexed because it has no default property.</value>
  </data>
  <data name="ERR_OverloadWithArrayVsParamArray2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ParamArray'.</value>
  </data>
  <data name="ERR_BadInstanceMemberAccess" xml:space="preserve">
    <value>Cannot refer to an instance member of a class from within a shared method or shared member initializer without an explicit instance of the class.</value>
  </data>
  <data name="ERR_ExpectedRbrace" xml:space="preserve">
    <value>'}' expected.</value>
  </data>
  <data name="ERR_ModuleAsType1" xml:space="preserve">
    <value>Module '{0}' cannot be used as a type.</value>
  </data>
  <data name="ERR_NewIfNullOnNonClass" xml:space="preserve">
    <value>'New' cannot be used on an interface.</value>
  </data>
  <data name="ERR_CatchAfterFinally" xml:space="preserve">
    <value>'Catch' cannot appear after 'Finally' within a 'Try' statement.</value>
  </data>
  <data name="ERR_CatchNoMatchingTry" xml:space="preserve">
    <value>'Catch' cannot appear outside a 'Try' statement.</value>
  </data>
  <data name="ERR_FinallyAfterFinally" xml:space="preserve">
    <value>'Finally' can only appear once in a 'Try' statement.</value>
  </data>
  <data name="ERR_FinallyNoMatchingTry" xml:space="preserve">
    <value>'Finally' cannot appear outside a 'Try' statement.</value>
  </data>
  <data name="ERR_EndTryNoTry" xml:space="preserve">
    <value>'End Try' must be preceded by a matching 'Try'.</value>
  </data>
  <data name="ERR_ExpectedEndTry" xml:space="preserve">
    <value>'Try' must end with a matching 'End Try'.</value>
  </data>
  <data name="ERR_BadDelegateFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a Delegate declaration.</value>
  </data>
  <data name="ERR_NoConstructorOnBase2" xml:space="preserve">
    <value>Class '{0}' must declare a 'Sub New' because its base class '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</value>
  </data>
  <data name="ERR_InaccessibleSymbol2" xml:space="preserve">
    <value>'{0}' is not accessible in this context because it is '{1}'.</value>
  </data>
  <data name="ERR_InaccessibleMember3" xml:space="preserve">
    <value>'{0}.{1}' is not accessible in this context because it is '{2}'.</value>
  </data>
  <data name="ERR_CatchNotException1" xml:space="preserve">
    <value>'Catch' cannot catch type '{0}' because it is not 'System.Exception' or a class that inherits from 'System.Exception'.</value>
  </data>
  <data name="ERR_ExitTryNotWithinTry" xml:space="preserve">
    <value>'Exit Try' can only appear inside a 'Try' statement.</value>
  </data>
  <data name="ERR_BadRecordFlags1" xml:space="preserve">
    <value>'{0}' is not valid on a Structure declaration.</value>
  </data>
  <data name="ERR_BadEnumFlags1" xml:space="preserve">
    <value>'{0}' is not valid on an Enum declaration.</value>
  </data>
  <data name="ERR_BadInterfaceFlags1" xml:space="preserve">
    <value>'{0}' is not valid on an Interface declaration.</value>
  </data>
  <data name="ERR_OverrideWithByref2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by a parameter that is marked as 'ByRef' versus 'ByVal'.</value>
  </data>
  <data name="ERR_MyBaseAbstractCall1" xml:space="preserve">
    <value>'MyBase' cannot be used with method '{0}' because it is declared 'MustOverride'.</value>
  </data>
  <data name="ERR_IdentNotMemberOfInterface4" xml:space="preserve">
    <value>'{0}' cannot implement '{1}' because there is no matching {2} on interface '{3}'.</value>
  </data>
  <data name="ERR_WithEventsRequiresClass" xml:space="preserve">
    <value>'WithEvents' variables must have an 'As' clause.</value>
  </data>
  <data name="ERR_WithEventsAsStruct" xml:space="preserve">
    <value>'WithEvents' variables can only be typed as classes, interfaces or type parameters with class constraints.</value>
  </data>
  <data name="ERR_ConvertArrayRankMismatch2" xml:space="preserve">
    <value>Value of type '{0}' cannot be converted to '{1}' because the array types have different numbers of dimensions.</value>
  </data>
  <data name="ERR_RedimRankMismatch" xml:space="preserve">
    <value>'ReDim' cannot change the number of dimensions of an array.</value>
  </data>
  <data name="ERR_StartupCodeNotFound1" xml:space="preserve">
    <value>'Sub Main' was not found in '{0}'.</value>
  </data>
  <data name="ERR_ConstAsNonConstant" xml:space="preserve">
    <value>Constants must be of an intrinsic or enumerated type, not a class, structure, type parameter, or array type.</value>
  </data>
  <data name="ERR_InvalidEndSub" xml:space="preserve">
    <value>'End Sub' must be preceded by a matching 'Sub'.</value>
  </data>
  <data name="ERR_InvalidEndFunction" xml:space="preserve">
    <value>'End Function' must be preceded by a matching 'Function'.</value>
  </data>
  <data name="ERR_InvalidEndProperty" xml:space="preserve">
    <value>'End Property' must be preceded by a matching 'Property'.</value>
  </data>
  <data name="ERR_ModuleCantUseMethodSpecifier1" xml:space="preserve">
    <value>Methods in a Module cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_ModuleCantUseEventSpecifier1" xml:space="preserve">
    <value>Events in a Module cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_StructCantUseVarSpecifier1" xml:space="preserve">
    <value>Members in a Structure cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_InvalidOverrideDueToReturn2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by their return types.</value>
  </data>
  <data name="ERR_ConstantWithNoValue" xml:space="preserve">
    <value>Constants must have a value.</value>
  </data>
  <data name="ERR_ExpressionOverflow1" xml:space="preserve">
    <value>Constant expression not representable in type '{0}'.</value>
  </data>
  <data name="ERR_DuplicatePropertyGet" xml:space="preserve">
    <value>'Get' is already declared.</value>
  </data>
  <data name="ERR_DuplicatePropertySet" xml:space="preserve">
    <value>'Set' is already declared.</value>
  </data>
  <data name="ERR_NameNotDeclared1" xml:space="preserve">
    <value>'{0}' is not declared. It may be inaccessible due to its protection level.</value>
  </data>
  <data name="ERR_BinaryOperands3" xml:space="preserve">
    <value>Operator '{0}' is not defined for types '{1}' and '{2}'.</value>
  </data>
  <data name="ERR_ExpectedProcedure" xml:space="preserve">
    <value>Expression is not a method.</value>
  </data>
  <data name="ERR_OmittedArgument2" xml:space="preserve">
    <value>Argument not specified for parameter '{0}' of '{1}'.</value>
  </data>
  <data name="ERR_NameNotMember2" xml:space="preserve">
    <value>'{0}' is not a member of '{1}'.</value>
  </data>
  <data name="ERR_EndClassNoClass" xml:space="preserve">
    <value>'End Class' must be preceded by a matching 'Class'.</value>
  </data>
  <data name="ERR_BadClassFlags1" xml:space="preserve">
    <value>Classes cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_ImportsMustBeFirst" xml:space="preserve">
    <value>'Imports' statements must precede any declarations.</value>
  </data>
  <data name="ERR_NonNamespaceOrClassOnImport2" xml:space="preserve">
    <value>'{1}' for the Imports '{0}' does not refer to a Namespace, Class, Structure, Enum or Module.</value>
  </data>
  <data name="ERR_TypecharNotallowed" xml:space="preserve">
    <value>Type declaration characters are not valid in this context.</value>
  </data>
  <data name="ERR_ObjectReferenceNotSupplied" xml:space="preserve">
    <value>Reference to a non-shared member requires an object reference.</value>
  </data>
  <data name="ERR_MyClassNotInClass" xml:space="preserve">
    <value>'MyClass' cannot be used outside of a class.</value>
  </data>
  <data name="ERR_IndexedNotArrayOrProc" xml:space="preserve">
    <value>Expression is not an array or a method, and cannot have an argument list.</value>
  </data>
  <data name="ERR_EventSourceIsArray" xml:space="preserve">
    <value>'WithEvents' variables cannot be typed as arrays.</value>
  </data>
  <data name="ERR_SharedConstructorWithParams" xml:space="preserve">
    <value>Shared 'Sub New' cannot have any parameters.</value>
  </data>
  <data name="ERR_SharedConstructorIllegalSpec1" xml:space="preserve">
    <value>Shared 'Sub New' cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_ExpectedEndClass" xml:space="preserve">
    <value>'Class' statement must end with a matching 'End Class'.</value>
  </data>
  <data name="ERR_UnaryOperand2" xml:space="preserve">
    <value>Operator '{0}' is not defined for type '{1}'.</value>
  </data>
  <data name="ERR_BadFlagsWithDefault1" xml:space="preserve">
    <value>'Default' cannot be combined with '{0}'.</value>
  </data>
  <data name="ERR_VoidValue" xml:space="preserve">
    <value>Expression does not produce a value.</value>
  </data>
  <data name="ERR_ConstructorFunction" xml:space="preserve">
    <value>Constructor must be declared as a Sub, not as a Function.</value>
  </data>
  <data name="ERR_InvalidLiteralExponent" xml:space="preserve">
    <value>Exponent is not valid.</value>
  </data>
  <data name="ERR_NewCannotHandleEvents" xml:space="preserve">
    <value>'Sub New' cannot handle events.</value>
  </data>
  <data name="ERR_CircularEvaluation1" xml:space="preserve">
    <value>Constant '{0}' cannot depend on its own value.</value>
  </data>
  <data name="ERR_BadFlagsOnSharedMeth1" xml:space="preserve">
    <value>'Shared' cannot be combined with '{0}' on a method declaration.</value>
  </data>
  <data name="ERR_BadFlagsOnSharedProperty1" xml:space="preserve">
    <value>'Shared' cannot be combined with '{0}' on a property declaration.</value>
  </data>
  <data name="ERR_BadFlagsOnStdModuleProperty1" xml:space="preserve">
    <value>Properties in a Module cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_SharedOnProcThatImpl" xml:space="preserve">
    <value>Methods or events that implement interface members cannot be declared 'Shared'.</value>
  </data>
  <data name="ERR_NoWithEventsVarOnHandlesList" xml:space="preserve">
    <value>Handles clause requires a WithEvents variable defined in the containing type or one of its base types.</value>
  </data>
  <data name="ERR_InheritanceAccessMismatch5" xml:space="preserve">
    <value>'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} to {3} '{4}'.</value>
  </data>
  <data name="ERR_NarrowingConversionDisallowed2" xml:space="preserve">
    <value>Option Strict On disallows implicit conversions from '{0}' to '{1}'.</value>
  </data>
  <data name="ERR_NoArgumentCountOverloadCandidates1" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' accepts this number of arguments.</value>
  </data>
  <data name="ERR_NoViableOverloadCandidates1" xml:space="preserve">
    <value>Overload resolution failed because no '{0}' is accessible.</value>
  </data>
  <data name="ERR_NoCallableOverloadCandidates2" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' can be called with these arguments:{1}</value>
  </data>
  <data name="ERR_BadOverloadCandidates2" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' can be called:{1}</value>
  </data>
  <data name="ERR_NoNonNarrowingOverloadCandidates2" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' can be called without a narrowing conversion:{1}</value>
  </data>
  <data name="ERR_ArgumentNarrowing3" xml:space="preserve">
    <value>Argument matching parameter '{0}' narrows from '{1}' to '{2}'.</value>
  </data>
  <data name="ERR_NoMostSpecificOverload2" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' is most specific for these arguments:{1}</value>
  </data>
  <data name="ERR_NotMostSpecificOverload" xml:space="preserve">
    <value>Not most specific.</value>
  </data>
  <data name="ERR_OverloadCandidate2" xml:space="preserve">
    <value>
    '{0}': {1}</value>
  </data>
  <data name="ERR_NoGetProperty1" xml:space="preserve">
    <value>Property '{0}' is 'WriteOnly'.</value>
  </data>
  <data name="ERR_NoSetProperty1" xml:space="preserve">
    <value>Property '{0}' is 'ReadOnly'.</value>
  </data>
  <data name="ERR_ParamTypingInconsistency" xml:space="preserve">
    <value>All parameters must be explicitly typed if any of them are explicitly typed.</value>
  </data>
  <data name="ERR_ParamNameFunctionNameCollision" xml:space="preserve">
    <value>Parameter cannot have the same name as its defining function.</value>
  </data>
  <data name="ERR_DateToDoubleConversion" xml:space="preserve">
    <value>Conversion from 'Date' to 'Double' requires calling the 'Date.ToOADate' method.</value>
  </data>
  <data name="ERR_DoubleToDateConversion" xml:space="preserve">
    <value>Conversion from 'Double' to 'Date' requires calling the 'Date.FromOADate' method.</value>
  </data>
  <data name="ERR_ZeroDivide" xml:space="preserve">
    <value>Division by zero occurred while evaluating this expression.</value>
  </data>
  <data name="ERR_TryAndOnErrorDoNotMix" xml:space="preserve">
    <value>Method cannot contain both a 'Try' statement and an 'On Error' or 'Resume' statement.</value>
  </data>
  <data name="ERR_PropertyAccessIgnored" xml:space="preserve">
    <value>Property access must assign to the property or use its value.</value>
  </data>
  <data name="ERR_InterfaceNoDefault1" xml:space="preserve">
    <value>'{0}' cannot be indexed because it has no default property.</value>
  </data>
  <data name="ERR_InvalidAssemblyAttribute1" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied to an assembly.</value>
  </data>
  <data name="ERR_InvalidModuleAttribute1" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied to a module.</value>
  </data>
  <data name="ERR_AmbiguousInUnnamedNamespace1" xml:space="preserve">
    <value>'{0}' is ambiguous.</value>
  </data>
  <data name="ERR_DefaultMemberNotProperty1" xml:space="preserve">
    <value>Default member of '{0}' is not a property.</value>
  </data>
  <data name="ERR_AmbiguousInNamespace2" xml:space="preserve">
    <value>'{0}' is ambiguous in the namespace '{1}'.</value>
  </data>
  <data name="ERR_AmbiguousInImports2" xml:space="preserve">
    <value>'{0}' is ambiguous, imported from the namespaces or types '{1}'.</value>
  </data>
  <data name="ERR_AmbiguousInModules2" xml:space="preserve">
    <value>'{0}' is ambiguous between declarations in Modules '{1}'.</value>
  </data>
  <data name="ERR_AmbiguousInNamespaces2" xml:space="preserve">
    <value>'{0}' is ambiguous between declarations in namespaces '{1}'.</value>
  </data>
  <data name="ERR_ArrayInitializerTooFewDimensions" xml:space="preserve">
    <value>Array initializer has too few dimensions.</value>
  </data>
  <data name="ERR_ArrayInitializerTooManyDimensions" xml:space="preserve">
    <value>Array initializer has too many dimensions.</value>
  </data>
  <data name="ERR_InitializerTooFewElements1" xml:space="preserve">
    <value>Array initializer is missing {0} elements.</value>
  </data>
  <data name="ERR_InitializerTooManyElements1" xml:space="preserve">
    <value>Array initializer has {0} too many elements.</value>
  </data>
  <data name="ERR_NewOnAbstractClass" xml:space="preserve">
    <value>'New' cannot be used on a class that is declared 'MustInherit'.</value>
  </data>
  <data name="ERR_DuplicateNamedImportAlias1" xml:space="preserve">
    <value>Alias '{0}' is already declared.</value>
  </data>
  <data name="ERR_DuplicatePrefix" xml:space="preserve">
    <value>XML namespace prefix '{0}' is already declared.</value>
  </data>
  <data name="ERR_StrictDisallowsLateBinding" xml:space="preserve">
    <value>Option Strict On disallows late binding.</value>
  </data>
  <data name="ERR_AddressOfOperandNotMethod" xml:space="preserve">
    <value>'AddressOf' operand must be the name of a method (without parentheses).</value>
  </data>
  <data name="ERR_EndExternalSource" xml:space="preserve">
    <value>'#End ExternalSource' must be preceded by a matching '#ExternalSource'.</value>
  </data>
  <data name="ERR_ExpectedEndExternalSource" xml:space="preserve">
    <value>'#ExternalSource' statement must end with a matching '#End ExternalSource'.</value>
  </data>
  <data name="ERR_NestedExternalSource" xml:space="preserve">
    <value>'#ExternalSource' directives cannot be nested.</value>
  </data>
  <data name="ERR_AddressOfNotDelegate1" xml:space="preserve">
    <value>'AddressOf' expression cannot be converted to '{0}' because '{0}' is not a delegate type.</value>
  </data>
  <data name="ERR_SyncLockRequiresReferenceType1" xml:space="preserve">
    <value>'SyncLock' operand cannot be of type '{0}' because '{0}' is not a reference type.</value>
  </data>
  <data name="ERR_MethodAlreadyImplemented2" xml:space="preserve">
    <value>'{0}.{1}' cannot be implemented more than once.</value>
  </data>
  <data name="ERR_DuplicateInInherits1" xml:space="preserve">
    <value>'{0}' cannot be inherited more than once.</value>
  </data>
  <data name="ERR_NamedParamArrayArgument" xml:space="preserve">
    <value>Named argument cannot match a ParamArray parameter.</value>
  </data>
  <data name="ERR_OmittedParamArrayArgument" xml:space="preserve">
    <value>Omitted argument cannot match a ParamArray parameter.</value>
  </data>
  <data name="ERR_ParamArrayArgumentMismatch" xml:space="preserve">
    <value>Argument cannot match a ParamArray parameter.</value>
  </data>
  <data name="ERR_EventNotFound1" xml:space="preserve">
    <value>Event '{0}' cannot be found.</value>
  </data>
  <data name="ERR_ModuleCantUseVariableSpecifier1" xml:space="preserve">
    <value>Variables in Modules cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_SharedEventNeedsSharedHandler" xml:space="preserve">
    <value>Events of shared WithEvents variables cannot be handled by non-shared methods.</value>
  </data>
  <data name="ERR_ExpectedMinus" xml:space="preserve">
    <value>'-' expected.</value>
  </data>
  <data name="ERR_InterfaceMemberSyntax" xml:space="preserve">
    <value>Interface members must be methods, properties, events, or type definitions.</value>
  </data>
  <data name="ERR_InvInsideInterface" xml:space="preserve">
    <value>Statement cannot appear within an interface body.</value>
  </data>
  <data name="ERR_InvInsideEndsInterface" xml:space="preserve">
    <value>Statement cannot appear within an interface body. End of interface assumed.</value>
  </data>
  <data name="ERR_BadFlagsInNotInheritableClass1" xml:space="preserve">
    <value>'NotInheritable' classes cannot have members declared '{0}'.</value>
  </data>
  <data name="ERR_BaseOnlyClassesMustBeExplicit2" xml:space="preserve">
    <value>Class '{0}' must either be declared 'MustInherit' or override the following inherited 'MustOverride' member(s): {1}.</value>
  </data>
  <data name="ERR_MustInheritEventNotOverridden" xml:space="preserve">
    <value>'{0}' is a MustOverride event in the base class '{1}'. Visual Basic does not support event overriding. You must either provide an implementation for the event in the base class, or make class '{2}' MustInherit.</value>
  </data>
  <data name="ERR_NegativeArraySize" xml:space="preserve">
    <value>Array dimensions cannot have a negative size.</value>
  </data>
  <data name="ERR_MyClassAbstractCall1" xml:space="preserve">
    <value>'MustOverride' method '{0}' cannot be called with 'MyClass'.</value>
  </data>
  <data name="ERR_EndDisallowedInDllProjects" xml:space="preserve">
    <value>'End' statement cannot be used in class library projects.</value>
  </data>
  <data name="ERR_BlockLocalShadowing1" xml:space="preserve">
    <value>Variable '{0}' hides a variable in an enclosing block.</value>
  </data>
  <data name="ERR_ModuleNotAtNamespace" xml:space="preserve">
    <value>'Module' statements can occur only at file or namespace level.</value>
  </data>
  <data name="ERR_NamespaceNotAtNamespace" xml:space="preserve">
    <value>'Namespace' statements can occur only at file or namespace level.</value>
  </data>
  <data name="ERR_InvInsideEnum" xml:space="preserve">
    <value>Statement cannot appear within an Enum body.</value>
  </data>
  <data name="ERR_InvInsideEndsEnum" xml:space="preserve">
    <value>Statement cannot appear within an Enum body. End of Enum assumed.</value>
  </data>
  <data name="ERR_InvalidOptionStrict" xml:space="preserve">
    <value>'Option Strict' can be followed only by 'On' or 'Off'.</value>
  </data>
  <data name="ERR_EndStructureNoStructure" xml:space="preserve">
    <value>'End Structure' must be preceded by a matching 'Structure'.</value>
  </data>
  <data name="ERR_EndModuleNoModule" xml:space="preserve">
    <value>'End Module' must be preceded by a matching 'Module'.</value>
  </data>
  <data name="ERR_EndNamespaceNoNamespace" xml:space="preserve">
    <value>'End Namespace' must be preceded by a matching 'Namespace'.</value>
  </data>
  <data name="ERR_ExpectedEndStructure" xml:space="preserve">
    <value>'Structure' statement must end with a matching 'End Structure'.</value>
  </data>
  <data name="ERR_ExpectedEndModule" xml:space="preserve">
    <value>'Module' statement must end with a matching 'End Module'.</value>
  </data>
  <data name="ERR_ExpectedEndNamespace" xml:space="preserve">
    <value>'Namespace' statement must end with a matching 'End Namespace'.</value>
  </data>
  <data name="ERR_OptionStmtWrongOrder" xml:space="preserve">
    <value>'Option' statements must precede any declarations or 'Imports' statements.</value>
  </data>
  <data name="ERR_StructCantInherit" xml:space="preserve">
    <value>Structures cannot have 'Inherits' statements.</value>
  </data>
  <data name="ERR_NewInStruct" xml:space="preserve">
    <value>Structures cannot declare a non-shared 'Sub New' with no parameters.</value>
  </data>
  <data name="ERR_InvalidEndGet" xml:space="preserve">
    <value>'End Get' must be preceded by a matching 'Get'.</value>
  </data>
  <data name="ERR_MissingEndGet" xml:space="preserve">
    <value>'Get' statement must end with a matching 'End Get'.</value>
  </data>
  <data name="ERR_InvalidEndSet" xml:space="preserve">
    <value>'End Set' must be preceded by a matching 'Set'.</value>
  </data>
  <data name="ERR_MissingEndSet" xml:space="preserve">
    <value>'Set' statement must end with a matching 'End Set'.</value>
  </data>
  <data name="ERR_InvInsideEndsProperty" xml:space="preserve">
    <value>Statement cannot appear within a property body. End of property assumed.</value>
  </data>
  <data name="ERR_DuplicateWriteabilityCategoryUsed" xml:space="preserve">
    <value>'ReadOnly' and 'WriteOnly' cannot be combined.</value>
  </data>
  <data name="ERR_ExpectedGreater" xml:space="preserve">
    <value>'&gt;' expected.</value>
  </data>
  <data name="ERR_AttributeStmtWrongOrder" xml:space="preserve">
    <value>Assembly or Module attribute statements must precede any declarations in a file.</value>
  </data>
  <data name="ERR_NoExplicitArraySizes" xml:space="preserve">
    <value>Array bounds cannot appear in type specifiers.</value>
  </data>
  <data name="ERR_BadPropertyFlags1" xml:space="preserve">
    <value>Properties cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_InvalidOptionExplicit" xml:space="preserve">
    <value>'Option Explicit' can be followed only by 'On' or 'Off'.</value>
  </data>
  <data name="ERR_MultipleParameterSpecifiers" xml:space="preserve">
    <value>'ByVal' and 'ByRef' cannot be combined.</value>
  </data>
  <data name="ERR_MultipleOptionalParameterSpecifiers" xml:space="preserve">
    <value>'Optional' and 'ParamArray' cannot be combined.</value>
  </data>
  <data name="ERR_UnsupportedProperty1" xml:space="preserve">
    <value>Property '{0}' is of an unsupported type.</value>
  </data>
  <data name="ERR_InvalidOptionalParameterUsage1" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied to a method with optional parameters.</value>
  </data>
  <data name="ERR_ReturnFromNonFunction" xml:space="preserve">
    <value>'Return' statement in a Sub or a Set cannot return a value.</value>
  </data>
  <data name="ERR_UnterminatedStringLiteral" xml:space="preserve">
    <value>String constants must end with a double quote.</value>
  </data>
  <data name="ERR_UnsupportedType1" xml:space="preserve">
    <value>'{0}' is an unsupported type.</value>
  </data>
  <data name="ERR_InvalidEnumBase" xml:space="preserve">
    <value>Enums must be declared as an integral type.</value>
  </data>
  <data name="ERR_ByRefIllegal1" xml:space="preserve">
    <value>{0} parameters cannot be declared 'ByRef'.</value>
  </data>
  <data name="ERR_UnreferencedAssembly3" xml:space="preserve">
    <value>Reference required to assembly '{0}' containing the type '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_UnreferencedModule3" xml:space="preserve">
    <value>Reference required to module '{0}' containing the type '{1}'. Add one to your project.</value>
  </data>
  <data name="ERR_ReturnWithoutValue" xml:space="preserve">
    <value>'Return' statement in a Function, Get, or Operator must return a value.</value>
  </data>
  <data name="ERR_UnsupportedField1" xml:space="preserve">
    <value>Field '{0}' is of an unsupported type.</value>
  </data>
  <data name="ERR_UnsupportedMethod1" xml:space="preserve">
    <value>'{0}' has a return type that is not supported or parameter types that are not supported.</value>
  </data>
  <data name="ERR_NoNonIndexProperty1" xml:space="preserve">
    <value>Property '{0}' with no parameters cannot be found.</value>
  </data>
  <data name="ERR_BadAttributePropertyType1" xml:space="preserve">
    <value>Property or field '{0}' does not have a valid attribute type.</value>
  </data>
  <data name="ERR_LocalsCannotHaveAttributes" xml:space="preserve">
    <value>Attributes cannot be applied to local variables.</value>
  </data>
  <data name="ERR_PropertyOrFieldNotDefined1" xml:space="preserve">
    <value>Field or property '{0}' is not found.</value>
  </data>
  <data name="ERR_InvalidAttributeUsage2" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied to '{1}' because the attribute is not valid on this declaration type.</value>
  </data>
  <data name="ERR_InvalidAttributeUsageOnAccessor" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied to '{1}' of '{2}' because the attribute is not valid on this declaration type.</value>
  </data>
  <data name="ERR_NestedTypeInInheritsClause2" xml:space="preserve">
    <value>Class '{0}' cannot reference its nested type '{1}' in Inherits clause.</value>
  </data>
  <data name="ERR_TypeInItsInheritsClause1" xml:space="preserve">
    <value>Class '{0}' cannot reference itself in Inherits clause.</value>
  </data>
  <data name="ERR_BaseTypeReferences2" xml:space="preserve">
    <value>
    Base type of '{0}' needs '{1}' to be resolved.</value>
  </data>
  <data name="ERR_IllegalBaseTypeReferences3" xml:space="preserve">
    <value>Inherits clause of {0} '{1}' causes cyclic dependency: {2}</value>
  </data>
  <data name="ERR_InvalidMultipleAttributeUsage1" xml:space="preserve">
    <value>Attribute '{0}' cannot be applied multiple times.</value>
  </data>
  <data name="ERR_InvalidMultipleAttributeUsageInNetModule2" xml:space="preserve">
    <value>Attribute '{0}' in '{1}' cannot be applied multiple times.</value>
  </data>
  <data name="ERR_CantThrowNonException" xml:space="preserve">
    <value>'Throw' operand must derive from 'System.Exception'.</value>
  </data>
  <data name="ERR_MustBeInCatchToRethrow" xml:space="preserve">
    <value>'Throw' statement cannot omit operand outside a 'Catch' statement or inside a 'Finally' statement.</value>
  </data>
  <data name="ERR_ParamArrayMustBeByVal" xml:space="preserve">
    <value>ParamArray parameters must be declared 'ByVal'.</value>
  </data>
  <data name="ERR_UseOfObsoleteSymbol2" xml:space="preserve">
    <value>'{0}' is obsolete: '{1}'.</value>
  </data>
  <data name="ERR_RedimNoSizes" xml:space="preserve">
    <value>'ReDim' statements require a parenthesized list of the new bounds of each dimension of the array.</value>
  </data>
  <data name="ERR_InitWithMultipleDeclarators" xml:space="preserve">
    <value>Explicit initialization is not permitted with multiple variables declared with a single type specifier.</value>
  </data>
  <data name="ERR_InitWithExplicitArraySizes" xml:space="preserve">
    <value>Explicit initialization is not permitted for arrays declared with explicit bounds.</value>
  </data>
  <data name="ERR_EndSyncLockNoSyncLock" xml:space="preserve">
    <value>'End SyncLock' must be preceded by a matching 'SyncLock'.</value>
  </data>
  <data name="ERR_ExpectedEndSyncLock" xml:space="preserve">
    <value>'SyncLock' statement must end with a matching 'End SyncLock'.</value>
  </data>
  <data name="ERR_NameNotEvent2" xml:space="preserve">
    <value>'{0}' is not an event of '{1}'.</value>
  </data>
  <data name="ERR_AddOrRemoveHandlerEvent" xml:space="preserve">
    <value>'AddHandler' or 'RemoveHandler' statement event operand must be a dot-qualified expression or a simple name.</value>
  </data>
  <data name="ERR_UnrecognizedEnd" xml:space="preserve">
    <value>'End' statement not valid.</value>
  </data>
  <data name="ERR_ArrayInitForNonArray2" xml:space="preserve">
    <value>Array initializers are valid only for arrays, but the type of '{0}' is '{1}'.</value>
  </data>
  <data name="ERR_EndRegionNoRegion" xml:space="preserve">
    <value>'#End Region' must be preceded by a matching '#Region'.</value>
  </data>
  <data name="ERR_ExpectedEndRegion" xml:space="preserve">
    <value>'#Region' statement must end with a matching '#End Region'.</value>
  </data>
  <data name="ERR_InheritsStmtWrongOrder" xml:space="preserve">
    <value>'Inherits' statement must precede all declarations in a class.</value>
  </data>
  <data name="ERR_AmbiguousAcrossInterfaces3" xml:space="preserve">
    <value>'{0}' is ambiguous across the inherited interfaces '{1}' and '{2}'.</value>
  </data>
  <data name="ERR_DefaultPropertyAmbiguousAcrossInterfaces4" xml:space="preserve">
    <value>Default property access is ambiguous between the inherited interface members '{0}' of interface '{1}' and '{2}' of interface '{3}'.</value>
  </data>
  <data name="ERR_InterfaceEventCantUse1" xml:space="preserve">
    <value>Events in interfaces cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_ExecutableAsDeclaration" xml:space="preserve">
    <value>Statement cannot appear outside of a method body.</value>
  </data>
  <data name="ERR_StructureNoDefault1" xml:space="preserve">
    <value>Structure '{0}' cannot be indexed because it has no default property.</value>
  </data>
  <data name="ERR_MustShadow2" xml:space="preserve">
    <value>{0} '{1}' must be declared 'Shadows' because another member with this name is declared 'Shadows'.</value>
  </data>
  <data name="ERR_OverrideWithOptionalTypes2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by the types of optional parameters.</value>
  </data>
  <data name="ERR_ExpectedEndOfExpression" xml:space="preserve">
    <value>End of expression expected.</value>
  </data>
  <data name="ERR_StructsCannotHandleEvents" xml:space="preserve">
    <value>Methods declared in structures cannot have 'Handles' clauses.</value>
  </data>
  <data name="ERR_OverridesImpliesOverridable" xml:space="preserve">
    <value>Methods declared 'Overrides' cannot be declared 'Overridable' because they are implicitly overridable.</value>
  </data>
  <data name="ERR_LocalNamedSameAsParam1" xml:space="preserve">
    <value>'{0}' is already declared as a parameter of this method.</value>
  </data>
  <data name="ERR_LocalNamedSameAsParamInLambda1" xml:space="preserve">
    <value>Variable '{0}' is already declared as a parameter of this or an enclosing lambda expression.</value>
  </data>
  <data name="ERR_ModuleCantUseTypeSpecifier1" xml:space="preserve">
    <value>Type in a Module cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_InValidSubMainsFound1" xml:space="preserve">
    <value>No accessible 'Main' method with an appropriate signature was found in '{0}'.</value>
  </data>
  <data name="ERR_MoreThanOneValidMainWasFound2" xml:space="preserve">
    <value>'Sub Main' is declared more than once in '{0}': {1}</value>
  </data>
  <data name="ERR_CannotConvertValue2" xml:space="preserve">
    <value>Value '{0}' cannot be converted to '{1}'.</value>
  </data>
  <data name="ERR_OnErrorInSyncLock" xml:space="preserve">
    <value>'On Error' statements are not valid within 'SyncLock' statements.</value>
  </data>
  <data name="ERR_NarrowingConversionCollection2" xml:space="preserve">
    <value>Option Strict On disallows implicit conversions from '{0}' to '{1}'; the Visual Basic 6.0 collection type is not compatible with the .NET Framework collection type.</value>
  </data>
  <data name="ERR_GotoIntoTryHandler" xml:space="preserve">
    <value>'GoTo {0}' is not valid because '{0}' is inside a 'Try', 'Catch' or 'Finally' statement that does not contain this statement.</value>
  </data>
  <data name="ERR_GotoIntoSyncLock" xml:space="preserve">
    <value>'GoTo {0}' is not valid because '{0}' is inside a 'SyncLock' statement that does not contain this statement.</value>
  </data>
  <data name="ERR_GotoIntoWith" xml:space="preserve">
    <value>'GoTo {0}' is not valid because '{0}' is inside a 'With' statement that does not contain this statement.</value>
  </data>
  <data name="ERR_GotoIntoFor" xml:space="preserve">
    <value>'GoTo {0}' is not valid because '{0}' is inside a 'For' or 'For Each' statement that does not contain this statement.</value>
  </data>
  <data name="ERR_BadAttributeNonPublicConstructor" xml:space="preserve">
    <value>Attribute cannot be used because it does not have a Public constructor.</value>
  </data>
  <data name="ERR_DefaultEventNotFound1" xml:space="preserve">
    <value>Event '{0}' specified by the 'DefaultEvent' attribute is not a publicly accessible event for this class.</value>
  </data>
  <data name="ERR_InvalidNonSerializedUsage" xml:space="preserve">
    <value>'NonSerialized' attribute will not have any effect on this member because its containing class is not exposed as 'Serializable'.</value>
  </data>
  <data name="ERR_ExpectedContinueKind" xml:space="preserve">
    <value>'Continue' must be followed by 'Do', 'For' or 'While'.</value>
  </data>
  <data name="ERR_ContinueDoNotWithinDo" xml:space="preserve">
    <value>'Continue Do' can only appear inside a 'Do' statement.</value>
  </data>
  <data name="ERR_ContinueForNotWithinFor" xml:space="preserve">
    <value>'Continue For' can only appear inside a 'For' statement.</value>
  </data>
  <data name="ERR_ContinueWhileNotWithinWhile" xml:space="preserve">
    <value>'Continue While' can only appear inside a 'While' statement.</value>
  </data>
  <data name="ERR_DuplicateParameterSpecifier" xml:space="preserve">
    <value>Parameter specifier is duplicated.</value>
  </data>
  <data name="ERR_ModuleCantUseDLLDeclareSpecifier1" xml:space="preserve">
    <value>'Declare' statements in a Module cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_StructCantUseDLLDeclareSpecifier1" xml:space="preserve">
    <value>'Declare' statements in a structure cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_TryCastOfValueType1" xml:space="preserve">
    <value>'TryCast' operand must be reference type, but '{0}' is a value type.</value>
  </data>
  <data name="ERR_TryCastOfUnconstrainedTypeParam1" xml:space="preserve">
    <value>'TryCast' operands must be class-constrained type parameter, but '{0}' has no class constraint.</value>
  </data>
  <data name="ERR_AmbiguousDelegateBinding2" xml:space="preserve">
    <value>No accessible '{0}' is most specific: {1}</value>
  </data>
  <data name="ERR_SharedStructMemberCannotSpecifyNew" xml:space="preserve">
    <value>Non-shared members in a Structure cannot be declared 'New'.</value>
  </data>
  <data name="ERR_GenericSubMainsFound1" xml:space="preserve">
    <value>None of the accessible 'Main' methods with the appropriate signatures found in '{0}' can be the startup method since they are all either generic or nested in generic types.</value>
  </data>
  <data name="ERR_GeneralProjectImportsError3" xml:space="preserve">
    <value>Error in project-level import '{0}' at '{1}' : {2}</value>
  </data>
  <data name="ERR_InvalidTypeForAliasesImport2" xml:space="preserve">
    <value>'{1}' for the Imports alias to '{0}' does not refer to a Namespace, Class, Structure, Interface, Enum or Module.</value>
  </data>
  <data name="ERR_UnsupportedConstant2" xml:space="preserve">
    <value>Field '{0}.{1}' has an invalid constant value.</value>
  </data>
  <data name="ERR_ObsoleteArgumentsNeedParens" xml:space="preserve">
    <value>Method arguments must be enclosed in parentheses.</value>
  </data>
  <data name="ERR_ObsoleteLineNumbersAreLabels" xml:space="preserve">
    <value>Labels that are numbers must be followed by colons.</value>
  </data>
  <data name="ERR_ObsoleteStructureNotType" xml:space="preserve">
    <value>'Type' statements are no longer supported; use 'Structure' statements instead.</value>
  </data>
  <data name="ERR_ObsoleteObjectNotVariant" xml:space="preserve">
    <value>'Variant' is no longer a supported type; use the 'Object' type instead.</value>
  </data>
  <data name="ERR_ObsoleteLetSetNotNeeded" xml:space="preserve">
    <value>'Let' and 'Set' assignment statements are no longer supported.</value>
  </data>
  <data name="ERR_ObsoletePropertyGetLetSet" xml:space="preserve">
    <value>Property Get/Let/Set are no longer supported; use the new Property declaration syntax.</value>
  </data>
  <data name="ERR_ObsoleteWhileWend" xml:space="preserve">
    <value>'Wend' statements are no longer supported; use 'End While' statements instead.</value>
  </data>
  <data name="ERR_ObsoleteRedimAs" xml:space="preserve">
    <value>'ReDim' statements can no longer be used to declare array variables.</value>
  </data>
  <data name="ERR_ObsoleteOptionalWithoutValue" xml:space="preserve">
    <value>Optional parameters must specify a default value.</value>
  </data>
  <data name="ERR_ObsoleteGosub" xml:space="preserve">
    <value>'GoSub' statements are no longer supported.</value>
  </data>
  <data name="ERR_ObsoleteOnGotoGosub" xml:space="preserve">
    <value>'On GoTo' and 'On GoSub' statements are no longer supported.</value>
  </data>
  <data name="ERR_ObsoleteEndIf" xml:space="preserve">
    <value>'EndIf' statements are no longer supported; use 'End If' instead.</value>
  </data>
  <data name="ERR_ObsoleteExponent" xml:space="preserve">
    <value>'D' can no longer be used to indicate an exponent, use 'E' instead.</value>
  </data>
  <data name="ERR_ObsoleteAsAny" xml:space="preserve">
    <value>'As Any' is not supported in 'Declare' statements.</value>
  </data>
  <data name="ERR_ObsoleteGetStatement" xml:space="preserve">
    <value>'Get' statements are no longer supported. File I/O functionality is available in the 'Microsoft.VisualBasic' namespace.</value>
  </data>
  <data name="ERR_OverrideWithArrayVsParamArray2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by parameters declared 'ParamArray'.</value>
  </data>
  <data name="ERR_CircularBaseDependencies4" xml:space="preserve">
    <value>This inheritance causes circular dependencies between {0} '{1}' and its nested or base type '{2}'.</value>
  </data>
  <data name="ERR_NestedBase2" xml:space="preserve">
    <value>{0} '{1}' cannot inherit from a type nested within it.</value>
  </data>
  <data name="ERR_AccessMismatchOutsideAssembly4" xml:space="preserve">
    <value>'{0}' cannot expose type '{1}' outside the project through {2} '{3}'.</value>
  </data>
  <data name="ERR_InheritanceAccessMismatchOutside3" xml:space="preserve">
    <value>'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} outside the assembly.</value>
  </data>
  <data name="ERR_UseOfObsoletePropertyAccessor3" xml:space="preserve">
    <value>'{0}' accessor of '{1}' is obsolete: '{2}'.</value>
  </data>
  <data name="ERR_UseOfObsoletePropertyAccessor2" xml:space="preserve">
    <value>'{0}' accessor of '{1}' is obsolete.</value>
  </data>
  <data name="ERR_AccessMismatchImplementedEvent6" xml:space="preserve">
    <value>'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing to {2} '{3}' through {4} '{5}'.</value>
  </data>
  <data name="ERR_AccessMismatchImplementedEvent4" xml:space="preserve">
    <value>'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing outside the project through {2} '{3}'.</value>
  </data>
  <data name="ERR_InheritanceCycleInImportedType1" xml:space="preserve">
    <value>Type '{0}' is not supported because it either directly or indirectly inherits from itself.</value>
  </data>
  <data name="ERR_NoNonObsoleteConstructorOnBase3" xml:space="preserve">
    <value>Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</value>
  </data>
  <data name="ERR_NoNonObsoleteConstructorOnBase4" xml:space="preserve">
    <value>Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</value>
  </data>
  <data name="ERR_RequiredNonObsoleteNewCall3" xml:space="preserve">
    <value>First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</value>
  </data>
  <data name="ERR_RequiredNonObsoleteNewCall4" xml:space="preserve">
    <value>First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'.</value>
  </data>
  <data name="ERR_InheritsTypeArgAccessMismatch7" xml:space="preserve">
    <value>'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' to {4} '{5}'.</value>
  </data>
  <data name="ERR_InheritsTypeArgAccessMismatchOutside5" xml:space="preserve">
    <value>'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' outside the assembly.</value>
  </data>
  <data name="ERR_PartialTypeAccessMismatch3" xml:space="preserve">
    <value>Specified access '{0}' for '{1}' does not match the access '{2}' specified on one of its other partial types.</value>
  </data>
  <data name="ERR_PartialTypeBadMustInherit1" xml:space="preserve">
    <value>'MustInherit' cannot be specified for partial type '{0}' because it cannot be combined with 'NotInheritable' specified for one of its other partial types.</value>
  </data>
  <data name="ERR_MustOverOnNotInheritPartClsMem1" xml:space="preserve">
    <value>'MustOverride' cannot be specified on this member because it is in a partial type that is declared 'NotInheritable' in another partial definition.</value>
  </data>
  <data name="ERR_BaseMismatchForPartialClass3" xml:space="preserve">
    <value>Base class '{0}' specified for class '{1}' cannot be different from the base class '{2}' of one of its other partial types.</value>
  </data>
  <data name="ERR_PartialTypeTypeParamNameMismatch3" xml:space="preserve">
    <value>Type parameter name '{0}' does not match the name '{1}' of the corresponding type parameter defined on one of the other partial types of '{2}'.</value>
  </data>
  <data name="ERR_PartialTypeConstraintMismatch1" xml:space="preserve">
    <value>Constraints for this type parameter do not match the constraints on the corresponding type parameter defined on one of the other partial types of '{0}'.</value>
  </data>
  <data name="ERR_LateBoundOverloadInterfaceCall1" xml:space="preserve">
    <value>Late bound overload resolution cannot be applied to '{0}' because the accessing instance is an interface type.</value>
  </data>
  <data name="ERR_RequiredAttributeConstConversion2" xml:space="preserve">
    <value>Conversion from '{0}' to '{1}' cannot occur in a constant expression used as an argument to an attribute.</value>
  </data>
  <data name="ERR_AmbiguousOverrides3" xml:space="preserve">
    <value>Member '{0}' that matches this signature cannot be overridden because the class '{1}' contains multiple members with this same name and signature: {2}</value>
  </data>
  <data name="ERR_OverriddenCandidate1" xml:space="preserve">
    <value>
   '{0}'</value>
  </data>
  <data name="ERR_AmbiguousImplements3" xml:space="preserve">
    <value>Member '{0}.{1}' that matches this signature cannot be implemented because the interface '{2}' contains multiple members with this same name and signature:
   '{3}'
   '{4}'</value>
  </data>
  <data name="ERR_AddressOfNotCreatableDelegate1" xml:space="preserve">
    <value>'AddressOf' expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</value>
  </data>
  <data name="ERR_ComClassGenericMethod" xml:space="preserve">
    <value>Generic methods cannot be exposed to COM.</value>
  </data>
  <data name="ERR_SyntaxInCastOp" xml:space="preserve">
    <value>Syntax error in cast operator; two arguments separated by comma are required.</value>
  </data>
  <data name="ERR_ArrayInitializerForNonConstDim" xml:space="preserve">
    <value>Array initializer cannot be specified for a non constant dimension; use the empty initializer '{}'.</value>
  </data>
  <data name="ERR_DelegateBindingFailure3" xml:space="preserve">
    <value>No accessible method '{0}' has a signature compatible with delegate '{1}':{2}</value>
  </data>
  <data name="ERR_StructLayoutAttributeNotAllowed" xml:space="preserve">
    <value>Attribute 'StructLayout' cannot be applied to a generic type.</value>
  </data>
  <data name="ERR_IterationVariableShadowLocal1" xml:space="preserve">
    <value>Range variable '{0}' hides a variable in an enclosing block or a range variable previously defined in the query expression.</value>
  </data>
  <data name="ERR_InvalidOptionInfer" xml:space="preserve">
    <value>'Option Infer' can be followed only by 'On' or 'Off'.</value>
  </data>
  <data name="ERR_CircularInference1" xml:space="preserve">
    <value>Type of '{0}' cannot be inferred from an expression containing '{0}'.</value>
  </data>
  <data name="ERR_InAccessibleOverridingMethod5" xml:space="preserve">
    <value>'{0}' in class '{1}' cannot override '{2}' in class '{3}' because an intermediate class '{4}' overrides '{2}' in class '{3}' but is not accessible.</value>
  </data>
  <data name="ERR_NoSuitableWidestType1" xml:space="preserve">
    <value>Type of '{0}' cannot be inferred because the loop bounds and the step clause do not convert to the same type.</value>
  </data>
  <data name="ERR_AmbiguousWidestType3" xml:space="preserve">
    <value>Type of '{0}' is ambiguous because the loop bounds and the step clause do not convert to the same type.</value>
  </data>
  <data name="ERR_ExpectedAssignmentOperatorInInit" xml:space="preserve">
    <value>'=' expected (object initializer).</value>
  </data>
  <data name="ERR_ExpectedQualifiedNameInInit" xml:space="preserve">
    <value>Name of field or property being initialized in an object initializer must start with '.'.</value>
  </data>
  <data name="ERR_ExpectedLbrace" xml:space="preserve">
    <value>'{' expected.</value>
  </data>
  <data name="ERR_UnrecognizedTypeOrWith" xml:space="preserve">
    <value>Type or 'With' expected.</value>
  </data>
  <data name="ERR_DuplicateAggrMemberInit1" xml:space="preserve">
    <value>Multiple initializations of '{0}'.  Fields and properties can be initialized only once in an object initializer expression.</value>
  </data>
  <data name="ERR_NonFieldPropertyAggrMemberInit1" xml:space="preserve">
    <value>Member '{0}' cannot be initialized in an object initializer expression because it is not a field or property.</value>
  </data>
  <data name="ERR_SharedMemberAggrMemberInit1" xml:space="preserve">
    <value>Member '{0}' cannot be initialized in an object initializer expression because it is shared.</value>
  </data>
  <data name="ERR_ParameterizedPropertyInAggrInit1" xml:space="preserve">
    <value>Property '{0}' cannot be initialized in an object initializer expression because it requires arguments.</value>
  </data>
  <data name="ERR_NoZeroCountArgumentInitCandidates1" xml:space="preserve">
    <value>Property '{0}' cannot be initialized in an object initializer expression because all accessible overloads require arguments.</value>
  </data>
  <data name="ERR_AggrInitInvalidForObject" xml:space="preserve">
    <value>Object initializer syntax cannot be used to initialize an instance of 'System.Object'.</value>
  </data>
  <data name="ERR_InitializerExpected" xml:space="preserve">
    <value>Initializer expected.</value>
  </data>
  <data name="ERR_LineContWithCommentOrNoPrecSpace" xml:space="preserve">
    <value>Line continuation character '_' must be preceded by at least one white space and must be the last character on the line.</value>
  </data>
  <data name="ERR_BadModuleFile1" xml:space="preserve">
    <value>Unable to load module file '{0}': {1}</value>
  </data>
  <data name="ERR_BadRefLib1" xml:space="preserve">
    <value>Unable to load referenced library '{0}': {1}</value>
  </data>
  <data name="ERR_EventHandlerSignatureIncompatible2" xml:space="preserve">
    <value>Method '{0}' cannot handle event '{1}' because they do not have a compatible signature.</value>
  </data>
  <data name="ERR_ProjectCCError1" xml:space="preserve">
    <value>Project-level conditional compilation constant '{1}' is not valid: {0}</value>
  </data>
  <data name="ERR_InterfaceImplementedTwice1" xml:space="preserve">
    <value>Interface '{0}' can be implemented only once by this type.</value>
  </data>
  <data name="ERR_InterfaceNotImplemented1" xml:space="preserve">
    <value>Interface '{0}' is not implemented by this class.</value>
  </data>
  <data name="ERR_AmbiguousImplementsMember3" xml:space="preserve">
    <value>'{0}' exists in multiple base interfaces. Use the name of the interface that declares '{0}' in the 'Implements' clause instead of the name of the derived interface.</value>
  </data>
  <data name="ERR_ImplementsOnNew" xml:space="preserve">
    <value>'Sub New' cannot implement interface members.</value>
  </data>
  <data name="ERR_ArrayInitInStruct" xml:space="preserve">
    <value>Arrays declared as structure members cannot be declared with an initial size.</value>
  </data>
  <data name="ERR_EventTypeNotDelegate" xml:space="preserve">
    <value>Events declared with an 'As' clause must have a delegate type.</value>
  </data>
  <data name="ERR_ProtectedTypeOutsideClass" xml:space="preserve">
    <value>Protected types can only be declared inside of a class.</value>
  </data>
  <data name="ERR_DefaultPropertyWithNoParams" xml:space="preserve">
    <value>Properties with no required parameters cannot be declared 'Default'.</value>
  </data>
  <data name="ERR_InitializerInStruct" xml:space="preserve">
    <value>Initializers on structure members are valid only for 'Shared' members and constants.</value>
  </data>
  <data name="ERR_DuplicateImport1" xml:space="preserve">
    <value>Namespace or type '{0}' has already been imported.</value>
  </data>
  <data name="ERR_BadModuleFlags1" xml:space="preserve">
    <value>Modules cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_ImplementsStmtWrongOrder" xml:space="preserve">
    <value>'Implements' statements must follow any 'Inherits' statement and precede all declarations in a class.</value>
  </data>
  <data name="ERR_SynthMemberClashesWithSynth7" xml:space="preserve">
    <value>{0} '{1}' implicitly defines '{2}', which conflicts with a member implicitly declared for {3} '{4}' in {5} '{6}'.</value>
  </data>
  <data name="ERR_SynthMemberClashesWithMember5" xml:space="preserve">
    <value>{0} '{1}' implicitly defines '{2}', which conflicts with a member of the same name in {3} '{4}'.</value>
  </data>
  <data name="ERR_MemberClashesWithSynth6" xml:space="preserve">
    <value>{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in {4} '{5}'.</value>
  </data>
  <data name="ERR_TypeClashesWithVbCoreType4" xml:space="preserve">
    <value>{0} '{1}' conflicts with a Visual Basic Runtime {2} '{3}'.</value>
  </data>
  <data name="ERR_SecurityAttributeMissingAction" xml:space="preserve">
    <value>First argument to a security attribute must be a valid SecurityAction.</value>
  </data>
  <data name="ERR_SecurityAttributeInvalidAction" xml:space="preserve">
    <value>Security attribute '{0}' has an invalid SecurityAction value '{1}'.</value>
  </data>
  <data name="ERR_SecurityAttributeInvalidActionAssembly" xml:space="preserve">
    <value>SecurityAction value '{0}' is invalid for security attributes applied to an assembly.</value>
  </data>
  <data name="ERR_SecurityAttributeInvalidActionTypeOrMethod" xml:space="preserve">
    <value>SecurityAction value '{0}' is invalid for security attributes applied to a type or a method.</value>
  </data>
  <data name="ERR_PrincipalPermissionInvalidAction" xml:space="preserve">
    <value>SecurityAction value '{0}' is invalid for PrincipalPermission attribute.</value>
  </data>
  <data name="ERR_PermissionSetAttributeInvalidFile" xml:space="preserve">
    <value>Unable to resolve file path '{0}' specified for the named argument '{1}' for PermissionSet attribute.</value>
  </data>
  <data name="ERR_PermissionSetAttributeFileReadError" xml:space="preserve">
    <value>Error reading file '{0}' specified for the named argument '{1}' for PermissionSet attribute: '{2}'.</value>
  </data>
  <data name="ERR_SetHasOnlyOneParam" xml:space="preserve">
    <value>'Set' method cannot have more than one parameter.</value>
  </data>
  <data name="ERR_SetValueNotPropertyType" xml:space="preserve">
    <value>'Set' parameter must have the same type as the containing property.</value>
  </data>
  <data name="ERR_SetHasToBeByVal1" xml:space="preserve">
    <value>'Set' parameter cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_StructureCantUseProtected" xml:space="preserve">
    <value>Method in a structure cannot be declared 'Protected' or 'Protected Friend'.</value>
  </data>
  <data name="ERR_BadInterfaceDelegateSpecifier1" xml:space="preserve">
    <value>Delegate in an interface cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_BadInterfaceEnumSpecifier1" xml:space="preserve">
    <value>Enum in an interface cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_BadInterfaceClassSpecifier1" xml:space="preserve">
    <value>Class in an interface cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_BadInterfaceStructSpecifier1" xml:space="preserve">
    <value>Structure in an interface cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_BadInterfaceInterfaceSpecifier1" xml:space="preserve">
    <value>Interface in an interface cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_UseOfObsoleteSymbolNoMessage1" xml:space="preserve">
    <value>'{0}' is obsolete.</value>
  </data>
  <data name="ERR_MetaDataIsNotAssembly" xml:space="preserve">
    <value>'{0}' is a module and cannot be referenced as an assembly.</value>
  </data>
  <data name="ERR_MetaDataIsNotModule" xml:space="preserve">
    <value>'{0}' is an assembly and cannot be referenced as a module.</value>
  </data>
  <data name="ERR_ReferenceComparison3" xml:space="preserve">
    <value>Operator '{0}' is not defined for types '{1}' and '{2}'. Use 'Is' operator to compare two reference types.</value>
  </data>
  <data name="ERR_CatchVariableNotLocal1" xml:space="preserve">
    <value>'{0}' is not a local variable or parameter, and so cannot be used as a 'Catch' variable.</value>
  </data>
  <data name="ERR_ModuleMemberCantImplement" xml:space="preserve">
    <value>Members in a Module cannot implement interface members.</value>
  </data>
  <data name="ERR_EventDelegatesCantBeFunctions" xml:space="preserve">
    <value>Events cannot be declared with a delegate type that has a return type.</value>
  </data>
  <data name="ERR_InvalidDate" xml:space="preserve">
    <value>Date constant is not valid.</value>
  </data>
  <data name="ERR_CantOverride4" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because it is not declared 'Overridable'.</value>
  </data>
  <data name="ERR_CantSpecifyArraysOnBoth" xml:space="preserve">
    <value>Array modifiers cannot be specified on both a variable and its type.</value>
  </data>
  <data name="ERR_NotOverridableRequiresOverrides" xml:space="preserve">
    <value>'NotOverridable' cannot be specified for methods that do not override another method.</value>
  </data>
  <data name="ERR_PrivateTypeOutsideType" xml:space="preserve">
    <value>Types declared 'Private' must be inside another type.</value>
  </data>
  <data name="ERR_TypeRefResolutionError3" xml:space="preserve">
    <value>Import of type '{0}' from assembly or module '{1}' failed.</value>
  </data>
  <data name="ERR_ParamArrayWrongType" xml:space="preserve">
    <value>ParamArray parameters must have an array type.</value>
  </data>
  <data name="ERR_CoClassMissing2" xml:space="preserve">
    <value>Implementing class '{0}' for interface '{1}' cannot be found.</value>
  </data>
  <data name="ERR_InvalidCoClass1" xml:space="preserve">
    <value>Type '{0}' cannot be used as an implementing class.</value>
  </data>
  <data name="ERR_InvalidMeReference" xml:space="preserve">
    <value>Reference to object under construction is not valid when calling another constructor.</value>
  </data>
  <data name="ERR_InvalidImplicitMeReference" xml:space="preserve">
    <value>Implicit reference to object under construction is not valid when calling another constructor.</value>
  </data>
  <data name="ERR_RuntimeMemberNotFound2" xml:space="preserve">
    <value>Member '{0}' cannot be found in class '{1}'. This condition is usually the result of a mismatched 'Microsoft.VisualBasic.dll'.</value>
  </data>
  <data name="ERR_BadPropertyAccessorFlags" xml:space="preserve">
    <value>Property accessors cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_BadPropertyAccessorFlagsRestrict" xml:space="preserve">
    <value>Access modifier '{0}' is not valid. The access modifier of 'Get' and 'Set' should be more restrictive than the property access level.</value>
  </data>
  <data name="ERR_OnlyOneAccessorForGetSet" xml:space="preserve">
    <value>Access modifier can only be applied to either 'Get' or 'Set', but not both.</value>
  </data>
  <data name="ERR_NoAccessibleSet" xml:space="preserve">
    <value>'Set' accessor of property '{0}' is not accessible.</value>
  </data>
  <data name="ERR_NoAccessibleGet" xml:space="preserve">
    <value>'Get' accessor of property '{0}' is not accessible.</value>
  </data>
  <data name="ERR_WriteOnlyNoAccessorFlag" xml:space="preserve">
    <value>'WriteOnly' properties cannot have an access modifier on 'Set'.</value>
  </data>
  <data name="ERR_ReadOnlyNoAccessorFlag" xml:space="preserve">
    <value>'ReadOnly' properties cannot have an access modifier on 'Get'.</value>
  </data>
  <data name="ERR_BadPropertyAccessorFlags1" xml:space="preserve">
    <value>Property accessors cannot be declared '{0}' in a 'NotOverridable' property.</value>
  </data>
  <data name="ERR_BadPropertyAccessorFlags2" xml:space="preserve">
    <value>Property accessors cannot be declared '{0}' in a 'Default' property.</value>
  </data>
  <data name="ERR_BadPropertyAccessorFlags3" xml:space="preserve">
    <value>Property cannot be declared '{0}' because it contains a 'Private' accessor.</value>
  </data>
  <data name="ERR_InAccessibleCoClass3" xml:space="preserve">
    <value>Implementing class '{0}' for interface '{1}' is not accessible in this context because it is '{2}'.</value>
  </data>
  <data name="ERR_MissingValuesForArraysInApplAttrs" xml:space="preserve">
    <value>Arrays used as attribute arguments are required to explicitly specify values for all elements.</value>
  </data>
  <data name="ERR_ExitEventMemberNotInvalid" xml:space="preserve">
    <value>'Exit AddHandler', 'Exit RemoveHandler' and 'Exit RaiseEvent' are not valid. Use 'Return' to exit from event members.</value>
  </data>
  <data name="ERR_InvInsideEndsEvent" xml:space="preserve">
    <value>Statement cannot appear within an event body. End of event assumed.</value>
  </data>
  <data name="ERR_MissingEndEvent" xml:space="preserve">
    <value>'Custom Event' must end with a matching 'End Event'.</value>
  </data>
  <data name="ERR_MissingEndAddHandler" xml:space="preserve">
    <value>'AddHandler' declaration must end with a matching 'End AddHandler'.</value>
  </data>
  <data name="ERR_MissingEndRemoveHandler" xml:space="preserve">
    <value>'RemoveHandler' declaration must end with a matching 'End RemoveHandler'.</value>
  </data>
  <data name="ERR_MissingEndRaiseEvent" xml:space="preserve">
    <value>'RaiseEvent' declaration must end with a matching 'End RaiseEvent'.</value>
  </data>
  <data name="ERR_CustomEventInvInInterface" xml:space="preserve">
    <value>'Custom' modifier is not valid on events declared in interfaces.</value>
  </data>
  <data name="ERR_CustomEventRequiresAs" xml:space="preserve">
    <value>'Custom' modifier is not valid on events declared without explicit delegate types.</value>
  </data>
  <data name="ERR_InvalidEndEvent" xml:space="preserve">
    <value>'End Event' must be preceded by a matching 'Custom Event'.</value>
  </data>
  <data name="ERR_InvalidEndAddHandler" xml:space="preserve">
    <value>'End AddHandler' must be preceded by a matching 'AddHandler' declaration.</value>
  </data>
  <data name="ERR_InvalidEndRemoveHandler" xml:space="preserve">
    <value>'End RemoveHandler' must be preceded by a matching 'RemoveHandler' declaration.</value>
  </data>
  <data name="ERR_InvalidEndRaiseEvent" xml:space="preserve">
    <value>'End RaiseEvent' must be preceded by a matching 'RaiseEvent' declaration.</value>
  </data>
  <data name="ERR_DuplicateAddHandlerDef" xml:space="preserve">
    <value>'AddHandler' is already declared.</value>
  </data>
  <data name="ERR_DuplicateRemoveHandlerDef" xml:space="preserve">
    <value>'RemoveHandler' is already declared.</value>
  </data>
  <data name="ERR_DuplicateRaiseEventDef" xml:space="preserve">
    <value>'RaiseEvent' is already declared.</value>
  </data>
  <data name="ERR_MissingAddHandlerDef1" xml:space="preserve">
    <value>'AddHandler' definition missing for event '{0}'.</value>
  </data>
  <data name="ERR_MissingRemoveHandlerDef1" xml:space="preserve">
    <value>'RemoveHandler' definition missing for event '{0}'.</value>
  </data>
  <data name="ERR_MissingRaiseEventDef1" xml:space="preserve">
    <value>'RaiseEvent' definition missing for event '{0}'.</value>
  </data>
  <data name="ERR_EventAddRemoveHasOnlyOneParam" xml:space="preserve">
    <value>'AddHandler' and 'RemoveHandler' methods must have exactly one parameter.</value>
  </data>
  <data name="ERR_EventAddRemoveByrefParamIllegal" xml:space="preserve">
    <value>'AddHandler' and 'RemoveHandler' method parameters cannot be declared 'ByRef'.</value>
  </data>
  <data name="ERR_SpecifiersInvOnEventMethod" xml:space="preserve">
    <value>Specifiers are not valid on 'AddHandler', 'RemoveHandler' and 'RaiseEvent' methods.</value>
  </data>
  <data name="ERR_AddRemoveParamNotEventType" xml:space="preserve">
    <value>'AddHandler' and 'RemoveHandler' method parameters must have the same delegate type as the containing event.</value>
  </data>
  <data name="ERR_RaiseEventShapeMismatch1" xml:space="preserve">
    <value>'RaiseEvent' method must have the same signature as the containing event's delegate type '{0}'.</value>
  </data>
  <data name="ERR_EventMethodOptionalParamIllegal1" xml:space="preserve">
    <value>'AddHandler', 'RemoveHandler' and 'RaiseEvent' method parameters cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_CantReferToMyGroupInsideGroupType1" xml:space="preserve">
    <value>'{0}' cannot refer to itself through its default instance; use 'Me' instead.</value>
  </data>
  <data name="ERR_InvalidUseOfCustomModifier" xml:space="preserve">
    <value>'Custom' modifier can only be used immediately before an 'Event' declaration.</value>
  </data>
  <data name="ERR_InvalidOptionStrictCustom" xml:space="preserve">
    <value>Option Strict Custom can only be used as an option to the command-line compiler (vbc.exe).</value>
  </data>
  <data name="ERR_ObsoleteInvalidOnEventMember" xml:space="preserve">
    <value>'{0}' cannot be applied to the 'AddHandler', 'RemoveHandler', or 'RaiseEvent' definitions. If required, apply the attribute directly to the event.</value>
  </data>
  <data name="ERR_DelegateBindingIncompatible2" xml:space="preserve">
    <value>Method '{0}' does not have a signature compatible with delegate '{1}'.</value>
  </data>
  <data name="ERR_ExpectedXmlName" xml:space="preserve">
    <value>XML name expected.</value>
  </data>
  <data name="ERR_UndefinedXmlPrefix" xml:space="preserve">
    <value>XML namespace prefix '{0}' is not defined.</value>
  </data>
  <data name="ERR_DuplicateXmlAttribute" xml:space="preserve">
    <value>Duplicate XML attribute '{0}'.</value>
  </data>
  <data name="ERR_MismatchedXmlEndTag" xml:space="preserve">
    <value>End tag &lt;/{0}{1}{2}&gt; expected.</value>
  </data>
  <data name="ERR_MissingXmlEndTag" xml:space="preserve">
    <value>Element is missing an end tag.</value>
  </data>
  <data name="ERR_ReservedXmlPrefix" xml:space="preserve">
    <value>XML namespace prefix '{0}' is reserved for use by XML and the namespace URI cannot be changed.</value>
  </data>
  <data name="ERR_MissingVersionInXmlDecl" xml:space="preserve">
    <value>Required attribute 'version' missing from XML declaration.</value>
  </data>
  <data name="ERR_IllegalAttributeInXmlDecl" xml:space="preserve">
    <value>XML declaration does not allow attribute '{0}{1}{2}'.</value>
  </data>
  <data name="ERR_QuotedEmbeddedExpression" xml:space="preserve">
    <value>Embedded expression cannot appear inside a quoted attribute value.  Try removing quotes.</value>
  </data>
  <data name="ERR_VersionMustBeFirstInXmlDecl" xml:space="preserve">
    <value>XML attribute 'version' must be the first attribute in XML declaration.</value>
  </data>
  <data name="ERR_AttributeOrder" xml:space="preserve">
    <value>XML attribute '{0}' must appear before XML attribute '{1}'.</value>
  </data>
  <data name="ERR_ExpectedXmlEndEmbedded" xml:space="preserve">
    <value>Expected closing '%&gt;' for embedded expression.</value>
  </data>
  <data name="ERR_ExpectedXmlEndPI" xml:space="preserve">
    <value>Expected closing '?&gt;' for XML processor instruction.</value>
  </data>
  <data name="ERR_ExpectedXmlEndComment" xml:space="preserve">
    <value>Expected closing '--&gt;' for XML comment.</value>
  </data>
  <data name="ERR_ExpectedXmlEndCData" xml:space="preserve">
    <value>Expected closing ']]&gt;' for XML CDATA section.</value>
  </data>
  <data name="ERR_ExpectedSQuote" xml:space="preserve">
    <value>Expected matching closing single quote for XML attribute value.</value>
  </data>
  <data name="ERR_ExpectedQuote" xml:space="preserve">
    <value>Expected matching closing double quote for XML attribute value.</value>
  </data>
  <data name="ERR_ExpectedLT" xml:space="preserve">
    <value>Expected beginning '&lt;' for an XML tag.</value>
  </data>
  <data name="ERR_StartAttributeValue" xml:space="preserve">
    <value>Expected quoted XML attribute value or embedded expression.</value>
  </data>
  <data name="ERR_ExpectedDiv" xml:space="preserve">
    <value>Expected '/' for XML end tag.</value>
  </data>
  <data name="ERR_NoXmlAxesLateBinding" xml:space="preserve">
    <value>XML axis properties do not support late binding.</value>
  </data>
  <data name="ERR_IllegalXmlStartNameChar" xml:space="preserve">
    <value>Character '{0}' ({1}) is not allowed at the beginning of an XML name.</value>
  </data>
  <data name="ERR_IllegalXmlNameChar" xml:space="preserve">
    <value>Character '{0}' ({1}) is not allowed in an XML name.</value>
  </data>
  <data name="ERR_IllegalXmlCommentChar" xml:space="preserve">
    <value>Character sequence '--' is not allowed in an XML comment.</value>
  </data>
  <data name="ERR_EmbeddedExpression" xml:space="preserve">
    <value>An embedded expression cannot be used here.</value>
  </data>
  <data name="ERR_ExpectedXmlWhiteSpace" xml:space="preserve">
    <value>Missing required white space.</value>
  </data>
  <data name="ERR_IllegalProcessingInstructionName" xml:space="preserve">
    <value>XML processing instruction name '{0}' is not valid.</value>
  </data>
  <data name="ERR_DTDNotSupported" xml:space="preserve">
    <value>XML DTDs are not supported.</value>
  </data>
  <data name="ERR_IllegalXmlWhiteSpace" xml:space="preserve">
    <value>White space cannot appear here.</value>
  </data>
  <data name="ERR_ExpectedSColon" xml:space="preserve">
    <value>Expected closing ';' for XML entity.</value>
  </data>
  <data name="ERR_ExpectedXmlBeginEmbedded" xml:space="preserve">
    <value>Expected '%=' at start of an embedded expression.</value>
  </data>
  <data name="ERR_XmlEntityReference" xml:space="preserve">
    <value>XML entity references are not supported.</value>
  </data>
  <data name="ERR_InvalidAttributeValue1" xml:space="preserve">
    <value>Attribute value is not valid; expecting '{0}'.</value>
  </data>
  <data name="ERR_InvalidAttributeValue2" xml:space="preserve">
    <value>Attribute value is not valid; expecting '{0}' or '{1}'.</value>
  </data>
  <data name="ERR_ReservedXmlNamespace" xml:space="preserve">
    <value>Prefix '{0}' cannot be bound to namespace name reserved for '{1}'.</value>
  </data>
  <data name="ERR_IllegalDefaultNamespace" xml:space="preserve">
    <value>Namespace declaration with prefix cannot have an empty value inside an XML literal.</value>
  </data>
  <data name="ERR_QualifiedNameNotAllowed" xml:space="preserve">
    <value>':' is not allowed. XML qualified names cannot be used in this context.</value>
  </data>
  <data name="ERR_ExpectedXmlns" xml:space="preserve">
    <value>Namespace declaration must start with 'xmlns'.</value>
  </data>
  <data name="ERR_IllegalXmlnsPrefix" xml:space="preserve">
    <value>Element names cannot use the 'xmlns' prefix.</value>
  </data>
  <data name="ERR_XmlFeaturesNotAvailable" xml:space="preserve">
    <value>XML literals and XML axis properties are not available. Add references to System.Xml, System.Xml.Linq, and System.Core or other assemblies declaring System.Linq.Enumerable, System.Xml.Linq.XElement, System.Xml.Linq.XName, System.Xml.Linq.XAttribute and System.Xml.Linq.XNamespace types.</value>
  </data>
  <data name="ERR_UnableToReadUacManifest2" xml:space="preserve">
    <value>Unable to open Win32 manifest file '{0}' : {1}</value>
  </data>
  <data name="WRN_UseValueForXmlExpression3" xml:space="preserve">
    <value>Cannot convert '{0}' to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</value>
  </data>
  <data name="WRN_UseValueForXmlExpression3_Title" xml:space="preserve">
    <value>Cannot convert IEnumerable(Of XElement) to String</value>
  </data>
  <data name="ERR_TypeMismatchForXml3" xml:space="preserve">
    <value>Value of type '{0}' cannot be converted to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</value>
  </data>
  <data name="ERR_BinaryOperandsForXml4" xml:space="preserve">
    <value>Operator '{0}' is not defined for types '{1}' and '{2}'. You can use the 'Value' property to get the string value of the first element of '{3}'.</value>
  </data>
  <data name="ERR_FullWidthAsXmlDelimiter" xml:space="preserve">
    <value>Full width characters are not valid as XML delimiters.</value>
  </data>
  <data name="ERR_InvalidSubsystemVersion" xml:space="preserve">
    <value>The value '{0}' is not a valid subsystem version. The version must be 6.02 or greater for ARM or AppContainerExe, and 4.00 or greater otherwise.</value>
  </data>
  <data name="ERR_InvalidFileAlignment" xml:space="preserve">
    <value>Invalid file section alignment '{0}'</value>
  </data>
  <data name="ERR_InvalidOutputName" xml:space="preserve">
    <value>Invalid output name: {0}</value>
  </data>
  <data name="ERR_InvalidDebugInformationFormat" xml:space="preserve">
    <value>Invalid debug information format: {0}</value>
  </data>
  <data name="ERR_LibAnycpu32bitPreferredConflict" xml:space="preserve">
    <value>/platform:anycpu32bitpreferred can only be used with /t:exe, /t:winexe and /t:appcontainerexe.</value>
  </data>
  <data name="ERR_RestrictedAccess" xml:space="preserve">
    <value>Expression has the type '{0}' which is a restricted type and cannot be used to access members inherited from 'Object' or 'ValueType'.</value>
  </data>
  <data name="ERR_RestrictedConversion1" xml:space="preserve">
    <value>Expression of type '{0}' cannot be converted to 'Object' or 'ValueType'.</value>
  </data>
  <data name="ERR_NoTypecharInLabel" xml:space="preserve">
    <value>Type characters are not allowed in label identifiers.</value>
  </data>
  <data name="ERR_RestrictedType1" xml:space="preserve">
    <value>'{0}' cannot be made nullable, and cannot be used as the data type of an array element, field, anonymous type member, type argument, 'ByRef' parameter, or return statement.</value>
  </data>
  <data name="ERR_NoTypecharInAlias" xml:space="preserve">
    <value>Type characters are not allowed on Imports aliases.</value>
  </data>
  <data name="ERR_NoAccessibleConstructorOnBase" xml:space="preserve">
    <value>Class '{0}' has no accessible 'Sub New' and cannot be inherited.</value>
  </data>
  <data name="ERR_BadStaticLocalInStruct" xml:space="preserve">
    <value>Local variables within methods of structures cannot be declared 'Static'.</value>
  </data>
  <data name="ERR_DuplicateLocalStatic1" xml:space="preserve">
    <value>Static local variable '{0}' is already declared.</value>
  </data>
  <data name="ERR_ImportAliasConflictsWithType2" xml:space="preserve">
    <value>Imports alias '{0}' conflicts with '{1}' declared in the root namespace.</value>
  </data>
  <data name="ERR_CantShadowAMustOverride1" xml:space="preserve">
    <value>'{0}' cannot shadow a method declared 'MustOverride'.</value>
  </data>
  <data name="ERR_MultipleEventImplMismatch3" xml:space="preserve">
    <value>Event '{0}' cannot implement event '{2}.{1}' because its delegate type does not match the delegate type of another event implemented by '{0}'.</value>
  </data>
  <data name="ERR_BadSpecifierCombo2" xml:space="preserve">
    <value>'{0}' and '{1}' cannot be combined.</value>
  </data>
  <data name="ERR_MustBeOverloads2" xml:space="preserve">
    <value>{0} '{1}' must be declared 'Overloads' because another '{1}' is declared 'Overloads' or 'Overrides'.</value>
  </data>
  <data name="ERR_MustOverridesInClass1" xml:space="preserve">
    <value>'{0}' must be declared 'MustInherit' because it contains methods declared 'MustOverride'.</value>
  </data>
  <data name="ERR_HandlesSyntaxInClass" xml:space="preserve">
    <value>'Handles' in classes must specify a 'WithEvents' variable, 'MyBase', 'MyClass' or 'Me' qualified with a single identifier.</value>
  </data>
  <data name="ERR_SynthMemberShadowsMustOverride5" xml:space="preserve">
    <value>'{0}', implicitly declared for {1} '{2}', cannot shadow a 'MustOverride' method in the base {3} '{4}'.</value>
  </data>
  <data name="ERR_CannotOverrideInAccessibleMember" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because it is not accessible in this context.</value>
  </data>
  <data name="ERR_HandlesSyntaxInModule" xml:space="preserve">
    <value>'Handles' in modules must specify a 'WithEvents' variable qualified with a single identifier.</value>
  </data>
  <data name="ERR_IsNotOpRequiresReferenceTypes1" xml:space="preserve">
    <value>'IsNot' requires operands that have reference types, but this operand has the value type '{0}'.</value>
  </data>
  <data name="ERR_ClashWithReservedEnumMember1" xml:space="preserve">
    <value>'{0}' conflicts with the reserved member by this name that is implicitly declared in all enums.</value>
  </data>
  <data name="ERR_MultiplyDefinedEnumMember2" xml:space="preserve">
    <value>'{0}' is already declared in this {1}.</value>
  </data>
  <data name="ERR_BadUseOfVoid" xml:space="preserve">
    <value>'System.Void' can only be used in a GetType expression.</value>
  </data>
  <data name="ERR_EventImplMismatch5" xml:space="preserve">
    <value>Event '{0}' cannot implement event '{1}' on interface '{2}' because their delegate types '{3}' and '{4}' do not match.</value>
  </data>
  <data name="ERR_ForwardedTypeUnavailable3" xml:space="preserve">
    <value>Type '{0}' in assembly '{1}' has been forwarded to assembly '{2}'. Either a reference to '{2}' is missing from your project or the type '{0}' is missing from assembly '{2}'.</value>
  </data>
  <data name="ERR_TypeFwdCycle2" xml:space="preserve">
    <value>'{0}' in assembly '{1}' has been forwarded to itself and so is an unsupported type.</value>
  </data>
  <data name="ERR_BadTypeInCCExpression" xml:space="preserve">
    <value>Non-intrinsic type names are not allowed in conditional compilation expressions.</value>
  </data>
  <data name="ERR_BadCCExpression" xml:space="preserve">
    <value>Syntax error in conditional compilation expression.</value>
  </data>
  <data name="ERR_VoidArrayDisallowed" xml:space="preserve">
    <value>Arrays of type 'System.Void' are not allowed in this expression.</value>
  </data>
  <data name="ERR_MetadataMembersAmbiguous3" xml:space="preserve">
    <value>'{0}' is ambiguous because multiple kinds of members with this name exist in {1} '{2}'.</value>
  </data>
  <data name="ERR_TypeOfExprAlwaysFalse2" xml:space="preserve">
    <value>Expression of type '{0}' can never be of type '{1}'.</value>
  </data>
  <data name="ERR_OnlyPrivatePartialMethods1" xml:space="preserve">
    <value>Partial methods must be declared 'Private' instead of '{0}'.</value>
  </data>
  <data name="ERR_PartialMethodsMustBePrivate" xml:space="preserve">
    <value>Partial methods must be declared 'Private'.</value>
  </data>
  <data name="ERR_OnlyOnePartialMethodAllowed2" xml:space="preserve">
    <value>Method '{0}' cannot be declared 'Partial' because only one method '{1}' can be marked 'Partial'.</value>
  </data>
  <data name="ERR_OnlyOneImplementingMethodAllowed3" xml:space="preserve">
    <value>Method '{0}' cannot implement partial method '{1}' because '{2}' already implements it. Only one method can implement a partial method.</value>
  </data>
  <data name="ERR_PartialMethodMustBeEmpty" xml:space="preserve">
    <value>Partial methods must have empty method bodies.</value>
  </data>
  <data name="ERR_PartialMethodsMustBeSub1" xml:space="preserve">
    <value>'{0}' cannot be declared 'Partial' because partial methods must be Subs.</value>
  </data>
  <data name="ERR_PartialMethodGenericConstraints2" xml:space="preserve">
    <value>Method '{0}' does not have the same generic constraints as the partial method '{1}'.</value>
  </data>
  <data name="ERR_PartialDeclarationImplements1" xml:space="preserve">
    <value>Partial method '{0}' cannot use the 'Implements' keyword.</value>
  </data>
  <data name="ERR_NoPartialMethodInAddressOf1" xml:space="preserve">
    <value>'AddressOf' cannot be applied to '{0}' because '{0}' is a partial method without an implementation.</value>
  </data>
  <data name="ERR_ImplementationMustBePrivate2" xml:space="preserve">
    <value>Method '{0}' must be declared 'Private' in order to implement partial method '{1}'.</value>
  </data>
  <data name="ERR_PartialMethodParamNamesMustMatch3" xml:space="preserve">
    <value>Parameter name '{0}' does not match the name of the corresponding parameter, '{1}', defined on the partial method declaration '{2}'.</value>
  </data>
  <data name="ERR_PartialMethodTypeParamNameMismatch3" xml:space="preserve">
    <value>Name of type parameter '{0}' does not match '{1}', the corresponding type parameter defined on the partial method declaration '{2}'.</value>
  </data>
  <data name="ERR_BadAttributeSharedProperty1" xml:space="preserve">
    <value>'Shared' attribute property '{0}' cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_BadAttributeReadOnlyProperty1" xml:space="preserve">
    <value>'ReadOnly' attribute property '{0}' cannot be the target of an assignment.</value>
  </data>
  <data name="ERR_DuplicateResourceName1" xml:space="preserve">
    <value>Resource name '{0}' cannot be used more than once.</value>
  </data>
  <data name="ERR_DuplicateResourceFileName1" xml:space="preserve">
    <value>Each linked resource and module must have a unique filename. Filename '{0}' is specified more than once in this assembly.</value>
  </data>
  <data name="ERR_AttributeMustBeClassNotStruct1" xml:space="preserve">
    <value>'{0}' cannot be used as an attribute because it is not a class.</value>
  </data>
  <data name="ERR_AttributeMustInheritSysAttr" xml:space="preserve">
    <value>'{0}' cannot be used as an attribute because it does not inherit from 'System.Attribute'.</value>
  </data>
  <data name="ERR_AttributeCannotBeAbstract" xml:space="preserve">
    <value>'{0}' cannot be used as an attribute because it is declared 'MustInherit'.</value>
  </data>
  <data name="ERR_UnableToOpenResourceFile1" xml:space="preserve">
    <value>Unable to open resource file '{0}': {1}</value>
  </data>
  <data name="ERR_BadAttributeNonPublicProperty1" xml:space="preserve">
    <value>Attribute member '{0}' cannot be the target of an assignment because it is not declared 'Public'.</value>
  </data>
  <data name="ERR_STAThreadAndMTAThread0" xml:space="preserve">
    <value>'System.STAThreadAttribute' and 'System.MTAThreadAttribute' cannot both be applied to the same method.</value>
  </data>
  <data name="ERR_IndirectUnreferencedAssembly4" xml:space="preserve">
    <value>Project '{0}' makes an indirect reference to assembly '{1}', which contains '{2}'. Add a file reference to '{3}' to your project.</value>
  </data>
  <data name="ERR_BadAttributeNonPublicType1" xml:space="preserve">
    <value>Type '{0}' cannot be used in an attribute because it is not declared 'Public'.</value>
  </data>
  <data name="ERR_BadAttributeNonPublicContType2" xml:space="preserve">
    <value>Type '{0}' cannot be used in an attribute because its container '{1}' is not declared 'Public'.</value>
  </data>
  <data name="ERR_DllImportOnNonEmptySubOrFunction" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Sub, Function, or Operator with a non-empty body.</value>
  </data>
  <data name="ERR_DllImportNotLegalOnDeclare" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Declare.</value>
  </data>
  <data name="ERR_DllImportNotLegalOnGetOrSet" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Get or Set.</value>
  </data>
  <data name="ERR_DllImportOnGenericSubOrFunction" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a method that is generic or contained in a generic type.</value>
  </data>
  <data name="ERR_ComClassOnGeneric" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is generic or contained inside a generic type.</value>
  </data>
  <data name="ERR_DllImportOnInstanceMethod" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to instance method.</value>
  </data>
  <data name="ERR_DllImportOnInterfaceMethod" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to interface methods.</value>
  </data>
  <data name="ERR_DllImportNotLegalOnEventMethod" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to 'AddHandler', 'RemoveHandler' or 'RaiseEvent' method.</value>
  </data>
  <data name="ERR_FriendAssemblyBadArguments" xml:space="preserve">
    <value>Friend assembly reference '{0}' is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified.</value>
  </data>
  <data name="ERR_FriendAssemblyStrongNameRequired" xml:space="preserve">
    <value>Friend assembly reference '{0}' is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations.</value>
  </data>
  <data name="ERR_FriendAssemblyNameInvalid" xml:space="preserve">
    <value>Friend declaration '{0}' is invalid and cannot be resolved.</value>
  </data>
  <data name="ERR_FriendAssemblyBadAccessOverride2" xml:space="preserve">
    <value>Member '{0}' cannot override member '{1}' defined in another assembly/project because the access modifier 'Protected Friend' expands accessibility. Use 'Protected' instead.</value>
  </data>
  <data name="ERR_UseOfLocalBeforeDeclaration1" xml:space="preserve">
    <value>Local variable '{0}' cannot be referred to before it is declared.</value>
  </data>
  <data name="ERR_UseOfKeywordFromModule1" xml:space="preserve">
    <value>'{0}' is not valid within a Module.</value>
  </data>
  <data name="ERR_BogusWithinLineIf" xml:space="preserve">
    <value>Statement cannot end a block outside of a line 'If' statement.</value>
  </data>
  <data name="ERR_CharToIntegralTypeMismatch1" xml:space="preserve">
    <value>'Char' values cannot be converted to '{0}'. Use 'Microsoft.VisualBasic.AscW' to interpret a character as a Unicode value or 'Microsoft.VisualBasic.Val' to interpret it as a digit.</value>
  </data>
  <data name="ERR_IntegralToCharTypeMismatch1" xml:space="preserve">
    <value>'{0}' values cannot be converted to 'Char'. Use 'Microsoft.VisualBasic.ChrW' to interpret a numeric value as a Unicode character or first convert it to 'String' to produce a digit.</value>
  </data>
  <data name="ERR_NoDirectDelegateConstruction1" xml:space="preserve">
    <value>Delegate '{0}' requires an 'AddressOf' expression or lambda expression as the only argument to its constructor.</value>
  </data>
  <data name="ERR_MethodMustBeFirstStatementOnLine" xml:space="preserve">
    <value>Method declaration statements must be the first statement on a logical line.</value>
  </data>
  <data name="ERR_AttrAssignmentNotFieldOrProp1" xml:space="preserve">
    <value>'{0}' cannot be named as a parameter in an attribute specifier because it is not a field or property.</value>
  </data>
  <data name="ERR_StrictDisallowsObjectComparison1" xml:space="preserve">
    <value>Option Strict On disallows operands of type Object for operator '{0}'. Use the 'Is' operator to test for object identity.</value>
  </data>
  <data name="ERR_NoConstituentArraySizes" xml:space="preserve">
    <value>Bounds can be specified only for the top-level array when initializing an array of arrays.</value>
  </data>
  <data name="ERR_FileAttributeNotAssemblyOrModule" xml:space="preserve">
    <value>'Assembly' or 'Module' expected.</value>
  </data>
  <data name="ERR_FunctionResultCannotBeIndexed1" xml:space="preserve">
    <value>'{0}' has no parameters and its return type cannot be indexed.</value>
  </data>
  <data name="ERR_ArgumentSyntax" xml:space="preserve">
    <value>Comma, ')', or a valid expression continuation expected.</value>
  </data>
  <data name="ERR_ExpectedResumeOrGoto" xml:space="preserve">
    <value>'Resume' or 'GoTo' expected.</value>
  </data>
  <data name="ERR_ExpectedAssignmentOperator" xml:space="preserve">
    <value>'=' expected.</value>
  </data>
  <data name="ERR_NamedArgAlsoOmitted2" xml:space="preserve">
    <value>Parameter '{0}' in '{1}' already has a matching omitted argument.</value>
  </data>
  <data name="ERR_CannotCallEvent1" xml:space="preserve">
    <value>'{0}' is an event, and cannot be called directly. Use a 'RaiseEvent' statement to raise an event.</value>
  </data>
  <data name="ERR_ForEachCollectionDesignPattern1" xml:space="preserve">
    <value>Expression is of type '{0}', which is not a collection type.</value>
  </data>
  <data name="ERR_DefaultValueForNonOptionalParam" xml:space="preserve">
    <value>Default values cannot be supplied for parameters that are not declared 'Optional'.</value>
  </data>
  <data name="ERR_ExpectedDotAfterMyBase" xml:space="preserve">
    <value>'MyBase' must be followed by '.' and an identifier.</value>
  </data>
  <data name="ERR_ExpectedDotAfterMyClass" xml:space="preserve">
    <value>'MyClass' must be followed by '.' and an identifier.</value>
  </data>
  <data name="ERR_StrictArgumentCopyBackNarrowing3" xml:space="preserve">
    <value>Option Strict On disallows narrowing from type '{1}' to type '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</value>
  </data>
  <data name="ERR_LbElseifAfterElse" xml:space="preserve">
    <value>'#ElseIf' cannot follow '#Else' as part of a '#If' block.</value>
  </data>
  <data name="ERR_StandaloneAttribute" xml:space="preserve">
    <value>Attribute specifier is not a complete statement. Use a line continuation to apply the attribute to the following statement.</value>
  </data>
  <data name="ERR_NoUniqueConstructorOnBase2" xml:space="preserve">
    <value>Class '{0}' must declare a 'Sub New' because its base class '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</value>
  </data>
  <data name="ERR_ExtraNextVariable" xml:space="preserve">
    <value>'Next' statement names more variables than there are matching 'For' statements.</value>
  </data>
  <data name="ERR_RequiredNewCallTooMany2" xml:space="preserve">
    <value>First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</value>
  </data>
  <data name="ERR_ForCtlVarArraySizesSpecified" xml:space="preserve">
    <value>Array declared as for loop control variable cannot be declared with an initial size.</value>
  </data>
  <data name="ERR_BadFlagsOnNewOverloads" xml:space="preserve">
    <value>The '{0}' keyword is used to overload inherited members; do not use the '{0}' keyword when overloading 'Sub New'.</value>
  </data>
  <data name="ERR_TypeCharOnGenericParam" xml:space="preserve">
    <value>Type character cannot be used in a type parameter declaration.</value>
  </data>
  <data name="ERR_TooFewGenericArguments1" xml:space="preserve">
    <value>Too few type arguments to '{0}'.</value>
  </data>
  <data name="ERR_TooManyGenericArguments1" xml:space="preserve">
    <value>Too many type arguments to '{0}'.</value>
  </data>
  <data name="ERR_GenericConstraintNotSatisfied2" xml:space="preserve">
    <value>Type argument '{0}' does not inherit from or implement the constraint type '{1}'.</value>
  </data>
  <data name="ERR_TypeOrMemberNotGeneric1" xml:space="preserve">
    <value>'{0}' has no type parameters and so cannot have type arguments.</value>
  </data>
  <data name="ERR_NewIfNullOnGenericParam" xml:space="preserve">
    <value>'New' cannot be used on a type parameter that does not have a 'New' constraint.</value>
  </data>
  <data name="ERR_MultipleClassConstraints1" xml:space="preserve">
    <value>Type parameter '{0}' can only have one constraint that is a class.</value>
  </data>
  <data name="ERR_ConstNotClassInterfaceOrTypeParam1" xml:space="preserve">
    <value>Type constraint '{0}' must be either a class, interface or type parameter.</value>
  </data>
  <data name="ERR_DuplicateTypeParamName1" xml:space="preserve">
    <value>Type parameter already declared with name '{0}'.</value>
  </data>
  <data name="ERR_UnboundTypeParam2" xml:space="preserve">
    <value>Type parameter '{0}' for '{1}' cannot be inferred.</value>
  </data>
  <data name="ERR_IsOperatorGenericParam1" xml:space="preserve">
    <value>'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</value>
  </data>
  <data name="ERR_ArgumentCopyBackNarrowing3" xml:space="preserve">
    <value>Copying the value of 'ByRef' parameter '{0}' back to the matching argument narrows from type '{1}' to type '{2}'.</value>
  </data>
  <data name="ERR_ShadowingGenericParamWithMember1" xml:space="preserve">
    <value>'{0}' has the same name as a type parameter.</value>
  </data>
  <data name="ERR_GenericParamBase2" xml:space="preserve">
    <value>{0} '{1}' cannot inherit from a type parameter.</value>
  </data>
  <data name="ERR_ImplementsGenericParam" xml:space="preserve">
    <value>Type parameter not allowed in 'Implements' clause.</value>
  </data>
  <data name="ERR_OnlyNullLowerBound" xml:space="preserve">
    <value>Array lower bounds can be only '0'.</value>
  </data>
  <data name="ERR_ClassConstraintNotInheritable1" xml:space="preserve">
    <value>Type constraint cannot be a 'NotInheritable' class.</value>
  </data>
  <data name="ERR_ConstraintIsRestrictedType1" xml:space="preserve">
    <value>'{0}' cannot be used as a type constraint.</value>
  </data>
  <data name="ERR_GenericParamsOnInvalidMember" xml:space="preserve">
    <value>Type parameters cannot be specified on this declaration.</value>
  </data>
  <data name="ERR_GenericArgsOnAttributeSpecifier" xml:space="preserve">
    <value>Type arguments are not valid because attributes cannot be generic.</value>
  </data>
  <data name="ERR_AttrCannotBeGenerics" xml:space="preserve">
    <value>Type parameters, generic types or types contained in generic types cannot be used as attributes.</value>
  </data>
  <data name="ERR_BadStaticLocalInGenericMethod" xml:space="preserve">
    <value>Local variables within generic methods cannot be declared 'Static'.</value>
  </data>
  <data name="ERR_SyntMemberShadowsGenericParam3" xml:space="preserve">
    <value>{0} '{1}' implicitly defines a member '{2}' which has the same name as a type parameter.</value>
  </data>
  <data name="ERR_ConstraintAlreadyExists1" xml:space="preserve">
    <value>Constraint type '{0}' already specified for this type parameter.</value>
  </data>
  <data name="ERR_InterfacePossiblyImplTwice2" xml:space="preserve">
    <value>Cannot implement interface '{0}' because its implementation could conflict with the implementation of another implemented interface '{1}' for some type arguments.</value>
  </data>
  <data name="ERR_ModulesCannotBeGeneric" xml:space="preserve">
    <value>Modules cannot be generic.</value>
  </data>
  <data name="ERR_GenericClassCannotInheritAttr" xml:space="preserve">
    <value>Classes that are generic or contained in a generic type cannot inherit from an attribute class.</value>
  </data>
  <data name="ERR_DeclaresCantBeInGeneric" xml:space="preserve">
    <value>'Declare' statements are not allowed in generic types or types contained in generic types.</value>
  </data>
  <data name="ERR_OverrideWithConstraintMismatch2" xml:space="preserve">
    <value>'{0}' cannot override '{1}' because they differ by type parameter constraints.</value>
  </data>
  <data name="ERR_ImplementsWithConstraintMismatch3" xml:space="preserve">
    <value>'{0}' cannot implement '{1}.{2}' because they differ by type parameter constraints.</value>
  </data>
  <data name="ERR_OpenTypeDisallowed" xml:space="preserve">
    <value>Type parameters or types constructed with type parameters are not allowed in attribute arguments.</value>
  </data>
  <data name="ERR_HandlesInvalidOnGenericMethod" xml:space="preserve">
    <value>Generic methods cannot use 'Handles' clause.</value>
  </data>
  <data name="ERR_MultipleNewConstraints" xml:space="preserve">
    <value>'New' constraint cannot be specified multiple times for the same type parameter.</value>
  </data>
  <data name="ERR_MustInheritForNewConstraint2" xml:space="preserve">
    <value>Type argument '{0}' is declared 'MustInherit' and does not satisfy the 'New' constraint for type parameter '{1}'.</value>
  </data>
  <data name="ERR_NoSuitableNewForNewConstraint2" xml:space="preserve">
    <value>Type argument '{0}' must have a public parameterless instance constructor to satisfy the 'New' constraint for type parameter '{1}'.</value>
  </data>
  <data name="ERR_BadGenericParamForNewConstraint2" xml:space="preserve">
    <value>Type parameter '{0}' must have either a 'New' constraint or a 'Structure' constraint to satisfy the 'New' constraint for type parameter '{1}'.</value>
  </data>
  <data name="ERR_NewArgsDisallowedForTypeParam" xml:space="preserve">
    <value>Arguments cannot be passed to a 'New' used on a type parameter.</value>
  </data>
  <data name="ERR_DuplicateRawGenericTypeImport1" xml:space="preserve">
    <value>Generic type '{0}' cannot be imported more than once.</value>
  </data>
  <data name="ERR_NoTypeArgumentCountOverloadCand1" xml:space="preserve">
    <value>Overload resolution failed because no accessible '{0}' accepts this number of type arguments.</value>
  </data>
  <data name="ERR_TypeArgsUnexpected" xml:space="preserve">
    <value>Type arguments unexpected.</value>
  </data>
  <data name="ERR_NameSameAsMethodTypeParam1" xml:space="preserve">
    <value>'{0}' is already declared as a type parameter of this method.</value>
  </data>
  <data name="ERR_TypeParamNameFunctionNameCollision" xml:space="preserve">
    <value>Type parameter cannot have the same name as its defining function.</value>
  </data>
  <data name="ERR_BadConstraintSyntax" xml:space="preserve">
    <value>Type or 'New' expected.</value>
  </data>
  <data name="ERR_OfExpected" xml:space="preserve">
    <value>'Of' required when specifying type arguments for a generic type or method.</value>
  </data>
  <data name="ERR_ArrayOfRawGenericInvalid" xml:space="preserve">
    <value>'(' unexpected. Arrays of uninstantiated generic types are not allowed.</value>
  </data>
  <data name="ERR_ForEachAmbiguousIEnumerable1" xml:space="preserve">
    <value>'For Each' on type '{0}' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'.</value>
  </data>
  <data name="ERR_IsNotOperatorGenericParam1" xml:space="preserve">
    <value>'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</value>
  </data>
  <data name="ERR_TypeParamQualifierDisallowed" xml:space="preserve">
    <value>Type parameters cannot be used as qualifiers.</value>
  </data>
  <data name="ERR_TypeParamMissingCommaOrRParen" xml:space="preserve">
    <value>Comma or ')' expected.</value>
  </data>
  <data name="ERR_TypeParamMissingAsCommaOrRParen" xml:space="preserve">
    <value>'As', comma or ')' expected.</value>
  </data>
  <data name="ERR_MultipleReferenceConstraints" xml:space="preserve">
    <value>'Class' constraint cannot be specified multiple times for the same type parameter.</value>
  </data>
  <data name="ERR_MultipleValueConstraints" xml:space="preserve">
    <value>'Structure' constraint cannot be specified multiple times for the same type parameter.</value>
  </data>
  <data name="ERR_NewAndValueConstraintsCombined" xml:space="preserve">
    <value>'New' constraint and 'Structure' constraint cannot be combined.</value>
  </data>
  <data name="ERR_RefAndValueConstraintsCombined" xml:space="preserve">
    <value>'Class' constraint and 'Structure' constraint cannot be combined.</value>
  </data>
  <data name="ERR_BadTypeArgForStructConstraint2" xml:space="preserve">
    <value>Type argument '{0}' does not satisfy the 'Structure' constraint for type parameter '{1}'.</value>
  </data>
  <data name="ERR_BadTypeArgForRefConstraint2" xml:space="preserve">
    <value>Type argument '{0}' does not satisfy the 'Class' constraint for type parameter '{1}'.</value>
  </data>
  <data name="ERR_RefAndClassTypeConstrCombined" xml:space="preserve">
    <value>'Class' constraint and a specific class type constraint cannot be combined.</value>
  </data>
  <data name="ERR_ValueAndClassTypeConstrCombined" xml:space="preserve">
    <value>'Structure' constraint and a specific class type constraint cannot be combined.</value>
  </data>
  <data name="ERR_ConstraintClashIndirectIndirect4" xml:space="preserve">
    <value>Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the indirect constraint '{2}' obtained from the type parameter constraint '{3}'.</value>
  </data>
  <data name="ERR_ConstraintClashDirectIndirect3" xml:space="preserve">
    <value>Constraint '{0}' conflicts with the indirect constraint '{1}' obtained from the type parameter constraint '{2}'.</value>
  </data>
  <data name="ERR_ConstraintClashIndirectDirect3" xml:space="preserve">
    <value>Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the constraint '{2}'.</value>
  </data>
  <data name="ERR_ConstraintCycleLink2" xml:space="preserve">
    <value>
    '{0}' is constrained to '{1}'.</value>
  </data>
  <data name="ERR_ConstraintCycle2" xml:space="preserve">
    <value>Type parameter '{0}' cannot be constrained to itself: {1}</value>
  </data>
  <data name="ERR_TypeParamWithStructConstAsConst" xml:space="preserve">
    <value>Type parameter with a 'Structure' constraint cannot be used as a constraint.</value>
  </data>
  <data name="ERR_NullableDisallowedForStructConstr1" xml:space="preserve">
    <value>'System.Nullable' does not satisfy the 'Structure' constraint for type parameter '{0}'. Only non-nullable 'Structure' types are allowed.</value>
  </data>
  <data name="ERR_ConflictingDirectConstraints3" xml:space="preserve">
    <value>Constraint '{0}' conflicts with the constraint '{1}' already specified for type parameter '{2}'.</value>
  </data>
  <data name="ERR_InterfaceUnifiesWithInterface2" xml:space="preserve">
    <value>Cannot inherit interface '{0}' because it could be identical to interface '{1}' for some type arguments.</value>
  </data>
  <data name="ERR_BaseUnifiesWithInterfaces3" xml:space="preserve">
    <value>Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' for some type arguments.</value>
  </data>
  <data name="ERR_InterfaceBaseUnifiesWithBase4" xml:space="preserve">
    <value>Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the interface '{3}' inherits for some type arguments.</value>
  </data>
  <data name="ERR_InterfaceUnifiesWithBase3" xml:space="preserve">
    <value>Cannot inherit interface '{0}' because it could be identical to interface '{1}' from which the interface '{2}' inherits for some type arguments.</value>
  </data>
  <data name="ERR_ClassInheritsBaseUnifiesWithInterfaces3" xml:space="preserve">
    <value>Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to implemented interface '{2}' for some type arguments.</value>
  </data>
  <data name="ERR_ClassInheritsInterfaceBaseUnifiesWithBase4" xml:space="preserve">
    <value>Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the implemented interface '{3}' inherits for some type arguments.</value>
  </data>
  <data name="ERR_ClassInheritsInterfaceUnifiesWithBase3" xml:space="preserve">
    <value>Cannot implement interface '{0}' because it could be identical to interface '{1}' from which the implemented interface '{2}' inherits for some type arguments.</value>
  </data>
  <data name="ERR_OptionalsCantBeStructGenericParams" xml:space="preserve">
    <value>Generic parameters used as optional parameter types must be class constrained.</value>
  </data>
  <data name="ERR_AddressOfNullableMethod" xml:space="preserve">
    <value>Methods of 'System.Nullable(Of T)' cannot be used as operands of the 'AddressOf' operator.</value>
  </data>
  <data name="ERR_IsOperatorNullable1" xml:space="preserve">
    <value>'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</value>
  </data>
  <data name="ERR_IsNotOperatorNullable1" xml:space="preserve">
    <value>'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</value>
  </data>
  <data name="ERR_ShadowingTypeOutsideClass1" xml:space="preserve">
    <value>'{0}' cannot be declared 'Shadows' outside of a class, structure, or interface.</value>
  </data>
  <data name="ERR_PropertySetParamCollisionWithValue" xml:space="preserve">
    <value>Property parameters cannot have the name 'Value'.</value>
  </data>
  <data name="ERR_SxSIndirectRefHigherThanDirectRef3" xml:space="preserve">
    <value>The project currently contains references to more than one version of '{0}', a direct reference to version {2} and an indirect reference to version {1}. Change the direct reference to use version {1} (or higher) of {0}.</value>
  </data>
  <data name="ERR_DuplicateReferenceStrong" xml:space="preserve">
    <value>Multiple assemblies with equivalent identity have been imported: '{0}' and '{1}'. Remove one of the duplicate references.</value>
  </data>
  <data name="ERR_DuplicateReference2" xml:space="preserve">
    <value>Project already has a reference to assembly '{0}'. A second reference to '{1}' cannot be added.</value>
  </data>
  <data name="ERR_IllegalCallOrIndex" xml:space="preserve">
    <value>Illegal call expression or index expression.</value>
  </data>
  <data name="ERR_ConflictDefaultPropertyAttribute" xml:space="preserve">
    <value>Conflict between the default property and the 'DefaultMemberAttribute' defined on '{0}'.</value>
  </data>
  <data name="ERR_BadAttributeUuid2" xml:space="preserve">
    <value>'{0}' cannot be applied because the format of the GUID '{1}' is not correct.</value>
  </data>
  <data name="ERR_ComClassAndReservedAttribute1" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' and '{0}' cannot both be applied to the same class.</value>
  </data>
  <data name="ERR_ComClassRequiresPublicClass2" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because its container '{1}' is not declared 'Public'.</value>
  </data>
  <data name="ERR_ComClassReservedDispIdZero1" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves zero for the default property.</value>
  </data>
  <data name="ERR_ComClassReservedDispId1" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves values less than zero.</value>
  </data>
  <data name="ERR_ComClassDuplicateGuids1" xml:space="preserve">
    <value>'InterfaceId' and 'EventsId' parameters for 'Microsoft.VisualBasic.ComClassAttribute' on '{0}' cannot have the same value.</value>
  </data>
  <data name="ERR_ComClassCantBeAbstract0" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is declared 'MustInherit'.</value>
  </data>
  <data name="ERR_ComClassRequiresPublicClass1" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because it is not declared 'Public'.</value>
  </data>
  <data name="ERR_UnknownOperator" xml:space="preserve">
    <value>Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</value>
  </data>
  <data name="ERR_DuplicateConversionCategoryUsed" xml:space="preserve">
    <value>'Widening' and 'Narrowing' cannot be combined.</value>
  </data>
  <data name="ERR_OperatorNotOverloadable" xml:space="preserve">
    <value>Operator is not overloadable. Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</value>
  </data>
  <data name="ERR_InvalidHandles" xml:space="preserve">
    <value>'Handles' is not valid on operator declarations.</value>
  </data>
  <data name="ERR_InvalidImplements" xml:space="preserve">
    <value>'Implements' is not valid on operator declarations.</value>
  </data>
  <data name="ERR_EndOperatorExpected" xml:space="preserve">
    <value>'End Operator' expected.</value>
  </data>
  <data name="ERR_EndOperatorNotAtLineStart" xml:space="preserve">
    <value>'End Operator' must be the first statement on a line.</value>
  </data>
  <data name="ERR_InvalidEndOperator" xml:space="preserve">
    <value>'End Operator' must be preceded by a matching 'Operator'.</value>
  </data>
  <data name="ERR_ExitOperatorNotValid" xml:space="preserve">
    <value>'Exit Operator' is not valid. Use 'Return' to exit an operator.</value>
  </data>
  <data name="ERR_ParamArrayIllegal1" xml:space="preserve">
    <value>'{0}' parameters cannot be declared 'ParamArray'.</value>
  </data>
  <data name="ERR_OptionalIllegal1" xml:space="preserve">
    <value>'{0}' parameters cannot be declared 'Optional'.</value>
  </data>
  <data name="ERR_OperatorMustBePublic" xml:space="preserve">
    <value>Operators must be declared 'Public'.</value>
  </data>
  <data name="ERR_OperatorMustBeShared" xml:space="preserve">
    <value>Operators must be declared 'Shared'.</value>
  </data>
  <data name="ERR_BadOperatorFlags1" xml:space="preserve">
    <value>Operators cannot be declared '{0}'.</value>
  </data>
  <data name="ERR_OneParameterRequired1" xml:space="preserve">
    <value>Operator '{0}' must have one parameter.</value>
  </data>
  <data name="ERR_TwoParametersRequired1" xml:space="preserve">
    <value>Operator '{0}' must have two parameters.</value>
  </data>
  <data name="ERR_OneOrTwoParametersRequired1" xml:space="preserve">
    <value>Operator '{0}' must have either one or two parameters.</value>
  </data>
  <data name="ERR_ConvMustBeWideningOrNarrowing" xml:space="preserve">
    <value>Conversion operators must be declared either 'Widening' or 'Narrowing'.</value>
  </data>
  <data name="ERR_OperatorDeclaredInModule" xml:space="preserve">
    <value>Operators cannot be declared in modules.</value>
  </data>
  <data name="ERR_InvalidSpecifierOnNonConversion1" xml:space="preserve">
    <value>Only conversion operators can be declared '{0}'.</value>
  </data>
  <data name="ERR_UnaryParamMustBeContainingType1" xml:space="preserve">
    <value>Parameter of this unary operator must be of the containing type '{0}'.</value>
  </data>
  <data name="ERR_BinaryParamMustBeContainingType1" xml:space="preserve">
    <value>At least one parameter of this binary operator must be of the containing type '{0}'.</value>
  </data>
  <data name="ERR_ConvParamMustBeContainingType1" xml:space="preserve">
    <value>Either the parameter type or the return type of this conversion operator must be of the containing type '{0}'.</value>
  </data>
  <data name="ERR_OperatorRequiresBoolReturnType1" xml:space="preserve">
    <value>Operator '{0}' must have a return type of Boolean.</value>
  </data>
  <data name="ERR_ConversionToSameType" xml:space="preserve">
    <value>Conversion operators cannot convert from a type to the same type.</value>
  </data>
  <data name="ERR_ConversionToInterfaceType" xml:space="preserve">
    <value>Conversion operators cannot convert to an interface type.</value>
  </data>
  <data name="ERR_ConversionToBaseType" xml:space="preserve">
    <value>Conversion operators cannot convert from a type to its base type.</value>
  </data>
  <data name="ERR_ConversionToDerivedType" xml:space="preserve">
    <value>Conversion operators cannot convert from a type to its derived type.</value>
  </data>
  <data name="ERR_ConversionToObject" xml:space="preserve">
    <value>Conversion operators cannot convert to Object.</value>
  </data>
  <data name="ERR_ConversionFromInterfaceType" xml:space="preserve">
    <value>Conversion operators cannot convert from an interface type.</value>
  </data>
  <data name="ERR_ConversionFromBaseType" xml:space="preserve">
    <value>Conversion operators cannot convert from a base type.</value>
  </data>
  <data name="ERR_ConversionFromDerivedType" xml:space="preserve">
    <value>Conversion operators cannot convert from a derived type.</value>
  </data>
  <data name="ERR_ConversionFromObject" xml:space="preserve">
    <value>Conversion operators cannot convert from Object.</value>
  </data>
  <data name="ERR_MatchingOperatorExpected2" xml:space="preserve">
    <value>Matching '{0}' operator is required for '{1}'.</value>
  </data>
  <data name="ERR_UnacceptableLogicalOperator3" xml:space="preserve">
    <value>Return and parameter types of '{0}' must be '{1}' to be used in a '{2}' expression.</value>
  </data>
  <data name="ERR_ConditionOperatorRequired3" xml:space="preserve">
    <value>Type '{0}' must define operator '{1}' to be used in a '{2}' expression.</value>
  </data>
  <data name="ERR_CopyBackTypeMismatch3" xml:space="preserve">
    <value>Cannot copy the value of 'ByRef' parameter '{0}' back to the matching argument because type '{1}' cannot be converted to type '{2}'.</value>
  </data>
  <data name="ERR_ForLoopOperatorRequired2" xml:space="preserve">
    <value>Type '{0}' must define operator '{1}' to be used in a 'For' statement.</value>
  </data>
  <data name="ERR_UnacceptableForLoopOperator2" xml:space="preserve">
    <value>Return and parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</value>
  </data>
  <data name="ERR_UnacceptableForLoopRelOperator2" xml:space="preserve">
    <value>Parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</value>
  </data>
  <data name="ERR_OperatorRequiresIntegerParameter1" xml:space="preserve">
    <value>Operator '{0}' must have a second parameter of type 'Integer' or 'Integer?'.</value>
  </data>
  <data name="ERR_CantSpecifyNullableOnBoth" xml:space="preserve">
    <value>Nullable modifier cannot be specified on both a variable and its type.</value>
  </data>
  <data name="ERR_BadTypeArgForStructConstraintNull" xml:space="preserve">
    <value>Type '{0}' must be a value type or a type argument constrained to 'Structure' in order to be used with 'Nullable' or nullable modifier '?'.</value>
  </data>
  <data name="ERR_CantSpecifyArrayAndNullableOnBoth" xml:space="preserve">
    <value>Nullable modifier '?' and array modifiers '(' and ')' cannot be specified on both a variable and its type.</value>
  </data>
  <data name="ERR_CantSpecifyTypeCharacterOnIIF" xml:space="preserve">
    <value>Expressions used with an 'If' expression cannot contain type characters.</value>
  </data>
  <data name="ERR_IllegalOperandInIIFName" xml:space="preserve">
    <value>'If' operands cannot be named arguments.</value>
  </data>
  <data name="ERR_IllegalOperandInIIFConversion" xml:space="preserve">
    <value>Cannot infer a common type for the second and third operands of the 'If' operator. One must have a widening conversion to the other.</value>
  </data>
  <data name="ERR_IllegalCondTypeInIIF" xml:space="preserve">
    <value>First operand in a binary 'If' expression must be nullable or a reference type.</value>
  </data>
  <data name="ERR_CantCallIIF" xml:space="preserve">
    <value>'If' operator cannot be used in a 'Call' statement.</value>
  </data>
  <data name="ERR_CantSpecifyAsNewAndNullable" xml:space="preserve">
    <value>Nullable modifier cannot be specified in variable declarations with 'As New'.</value>
  </data>
  <data name="ERR_IllegalOperandInIIFConversion2" xml:space="preserve">
    <value>Cannot infer a common type for the first and second operands of the binary 'If' operator. One must have a widening conversion to the other.</value>
  </data>
  <data name="ERR_BadNullTypeInCCExpression" xml:space="preserve">
    <value>Nullable types are not allowed in conditional compilation expressions.</value>
  </data>
  <data name="ERR_NullableImplicit" xml:space="preserve">
    <value>Nullable modifier cannot be used with a variable whose implicit type is 'Object'.</value>
  </data>
  <data name="ERR_MissingRuntimeHelper" xml:space="preserve">
    <value>Requested operation is not available because the runtime library function '{0}' is not defined.</value>
  </data>
  <data name="ERR_ExpectedDotAfterGlobalNameSpace" xml:space="preserve">
    <value>'Global' must be followed by '.' and an identifier.</value>
  </data>
  <data name="ERR_NoGlobalExpectedIdentifier" xml:space="preserve">
    <value>'Global' not allowed in this context; identifier expected.</value>
  </data>
  <data name="ERR_NoGlobalInHandles" xml:space="preserve">
    <value>'Global' not allowed in handles; local name expected.</value>
  </data>
  <data name="ERR_ElseIfNoMatchingIf" xml:space="preserve">
    <value>'ElseIf' must be preceded by a matching 'If' or 'ElseIf'.</value>
  </data>
  <data name="ERR_BadAttributeConstructor2" xml:space="preserve">
    <value>Attribute constructor has a 'ByRef' parameter of type '{0}'; cannot use constructors with byref parameters to apply the attribute.</value>
  </data>
  <data name="ERR_EndUsingWithoutUsing" xml:space="preserve">
    <value>'End Using' must be preceded by a matching 'Using'.</value>
  </data>
  <data name="ERR_ExpectedEndUsing" xml:space="preserve">
    <value>'Using' must end with a matching 'End Using'.</value>
  </data>
  <data name="ERR_GotoIntoUsing" xml:space="preserve">
    <value>'GoTo {0}' is not valid because '{0}' is inside a 'Using' statement that does not contain this statement.</value>
  </data>
  <data name="ERR_UsingRequiresDisposePattern" xml:space="preserve">
    <value>'Using' operand of type '{0}' must implement 'System.IDisposable'.</value>
  </data>
  <data name="ERR_UsingResourceVarNeedsInitializer" xml:space="preserve">
    <value>'Using' resource variable must have an explicit initialization.</value>
  </data>
  <data name="ERR_UsingResourceVarCantBeArray" xml:space="preserve">
    <value>'Using' resource variable type can not be array type.</value>
  </data>
  <data name="ERR_OnErrorInUsing" xml:space="preserve">
    <value>'On Error' statements are not valid within 'Using' statements.</value>
  </data>
  <data name="ERR_PropertyNameConflictInMyCollection" xml:space="preserve">
    <value>'{0}' has the same name as a member used for type '{1}' exposed in a 'My' group. Rename the type or its enclosing namespace.</value>
  </data>
  <data name="ERR_InvalidImplicitVar" xml:space="preserve">
    <value>Implicit variable '{0}' is invalid because of '{1}'.</value>
  </data>
  <data name="ERR_ObjectInitializerRequiresFieldName" xml:space="preserve">
    <value>Object initializers require a field name to initialize.</value>
  </data>
  <data name="ERR_ExpectedFrom" xml:space="preserve">
    <value>'From' expected.</value>
  </data>
  <data name="ERR_LambdaBindingMismatch1" xml:space="preserve">
    <value>Nested function does not have the same signature as delegate '{0}'.</value>
  </data>
  <data name="ERR_LambdaBindingMismatch2" xml:space="preserve">
    <value>Nested sub does not have a signature that is compatible with delegate '{0}'.</value>
  </data>
  <data name="ERR_CannotLiftByRefParamQuery1" xml:space="preserve">
    <value>'ByRef' parameter '{0}' cannot be used in a query expression.</value>
  </data>
  <data name="ERR_ExpressionTreeNotSupported" xml:space="preserve">
    <value>Expression cannot be converted into an expression tree.</value>
  </data>
  <data name="ERR_CannotLiftStructureMeQuery" xml:space="preserve">
    <value>Instance members and 'Me' cannot be used within query expressions in structures.</value>
  </data>
  <data name="ERR_InferringNonArrayType1" xml:space="preserve">
    <value>Variable cannot be initialized with non-array type '{0}'.</value>
  </data>
  <data name="ERR_ByRefParamInExpressionTree" xml:space="preserve">
    <value>References to 'ByRef' parameters cannot be converted to an expression tree.</value>
  </data>
  <data name="ERR_DuplicateAnonTypeMemberName1" xml:space="preserve">
    <value>Anonymous type member or property '{0}' is already declared.</value>
  </data>
  <data name="ERR_BadAnonymousTypeForExprTree" xml:space="preserve">
    <value>Cannot convert anonymous type to an expression tree because a property of the type is used to initialize another property.</value>
  </data>
  <data name="ERR_CannotLiftAnonymousType1" xml:space="preserve">
    <value>Anonymous type property '{0}' cannot be used in the definition of a lambda expression within the same initialization list.</value>
  </data>
  <data name="ERR_ExtensionOnlyAllowedOnModuleSubOrFunction" xml:space="preserve">
    <value>'Extension' attribute can be applied only to 'Module', 'Sub', or 'Function' declarations.</value>
  </data>
  <data name="ERR_ExtensionMethodNotInModule" xml:space="preserve">
    <value>Extension methods can be defined only in modules.</value>
  </data>
  <data name="ERR_ExtensionMethodNoParams" xml:space="preserve">
    <value>Extension methods must declare at least one parameter. The first parameter specifies which type to extend.</value>
  </data>
  <data name="ERR_ExtensionMethodOptionalFirstArg" xml:space="preserve">
    <value>'Optional' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</value>
  </data>
  <data name="ERR_ExtensionMethodParamArrayFirstArg" xml:space="preserve">
    <value>'ParamArray' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</value>
  </data>
  <data name="ERR_AnonymousTypeFieldNameInference" xml:space="preserve">
    <value>Anonymous type member name can be inferred only from a simple or qualified name with no arguments.</value>
  </data>
  <data name="ERR_NameNotMemberOfAnonymousType2" xml:space="preserve">
    <value>'{0}' is not a member of '{1}'; it does not exist in the current context.</value>
  </data>
  <data name="ERR_ExtensionAttributeInvalid" xml:space="preserve">
    <value>The custom-designed version of 'System.Runtime.CompilerServices.ExtensionAttribute' found by the compiler is not valid. Its attribute usage flags must be set to allow assemblies, classes, and methods.</value>
  </data>
  <data name="ERR_AnonymousTypePropertyOutOfOrder1" xml:space="preserve">
    <value>Anonymous type member property '{0}' cannot be used to infer the type of another member property because the type of '{0}' is not yet established.</value>
  </data>
  <data name="ERR_AnonymousTypeDisallowsTypeChar" xml:space="preserve">
    <value>Type characters cannot be used in anonymous type declarations.</value>
  </data>
  <data name="ERR_ExtensionMethodUncallable1" xml:space="preserve">
    <value>Extension method '{0}' has type constraints that can never be satisfied.</value>
  </data>
  <data name="ERR_ExtensionMethodOverloadCandidate3" xml:space="preserve">
    <value>
    Extension method '{0}' defined in '{1}': {2}</value>
  </data>
  <data name="ERR_DelegateBindingMismatch" xml:space="preserve">
    <value>Method does not have a signature compatible with the delegate.</value>
  </data>
  <data name="ERR_DelegateBindingTypeInferenceFails" xml:space="preserve">
    <value>Type arguments could not be inferred from the delegate.</value>
  </data>
  <data name="ERR_TooManyArgs" xml:space="preserve">
    <value>Too many arguments.</value>
  </data>
  <data name="ERR_NamedArgAlsoOmitted1" xml:space="preserve">
    <value>Parameter '{0}' already has a matching omitted argument.</value>
  </data>
  <data name="ERR_NamedArgUsedTwice1" xml:space="preserve">
    <value>Parameter '{0}' already has a matching argument.</value>
  </data>
  <data name="ERR_NamedParamNotFound1" xml:space="preserve">
    <value>'{0}' is not a method parameter.</value>
  </data>
  <data name="ERR_OmittedArgument1" xml:space="preserve">
    <value>Argument not specified for parameter '{0}'.</value>
  </data>
  <data name="ERR_UnboundTypeParam1" xml:space="preserve">
    <value>Type parameter '{0}' cannot be inferred.</value>
  </data>
  <data name="ERR_ExtensionMethodOverloadCandidate2" xml:space="preserve">
    <value>
    Extension method '{0}' defined in '{1}'.</value>
  </data>
  <data name="ERR_AnonymousTypeNeedField" xml:space="preserve">
    <value>Anonymous type must contain at least one member.</value>
  </data>
  <data name="ERR_AnonymousTypeNameWithoutPeriod" xml:space="preserve">
    <value>Anonymous type member name must be preceded by a period.</value>
  </data>
  <data name="ERR_AnonymousTypeExpectedIdentifier" xml:space="preserve">
    <value>Identifier expected, preceded with a period.</value>
  </data>
  <data name="ERR_TooManyArgs2" xml:space="preserve">
    <value>Too many arguments to extension method '{0}' defined in '{1}'.</value>
  </data>
  <data name="ERR_NamedArgAlsoOmitted3" xml:space="preserve">
    <value>Parameter '{0}' in extension method '{1}' defined in '{2}' already has a matching omitted argument.</value>
  </data>
  <data name="ERR_NamedArgUsedTwice3" xml:space="preserve">
    <value>Parameter '{0}' of extension method '{1}' defined in '{2}' already has a matching argument.</value>
  </data>
  <data name="ERR_NamedParamNotFound3" xml:space="preserve">
    <value>'{0}' is not a parameter of extension method '{1}' defined in '{2}'.</value>
  </data>
  <data name="ERR_OmittedArgument3" xml:space="preserve">
    <value>Argument not specified for parameter '{0}' of extension method '{1}' defined in '{2}'.</value>
  </data>
  <data name="ERR_UnboundTypeParam3" xml:space="preserve">
    <value>Type parameter '{0}' for extension method '{1}' defined in '{2}' cannot be inferred.</value>
  </data>
  <data name="ERR_TooFewGenericArguments2" xml:space="preserve">
    <value>Too few type arguments to extension method '{0}' defined in '{1}'.</value>
  </data>
  <data name="ERR_TooManyGenericArguments2" xml:space="preserve">
    <value>Too many type arguments to extension method '{0}' defined in '{1}'.</value>
  </data>
  <data name="ERR_ExpectedInOrEq" xml:space="preserve">
    <value>'In' or '=' expected.</value>
  </data>
  <data name="ERR_ExpectedQueryableSource" xml:space="preserve">
    <value>Expression of type '{0}' is not queryable. Make sure you are not missing an assembly reference and/or namespace import for the LINQ provider.</value>
  </data>
  <data name="ERR_QueryOperatorNotFound" xml:space="preserve">
    <value>Definition of method '{0}' is not accessible in this context.</value>
  </data>
  <data name="ERR_CannotUseOnErrorGotoWithClosure" xml:space="preserve">
    <value>Method cannot contain both a '{0}' statement and a definition of a variable that is used in a lambda or query expression.</value>
  </data>
  <data name="ERR_CannotGotoNonScopeBlocksWithClosure" xml:space="preserve">
    <value>'{0}{1}' is not valid because '{2}' is inside a scope that defines a variable that is used in a lambda or query expression.</value>
  </data>
  <data name="ERR_CannotLiftRestrictedTypeQuery" xml:space="preserve">
    <value>Instance of restricted type '{0}' cannot be used in a query expression.</value>
  </data>
  <data name="ERR_QueryAnonymousTypeFieldNameInference" xml:space="preserve">
    <value>Range variable name can be inferred only from a simple or qualified name with no arguments.</value>
  </data>
  <data name="ERR_QueryDuplicateAnonTypeMemberName1" xml:space="preserve">
    <value>Range variable '{0}' is already declared.</value>
  </data>
  <data name="ERR_QueryAnonymousTypeDisallowsTypeChar" xml:space="preserve">
    <value>Type characters cannot be used in range variable declarations.</value>
  </data>
  <data name="ERR_ReadOnlyInClosure" xml:space="preserve">
    <value>'ReadOnly' variable cannot be the target of an assignment in a lambda expression inside a constructor.</value>
  </data>
  <data name="ERR_ExprTreeNoMultiDimArrayCreation" xml:space="preserve">
    <value>Multi-dimensional array cannot be converted to an expression tree.</value>
  </data>
  <data name="ERR_ExprTreeNoLateBind" xml:space="preserve">
    <value>Late binding operations cannot be converted to an expression tree.</value>
  </data>
  <data name="ERR_ExpectedBy" xml:space="preserve">
    <value>'By' expected.</value>
  </data>
  <data name="ERR_QueryInvalidControlVariableName1" xml:space="preserve">
    <value>Range variable name cannot match the name of a member of the 'Object' class.</value>
  </data>
  <data name="ERR_ExpectedIn" xml:space="preserve">
    <value>'In' expected.</value>
  </data>
  <data name="ERR_QueryNameNotDeclared" xml:space="preserve">
    <value>Name '{0}' is either not declared or not in the current scope.</value>
  </data>
  <data name="ERR_NestedFunctionArgumentNarrowing3" xml:space="preserve">
    <value>Return type of nested function matching parameter '{0}' narrows from '{1}' to '{2}'.</value>
  </data>
  <data name="ERR_AnonTypeFieldXMLNameInference" xml:space="preserve">
    <value>Anonymous type member name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</value>
  </data>
  <data name="ERR_QueryAnonTypeFieldXMLNameInference" xml:space="preserve">
    <value>Range variable name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</value>
  </data>
  <data name="ERR_ExpectedInto" xml:space="preserve">
    <value>'Into' expected.</value>
  </data>
  <data name="ERR_TypeCharOnAggregation" xml:space="preserve">
    <value>Aggregate function name cannot be used with a type character.</value>
  </data>
  <data name="ERR_ExpectedOn" xml:space="preserve">
    <value>'On' expected.</value>
  </data>
  <data name="ERR_ExpectedEquals" xml:space="preserve">
    <value>'Equals' expected.</value>
  </data>
  <data name="ERR_ExpectedAnd" xml:space="preserve">
    <value>'And' expected.</value>
  </data>
  <data name="ERR_EqualsTypeMismatch" xml:space="preserve">
    <value>'Equals' cannot compare a value of type '{0}' with a value of type '{1}'.</value>
  </data>
  <data name="ERR_EqualsOperandIsBad" xml:space="preserve">
    <value>You must reference at least one range variable on both sides of the 'Equals' operator. Range variable(s) {0} must appear on one side of the 'Equals' operator, and range variable(s) {1} must appear on the other.</value>
  </data>
  <data name="ERR_LambdaNotDelegate1" xml:space="preserve">
    <value>Lambda expression cannot be converted to '{0}' because '{0}' is not a delegate type.</value>
  </data>
  <data name="ERR_LambdaNotCreatableDelegate1" xml:space="preserve">
    <value>Lambda expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</value>
  </data>
  <data name="ERR_CannotInferNullableForVariable1" xml:space="preserve">
    <value>A nullable type cannot be inferred for variable '{0}'.</value>
  </data>
  <data name="ERR_NullableTypeInferenceNotSupported" xml:space="preserve">
    <value>Nullable type inference is not supported in this context.</value>
  </data>
  <data name="ERR_ExpectedJoin" xml:space="preserve">
    <value>'Join' expected.</value>
  </data>
  <data name="ERR_NullableParameterMustSpecifyType" xml:space="preserve">
    <value>Nullable parameters must specify a type.</value>
  </data>
  <data name="ERR_IterationVariableShadowLocal2" xml:space="preserve">
    <value>Range variable '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</value>
  </data>
  <data name="ERR_LambdasCannotHaveAttributes" xml:space="preserve">
    <value>Attributes cannot be applied to parameters of lambda expressions.</value>
  </data>
  <data name="ERR_LambdaInSelectCaseExpr" xml:space="preserve">
    <value>Lambda expressions are not valid in the first expression of a 'Select Case' statement.</value>
  </data>
  <data name="ERR_AddressOfInSelectCaseExpr" xml:space="preserve">
    <value>'AddressOf' expressions are not valid in the first expression of a 'Select Case' statement.</value>
  </data>
  <data name="ERR_NullableCharNotSupported" xml:space="preserve">
    <value>The '?' character cannot be used here.</value>
  </data>
  <data name="ERR_CannotLiftStructureMeLambda" xml:space="preserve">
    <value>Instance members and 'Me' cannot be used within a lambda expression in structures.</value>
  </data>
  <data name="ERR_CannotLiftByRefParamLambda1" xml:space="preserve">
    <value>'ByRef' parameter '{0}' cannot be used in a lambda expression.</value>
  </data>
  <data name="ERR_CannotLiftRestrictedTypeLambda" xml:space="preserve">
    <value>Instance of restricted type '{0}' cannot be used in a lambda expression.</value>
  </data>
  <data name="ERR_LambdaParamShadowLocal1" xml:space="preserve">
    <value>Lambda parameter '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</value>
  </data>
  <data name="ERR_StrictDisallowImplicitObjectLambda" xml:space="preserve">
    <value>Option Strict On requires each lambda expression parameter to be declared with an 'As' clause if its type cannot be inferred.</value>
  </data>
  <data name="ERR_CantSpecifyParamsOnLambdaParamNoType" xml:space="preserve">
    <value>Array modifiers cannot be specified on lambda expression parameter name. They must be specified on its type.</value>
  </data>
  <data name="ERR_TypeInferenceFailure1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailure2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailure3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicit1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicit2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicit3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments.</value>
  </data>
  <data name="ERR_TypeInferenceFailureAmbiguous1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureAmbiguous2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureAmbiguous3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitAmbiguous1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitAmbiguous2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitAmbiguous3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoBest1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoBest2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoBest3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitNoBest1" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitNoBest2" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type.</value>
  </data>
  <data name="ERR_TypeInferenceFailureNoExplicitNoBest3" xml:space="preserve">
    <value>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type.</value>
  </data>
  <data name="ERR_DelegateBindingMismatchStrictOff2" xml:space="preserve">
    <value>Option Strict On does not allow narrowing in implicit type conversions between method '{0}' and delegate '{1}'.</value>
  </data>
  <data name="ERR_InaccessibleReturnTypeOfMember2" xml:space="preserve">
    <value>'{0}' is not accessible in this context because the return type is not accessible.</value>
  </data>
  <data name="ERR_ExpectedIdentifierOrGroup" xml:space="preserve">
    <value>'Group' or an identifier expected.</value>
  </data>
  <data name="ERR_UnexpectedGroup" xml:space="preserve">
    <value>'Group' not allowed in this context; identifier expected.</value>
  </data>
  <data name="ERR_DelegateBindingMismatchStrictOff3" xml:space="preserve">
    <value>Option Strict On does not allow narrowing in implicit type conversions between extension method '{0}' defined in '{2}' and delegate '{1}'.</value>
  </data>
  <data name="ERR_DelegateBindingIncompatible3" xml:space="preserve">
    <value>Extension Method '{0}' defined in '{2}' does not have a signature compatible with delegate '{1}'.</value>
  </data>
  <data name="ERR_ArgumentNarrowing2" xml:space="preserve">
    <value>Argument matching parameter '{0}' narrows to '{1}'.</value>
  </data>
  <data name="ERR_OverloadCandidate1" xml:space="preserve">
    <value>
    {0}</value>
  </data>
  <data name="ERR_AutoPropertyInitializedInStructure" xml:space="preserve">
    <value>Auto-implemented Properties contained in Structures cannot have initializers unless they are marked 'Shared'.</value>
  </data>
  <data name="ERR_TypeDisallowsElements" xml:space="preserve">
    <value>XML elements cannot be selected from type '{0}'.</value>
  </data>
  <data name="ERR_TypeDisallowsAttributes" xml:space="preserve">
    <value>XML attributes cannot be selected from type '{0}'.</value>
  </data>
  <data name="ERR_TypeDisallowsDescendants" xml:space="preserve">
    <value>XML descendant elements cannot be selected from type '{0}'.</value>
  </data>
  <data name="ERR_TypeOrMemberNotGeneric2" xml:space="preserve">
    <value>Extension method '{0}' defined in '{1}' is not generic (or has no free type parameters) and so cannot have type arguments.</value>
  </data>
  <data name="ERR_ExtensionMethodCannotBeLateBound" xml:space="preserve">
    <value>Late-bound extension methods are not supported.</value>
  </data>
  <data name="ERR_TypeInferenceArrayRankMismatch1" xml:space="preserve">
    <value>Cannot infer a data type for '{0}' because the array dimensions do not match.</value>
  </data>
  <data name="ERR_QueryStrictDisallowImplicitObject" xml:space="preserve">
    <value>Type of the range variable cannot be inferred, and late binding is not allowed with Option Strict on. Use an 'As' clause to specify the type.</value>
  </data>
  <data name="ERR_CannotEmbedInterfaceWithGeneric" xml:space="preserve">
    <value>Type '{0}' cannot be embedded because it has generic argument. Consider disabling the embedding of interop types.</value>
  </data>
  <data name="ERR_CannotUseGenericTypeAcrossAssemblyBoundaries" xml:space="preserve">
    <value>Type '{0}' cannot be used across assembly boundaries because it has a generic type parameter that is an embedded interop type.</value>
  </data>
  <data name="WRN_UseOfObsoleteSymbol2" xml:space="preserve">
    <value>'{0}' is obsolete: '{1}'.</value>
  </data>
  <data name="WRN_UseOfObsoleteSymbol2_Title" xml:space="preserve">
    <value>Type or member is obsolete</value>
  </data>
  <data name="WRN_MustOverloadBase4" xml:space="preserve">
    <value>{0} '{1}' shadows an overloadable member declared in the base {2} '{3}'.  If you want to overload the base method, this method must be declared 'Overloads'.</value>
  </data>
  <data name="WRN_MustOverloadBase4_Title" xml:space="preserve">
    <value>Member shadows an overloadable member declared in the base type</value>
  </data>
  <data name="WRN_OverrideType5" xml:space="preserve">
    <value>{0} '{1}' conflicts with {2} '{1}' in the base {3} '{4}' and should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_OverrideType5_Title" xml:space="preserve">
    <value>Member conflicts with member in the base type and should be declared 'Shadows'</value>
  </data>
  <data name="WRN_MustOverride2" xml:space="preserve">
    <value>{0} '{1}' shadows an overridable method in the base {2} '{3}'. To override the base method, this method must be declared 'Overrides'.</value>
  </data>
  <data name="WRN_MustOverride2_Title" xml:space="preserve">
    <value>Member shadows an overridable method in the base type</value>
  </data>
  <data name="WRN_DefaultnessShadowed4" xml:space="preserve">
    <value>Default property '{0}' conflicts with the default property '{1}' in the base {2} '{3}'. '{0}' will be the default property. '{0}' should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_DefaultnessShadowed4_Title" xml:space="preserve">
    <value>Default property conflicts with the default property in the base type</value>
  </data>
  <data name="WRN_UseOfObsoleteSymbolNoMessage1" xml:space="preserve">
    <value>'{0}' is obsolete.</value>
  </data>
  <data name="WRN_UseOfObsoleteSymbolNoMessage1_Title" xml:space="preserve">
    <value>Type or member is obsolete</value>
  </data>
  <data name="WRN_AssemblyGeneration0" xml:space="preserve">
    <value>Possible problem detected while building assembly: {0}</value>
  </data>
  <data name="WRN_AssemblyGeneration0_Title" xml:space="preserve">
    <value>Possible problem detected while building assembly</value>
  </data>
  <data name="WRN_AssemblyGeneration1" xml:space="preserve">
    <value>Possible problem detected while building assembly '{0}': {1}</value>
  </data>
  <data name="WRN_AssemblyGeneration1_Title" xml:space="preserve">
    <value>Possible problem detected while building assembly</value>
  </data>
  <data name="WRN_ComClassNoMembers1" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' is specified for class '{0}' but '{0}' has no public members that can be exposed to COM; therefore, no COM interfaces are generated.</value>
  </data>
  <data name="WRN_ComClassNoMembers1_Title" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' is specified for class but class has no public members that can be exposed to COM</value>
  </data>
  <data name="WRN_SynthMemberShadowsMember5" xml:space="preserve">
    <value>{0} '{1}' implicitly declares '{2}', which conflicts with a member in the base {3} '{4}', and so the {0} should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_SynthMemberShadowsMember5_Title" xml:space="preserve">
    <value>Property or event implicitly declares type or member that conflicts with a member in the base type</value>
  </data>
  <data name="WRN_MemberShadowsSynthMember6" xml:space="preserve">
    <value>{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in the base {4} '{5}' and should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_MemberShadowsSynthMember6_Title" xml:space="preserve">
    <value>Member conflicts with a member implicitly declared for property or event in the base type</value>
  </data>
  <data name="WRN_SynthMemberShadowsSynthMember7" xml:space="preserve">
    <value>{0} '{1}' implicitly declares '{2}', which conflicts with a member implicitly declared for {3} '{4}' in the base {5} '{6}'. {0} should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_SynthMemberShadowsSynthMember7_Title" xml:space="preserve">
    <value>Property or event implicitly declares member, which conflicts with a member implicitly declared for property or event in the base type</value>
  </data>
  <data name="WRN_UseOfObsoletePropertyAccessor3" xml:space="preserve">
    <value>'{0}' accessor of '{1}' is obsolete: '{2}'.</value>
  </data>
  <data name="WRN_UseOfObsoletePropertyAccessor3_Title" xml:space="preserve">
    <value>Property accessor is obsolete</value>
  </data>
  <data name="WRN_UseOfObsoletePropertyAccessor2" xml:space="preserve">
    <value>'{0}' accessor of '{1}' is obsolete.</value>
  </data>
  <data name="WRN_UseOfObsoletePropertyAccessor2_Title" xml:space="preserve">
    <value>Property accessor is obsolete</value>
  </data>
  <data name="WRN_FieldNotCLSCompliant1" xml:space="preserve">
    <value>Type of member '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_FieldNotCLSCompliant1_Title" xml:space="preserve">
    <value>Type of member is not CLS-compliant</value>
  </data>
  <data name="WRN_BaseClassNotCLSCompliant2" xml:space="preserve">
    <value>'{0}' is not CLS-compliant because it derives from '{1}', which is not CLS-compliant.</value>
  </data>
  <data name="WRN_BaseClassNotCLSCompliant2_Title" xml:space="preserve">
    <value>Type is not CLS-compliant because it derives from base type that is not CLS-compliant</value>
  </data>
  <data name="WRN_ProcTypeNotCLSCompliant1" xml:space="preserve">
    <value>Return type of function '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_ProcTypeNotCLSCompliant1_Title" xml:space="preserve">
    <value>Return type of function is not CLS-compliant</value>
  </data>
  <data name="WRN_ParamNotCLSCompliant1" xml:space="preserve">
    <value>Type of parameter '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_ParamNotCLSCompliant1_Title" xml:space="preserve">
    <value>Type of parameter is not CLS-compliant</value>
  </data>
  <data name="WRN_InheritedInterfaceNotCLSCompliant2" xml:space="preserve">
    <value>'{0}' is not CLS-compliant because the interface '{1}' it inherits from is not CLS-compliant.</value>
  </data>
  <data name="WRN_InheritedInterfaceNotCLSCompliant2_Title" xml:space="preserve">
    <value>Type is not CLS-compliant because the interface it inherits from is not CLS-compliant</value>
  </data>
  <data name="WRN_CLSMemberInNonCLSType3" xml:space="preserve">
    <value>{0} '{1}' cannot be marked CLS-compliant because its containing type '{2}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_CLSMemberInNonCLSType3_Title" xml:space="preserve">
    <value>Member cannot be marked CLS-compliant because its containing type is not CLS-compliant</value>
  </data>
  <data name="WRN_NameNotCLSCompliant1" xml:space="preserve">
    <value>Name '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_NameNotCLSCompliant1_Title" xml:space="preserve">
    <value>Name is not CLS-compliant</value>
  </data>
  <data name="WRN_EnumUnderlyingTypeNotCLS1" xml:space="preserve">
    <value>Underlying type '{0}' of Enum is not CLS-compliant.</value>
  </data>
  <data name="WRN_EnumUnderlyingTypeNotCLS1_Title" xml:space="preserve">
    <value>Underlying type of Enum is not CLS-compliant</value>
  </data>
  <data name="WRN_NonCLSMemberInCLSInterface1" xml:space="preserve">
    <value>Non CLS-compliant '{0}' is not allowed in a CLS-compliant interface.</value>
  </data>
  <data name="WRN_NonCLSMemberInCLSInterface1_Title" xml:space="preserve">
    <value>Non CLS-compliant member is not allowed in a CLS-compliant interface</value>
  </data>
  <data name="WRN_NonCLSMustOverrideInCLSType1" xml:space="preserve">
    <value>Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type '{0}'.</value>
  </data>
  <data name="WRN_NonCLSMustOverrideInCLSType1_Title" xml:space="preserve">
    <value>Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type</value>
  </data>
  <data name="WRN_ArrayOverloadsNonCLS2" xml:space="preserve">
    <value>'{0}' is not CLS-compliant because it overloads '{1}' which differs from it only by array of array parameter types or by the rank of the array parameter types.</value>
  </data>
  <data name="WRN_ArrayOverloadsNonCLS2_Title" xml:space="preserve">
    <value>Method is not CLS-compliant because it overloads method which differs from it only by array of array parameter types or by the rank of the array parameter types</value>
  </data>
  <data name="WRN_RootNamespaceNotCLSCompliant1" xml:space="preserve">
    <value>Root namespace '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_RootNamespaceNotCLSCompliant1_Title" xml:space="preserve">
    <value>Root namespace is not CLS-compliant</value>
  </data>
  <data name="WRN_RootNamespaceNotCLSCompliant2" xml:space="preserve">
    <value>Name '{0}' in the root namespace '{1}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_RootNamespaceNotCLSCompliant2_Title" xml:space="preserve">
    <value>Part of the root namespace is not CLS-compliant</value>
  </data>
  <data name="WRN_GenericConstraintNotCLSCompliant1" xml:space="preserve">
    <value>Generic parameter constraint type '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_GenericConstraintNotCLSCompliant1_Title" xml:space="preserve">
    <value>Generic parameter constraint type is not CLS-compliant</value>
  </data>
  <data name="WRN_TypeNotCLSCompliant1" xml:space="preserve">
    <value>Type '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_TypeNotCLSCompliant1_Title" xml:space="preserve">
    <value>Type is not CLS-compliant</value>
  </data>
  <data name="WRN_OptionalValueNotCLSCompliant1" xml:space="preserve">
    <value>Type of optional value for optional parameter '{0}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_OptionalValueNotCLSCompliant1_Title" xml:space="preserve">
    <value>Type of optional value for optional parameter is not CLS-compliant</value>
  </data>
  <data name="WRN_CLSAttrInvalidOnGetSet" xml:space="preserve">
    <value>System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'.</value>
  </data>
  <data name="WRN_CLSAttrInvalidOnGetSet_Title" xml:space="preserve">
    <value>System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'</value>
  </data>
  <data name="WRN_TypeConflictButMerged6" xml:space="preserve">
    <value>{0} '{1}' and partial {2} '{3}' conflict in {4} '{5}', but are being merged because one of them is declared partial.</value>
  </data>
  <data name="WRN_TypeConflictButMerged6_Title" xml:space="preserve">
    <value>Type and partial type conflict, but are being merged because one of them is declared partial</value>
  </data>
  <data name="WRN_ShadowingGenericParamWithParam1" xml:space="preserve">
    <value>Type parameter '{0}' has the same name as a type parameter of an enclosing type. Enclosing type's type parameter will be shadowed.</value>
  </data>
  <data name="WRN_ShadowingGenericParamWithParam1_Title" xml:space="preserve">
    <value>Type parameter has the same name as a type parameter of an enclosing type</value>
  </data>
  <data name="WRN_CannotFindStandardLibrary1" xml:space="preserve">
    <value>Could not find standard library '{0}'.</value>
  </data>
  <data name="WRN_CannotFindStandardLibrary1_Title" xml:space="preserve">
    <value>Could not find standard library</value>
  </data>
  <data name="WRN_EventDelegateTypeNotCLSCompliant2" xml:space="preserve">
    <value>Delegate type '{0}' of event '{1}' is not CLS-compliant.</value>
  </data>
  <data name="WRN_EventDelegateTypeNotCLSCompliant2_Title" xml:space="preserve">
    <value>Delegate type of event is not CLS-compliant</value>
  </data>
  <data name="WRN_DebuggerHiddenIgnoredOnProperties" xml:space="preserve">
    <value>System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition.  Apply the attribute directly to the 'Get' and 'Set' procedures as appropriate.</value>
  </data>
  <data name="WRN_DebuggerHiddenIgnoredOnProperties_Title" xml:space="preserve">
    <value>System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition</value>
  </data>
  <data name="WRN_SelectCaseInvalidRange" xml:space="preserve">
    <value>Range specified for 'Case' statement is not valid. Make sure that the lower bound is less than or equal to the upper bound.</value>
  </data>
  <data name="WRN_SelectCaseInvalidRange_Title" xml:space="preserve">
    <value>Range specified for 'Case' statement is not valid</value>
  </data>
  <data name="WRN_CLSEventMethodInNonCLSType3" xml:space="preserve">
    <value>'{0}' method for event '{1}' cannot be marked CLS compliant because its containing type '{2}' is not CLS compliant.</value>
  </data>
  <data name="WRN_CLSEventMethodInNonCLSType3_Title" xml:space="preserve">
    <value>AddHandler or RemoveHandler method for event cannot be marked CLS compliant because its containing type is not CLS compliant</value>
  </data>
  <data name="WRN_ExpectedInitComponentCall2" xml:space="preserve">
    <value>'{0}' in designer-generated type '{1}' should call InitializeComponent method.</value>
  </data>
  <data name="WRN_ExpectedInitComponentCall2_Title" xml:space="preserve">
    <value>Constructor in designer-generated type should call InitializeComponent method</value>
  </data>
  <data name="WRN_NamespaceCaseMismatch3" xml:space="preserve">
    <value>Casing of namespace name '{0}' does not match casing of namespace name '{1}' in '{2}'.</value>
  </data>
  <data name="WRN_NamespaceCaseMismatch3_Title" xml:space="preserve">
    <value>Casing of namespace name does not match</value>
  </data>
  <data name="WRN_UndefinedOrEmptyNamespaceOrClass1" xml:space="preserve">
    <value>Namespace or type specified in the Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</value>
  </data>
  <data name="WRN_UndefinedOrEmptyNamespaceOrClass1_Title" xml:space="preserve">
    <value>Namespace or type specified in Imports statement doesn't contain any public member or cannot be found</value>
  </data>
  <data name="WRN_UndefinedOrEmptyProjectNamespaceOrClass1" xml:space="preserve">
    <value>Namespace or type specified in the project-level Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</value>
  </data>
  <data name="WRN_UndefinedOrEmptyProjectNamespaceOrClass1_Title" xml:space="preserve">
    <value>Namespace or type imported at project level doesn't contain any public member or cannot be found</value>
  </data>
  <data name="WRN_IndirectRefToLinkedAssembly2" xml:space="preserve">
    <value>A reference was created to embedded interop assembly '{0}' because of an indirect reference to that assembly from assembly '{1}'. Consider changing the 'Embed Interop Types' property on either assembly.</value>
  </data>
  <data name="WRN_IndirectRefToLinkedAssembly2_Title" xml:space="preserve">
    <value>A reference was created to embedded interop assembly because of an indirect reference to that assembly</value>
  </data>
  <data name="WRN_NoNonObsoleteConstructorOnBase3" xml:space="preserve">
    <value>Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</value>
  </data>
  <data name="WRN_NoNonObsoleteConstructorOnBase3_Title" xml:space="preserve">
    <value>Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</value>
  </data>
  <data name="WRN_NoNonObsoleteConstructorOnBase4" xml:space="preserve">
    <value>Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</value>
  </data>
  <data name="WRN_NoNonObsoleteConstructorOnBase4_Title" xml:space="preserve">
    <value>Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</value>
  </data>
  <data name="WRN_RequiredNonObsoleteNewCall3" xml:space="preserve">
    <value>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</value>
  </data>
  <data name="WRN_RequiredNonObsoleteNewCall3_Title" xml:space="preserve">
    <value>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</value>
  </data>
  <data name="WRN_RequiredNonObsoleteNewCall4" xml:space="preserve">
    <value>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'</value>
  </data>
  <data name="WRN_RequiredNonObsoleteNewCall4_Title" xml:space="preserve">
    <value>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</value>
  </data>
  <data name="WRN_MissingAsClauseinOperator" xml:space="preserve">
    <value>Operator without an 'As' clause; type of Object assumed.</value>
  </data>
  <data name="WRN_MissingAsClauseinOperator_Title" xml:space="preserve">
    <value>Operator without an 'As' clause</value>
  </data>
  <data name="WRN_ConstraintsFailedForInferredArgs2" xml:space="preserve">
    <value>Type arguments inferred for method '{0}' result in the following warnings :{1}</value>
  </data>
  <data name="WRN_ConstraintsFailedForInferredArgs2_Title" xml:space="preserve">
    <value>Type arguments inferred for method result in warnings</value>
  </data>
  <data name="WRN_ConditionalNotValidOnFunction" xml:space="preserve">
    <value>Attribute 'Conditional' is only valid on 'Sub' declarations.</value>
  </data>
  <data name="WRN_ConditionalNotValidOnFunction_Title" xml:space="preserve">
    <value>Attribute 'Conditional' is only valid on 'Sub' declarations</value>
  </data>
  <data name="WRN_UseSwitchInsteadOfAttribute" xml:space="preserve">
    <value>Use command-line option '{0}' or appropriate project settings instead of '{1}'.</value>
  </data>
  <data name="WRN_UseSwitchInsteadOfAttribute_Title" xml:space="preserve">
    <value>Use command-line option /keyfile, /keycontainer, or /delaysign instead of AssemblyKeyFileAttribute, AssemblyKeyNameAttribute, or AssemblyDelaySignAttribute</value>
  </data>
  <data name="WRN_RecursiveAddHandlerCall" xml:space="preserve">
    <value>Statement recursively calls the containing '{0}' for event '{1}'.</value>
  </data>
  <data name="WRN_RecursiveAddHandlerCall_Title" xml:space="preserve">
    <value>Statement recursively calls the event's containing AddHandler</value>
  </data>
  <data name="WRN_ImplicitConversionCopyBack" xml:space="preserve">
    <value>Implicit conversion from '{1}' to '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</value>
  </data>
  <data name="WRN_ImplicitConversionCopyBack_Title" xml:space="preserve">
    <value>Implicit conversion in copying the value of 'ByRef' parameter back to the matching argument</value>
  </data>
  <data name="WRN_MustShadowOnMultipleInheritance2" xml:space="preserve">
    <value>{0} '{1}' conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'.</value>
  </data>
  <data name="WRN_MustShadowOnMultipleInheritance2_Title" xml:space="preserve">
    <value>Method conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'</value>
  </data>
  <data name="WRN_RecursiveOperatorCall" xml:space="preserve">
    <value>Expression recursively calls the containing Operator '{0}'.</value>
  </data>
  <data name="WRN_RecursiveOperatorCall_Title" xml:space="preserve">
    <value>Expression recursively calls the containing Operator</value>
  </data>
  <data name="WRN_ImplicitConversion2" xml:space="preserve">
    <value>Implicit conversion from '{0}' to '{1}'.</value>
  </data>
  <data name="WRN_ImplicitConversion2_Title" xml:space="preserve">
    <value>Implicit conversion</value>
  </data>
  <data name="WRN_MutableStructureInUsing" xml:space="preserve">
    <value>Local variable '{0}' is read-only and its type is a structure. Invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</value>
  </data>
  <data name="WRN_MutableStructureInUsing_Title" xml:space="preserve">
    <value>Local variable declared by Using statement is read-only and its type is a structure</value>
  </data>
  <data name="WRN_MutableGenericStructureInUsing" xml:space="preserve">
    <value>Local variable '{0}' is read-only. When its type is a structure, invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</value>
  </data>
  <data name="WRN_MutableGenericStructureInUsing_Title" xml:space="preserve">
    <value>Local variable declared by Using statement is read-only and its type may be a structure</value>
  </data>
  <data name="WRN_ImplicitConversionSubst1" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="WRN_ImplicitConversionSubst1_Title" xml:space="preserve">
    <value>Implicit conversion</value>
  </data>
  <data name="WRN_LateBindingResolution" xml:space="preserve">
    <value>Late bound resolution; runtime errors could occur.</value>
  </data>
  <data name="WRN_LateBindingResolution_Title" xml:space="preserve">
    <value>Late bound resolution</value>
  </data>
  <data name="WRN_ObjectMath1" xml:space="preserve">
    <value>Operands of type Object used for operator '{0}'; use the 'Is' operator to test object identity.</value>
  </data>
  <data name="WRN_ObjectMath1_Title" xml:space="preserve">
    <value>Operands of type Object used for operator</value>
  </data>
  <data name="WRN_ObjectMath2" xml:space="preserve">
    <value>Operands of type Object used for operator '{0}'; runtime errors could occur.</value>
  </data>
  <data name="WRN_ObjectMath2_Title" xml:space="preserve">
    <value>Operands of type Object used for operator</value>
  </data>
  <data name="WRN_ObjectAssumedVar1" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="WRN_ObjectAssumedVar1_Title" xml:space="preserve">
    <value>Variable declaration without an 'As' clause</value>
  </data>
  <data name="WRN_ObjectAssumed1" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="WRN_ObjectAssumed1_Title" xml:space="preserve">
    <value>Function without an 'As' clause</value>
  </data>
  <data name="WRN_ObjectAssumedProperty1" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="WRN_ObjectAssumedProperty1_Title" xml:space="preserve">
    <value>Property without an 'As' clause</value>
  </data>
  <data name="WRN_MissingAsClauseinVarDecl" xml:space="preserve">
    <value>Variable declaration without an 'As' clause; type of Object assumed.</value>
  </data>
  <data name="WRN_MissingAsClauseinVarDecl_Title" xml:space="preserve">
    <value>Variable declaration without an 'As' clause</value>
  </data>
  <data name="WRN_MissingAsClauseinFunction" xml:space="preserve">
    <value>Function without an 'As' clause; return type of Object assumed.</value>
  </data>
  <data name="WRN_MissingAsClauseinFunction_Title" xml:space="preserve">
    <value>Function without an 'As' clause</value>
  </data>
  <data name="WRN_MissingAsClauseinProperty" xml:space="preserve">
    <value>Property without an 'As' clause; type of Object assumed.</value>
  </data>
  <data name="WRN_MissingAsClauseinProperty_Title" xml:space="preserve">
    <value>Property without an 'As' clause</value>
  </data>
  <data name="WRN_UnusedLocal" xml:space="preserve">
    <value>Unused local variable: '{0}'.</value>
  </data>
  <data name="WRN_UnusedLocal_Title" xml:space="preserve">
    <value>Unused local variable</value>
  </data>
  <data name="WRN_SharedMemberThroughInstance" xml:space="preserve">
    <value>Access of shared member, constant member, enum member or nested type through an instance; qualifying expression will not be evaluated.</value>
  </data>
  <data name="WRN_SharedMemberThroughInstance_Title" xml:space="preserve">
    <value>Access of shared member, constant member, enum member or nested type through an instance</value>
  </data>
  <data name="WRN_RecursivePropertyCall" xml:space="preserve">
    <value>Expression recursively calls the containing property '{0}'.</value>
  </data>
  <data name="WRN_RecursivePropertyCall_Title" xml:space="preserve">
    <value>Expression recursively calls the containing property</value>
  </data>
  <data name="WRN_OverlappingCatch" xml:space="preserve">
    <value>'Catch' block never reached, because '{0}' inherits from '{1}'.</value>
  </data>
  <data name="WRN_OverlappingCatch_Title" xml:space="preserve">
    <value>'Catch' block never reached; exception type's base type handled above in the same Try statement</value>
  </data>
  <data name="WRN_DefAsgUseNullRefByRef" xml:space="preserve">
    <value>Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime.</value>
  </data>
  <data name="WRN_DefAsgUseNullRefByRef_Title" xml:space="preserve">
    <value>Variable is passed by reference before it has been assigned a value</value>
  </data>
  <data name="WRN_DuplicateCatch" xml:space="preserve">
    <value>'Catch' block never reached; '{0}' handled above in the same Try statement.</value>
  </data>
  <data name="WRN_DuplicateCatch_Title" xml:space="preserve">
    <value>'Catch' block never reached; exception type handled above in the same Try statement</value>
  </data>
  <data name="WRN_ObjectMath1Not" xml:space="preserve">
    <value>Operands of type Object used for operator '{0}'; use the 'IsNot' operator to test object identity.</value>
  </data>
  <data name="WRN_ObjectMath1Not_Title" xml:space="preserve">
    <value>Operands of type Object used for operator &lt;&gt;</value>
  </data>
  <data name="WRN_BadChecksumValExtChecksum" xml:space="preserve">
    <value>Bad checksum value, non hex digits or odd number of hex digits.</value>
  </data>
  <data name="WRN_BadChecksumValExtChecksum_Title" xml:space="preserve">
    <value>Bad checksum value, non hex digits or odd number of hex digits</value>
  </data>
  <data name="WRN_MultipleDeclFileExtChecksum" xml:space="preserve">
    <value>File name already declared with a different GUID and checksum value.</value>
  </data>
  <data name="WRN_MultipleDeclFileExtChecksum_Title" xml:space="preserve">
    <value>File name already declared with a different GUID and checksum value</value>
  </data>
  <data name="WRN_BadGUIDFormatExtChecksum" xml:space="preserve">
    <value>Bad GUID format.</value>
  </data>
  <data name="WRN_BadGUIDFormatExtChecksum_Title" xml:space="preserve">
    <value>Bad GUID format</value>
  </data>
  <data name="WRN_ObjectMathSelectCase" xml:space="preserve">
    <value>Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur.</value>
  </data>
  <data name="WRN_ObjectMathSelectCase_Title" xml:space="preserve">
    <value>Operands of type Object used in expressions for 'Select', 'Case' statements</value>
  </data>
  <data name="WRN_EqualToLiteralNothing" xml:space="preserve">
    <value>This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is null consider using 'Is Nothing'.</value>
  </data>
  <data name="WRN_EqualToLiteralNothing_Title" xml:space="preserve">
    <value>This expression will always evaluate to Nothing</value>
  </data>
  <data name="WRN_NotEqualToLiteralNothing" xml:space="preserve">
    <value>This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is not null consider using 'IsNot Nothing'.</value>
  </data>
  <data name="WRN_NotEqualToLiteralNothing_Title" xml:space="preserve">
    <value>This expression will always evaluate to Nothing</value>
  </data>
  <data name="WRN_UnusedLocalConst" xml:space="preserve">
    <value>Unused local constant: '{0}'.</value>
  </data>
  <data name="WRN_UnusedLocalConst_Title" xml:space="preserve">
    <value>Unused local constant</value>
  </data>
  <data name="WRN_ComClassInterfaceShadows5" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' on class '{0}' implicitly declares {1} '{2}', which conflicts with a member of the same name in {3} '{4}'. Use 'Microsoft.VisualBasic.ComClassAttribute(InterfaceShadows:=True)' if you want to hide the name on the base {4}.</value>
  </data>
  <data name="WRN_ComClassInterfaceShadows5_Title" xml:space="preserve">
    <value>'Microsoft.VisualBasic.ComClassAttribute' on class implicitly declares member, which conflicts with a member of the same name</value>
  </data>
  <data name="WRN_ComClassPropertySetObject1" xml:space="preserve">
    <value>'{0}' cannot be exposed to COM as a property 'Let'. You will not be able to assign non-object values (such as numbers or strings) to this property from Visual Basic 6.0 using a 'Let' statement.</value>
  </data>
  <data name="WRN_ComClassPropertySetObject1_Title" xml:space="preserve">
    <value>Property cannot be exposed to COM as a property 'Let'</value>
  </data>
  <data name="WRN_DefAsgUseNullRef" xml:space="preserve">
    <value>Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime.</value>
  </data>
  <data name="WRN_DefAsgUseNullRef_Title" xml:space="preserve">
    <value>Variable is used before it has been assigned a value</value>
  </data>
  <data name="WRN_DefAsgNoRetValFuncRef1" xml:space="preserve">
    <value>Function '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</value>
  </data>
  <data name="WRN_DefAsgNoRetValFuncRef1_Title" xml:space="preserve">
    <value>Function doesn't return a value on all code paths</value>
  </data>
  <data name="WRN_DefAsgNoRetValOpRef1" xml:space="preserve">
    <value>Operator '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</value>
  </data>
  <data name="WRN_DefAsgNoRetValOpRef1_Title" xml:space="preserve">
    <value>Operator doesn't return a value on all code paths</value>
  </data>
  <data name="WRN_DefAsgNoRetValPropRef1" xml:space="preserve">
    <value>Property '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</value>
  </data>
  <data name="WRN_DefAsgNoRetValPropRef1_Title" xml:space="preserve">
    <value>Property doesn't return a value on all code paths</value>
  </data>
  <data name="WRN_DefAsgUseNullRefByRefStr" xml:space="preserve">
    <value>Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</value>
  </data>
  <data name="WRN_DefAsgUseNullRefByRefStr_Title" xml:space="preserve">
    <value>Variable is passed by reference before it has been assigned a value</value>
  </data>
  <data name="WRN_DefAsgUseNullRefStr" xml:space="preserve">
    <value>Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</value>
  </data>
  <data name="WRN_DefAsgUseNullRefStr_Title" xml:space="preserve">
    <value>Variable is used before it has been assigned a value</value>
  </data>
  <data name="WRN_StaticLocalNoInference" xml:space="preserve">
    <value>Static variable declared without an 'As' clause; type of Object assumed.</value>
  </data>
  <data name="WRN_StaticLocalNoInference_Title" xml:space="preserve">
    <value>Static variable declared without an 'As' clause</value>
  </data>
  <data name="WRN_InvalidAssemblyName" xml:space="preserve">
    <value>Assembly reference '{0}' is invalid and cannot be resolved.</value>
  </data>
  <data name="WRN_InvalidAssemblyName_Title" xml:space="preserve">
    <value>Assembly reference is invalid and cannot be resolved</value>
  </data>
  <data name="WRN_XMLDocBadXMLLine" xml:space="preserve">
    <value>XML comment block must immediately precede the language element to which it applies. XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLDocBadXMLLine_Title" xml:space="preserve">
    <value>XML comment block must immediately precede the language element to which it applies</value>
  </data>
  <data name="WRN_XMLDocMoreThanOneCommentBlock" xml:space="preserve">
    <value>Only one XML comment block is allowed per language element.</value>
  </data>
  <data name="WRN_XMLDocMoreThanOneCommentBlock_Title" xml:space="preserve">
    <value>Only one XML comment block is allowed per language element</value>
  </data>
  <data name="WRN_XMLDocNotFirstOnLine" xml:space="preserve">
    <value>XML comment must be the first statement on a line. XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLDocNotFirstOnLine_Title" xml:space="preserve">
    <value>XML comment must be the first statement on a line</value>
  </data>
  <data name="WRN_XMLDocInsideMethod" xml:space="preserve">
    <value>XML comment cannot appear within a method or a property. XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLDocInsideMethod_Title" xml:space="preserve">
    <value>XML comment cannot appear within a method or a property</value>
  </data>
  <data name="WRN_XMLDocParseError1" xml:space="preserve">
    <value>XML documentation parse error: {0} XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLDocParseError1_Title" xml:space="preserve">
    <value>XML documentation parse error</value>
  </data>
  <data name="WRN_XMLDocDuplicateXMLNode1" xml:space="preserve">
    <value>XML comment tag '{0}' appears with identical attributes more than once in the same XML comment block.</value>
  </data>
  <data name="WRN_XMLDocDuplicateXMLNode1_Title" xml:space="preserve">
    <value>XML comment tag appears with identical attributes more than once in the same XML comment block</value>
  </data>
  <data name="WRN_XMLDocIllegalTagOnElement2" xml:space="preserve">
    <value>XML comment tag '{0}' is not permitted on a '{1}' language element.</value>
  </data>
  <data name="WRN_XMLDocIllegalTagOnElement2_Title" xml:space="preserve">
    <value>XML comment tag is not permitted on language element</value>
  </data>
  <data name="WRN_XMLDocBadParamTag2" xml:space="preserve">
    <value>XML comment parameter '{0}' does not match a parameter on the corresponding '{1}' statement.</value>
  </data>
  <data name="WRN_XMLDocBadParamTag2_Title" xml:space="preserve">
    <value>XML comment parameter does not match a parameter on the corresponding declaration statement</value>
  </data>
  <data name="WRN_XMLDocParamTagWithoutName" xml:space="preserve">
    <value>XML comment parameter must have a 'name' attribute.</value>
  </data>
  <data name="WRN_XMLDocParamTagWithoutName_Title" xml:space="preserve">
    <value>XML comment parameter must have a 'name' attribute</value>
  </data>
  <data name="WRN_XMLDocCrefAttributeNotFound1" xml:space="preserve">
    <value>XML comment has a tag with a 'cref' attribute '{0}' that could not be resolved.</value>
  </data>
  <data name="WRN_XMLDocCrefAttributeNotFound1_Title" xml:space="preserve">
    <value>XML comment has a tag with a 'cref' attribute that could not be resolved</value>
  </data>
  <data name="WRN_XMLMissingFileOrPathAttribute1" xml:space="preserve">
    <value>XML comment tag 'include' must have a '{0}' attribute. XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLMissingFileOrPathAttribute1_Title" xml:space="preserve">
    <value>XML comment tag 'include' must have 'file' and 'path' attributes</value>
  </data>
  <data name="WRN_XMLCannotWriteToXMLDocFile2" xml:space="preserve">
    <value>Unable to create XML documentation file '{0}': {1}</value>
  </data>
  <data name="WRN_XMLCannotWriteToXMLDocFile2_Title" xml:space="preserve">
    <value>Unable to create XML documentation file</value>
  </data>
  <data name="WRN_XMLDocWithoutLanguageElement" xml:space="preserve">
    <value>XML documentation comments must precede member or type declarations.</value>
  </data>
  <data name="WRN_XMLDocWithoutLanguageElement_Title" xml:space="preserve">
    <value>XML documentation comments must precede member or type declarations</value>
  </data>
  <data name="WRN_XMLDocReturnsOnWriteOnlyProperty" xml:space="preserve">
    <value>XML comment tag 'returns' is not permitted on a 'WriteOnly' Property.</value>
  </data>
  <data name="WRN_XMLDocReturnsOnWriteOnlyProperty_Title" xml:space="preserve">
    <value>XML comment tag 'returns' is not permitted on a 'WriteOnly' Property</value>
  </data>
  <data name="WRN_XMLDocOnAPartialType" xml:space="preserve">
    <value>XML comment cannot be applied more than once on a partial {0}. XML comments for this {0} will be ignored.</value>
  </data>
  <data name="WRN_XMLDocOnAPartialType_Title" xml:space="preserve">
    <value>XML comment cannot be applied more than once on a partial type</value>
  </data>
  <data name="WRN_XMLDocReturnsOnADeclareSub" xml:space="preserve">
    <value>XML comment tag 'returns' is not permitted on a 'declare sub' language element.</value>
  </data>
  <data name="WRN_XMLDocReturnsOnADeclareSub_Title" xml:space="preserve">
    <value>XML comment tag 'returns' is not permitted on a 'declare sub' language element</value>
  </data>
  <data name="WRN_XMLDocStartTagWithNoEndTag" xml:space="preserve">
    <value>XML documentation parse error: Start tag '{0}' doesn't have a matching end tag. XML comment will be ignored.</value>
  </data>
  <data name="WRN_XMLDocStartTagWithNoEndTag_Title" xml:space="preserve">
    <value>XML documentation parse error: Start tag doesn't have a matching end tag</value>
  </data>
  <data name="WRN_XMLDocBadGenericParamTag2" xml:space="preserve">
    <value>XML comment type parameter '{0}' does not match a type parameter on the corresponding '{1}' statement.</value>
  </data>
  <data name="WRN_XMLDocBadGenericParamTag2_Title" xml:space="preserve">
    <value>XML comment type parameter does not match a type parameter on the corresponding declaration statement</value>
  </data>
  <data name="WRN_XMLDocGenericParamTagWithoutName" xml:space="preserve">
    <value>XML comment type parameter must have a 'name' attribute.</value>
  </data>
  <data name="WRN_XMLDocGenericParamTagWithoutName_Title" xml:space="preserve">
    <value>XML comment type parameter must have a 'name' attribute</value>
  </data>
  <data name="WRN_XMLDocExceptionTagWithoutCRef" xml:space="preserve">
    <value>XML comment exception must have a 'cref' attribute.</value>
  </data>
  <data name="WRN_XMLDocExceptionTagWithoutCRef_Title" xml:space="preserve">
    <value>XML comment exception must have a 'cref' attribute</value>
  </data>
  <data name="WRN_XMLDocInvalidXMLFragment" xml:space="preserve">
    <value>Unable to include XML fragment '{0}' of file '{1}'.</value>
  </data>
  <data name="WRN_XMLDocInvalidXMLFragment_Title" xml:space="preserve">
    <value>Unable to include XML fragment</value>
  </data>
  <data name="WRN_XMLDocBadFormedXML" xml:space="preserve">
    <value>Unable to include XML fragment '{1}' of file '{0}'. {2}</value>
  </data>
  <data name="WRN_XMLDocBadFormedXML_Title" xml:space="preserve">
    <value>Unable to include XML fragment</value>
  </data>
  <data name="WRN_InterfaceConversion2" xml:space="preserve">
    <value>Runtime errors might occur when converting '{0}' to '{1}'.</value>
  </data>
  <data name="WRN_InterfaceConversion2_Title" xml:space="preserve">
    <value>Runtime errors might occur when converting to or from interface type</value>
  </data>
  <data name="WRN_LiftControlVariableLambda" xml:space="preserve">
    <value>Using the iteration variable in a lambda expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</value>
  </data>
  <data name="WRN_LiftControlVariableLambda_Title" xml:space="preserve">
    <value>Using the iteration variable in a lambda expression may have unexpected results</value>
  </data>
  <data name="WRN_LambdaPassedToRemoveHandler" xml:space="preserve">
    <value>Lambda expression will not be removed from this event handler. Assign the lambda expression to a variable and use the variable to add and remove the event.</value>
  </data>
  <data name="WRN_LambdaPassedToRemoveHandler_Title" xml:space="preserve">
    <value>Lambda expression will not be removed from this event handler</value>
  </data>
  <data name="WRN_LiftControlVariableQuery" xml:space="preserve">
    <value>Using the iteration variable in a query expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</value>
  </data>
  <data name="WRN_LiftControlVariableQuery_Title" xml:space="preserve">
    <value>Using the iteration variable in a query expression may have unexpected results</value>
  </data>
  <data name="WRN_RelDelegatePassedToRemoveHandler" xml:space="preserve">
    <value>The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event. Assign the 'AddressOf' expression to a variable, and use the variable to add or remove the method as the handler.</value>
  </data>
  <data name="WRN_RelDelegatePassedToRemoveHandler_Title" xml:space="preserve">
    <value>The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event</value>
  </data>
  <data name="WRN_QueryMissingAsClauseinVarDecl" xml:space="preserve">
    <value>Range variable is assumed to be of type Object because its type cannot be inferred. Use an 'As' clause to specify a different type.</value>
  </data>
  <data name="WRN_QueryMissingAsClauseinVarDecl_Title" xml:space="preserve">
    <value>Range variable is assumed to be of type Object because its type cannot be inferred</value>
  </data>
  <data name="ERR_MultilineLambdaMissingFunction" xml:space="preserve">
    <value>Multiline lambda expression is missing 'End Function'.</value>
  </data>
  <data name="ERR_MultilineLambdaMissingSub" xml:space="preserve">
    <value>Multiline lambda expression is missing 'End Sub'.</value>
  </data>
  <data name="ERR_AttributeOnLambdaReturnType" xml:space="preserve">
    <value>Attributes cannot be applied to return types of lambda expressions.</value>
  </data>
  <data name="ERR_SubDisallowsStatement" xml:space="preserve">
    <value>Statement is not valid inside a single-line statement lambda.</value>
  </data>
  <data name="ERR_SubRequiresParenthesesBang" xml:space="preserve">
    <value>This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;)!key</value>
  </data>
  <data name="ERR_SubRequiresParenthesesDot" xml:space="preserve">
    <value>This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;).Invoke()</value>
  </data>
  <data name="ERR_SubRequiresParenthesesLParen" xml:space="preserve">
    <value>This single-line statement lambda must be enclosed in parentheses. For example: Call (Sub() &lt;statement&gt;) ()</value>
  </data>
  <data name="ERR_SubRequiresSingleStatement" xml:space="preserve">
    <value>Single-line statement lambdas must include exactly one statement.</value>
  </data>
  <data name="ERR_StaticInLambda" xml:space="preserve">
    <value>Static local variables cannot be declared inside lambda expressions.</value>
  </data>
  <data name="ERR_InitializedExpandedProperty" xml:space="preserve">
    <value>Expanded Properties cannot be initialized.</value>
  </data>
  <data name="ERR_AutoPropertyCantHaveParams" xml:space="preserve">
    <value>Auto-implemented properties cannot have parameters.</value>
  </data>
  <data name="ERR_AutoPropertyCantBeWriteOnly" xml:space="preserve">
    <value>Auto-implemented properties cannot be WriteOnly.</value>
  </data>
  <data name="ERR_IllegalOperandInIIFCount" xml:space="preserve">
    <value>'If' operator requires either two or three operands.</value>
  </data>
  <data name="ERR_NotACollection1" xml:space="preserve">
    <value>Cannot initialize the type '{0}' with a collection initializer because it is not a collection type.</value>
  </data>
  <data name="ERR_NoAddMethod1" xml:space="preserve">
    <value>Cannot initialize the type '{0}' with a collection initializer because it does not have an accessible 'Add' method.</value>
  </data>
  <data name="ERR_CantCombineInitializers" xml:space="preserve">
    <value>An Object Initializer and a Collection Initializer cannot be combined in the same initialization.</value>
  </data>
  <data name="ERR_EmptyAggregateInitializer" xml:space="preserve">
    <value>An aggregate collection initializer entry must contain at least one element.</value>
  </data>
  <data name="ERR_XmlEndElementNoMatchingStart" xml:space="preserve">
    <value>XML end element must be preceded by a matching start element.</value>
  </data>
  <data name="ERR_MultilineLambdasCannotContainOnError" xml:space="preserve">
    <value>'On Error' and 'Resume' cannot appear inside a lambda expression.</value>
  </data>
  <data name="ERR_VarianceDisallowedHere" xml:space="preserve">
    <value>Keywords 'Out' and 'In' can only be used in interface and delegate declarations.</value>
  </data>
  <data name="ERR_XmlEndCDataNotAllowedInContent" xml:space="preserve">
    <value>The literal string ']]&gt;' is not allowed in element content.</value>
  </data>
  <data name="ERR_OverloadsModifierInModule" xml:space="preserve">
    <value>Inappropriate use of '{0}' keyword in a module.</value>
  </data>
  <data name="ERR_UndefinedTypeOrNamespace1" xml:space="preserve">
    <value>Type or namespace '{0}' is not defined.</value>
  </data>
  <data name="ERR_IdentityDirectCastForFloat" xml:space="preserve">
    <value>Using DirectCast operator to cast a floating-point value to the same type is not supported.</value>
  </data>
  <data name="WRN_ObsoleteIdentityDirectCastForValueType" xml:space="preserve">
    <value>Using DirectCast operator to cast a value-type to the same type is obsolete.</value>
  </data>
  <data name="WRN_ObsoleteIdentityDirectCastForValueType_Title" xml:space="preserve">
    <value>Using DirectCast operator to cast a value-type to the same type is obsolete</value>
  </data>
  <data name="WRN_UnreachableCode" xml:space="preserve">
    <value>Unreachable code detected.</value>
  </data>
  <data name="WRN_UnreachableCode_Title" xml:space="preserve">
    <value>Unreachable code detected</value>
  </data>
  <data name="WRN_DefAsgNoRetValFuncVal1" xml:space="preserve">
    <value>Function '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</value>
  </data>
  <data name="WRN_DefAsgNoRetValFuncVal1_Title" xml:space="preserve">
    <value>Function doesn't return a value on all code paths</value>
  </data>
  <data name="WRN_DefAsgNoRetValOpVal1" xml:space="preserve">
    <value>Operator '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</value>
  </data>
  <data name="WRN_DefAsgNoRetValOpVal1_Title" xml:space="preserve">
    <value>Operator doesn't return a value on all code paths</value>
  </data>
  <data name="WRN_DefAsgNoRetValPropVal1" xml:space="preserve">
    <value>Property '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</value>
  </data>
  <data name="WRN_DefAsgNoRetValPropVal1_Title" xml:space="preserve">
    <value>Property doesn't return a value on all code paths</value>
  </data>
  <data name="ERR_NestedGlobalNamespace" xml:space="preserve">
    <value>Global namespace may not be nested in another namespace.</value>
  </data>
  <data name="ERR_AccessMismatch6" xml:space="preserve">
    <value>'{0}' cannot expose type '{1}' in {2} '{3}' through {4} '{5}'.</value>
  </data>
  <data name="ERR_BadMetaDataReference1" xml:space="preserve">
    <value>'{0}' cannot be referenced because it is not a valid assembly.</value>
  </data>
  <data name="ERR_PropertyDoesntImplementAllAccessors" xml:space="preserve">
    <value>'{0}' cannot be implemented by a {1} property.</value>
  </data>
  <data name="ERR_UnimplementedMustOverride" xml:space="preserve">
    <value>
    {0}: {1}</value>
  </data>
  <data name="ERR_IfTooManyTypesObjectDisallowed" xml:space="preserve">
    <value>Cannot infer a common type because more than one type is possible.</value>
  </data>
  <data name="WRN_IfTooManyTypesObjectAssumed" xml:space="preserve">
    <value>Cannot infer a common type because more than one type is possible; 'Object' assumed.</value>
  </data>
  <data name="WRN_IfTooManyTypesObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer a common type because more than one type is possible</value>
  </data>
  <data name="ERR_IfNoTypeObjectDisallowed" xml:space="preserve">
    <value>Cannot infer a common type, and Option Strict On does not allow 'Object' to be assumed.</value>
  </data>
  <data name="WRN_IfNoTypeObjectAssumed" xml:space="preserve">
    <value>Cannot infer a common type; 'Object' assumed.</value>
  </data>
  <data name="WRN_IfNoTypeObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer a common type</value>
  </data>
  <data name="ERR_IfNoType" xml:space="preserve">
    <value>Cannot infer a common type.</value>
  </data>
  <data name="ERR_PublicKeyFileFailure" xml:space="preserve">
    <value>Error extracting public key from file '{0}': {1}</value>
  </data>
  <data name="ERR_PublicKeyContainerFailure" xml:space="preserve">
    <value>Error extracting public key from container '{0}': {1}</value>
  </data>
  <data name="ERR_FriendRefNotEqualToThis" xml:space="preserve">
    <value>Friend access was granted by '{0}', but the public key of the output assembly does not match that specified by the attribute in the granting assembly.</value>
  </data>
  <data name="ERR_FriendRefSigningMismatch" xml:space="preserve">
    <value>Friend access was granted by '{0}', but the strong name signing state of the output assembly does not match that of the granting assembly.</value>
  </data>
  <data name="WRN_DelaySignButNoKey" xml:space="preserve">
    <value>Delay signing was specified and requires a public key, but no public key was specified.</value>
  </data>
  <data name="WRN_DelaySignButNoKey_Title" xml:space="preserve">
    <value>Delay signing was specified and requires a public key, but no public key was specified</value>
  </data>
  <data name="ERR_SignButNoPrivateKey" xml:space="preserve">
    <value>Key file '{0}' is missing the private key needed for signing.</value>
  </data>
  <data name="ERR_FailureSigningAssembly" xml:space="preserve">
    <value>Error signing assembly '{0}': {1}</value>
  </data>
  <data name="ERR_InvalidVersionFormat" xml:space="preserve">
    <value>The specified version string does not conform to the required format - major[.minor[.build|*[.revision|*]]]</value>
  </data>
  <data name="WRN_InvalidVersionFormat" xml:space="preserve">
    <value>The specified version string does not conform to the recommended format - major.minor.build.revision</value>
  </data>
  <data name="WRN_InvalidVersionFormat_Title" xml:space="preserve">
    <value>The specified version string does not conform to the recommended format</value>
  </data>
  <data name="ERR_InvalidVersionFormat2" xml:space="preserve">
    <value>The specified version string does not conform to the recommended format - major.minor.build.revision</value>
  </data>
  <data name="ERR_InvalidAssemblyCultureForExe" xml:space="preserve">
    <value>Executables cannot be satellite assemblies; culture should always be empty</value>
  </data>
  <data name="WRN_MainIgnored" xml:space="preserve">
    <value>The entry point of the program is global script code; ignoring '{0}' entry point.</value>
  </data>
  <data name="WRN_MainIgnored_Title" xml:space="preserve">
    <value>The entry point of the program is global script code; ignoring entry point</value>
  </data>
  <data name="WRN_EmptyPrefixAndXmlnsLocalName" xml:space="preserve">
    <value>The xmlns attribute has special meaning and should not be written with a prefix.</value>
  </data>
  <data name="WRN_EmptyPrefixAndXmlnsLocalName_Title" xml:space="preserve">
    <value>The xmlns attribute has special meaning and should not be written with a prefix</value>
  </data>
  <data name="WRN_PrefixAndXmlnsLocalName" xml:space="preserve">
    <value>It is not recommended to have attributes named xmlns. Did you mean to write 'xmlns:{0}' to define a prefix named '{0}'?</value>
  </data>
  <data name="WRN_PrefixAndXmlnsLocalName_Title" xml:space="preserve">
    <value>It is not recommended to have attributes named xmlns</value>
  </data>
  <data name="ERR_ExpectedSingleScript" xml:space="preserve">
    <value>Expected a single script (.vbx file)</value>
  </data>
  <data name="ERR_ReservedAssemblyName" xml:space="preserve">
    <value>The assembly name '{0}' is reserved and cannot be used as a reference in an interactive session</value>
  </data>
  <data name="ERR_ReferenceDirectiveOnlyAllowedInScripts" xml:space="preserve">
    <value>#R is only allowed in scripts</value>
  </data>
  <data name="ERR_NamespaceNotAllowedInScript" xml:space="preserve">
    <value>You cannot declare Namespace in script code</value>
  </data>
  <data name="ERR_KeywordNotAllowedInScript" xml:space="preserve">
    <value>You cannot use '{0}' in top-level script code</value>
  </data>
  <data name="ERR_LambdaNoType" xml:space="preserve">
    <value>Cannot infer a return type.  Consider adding an 'As' clause to specify the return type.</value>
  </data>
  <data name="WRN_LambdaNoTypeObjectAssumed" xml:space="preserve">
    <value>Cannot infer a return type; 'Object' assumed.</value>
  </data>
  <data name="WRN_LambdaNoTypeObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer a return type</value>
  </data>
  <data name="WRN_LambdaTooManyTypesObjectAssumed" xml:space="preserve">
    <value>Cannot infer a return type because more than one type is possible; 'Object' assumed.</value>
  </data>
  <data name="WRN_LambdaTooManyTypesObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer a return type because more than one type is possible</value>
  </data>
  <data name="ERR_LambdaNoTypeObjectDisallowed" xml:space="preserve">
    <value>Cannot infer a return type. Consider adding an 'As' clause to specify the return type.</value>
  </data>
  <data name="ERR_LambdaTooManyTypesObjectDisallowed" xml:space="preserve">
    <value>Cannot infer a return type because more than one type is possible. Consider adding an 'As' clause to specify the return type.</value>
  </data>
  <data name="WRN_UnimplementedCommandLineSwitch" xml:space="preserve">
    <value>The command line switch '{0}' is not yet implemented and was ignored.</value>
  </data>
  <data name="WRN_UnimplementedCommandLineSwitch_Title" xml:space="preserve">
    <value>Command line switch is not yet implemented</value>
  </data>
  <data name="ERR_ArrayInitNoTypeObjectDisallowed" xml:space="preserve">
    <value>Cannot infer an element type, and Option Strict On does not allow 'Object' to be assumed. Specifying the type of the array might correct this error.</value>
  </data>
  <data name="ERR_ArrayInitNoType" xml:space="preserve">
    <value>Cannot infer an element type. Specifying the type of the array might correct this error.</value>
  </data>
  <data name="ERR_ArrayInitTooManyTypesObjectDisallowed" xml:space="preserve">
    <value>Cannot infer an element type because more than one type is possible. Specifying the type of the array might correct this error.</value>
  </data>
  <data name="WRN_ArrayInitNoTypeObjectAssumed" xml:space="preserve">
    <value>Cannot infer an element type; 'Object' assumed.</value>
  </data>
  <data name="WRN_ArrayInitNoTypeObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer an element type</value>
  </data>
  <data name="WRN_ArrayInitTooManyTypesObjectAssumed" xml:space="preserve">
    <value>Cannot infer an element type because more than one type is possible; 'Object' assumed.</value>
  </data>
  <data name="WRN_ArrayInitTooManyTypesObjectAssumed_Title" xml:space="preserve">
    <value>Cannot infer an element type because more than one type is possible</value>
  </data>
  <data name="WRN_TypeInferenceAssumed3" xml:space="preserve">
    <value>Data type of '{0}' in '{1}' could not be inferred. '{2}' assumed.</value>
  </data>
  <data name="WRN_TypeInferenceAssumed3_Title" xml:space="preserve">
    <value>Data type could not be inferred</value>
  </data>
  <data name="ERR_AmbiguousCastConversion2" xml:space="preserve">
    <value>Option Strict On does not allow implicit conversions from '{0}' to '{1}' because the conversion is ambiguous.</value>
  </data>
  <data name="WRN_AmbiguousCastConversion2" xml:space="preserve">
    <value>Conversion from '{0}' to '{1}' may be ambiguous.</value>
  </data>
  <data name="WRN_AmbiguousCastConversion2_Title" xml:space="preserve">
    <value>Conversion may be ambiguous</value>
  </data>
  <data name="ERR_VarianceIEnumerableSuggestion3" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</value>
  </data>
  <data name="WRN_VarianceIEnumerableSuggestion3" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</value>
  </data>
  <data name="WRN_VarianceIEnumerableSuggestion3_Title" xml:space="preserve">
    <value>Type cannot be converted to target collection type</value>
  </data>
  <data name="ERR_VarianceConversionFailedIn6" xml:space="preserve">
    <value>'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</value>
  </data>
  <data name="ERR_VarianceConversionFailedOut6" xml:space="preserve">
    <value>'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedIn6" xml:space="preserve">
    <value>Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedIn6_Title" xml:space="preserve">
    <value>Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'In' generic parameter</value>
  </data>
  <data name="WRN_VarianceConversionFailedOut6" xml:space="preserve">
    <value>Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedOut6_Title" xml:space="preserve">
    <value>Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'Out' generic parameter</value>
  </data>
  <data name="ERR_VarianceConversionFailedTryIn4" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</value>
  </data>
  <data name="ERR_VarianceConversionFailedTryOut4" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedTryIn4" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedTryIn4_Title" xml:space="preserve">
    <value>Type cannot be converted to target type</value>
  </data>
  <data name="WRN_VarianceConversionFailedTryOut4" xml:space="preserve">
    <value>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</value>
  </data>
  <data name="WRN_VarianceConversionFailedTryOut4_Title" xml:space="preserve">
    <value>Type cannot be converted to target type</value>
  </data>
  <data name="WRN_VarianceDeclarationAmbiguous3" xml:space="preserve">
    <value>Interface '{0}' is ambiguous with another implemented interface '{1}' due to the 'In' and 'Out' parameters in '{2}'.</value>
  </data>
  <data name="WRN_VarianceDeclarationAmbiguous3_Title" xml:space="preserve">
    <value>Interface is ambiguous with another implemented interface due to 'In' and 'Out' parameters</value>
  </data>
  <data name="ERR_VarianceInterfaceNesting" xml:space="preserve">
    <value>Enumerations, classes, and structures cannot be declared in an interface that has an 'In' or 'Out' type parameter.</value>
  </data>
  <data name="ERR_VariancePreventsSynthesizedEvents2" xml:space="preserve">
    <value>Event definitions with parameters are not allowed in an interface such as '{0}' that has 'In' or 'Out' type parameters. Consider declaring the event by using a delegate type which is not defined within '{0}'. For example, 'Event {1} As Action(Of ...)'.</value>
  </data>
  <data name="ERR_VarianceInByRefDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInNullableDisallowed2" xml:space="preserve">
    <value>Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInParamDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used in this context because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInParamDisallowedForGeneric3" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInParamDisallowedHere2" xml:space="preserve">
    <value>Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInParamDisallowedHereForGeneric4" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInPropertyDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a property type in this context because '{0}' is an 'In' type parameter and the property is not marked WriteOnly.</value>
  </data>
  <data name="ERR_VarianceInReadOnlyPropertyDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a ReadOnly property type because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceInReturnDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a return type because '{0}' is an 'In' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutByRefDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutByValDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a ByVal parameter type because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutConstraintDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a generic type constraint because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutNullableDisallowed2" xml:space="preserve">
    <value>Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutParamDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used in this context because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutParamDisallowedForGeneric3" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutParamDisallowedHere2" xml:space="preserve">
    <value>Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutParamDisallowedHereForGeneric4" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceOutPropertyDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a property type in this context because '{0}' is an 'Out' type parameter and the property is not marked ReadOnly.</value>
  </data>
  <data name="ERR_VarianceOutWriteOnlyPropertyDisallowed1" xml:space="preserve">
    <value>Type '{0}' cannot be used as a WriteOnly property type because '{0}' is an 'Out' type parameter.</value>
  </data>
  <data name="ERR_VarianceTypeDisallowed2" xml:space="preserve">
    <value>Type '{0}' cannot be used in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</value>
  </data>
  <data name="ERR_VarianceTypeDisallowedForGeneric4" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{2}' in '{3}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</value>
  </data>
  <data name="ERR_VarianceTypeDisallowedHere3" xml:space="preserve">
    <value>Type '{0}' cannot be used in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</value>
  </data>
  <data name="ERR_VarianceTypeDisallowedHereForGeneric5" xml:space="preserve">
    <value>Type '{0}' cannot be used for the '{3}' of '{4}' in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</value>
  </data>
  <data name="ERR_ParameterNotValidForType" xml:space="preserve">
    <value>Parameter not valid for the specified unmanaged type.</value>
  </data>
  <data name="ERR_MarshalUnmanagedTypeNotValidForFields" xml:space="preserve">
    <value>Unmanaged type '{0}' not valid for fields.</value>
  </data>
  <data name="ERR_MarshalUnmanagedTypeOnlyValidForFields" xml:space="preserve">
    <value>Unmanaged type '{0}' is only valid for fields.</value>
  </data>
  <data name="ERR_AttributeParameterRequired1" xml:space="preserve">
    <value>Attribute parameter '{0}' must be specified.</value>
  </data>
  <data name="ERR_AttributeParameterRequired2" xml:space="preserve">
    <value>Attribute parameter '{0}' or '{1}' must be specified.</value>
  </data>
  <data name="ERR_MemberConflictWithSynth4" xml:space="preserve">
    <value>Conflicts with '{0}', which is implicitly declared for '{1}' in {2} '{3}'.</value>
  </data>
  <data name="IDS_ProjectSettingsLocationName" xml:space="preserve">
    <value>&lt;project settings&gt;</value>
  </data>
  <data name="WRN_ReturnTypeAttributeOnWriteOnlyProperty" xml:space="preserve">
    <value>Attributes applied on a return type of a WriteOnly Property have no effect.</value>
  </data>
  <data name="WRN_ReturnTypeAttributeOnWriteOnlyProperty_Title" xml:space="preserve">
    <value>Attributes applied on a return type of a WriteOnly Property have no effect</value>
  </data>
  <data name="ERR_SecurityAttributeInvalidTarget" xml:space="preserve">
    <value>Security attribute '{0}' is not valid on this declaration type. Security attributes are only valid on assembly, type and method declarations.</value>
  </data>
  <data name="ERR_AbsentReferenceToPIA1" xml:space="preserve">
    <value>Cannot find the interop type that matches the embedded type '{0}'. Are you missing an assembly reference?</value>
  </data>
  <data name="ERR_CannotLinkClassWithNoPIA1" xml:space="preserve">
    <value>Reference to class '{0}' is not allowed when its assembly is configured to embed interop types.</value>
  </data>
  <data name="ERR_InvalidStructMemberNoPIA1" xml:space="preserve">
    <value>Embedded interop structure '{0}' can contain only public instance fields.</value>
  </data>
  <data name="ERR_NoPIAAttributeMissing2" xml:space="preserve">
    <value>Interop type '{0}' cannot be embedded because it is missing the required '{1}' attribute.</value>
  </data>
  <data name="ERR_PIAHasNoAssemblyGuid1" xml:space="preserve">
    <value>Cannot embed interop types from assembly '{0}' because it is missing the '{1}' attribute.</value>
  </data>
  <data name="ERR_DuplicateLocalTypes3" xml:space="preserve">
    <value>Cannot embed interop type '{0}' found in both assembly '{1}' and '{2}'. Consider disabling the embedding of interop types.</value>
  </data>
  <data name="ERR_PIAHasNoTypeLibAttribute1" xml:space="preserve">
    <value>Cannot embed interop types from assembly '{0}' because it is missing either the '{1}' attribute or the '{2}' attribute.</value>
  </data>
  <data name="ERR_SourceInterfaceMustBeInterface" xml:space="preserve">
    <value>Interface '{0}' has an invalid source interface which is required to embed event '{1}'.</value>
  </data>
  <data name="ERR_EventNoPIANoBackingMember" xml:space="preserve">
    <value>Source interface '{0}' is missing method '{1}', which is required to embed event '{2}'.</value>
  </data>
  <data name="ERR_NestedInteropType" xml:space="preserve">
    <value>Nested type '{0}' cannot be embedded.</value>
  </data>
  <data name="ERR_LocalTypeNameClash2" xml:space="preserve">
    <value>Embedding the interop type '{0}' from assembly '{1}' causes a name clash in the current assembly. Consider disabling the embedding of interop types.</value>
  </data>
  <data name="ERR_InteropMethodWithBody1" xml:space="preserve">
    <value>Embedded interop method '{0}' contains a body.</value>
  </data>
  <data name="ERR_BadAsyncInQuery" xml:space="preserve">
    <value>'Await' may only be used in a query expression within the first collection expression of the initial 'From' clause or within the collection expression of a 'Join' clause.</value>
  </data>
  <data name="ERR_BadGetAwaiterMethod1" xml:space="preserve">
    <value>'Await' requires that the type '{0}' have a suitable GetAwaiter method.</value>
  </data>
  <data name="ERR_BadIsCompletedOnCompletedGetResult2" xml:space="preserve">
    <value>'Await' requires that the return type '{0}' of '{1}.GetAwaiter()' have suitable IsCompleted, OnCompleted and GetResult members, and implement INotifyCompletion or ICriticalNotifyCompletion.</value>
  </data>
  <data name="ERR_DoesntImplementAwaitInterface2" xml:space="preserve">
    <value>'{0}' does not implement '{1}'.</value>
  </data>
  <data name="ERR_BadAwaitNothing" xml:space="preserve">
    <value>Cannot await Nothing. Consider awaiting 'Task.Yield()' instead.</value>
  </data>
  <data name="ERR_BadAsyncByRefParam" xml:space="preserve">
    <value>Async methods cannot have ByRef parameters.</value>
  </data>
  <data name="ERR_InvalidAsyncIteratorModifiers" xml:space="preserve">
    <value>'Async' and 'Iterator' modifiers cannot be used together.</value>
  </data>
  <data name="ERR_BadResumableAccessReturnVariable" xml:space="preserve">
    <value>The implicit return variable of an Iterator or Async method cannot be accessed.</value>
  </data>
  <data name="ERR_ReturnFromNonGenericTaskAsync" xml:space="preserve">
    <value>'Return' statements in this Async method cannot return a value since the return type of the function is 'Task'. Consider changing the function's return type to 'Task(Of T)'.</value>
  </data>
  <data name="ERR_BadAsyncReturnOperand1" xml:space="preserve">
    <value>Since this is an async method, the return expression must be of type '{0}' rather than 'Task(Of {0})'.</value>
  </data>
  <data name="ERR_BadAsyncReturn" xml:space="preserve">
    <value>The 'Async' modifier can only be used on Subs, or on Functions that return Task or Task(Of T).</value>
  </data>
  <data name="ERR_CantAwaitAsyncSub1" xml:space="preserve">
    <value>'{0}' does not return a Task and cannot be awaited. Consider changing it to an Async Function.</value>
  </data>
  <data name="ERR_InvalidLambdaModifier" xml:space="preserve">
    <value>'Only the 'Async' or 'Iterator' modifier is valid on a lambda.</value>
  </data>
  <data name="ERR_BadAwaitInNonAsyncMethod" xml:space="preserve">
    <value>'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task(Of {0})'.</value>
  </data>
  <data name="ERR_BadAwaitInNonAsyncVoidMethod" xml:space="preserve">
    <value>'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task'.</value>
  </data>
  <data name="ERR_BadAwaitInNonAsyncLambda" xml:space="preserve">
    <value>'Await' can only be used within an Async lambda expression. Consider marking this lambda expression with the 'Async' modifier.</value>
  </data>
  <data name="ERR_BadAwaitNotInAsyncMethodOrLambda" xml:space="preserve">
    <value>'Await' can only be used when contained within a method or lambda expression marked with the 'Async' modifier.</value>
  </data>
  <data name="ERR_StatementLambdaInExpressionTree" xml:space="preserve">
    <value>Statement lambdas cannot be converted to expression trees.</value>
  </data>
  <data name="WRN_UnobservedAwaitableExpression" xml:space="preserve">
    <value>Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the Await operator to the result of the call.</value>
  </data>
  <data name="WRN_UnobservedAwaitableExpression_Title" xml:space="preserve">
    <value>Because this call is not awaited, execution of the current method continues before the call is completed</value>
  </data>
  <data name="ERR_LoopControlMustNotAwait" xml:space="preserve">
    <value>Loop control variable cannot include an 'Await'.</value>
  </data>
  <data name="ERR_BadStaticInitializerInResumable" xml:space="preserve">
    <value>Static variables cannot appear inside Async or Iterator methods.</value>
  </data>
  <data name="ERR_RestrictedResumableType1" xml:space="preserve">
    <value>'{0}' cannot be used as a parameter type for an Iterator or Async method.</value>
  </data>
  <data name="ERR_ConstructorAsync" xml:space="preserve">
    <value>Constructor must not have the 'Async' modifier.</value>
  </data>
  <data name="ERR_PartialMethodsMustNotBeAsync1" xml:space="preserve">
    <value>'{0}' cannot be declared 'Partial' because it has the 'Async' modifier.</value>
  </data>
  <data name="ERR_ResumablesCannotContainOnError" xml:space="preserve">
    <value>'On Error' and 'Resume' cannot appear inside async or iterator methods.</value>
  </data>
  <data name="ERR_ResumableLambdaInExpressionTree" xml:space="preserve">
    <value>Lambdas with the 'Async' or 'Iterator' modifiers cannot be converted to expression trees.</value>
  </data>
  <data name="ERR_CannotLiftRestrictedTypeResumable1" xml:space="preserve">
    <value>Variable of restricted type '{0}' cannot be declared in an Async or Iterator method.</value>
  </data>
  <data name="ERR_BadAwaitInTryHandler" xml:space="preserve">
    <value>'Await' cannot be used inside a 'Catch' statement, a 'Finally' statement, or a 'SyncLock' statement.</value>
  </data>
  <data name="WRN_AsyncLacksAwaits" xml:space="preserve">
    <value>This async method lacks 'Await' operators and so will run synchronously. Consider using the 'Await' operator to await non-blocking API calls, or 'Await Task.Run(...)' to do CPU-bound work on a background thread.</value>
  </data>
  <data name="WRN_AsyncLacksAwaits_Title" xml:space="preserve">
    <value>This async method lacks 'Await' operators and so will run synchronously</value>
  </data>
  <data name="WRN_UnobservedAwaitableDelegate" xml:space="preserve">
    <value>The Task returned from this Async Function will be dropped, and any exceptions in it ignored. Consider changing it to an Async Sub so its exceptions are propagated.</value>
  </data>
  <data name="WRN_UnobservedAwaitableDelegate_Title" xml:space="preserve">
    <value>The Task returned from this Async Function will be dropped, and any exceptions in it ignored</value>
  </data>
  <data name="ERR_SecurityCriticalAsyncInClassOrStruct" xml:space="preserve">
    <value>Async and Iterator methods are not allowed in a [Class|Structure|Interface|Module] that has the 'SecurityCritical' or 'SecuritySafeCritical' attribute.</value>
  </data>
  <data name="ERR_SecurityCriticalAsync" xml:space="preserve">
    <value>Security attribute '{0}' cannot be applied to an Async or Iterator method.</value>
  </data>
  <data name="ERR_DllImportOnResumableMethod" xml:space="preserve">
    <value>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to an Async or Iterator method.</value>
  </data>
  <data name="ERR_SynchronizedAsyncMethod" xml:space="preserve">
    <value>'MethodImplOptions.Synchronized' cannot be applied to an Async method.</value>
  </data>
  <data name="ERR_AsyncSubMain" xml:space="preserve">
    <value>The 'Main' method cannot be marked 'Async'.</value>
  </data>
  <data name="WRN_AsyncSubCouldBeFunction" xml:space="preserve">
    <value>Some overloads here take an Async Function rather than an Async Sub. Consider either using an Async Function, or casting this Async Sub explicitly to the desired type.</value>
  </data>
  <data name="WRN_AsyncSubCouldBeFunction_Title" xml:space="preserve">
    <value>Some overloads here take an Async Function rather than an Async Sub</value>
  </data>
  <data name="ERR_MyGroupCollectionAttributeCycle" xml:space="preserve">
    <value>MyGroupCollectionAttribute cannot be applied to itself.</value>
  </data>
  <data name="ERR_LiteralExpected" xml:space="preserve">
    <value>Literal expected.</value>
  </data>
  <data name="ERR_WinRTEventWithoutDelegate" xml:space="preserve">
    <value>Event declarations that target WinMD must specify a delegate type.  Add an As clause to the event declaration.</value>
  </data>
  <data name="ERR_MixingWinRTAndNETEvents" xml:space="preserve">
    <value>Event '{0}' cannot implement a Windows Runtime event '{1}' and a regular .NET event '{2}'</value>
  </data>
  <data name="ERR_EventImplRemoveHandlerParamWrong" xml:space="preserve">
    <value>Event '{0}' cannot implement event '{1}' on interface '{2}' because the parameters of their 'RemoveHandler' methods do not match.</value>
  </data>
  <data name="ERR_AddParamWrongForWinRT" xml:space="preserve">
    <value>The type of the 'AddHandler' method's parameter must be the same as the type of the event.</value>
  </data>
  <data name="ERR_RemoveParamWrongForWinRT" xml:space="preserve">
    <value>In a Windows Runtime event, the type of the 'RemoveHandler' method parameter must be 'EventRegistrationToken'</value>
  </data>
  <data name="ERR_ReImplementingWinRTInterface5" xml:space="preserve">
    <value>'{0}.{1}' from 'implements {2}' is already implemented by the base class '{3}'. Re-implementation of Windows Runtime Interface '{4}' is not allowed</value>
  </data>
  <data name="ERR_ReImplementingWinRTInterface4" xml:space="preserve">
    <value>'{0}.{1}' is already implemented by the base class '{2}'. Re-implementation of Windows Runtime Interface '{3}' is not allowed</value>
  </data>
  <data name="ERR_BadIteratorByRefParam" xml:space="preserve">
    <value>Iterator methods cannot have ByRef parameters.</value>
  </data>
  <data name="ERR_BadIteratorExpressionLambda" xml:space="preserve">
    <value>Single-line lambdas cannot have the 'Iterator' modifier. Use a multiline lambda instead.</value>
  </data>
  <data name="ERR_BadIteratorReturn" xml:space="preserve">
    <value>Iterator functions must return either IEnumerable(Of T), or IEnumerator(Of T), or the non-generic forms IEnumerable or IEnumerator.</value>
  </data>
  <data name="ERR_BadReturnValueInIterator" xml:space="preserve">
    <value>To return a value from an Iterator function, use 'Yield' rather than 'Return'.</value>
  </data>
  <data name="ERR_BadYieldInNonIteratorMethod" xml:space="preserve">
    <value>'Yield' can only be used in a method marked with the 'Iterator' modifier.</value>
  </data>
  <data name="ERR_BadYieldInTryHandler" xml:space="preserve">
    <value>'Yield' cannot be used inside a 'Catch' statement or a 'Finally' statement.</value>
  </data>
  <data name="WRN_DefAsgNoRetValWinRtEventVal1" xml:space="preserve">
    <value>The AddHandler for Windows Runtime event '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</value>
  </data>
  <data name="WRN_DefAsgNoRetValWinRtEventVal1_Title" xml:space="preserve">
    <value>The AddHandler for Windows Runtime event doesn't return a value on all code paths</value>
  </data>
  <data name="ERR_PartialMethodDefaultParameterValueMismatch2" xml:space="preserve">
    <value>Optional parameter of a method '{0}' does not have the same default value as the corresponding parameter of the partial method '{1}'.</value>
  </data>
  <data name="ERR_PartialMethodParamArrayMismatch2" xml:space="preserve">
    <value>Parameter of a method '{0}' differs by ParamArray modifier from the corresponding parameter of the partial method '{1}'.</value>
  </data>
  <data name="ERR_NetModuleNameMismatch" xml:space="preserve">
    <value>Module name '{0}' stored in '{1}' must match its filename.</value>
  </data>
  <data name="ERR_BadCompilationOption" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="WRN_AssemblyAttributeFromModuleIsOverridden" xml:space="preserve">
    <value>Attribute '{0}' from module '{1}' will be ignored in favor of the instance appearing in source.</value>
  </data>
  <data name="WRN_AssemblyAttributeFromModuleIsOverridden_Title" xml:space="preserve">
    <value>Attribute from module will be ignored in favor of the instance appearing in source</value>
  </data>
  <data name="ERR_CmdOptionConflictsSource" xml:space="preserve">
    <value>Attribute '{0}' given in a source file conflicts with option '{1}'.</value>
  </data>
  <data name="WRN_ReferencedAssemblyDoesNotHaveStrongName" xml:space="preserve">
    <value>Referenced assembly '{0}' does not have a strong name.</value>
  </data>
  <data name="WRN_ReferencedAssemblyDoesNotHaveStrongName_Title" xml:space="preserve">
    <value>Referenced assembly does not have a strong name</value>
  </data>
  <data name="ERR_InvalidSignaturePublicKey" xml:space="preserve">
    <value>Invalid signature public key specified in AssemblySignatureKeyAttribute.</value>
  </data>
  <data name="ERR_CollisionWithPublicTypeInModule" xml:space="preserve">
    <value>Type '{0}' conflicts with public type defined in added module '{1}'.</value>
  </data>
  <data name="ERR_ExportedTypeConflictsWithDeclaration" xml:space="preserve">
    <value>Type '{0}' exported from module '{1}' conflicts with type declared in primary module of this assembly.</value>
  </data>
  <data name="ERR_ExportedTypesConflict" xml:space="preserve">
    <value>Type '{0}' exported from module '{1}' conflicts with type '{2}' exported from module '{3}'.</value>
  </data>
  <data name="WRN_RefCultureMismatch" xml:space="preserve">
    <value>Referenced assembly '{0}' has different culture setting of '{1}'.</value>
  </data>
  <data name="WRN_RefCultureMismatch_Title" xml:space="preserve">
    <value>Referenced assembly has different culture setting</value>
  </data>
  <data name="ERR_AgnosticToMachineModule" xml:space="preserve">
    <value>Agnostic assembly cannot have a processor specific module '{0}'.</value>
  </data>
  <data name="ERR_ConflictingMachineModule" xml:space="preserve">
    <value>Assembly and module '{0}' cannot target different processors.</value>
  </data>
  <data name="WRN_ConflictingMachineAssembly" xml:space="preserve">
    <value>Referenced assembly '{0}' targets a different processor.</value>
  </data>
  <data name="WRN_ConflictingMachineAssembly_Title" xml:space="preserve">
    <value>Referenced assembly targets a different processor</value>
  </data>
  <data name="ERR_CryptoHashFailed" xml:space="preserve">
    <value>Cryptographic failure while creating hashes.</value>
  </data>
  <data name="ERR_CantHaveWin32ResAndManifest" xml:space="preserve">
    <value>Conflicting options specified: Win32 resource file; Win32 manifest.</value>
  </data>
  <data name="ERR_ForwardedTypeConflictsWithDeclaration" xml:space="preserve">
    <value>Forwarded type '{0}' conflicts with type declared in primary module of this assembly.</value>
  </data>
  <data name="ERR_ForwardedTypesConflict" xml:space="preserve">
    <value>Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' forwarded to assembly '{3}'.</value>
  </data>
  <data name="ERR_TooLongMetadataName" xml:space="preserve">
    <value>Name '{0}' exceeds the maximum length allowed in metadata.</value>
  </data>
  <data name="ERR_MissingNetModuleReference" xml:space="preserve">
    <value>Reference to '{0}' netmodule missing.</value>
  </data>
  <data name="ERR_NetModuleNameMustBeUnique" xml:space="preserve">
    <value>Module '{0}' is already defined in this assembly. Each module must have a unique filename.</value>
  </data>
  <data name="ERR_ForwardedTypeConflictsWithExportedType" xml:space="preserve">
    <value>Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' exported from module '{3}'.</value>
  </data>
  <data name="IDS_MSG_ADDREFERENCE" xml:space="preserve">
    <value>Adding assembly reference '{0}'</value>
  </data>
  <data name="IDS_MSG_ADDLINKREFERENCE" xml:space="preserve">
    <value>Adding embedded assembly reference '{0}'</value>
  </data>
  <data name="IDS_MSG_ADDMODULE" xml:space="preserve">
    <value>Adding module reference '{0}'</value>
  </data>
  <data name="ERR_NestingViolatesCLS1" xml:space="preserve">
    <value>Type '{0}' does not inherit the generic type parameters of its container.</value>
  </data>
  <data name="ERR_PDBWritingFailed" xml:space="preserve">
    <value>Failure writing debug information: {0}</value>
  </data>
  <data name="ERR_ParamDefaultValueDiffersFromAttribute" xml:space="preserve">
    <value>The parameter has multiple distinct default values.</value>
  </data>
  <data name="ERR_FieldHasMultipleDistinctConstantValues" xml:space="preserve">
    <value>The field has multiple distinct constant values.</value>
  </data>
  <data name="ERR_EncNoPIAReference" xml:space="preserve">
    <value>Cannot continue since the edit includes a reference to an embedded type: '{0}'.</value>
  </data>
  <data name="ERR_EncReferenceToAddedMember" xml:space="preserve">
    <value>Member '{0}' added during the current debug session can only be accessed from within its declaring assembly '{1}'.</value>
  </data>
  <data name="ERR_UnsupportedModule1" xml:space="preserve">
    <value>'{0}' is an unsupported .NET module.</value>
  </data>
  <data name="ERR_UnsupportedEvent1" xml:space="preserve">
    <value>'{0}' is an unsupported event.</value>
  </data>
  <data name="PropertiesCanNotHaveTypeArguments" xml:space="preserve">
    <value>Properties can not have type arguments</value>
  </data>
  <data name="IdentifierSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>IdentifierSyntax not within syntax tree</value>
  </data>
  <data name="AnonymousObjectCreationExpressionSyntaxNotWithinTree" xml:space="preserve">
    <value>AnonymousObjectCreationExpressionSyntax not within syntax tree</value>
  </data>
  <data name="FieldInitializerSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>FieldInitializerSyntax not within syntax tree</value>
  </data>
  <data name="IDS_TheSystemCannotFindThePathSpecified" xml:space="preserve">
    <value>The system cannot find the path specified</value>
  </data>
  <data name="IDS_UnrecognizedFileFormat" xml:space="preserve">
    <value>Unrecognized file format.</value>
  </data>
  <data name="ThereAreNoPointerTypesInVB" xml:space="preserve">
    <value>There are no pointer types in VB.</value>
  </data>
  <data name="ThereIsNoDynamicTypeInVB" xml:space="preserve">
    <value>There is no dynamic type in VB.</value>
  </data>
  <data name="VariableSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>variableSyntax not within syntax tree</value>
  </data>
  <data name="AggregateSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>AggregateSyntax not within syntax tree</value>
  </data>
  <data name="FunctionSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>FunctionSyntax not within syntax tree</value>
  </data>
  <data name="PositionIsNotWithinSyntax" xml:space="preserve">
    <value>Position is not within syntax tree</value>
  </data>
  <data name="RangeVariableSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>RangeVariableSyntax not within syntax tree</value>
  </data>
  <data name="DeclarationSyntaxNotWithinSyntaxTree" xml:space="preserve">
    <value>DeclarationSyntax not within syntax tree</value>
  </data>
  <data name="StatementOrExpressionIsNotAValidType" xml:space="preserve">
    <value>StatementOrExpression is not an ExecutableStatementSyntax or an ExpressionSyntax</value>
  </data>
  <data name="DeclarationSyntaxNotWithinTree" xml:space="preserve">
    <value>DeclarationSyntax not within tree</value>
  </data>
  <data name="TypeParameterNotWithinTree" xml:space="preserve">
    <value>TypeParameter not within tree</value>
  </data>
  <data name="NotWithinTree" xml:space="preserve">
    <value> not within tree</value>
  </data>
  <data name="LocationMustBeProvided" xml:space="preserve">
    <value>Location must be provided in order to provide minimal type qualification.</value>
  </data>
  <data name="SemanticModelMustBeProvided" xml:space="preserve">
    <value>SemanticModel must be provided in order to provide minimal type qualification.</value>
  </data>
  <data name="NumberOfTypeParametersAndArgumentsMustMatch" xml:space="preserve">
    <value>the number of type parameters and arguments should be the same</value>
  </data>
  <data name="ERR_ResourceInModule" xml:space="preserve">
    <value>Cannot link resource files when building a module</value>
  </data>
  <data name="NotAVbSymbol" xml:space="preserve">
    <value>Not a VB symbol.</value>
  </data>
  <data name="ElementsCannotBeNull" xml:space="preserve">
    <value>Elements cannot be null.</value>
  </data>
  <data name="HDN_UnusedImportClause" xml:space="preserve">
    <value>Unused import clause.</value>
  </data>
  <data name="HDN_UnusedImportStatement" xml:space="preserve">
    <value>Unused import statement.</value>
  </data>
  <data name="WrongSemanticModelType" xml:space="preserve">
    <value>Expected a {0} SemanticModel.</value>
  </data>
  <data name="PositionNotWithinTree" xml:space="preserve">
    <value>Position must be within span of the syntax tree.</value>
  </data>
  <data name="SpeculatedSyntaxNodeCannotBelongToCurrentCompilation" xml:space="preserve">
    <value>Syntax node to be speculated cannot belong to a syntax tree from the current compilation.</value>
  </data>
  <data name="ChainingSpeculativeModelIsNotSupported" xml:space="preserve">
    <value>Chaining speculative semantic model is not supported. You should create a speculative model from the non-speculative ParentModel.</value>
  </data>
  <data name="IDS_ToolName" xml:space="preserve">
    <value>Microsoft (R) Visual Basic Compiler</value>
  </data>
  <data name="IDS_LogoLine1" xml:space="preserve">
    <value>{0} version {1}</value>
  </data>
  <data name="IDS_LogoLine2" xml:space="preserve">
    <value>Copyright (C) Microsoft Corporation. All rights reserved.</value>
  </data>
  <data name="IDS_VBCHelp" xml:space="preserve">
    <value>                  Visual Basic Compiler Options

                                  - OUTPUT FILE -
/out:&lt;file&gt;                       Specifies the output file name.
/target:exe                       Create a console application (default). 
                                  (Short form: /t)
/target:winexe                    Create a Windows application.
/target:library                   Create a library assembly.
/target:module                    Create a module that can be added to an 
                                  assembly.
/target:appcontainerexe           Create a Windows application that runs in 
                                  AppContainer.
/target:winmdobj                  Create a Windows Metadata intermediate file
/doc[+|-]                         Generates XML documentation file.
/doc:&lt;file&gt;                       Generates XML documentation file to &lt;file&gt;.

                                  - INPUT FILES -
/addmodule:&lt;file_list&gt;            Reference metadata from the specified modules
/link:&lt;file_list&gt;                 Embed metadata from the specified interop 
                                  assembly. (Short form: /l)
/recurse:&lt;wildcard&gt;               Include all files in the current directory 
                                  and subdirectories according to the
                                  wildcard specifications.
/reference:&lt;file_list&gt;            Reference metadata from the specified 
                                  assembly. (Short form: /r)
/analyzer:&lt;file_list&gt;             Run the analyzers from this assembly
                                  (Short form: /a)
/additionalfile:&lt;file list&gt;       Additional files that don't directly affect code
                                  generation but may be used by analyzers for producing
                                  errors or warnings.

                                  - RESOURCES -
/linkresource:&lt;resinfo&gt;           Links the specified file as an external 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /linkres)
/nowin32manifest                  The default manifest should not be embedded 
                                  in the manifest section of the output PE.
/resource:&lt;resinfo&gt;               Adds the specified file as an embedded 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /res)
/win32icon:&lt;file&gt;                 Specifies a Win32 icon file (.ico) for the 
                                  default Win32 resources.
/win32manifest:&lt;file&gt;             The provided file is embedded in the manifest
                                  section of the output PE.
/win32resource:&lt;file&gt;             Specifies a Win32 resource file (.res).

                                  - CODE GENERATION -
/optimize[+|-]                    Enable optimizations.
/removeintchecks[+|-]             Remove integer checks. Default off.
/debug[+|-]                       Emit debugging information.
/debug:full                       Emit full debugging information (default).
/debug:portable                   Emit debugging information in the portable format.
/debug:pdbonly                    Emit PDB file only.
/deterministic                    Produce a deterministic assembly
                                  (including module version GUID and timestamp)

                                  - ERRORS AND WARNINGS -
/nowarn                           Disable all warnings.
/nowarn:&lt;number_list&gt;             Disable a list of individual warnings.
/warnaserror[+|-]                 Treat all warnings as errors.
/warnaserror[+|-]:&lt;number_list&gt;   Treat a list of warnings as errors.
/ruleset:&lt;file&gt;                   Specify a ruleset file that disables specific
                                  diagnostics.
/errorlog:&lt;file&gt;                  Specify a file to log all compiler and analyzer
                                  diagnostics.
/reportanalyzer                   Report additional analyzer information, such as
                                  execution time.
                                  - LANGUAGE -

/define:&lt;symbol_list&gt;             Declare global conditional compilation 
                                  symbol(s). symbol_list:name=value,... 
                                  (Short form: /d)
/imports:&lt;import_list&gt;            Declare global Imports for namespaces in 
                                  referenced metadata files. 
                                  import_list:namespace,...
/langversion:&lt;number&gt;             Specify language version: 
                                  9|9.0|10|10.0|11|11.0.
/optionexplicit[+|-]              Require explicit declaration of variables.
/optioninfer[+|-]                 Allow type inference of variables.
/rootnamespace:&lt;string&gt;           Specifies the root Namespace for all type 
                                  declarations.
/optionstrict[+|-]                Enforce strict language semantics.
/optionstrict:custom              Warn when strict language semantics are not 
                                  respected.
/optioncompare:binary             Specifies binary-style string comparisons. 
                                  This is the default.
/optioncompare:text               Specifies text-style string comparisons.

                                  - MISCELLANEOUS -
/help                             Display this usage message. (Short form: /?)
/noconfig                         Do not auto-include VBC.RSP file.
/nologo                           Do not display compiler copyright banner.
/quiet                            Quiet output mode.
/verbose                          Display verbose messages.
/parallel[+|-]                    Concurrent build. 

                                  - ADVANCED -
/baseaddress:&lt;number&gt;             The base address for a library or module 
                                  (hex).
/bugreport:&lt;file&gt;                 Create bug report file.
/checksumalgorithm:&lt;alg&gt;          Specify algorithm for calculating source file 
                                  checksum stored in PDB. Supported values are:
                                  SHA1 (default) or SHA256.
/codepage:&lt;number&gt;                Specifies the codepage to use when opening 
                                  source files.
/delaysign[+|-]                   Delay-sign the assembly using only the public
                                  portion of the strong name key.
/errorreport:&lt;string&gt;             Specifies how to handle internal compiler
                                  errors; must be prompt, send, none, or queue
                                  (default).
/filealign:&lt;number&gt;               Specify the alignment used for output file 
                                  sections.
/highentropyva[+|-]               Enable high-entropy ASLR.
/keycontainer:&lt;string&gt;            Specifies a strong name key container.
/keyfile:&lt;file&gt;                   Specifies a strong name key file.
/libpath:&lt;path_list&gt;              List of directories to search for metadata 
                                  references. (Semi-colon delimited.)
/main:&lt;class&gt;                     Specifies the Class or Module that contains 
                                  Sub Main. It can also be a Class that 
                                  inherits from System.Windows.Forms.Form. 
                                  (Short form: /m)
/moduleassemblyname:&lt;string&gt;      Name of the assembly which this module will 
                                  be a part of.
/netcf                            Target the .NET Compact Framework.
/nostdlib                         Do not reference standard libraries 
                                  (system.dll and VBC.RSP file).
/pathmap:&lt;K1&gt;=&lt;V1&gt;,&lt;K2&gt;=&lt;V2&gt;,...
                                  Specify a mapping for source path names output by
                                  the compiler.
/platform:&lt;string&gt;                Limit which platforms this code can run on; 
                                  must be x86, x64, Itanium, arm,
                                  AnyCPU32BitPreferred or anycpu (default).
/preferreduilang                  Specify the preferred output language name.
/sdkpath:&lt;path&gt;                   Location of the .NET Framework SDK directory
                                  (mscorlib.dll).
/subsystemversion:&lt;version&gt;       Specify subsystem version of the output PE. 
                                  version:&lt;number&gt;[.&lt;number&gt;]
/utf8output[+|-]                  Emit compiler output in UTF8 character 
                                  encoding.
@&lt;file&gt;                           Insert command-line settings from a text file
/vbruntime[+|-|*]                 Compile with/without the default Visual Basic
                                  runtime.
/vbruntime:&lt;file&gt;                 Compile with the alternate Visual Basic 
                                  runtime in &lt;file&gt;.
</value>
  </data>
  <data name="WRN_PdbLocalNameTooLong" xml:space="preserve">
    <value>Local name '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</value>
  </data>
  <data name="WRN_PdbLocalNameTooLong_Title" xml:space="preserve">
    <value>Local name is too long for PDB</value>
  </data>
  <data name="WRN_PdbUsingNameTooLong" xml:space="preserve">
    <value>Import string '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</value>
  </data>
  <data name="WRN_PdbUsingNameTooLong_Title" xml:space="preserve">
    <value>Import string is too long for PDB</value>
  </data>
  <data name="WRN_XMLDocCrefToTypeParameter" xml:space="preserve">
    <value>XML comment has a tag with a 'cref' attribute '{0}' that bound to a type parameter.  Use the &lt;typeparamref&gt; tag instead.</value>
  </data>
  <data name="WRN_XMLDocCrefToTypeParameter_Title" xml:space="preserve">
    <value>XML comment has a tag with a 'cref' attribute that bound to a type parameter</value>
  </data>
  <data name="ERR_LinkedNetmoduleMetadataMustProvideFullPEImage" xml:space="preserve">
    <value>Linked netmodule metadata must provide a full PE image: '{0}'.</value>
  </data>
  <data name="WRN_AnalyzerCannotBeCreated" xml:space="preserve">
    <value>An instance of analyzer {0} cannot be created from {1} : {2}.</value>
  </data>
  <data name="WRN_AnalyzerCannotBeCreated_Title" xml:space="preserve">
    <value>Instance of analyzer cannot be created</value>
  </data>
  <data name="WRN_NoAnalyzerInAssembly" xml:space="preserve">
    <value>The assembly {0} does not contain any analyzers.</value>
  </data>
  <data name="WRN_NoAnalyzerInAssembly_Title" xml:space="preserve">
    <value>Assembly does not contain any analyzers</value>
  </data>
  <data name="WRN_UnableToLoadAnalyzer" xml:space="preserve">
    <value>Unable to load analyzer assembly {0} : {1}.</value>
  </data>
  <data name="WRN_UnableToLoadAnalyzer_Title" xml:space="preserve">
    <value>Unable to load analyzer assembly</value>
  </data>
  <data name="INF_UnableToLoadSomeTypesInAnalyzer" xml:space="preserve">
    <value>Skipping some types in analyzer assembly {0} due to a ReflectionTypeLoadException : {1}.</value>
  </data>
  <data name="INF_UnableToLoadSomeTypesInAnalyzer_Title" xml:space="preserve">
    <value>Skip loading types in analyzer assembly that fail due to a ReflectionTypeLoadException</value>
  </data>
  <data name="ERR_CantReadRulesetFile" xml:space="preserve">
    <value>Error reading ruleset file {0} - {1}</value>
  </data>
  <data name="ERR_PlatformDoesntSupport" xml:space="preserve">
    <value>{0} is not supported in current project type.</value>
  </data>
  <data name="ERR_CantUseRequiredAttribute" xml:space="preserve">
    <value>The RequiredAttribute attribute is not permitted on Visual Basic types.</value>
  </data>
  <data name="ERR_EncodinglessSyntaxTree" xml:space="preserve">
    <value>Cannot emit debug information for a source text without encoding.</value>
  </data>
  <data name="ERR_InvalidFormatSpecifier" xml:space="preserve">
    <value>'{0}' is not a valid format specifier</value>
  </data>
  <data name="IDS_InvalidPreprocessorConstantType" xml:space="preserve">
    <value>Preprocessor constant '{0}' of type '{1}' is not supported, only primitive types are allowed.</value>
  </data>
  <data name="ERR_ExpectedWarningKeyword" xml:space="preserve">
    <value>'Warning' expected.</value>
  </data>
  <data name="ERR_CannotBeMadeNullable1" xml:space="preserve">
    <value>'{0}' cannot be made nullable.</value>
  </data>
  <data name="ERR_BadConditionalWithRef" xml:space="preserve">
    <value>Leading '?' can only appear inside a 'With' statement, but not inside an object member initializer.</value>
  </data>
  <data name="ERR_NullPropagatingOpInExpressionTree" xml:space="preserve">
    <value>A null propagating operator cannot be converted into an expression tree.</value>
  </data>
  <data name="ERR_TooLongOrComplexExpression" xml:space="preserve">
    <value>An expression is too long or complex to compile</value>
  </data>
  <data name="ERR_ExpressionDoesntHaveName" xml:space="preserve">
    <value>This expression does not have a name.</value>
  </data>
  <data name="ERR_InvalidNameOfSubExpression" xml:space="preserve">
    <value>This sub-expression cannot be used inside NameOf argument.</value>
  </data>
  <data name="ERR_MethodTypeArgsUnexpected" xml:space="preserve">
    <value>Method type arguments unexpected.</value>
  </data>
  <data name="NoNoneSearchCriteria" xml:space="preserve">
    <value>SearchCriteria is expected.</value>
  </data>
  <data name="ERR_InvalidAssemblyCulture" xml:space="preserve">
    <value>Assembly culture strings may not contain embedded NUL characters.</value>
  </data>
  <data name="ERR_InReferencedAssembly" xml:space="preserve">
    <value>There is an error in a referenced assembly '{0}'.</value>
  </data>
  <data name="ERR_InterpolationFormatWhitespace" xml:space="preserve">
    <value>Format specifier may not contain trailing whitespace.</value>
  </data>
  <data name="ERR_InterpolationAlignmentOutOfRange" xml:space="preserve">
    <value>Alignment value is outside of the supported range.</value>
  </data>
  <data name="ERR_InterpolatedStringFactoryError" xml:space="preserve">
    <value>There were one or more errors emitting a call to {0}.{1}. Method or its return type may be missing or malformed.</value>
  </data>
  <data name="HDN_UnusedImportClause_Title" xml:space="preserve">
    <value>Unused import clause</value>
  </data>
  <data name="HDN_UnusedImportStatement_Title" xml:space="preserve">
    <value>Unused import statement</value>
  </data>
  <data name="ERR_ConstantStringTooLong" xml:space="preserve">
    <value>Length of String constant exceeds current memory limit.  Try splitting the string into multiple constants.</value>
  </data>
  <data name="ERR_LanguageVersion" xml:space="preserve">
    <value>Visual Basic {0} does not support {1}.</value>
  </data>
  <data name="ERR_BadPdbData" xml:space="preserve">
    <value>Error reading debug information for '{0}'</value>
  </data>
  <data name="FEATURE_ArrayLiterals" xml:space="preserve">
    <value>array literal expressions</value>
  </data>
  <data name="FEATURE_AsyncExpressions" xml:space="preserve">
    <value>async methods or lambdas</value>
  </data>
  <data name="FEATURE_AutoProperties" xml:space="preserve">
    <value>auto-implemented properties</value>
  </data>
  <data name="FEATURE_ReadonlyAutoProperties" xml:space="preserve">
    <value>readonly auto-implemented properties</value>
  </data>
  <data name="FEATURE_CoContraVariance" xml:space="preserve">
    <value>variance</value>
  </data>
  <data name="FEATURE_CollectionInitializers" xml:space="preserve">
    <value>collection initializers</value>
  </data>
  <data name="FEATURE_GlobalNamespace" xml:space="preserve">
    <value>declaring a Global namespace</value>
  </data>
  <data name="FEATURE_Iterators" xml:space="preserve">
    <value>iterators</value>
  </data>
  <data name="FEATURE_LineContinuation" xml:space="preserve">
    <value>implicit line continuation</value>
  </data>
  <data name="FEATURE_StatementLambdas" xml:space="preserve">
    <value>multi-line lambda expressions</value>
  </data>
  <data name="FEATURE_SubLambdas" xml:space="preserve">
    <value>'Sub' lambda expressions</value>
  </data>
  <data name="FEATURE_NullPropagatingOperator" xml:space="preserve">
    <value>null conditional operations</value>
  </data>
  <data name="FEATURE_NameOfExpressions" xml:space="preserve">
    <value>'nameof' expressions</value>
  </data>
  <data name="FEATURE_RegionsEverywhere" xml:space="preserve">
    <value>region directives within method bodies or regions crossing boundaries of declaration blocks</value>
  </data>
  <data name="FEATURE_MultilineStringLiterals" xml:space="preserve">
    <value>multiline string literals</value>
  </data>
  <data name="FEATURE_CObjInAttributeArguments" xml:space="preserve">
    <value>CObj in attribute arguments</value>
  </data>
  <data name="FEATURE_LineContinuationComments" xml:space="preserve">
    <value>line continuation comments</value>
  </data>
  <data name="FEATURE_TypeOfIsNot" xml:space="preserve">
    <value>TypeOf IsNot expression</value>
  </data>
  <data name="FEATURE_YearFirstDateLiterals" xml:space="preserve">
    <value>year-first date literals</value>
  </data>
  <data name="FEATURE_WarningDirectives" xml:space="preserve">
    <value>warning directives</value>
  </data>
  <data name="FEATURE_PartialModules" xml:space="preserve">
    <value>partial modules</value>
  </data>
  <data name="FEATURE_PartialInterfaces" xml:space="preserve">
    <value>partial interfaces</value>
  </data>
  <data name="FEATURE_ImplementingReadonlyOrWriteonlyPropertyWithReadwrite" xml:space="preserve">
    <value>implementing read-only or write-only property with read-write property</value>
  </data>
  <data name="ERR_DebugEntryPointNotSourceMethodDefinition" xml:space="preserve">
    <value>Debug entry point must be a definition of a method declared in the current compilation.</value>
  </data>
  <data name="ERR_InvalidPathMap" xml:space="preserve">
    <value>The pathmap option was incorrectly formatted.</value>
  </data>
</root>
