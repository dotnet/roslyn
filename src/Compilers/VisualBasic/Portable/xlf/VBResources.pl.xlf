<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pl" original="../VBResources.resx">
    <body>
      <trans-unit id="Trees0">
        <source>trees({0})</source>
        <target state="new">trees({0})</target>
        <note />
      </trans-unit>
      <trans-unit id="TreesMustHaveRootNode">
        <source>trees({0}) must have root node with SyntaxKind.CompilationUnit.</source>
        <target state="new">trees({0}) must have root node with SyntaxKind.CompilationUnit.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotAddCompilerSpecialTree">
        <source>Cannot add compiler special tree</source>
        <target state="new">Cannot add compiler special tree</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeAlreadyPresent">
        <source>Syntax tree already present</source>
        <target state="new">Syntax tree already present</target>
        <note />
      </trans-unit>
      <trans-unit id="SubmissionCanHaveAtMostOneSyntaxTree">
        <source>Submission can have at most one syntax tree.</source>
        <target state="new">Submission can have at most one syntax tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotRemoveCompilerSpecialTree">
        <source>Cannot remove compiler special tree</source>
        <target state="new">Cannot remove compiler special tree</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeNotFoundToRemove">
        <source>SyntaxTree '{0}' not found to remove</source>
        <target state="new">SyntaxTree '{0}' not found to remove</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeMustHaveARootNodeWithCompilationUnit">
        <source>Tree must have a root node with SyntaxKind.CompilationUnit</source>
        <target state="new">Tree must have a root node with SyntaxKind.CompilationUnit</target>
        <note />
      </trans-unit>
      <trans-unit id="CompilationVisualBasic">
        <source>Compilation (Visual Basic): </source>
        <target state="new">Compilation (Visual Basic): </target>
        <note />
      </trans-unit>
      <trans-unit id="NodeIsNotWithinSyntaxTree">
        <source>Node is not within syntax tree</source>
        <target state="new">Node is not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="CantReferenceCompilationFromTypes">
        <source>Can't reference compilation of type '{0}' from {1} compilation.</source>
        <target state="new">Can't reference compilation of type '{0}' from {1} compilation.</target>
        <note />
      </trans-unit>
      <trans-unit id="PositionOfTypeParameterTooLarge">
        <source>position of type parameter too large</source>
        <target state="new">position of type parameter too large</target>
        <note />
      </trans-unit>
      <trans-unit id="AssociatedTypeDoesNotHaveTypeParameters">
        <source>Associated type does not have type parameters</source>
        <target state="new">Associated type does not have type parameters</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_FunctionReturnType">
        <source>function return type</source>
        <target state="new">function return type</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeArgumentCannotBeNothing">
        <source>Type argument cannot be Nothing</source>
        <target state="new">Type argument cannot be Nothing</target>
        <note />
      </trans-unit>
      <trans-unit id="WrongNumberOfTypeArguments">
        <source>Wrong number of type arguments</source>
        <target state="new">Wrong number of type arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FileNotFound">
        <source>file '{0}' could not be found</source>
        <target state="new">file '{0}' could not be found</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoResponseFile">
        <source>unable to open response file '{0}'</source>
        <target state="new">unable to open response file '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArgumentRequired">
        <source>option '{0}' requires '{1}'</source>
        <target state="new">option '{0}' requires '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SwitchNeedsBool">
        <source>option '{0}' can be followed only by '+' or '-'</source>
        <target state="new">option '{0}' can be followed only by '+' or '-'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidSwitchValue">
        <source>the value '{1}' is invalid for option '{0}'</source>
        <target state="new">the value '{1}' is invalid for option '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MutuallyExclusiveOptions">
        <source>Compilation options '{0}' and '{1}' can't both be specified at the same time.</source>
        <target state="new">Compilation options '{0}' and '{1}' can't both be specified at the same time.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadUILang">
        <source>The language name '{0}' is invalid.</source>
        <target state="new">The language name '{0}' is invalid.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadUILang_Title">
        <source>The language name for /preferreduilang is invalid</source>
        <target state="new">The language name for /preferreduilang is invalid</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VBCoreNetModuleConflict">
        <source>The options /vbruntime* and /target:module cannot be combined.</source>
        <target state="new">The options /vbruntime* and /target:module cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidFormatForGuidForOption">
        <source>Command-line syntax error: Invalid Guid format '{0}' for option '{1}'</source>
        <target state="new">Command-line syntax error: Invalid Guid format '{0}' for option '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingGuidForOption">
        <source>Command-line syntax error: Missing Guid for option '{1}'</source>
        <target state="new">Command-line syntax error: Missing Guid for option '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadChecksumAlgorithm">
        <source>Algorithm '{0}' is not supported</source>
        <target state="new">Algorithm '{0}' is not supported</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadSwitch">
        <source>unrecognized option '{0}'; ignored</source>
        <target state="new">unrecognized option '{0}'; ignored</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadSwitch_Title">
        <source>Unrecognized command-line option</source>
        <target state="new">Unrecognized command-line option</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoSources">
        <source>no input sources specified</source>
        <target state="new">no input sources specified</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_FileAlreadyIncluded">
        <source>source file '{0}' specified multiple times</source>
        <target state="new">source file '{0}' specified multiple times</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_FileAlreadyIncluded_Title">
        <source>Source file specified multiple times</source>
        <target state="new">Source file specified multiple times</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantOpenFileWrite">
        <source>can't open '{0}' for writing: {1}</source>
        <target state="new">can't open '{0}' for writing: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadCodepage">
        <source>code page '{0}' is invalid or not installed</source>
        <target state="new">code page '{0}' is invalid or not installed</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BinaryFile">
        <source>the file '{0}' is not a text file</source>
        <target state="new">the file '{0}' is not a text file</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LibNotFound">
        <source>could not find library '{0}'</source>
        <target state="new">could not find library '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MetadataReferencesNotSupported">
        <source>Metadata references not supported.</source>
        <target state="new">Metadata references not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IconFileAndWin32ResFile">
        <source>cannot specify both /win32icon and /win32resource</source>
        <target state="new">cannot specify both /win32icon and /win32resource</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoConfigInResponseFile">
        <source>ignoring /noconfig option because it was specified in a response file</source>
        <target state="new">ignoring /noconfig option because it was specified in a response file</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoConfigInResponseFile_Title">
        <source>Ignoring /noconfig option because it was specified in a response file</source>
        <target state="new">Ignoring /noconfig option because it was specified in a response file</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidWarningId">
        <source>warning number '{0}' for the option '{1}' is either not configurable or not valid</source>
        <target state="new">warning number '{0}' for the option '{1}' is either not configurable or not valid</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidWarningId_Title">
        <source>Warning number is either not configurable or not valid</source>
        <target state="new">Warning number is either not configurable or not valid</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoSourcesOut">
        <source>cannot infer an output file name from resource only input files; provide the '/out' option</source>
        <target state="new">cannot infer an output file name from resource only input files; provide the '/out' option</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NeedModule">
        <source>the /moduleassemblyname option may only be specified when building a target of type 'module'</source>
        <target state="new">the /moduleassemblyname option may only be specified when building a target of type 'module'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAssemblyName">
        <source>'{0}' is not a valid value for /moduleassemblyname</source>
        <target state="new">'{0}' is not a valid value for /moduleassemblyname</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConflictingManifestSwitches">
        <source>Error embedding Win32 manifest: Option /win32manifest conflicts with /nowin32manifest.</source>
        <target state="new">Error embedding Win32 manifest: Option /win32manifest conflicts with /nowin32manifest.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IgnoreModuleManifest">
        <source>Option /win32manifest ignored. It can be specified only when the target is an assembly.</source>
        <target state="new">Option /win32manifest ignored. It can be specified only when the target is an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IgnoreModuleManifest_Title">
        <source>Option /win32manifest ignored</source>
        <target state="new">Option /win32manifest ignored</target>
        <note />
      </trans-unit>
      <trans-unit id="FTL_InputFileNameTooLong">
        <source>File name '{0}' is empty, contains invalid characters, has a drive specification without an absolute path, or is too long</source>
        <target state="new">File name '{0}' is empty, contains invalid characters, has a drive specification without an absolute path, or is too long</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidInNamespace">
        <source>Statement is not valid in a namespace.</source>
        <target state="new">Statement is not valid in a namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UndefinedType1">
        <source>Type '{0}' is not defined.</source>
        <target state="new">Type '{0}' is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingNext">
        <source>'Next' expected.</source>
        <target state="new">'Next' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalCharConstant">
        <source>Character constant must contain exactly one character.</source>
        <target state="new">Character constant must contain exactly one character.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnreferencedAssemblyEvent3">
        <source>Reference required to assembly '{0}' containing the definition for event '{1}'. Add one to your project.</source>
        <target state="new">Reference required to assembly '{0}' containing the definition for event '{1}'. Add one to your project.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnreferencedModuleEvent3">
        <source>Reference required to module '{0}' containing the definition for event '{1}'. Add one to your project.</source>
        <target state="new">Reference required to module '{0}' containing the definition for event '{1}'. Add one to your project.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LbExpectedEndIf">
        <source>'#If' block must end with a matching '#End If'.</source>
        <target state="new">'#If' block must end with a matching '#End If'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LbNoMatchingIf">
        <source>'#ElseIf', '#Else', or '#End If' must be preceded by a matching '#If'.</source>
        <target state="new">'#ElseIf', '#Else', or '#End If' must be preceded by a matching '#If'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LbBadElseif">
        <source>'#ElseIf' must be preceded by a matching '#If' or '#ElseIf'.</source>
        <target state="new">'#ElseIf' must be preceded by a matching '#If' or '#ElseIf'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsFromRestrictedType1">
        <source>Inheriting from '{0}' is not valid.</source>
        <target state="new">Inheriting from '{0}' is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvOutsideProc">
        <source>Labels are not valid outside methods.</source>
        <target state="new">Labels are not valid outside methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateCantImplement">
        <source>Delegates cannot implement interface methods.</source>
        <target state="new">Delegates cannot implement interface methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateCantHandleEvents">
        <source>Delegates cannot handle events.</source>
        <target state="new">Delegates cannot handle events.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsOperatorRequiresReferenceTypes1">
        <source>'Is' operator does not accept operands of type '{0}'. Operands must be reference or nullable types.</source>
        <target state="new">'Is' operator does not accept operands of type '{0}'. Operands must be reference or nullable types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeOfRequiresReferenceType1">
        <source>'TypeOf ... Is' requires its left operand to have a reference type, but this operand has the value type '{0}'.</source>
        <target state="new">'TypeOf ... Is' requires its left operand to have a reference type, but this operand has the value type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyHasSet">
        <source>Properties declared 'ReadOnly' cannot have a 'Set'.</source>
        <target state="new">Properties declared 'ReadOnly' cannot have a 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WriteOnlyHasGet">
        <source>Properties declared 'WriteOnly' cannot have a 'Get'.</source>
        <target state="new">Properties declared 'WriteOnly' cannot have a 'Get'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideProc">
        <source>Statement is not valid inside a method.</source>
        <target state="new">Statement is not valid inside a method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideBlock">
        <source>Statement is not valid inside '{0}' block.</source>
        <target state="new">Statement is not valid inside '{0}' block.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnexpectedExpressionStatement">
        <source>Expression statement is only allowed at the end of an interactive submission.</source>
        <target state="new">Expression statement is only allowed at the end of an interactive submission.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndProp">
        <source>Property missing 'End Property'.</source>
        <target state="new">Property missing 'End Property'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndSubExpected">
        <source>'End Sub' expected.</source>
        <target state="new">'End Sub' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndFunctionExpected">
        <source>'End Function' expected.</source>
        <target state="new">'End Function' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LbElseNoMatchingIf">
        <source>'#Else' must be preceded by a matching '#If' or '#ElseIf'.</source>
        <target state="new">'#Else' must be preceded by a matching '#If' or '#ElseIf'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantRaiseBaseEvent">
        <source>Derived classes cannot raise base class events.</source>
        <target state="new">Derived classes cannot raise base class events.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TryWithoutCatchOrFinally">
        <source>Try must have at least one 'Catch' or a 'Finally'.</source>
        <target state="new">Try must have at least one 'Catch' or a 'Finally'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventsCantBeFunctions">
        <source>Events cannot have a return type.</source>
        <target state="new">Events cannot have a return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndBrack">
        <source>Bracketed identifier is missing closing ']'.</source>
        <target state="new">Bracketed identifier is missing closing ']'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_Syntax">
        <source>Syntax error.</source>
        <target state="new">Syntax error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_Overflow">
        <source>Overflow.</source>
        <target state="new">Overflow.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalChar">
        <source>Character is not valid.</source>
        <target state="new">Character is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowsObjectOperand1">
        <source>Option Strict On prohibits operands of type Object for operator '{0}'.</source>
        <target state="new">Option Strict On prohibits operands of type Object for operator '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LoopControlMustNotBeProperty">
        <source>Loop control variable cannot be a property or a late-bound indexed array.</source>
        <target state="new">Loop control variable cannot be a property or a late-bound indexed array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MethodBodyNotAtLineStart">
        <source>First statement of a method body cannot be on the same line as the method declaration.</source>
        <target state="new">First statement of a method body cannot be on the same line as the method declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MaximumNumberOfErrors">
        <source>Maximum number of errors has been exceeded.</source>
        <target state="new">Maximum number of errors has been exceeded.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfKeywordNotInInstanceMethod1">
        <source>'{0}' is valid only within an instance method.</source>
        <target state="new">'{0}' is valid only within an instance method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfKeywordFromStructure1">
        <source>'{0}' is not valid within a structure.</source>
        <target state="new">'{0}' is not valid within a structure.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeConstructor1">
        <source>Attribute constructor has a parameter of type '{0}', which is not an integral, floating-point or Enum type or one of Object, Char, String, Boolean, System.Type or 1-dimensional array of these types.</source>
        <target state="new">Attribute constructor has a parameter of type '{0}', which is not an integral, floating-point or Enum type or one of Object, Char, String, Boolean, System.Type or 1-dimensional array of these types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayWithOptArgs">
        <source>Method cannot have both a ParamArray and Optional parameters.</source>
        <target state="new">Method cannot have both a ParamArray and Optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedArray1">
        <source>'{0}' statement requires an array.</source>
        <target state="new">'{0}' statement requires an array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayNotArray">
        <source>ParamArray parameter must be an array.</source>
        <target state="new">ParamArray parameter must be an array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayRank">
        <source>ParamArray parameter must be a one-dimensional array.</source>
        <target state="new">ParamArray parameter must be a one-dimensional array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayRankLimit">
        <source>Array exceeds the limit of 32 dimensions.</source>
        <target state="new">Array exceeds the limit of 32 dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AsNewArray">
        <source>Arrays cannot be declared with 'New'.</source>
        <target state="new">Arrays cannot be declared with 'New'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyArgs1">
        <source>Too many arguments to '{0}'.</source>
        <target state="new">Too many arguments to '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedCase">
        <source>Statements and labels are not valid between 'Select Case' and first 'Case'.</source>
        <target state="new">Statements and labels are not valid between 'Select Case' and first 'Case'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredConstExpr">
        <source>Constant expression is required.</source>
        <target state="new">Constant expression is required.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredConstConversion2">
        <source>Conversion from '{0}' to '{1}' cannot occur in a constant expression.</source>
        <target state="new">Conversion from '{0}' to '{1}' cannot occur in a constant expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidMe">
        <source>'Me' cannot be the target of an assignment.</source>
        <target state="new">'Me' cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyAssignment">
        <source>'ReadOnly' variable cannot be the target of an assignment.</source>
        <target state="new">'ReadOnly' variable cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitSubOfFunc">
        <source>'Exit Sub' is not valid in a Function or Property.</source>
        <target state="new">'Exit Sub' is not valid in a Function or Property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitPropNot">
        <source>'Exit Property' is not valid in a Function or Sub.</source>
        <target state="new">'Exit Property' is not valid in a Function or Sub.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitFuncOfSub">
        <source>'Exit Function' is not valid in a Sub or Property.</source>
        <target state="new">'Exit Function' is not valid in a Sub or Property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LValueRequired">
        <source>Expression is a value and therefore cannot be the target of an assignment.</source>
        <target state="new">Expression is a value and therefore cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForIndexInUse1">
        <source>For loop control variable '{0}' already in use by an enclosing For loop.</source>
        <target state="new">For loop control variable '{0}' already in use by an enclosing For loop.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NextForMismatch1">
        <source>Next control variable does not match For loop control variable '{0}'.</source>
        <target state="new">Next control variable does not match For loop control variable '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CaseElseNoSelect">
        <source>'Case Else' can only appear inside a 'Select Case' statement.</source>
        <target state="new">'Case Else' can only appear inside a 'Select Case' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CaseNoSelect">
        <source>'Case' can only appear inside a 'Select Case' statement.</source>
        <target state="new">'Case' can only appear inside a 'Select Case' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantAssignToConst">
        <source>Constant cannot be the target of an assignment.</source>
        <target state="new">Constant cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedSubscript">
        <source>Named arguments are not valid as array subscripts.</source>
        <target state="new">Named arguments are not valid as array subscripts.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndIf">
        <source>'If' must end with a matching 'End If'.</source>
        <target state="new">'If' must end with a matching 'End If'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndWhile">
        <source>'While' must end with a matching 'End While'.</source>
        <target state="new">'While' must end with a matching 'End While'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedLoop">
        <source>'Do' must end with a matching 'Loop'.</source>
        <target state="new">'Do' must end with a matching 'Loop'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedNext">
        <source>'For' must end with a matching 'Next'.</source>
        <target state="new">'For' must end with a matching 'Next'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndWith">
        <source>'With' must end with a matching 'End With'.</source>
        <target state="new">'With' must end with a matching 'End With'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ElseNoMatchingIf">
        <source>'Else' must be preceded by a matching 'If' or 'ElseIf'.</source>
        <target state="new">'Else' must be preceded by a matching 'If' or 'ElseIf'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndIfNoMatchingIf">
        <source>'End If' must be preceded by a matching 'If'.</source>
        <target state="new">'End If' must be preceded by a matching 'If'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndSelectNoSelect">
        <source>'End Select' must be preceded by a matching 'Select Case'.</source>
        <target state="new">'End Select' must be preceded by a matching 'Select Case'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitDoNotWithinDo">
        <source>'Exit Do' can only appear inside a 'Do' statement.</source>
        <target state="new">'Exit Do' can only appear inside a 'Do' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndWhileNoWhile">
        <source>'End While' must be preceded by a matching 'While'.</source>
        <target state="new">'End While' must be preceded by a matching 'While'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LoopNoMatchingDo">
        <source>'Loop' must be preceded by a matching 'Do'.</source>
        <target state="new">'Loop' must be preceded by a matching 'Do'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NextNoMatchingFor">
        <source>'Next' must be preceded by a matching 'For'.</source>
        <target state="new">'Next' must be preceded by a matching 'For'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndWithWithoutWith">
        <source>'End With' must be preceded by a matching 'With'.</source>
        <target state="new">'End With' must be preceded by a matching 'With'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultiplyDefined1">
        <source>Label '{0}' is already defined in the current method.</source>
        <target state="new">Label '{0}' is already defined in the current method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndSelect">
        <source>'Select Case' must end with a matching 'End Select'.</source>
        <target state="new">'Select Case' must end with a matching 'End Select'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitForNotWithinFor">
        <source>'Exit For' can only appear inside a 'For' statement.</source>
        <target state="new">'Exit For' can only appear inside a 'For' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitWhileNotWithinWhile">
        <source>'Exit While' can only appear inside a 'While' statement.</source>
        <target state="new">'Exit While' can only appear inside a 'While' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyProperty1">
        <source>'ReadOnly' property '{0}' cannot be the target of an assignment.</source>
        <target state="new">'ReadOnly' property '{0}' cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitSelectNotWithinSelect">
        <source>'Exit Select' can only appear inside a 'Select' statement.</source>
        <target state="new">'Exit Select' can only appear inside a 'Select' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BranchOutOfFinally">
        <source>Branching out of a 'Finally' is not valid.</source>
        <target state="new">Branching out of a 'Finally' is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QualNotObjectRecord1">
        <source>'!' requires its left operand to have a type parameter, class or interface type, but this operand has the type '{0}'.</source>
        <target state="new">'!' requires its left operand to have a type parameter, class or interface type, but this operand has the type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooFewIndices">
        <source>Number of indices is less than the number of dimensions of the indexed array.</source>
        <target state="new">Number of indices is less than the number of dimensions of the indexed array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyIndices">
        <source>Number of indices exceeds the number of dimensions of the indexed array.</source>
        <target state="new">Number of indices exceeds the number of dimensions of the indexed array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EnumNotExpression1">
        <source>'{0}' is an Enum type and cannot be used as an expression.</source>
        <target state="new">'{0}' is an Enum type and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeNotExpression1">
        <source>'{0}' is a type and cannot be used as an expression.</source>
        <target state="new">'{0}' is a type and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClassNotExpression1">
        <source>'{0}' is a class type and cannot be used as an expression.</source>
        <target state="new">'{0}' is a class type and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructureNotExpression1">
        <source>'{0}' is a structure type and cannot be used as an expression.</source>
        <target state="new">'{0}' is a structure type and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceNotExpression1">
        <source>'{0}' is an interface type and cannot be used as an expression.</source>
        <target state="new">'{0}' is an interface type and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamespaceNotExpression1">
        <source>'{0}' is a namespace and cannot be used as an expression.</source>
        <target state="new">'{0}' is a namespace and cannot be used as an expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadNamespaceName1">
        <source>'{0}' is not a valid name and cannot be used as the root namespace name.</source>
        <target state="new">'{0}' is not a valid name and cannot be used as the root namespace name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_XmlPrefixNotExpression">
        <source>'{0}' is an XML prefix and cannot be used as an expression.  Use the GetXmlNamespace operator to create a namespace object.</source>
        <target state="new">'{0}' is an XML prefix and cannot be used as an expression.  Use the GetXmlNamespace operator to create a namespace object.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleExtends">
        <source>'Inherits' can appear only once within a 'Class' statement and can only specify one class.</source>
        <target state="new">'Inherits' can appear only once within a 'Class' statement and can only specify one class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropMustHaveGetSet">
        <source>Property without a 'ReadOnly' or 'WriteOnly' specifier must provide both a 'Get' and a 'Set'.</source>
        <target state="new">Property without a 'ReadOnly' or 'WriteOnly' specifier must provide both a 'Get' and a 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WriteOnlyHasNoWrite">
        <source>'WriteOnly' property must provide a 'Set'.</source>
        <target state="new">'WriteOnly' property must provide a 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyHasNoGet">
        <source>'ReadOnly' property must provide a 'Get'.</source>
        <target state="new">'ReadOnly' property must provide a 'Get'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttribute1">
        <source>Attribute '{0}' is not valid: Incorrect argument value.</source>
        <target state="new">Attribute '{0}' is not valid: Incorrect argument value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LabelNotDefined1">
        <source>Label '{0}' is not defined.</source>
        <target state="new">Label '{0}' is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ErrorCreatingWin32ResourceFile">
        <source>Error creating Win32 resources: {0}</source>
        <target state="new">Error creating Win32 resources: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnableToCreateTempFile">
        <source>Cannot create temporary file: {0}</source>
        <target state="new">Cannot create temporary file: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredNewCall2">
        <source>First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</source>
        <target state="new">First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnimplementedMember3">
        <source>{0} '{1}' must implement '{2}' for interface '{3}'.</source>
        <target state="new">{0} '{1}' must implement '{2}' for interface '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadWithRef">
        <source>Leading '.' or '!' can only appear inside a 'With' statement.</source>
        <target state="new">Leading '.' or '!' can only appear inside a 'With' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateAccessCategoryUsed">
        <source>Only one of 'Public', 'Private', 'Protected', 'Friend', 'Protected Friend', or 'Private Protected' can be specified.</source>
        <target state="new">Only one of 'Public', 'Private', 'Protected', 'Friend', 'Protected Friend', or 'Private Protected' can be specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateModifierCategoryUsed">
        <source>Only one of 'NotOverridable', 'MustOverride', or 'Overridable' can be specified.</source>
        <target state="new">Only one of 'NotOverridable', 'MustOverride', or 'Overridable' can be specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateSpecifier">
        <source>Specifier is duplicated.</source>
        <target state="new">Specifier is duplicated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeConflict6">
        <source>{0} '{1}' and {2} '{3}' conflict in {4} '{5}'.</source>
        <target state="new">{0} '{1}' and {2} '{3}' conflict in {4} '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnrecognizedTypeKeyword">
        <source>Keyword does not name a type.</source>
        <target state="new">Keyword does not name a type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtraSpecifiers">
        <source>Specifiers valid only at the beginning of a declaration.</source>
        <target state="new">Specifiers valid only at the beginning of a declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnrecognizedType">
        <source>Type expected.</source>
        <target state="new">Type expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidUseOfKeyword">
        <source>Keyword is not valid as an identifier.</source>
        <target state="new">Keyword is not valid as an identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndEnum">
        <source>'End Enum' must be preceded by a matching 'Enum'.</source>
        <target state="new">'End Enum' must be preceded by a matching 'Enum'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndEnum">
        <source>'Enum' must end with a matching 'End Enum'.</source>
        <target state="new">'Enum' must end with a matching 'End Enum'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDeclaration">
        <source>Declaration expected.</source>
        <target state="new">Declaration expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayMustBeLast">
        <source>End of parameter list expected. Cannot define parameters after a paramarray parameter.</source>
        <target state="new">End of parameter list expected. Cannot define parameters after a paramarray parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SpecifiersInvalidOnInheritsImplOpt">
        <source>Specifiers and attributes are not valid on this statement.</source>
        <target state="new">Specifiers and attributes are not valid on this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSpecifier">
        <source>Expected one of 'Dim', 'Const', 'Public', 'Private', 'Protected', 'Friend', 'Shadows', 'ReadOnly' or 'Shared'.</source>
        <target state="new">Expected one of 'Dim', 'Const', 'Public', 'Private', 'Protected', 'Friend', 'Shadows', 'ReadOnly' or 'Shared'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedComma">
        <source>Comma expected.</source>
        <target state="new">Comma expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedAs">
        <source>'As' expected.</source>
        <target state="new">'As' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedRparen">
        <source>')' expected.</source>
        <target state="new">')' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedLparen">
        <source>'(' expected.</source>
        <target state="new">'(' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidNewInType">
        <source>'New' is not valid in this context.</source>
        <target state="new">'New' is not valid in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedExpression">
        <source>Expression expected.</source>
        <target state="new">Expression expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedOptional">
        <source>'Optional' expected.</source>
        <target state="new">'Optional' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedIdentifier">
        <source>Identifier expected.</source>
        <target state="new">Identifier expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedIntLiteral">
        <source>Integer constant expected.</source>
        <target state="new">Integer constant expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEOS">
        <source>End of statement expected.</source>
        <target state="new">End of statement expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedForOptionStmt">
        <source>'Option' must be followed by 'Compare', 'Explicit', 'Infer', or 'Strict'.</source>
        <target state="new">'Option' must be followed by 'Compare', 'Explicit', 'Infer', or 'Strict'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionCompare">
        <source>'Option Compare' must be followed by 'Text' or 'Binary'.</source>
        <target state="new">'Option Compare' must be followed by 'Text' or 'Binary'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedOptionCompare">
        <source>'Compare' expected.</source>
        <target state="new">'Compare' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowImplicitObject">
        <source>Option Strict On requires all variable declarations to have an 'As' clause.</source>
        <target state="new">Option Strict On requires all variable declarations to have an 'As' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowsImplicitProc">
        <source>Option Strict On requires all Function, Property, and Operator declarations to have an 'As' clause.</source>
        <target state="new">Option Strict On requires all Function, Property, and Operator declarations to have an 'As' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowsImplicitArgs">
        <source>Option Strict On requires that all method parameters have an 'As' clause.</source>
        <target state="new">Option Strict On requires that all method parameters have an 'As' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidParameterSyntax">
        <source>Comma or ')' expected.</source>
        <target state="new">Comma or ')' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSubFunction">
        <source>'Sub' or 'Function' expected.</source>
        <target state="new">'Sub' or 'Function' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedStringLiteral">
        <source>String constant expected.</source>
        <target state="new">String constant expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingLibInDeclare">
        <source>'Lib' expected.</source>
        <target state="new">'Lib' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateNoInvoke1">
        <source>Delegate class '{0}' has no Invoke method, so an expression of this type cannot be the target of a method call.</source>
        <target state="new">Delegate class '{0}' has no Invoke method, so an expression of this type cannot be the target of a method call.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingIsInTypeOf">
        <source>'Is' expected.</source>
        <target state="new">'Is' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateOption1">
        <source>'Option {0}' statement can only appear once per file.</source>
        <target state="new">'Option {0}' statement can only appear once per file.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantInherit">
        <source>'Inherits' not valid in Modules.</source>
        <target state="new">'Inherits' not valid in Modules.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantImplement">
        <source>'Implements' not valid in Modules.</source>
        <target state="new">'Implements' not valid in Modules.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadImplementsType">
        <source>Implemented type must be an interface.</source>
        <target state="new">Implemented type must be an interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadConstFlags1">
        <source>'{0}' is not valid on a constant declaration.</source>
        <target state="new">'{0}' is not valid on a constant declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadWithEventsFlags1">
        <source>'{0}' is not valid on a WithEvents declaration.</source>
        <target state="new">'{0}' is not valid on a WithEvents declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadDimFlags1">
        <source>'{0}' is not valid on a member variable declaration.</source>
        <target state="new">'{0}' is not valid on a member variable declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateParamName1">
        <source>Parameter already declared with name '{0}'.</source>
        <target state="new">Parameter already declared with name '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LoopDoubleCondition">
        <source>'Loop' cannot have a condition if matching 'Do' has one.</source>
        <target state="new">'Loop' cannot have a condition if matching 'Do' has one.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedRelational">
        <source>Relational operator expected.</source>
        <target state="new">Relational operator expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedExitKind">
        <source>'Exit' must be followed by 'Sub', 'Function', 'Property', 'Do', 'For', 'While', 'Select', or 'Try'.</source>
        <target state="new">'Exit' must be followed by 'Sub', 'Function', 'Property', 'Do', 'For', 'While', 'Select', or 'Try'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedNamedArgumentInAttributeList">
        <source>Named argument expected.</source>
        <target state="new">Named argument expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgumentSpecificationBeforeFixedArgumentInLateboundInvocation">
        <source>Named argument specifications must appear after all fixed arguments have been specified in a late bound invocation.</source>
        <target state="new">Named argument specifications must appear after all fixed arguments have been specified in a late bound invocation.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedNamedArgument">
        <source>Named argument expected. Please use language version {0} or greater to use non-trailing named arguments.</source>
        <target state="new">Named argument expected. Please use language version {0} or greater to use non-trailing named arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadMethodFlags1">
        <source>'{0}' is not valid on a method declaration.</source>
        <target state="new">'{0}' is not valid on a method declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadEventFlags1">
        <source>'{0}' is not valid on an event declaration.</source>
        <target state="new">'{0}' is not valid on an event declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadDeclareFlags1">
        <source>'{0}' is not valid on a Declare.</source>
        <target state="new">'{0}' is not valid on a Declare.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadLocalConstFlags1">
        <source>'{0}' is not valid on a local constant declaration.</source>
        <target state="new">'{0}' is not valid on a local constant declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadLocalDimFlags1">
        <source>'{0}' is not valid on a local variable declaration.</source>
        <target state="new">'{0}' is not valid on a local variable declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedConditionalDirective">
        <source>'If', 'ElseIf', 'Else', 'Const', 'Region', 'ExternalSource', 'ExternalChecksum', 'Enable', 'Disable', 'End' or 'R' expected.</source>
        <target state="new">'If', 'ElseIf', 'Else', 'Const', 'Region', 'ExternalSource', 'ExternalChecksum', 'Enable', 'Disable', 'End' or 'R' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEQ">
        <source>'=' expected.</source>
        <target state="new">'=' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstructorNotFound1">
        <source>Type '{0}' has no constructors.</source>
        <target state="new">Type '{0}' has no constructors.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndInterface">
        <source>'End Interface' must be preceded by a matching 'Interface'.</source>
        <target state="new">'End Interface' must be preceded by a matching 'Interface'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndInterface">
        <source>'Interface' must end with a matching 'End Interface'.</source>
        <target state="new">'Interface' must end with a matching 'End Interface'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsFrom2">
        <source>
    '{0}' inherits from '{1}'.</source>
        <target state="new">
    '{0}' inherits from '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsNestedIn2">
        <source>
    '{0}' is nested in '{1}'.</source>
        <target state="new">
    '{0}' is nested in '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritanceCycle1">
        <source>Class '{0}' cannot inherit from itself: {1}</source>
        <target state="new">Class '{0}' cannot inherit from itself: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsFromNonClass">
        <source>Classes can inherit only from other classes.</source>
        <target state="new">Classes can inherit only from other classes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultiplyDefinedType3">
        <source>'{0}' is already declared as '{1}' in this {2}.</source>
        <target state="new">'{0}' is already declared as '{1}' in this {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadOverrideAccess2">
        <source>'{0}' cannot override '{1}' because they have different access levels.</source>
        <target state="new">'{0}' cannot override '{1}' because they have different access levels.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantOverrideNotOverridable2">
        <source>'{0}' cannot override '{1}' because it is declared 'NotOverridable'.</source>
        <target state="new">'{0}' cannot override '{1}' because it is declared 'NotOverridable'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateProcDef1">
        <source>'{0}' has multiple definitions with identical signatures.</source>
        <target state="new">'{0}' has multiple definitions with identical signatures.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateProcDefWithDifferentTupleNames2">
        <source>'{0}' has multiple definitions with identical signatures with different tuple element names, including '{1}'.</source>
        <target state="new">'{0}' has multiple definitions with identical signatures with different tuple element names, including '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceMethodFlags1">
        <source>'{0}' is not valid on an interface method declaration.</source>
        <target state="new">'{0}' is not valid on an interface method declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedParamNotFound2">
        <source>'{0}' is not a parameter of '{1}'.</source>
        <target state="new">'{0}' is not a parameter of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfacePropertyFlags1">
        <source>'{0}' is not valid on an interface property declaration.</source>
        <target state="new">'{0}' is not valid on an interface property declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgUsedTwice2">
        <source>Parameter '{0}' of '{1}' already has a matching argument.</source>
        <target state="new">Parameter '{0}' of '{1}' already has a matching argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceCantUseEventSpecifier1">
        <source>'{0}' is not valid on an interface event declaration.</source>
        <target state="new">'{0}' is not valid on an interface event declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypecharNoMatch2">
        <source>Type character '{0}' does not match declared data type '{1}'.</source>
        <target state="new">Type character '{0}' does not match declared data type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSubOrFunction">
        <source>'Sub' or 'Function' expected after 'Delegate'.</source>
        <target state="new">'Sub' or 'Function' expected after 'Delegate'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadEmptyEnum1">
        <source>Enum '{0}' must contain at least one member.</source>
        <target state="new">Enum '{0}' must contain at least one member.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidConstructorCall">
        <source>Constructor call is valid only as the first statement in an instance constructor.</source>
        <target state="new">Constructor call is valid only as the first statement in an instance constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantOverrideConstructor">
        <source>'Sub New' cannot be declared 'Overrides'.</source>
        <target state="new">'Sub New' cannot be declared 'Overrides'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstructorCannotBeDeclaredPartial">
        <source>'Sub New' cannot be declared 'Partial'.</source>
        <target state="new">'Sub New' cannot be declared 'Partial'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleEmitFailure">
        <source>Failed to emit module '{0}'.</source>
        <target state="new">Failed to emit module '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EncUpdateFailedMissingAttribute">
        <source>Cannot update '{0}'; attribute '{1}' is missing.</source>
        <target state="new">Cannot update '{0}'; attribute '{1}' is missing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideNotNeeded3">
        <source>{0} '{1}' cannot be declared 'Overrides' because it does not override a {0} in a base class.</source>
        <target state="new">{0} '{1}' cannot be declared 'Overrides' because it does not override a {0} in a base class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDot">
        <source>'.' expected.</source>
        <target state="new">'.' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateLocals1">
        <source>Local variable '{0}' is already declared in the current block.</source>
        <target state="new">Local variable '{0}' is already declared in the current block.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEndsProc">
        <source>Statement cannot appear within a method body. End of method assumed.</source>
        <target state="new">Statement cannot appear within a method body. End of method assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LocalSameAsFunc">
        <source>Local variable cannot have the same name as the function containing it.</source>
        <target state="new">Local variable cannot have the same name as the function containing it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RecordEmbeds2">
        <source>
    '{0}' contains '{1}' (variable '{2}').</source>
        <target state="new">
    '{0}' contains '{1}' (variable '{2}').</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RecordCycle2">
        <source>Structure '{0}' cannot contain an instance of itself: {1}</source>
        <target state="new">Structure '{0}' cannot contain an instance of itself: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceCycle1">
        <source>Interface '{0}' cannot inherit from itself: {1}</source>
        <target state="new">Interface '{0}' cannot inherit from itself: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubNewCycle2">
        <source>
    '{0}' calls '{1}'.</source>
        <target state="new">
    '{0}' calls '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubNewCycle1">
        <source>Constructor '{0}' cannot call itself: {1}</source>
        <target state="new">Constructor '{0}' cannot call itself: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsFromCantInherit3">
        <source>'{0}' cannot inherit from {2} '{1}' because '{1}' is declared 'NotInheritable'.</source>
        <target state="new">'{0}' cannot inherit from {2} '{1}' because '{1}' is declared 'NotInheritable'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadWithOptional2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by optional parameters.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadWithReturnType2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by return types.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by return types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeCharWithType1">
        <source>Type character '{0}' cannot be used in a declaration with an explicit type.</source>
        <target state="new">Type character '{0}' cannot be used in a declaration with an explicit type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeCharOnSub">
        <source>Type character cannot be used in a 'Sub' declaration because a 'Sub' doesn't return a value.</source>
        <target state="new">Type character cannot be used in a 'Sub' declaration because a 'Sub' doesn't return a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadWithDefault2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by the default values of optional parameters.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by the default values of optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingSubscript">
        <source>Array subscript expression missing.</source>
        <target state="new">Array subscript expression missing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithDefault2">
        <source>'{0}' cannot override '{1}' because they differ by the default values of optional parameters.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by the default values of optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithOptional2">
        <source>'{0}' cannot override '{1}' because they differ by optional parameters.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FieldOfValueFieldOfMarshalByRef3">
        <source>Cannot refer to '{0}' because it is a member of the value-typed field '{1}' of class '{2}' which has 'System.MarshalByRefObject' as a base class.</source>
        <target state="new">Cannot refer to '{0}' because it is a member of the value-typed field '{1}' of class '{2}' which has 'System.MarshalByRefObject' as a base class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeMismatch2">
        <source>Value of type '{0}' cannot be converted to '{1}'.</source>
        <target state="new">Value of type '{0}' cannot be converted to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CaseAfterCaseElse">
        <source>'Case' cannot follow a 'Case Else' in the same 'Select' statement.</source>
        <target state="new">'Case' cannot follow a 'Case Else' in the same 'Select' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConvertArrayMismatch4">
        <source>Value of type '{0}' cannot be converted to '{1}' because '{2}' is not derived from '{3}'.</source>
        <target state="new">Value of type '{0}' cannot be converted to '{1}' because '{2}' is not derived from '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConvertObjectArrayMismatch3">
        <source>Value of type '{0}' cannot be converted to '{1}' because '{2}' is not a reference type.</source>
        <target state="new">Value of type '{0}' cannot be converted to '{1}' because '{2}' is not a reference type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForLoopType1">
        <source>'For' loop control variable cannot be of type '{0}' because the type does not support the required operators.</source>
        <target state="new">'For' loop control variable cannot be of type '{0}' because the type does not support the required operators.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadWithByref2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ByRef' or 'ByVal'.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ByRef' or 'ByVal'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsFromNonInterface">
        <source>Interface can inherit only from another interface.</source>
        <target state="new">Interface can inherit only from another interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceOrderOnInherits">
        <source>'Inherits' statements must precede all declarations in an interface.</source>
        <target state="new">'Inherits' statements must precede all declarations in an interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateDefaultProps1">
        <source>'Default' can be applied to only one property name in a {0}.</source>
        <target state="new">'Default' can be applied to only one property name in a {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultMissingFromProperty2">
        <source>'{0}' and '{1}' cannot overload each other because only one is declared 'Default'.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because only one is declared 'Default'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverridingPropertyKind2">
        <source>'{0}' cannot override '{1}' because they differ by 'ReadOnly' or 'WriteOnly'.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by 'ReadOnly' or 'WriteOnly'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewInInterface">
        <source>'Sub New' cannot be declared in an interface.</source>
        <target state="new">'Sub New' cannot be declared in an interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsOnNew1">
        <source>'Sub New' cannot be declared '{0}'.</source>
        <target state="new">'Sub New' cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadingPropertyKind2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by 'ReadOnly' or 'WriteOnly'.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by 'ReadOnly' or 'WriteOnly'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoDefaultNotExtend1">
        <source>Class '{0}' cannot be indexed because it has no default property.</source>
        <target state="new">Class '{0}' cannot be indexed because it has no default property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadWithArrayVsParamArray2">
        <source>'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ParamArray'.</source>
        <target state="new">'{0}' and '{1}' cannot overload each other because they differ only by parameters declared 'ParamArray'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInstanceMemberAccess">
        <source>Cannot refer to an instance member of a class from within a shared method or shared member initializer without an explicit instance of the class.</source>
        <target state="new">Cannot refer to an instance member of a class from within a shared method or shared member initializer without an explicit instance of the class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedRbrace">
        <source>'}' expected.</source>
        <target state="new">'}' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleAsType1">
        <source>Module '{0}' cannot be used as a type.</source>
        <target state="new">Module '{0}' cannot be used as a type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewIfNullOnNonClass">
        <source>'New' cannot be used on an interface.</source>
        <target state="new">'New' cannot be used on an interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CatchAfterFinally">
        <source>'Catch' cannot appear after 'Finally' within a 'Try' statement.</source>
        <target state="new">'Catch' cannot appear after 'Finally' within a 'Try' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CatchNoMatchingTry">
        <source>'Catch' cannot appear outside a 'Try' statement.</source>
        <target state="new">'Catch' cannot appear outside a 'Try' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FinallyAfterFinally">
        <source>'Finally' can only appear once in a 'Try' statement.</source>
        <target state="new">'Finally' can only appear once in a 'Try' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FinallyNoMatchingTry">
        <source>'Finally' cannot appear outside a 'Try' statement.</source>
        <target state="new">'Finally' cannot appear outside a 'Try' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndTryNoTry">
        <source>'End Try' must be preceded by a matching 'Try'.</source>
        <target state="new">'End Try' must be preceded by a matching 'Try'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndTry">
        <source>'Try' must end with a matching 'End Try'.</source>
        <target state="new">'Try' must end with a matching 'End Try'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadDelegateFlags1">
        <source>'{0}' is not valid on a Delegate declaration.</source>
        <target state="new">'{0}' is not valid on a Delegate declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoConstructorOnBase2">
        <source>Class '{0}' must declare a 'Sub New' because its base class '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</source>
        <target state="new">Class '{0}' must declare a 'Sub New' because its base class '{1}' does not have an accessible 'Sub New' that can be called with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InaccessibleSymbol2">
        <source>'{0}' is not accessible in this context because it is '{1}'.</source>
        <target state="new">'{0}' is not accessible in this context because it is '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InaccessibleMember3">
        <source>'{0}.{1}' is not accessible in this context because it is '{2}'.</source>
        <target state="new">'{0}.{1}' is not accessible in this context because it is '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CatchNotException1">
        <source>'Catch' cannot catch type '{0}' because it is not 'System.Exception' or a class that inherits from 'System.Exception'.</source>
        <target state="new">'Catch' cannot catch type '{0}' because it is not 'System.Exception' or a class that inherits from 'System.Exception'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitTryNotWithinTry">
        <source>'Exit Try' can only appear inside a 'Try' statement.</source>
        <target state="new">'Exit Try' can only appear inside a 'Try' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadRecordFlags1">
        <source>'{0}' is not valid on a Structure declaration.</source>
        <target state="new">'{0}' is not valid on a Structure declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadEnumFlags1">
        <source>'{0}' is not valid on an Enum declaration.</source>
        <target state="new">'{0}' is not valid on an Enum declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceFlags1">
        <source>'{0}' is not valid on an Interface declaration.</source>
        <target state="new">'{0}' is not valid on an Interface declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithByref2">
        <source>'{0}' cannot override '{1}' because they differ by a parameter that is marked as 'ByRef' versus 'ByVal'.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by a parameter that is marked as 'ByRef' versus 'ByVal'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MyBaseAbstractCall1">
        <source>'MyBase' cannot be used with method '{0}' because it is declared 'MustOverride'.</source>
        <target state="new">'MyBase' cannot be used with method '{0}' because it is declared 'MustOverride'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IdentNotMemberOfInterface4">
        <source>'{0}' cannot implement '{1}' because there is no matching {2} on interface '{3}'.</source>
        <target state="new">'{0}' cannot implement '{1}' because there is no matching {2} on interface '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementingInterfaceWithDifferentTupleNames5">
        <source>'{0}' cannot implement {1} '{2}' on interface '{3}' because the tuple element names in '{4}' do not match those in '{5}'.</source>
        <target state="new">'{0}' cannot implement {1} '{2}' on interface '{3}' because the tuple element names in '{4}' do not match those in '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WithEventsRequiresClass">
        <source>'WithEvents' variables must have an 'As' clause.</source>
        <target state="new">'WithEvents' variables must have an 'As' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WithEventsAsStruct">
        <source>'WithEvents' variables can only be typed as classes, interfaces or type parameters with class constraints.</source>
        <target state="new">'WithEvents' variables can only be typed as classes, interfaces or type parameters with class constraints.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConvertArrayRankMismatch2">
        <source>Value of type '{0}' cannot be converted to '{1}' because the array types have different numbers of dimensions.</source>
        <target state="new">Value of type '{0}' cannot be converted to '{1}' because the array types have different numbers of dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RedimRankMismatch">
        <source>'ReDim' cannot change the number of dimensions of an array.</source>
        <target state="new">'ReDim' cannot change the number of dimensions of an array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StartupCodeNotFound1">
        <source>'Sub Main' was not found in '{0}'.</source>
        <target state="new">'Sub Main' was not found in '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstAsNonConstant">
        <source>Constants must be of an intrinsic or enumerated type, not a class, structure, type parameter, or array type.</source>
        <target state="new">Constants must be of an intrinsic or enumerated type, not a class, structure, type parameter, or array type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndSub">
        <source>'End Sub' must be preceded by a matching 'Sub'.</source>
        <target state="new">'End Sub' must be preceded by a matching 'Sub'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndFunction">
        <source>'End Function' must be preceded by a matching 'Function'.</source>
        <target state="new">'End Function' must be preceded by a matching 'Function'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndProperty">
        <source>'End Property' must be preceded by a matching 'Property'.</source>
        <target state="new">'End Property' must be preceded by a matching 'Property'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantUseMethodSpecifier1">
        <source>Methods in a Module cannot be declared '{0}'.</source>
        <target state="new">Methods in a Module cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantUseEventSpecifier1">
        <source>Events in a Module cannot be declared '{0}'.</source>
        <target state="new">Events in a Module cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructCantUseVarSpecifier1">
        <source>Members in a Structure cannot be declared '{0}'.</source>
        <target state="new">Members in a Structure cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOverrideDueToReturn2">
        <source>'{0}' cannot override '{1}' because they differ by their return types.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by their return types.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidOverrideDueToTupleNames2">
        <source>'{0}' cannot override '{1}' because they differ by their tuple element names.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by their tuple element names.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidOverrideDueToTupleNames2_Title">
        <source>Member cannot override because it differs by its tuple element names.</source>
        <target state="new">Member cannot override because it differs by its tuple element names.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstantWithNoValue">
        <source>Constants must have a value.</source>
        <target state="new">Constants must have a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpressionOverflow1">
        <source>Constant expression not representable in type '{0}'.</source>
        <target state="new">Constant expression not representable in type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicatePropertyGet">
        <source>'Get' is already declared.</source>
        <target state="new">'Get' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicatePropertySet">
        <source>'Set' is already declared.</source>
        <target state="new">'Set' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NameNotDeclared1">
        <source>'{0}' is not declared. It may be inaccessible due to its protection level.</source>
        <target state="new">'{0}' is not declared. It may be inaccessible due to its protection level.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BinaryOperands3">
        <source>Operator '{0}' is not defined for types '{1}' and '{2}'.</source>
        <target state="new">Operator '{0}' is not defined for types '{1}' and '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedProcedure">
        <source>Expression is not a method.</source>
        <target state="new">Expression is not a method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OmittedArgument2">
        <source>Argument not specified for parameter '{0}' of '{1}'.</source>
        <target state="new">Argument not specified for parameter '{0}' of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NameNotMember2">
        <source>'{0}' is not a member of '{1}'.</source>
        <target state="new">'{0}' is not a member of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndClassNoClass">
        <source>'End Class' must be preceded by a matching 'Class'.</source>
        <target state="new">'End Class' must be preceded by a matching 'Class'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadClassFlags1">
        <source>Classes cannot be declared '{0}'.</source>
        <target state="new">Classes cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImportsMustBeFirst">
        <source>'Imports' statements must precede any declarations.</source>
        <target state="new">'Imports' statements must precede any declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NonNamespaceOrClassOnImport2">
        <source>'{1}' for the Imports '{0}' does not refer to a Namespace, Class, Structure, Enum or Module.</source>
        <target state="new">'{1}' for the Imports '{0}' does not refer to a Namespace, Class, Structure, Enum or Module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypecharNotallowed">
        <source>Type declaration characters are not valid in this context.</source>
        <target state="new">Type declaration characters are not valid in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObjectReferenceNotSupplied">
        <source>Reference to a non-shared member requires an object reference.</source>
        <target state="new">Reference to a non-shared member requires an object reference.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MyClassNotInClass">
        <source>'MyClass' cannot be used outside of a class.</source>
        <target state="new">'MyClass' cannot be used outside of a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IndexedNotArrayOrProc">
        <source>Expression is not an array or a method, and cannot have an argument list.</source>
        <target state="new">Expression is not an array or a method, and cannot have an argument list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventSourceIsArray">
        <source>'WithEvents' variables cannot be typed as arrays.</source>
        <target state="new">'WithEvents' variables cannot be typed as arrays.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedConstructorWithParams">
        <source>Shared 'Sub New' cannot have any parameters.</source>
        <target state="new">Shared 'Sub New' cannot have any parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedConstructorIllegalSpec1">
        <source>Shared 'Sub New' cannot be declared '{0}'.</source>
        <target state="new">Shared 'Sub New' cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndClass">
        <source>'Class' statement must end with a matching 'End Class'.</source>
        <target state="new">'Class' statement must end with a matching 'End Class'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnaryOperand2">
        <source>Operator '{0}' is not defined for type '{1}'.</source>
        <target state="new">Operator '{0}' is not defined for type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsWithDefault1">
        <source>'Default' cannot be combined with '{0}'.</source>
        <target state="new">'Default' cannot be combined with '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VoidValue">
        <source>Expression does not produce a value.</source>
        <target state="new">Expression does not produce a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstructorFunction">
        <source>Constructor must be declared as a Sub, not as a Function.</source>
        <target state="new">Constructor must be declared as a Sub, not as a Function.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidLiteralExponent">
        <source>Exponent is not valid.</source>
        <target state="new">Exponent is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewCannotHandleEvents">
        <source>'Sub New' cannot handle events.</source>
        <target state="new">'Sub New' cannot handle events.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CircularEvaluation1">
        <source>Constant '{0}' cannot depend on its own value.</source>
        <target state="new">Constant '{0}' cannot depend on its own value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsOnSharedMeth1">
        <source>'Shared' cannot be combined with '{0}' on a method declaration.</source>
        <target state="new">'Shared' cannot be combined with '{0}' on a method declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsOnSharedProperty1">
        <source>'Shared' cannot be combined with '{0}' on a property declaration.</source>
        <target state="new">'Shared' cannot be combined with '{0}' on a property declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsOnStdModuleProperty1">
        <source>Properties in a Module cannot be declared '{0}'.</source>
        <target state="new">Properties in a Module cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedOnProcThatImpl">
        <source>Methods or events that implement interface members cannot be declared 'Shared'.</source>
        <target state="new">Methods or events that implement interface members cannot be declared 'Shared'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoWithEventsVarOnHandlesList">
        <source>Handles clause requires a WithEvents variable defined in the containing type or one of its base types.</source>
        <target state="new">Handles clause requires a WithEvents variable defined in the containing type or one of its base types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritanceAccessMismatch5">
        <source>'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} to {3} '{4}'.</source>
        <target state="new">'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} to {3} '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NarrowingConversionDisallowed2">
        <source>Option Strict On disallows implicit conversions from '{0}' to '{1}'.</source>
        <target state="new">Option Strict On disallows implicit conversions from '{0}' to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoArgumentCountOverloadCandidates1">
        <source>Overload resolution failed because no accessible '{0}' accepts this number of arguments.</source>
        <target state="new">Overload resolution failed because no accessible '{0}' accepts this number of arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoViableOverloadCandidates1">
        <source>Overload resolution failed because no '{0}' is accessible.</source>
        <target state="new">Overload resolution failed because no '{0}' is accessible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoCallableOverloadCandidates2">
        <source>Overload resolution failed because no accessible '{0}' can be called with these arguments:{1}</source>
        <target state="new">Overload resolution failed because no accessible '{0}' can be called with these arguments:{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadOverloadCandidates2">
        <source>Overload resolution failed because no accessible '{0}' can be called:{1}</source>
        <target state="new">Overload resolution failed because no accessible '{0}' can be called:{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoNonNarrowingOverloadCandidates2">
        <source>Overload resolution failed because no accessible '{0}' can be called without a narrowing conversion:{1}</source>
        <target state="new">Overload resolution failed because no accessible '{0}' can be called without a narrowing conversion:{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArgumentNarrowing3">
        <source>Argument matching parameter '{0}' narrows from '{1}' to '{2}'.</source>
        <target state="new">Argument matching parameter '{0}' narrows from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoMostSpecificOverload2">
        <source>Overload resolution failed because no accessible '{0}' is most specific for these arguments:{1}</source>
        <target state="new">Overload resolution failed because no accessible '{0}' is most specific for these arguments:{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NotMostSpecificOverload">
        <source>Not most specific.</source>
        <target state="new">Not most specific.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadCandidate2">
        <source>
    '{0}': {1}</source>
        <target state="new">
    '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoGetProperty1">
        <source>Property '{0}' is 'WriteOnly'.</source>
        <target state="new">Property '{0}' is 'WriteOnly'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoSetProperty1">
        <source>Property '{0}' is 'ReadOnly'.</source>
        <target state="new">Property '{0}' is 'ReadOnly'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamTypingInconsistency">
        <source>All parameters must be explicitly typed if any of them are explicitly typed.</source>
        <target state="new">All parameters must be explicitly typed if any of them are explicitly typed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamNameFunctionNameCollision">
        <source>Parameter cannot have the same name as its defining function.</source>
        <target state="new">Parameter cannot have the same name as its defining function.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DateToDoubleConversion">
        <source>Conversion from 'Date' to 'Double' requires calling the 'Date.ToOADate' method.</source>
        <target state="new">Conversion from 'Date' to 'Double' requires calling the 'Date.ToOADate' method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DoubleToDateConversion">
        <source>Conversion from 'Double' to 'Date' requires calling the 'Date.FromOADate' method.</source>
        <target state="new">Conversion from 'Double' to 'Date' requires calling the 'Date.FromOADate' method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ZeroDivide">
        <source>Division by zero occurred while evaluating this expression.</source>
        <target state="new">Division by zero occurred while evaluating this expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TryAndOnErrorDoNotMix">
        <source>Method cannot contain both a 'Try' statement and an 'On Error' or 'Resume' statement.</source>
        <target state="new">Method cannot contain both a 'Try' statement and an 'On Error' or 'Resume' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropertyAccessIgnored">
        <source>Property access must assign to the property or use its value.</source>
        <target state="new">Property access must assign to the property or use its value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceNoDefault1">
        <source>'{0}' cannot be indexed because it has no default property.</source>
        <target state="new">'{0}' cannot be indexed because it has no default property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAssemblyAttribute1">
        <source>Attribute '{0}' cannot be applied to an assembly.</source>
        <target state="new">Attribute '{0}' cannot be applied to an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidModuleAttribute1">
        <source>Attribute '{0}' cannot be applied to a module.</source>
        <target state="new">Attribute '{0}' cannot be applied to a module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousInUnnamedNamespace1">
        <source>'{0}' is ambiguous.</source>
        <target state="new">'{0}' is ambiguous.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultMemberNotProperty1">
        <source>Default member of '{0}' is not a property.</source>
        <target state="new">Default member of '{0}' is not a property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousInNamespace2">
        <source>'{0}' is ambiguous in the namespace '{1}'.</source>
        <target state="new">'{0}' is ambiguous in the namespace '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousInImports2">
        <source>'{0}' is ambiguous, imported from the namespaces or types '{1}'.</source>
        <target state="new">'{0}' is ambiguous, imported from the namespaces or types '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousInModules2">
        <source>'{0}' is ambiguous between declarations in Modules '{1}'.</source>
        <target state="new">'{0}' is ambiguous between declarations in Modules '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousInNamespaces2">
        <source>'{0}' is ambiguous between declarations in namespaces '{1}'.</source>
        <target state="new">'{0}' is ambiguous between declarations in namespaces '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitializerTooFewDimensions">
        <source>Array initializer has too few dimensions.</source>
        <target state="new">Array initializer has too few dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitializerTooManyDimensions">
        <source>Array initializer has too many dimensions.</source>
        <target state="new">Array initializer has too many dimensions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitializerTooFewElements1">
        <source>Array initializer is missing {0} elements.</source>
        <target state="new">Array initializer is missing {0} elements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitializerTooManyElements1">
        <source>Array initializer has {0} too many elements.</source>
        <target state="new">Array initializer has {0} too many elements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewOnAbstractClass">
        <source>'New' cannot be used on a class that is declared 'MustInherit'.</source>
        <target state="new">'New' cannot be used on a class that is declared 'MustInherit'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateNamedImportAlias1">
        <source>Alias '{0}' is already declared.</source>
        <target state="new">Alias '{0}' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicatePrefix">
        <source>XML namespace prefix '{0}' is already declared.</source>
        <target state="new">XML namespace prefix '{0}' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowsLateBinding">
        <source>Option Strict On disallows late binding.</source>
        <target state="new">Option Strict On disallows late binding.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddressOfOperandNotMethod">
        <source>'AddressOf' operand must be the name of a method (without parentheses).</source>
        <target state="new">'AddressOf' operand must be the name of a method (without parentheses).</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndExternalSource">
        <source>'#End ExternalSource' must be preceded by a matching '#ExternalSource'.</source>
        <target state="new">'#End ExternalSource' must be preceded by a matching '#ExternalSource'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndExternalSource">
        <source>'#ExternalSource' statement must end with a matching '#End ExternalSource'.</source>
        <target state="new">'#ExternalSource' statement must end with a matching '#End ExternalSource'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedExternalSource">
        <source>'#ExternalSource' directives cannot be nested.</source>
        <target state="new">'#ExternalSource' directives cannot be nested.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddressOfNotDelegate1">
        <source>'AddressOf' expression cannot be converted to '{0}' because '{0}' is not a delegate type.</source>
        <target state="new">'AddressOf' expression cannot be converted to '{0}' because '{0}' is not a delegate type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SyncLockRequiresReferenceType1">
        <source>'SyncLock' operand cannot be of type '{0}' because '{0}' is not a reference type.</source>
        <target state="new">'SyncLock' operand cannot be of type '{0}' because '{0}' is not a reference type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MethodAlreadyImplemented2">
        <source>'{0}.{1}' cannot be implemented more than once.</source>
        <target state="new">'{0}.{1}' cannot be implemented more than once.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateInInherits1">
        <source>'{0}' cannot be inherited more than once.</source>
        <target state="new">'{0}' cannot be inherited more than once.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedParamArrayArgument">
        <source>Named argument cannot match a ParamArray parameter.</source>
        <target state="new">Named argument cannot match a ParamArray parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OmittedParamArrayArgument">
        <source>Omitted argument cannot match a ParamArray parameter.</source>
        <target state="new">Omitted argument cannot match a ParamArray parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayArgumentMismatch">
        <source>Argument cannot match a ParamArray parameter.</source>
        <target state="new">Argument cannot match a ParamArray parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventNotFound1">
        <source>Event '{0}' cannot be found.</source>
        <target state="new">Event '{0}' cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantUseVariableSpecifier1">
        <source>Variables in Modules cannot be declared '{0}'.</source>
        <target state="new">Variables in Modules cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedEventNeedsSharedHandler">
        <source>Events of shared WithEvents variables cannot be handled by non-shared methods.</source>
        <target state="new">Events of shared WithEvents variables cannot be handled by non-shared methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedMinus">
        <source>'-' expected.</source>
        <target state="new">'-' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceMemberSyntax">
        <source>Interface members must be methods, properties, events, or type definitions.</source>
        <target state="new">Interface members must be methods, properties, events, or type definitions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideInterface">
        <source>Statement cannot appear within an interface body.</source>
        <target state="new">Statement cannot appear within an interface body.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEndsInterface">
        <source>Statement cannot appear within an interface body. End of interface assumed.</source>
        <target state="new">Statement cannot appear within an interface body. End of interface assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsInNotInheritableClass1">
        <source>'NotInheritable' classes cannot have members declared '{0}'.</source>
        <target state="new">'NotInheritable' classes cannot have members declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BaseOnlyClassesMustBeExplicit2">
        <source>Class '{0}' must either be declared 'MustInherit' or override the following inherited 'MustOverride' member(s): {1}.</source>
        <target state="new">Class '{0}' must either be declared 'MustInherit' or override the following inherited 'MustOverride' member(s): {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustInheritEventNotOverridden">
        <source>'{0}' is a MustOverride event in the base class '{1}'. Visual Basic does not support event overriding. You must either provide an implementation for the event in the base class, or make class '{2}' MustInherit.</source>
        <target state="new">'{0}' is a MustOverride event in the base class '{1}'. Visual Basic does not support event overriding. You must either provide an implementation for the event in the base class, or make class '{2}' MustInherit.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NegativeArraySize">
        <source>Array dimensions cannot have a negative size.</source>
        <target state="new">Array dimensions cannot have a negative size.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MyClassAbstractCall1">
        <source>'MustOverride' method '{0}' cannot be called with 'MyClass'.</source>
        <target state="new">'MustOverride' method '{0}' cannot be called with 'MyClass'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndDisallowedInDllProjects">
        <source>'End' statement cannot be used in class library projects.</source>
        <target state="new">'End' statement cannot be used in class library projects.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BlockLocalShadowing1">
        <source>Variable '{0}' hides a variable in an enclosing block.</source>
        <target state="new">Variable '{0}' hides a variable in an enclosing block.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleNotAtNamespace">
        <source>'Module' statements can occur only at file or namespace level.</source>
        <target state="new">'Module' statements can occur only at file or namespace level.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamespaceNotAtNamespace">
        <source>'Namespace' statements can occur only at file or namespace level.</source>
        <target state="new">'Namespace' statements can occur only at file or namespace level.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEnum">
        <source>Statement cannot appear within an Enum body.</source>
        <target state="new">Statement cannot appear within an Enum body.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEndsEnum">
        <source>Statement cannot appear within an Enum body. End of Enum assumed.</source>
        <target state="new">Statement cannot appear within an Enum body. End of Enum assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionStrict">
        <source>'Option Strict' can be followed only by 'On' or 'Off'.</source>
        <target state="new">'Option Strict' can be followed only by 'On' or 'Off'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndStructureNoStructure">
        <source>'End Structure' must be preceded by a matching 'Structure'.</source>
        <target state="new">'End Structure' must be preceded by a matching 'Structure'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndModuleNoModule">
        <source>'End Module' must be preceded by a matching 'Module'.</source>
        <target state="new">'End Module' must be preceded by a matching 'Module'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndNamespaceNoNamespace">
        <source>'End Namespace' must be preceded by a matching 'Namespace'.</source>
        <target state="new">'End Namespace' must be preceded by a matching 'Namespace'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndStructure">
        <source>'Structure' statement must end with a matching 'End Structure'.</source>
        <target state="new">'Structure' statement must end with a matching 'End Structure'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndModule">
        <source>'Module' statement must end with a matching 'End Module'.</source>
        <target state="new">'Module' statement must end with a matching 'End Module'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndNamespace">
        <source>'Namespace' statement must end with a matching 'End Namespace'.</source>
        <target state="new">'Namespace' statement must end with a matching 'End Namespace'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OptionStmtWrongOrder">
        <source>'Option' statements must precede any declarations or 'Imports' statements.</source>
        <target state="new">'Option' statements must precede any declarations or 'Imports' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructCantInherit">
        <source>Structures cannot have 'Inherits' statements.</source>
        <target state="new">Structures cannot have 'Inherits' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewInStruct">
        <source>Structures cannot declare a non-shared 'Sub New' with no parameters.</source>
        <target state="new">Structures cannot declare a non-shared 'Sub New' with no parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndGet">
        <source>'End Get' must be preceded by a matching 'Get'.</source>
        <target state="new">'End Get' must be preceded by a matching 'Get'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndGet">
        <source>'Get' statement must end with a matching 'End Get'.</source>
        <target state="new">'Get' statement must end with a matching 'End Get'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndSet">
        <source>'End Set' must be preceded by a matching 'Set'.</source>
        <target state="new">'End Set' must be preceded by a matching 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndSet">
        <source>'Set' statement must end with a matching 'End Set'.</source>
        <target state="new">'Set' statement must end with a matching 'End Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEndsProperty">
        <source>Statement cannot appear within a property body. End of property assumed.</source>
        <target state="new">Statement cannot appear within a property body. End of property assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateWriteabilityCategoryUsed">
        <source>'ReadOnly' and 'WriteOnly' cannot be combined.</source>
        <target state="new">'ReadOnly' and 'WriteOnly' cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedGreater">
        <source>'&gt;' expected.</source>
        <target state="new">'&gt;' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeStmtWrongOrder">
        <source>Assembly or Module attribute statements must precede any declarations in a file.</source>
        <target state="new">Assembly or Module attribute statements must precede any declarations in a file.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoExplicitArraySizes">
        <source>Array bounds cannot appear in type specifiers.</source>
        <target state="new">Array bounds cannot appear in type specifiers.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyFlags1">
        <source>Properties cannot be declared '{0}'.</source>
        <target state="new">Properties cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionExplicit">
        <source>'Option Explicit' can be followed only by 'On' or 'Off'.</source>
        <target state="new">'Option Explicit' can be followed only by 'On' or 'Off'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleParameterSpecifiers">
        <source>'ByVal' and 'ByRef' cannot be combined.</source>
        <target state="new">'ByVal' and 'ByRef' cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleOptionalParameterSpecifiers">
        <source>'Optional' and 'ParamArray' cannot be combined.</source>
        <target state="new">'Optional' and 'ParamArray' cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedProperty1">
        <source>Property '{0}' is of an unsupported type.</source>
        <target state="new">Property '{0}' is of an unsupported type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionalParameterUsage1">
        <source>Attribute '{0}' cannot be applied to a method with optional parameters.</source>
        <target state="new">Attribute '{0}' cannot be applied to a method with optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReturnFromNonFunction">
        <source>'Return' statement in a Sub or a Set cannot return a value.</source>
        <target state="new">'Return' statement in a Sub or a Set cannot return a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnterminatedStringLiteral">
        <source>String constants must end with a double quote.</source>
        <target state="new">String constants must end with a double quote.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedType1">
        <source>'{0}' is an unsupported type.</source>
        <target state="new">'{0}' is an unsupported type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEnumBase">
        <source>Enums must be declared as an integral type.</source>
        <target state="new">Enums must be declared as an integral type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ByRefIllegal1">
        <source>{0} parameters cannot be declared 'ByRef'.</source>
        <target state="new">{0} parameters cannot be declared 'ByRef'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnreferencedAssembly3">
        <source>Reference required to assembly '{0}' containing the type '{1}'. Add one to your project.</source>
        <target state="new">Reference required to assembly '{0}' containing the type '{1}'. Add one to your project.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnreferencedModule3">
        <source>Reference required to module '{0}' containing the type '{1}'. Add one to your project.</source>
        <target state="new">Reference required to module '{0}' containing the type '{1}'. Add one to your project.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReturnWithoutValue">
        <source>'Return' statement in a Function, Get, or Operator must return a value.</source>
        <target state="new">'Return' statement in a Function, Get, or Operator must return a value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedField1">
        <source>Field '{0}' is of an unsupported type.</source>
        <target state="new">Field '{0}' is of an unsupported type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedMethod1">
        <source>'{0}' has a return type that is not supported or parameter types that are not supported.</source>
        <target state="new">'{0}' has a return type that is not supported or parameter types that are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoNonIndexProperty1">
        <source>Property '{0}' with no parameters cannot be found.</source>
        <target state="new">Property '{0}' with no parameters cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributePropertyType1">
        <source>Property or field '{0}' does not have a valid attribute type.</source>
        <target state="new">Property or field '{0}' does not have a valid attribute type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LocalsCannotHaveAttributes">
        <source>Attributes cannot be applied to local variables.</source>
        <target state="new">Attributes cannot be applied to local variables.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropertyOrFieldNotDefined1">
        <source>Field or property '{0}' is not found.</source>
        <target state="new">Field or property '{0}' is not found.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAttributeUsage2">
        <source>Attribute '{0}' cannot be applied to '{1}' because the attribute is not valid on this declaration type.</source>
        <target state="new">Attribute '{0}' cannot be applied to '{1}' because the attribute is not valid on this declaration type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAttributeUsageOnAccessor">
        <source>Attribute '{0}' cannot be applied to '{1}' of '{2}' because the attribute is not valid on this declaration type.</source>
        <target state="new">Attribute '{0}' cannot be applied to '{1}' of '{2}' because the attribute is not valid on this declaration type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedTypeInInheritsClause2">
        <source>Class '{0}' cannot reference its nested type '{1}' in Inherits clause.</source>
        <target state="new">Class '{0}' cannot reference its nested type '{1}' in Inherits clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInItsInheritsClause1">
        <source>Class '{0}' cannot reference itself in Inherits clause.</source>
        <target state="new">Class '{0}' cannot reference itself in Inherits clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BaseTypeReferences2">
        <source>
    Base type of '{0}' needs '{1}' to be resolved.</source>
        <target state="new">
    Base type of '{0}' needs '{1}' to be resolved.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalBaseTypeReferences3">
        <source>Inherits clause of {0} '{1}' causes cyclic dependency: {2}</source>
        <target state="new">Inherits clause of {0} '{1}' causes cyclic dependency: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidMultipleAttributeUsage1">
        <source>Attribute '{0}' cannot be applied multiple times.</source>
        <target state="new">Attribute '{0}' cannot be applied multiple times.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidMultipleAttributeUsageInNetModule2">
        <source>Attribute '{0}' in '{1}' cannot be applied multiple times.</source>
        <target state="new">Attribute '{0}' in '{1}' cannot be applied multiple times.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantThrowNonException">
        <source>'Throw' operand must derive from 'System.Exception'.</source>
        <target state="new">'Throw' operand must derive from 'System.Exception'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustBeInCatchToRethrow">
        <source>'Throw' statement cannot omit operand outside a 'Catch' statement or inside a 'Finally' statement.</source>
        <target state="new">'Throw' statement cannot omit operand outside a 'Catch' statement or inside a 'Finally' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayMustBeByVal">
        <source>ParamArray parameters must be declared 'ByVal'.</source>
        <target state="new">ParamArray parameters must be declared 'ByVal'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfObsoleteSymbol2">
        <source>'{0}' is obsolete: '{1}'.</source>
        <target state="new">'{0}' is obsolete: '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RedimNoSizes">
        <source>'ReDim' statements require a parenthesized list of the new bounds of each dimension of the array.</source>
        <target state="new">'ReDim' statements require a parenthesized list of the new bounds of each dimension of the array.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitWithMultipleDeclarators">
        <source>Explicit initialization is not permitted with multiple variables declared with a single type specifier.</source>
        <target state="new">Explicit initialization is not permitted with multiple variables declared with a single type specifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitWithExplicitArraySizes">
        <source>Explicit initialization is not permitted for arrays declared with explicit bounds.</source>
        <target state="new">Explicit initialization is not permitted for arrays declared with explicit bounds.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndSyncLockNoSyncLock">
        <source>'End SyncLock' must be preceded by a matching 'SyncLock'.</source>
        <target state="new">'End SyncLock' must be preceded by a matching 'SyncLock'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndSyncLock">
        <source>'SyncLock' statement must end with a matching 'End SyncLock'.</source>
        <target state="new">'SyncLock' statement must end with a matching 'End SyncLock'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NameNotEvent2">
        <source>'{0}' is not an event of '{1}'.</source>
        <target state="new">'{0}' is not an event of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddOrRemoveHandlerEvent">
        <source>'AddHandler' or 'RemoveHandler' statement event operand must be a dot-qualified expression or a simple name.</source>
        <target state="new">'AddHandler' or 'RemoveHandler' statement event operand must be a dot-qualified expression or a simple name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnrecognizedEnd">
        <source>'End' statement not valid.</source>
        <target state="new">'End' statement not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitForNonArray2">
        <source>Array initializers are valid only for arrays, but the type of '{0}' is '{1}'.</source>
        <target state="new">Array initializers are valid only for arrays, but the type of '{0}' is '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndRegionNoRegion">
        <source>'#End Region' must be preceded by a matching '#Region'.</source>
        <target state="new">'#End Region' must be preceded by a matching '#Region'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndRegion">
        <source>'#Region' statement must end with a matching '#End Region'.</source>
        <target state="new">'#Region' statement must end with a matching '#End Region'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsStmtWrongOrder">
        <source>'Inherits' statement must precede all declarations in a class.</source>
        <target state="new">'Inherits' statement must precede all declarations in a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousAcrossInterfaces3">
        <source>'{0}' is ambiguous across the inherited interfaces '{1}' and '{2}'.</source>
        <target state="new">'{0}' is ambiguous across the inherited interfaces '{1}' and '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultPropertyAmbiguousAcrossInterfaces4">
        <source>Default property access is ambiguous between the inherited interface members '{0}' of interface '{1}' and '{2}' of interface '{3}'.</source>
        <target state="new">Default property access is ambiguous between the inherited interface members '{0}' of interface '{1}' and '{2}' of interface '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceEventCantUse1">
        <source>Events in interfaces cannot be declared '{0}'.</source>
        <target state="new">Events in interfaces cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExecutableAsDeclaration">
        <source>Statement cannot appear outside of a method body.</source>
        <target state="new">Statement cannot appear outside of a method body.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructureNoDefault1">
        <source>Structure '{0}' cannot be indexed because it has no default property.</source>
        <target state="new">Structure '{0}' cannot be indexed because it has no default property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustShadow2">
        <source>{0} '{1}' must be declared 'Shadows' because another member with this name is declared 'Shadows'.</source>
        <target state="new">{0} '{1}' must be declared 'Shadows' because another member with this name is declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithOptionalTypes2">
        <source>'{0}' cannot override '{1}' because they differ by the types of optional parameters.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by the types of optional parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndOfExpression">
        <source>End of expression expected.</source>
        <target state="new">End of expression expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructsCannotHandleEvents">
        <source>Methods declared in structures cannot have 'Handles' clauses.</source>
        <target state="new">Methods declared in structures cannot have 'Handles' clauses.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverridesImpliesOverridable">
        <source>Methods declared 'Overrides' cannot be declared 'Overridable' because they are implicitly overridable.</source>
        <target state="new">Methods declared 'Overrides' cannot be declared 'Overridable' because they are implicitly overridable.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LocalNamedSameAsParam1">
        <source>'{0}' is already declared as a parameter of this method.</source>
        <target state="new">'{0}' is already declared as a parameter of this method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LocalNamedSameAsParamInLambda1">
        <source>Variable '{0}' is already declared as a parameter of this or an enclosing lambda expression.</source>
        <target state="new">Variable '{0}' is already declared as a parameter of this or an enclosing lambda expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantUseTypeSpecifier1">
        <source>Type in a Module cannot be declared '{0}'.</source>
        <target state="new">Type in a Module cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InValidSubMainsFound1">
        <source>No accessible 'Main' method with an appropriate signature was found in '{0}'.</source>
        <target state="new">No accessible 'Main' method with an appropriate signature was found in '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MoreThanOneValidMainWasFound2">
        <source>'Sub Main' is declared more than once in '{0}': {1}</source>
        <target state="new">'Sub Main' is declared more than once in '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotConvertValue2">
        <source>Value '{0}' cannot be converted to '{1}'.</source>
        <target state="new">Value '{0}' cannot be converted to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnErrorInSyncLock">
        <source>'On Error' statements are not valid within 'SyncLock' statements.</source>
        <target state="new">'On Error' statements are not valid within 'SyncLock' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NarrowingConversionCollection2">
        <source>Option Strict On disallows implicit conversions from '{0}' to '{1}'; the Visual Basic 6.0 collection type is not compatible with the .NET Framework collection type.</source>
        <target state="new">Option Strict On disallows implicit conversions from '{0}' to '{1}'; the Visual Basic 6.0 collection type is not compatible with the .NET Framework collection type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GotoIntoTryHandler">
        <source>'GoTo {0}' is not valid because '{0}' is inside a 'Try', 'Catch' or 'Finally' statement that does not contain this statement.</source>
        <target state="new">'GoTo {0}' is not valid because '{0}' is inside a 'Try', 'Catch' or 'Finally' statement that does not contain this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GotoIntoSyncLock">
        <source>'GoTo {0}' is not valid because '{0}' is inside a 'SyncLock' statement that does not contain this statement.</source>
        <target state="new">'GoTo {0}' is not valid because '{0}' is inside a 'SyncLock' statement that does not contain this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GotoIntoWith">
        <source>'GoTo {0}' is not valid because '{0}' is inside a 'With' statement that does not contain this statement.</source>
        <target state="new">'GoTo {0}' is not valid because '{0}' is inside a 'With' statement that does not contain this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GotoIntoFor">
        <source>'GoTo {0}' is not valid because '{0}' is inside a 'For' or 'For Each' statement that does not contain this statement.</source>
        <target state="new">'GoTo {0}' is not valid because '{0}' is inside a 'For' or 'For Each' statement that does not contain this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeNonPublicConstructor">
        <source>Attribute cannot be used because it does not have a Public constructor.</source>
        <target state="new">Attribute cannot be used because it does not have a Public constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultEventNotFound1">
        <source>Event '{0}' specified by the 'DefaultEvent' attribute is not a publicly accessible event for this class.</source>
        <target state="new">Event '{0}' specified by the 'DefaultEvent' attribute is not a publicly accessible event for this class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidNonSerializedUsage">
        <source>'NonSerialized' attribute will not have any effect on this member because its containing class is not exposed as 'Serializable'.</source>
        <target state="new">'NonSerialized' attribute will not have any effect on this member because its containing class is not exposed as 'Serializable'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedContinueKind">
        <source>'Continue' must be followed by 'Do', 'For' or 'While'.</source>
        <target state="new">'Continue' must be followed by 'Do', 'For' or 'While'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ContinueDoNotWithinDo">
        <source>'Continue Do' can only appear inside a 'Do' statement.</source>
        <target state="new">'Continue Do' can only appear inside a 'Do' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ContinueForNotWithinFor">
        <source>'Continue For' can only appear inside a 'For' statement.</source>
        <target state="new">'Continue For' can only appear inside a 'For' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ContinueWhileNotWithinWhile">
        <source>'Continue While' can only appear inside a 'While' statement.</source>
        <target state="new">'Continue While' can only appear inside a 'While' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateParameterSpecifier">
        <source>Parameter specifier is duplicated.</source>
        <target state="new">Parameter specifier is duplicated.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleCantUseDLLDeclareSpecifier1">
        <source>'Declare' statements in a Module cannot be declared '{0}'.</source>
        <target state="new">'Declare' statements in a Module cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructCantUseDLLDeclareSpecifier1">
        <source>'Declare' statements in a structure cannot be declared '{0}'.</source>
        <target state="new">'Declare' statements in a structure cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TryCastOfValueType1">
        <source>'TryCast' operand must be reference type, but '{0}' is a value type.</source>
        <target state="new">'TryCast' operand must be reference type, but '{0}' is a value type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TryCastOfUnconstrainedTypeParam1">
        <source>'TryCast' operands must be class-constrained type parameter, but '{0}' has no class constraint.</source>
        <target state="new">'TryCast' operands must be class-constrained type parameter, but '{0}' has no class constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousDelegateBinding2">
        <source>No accessible '{0}' is most specific: {1}</source>
        <target state="new">No accessible '{0}' is most specific: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedStructMemberCannotSpecifyNew">
        <source>Non-shared members in a Structure cannot be declared 'New'.</source>
        <target state="new">Non-shared members in a Structure cannot be declared 'New'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericSubMainsFound1">
        <source>None of the accessible 'Main' methods with the appropriate signatures found in '{0}' can be the startup method since they are all either generic or nested in generic types.</source>
        <target state="new">None of the accessible 'Main' methods with the appropriate signatures found in '{0}' can be the startup method since they are all either generic or nested in generic types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GeneralProjectImportsError3">
        <source>Error in project-level import '{0}' at '{1}' : {2}</source>
        <target state="new">Error in project-level import '{0}' at '{1}' : {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidTypeForAliasesImport2">
        <source>'{1}' for the Imports alias to '{0}' does not refer to a Namespace, Class, Structure, Interface, Enum or Module.</source>
        <target state="new">'{1}' for the Imports alias to '{0}' does not refer to a Namespace, Class, Structure, Interface, Enum or Module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedConstant2">
        <source>Field '{0}.{1}' has an invalid constant value.</source>
        <target state="new">Field '{0}.{1}' has an invalid constant value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteArgumentsNeedParens">
        <source>Method arguments must be enclosed in parentheses.</source>
        <target state="new">Method arguments must be enclosed in parentheses.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteLineNumbersAreLabels">
        <source>Labels that are numbers must be followed by colons.</source>
        <target state="new">Labels that are numbers must be followed by colons.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteStructureNotType">
        <source>'Type' statements are no longer supported; use 'Structure' statements instead.</source>
        <target state="new">'Type' statements are no longer supported; use 'Structure' statements instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteObjectNotVariant">
        <source>'Variant' is no longer a supported type; use the 'Object' type instead.</source>
        <target state="new">'Variant' is no longer a supported type; use the 'Object' type instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteLetSetNotNeeded">
        <source>'Let' and 'Set' assignment statements are no longer supported.</source>
        <target state="new">'Let' and 'Set' assignment statements are no longer supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoletePropertyGetLetSet">
        <source>Property Get/Let/Set are no longer supported; use the new Property declaration syntax.</source>
        <target state="new">Property Get/Let/Set are no longer supported; use the new Property declaration syntax.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteWhileWend">
        <source>'Wend' statements are no longer supported; use 'End While' statements instead.</source>
        <target state="new">'Wend' statements are no longer supported; use 'End While' statements instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteRedimAs">
        <source>'ReDim' statements can no longer be used to declare array variables.</source>
        <target state="new">'ReDim' statements can no longer be used to declare array variables.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteOptionalWithoutValue">
        <source>Optional parameters must specify a default value.</source>
        <target state="new">Optional parameters must specify a default value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteGosub">
        <source>'GoSub' statements are no longer supported.</source>
        <target state="new">'GoSub' statements are no longer supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteOnGotoGosub">
        <source>'On GoTo' and 'On GoSub' statements are no longer supported.</source>
        <target state="new">'On GoTo' and 'On GoSub' statements are no longer supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteEndIf">
        <source>'EndIf' statements are no longer supported; use 'End If' instead.</source>
        <target state="new">'EndIf' statements are no longer supported; use 'End If' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteExponent">
        <source>'D' can no longer be used to indicate an exponent, use 'E' instead.</source>
        <target state="new">'D' can no longer be used to indicate an exponent, use 'E' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteAsAny">
        <source>'As Any' is not supported in 'Declare' statements.</source>
        <target state="new">'As Any' is not supported in 'Declare' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteGetStatement">
        <source>'Get' statements are no longer supported. File I/O functionality is available in the 'Microsoft.VisualBasic' namespace.</source>
        <target state="new">'Get' statements are no longer supported. File I/O functionality is available in the 'Microsoft.VisualBasic' namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithArrayVsParamArray2">
        <source>'{0}' cannot override '{1}' because they differ by parameters declared 'ParamArray'.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by parameters declared 'ParamArray'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CircularBaseDependencies4">
        <source>This inheritance causes circular dependencies between {0} '{1}' and its nested or base type '{2}'.</source>
        <target state="new">This inheritance causes circular dependencies between {0} '{1}' and its nested or base type '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedBase2">
        <source>{0} '{1}' cannot inherit from a type nested within it.</source>
        <target state="new">{0} '{1}' cannot inherit from a type nested within it.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AccessMismatchOutsideAssembly4">
        <source>'{0}' cannot expose type '{1}' outside the project through {2} '{3}'.</source>
        <target state="new">'{0}' cannot expose type '{1}' outside the project through {2} '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritanceAccessMismatchOutside3">
        <source>'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} outside the assembly.</source>
        <target state="new">'{0}' cannot inherit from {1} '{2}' because it expands the access of the base {1} outside the assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfObsoletePropertyAccessor3">
        <source>'{0}' accessor of '{1}' is obsolete: '{2}'.</source>
        <target state="new">'{0}' accessor of '{1}' is obsolete: '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfObsoletePropertyAccessor2">
        <source>'{0}' accessor of '{1}' is obsolete.</source>
        <target state="new">'{0}' accessor of '{1}' is obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AccessMismatchImplementedEvent6">
        <source>'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing to {2} '{3}' through {4} '{5}'.</source>
        <target state="new">'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing to {2} '{3}' through {4} '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AccessMismatchImplementedEvent4">
        <source>'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing outside the project through {2} '{3}'.</source>
        <target state="new">'{0}' cannot expose the underlying delegate type '{1}' of the event it is implementing outside the project through {2} '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritanceCycleInImportedType1">
        <source>Type '{0}' is not supported because it either directly or indirectly inherits from itself.</source>
        <target state="new">Type '{0}' is not supported because it either directly or indirectly inherits from itself.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoNonObsoleteConstructorOnBase3">
        <source>Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</source>
        <target state="new">Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoNonObsoleteConstructorOnBase4">
        <source>Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</source>
        <target state="new">Class '{0}' must declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredNonObsoleteNewCall3">
        <source>First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</source>
        <target state="new">First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredNonObsoleteNewCall4">
        <source>First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'.</source>
        <target state="new">First statement of this 'Sub New' must be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsTypeArgAccessMismatch7">
        <source>'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' to {4} '{5}'.</source>
        <target state="new">'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' to {4} '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InheritsTypeArgAccessMismatchOutside5">
        <source>'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' outside the assembly.</source>
        <target state="new">'{0}' cannot inherit from {1} '{2}' because it expands the access of type '{3}' outside the assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialTypeAccessMismatch3">
        <source>Specified access '{0}' for '{1}' does not match the access '{2}' specified on one of its other partial types.</source>
        <target state="new">Specified access '{0}' for '{1}' does not match the access '{2}' specified on one of its other partial types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialTypeBadMustInherit1">
        <source>'MustInherit' cannot be specified for partial type '{0}' because it cannot be combined with 'NotInheritable' specified for one of its other partial types.</source>
        <target state="new">'MustInherit' cannot be specified for partial type '{0}' because it cannot be combined with 'NotInheritable' specified for one of its other partial types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustOverOnNotInheritPartClsMem1">
        <source>'MustOverride' cannot be specified on this member because it is in a partial type that is declared 'NotInheritable' in another partial definition.</source>
        <target state="new">'MustOverride' cannot be specified on this member because it is in a partial type that is declared 'NotInheritable' in another partial definition.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BaseMismatchForPartialClass3">
        <source>Base class '{0}' specified for class '{1}' cannot be different from the base class '{2}' of one of its other partial types.</source>
        <target state="new">Base class '{0}' specified for class '{1}' cannot be different from the base class '{2}' of one of its other partial types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialTypeTypeParamNameMismatch3">
        <source>Type parameter name '{0}' does not match the name '{1}' of the corresponding type parameter defined on one of the other partial types of '{2}'.</source>
        <target state="new">Type parameter name '{0}' does not match the name '{1}' of the corresponding type parameter defined on one of the other partial types of '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialTypeConstraintMismatch1">
        <source>Constraints for this type parameter do not match the constraints on the corresponding type parameter defined on one of the other partial types of '{0}'.</source>
        <target state="new">Constraints for this type parameter do not match the constraints on the corresponding type parameter defined on one of the other partial types of '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LateBoundOverloadInterfaceCall1">
        <source>Late bound overload resolution cannot be applied to '{0}' because the accessing instance is an interface type.</source>
        <target state="new">Late bound overload resolution cannot be applied to '{0}' because the accessing instance is an interface type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredAttributeConstConversion2">
        <source>Conversion from '{0}' to '{1}' cannot occur in a constant expression used as an argument to an attribute.</source>
        <target state="new">Conversion from '{0}' to '{1}' cannot occur in a constant expression used as an argument to an attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousOverrides3">
        <source>Member '{0}' that matches this signature cannot be overridden because the class '{1}' contains multiple members with this same name and signature: {2}</source>
        <target state="new">Member '{0}' that matches this signature cannot be overridden because the class '{1}' contains multiple members with this same name and signature: {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverriddenCandidate1">
        <source>
   '{0}'</source>
        <target state="new">
   '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousImplements3">
        <source>Member '{0}.{1}' that matches this signature cannot be implemented because the interface '{2}' contains multiple members with this same name and signature:
   '{3}'
   '{4}'</source>
        <target state="new">Member '{0}.{1}' that matches this signature cannot be implemented because the interface '{2}' contains multiple members with this same name and signature:
   '{3}'
   '{4}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddressOfNotCreatableDelegate1">
        <source>'AddressOf' expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</source>
        <target state="new">'AddressOf' expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassGenericMethod">
        <source>Generic methods cannot be exposed to COM.</source>
        <target state="new">Generic methods cannot be exposed to COM.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SyntaxInCastOp">
        <source>Syntax error in cast operator; two arguments separated by comma are required.</source>
        <target state="new">Syntax error in cast operator; two arguments separated by comma are required.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitializerForNonConstDim">
        <source>Array initializer cannot be specified for a non constant dimension; use the empty initializer '{}'.</source>
        <target state="new">Array initializer cannot be specified for a non constant dimension; use the empty initializer '{}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingFailure3">
        <source>No accessible method '{0}' has a signature compatible with delegate '{1}':{2}</source>
        <target state="new">No accessible method '{0}' has a signature compatible with delegate '{1}':{2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructLayoutAttributeNotAllowed">
        <source>Attribute 'StructLayout' cannot be applied to a generic type.</source>
        <target state="new">Attribute 'StructLayout' cannot be applied to a generic type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IterationVariableShadowLocal1">
        <source>Range variable '{0}' hides a variable in an enclosing block or a range variable previously defined in the query expression.</source>
        <target state="new">Range variable '{0}' hides a variable in an enclosing block or a range variable previously defined in the query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionInfer">
        <source>'Option Infer' can be followed only by 'On' or 'Off'.</source>
        <target state="new">'Option Infer' can be followed only by 'On' or 'Off'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CircularInference1">
        <source>Type of '{0}' cannot be inferred from an expression containing '{0}'.</source>
        <target state="new">Type of '{0}' cannot be inferred from an expression containing '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InAccessibleOverridingMethod5">
        <source>'{0}' in class '{1}' cannot override '{2}' in class '{3}' because an intermediate class '{4}' overrides '{2}' in class '{3}' but is not accessible.</source>
        <target state="new">'{0}' in class '{1}' cannot override '{2}' in class '{3}' because an intermediate class '{4}' overrides '{2}' in class '{3}' but is not accessible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoSuitableWidestType1">
        <source>Type of '{0}' cannot be inferred because the loop bounds and the step clause do not convert to the same type.</source>
        <target state="new">Type of '{0}' cannot be inferred because the loop bounds and the step clause do not convert to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousWidestType3">
        <source>Type of '{0}' is ambiguous because the loop bounds and the step clause do not convert to the same type.</source>
        <target state="new">Type of '{0}' is ambiguous because the loop bounds and the step clause do not convert to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedAssignmentOperatorInInit">
        <source>'=' expected (object initializer).</source>
        <target state="new">'=' expected (object initializer).</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedQualifiedNameInInit">
        <source>Name of field or property being initialized in an object initializer must start with '.'.</source>
        <target state="new">Name of field or property being initialized in an object initializer must start with '.'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedLbrace">
        <source>'{' expected.</source>
        <target state="new">'{' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnrecognizedTypeOrWith">
        <source>Type or 'With' expected.</source>
        <target state="new">Type or 'With' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateAggrMemberInit1">
        <source>Multiple initializations of '{0}'.  Fields and properties can be initialized only once in an object initializer expression.</source>
        <target state="new">Multiple initializations of '{0}'.  Fields and properties can be initialized only once in an object initializer expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NonFieldPropertyAggrMemberInit1">
        <source>Member '{0}' cannot be initialized in an object initializer expression because it is not a field or property.</source>
        <target state="new">Member '{0}' cannot be initialized in an object initializer expression because it is not a field or property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SharedMemberAggrMemberInit1">
        <source>Member '{0}' cannot be initialized in an object initializer expression because it is shared.</source>
        <target state="new">Member '{0}' cannot be initialized in an object initializer expression because it is shared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParameterizedPropertyInAggrInit1">
        <source>Property '{0}' cannot be initialized in an object initializer expression because it requires arguments.</source>
        <target state="new">Property '{0}' cannot be initialized in an object initializer expression because it requires arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoZeroCountArgumentInitCandidates1">
        <source>Property '{0}' cannot be initialized in an object initializer expression because all accessible overloads require arguments.</source>
        <target state="new">Property '{0}' cannot be initialized in an object initializer expression because all accessible overloads require arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AggrInitInvalidForObject">
        <source>Object initializer syntax cannot be used to initialize an instance of 'System.Object'.</source>
        <target state="new">Object initializer syntax cannot be used to initialize an instance of 'System.Object'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitializerExpected">
        <source>Initializer expected.</source>
        <target state="new">Initializer expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LineContWithCommentOrNoPrecSpace">
        <source>Line continuation character '_' must be preceded by at least one white space and must be the last character on the line.</source>
        <target state="new">Line continuation character '_' must be preceded by at least one white space and must be the last character on the line.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadModuleFile1">
        <source>Unable to load module file '{0}': {1}</source>
        <target state="new">Unable to load module file '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadRefLib1">
        <source>Unable to load referenced library '{0}': {1}</source>
        <target state="new">Unable to load referenced library '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventHandlerSignatureIncompatible2">
        <source>Method '{0}' cannot handle event '{1}' because they do not have a compatible signature.</source>
        <target state="new">Method '{0}' cannot handle event '{1}' because they do not have a compatible signature.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConditionalCompilationConstantNotValid">
        <source>Conditional compilation constant '{1}' is not valid: {0}</source>
        <target state="new">Conditional compilation constant '{1}' is not valid: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceImplementedTwice1">
        <source>Interface '{0}' can be implemented only once by this type.</source>
        <target state="new">Interface '{0}' can be implemented only once by this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceImplementedTwiceWithDifferentTupleNames2">
        <source>Interface '{0}' can be implemented only once by this type, but already appears with different tuple element names, as '{1}'.</source>
        <target state="new">Interface '{0}' can be implemented only once by this type, but already appears with different tuple element names, as '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceImplementedTwiceWithDifferentTupleNames3">
        <source>Interface '{0}' can be implemented only once by this type, but already appears with different tuple element names, as '{1}' (via '{2}').</source>
        <target state="new">Interface '{0}' can be implemented only once by this type, but already appears with different tuple element names, as '{1}' (via '{2}').</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceImplementedTwiceWithDifferentTupleNamesReverse3">
        <source>Interface '{0}' (via '{1}') can be implemented only once by this type, but already appears with different tuple element names, as '{2}'.</source>
        <target state="new">Interface '{0}' (via '{1}') can be implemented only once by this type, but already appears with different tuple element names, as '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceImplementedTwiceWithDifferentTupleNames4">
        <source>Interface '{0}' (via '{1}') can be implemented only once by this type, but already appears with different tuple element names, as '{2}' (via '{3}').</source>
        <target state="new">Interface '{0}' (via '{1}') can be implemented only once by this type, but already appears with different tuple element names, as '{2}' (via '{3}').</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceInheritedTwiceWithDifferentTupleNames2">
        <source>Interface '{0}' can be inherited only once by this interface, but already appears with different tuple element names, as '{1}'.</source>
        <target state="new">Interface '{0}' can be inherited only once by this interface, but already appears with different tuple element names, as '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceInheritedTwiceWithDifferentTupleNames3">
        <source>Interface '{0}' can be inherited only once by this interface, but already appears with different tuple element names, as '{1}' (via '{2}').</source>
        <target state="new">Interface '{0}' can be inherited only once by this interface, but already appears with different tuple element names, as '{1}' (via '{2}').</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceInheritedTwiceWithDifferentTupleNamesReverse3">
        <source>Interface '{0}' (via '{1}') can be inherited only once by this interface, but already appears with different tuple element names, as '{2}'.</source>
        <target state="new">Interface '{0}' (via '{1}') can be inherited only once by this interface, but already appears with different tuple element names, as '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceInheritedTwiceWithDifferentTupleNames4">
        <source>Interface '{0}' (via '{1}') can be inherited only once by this interface, but already appears with different tuple element names, as '{2}' (via '{3}').</source>
        <target state="new">Interface '{0}' (via '{1}') can be inherited only once by this interface, but already appears with different tuple element names, as '{2}' (via '{3}').</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceNotImplemented1">
        <source>Interface '{0}' is not implemented by this class.</source>
        <target state="new">Interface '{0}' is not implemented by this class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousImplementsMember3">
        <source>'{0}' exists in multiple base interfaces. Use the name of the interface that declares '{0}' in the 'Implements' clause instead of the name of the derived interface.</source>
        <target state="new">'{0}' exists in multiple base interfaces. Use the name of the interface that declares '{0}' in the 'Implements' clause instead of the name of the derived interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementsOnNew">
        <source>'Sub New' cannot implement interface members.</source>
        <target state="new">'Sub New' cannot implement interface members.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitInStruct">
        <source>Arrays declared as structure members cannot be declared with an initial size.</source>
        <target state="new">Arrays declared as structure members cannot be declared with an initial size.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventTypeNotDelegate">
        <source>Events declared with an 'As' clause must have a delegate type.</source>
        <target state="new">Events declared with an 'As' clause must have a delegate type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ProtectedTypeOutsideClass">
        <source>Protected types can only be declared inside of a class.</source>
        <target state="new">Protected types can only be declared inside of a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultPropertyWithNoParams">
        <source>Properties with no required parameters cannot be declared 'Default'.</source>
        <target state="new">Properties with no required parameters cannot be declared 'Default'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitializerInStruct">
        <source>Initializers on structure members are valid only for 'Shared' members and constants.</source>
        <target state="new">Initializers on structure members are valid only for 'Shared' members and constants.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateImport1">
        <source>Namespace or type '{0}' has already been imported.</source>
        <target state="new">Namespace or type '{0}' has already been imported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadModuleFlags1">
        <source>Modules cannot be declared '{0}'.</source>
        <target state="new">Modules cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementsStmtWrongOrder">
        <source>'Implements' statements must follow any 'Inherits' statement and precede all declarations in a class.</source>
        <target state="new">'Implements' statements must follow any 'Inherits' statement and precede all declarations in a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SynthMemberClashesWithSynth7">
        <source>{0} '{1}' implicitly defines '{2}', which conflicts with a member implicitly declared for {3} '{4}' in {5} '{6}'.</source>
        <target state="new">{0} '{1}' implicitly defines '{2}', which conflicts with a member implicitly declared for {3} '{4}' in {5} '{6}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SynthMemberClashesWithMember5">
        <source>{0} '{1}' implicitly defines '{2}', which conflicts with a member of the same name in {3} '{4}'.</source>
        <target state="new">{0} '{1}' implicitly defines '{2}', which conflicts with a member of the same name in {3} '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MemberClashesWithSynth6">
        <source>{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in {4} '{5}'.</source>
        <target state="new">{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in {4} '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeClashesWithVbCoreType4">
        <source>{0} '{1}' conflicts with a Visual Basic Runtime {2} '{3}'.</source>
        <target state="new">{0} '{1}' conflicts with a Visual Basic Runtime {2} '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityAttributeMissingAction">
        <source>First argument to a security attribute must be a valid SecurityAction.</source>
        <target state="new">First argument to a security attribute must be a valid SecurityAction.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityAttributeInvalidAction">
        <source>Security attribute '{0}' has an invalid SecurityAction value '{1}'.</source>
        <target state="new">Security attribute '{0}' has an invalid SecurityAction value '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityAttributeInvalidActionAssembly">
        <source>SecurityAction value '{0}' is invalid for security attributes applied to an assembly.</source>
        <target state="new">SecurityAction value '{0}' is invalid for security attributes applied to an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityAttributeInvalidActionTypeOrMethod">
        <source>SecurityAction value '{0}' is invalid for security attributes applied to a type or a method.</source>
        <target state="new">SecurityAction value '{0}' is invalid for security attributes applied to a type or a method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PrincipalPermissionInvalidAction">
        <source>SecurityAction value '{0}' is invalid for PrincipalPermission attribute.</source>
        <target state="new">SecurityAction value '{0}' is invalid for PrincipalPermission attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PermissionSetAttributeInvalidFile">
        <source>Unable to resolve file path '{0}' specified for the named argument '{1}' for PermissionSet attribute.</source>
        <target state="new">Unable to resolve file path '{0}' specified for the named argument '{1}' for PermissionSet attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PermissionSetAttributeFileReadError">
        <source>Error reading file '{0}' specified for the named argument '{1}' for PermissionSet attribute: '{2}'.</source>
        <target state="new">Error reading file '{0}' specified for the named argument '{1}' for PermissionSet attribute: '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SetHasOnlyOneParam">
        <source>'Set' method cannot have more than one parameter.</source>
        <target state="new">'Set' method cannot have more than one parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SetValueNotPropertyType">
        <source>'Set' parameter must have the same type as the containing property.</source>
        <target state="new">'Set' parameter must have the same type as the containing property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SetHasToBeByVal1">
        <source>'Set' parameter cannot be declared '{0}'.</source>
        <target state="new">'Set' parameter cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StructureCantUseProtected">
        <source>Method in a structure cannot be declared 'Protected', 'Protected Friend', or 'Private Protected'.</source>
        <target state="new">Method in a structure cannot be declared 'Protected', 'Protected Friend', or 'Private Protected'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceDelegateSpecifier1">
        <source>Delegate in an interface cannot be declared '{0}'.</source>
        <target state="new">Delegate in an interface cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceEnumSpecifier1">
        <source>Enum in an interface cannot be declared '{0}'.</source>
        <target state="new">Enum in an interface cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceClassSpecifier1">
        <source>Class in an interface cannot be declared '{0}'.</source>
        <target state="new">Class in an interface cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceStructSpecifier1">
        <source>Structure in an interface cannot be declared '{0}'.</source>
        <target state="new">Structure in an interface cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadInterfaceInterfaceSpecifier1">
        <source>Interface in an interface cannot be declared '{0}'.</source>
        <target state="new">Interface in an interface cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfObsoleteSymbolNoMessage1">
        <source>'{0}' is obsolete.</source>
        <target state="new">'{0}' is obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MetaDataIsNotAssembly">
        <source>'{0}' is a module and cannot be referenced as an assembly.</source>
        <target state="new">'{0}' is a module and cannot be referenced as an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MetaDataIsNotModule">
        <source>'{0}' is an assembly and cannot be referenced as a module.</source>
        <target state="new">'{0}' is an assembly and cannot be referenced as a module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReferenceComparison3">
        <source>Operator '{0}' is not defined for types '{1}' and '{2}'. Use 'Is' operator to compare two reference types.</source>
        <target state="new">Operator '{0}' is not defined for types '{1}' and '{2}'. Use 'Is' operator to compare two reference types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CatchVariableNotLocal1">
        <source>'{0}' is not a local variable or parameter, and so cannot be used as a 'Catch' variable.</source>
        <target state="new">'{0}' is not a local variable or parameter, and so cannot be used as a 'Catch' variable.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModuleMemberCantImplement">
        <source>Members in a Module cannot implement interface members.</source>
        <target state="new">Members in a Module cannot implement interface members.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventDelegatesCantBeFunctions">
        <source>Events cannot be declared with a delegate type that has a return type.</source>
        <target state="new">Events cannot be declared with a delegate type that has a return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidDate">
        <source>Date constant is not valid.</source>
        <target state="new">Date constant is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantOverride4">
        <source>'{0}' cannot override '{1}' because it is not declared 'Overridable'.</source>
        <target state="new">'{0}' cannot override '{1}' because it is not declared 'Overridable'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyArraysOnBoth">
        <source>Array modifiers cannot be specified on both a variable and its type.</source>
        <target state="new">Array modifiers cannot be specified on both a variable and its type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NotOverridableRequiresOverrides">
        <source>'NotOverridable' cannot be specified for methods that do not override another method.</source>
        <target state="new">'NotOverridable' cannot be specified for methods that do not override another method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PrivateTypeOutsideType">
        <source>Types declared 'Private' must be inside another type.</source>
        <target state="new">Types declared 'Private' must be inside another type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeRefResolutionError3">
        <source>Import of type '{0}' from assembly or module '{1}' failed.</source>
        <target state="new">Import of type '{0}' from assembly or module '{1}' failed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ValueTupleTypeRefResolutionError1">
        <source>Predefined type '{0}' is not defined or imported.</source>
        <target state="new">Predefined type '{0}' is not defined or imported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayWrongType">
        <source>ParamArray parameters must have an array type.</source>
        <target state="new">ParamArray parameters must have an array type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CoClassMissing2">
        <source>Implementing class '{0}' for interface '{1}' cannot be found.</source>
        <target state="new">Implementing class '{0}' for interface '{1}' cannot be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidCoClass1">
        <source>Type '{0}' cannot be used as an implementing class.</source>
        <target state="new">Type '{0}' cannot be used as an implementing class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidMeReference">
        <source>Reference to object under construction is not valid when calling another constructor.</source>
        <target state="new">Reference to object under construction is not valid when calling another constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidImplicitMeReference">
        <source>Implicit reference to object under construction is not valid when calling another constructor.</source>
        <target state="new">Implicit reference to object under construction is not valid when calling another constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RuntimeMemberNotFound2">
        <source>Member '{0}' cannot be found in class '{1}'. This condition is usually the result of a mismatched 'Microsoft.VisualBasic.dll'.</source>
        <target state="new">Member '{0}' cannot be found in class '{1}'. This condition is usually the result of a mismatched 'Microsoft.VisualBasic.dll'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyAccessorFlags">
        <source>Property accessors cannot be declared '{0}'.</source>
        <target state="new">Property accessors cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyAccessorFlagsRestrict">
        <source>Access modifier '{0}' is not valid. The access modifier of 'Get' and 'Set' should be more restrictive than the property access level.</source>
        <target state="new">Access modifier '{0}' is not valid. The access modifier of 'Get' and 'Set' should be more restrictive than the property access level.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnlyOneAccessorForGetSet">
        <source>Access modifier can only be applied to either 'Get' or 'Set', but not both.</source>
        <target state="new">Access modifier can only be applied to either 'Get' or 'Set', but not both.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoAccessibleSet">
        <source>'Set' accessor of property '{0}' is not accessible.</source>
        <target state="new">'Set' accessor of property '{0}' is not accessible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoAccessibleGet">
        <source>'Get' accessor of property '{0}' is not accessible.</source>
        <target state="new">'Get' accessor of property '{0}' is not accessible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WriteOnlyNoAccessorFlag">
        <source>'WriteOnly' properties cannot have an access modifier on 'Set'.</source>
        <target state="new">'WriteOnly' properties cannot have an access modifier on 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyNoAccessorFlag">
        <source>'ReadOnly' properties cannot have an access modifier on 'Get'.</source>
        <target state="new">'ReadOnly' properties cannot have an access modifier on 'Get'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyAccessorFlags1">
        <source>Property accessors cannot be declared '{0}' in a 'NotOverridable' property.</source>
        <target state="new">Property accessors cannot be declared '{0}' in a 'NotOverridable' property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyAccessorFlags2">
        <source>Property accessors cannot be declared '{0}' in a 'Default' property.</source>
        <target state="new">Property accessors cannot be declared '{0}' in a 'Default' property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPropertyAccessorFlags3">
        <source>Property cannot be declared '{0}' because it contains a 'Private' accessor.</source>
        <target state="new">Property cannot be declared '{0}' because it contains a 'Private' accessor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InAccessibleCoClass3">
        <source>Implementing class '{0}' for interface '{1}' is not accessible in this context because it is '{2}'.</source>
        <target state="new">Implementing class '{0}' for interface '{1}' is not accessible in this context because it is '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingValuesForArraysInApplAttrs">
        <source>Arrays used as attribute arguments are required to explicitly specify values for all elements.</source>
        <target state="new">Arrays used as attribute arguments are required to explicitly specify values for all elements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitEventMemberNotInvalid">
        <source>'Exit AddHandler', 'Exit RemoveHandler' and 'Exit RaiseEvent' are not valid. Use 'Return' to exit from event members.</source>
        <target state="new">'Exit AddHandler', 'Exit RemoveHandler' and 'Exit RaiseEvent' are not valid. Use 'Return' to exit from event members.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvInsideEndsEvent">
        <source>Statement cannot appear within an event body. End of event assumed.</source>
        <target state="new">Statement cannot appear within an event body. End of event assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndEvent">
        <source>'Custom Event' must end with a matching 'End Event'.</source>
        <target state="new">'Custom Event' must end with a matching 'End Event'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndAddHandler">
        <source>'AddHandler' declaration must end with a matching 'End AddHandler'.</source>
        <target state="new">'AddHandler' declaration must end with a matching 'End AddHandler'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndRemoveHandler">
        <source>'RemoveHandler' declaration must end with a matching 'End RemoveHandler'.</source>
        <target state="new">'RemoveHandler' declaration must end with a matching 'End RemoveHandler'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingEndRaiseEvent">
        <source>'RaiseEvent' declaration must end with a matching 'End RaiseEvent'.</source>
        <target state="new">'RaiseEvent' declaration must end with a matching 'End RaiseEvent'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CustomEventInvInInterface">
        <source>'Custom' modifier is not valid on events declared in interfaces.</source>
        <target state="new">'Custom' modifier is not valid on events declared in interfaces.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CustomEventRequiresAs">
        <source>'Custom' modifier is not valid on events declared without explicit delegate types.</source>
        <target state="new">'Custom' modifier is not valid on events declared without explicit delegate types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndEvent">
        <source>'End Event' must be preceded by a matching 'Custom Event'.</source>
        <target state="new">'End Event' must be preceded by a matching 'Custom Event'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndAddHandler">
        <source>'End AddHandler' must be preceded by a matching 'AddHandler' declaration.</source>
        <target state="new">'End AddHandler' must be preceded by a matching 'AddHandler' declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndRemoveHandler">
        <source>'End RemoveHandler' must be preceded by a matching 'RemoveHandler' declaration.</source>
        <target state="new">'End RemoveHandler' must be preceded by a matching 'RemoveHandler' declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndRaiseEvent">
        <source>'End RaiseEvent' must be preceded by a matching 'RaiseEvent' declaration.</source>
        <target state="new">'End RaiseEvent' must be preceded by a matching 'RaiseEvent' declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateAddHandlerDef">
        <source>'AddHandler' is already declared.</source>
        <target state="new">'AddHandler' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateRemoveHandlerDef">
        <source>'RemoveHandler' is already declared.</source>
        <target state="new">'RemoveHandler' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateRaiseEventDef">
        <source>'RaiseEvent' is already declared.</source>
        <target state="new">'RaiseEvent' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingAddHandlerDef1">
        <source>'AddHandler' definition missing for event '{0}'.</source>
        <target state="new">'AddHandler' definition missing for event '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingRemoveHandlerDef1">
        <source>'RemoveHandler' definition missing for event '{0}'.</source>
        <target state="new">'RemoveHandler' definition missing for event '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingRaiseEventDef1">
        <source>'RaiseEvent' definition missing for event '{0}'.</source>
        <target state="new">'RaiseEvent' definition missing for event '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventAddRemoveHasOnlyOneParam">
        <source>'AddHandler' and 'RemoveHandler' methods must have exactly one parameter.</source>
        <target state="new">'AddHandler' and 'RemoveHandler' methods must have exactly one parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventAddRemoveByrefParamIllegal">
        <source>'AddHandler' and 'RemoveHandler' method parameters cannot be declared 'ByRef'.</source>
        <target state="new">'AddHandler' and 'RemoveHandler' method parameters cannot be declared 'ByRef'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SpecifiersInvOnEventMethod">
        <source>Specifiers are not valid on 'AddHandler', 'RemoveHandler' and 'RaiseEvent' methods.</source>
        <target state="new">Specifiers are not valid on 'AddHandler', 'RemoveHandler' and 'RaiseEvent' methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddRemoveParamNotEventType">
        <source>'AddHandler' and 'RemoveHandler' method parameters must have the same delegate type as the containing event.</source>
        <target state="new">'AddHandler' and 'RemoveHandler' method parameters must have the same delegate type as the containing event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RaiseEventShapeMismatch1">
        <source>'RaiseEvent' method must have the same signature as the containing event's delegate type '{0}'.</source>
        <target state="new">'RaiseEvent' method must have the same signature as the containing event's delegate type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventMethodOptionalParamIllegal1">
        <source>'AddHandler', 'RemoveHandler' and 'RaiseEvent' method parameters cannot be declared '{0}'.</source>
        <target state="new">'AddHandler', 'RemoveHandler' and 'RaiseEvent' method parameters cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantReferToMyGroupInsideGroupType1">
        <source>'{0}' cannot refer to itself through its default instance; use 'Me' instead.</source>
        <target state="new">'{0}' cannot refer to itself through its default instance; use 'Me' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidUseOfCustomModifier">
        <source>'Custom' modifier can only be used immediately before an 'Event' declaration.</source>
        <target state="new">'Custom' modifier can only be used immediately before an 'Event' declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOptionStrictCustom">
        <source>Option Strict Custom can only be used as an option to the command-line compiler (vbc.exe).</source>
        <target state="new">Option Strict Custom can only be used as an option to the command-line compiler (vbc.exe).</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObsoleteInvalidOnEventMember">
        <source>'{0}' cannot be applied to the 'AddHandler', 'RemoveHandler', or 'RaiseEvent' definitions. If required, apply the attribute directly to the event.</source>
        <target state="new">'{0}' cannot be applied to the 'AddHandler', 'RemoveHandler', or 'RaiseEvent' definitions. If required, apply the attribute directly to the event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingIncompatible2">
        <source>Method '{0}' does not have a signature compatible with delegate '{1}'.</source>
        <target state="new">Method '{0}' does not have a signature compatible with delegate '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlName">
        <source>XML name expected.</source>
        <target state="new">XML name expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UndefinedXmlPrefix">
        <source>XML namespace prefix '{0}' is not defined.</source>
        <target state="new">XML namespace prefix '{0}' is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateXmlAttribute">
        <source>Duplicate XML attribute '{0}'.</source>
        <target state="new">Duplicate XML attribute '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MismatchedXmlEndTag">
        <source>End tag &lt;/{0}{1}{2}&gt; expected.</source>
        <target state="new">End tag &lt;/{0}{1}{2}&gt; expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingXmlEndTag">
        <source>Element is missing an end tag.</source>
        <target state="new">Element is missing an end tag.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReservedXmlPrefix">
        <source>XML namespace prefix '{0}' is reserved for use by XML and the namespace URI cannot be changed.</source>
        <target state="new">XML namespace prefix '{0}' is reserved for use by XML and the namespace URI cannot be changed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingVersionInXmlDecl">
        <source>Required attribute 'version' missing from XML declaration.</source>
        <target state="new">Required attribute 'version' missing from XML declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalAttributeInXmlDecl">
        <source>XML declaration does not allow attribute '{0}{1}{2}'.</source>
        <target state="new">XML declaration does not allow attribute '{0}{1}{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QuotedEmbeddedExpression">
        <source>Embedded expression cannot appear inside a quoted attribute value.  Try removing quotes.</source>
        <target state="new">Embedded expression cannot appear inside a quoted attribute value.  Try removing quotes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VersionMustBeFirstInXmlDecl">
        <source>XML attribute 'version' must be the first attribute in XML declaration.</source>
        <target state="new">XML attribute 'version' must be the first attribute in XML declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeOrder">
        <source>XML attribute '{0}' must appear before XML attribute '{1}'.</source>
        <target state="new">XML attribute '{0}' must appear before XML attribute '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlEndEmbedded">
        <source>Expected closing '%&gt;' for embedded expression.</source>
        <target state="new">Expected closing '%&gt;' for embedded expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlEndPI">
        <source>Expected closing '?&gt;' for XML processor instruction.</source>
        <target state="new">Expected closing '?&gt;' for XML processor instruction.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlEndComment">
        <source>Expected closing '--&gt;' for XML comment.</source>
        <target state="new">Expected closing '--&gt;' for XML comment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlEndCData">
        <source>Expected closing ']]&gt;' for XML CDATA section.</source>
        <target state="new">Expected closing ']]&gt;' for XML CDATA section.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSQuote">
        <source>Expected matching closing single quote for XML attribute value.</source>
        <target state="new">Expected matching closing single quote for XML attribute value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedQuote">
        <source>Expected matching closing double quote for XML attribute value.</source>
        <target state="new">Expected matching closing double quote for XML attribute value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedLT">
        <source>Expected beginning '&lt;' for an XML tag.</source>
        <target state="new">Expected beginning '&lt;' for an XML tag.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StartAttributeValue">
        <source>Expected quoted XML attribute value or embedded expression.</source>
        <target state="new">Expected quoted XML attribute value or embedded expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDiv">
        <source>Expected '/' for XML end tag.</source>
        <target state="new">Expected '/' for XML end tag.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoXmlAxesLateBinding">
        <source>XML axis properties do not support late binding.</source>
        <target state="new">XML axis properties do not support late binding.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalXmlStartNameChar">
        <source>Character '{0}' ({1}) is not allowed at the beginning of an XML name.</source>
        <target state="new">Character '{0}' ({1}) is not allowed at the beginning of an XML name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalXmlNameChar">
        <source>Character '{0}' ({1}) is not allowed in an XML name.</source>
        <target state="new">Character '{0}' ({1}) is not allowed in an XML name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalXmlCommentChar">
        <source>Character sequence '--' is not allowed in an XML comment.</source>
        <target state="new">Character sequence '--' is not allowed in an XML comment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EmbeddedExpression">
        <source>An embedded expression cannot be used here.</source>
        <target state="new">An embedded expression cannot be used here.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlWhiteSpace">
        <source>Missing required white space.</source>
        <target state="new">Missing required white space.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalProcessingInstructionName">
        <source>XML processing instruction name '{0}' is not valid.</source>
        <target state="new">XML processing instruction name '{0}' is not valid.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DTDNotSupported">
        <source>XML DTDs are not supported.</source>
        <target state="new">XML DTDs are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalXmlWhiteSpace">
        <source>White space cannot appear here.</source>
        <target state="new">White space cannot appear here.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSColon">
        <source>Expected closing ';' for XML entity.</source>
        <target state="new">Expected closing ';' for XML entity.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlBeginEmbedded">
        <source>Expected '%=' at start of an embedded expression.</source>
        <target state="new">Expected '%=' at start of an embedded expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_XmlEntityReference">
        <source>XML entity references are not supported.</source>
        <target state="new">XML entity references are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAttributeValue1">
        <source>Attribute value is not valid; expecting '{0}'.</source>
        <target state="new">Attribute value is not valid; expecting '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAttributeValue2">
        <source>Attribute value is not valid; expecting '{0}' or '{1}'.</source>
        <target state="new">Attribute value is not valid; expecting '{0}' or '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReservedXmlNamespace">
        <source>Prefix '{0}' cannot be bound to namespace name reserved for '{1}'.</source>
        <target state="new">Prefix '{0}' cannot be bound to namespace name reserved for '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalDefaultNamespace">
        <source>Namespace declaration with prefix cannot have an empty value inside an XML literal.</source>
        <target state="new">Namespace declaration with prefix cannot have an empty value inside an XML literal.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QualifiedNameNotAllowed">
        <source>':' is not allowed. XML qualified names cannot be used in this context.</source>
        <target state="new">':' is not allowed. XML qualified names cannot be used in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedXmlns">
        <source>Namespace declaration must start with 'xmlns'.</source>
        <target state="new">Namespace declaration must start with 'xmlns'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalXmlnsPrefix">
        <source>Element names cannot use the 'xmlns' prefix.</source>
        <target state="new">Element names cannot use the 'xmlns' prefix.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_XmlFeaturesNotAvailable">
        <source>XML literals and XML axis properties are not available. Add references to System.Xml, System.Xml.Linq, and System.Core or other assemblies declaring System.Linq.Enumerable, System.Xml.Linq.XElement, System.Xml.Linq.XName, System.Xml.Linq.XAttribute and System.Xml.Linq.XNamespace types.</source>
        <target state="new">XML literals and XML axis properties are not available. Add references to System.Xml, System.Xml.Linq, and System.Core or other assemblies declaring System.Linq.Enumerable, System.Xml.Linq.XElement, System.Xml.Linq.XName, System.Xml.Linq.XAttribute and System.Xml.Linq.XNamespace types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnableToReadUacManifest2">
        <source>Unable to open Win32 manifest file '{0}' : {1}</source>
        <target state="new">Unable to open Win32 manifest file '{0}' : {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseValueForXmlExpression3">
        <source>Cannot convert '{0}' to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</source>
        <target state="new">Cannot convert '{0}' to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseValueForXmlExpression3_Title">
        <source>Cannot convert IEnumerable(Of XElement) to String</source>
        <target state="new">Cannot convert IEnumerable(Of XElement) to String</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeMismatchForXml3">
        <source>Value of type '{0}' cannot be converted to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</source>
        <target state="new">Value of type '{0}' cannot be converted to '{1}'. You can use the 'Value' property to get the string value of the first element of '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BinaryOperandsForXml4">
        <source>Operator '{0}' is not defined for types '{1}' and '{2}'. You can use the 'Value' property to get the string value of the first element of '{3}'.</source>
        <target state="new">Operator '{0}' is not defined for types '{1}' and '{2}'. You can use the 'Value' property to get the string value of the first element of '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FullWidthAsXmlDelimiter">
        <source>Full width characters are not valid as XML delimiters.</source>
        <target state="new">Full width characters are not valid as XML delimiters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidSubsystemVersion">
        <source>The value '{0}' is not a valid subsystem version. The version must be 6.02 or greater for ARM or AppContainerExe, and 4.00 or greater otherwise.</source>
        <target state="new">The value '{0}' is not a valid subsystem version. The version must be 6.02 or greater for ARM or AppContainerExe, and 4.00 or greater otherwise.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidFileAlignment">
        <source>Invalid file section alignment '{0}'</source>
        <target state="new">Invalid file section alignment '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidOutputName">
        <source>Invalid output name: {0}</source>
        <target state="new">Invalid output name: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidDebugInformationFormat">
        <source>Invalid debug information format: {0}</source>
        <target state="new">Invalid debug information format: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LibAnycpu32bitPreferredConflict">
        <source>/platform:anycpu32bitpreferred can only be used with /t:exe, /t:winexe and /t:appcontainerexe.</source>
        <target state="new">/platform:anycpu32bitpreferred can only be used with /t:exe, /t:winexe and /t:appcontainerexe.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RestrictedAccess">
        <source>Expression has the type '{0}' which is a restricted type and cannot be used to access members inherited from 'Object' or 'ValueType'.</source>
        <target state="new">Expression has the type '{0}' which is a restricted type and cannot be used to access members inherited from 'Object' or 'ValueType'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RestrictedConversion1">
        <source>Expression of type '{0}' cannot be converted to 'Object' or 'ValueType'.</source>
        <target state="new">Expression of type '{0}' cannot be converted to 'Object' or 'ValueType'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoTypecharInLabel">
        <source>Type characters are not allowed in label identifiers.</source>
        <target state="new">Type characters are not allowed in label identifiers.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RestrictedType1">
        <source>'{0}' cannot be made nullable, and cannot be used as the data type of an array element, field, anonymous type member, type argument, 'ByRef' parameter, or return statement.</source>
        <target state="new">'{0}' cannot be made nullable, and cannot be used as the data type of an array element, field, anonymous type member, type argument, 'ByRef' parameter, or return statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoTypecharInAlias">
        <source>Type characters are not allowed on Imports aliases.</source>
        <target state="new">Type characters are not allowed on Imports aliases.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoAccessibleConstructorOnBase">
        <source>Class '{0}' has no accessible 'Sub New' and cannot be inherited.</source>
        <target state="new">Class '{0}' has no accessible 'Sub New' and cannot be inherited.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadStaticLocalInStruct">
        <source>Local variables within methods of structures cannot be declared 'Static'.</source>
        <target state="new">Local variables within methods of structures cannot be declared 'Static'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateLocalStatic1">
        <source>Static local variable '{0}' is already declared.</source>
        <target state="new">Static local variable '{0}' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImportAliasConflictsWithType2">
        <source>Imports alias '{0}' conflicts with '{1}' declared in the root namespace.</source>
        <target state="new">Imports alias '{0}' conflicts with '{1}' declared in the root namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantShadowAMustOverride1">
        <source>'{0}' cannot shadow a method declared 'MustOverride'.</source>
        <target state="new">'{0}' cannot shadow a method declared 'MustOverride'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleEventImplMismatch3">
        <source>Event '{0}' cannot implement event '{2}.{1}' because its delegate type does not match the delegate type of another event implemented by '{0}'.</source>
        <target state="new">Event '{0}' cannot implement event '{2}.{1}' because its delegate type does not match the delegate type of another event implemented by '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadSpecifierCombo2">
        <source>'{0}' and '{1}' cannot be combined.</source>
        <target state="new">'{0}' and '{1}' cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustBeOverloads2">
        <source>{0} '{1}' must be declared 'Overloads' because another '{1}' is declared 'Overloads' or 'Overrides'.</source>
        <target state="new">{0} '{1}' must be declared 'Overloads' because another '{1}' is declared 'Overloads' or 'Overrides'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustOverridesInClass1">
        <source>'{0}' must be declared 'MustInherit' because it contains methods declared 'MustOverride'.</source>
        <target state="new">'{0}' must be declared 'MustInherit' because it contains methods declared 'MustOverride'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_HandlesSyntaxInClass">
        <source>'Handles' in classes must specify a 'WithEvents' variable, 'MyBase', 'MyClass' or 'Me' qualified with a single identifier.</source>
        <target state="new">'Handles' in classes must specify a 'WithEvents' variable, 'MyBase', 'MyClass' or 'Me' qualified with a single identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SynthMemberShadowsMustOverride5">
        <source>'{0}', implicitly declared for {1} '{2}', cannot shadow a 'MustOverride' method in the base {3} '{4}'.</source>
        <target state="new">'{0}', implicitly declared for {1} '{2}', cannot shadow a 'MustOverride' method in the base {3} '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotOverrideInAccessibleMember">
        <source>'{0}' cannot override '{1}' because it is not accessible in this context.</source>
        <target state="new">'{0}' cannot override '{1}' because it is not accessible in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_HandlesSyntaxInModule">
        <source>'Handles' in modules must specify a 'WithEvents' variable qualified with a single identifier.</source>
        <target state="new">'Handles' in modules must specify a 'WithEvents' variable qualified with a single identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsNotOpRequiresReferenceTypes1">
        <source>'IsNot' requires operands that have reference types, but this operand has the value type '{0}'.</source>
        <target state="new">'IsNot' requires operands that have reference types, but this operand has the value type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClashWithReservedEnumMember1">
        <source>'{0}' conflicts with the reserved member by this name that is implicitly declared in all enums.</source>
        <target state="new">'{0}' conflicts with the reserved member by this name that is implicitly declared in all enums.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultiplyDefinedEnumMember2">
        <source>'{0}' is already declared in this {1}.</source>
        <target state="new">'{0}' is already declared in this {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadUseOfVoid">
        <source>'System.Void' can only be used in a GetType expression.</source>
        <target state="new">'System.Void' can only be used in a GetType expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventImplMismatch5">
        <source>Event '{0}' cannot implement event '{1}' on interface '{2}' because their delegate types '{3}' and '{4}' do not match.</source>
        <target state="new">Event '{0}' cannot implement event '{1}' on interface '{2}' because their delegate types '{3}' and '{4}' do not match.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForwardedTypeUnavailable3">
        <source>Type '{0}' in assembly '{1}' has been forwarded to assembly '{2}'. Either a reference to '{2}' is missing from your project or the type '{0}' is missing from assembly '{2}'.</source>
        <target state="new">Type '{0}' in assembly '{1}' has been forwarded to assembly '{2}'. Either a reference to '{2}' is missing from your project or the type '{0}' is missing from assembly '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeFwdCycle2">
        <source>'{0}' in assembly '{1}' has been forwarded to itself and so is an unsupported type.</source>
        <target state="new">'{0}' in assembly '{1}' has been forwarded to itself and so is an unsupported type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadTypeInCCExpression">
        <source>Non-intrinsic type names are not allowed in conditional compilation expressions.</source>
        <target state="new">Non-intrinsic type names are not allowed in conditional compilation expressions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadCCExpression">
        <source>Syntax error in conditional compilation expression.</source>
        <target state="new">Syntax error in conditional compilation expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VoidArrayDisallowed">
        <source>Arrays of type 'System.Void' are not allowed in this expression.</source>
        <target state="new">Arrays of type 'System.Void' are not allowed in this expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MetadataMembersAmbiguous3">
        <source>'{0}' is ambiguous because multiple kinds of members with this name exist in {1} '{2}'.</source>
        <target state="new">'{0}' is ambiguous because multiple kinds of members with this name exist in {1} '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeOfExprAlwaysFalse2">
        <source>Expression of type '{0}' can never be of type '{1}'.</source>
        <target state="new">Expression of type '{0}' can never be of type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnlyPrivatePartialMethods1">
        <source>Partial methods must be declared 'Private' instead of '{0}'.</source>
        <target state="new">Partial methods must be declared 'Private' instead of '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodsMustBePrivate">
        <source>Partial methods must be declared 'Private'.</source>
        <target state="new">Partial methods must be declared 'Private'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnlyOnePartialMethodAllowed2">
        <source>Method '{0}' cannot be declared 'Partial' because only one method '{1}' can be marked 'Partial'.</source>
        <target state="new">Method '{0}' cannot be declared 'Partial' because only one method '{1}' can be marked 'Partial'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnlyOneImplementingMethodAllowed3">
        <source>Method '{0}' cannot implement partial method '{1}' because '{2}' already implements it. Only one method can implement a partial method.</source>
        <target state="new">Method '{0}' cannot implement partial method '{1}' because '{2}' already implements it. Only one method can implement a partial method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodMustBeEmpty">
        <source>Partial methods must have empty method bodies.</source>
        <target state="new">Partial methods must have empty method bodies.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodsMustBeSub1">
        <source>'{0}' cannot be declared 'Partial' because partial methods must be Subs.</source>
        <target state="new">'{0}' cannot be declared 'Partial' because partial methods must be Subs.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodGenericConstraints2">
        <source>Method '{0}' does not have the same generic constraints as the partial method '{1}'.</source>
        <target state="new">Method '{0}' does not have the same generic constraints as the partial method '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialDeclarationImplements1">
        <source>Partial method '{0}' cannot use the 'Implements' keyword.</source>
        <target state="new">Partial method '{0}' cannot use the 'Implements' keyword.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoPartialMethodInAddressOf1">
        <source>'AddressOf' cannot be applied to '{0}' because '{0}' is a partial method without an implementation.</source>
        <target state="new">'AddressOf' cannot be applied to '{0}' because '{0}' is a partial method without an implementation.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementationMustBePrivate2">
        <source>Method '{0}' must be declared 'Private' in order to implement partial method '{1}'.</source>
        <target state="new">Method '{0}' must be declared 'Private' in order to implement partial method '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodParamNamesMustMatch3">
        <source>Parameter name '{0}' does not match the name of the corresponding parameter, '{1}', defined on the partial method declaration '{2}'.</source>
        <target state="new">Parameter name '{0}' does not match the name of the corresponding parameter, '{1}', defined on the partial method declaration '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodTypeParamNameMismatch3">
        <source>Name of type parameter '{0}' does not match '{1}', the corresponding type parameter defined on the partial method declaration '{2}'.</source>
        <target state="new">Name of type parameter '{0}' does not match '{1}', the corresponding type parameter defined on the partial method declaration '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeSharedProperty1">
        <source>'Shared' attribute property '{0}' cannot be the target of an assignment.</source>
        <target state="new">'Shared' attribute property '{0}' cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeReadOnlyProperty1">
        <source>'ReadOnly' attribute property '{0}' cannot be the target of an assignment.</source>
        <target state="new">'ReadOnly' attribute property '{0}' cannot be the target of an assignment.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateResourceName1">
        <source>Resource name '{0}' cannot be used more than once.</source>
        <target state="new">Resource name '{0}' cannot be used more than once.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateResourceFileName1">
        <source>Each linked resource and module must have a unique filename. Filename '{0}' is specified more than once in this assembly.</source>
        <target state="new">Each linked resource and module must have a unique filename. Filename '{0}' is specified more than once in this assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeMustBeClassNotStruct1">
        <source>'{0}' cannot be used as an attribute because it is not a class.</source>
        <target state="new">'{0}' cannot be used as an attribute because it is not a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeMustInheritSysAttr">
        <source>'{0}' cannot be used as an attribute because it does not inherit from 'System.Attribute'.</source>
        <target state="new">'{0}' cannot be used as an attribute because it does not inherit from 'System.Attribute'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeCannotBeAbstract">
        <source>'{0}' cannot be used as an attribute because it is declared 'MustInherit'.</source>
        <target state="new">'{0}' cannot be used as an attribute because it is declared 'MustInherit'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnableToOpenResourceFile1">
        <source>Unable to open resource file '{0}': {1}</source>
        <target state="new">Unable to open resource file '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeNonPublicProperty1">
        <source>Attribute member '{0}' cannot be the target of an assignment because it is not declared 'Public'.</source>
        <target state="new">Attribute member '{0}' cannot be the target of an assignment because it is not declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_STAThreadAndMTAThread0">
        <source>'System.STAThreadAttribute' and 'System.MTAThreadAttribute' cannot both be applied to the same method.</source>
        <target state="new">'System.STAThreadAttribute' and 'System.MTAThreadAttribute' cannot both be applied to the same method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IndirectUnreferencedAssembly4">
        <source>Project '{0}' makes an indirect reference to assembly '{1}', which contains '{2}'. Add a file reference to '{3}' to your project.</source>
        <target state="new">Project '{0}' makes an indirect reference to assembly '{1}', which contains '{2}'. Add a file reference to '{3}' to your project.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeNonPublicType1">
        <source>Type '{0}' cannot be used in an attribute because it is not declared 'Public'.</source>
        <target state="new">Type '{0}' cannot be used in an attribute because it is not declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeNonPublicContType2">
        <source>Type '{0}' cannot be used in an attribute because its container '{1}' is not declared 'Public'.</source>
        <target state="new">Type '{0}' cannot be used in an attribute because its container '{1}' is not declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportOnNonEmptySubOrFunction">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Sub, Function, or Operator with a non-empty body.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Sub, Function, or Operator with a non-empty body.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportNotLegalOnDeclare">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Declare.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Declare.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportNotLegalOnGetOrSet">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Get or Set.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a Get or Set.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportOnGenericSubOrFunction">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a method that is generic or contained in a generic type.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to a method that is generic or contained in a generic type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassOnGeneric">
        <source>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is generic or contained inside a generic type.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is generic or contained inside a generic type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportOnInstanceMethod">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to instance method.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to instance method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportOnInterfaceMethod">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to interface methods.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to interface methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportNotLegalOnEventMethod">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to 'AddHandler', 'RemoveHandler' or 'RaiseEvent' method.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to 'AddHandler', 'RemoveHandler' or 'RaiseEvent' method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendAssemblyBadArguments">
        <source>Friend assembly reference '{0}' is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified.</source>
        <target state="new">Friend assembly reference '{0}' is invalid. InternalsVisibleTo declarations cannot have a version, culture, public key token, or processor architecture specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendAssemblyStrongNameRequired">
        <source>Friend assembly reference '{0}' is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations.</source>
        <target state="new">Friend assembly reference '{0}' is invalid. Strong-name signed assemblies must specify a public key in their InternalsVisibleTo declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendAssemblyNameInvalid">
        <source>Friend declaration '{0}' is invalid and cannot be resolved.</source>
        <target state="new">Friend declaration '{0}' is invalid and cannot be resolved.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendAssemblyBadAccessOverride2">
        <source>Member '{0}' cannot override member '{1}' defined in another assembly/project because the access modifier 'Protected Friend' expands accessibility. Use 'Protected' instead.</source>
        <target state="new">Member '{0}' cannot override member '{1}' defined in another assembly/project because the access modifier 'Protected Friend' expands accessibility. Use 'Protected' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfLocalBeforeDeclaration1">
        <source>Local variable '{0}' cannot be referred to before it is declared.</source>
        <target state="new">Local variable '{0}' cannot be referred to before it is declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UseOfKeywordFromModule1">
        <source>'{0}' is not valid within a Module.</source>
        <target state="new">'{0}' is not valid within a Module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BogusWithinLineIf">
        <source>Statement cannot end a block outside of a line 'If' statement.</source>
        <target state="new">Statement cannot end a block outside of a line 'If' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CharToIntegralTypeMismatch1">
        <source>'Char' values cannot be converted to '{0}'. Use 'Microsoft.VisualBasic.AscW' to interpret a character as a Unicode value or 'Microsoft.VisualBasic.Val' to interpret it as a digit.</source>
        <target state="new">'Char' values cannot be converted to '{0}'. Use 'Microsoft.VisualBasic.AscW' to interpret a character as a Unicode value or 'Microsoft.VisualBasic.Val' to interpret it as a digit.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IntegralToCharTypeMismatch1">
        <source>'{0}' values cannot be converted to 'Char'. Use 'Microsoft.VisualBasic.ChrW' to interpret a numeric value as a Unicode character or first convert it to 'String' to produce a digit.</source>
        <target state="new">'{0}' values cannot be converted to 'Char'. Use 'Microsoft.VisualBasic.ChrW' to interpret a numeric value as a Unicode character or first convert it to 'String' to produce a digit.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoDirectDelegateConstruction1">
        <source>Delegate '{0}' requires an 'AddressOf' expression or lambda expression as the only argument to its constructor.</source>
        <target state="new">Delegate '{0}' requires an 'AddressOf' expression or lambda expression as the only argument to its constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MethodMustBeFirstStatementOnLine">
        <source>Method declaration statements must be the first statement on a logical line.</source>
        <target state="new">Method declaration statements must be the first statement on a logical line.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttrAssignmentNotFieldOrProp1">
        <source>'{0}' cannot be named as a parameter in an attribute specifier because it is not a field or property.</source>
        <target state="new">'{0}' cannot be named as a parameter in an attribute specifier because it is not a field or property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowsObjectComparison1">
        <source>Option Strict On disallows operands of type Object for operator '{0}'. Use the 'Is' operator to test for object identity.</source>
        <target state="new">Option Strict On disallows operands of type Object for operator '{0}'. Use the 'Is' operator to test for object identity.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoConstituentArraySizes">
        <source>Bounds can be specified only for the top-level array when initializing an array of arrays.</source>
        <target state="new">Bounds can be specified only for the top-level array when initializing an array of arrays.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FileAttributeNotAssemblyOrModule">
        <source>'Assembly' or 'Module' expected.</source>
        <target state="new">'Assembly' or 'Module' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FunctionResultCannotBeIndexed1">
        <source>'{0}' has no parameters and its return type cannot be indexed.</source>
        <target state="new">'{0}' has no parameters and its return type cannot be indexed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArgumentSyntax">
        <source>Comma, ')', or a valid expression continuation expected.</source>
        <target state="new">Comma, ')', or a valid expression continuation expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedResumeOrGoto">
        <source>'Resume' or 'GoTo' expected.</source>
        <target state="new">'Resume' or 'GoTo' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedAssignmentOperator">
        <source>'=' expected.</source>
        <target state="new">'=' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgAlsoOmitted2">
        <source>Parameter '{0}' in '{1}' already has a matching omitted argument.</source>
        <target state="new">Parameter '{0}' in '{1}' already has a matching omitted argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotCallEvent1">
        <source>'{0}' is an event, and cannot be called directly. Use a 'RaiseEvent' statement to raise an event.</source>
        <target state="new">'{0}' is an event, and cannot be called directly. Use a 'RaiseEvent' statement to raise an event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForEachCollectionDesignPattern1">
        <source>Expression is of type '{0}', which is not a collection type.</source>
        <target state="new">Expression is of type '{0}', which is not a collection type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DefaultValueForNonOptionalParam">
        <source>Default values cannot be supplied for parameters that are not declared 'Optional'.</source>
        <target state="new">Default values cannot be supplied for parameters that are not declared 'Optional'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDotAfterMyBase">
        <source>'MyBase' must be followed by '.' and an identifier.</source>
        <target state="new">'MyBase' must be followed by '.' and an identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDotAfterMyClass">
        <source>'MyClass' must be followed by '.' and an identifier.</source>
        <target state="new">'MyClass' must be followed by '.' and an identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictArgumentCopyBackNarrowing3">
        <source>Option Strict On disallows narrowing from type '{1}' to type '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</source>
        <target state="new">Option Strict On disallows narrowing from type '{1}' to type '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LbElseifAfterElse">
        <source>'#ElseIf' cannot follow '#Else' as part of a '#If' block.</source>
        <target state="new">'#ElseIf' cannot follow '#Else' as part of a '#If' block.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StandaloneAttribute">
        <source>Attribute specifier is not a complete statement. Use a line continuation to apply the attribute to the following statement.</source>
        <target state="new">Attribute specifier is not a complete statement. Use a line continuation to apply the attribute to the following statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoUniqueConstructorOnBase2">
        <source>Class '{0}' must declare a 'Sub New' because its base class '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</source>
        <target state="new">Class '{0}' must declare a 'Sub New' because its base class '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtraNextVariable">
        <source>'Next' statement names more variables than there are matching 'For' statements.</source>
        <target state="new">'Next' statement names more variables than there are matching 'For' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RequiredNewCallTooMany2">
        <source>First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</source>
        <target state="new">First statement of this 'Sub New' must be a call to 'MyBase.New' or 'MyClass.New' because base class '{0}' of '{1}' has more than one accessible 'Sub New' that can be called with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForCtlVarArraySizesSpecified">
        <source>Array declared as for loop control variable cannot be declared with an initial size.</source>
        <target state="new">Array declared as for loop control variable cannot be declared with an initial size.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadFlagsOnNewOverloads">
        <source>The '{0}' keyword is used to overload inherited members; do not use the '{0}' keyword when overloading 'Sub New'.</source>
        <target state="new">The '{0}' keyword is used to overload inherited members; do not use the '{0}' keyword when overloading 'Sub New'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeCharOnGenericParam">
        <source>Type character cannot be used in a type parameter declaration.</source>
        <target state="new">Type character cannot be used in a type parameter declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooFewGenericArguments1">
        <source>Too few type arguments to '{0}'.</source>
        <target state="new">Too few type arguments to '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyGenericArguments1">
        <source>Too many type arguments to '{0}'.</source>
        <target state="new">Too many type arguments to '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericConstraintNotSatisfied2">
        <source>Type argument '{0}' does not inherit from or implement the constraint type '{1}'.</source>
        <target state="new">Type argument '{0}' does not inherit from or implement the constraint type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeOrMemberNotGeneric1">
        <source>'{0}' has no type parameters and so cannot have type arguments.</source>
        <target state="new">'{0}' has no type parameters and so cannot have type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewIfNullOnGenericParam">
        <source>'New' cannot be used on a type parameter that does not have a 'New' constraint.</source>
        <target state="new">'New' cannot be used on a type parameter that does not have a 'New' constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleClassConstraints1">
        <source>Type parameter '{0}' can only have one constraint that is a class.</source>
        <target state="new">Type parameter '{0}' can only have one constraint that is a class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstNotClassInterfaceOrTypeParam1">
        <source>Type constraint '{0}' must be either a class, interface or type parameter.</source>
        <target state="new">Type constraint '{0}' must be either a class, interface or type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateTypeParamName1">
        <source>Type parameter already declared with name '{0}'.</source>
        <target state="new">Type parameter already declared with name '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnboundTypeParam2">
        <source>Type parameter '{0}' for '{1}' cannot be inferred.</source>
        <target state="new">Type parameter '{0}' for '{1}' cannot be inferred.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsOperatorGenericParam1">
        <source>'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</source>
        <target state="new">'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArgumentCopyBackNarrowing3">
        <source>Copying the value of 'ByRef' parameter '{0}' back to the matching argument narrows from type '{1}' to type '{2}'.</source>
        <target state="new">Copying the value of 'ByRef' parameter '{0}' back to the matching argument narrows from type '{1}' to type '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ShadowingGenericParamWithMember1">
        <source>'{0}' has the same name as a type parameter.</source>
        <target state="new">'{0}' has the same name as a type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericParamBase2">
        <source>{0} '{1}' cannot inherit from a type parameter.</source>
        <target state="new">{0} '{1}' cannot inherit from a type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementsGenericParam">
        <source>Type parameter not allowed in 'Implements' clause.</source>
        <target state="new">Type parameter not allowed in 'Implements' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnlyNullLowerBound">
        <source>Array lower bounds can be only '0'.</source>
        <target state="new">Array lower bounds can be only '0'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClassConstraintNotInheritable1">
        <source>Type constraint cannot be a 'NotInheritable' class.</source>
        <target state="new">Type constraint cannot be a 'NotInheritable' class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintIsRestrictedType1">
        <source>'{0}' cannot be used as a type constraint.</source>
        <target state="new">'{0}' cannot be used as a type constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericParamsOnInvalidMember">
        <source>Type parameters cannot be specified on this declaration.</source>
        <target state="new">Type parameters cannot be specified on this declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericArgsOnAttributeSpecifier">
        <source>Type arguments are not valid because attributes cannot be generic.</source>
        <target state="new">Type arguments are not valid because attributes cannot be generic.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttrCannotBeGenerics">
        <source>Type parameters, generic types or types contained in generic types cannot be used as attributes.</source>
        <target state="new">Type parameters, generic types or types contained in generic types cannot be used as attributes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadStaticLocalInGenericMethod">
        <source>Local variables within generic methods cannot be declared 'Static'.</source>
        <target state="new">Local variables within generic methods cannot be declared 'Static'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SyntMemberShadowsGenericParam3">
        <source>{0} '{1}' implicitly defines a member '{2}' which has the same name as a type parameter.</source>
        <target state="new">{0} '{1}' implicitly defines a member '{2}' which has the same name as a type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintAlreadyExists1">
        <source>Constraint type '{0}' already specified for this type parameter.</source>
        <target state="new">Constraint type '{0}' already specified for this type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfacePossiblyImplTwice2">
        <source>Cannot implement interface '{0}' because its implementation could conflict with the implementation of another implemented interface '{1}' for some type arguments.</source>
        <target state="new">Cannot implement interface '{0}' because its implementation could conflict with the implementation of another implemented interface '{1}' for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ModulesCannotBeGeneric">
        <source>Modules cannot be generic.</source>
        <target state="new">Modules cannot be generic.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GenericClassCannotInheritAttr">
        <source>Classes that are generic or contained in a generic type cannot inherit from an attribute class.</source>
        <target state="new">Classes that are generic or contained in a generic type cannot inherit from an attribute class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DeclaresCantBeInGeneric">
        <source>'Declare' statements are not allowed in generic types or types contained in generic types.</source>
        <target state="new">'Declare' statements are not allowed in generic types or types contained in generic types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverrideWithConstraintMismatch2">
        <source>'{0}' cannot override '{1}' because they differ by type parameter constraints.</source>
        <target state="new">'{0}' cannot override '{1}' because they differ by type parameter constraints.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ImplementsWithConstraintMismatch3">
        <source>'{0}' cannot implement '{1}.{2}' because they differ by type parameter constraints.</source>
        <target state="new">'{0}' cannot implement '{1}.{2}' because they differ by type parameter constraints.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OpenTypeDisallowed">
        <source>Type parameters or types constructed with type parameters are not allowed in attribute arguments.</source>
        <target state="new">Type parameters or types constructed with type parameters are not allowed in attribute arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_HandlesInvalidOnGenericMethod">
        <source>Generic methods cannot use 'Handles' clause.</source>
        <target state="new">Generic methods cannot use 'Handles' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleNewConstraints">
        <source>'New' constraint cannot be specified multiple times for the same type parameter.</source>
        <target state="new">'New' constraint cannot be specified multiple times for the same type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MustInheritForNewConstraint2">
        <source>Type argument '{0}' is declared 'MustInherit' and does not satisfy the 'New' constraint for type parameter '{1}'.</source>
        <target state="new">Type argument '{0}' is declared 'MustInherit' and does not satisfy the 'New' constraint for type parameter '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoSuitableNewForNewConstraint2">
        <source>Type argument '{0}' must have a public parameterless instance constructor to satisfy the 'New' constraint for type parameter '{1}'.</source>
        <target state="new">Type argument '{0}' must have a public parameterless instance constructor to satisfy the 'New' constraint for type parameter '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadGenericParamForNewConstraint2">
        <source>Type parameter '{0}' must have either a 'New' constraint or a 'Structure' constraint to satisfy the 'New' constraint for type parameter '{1}'.</source>
        <target state="new">Type parameter '{0}' must have either a 'New' constraint or a 'Structure' constraint to satisfy the 'New' constraint for type parameter '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewArgsDisallowedForTypeParam">
        <source>Arguments cannot be passed to a 'New' used on a type parameter.</source>
        <target state="new">Arguments cannot be passed to a 'New' used on a type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateRawGenericTypeImport1">
        <source>Generic type '{0}' cannot be imported more than once.</source>
        <target state="new">Generic type '{0}' cannot be imported more than once.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoTypeArgumentCountOverloadCand1">
        <source>Overload resolution failed because no accessible '{0}' accepts this number of type arguments.</source>
        <target state="new">Overload resolution failed because no accessible '{0}' accepts this number of type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeArgsUnexpected">
        <source>Type arguments unexpected.</source>
        <target state="new">Type arguments unexpected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NameSameAsMethodTypeParam1">
        <source>'{0}' is already declared as a type parameter of this method.</source>
        <target state="new">'{0}' is already declared as a type parameter of this method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeParamNameFunctionNameCollision">
        <source>Type parameter cannot have the same name as its defining function.</source>
        <target state="new">Type parameter cannot have the same name as its defining function.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadConstraintSyntax">
        <source>Type or 'New' expected.</source>
        <target state="new">Type or 'New' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OfExpected">
        <source>'Of' required when specifying type arguments for a generic type or method.</source>
        <target state="new">'Of' required when specifying type arguments for a generic type or method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayOfRawGenericInvalid">
        <source>'(' unexpected. Arrays of uninstantiated generic types are not allowed.</source>
        <target state="new">'(' unexpected. Arrays of uninstantiated generic types are not allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForEachAmbiguousIEnumerable1">
        <source>'For Each' on type '{0}' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'.</source>
        <target state="new">'For Each' on type '{0}' is ambiguous because the type implements multiple instantiations of 'System.Collections.Generic.IEnumerable(Of T)'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsNotOperatorGenericParam1">
        <source>'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</source>
        <target state="new">'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a type parameter with no class constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeParamQualifierDisallowed">
        <source>Type parameters cannot be used as qualifiers.</source>
        <target state="new">Type parameters cannot be used as qualifiers.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeParamMissingCommaOrRParen">
        <source>Comma or ')' expected.</source>
        <target state="new">Comma or ')' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeParamMissingAsCommaOrRParen">
        <source>'As', comma or ')' expected.</source>
        <target state="new">'As', comma or ')' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleReferenceConstraints">
        <source>'Class' constraint cannot be specified multiple times for the same type parameter.</source>
        <target state="new">'Class' constraint cannot be specified multiple times for the same type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultipleValueConstraints">
        <source>'Structure' constraint cannot be specified multiple times for the same type parameter.</source>
        <target state="new">'Structure' constraint cannot be specified multiple times for the same type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewAndValueConstraintsCombined">
        <source>'New' constraint and 'Structure' constraint cannot be combined.</source>
        <target state="new">'New' constraint and 'Structure' constraint cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RefAndValueConstraintsCombined">
        <source>'Class' constraint and 'Structure' constraint cannot be combined.</source>
        <target state="new">'Class' constraint and 'Structure' constraint cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadTypeArgForStructConstraint2">
        <source>Type argument '{0}' does not satisfy the 'Structure' constraint for type parameter '{1}'.</source>
        <target state="new">Type argument '{0}' does not satisfy the 'Structure' constraint for type parameter '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadTypeArgForRefConstraint2">
        <source>Type argument '{0}' does not satisfy the 'Class' constraint for type parameter '{1}'.</source>
        <target state="new">Type argument '{0}' does not satisfy the 'Class' constraint for type parameter '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RefAndClassTypeConstrCombined">
        <source>'Class' constraint and a specific class type constraint cannot be combined.</source>
        <target state="new">'Class' constraint and a specific class type constraint cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ValueAndClassTypeConstrCombined">
        <source>'Structure' constraint and a specific class type constraint cannot be combined.</source>
        <target state="new">'Structure' constraint and a specific class type constraint cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintClashIndirectIndirect4">
        <source>Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the indirect constraint '{2}' obtained from the type parameter constraint '{3}'.</source>
        <target state="new">Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the indirect constraint '{2}' obtained from the type parameter constraint '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintClashDirectIndirect3">
        <source>Constraint '{0}' conflicts with the indirect constraint '{1}' obtained from the type parameter constraint '{2}'.</source>
        <target state="new">Constraint '{0}' conflicts with the indirect constraint '{1}' obtained from the type parameter constraint '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintClashIndirectDirect3">
        <source>Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the constraint '{2}'.</source>
        <target state="new">Indirect constraint '{0}' obtained from the type parameter constraint '{1}' conflicts with the constraint '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintCycleLink2">
        <source>
    '{0}' is constrained to '{1}'.</source>
        <target state="new">
    '{0}' is constrained to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstraintCycle2">
        <source>Type parameter '{0}' cannot be constrained to itself: {1}</source>
        <target state="new">Type parameter '{0}' cannot be constrained to itself: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeParamWithStructConstAsConst">
        <source>Type parameter with a 'Structure' constraint cannot be used as a constraint.</source>
        <target state="new">Type parameter with a 'Structure' constraint cannot be used as a constraint.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullableDisallowedForStructConstr1">
        <source>'System.Nullable' does not satisfy the 'Structure' constraint for type parameter '{0}'. Only non-nullable 'Structure' types are allowed.</source>
        <target state="new">'System.Nullable' does not satisfy the 'Structure' constraint for type parameter '{0}'. Only non-nullable 'Structure' types are allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConflictingDirectConstraints3">
        <source>Constraint '{0}' conflicts with the constraint '{1}' already specified for type parameter '{2}'.</source>
        <target state="new">Constraint '{0}' conflicts with the constraint '{1}' already specified for type parameter '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceUnifiesWithInterface2">
        <source>Cannot inherit interface '{0}' because it could be identical to interface '{1}' for some type arguments.</source>
        <target state="new">Cannot inherit interface '{0}' because it could be identical to interface '{1}' for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BaseUnifiesWithInterfaces3">
        <source>Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' for some type arguments.</source>
        <target state="new">Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceBaseUnifiesWithBase4">
        <source>Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the interface '{3}' inherits for some type arguments.</source>
        <target state="new">Cannot inherit interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the interface '{3}' inherits for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterfaceUnifiesWithBase3">
        <source>Cannot inherit interface '{0}' because it could be identical to interface '{1}' from which the interface '{2}' inherits for some type arguments.</source>
        <target state="new">Cannot inherit interface '{0}' because it could be identical to interface '{1}' from which the interface '{2}' inherits for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClassInheritsBaseUnifiesWithInterfaces3">
        <source>Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to implemented interface '{2}' for some type arguments.</source>
        <target state="new">Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to implemented interface '{2}' for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClassInheritsInterfaceBaseUnifiesWithBase4">
        <source>Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the implemented interface '{3}' inherits for some type arguments.</source>
        <target state="new">Cannot implement interface '{0}' because the interface '{1}' from which it inherits could be identical to interface '{2}' from which the implemented interface '{3}' inherits for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ClassInheritsInterfaceUnifiesWithBase3">
        <source>Cannot implement interface '{0}' because it could be identical to interface '{1}' from which the implemented interface '{2}' inherits for some type arguments.</source>
        <target state="new">Cannot implement interface '{0}' because it could be identical to interface '{1}' from which the implemented interface '{2}' inherits for some type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OptionalsCantBeStructGenericParams">
        <source>Generic parameters used as optional parameter types must be class constrained.</source>
        <target state="new">Generic parameters used as optional parameter types must be class constrained.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddressOfNullableMethod">
        <source>Methods of 'System.Nullable(Of T)' cannot be used as operands of the 'AddressOf' operator.</source>
        <target state="new">Methods of 'System.Nullable(Of T)' cannot be used as operands of the 'AddressOf' operator.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsOperatorNullable1">
        <source>'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</source>
        <target state="new">'Is' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IsNotOperatorNullable1">
        <source>'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</source>
        <target state="new">'IsNot' operand of type '{0}' can be compared only to 'Nothing' because '{0}' is a nullable type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ShadowingTypeOutsideClass1">
        <source>'{0}' cannot be declared 'Shadows' outside of a class, structure, or interface.</source>
        <target state="new">'{0}' cannot be declared 'Shadows' outside of a class, structure, or interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropertySetParamCollisionWithValue">
        <source>Property parameters cannot have the name 'Value'.</source>
        <target state="new">Property parameters cannot have the name 'Value'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SxSIndirectRefHigherThanDirectRef3">
        <source>The project currently contains references to more than one version of '{0}', a direct reference to version {2} and an indirect reference to version {1}. Change the direct reference to use version {1} (or higher) of {0}.</source>
        <target state="new">The project currently contains references to more than one version of '{0}', a direct reference to version {2} and an indirect reference to version {1}. Change the direct reference to use version {1} (or higher) of {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateReferenceStrong">
        <source>Multiple assemblies with equivalent identity have been imported: '{0}' and '{1}'. Remove one of the duplicate references.</source>
        <target state="new">Multiple assemblies with equivalent identity have been imported: '{0}' and '{1}'. Remove one of the duplicate references.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateReference2">
        <source>Project already has a reference to assembly '{0}'. A second reference to '{1}' cannot be added.</source>
        <target state="new">Project already has a reference to assembly '{0}'. A second reference to '{1}' cannot be added.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalCallOrIndex">
        <source>Illegal call expression or index expression.</source>
        <target state="new">Illegal call expression or index expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConflictDefaultPropertyAttribute">
        <source>Conflict between the default property and the 'DefaultMemberAttribute' defined on '{0}'.</source>
        <target state="new">Conflict between the default property and the 'DefaultMemberAttribute' defined on '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeUuid2">
        <source>'{0}' cannot be applied because the format of the GUID '{1}' is not correct.</source>
        <target state="new">'{0}' cannot be applied because the format of the GUID '{1}' is not correct.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassAndReservedAttribute1">
        <source>'Microsoft.VisualBasic.ComClassAttribute' and '{0}' cannot both be applied to the same class.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' and '{0}' cannot both be applied to the same class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassRequiresPublicClass2">
        <source>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because its container '{1}' is not declared 'Public'.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because its container '{1}' is not declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassReservedDispIdZero1">
        <source>'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves zero for the default property.</source>
        <target state="new">'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves zero for the default property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassReservedDispId1">
        <source>'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves values less than zero.</source>
        <target state="new">'System.Runtime.InteropServices.DispIdAttribute' cannot be applied to '{0}' because 'Microsoft.VisualBasic.ComClassAttribute' reserves values less than zero.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassDuplicateGuids1">
        <source>'InterfaceId' and 'EventsId' parameters for 'Microsoft.VisualBasic.ComClassAttribute' on '{0}' cannot have the same value.</source>
        <target state="new">'InterfaceId' and 'EventsId' parameters for 'Microsoft.VisualBasic.ComClassAttribute' on '{0}' cannot have the same value.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassCantBeAbstract0">
        <source>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is declared 'MustInherit'.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to a class that is declared 'MustInherit'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ComClassRequiresPublicClass1">
        <source>'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because it is not declared 'Public'.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' cannot be applied to '{0}' because it is not declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnknownOperator">
        <source>Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</source>
        <target state="new">Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateConversionCategoryUsed">
        <source>'Widening' and 'Narrowing' cannot be combined.</source>
        <target state="new">'Widening' and 'Narrowing' cannot be combined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorNotOverloadable">
        <source>Operator is not overloadable. Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</source>
        <target state="new">Operator is not overloadable. Operator declaration must be one of:  +, -, *, \, /, ^, &amp;, Like, Mod, And, Or, Xor, Not, &lt;&lt;, &gt;&gt;, =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=, CType, IsTrue, IsFalse.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidHandles">
        <source>'Handles' is not valid on operator declarations.</source>
        <target state="new">'Handles' is not valid on operator declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidImplements">
        <source>'Implements' is not valid on operator declarations.</source>
        <target state="new">'Implements' is not valid on operator declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndOperatorExpected">
        <source>'End Operator' expected.</source>
        <target state="new">'End Operator' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndOperatorNotAtLineStart">
        <source>'End Operator' must be the first statement on a line.</source>
        <target state="new">'End Operator' must be the first statement on a line.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidEndOperator">
        <source>'End Operator' must be preceded by a matching 'Operator'.</source>
        <target state="new">'End Operator' must be preceded by a matching 'Operator'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExitOperatorNotValid">
        <source>'Exit Operator' is not valid. Use 'Return' to exit an operator.</source>
        <target state="new">'Exit Operator' is not valid. Use 'Return' to exit an operator.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamArrayIllegal1">
        <source>'{0}' parameters cannot be declared 'ParamArray'.</source>
        <target state="new">'{0}' parameters cannot be declared 'ParamArray'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OptionalIllegal1">
        <source>'{0}' parameters cannot be declared 'Optional'.</source>
        <target state="new">'{0}' parameters cannot be declared 'Optional'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorMustBePublic">
        <source>Operators must be declared 'Public'.</source>
        <target state="new">Operators must be declared 'Public'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorMustBeShared">
        <source>Operators must be declared 'Shared'.</source>
        <target state="new">Operators must be declared 'Shared'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadOperatorFlags1">
        <source>Operators cannot be declared '{0}'.</source>
        <target state="new">Operators cannot be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OneParameterRequired1">
        <source>Operator '{0}' must have one parameter.</source>
        <target state="new">Operator '{0}' must have one parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TwoParametersRequired1">
        <source>Operator '{0}' must have two parameters.</source>
        <target state="new">Operator '{0}' must have two parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OneOrTwoParametersRequired1">
        <source>Operator '{0}' must have either one or two parameters.</source>
        <target state="new">Operator '{0}' must have either one or two parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConvMustBeWideningOrNarrowing">
        <source>Conversion operators must be declared either 'Widening' or 'Narrowing'.</source>
        <target state="new">Conversion operators must be declared either 'Widening' or 'Narrowing'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorDeclaredInModule">
        <source>Operators cannot be declared in modules.</source>
        <target state="new">Operators cannot be declared in modules.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidSpecifierOnNonConversion1">
        <source>Only conversion operators can be declared '{0}'.</source>
        <target state="new">Only conversion operators can be declared '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnaryParamMustBeContainingType1">
        <source>Parameter of this unary operator must be of the containing type '{0}'.</source>
        <target state="new">Parameter of this unary operator must be of the containing type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BinaryParamMustBeContainingType1">
        <source>At least one parameter of this binary operator must be of the containing type '{0}'.</source>
        <target state="new">At least one parameter of this binary operator must be of the containing type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConvParamMustBeContainingType1">
        <source>Either the parameter type or the return type of this conversion operator must be of the containing type '{0}'.</source>
        <target state="new">Either the parameter type or the return type of this conversion operator must be of the containing type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorRequiresBoolReturnType1">
        <source>Operator '{0}' must have a return type of Boolean.</source>
        <target state="new">Operator '{0}' must have a return type of Boolean.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionToSameType">
        <source>Conversion operators cannot convert from a type to the same type.</source>
        <target state="new">Conversion operators cannot convert from a type to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionToInterfaceType">
        <source>Conversion operators cannot convert to an interface type.</source>
        <target state="new">Conversion operators cannot convert to an interface type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionToBaseType">
        <source>Conversion operators cannot convert from a type to its base type.</source>
        <target state="new">Conversion operators cannot convert from a type to its base type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionToDerivedType">
        <source>Conversion operators cannot convert from a type to its derived type.</source>
        <target state="new">Conversion operators cannot convert from a type to its derived type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionToObject">
        <source>Conversion operators cannot convert to Object.</source>
        <target state="new">Conversion operators cannot convert to Object.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionFromInterfaceType">
        <source>Conversion operators cannot convert from an interface type.</source>
        <target state="new">Conversion operators cannot convert from an interface type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionFromBaseType">
        <source>Conversion operators cannot convert from a base type.</source>
        <target state="new">Conversion operators cannot convert from a base type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionFromDerivedType">
        <source>Conversion operators cannot convert from a derived type.</source>
        <target state="new">Conversion operators cannot convert from a derived type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConversionFromObject">
        <source>Conversion operators cannot convert from Object.</source>
        <target state="new">Conversion operators cannot convert from Object.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MatchingOperatorExpected2">
        <source>Matching '{0}' operator is required for '{1}'.</source>
        <target state="new">Matching '{0}' operator is required for '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnacceptableLogicalOperator3">
        <source>Return and parameter types of '{0}' must be '{1}' to be used in a '{2}' expression.</source>
        <target state="new">Return and parameter types of '{0}' must be '{1}' to be used in a '{2}' expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConditionOperatorRequired3">
        <source>Type '{0}' must define operator '{1}' to be used in a '{2}' expression.</source>
        <target state="new">Type '{0}' must define operator '{1}' to be used in a '{2}' expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CopyBackTypeMismatch3">
        <source>Cannot copy the value of 'ByRef' parameter '{0}' back to the matching argument because type '{1}' cannot be converted to type '{2}'.</source>
        <target state="new">Cannot copy the value of 'ByRef' parameter '{0}' back to the matching argument because type '{1}' cannot be converted to type '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForLoopOperatorRequired2">
        <source>Type '{0}' must define operator '{1}' to be used in a 'For' statement.</source>
        <target state="new">Type '{0}' must define operator '{1}' to be used in a 'For' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnacceptableForLoopOperator2">
        <source>Return and parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</source>
        <target state="new">Return and parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnacceptableForLoopRelOperator2">
        <source>Parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</source>
        <target state="new">Parameter types of '{0}' must be '{1}' to be used in a 'For' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OperatorRequiresIntegerParameter1">
        <source>Operator '{0}' must have a second parameter of type 'Integer' or 'Integer?'.</source>
        <target state="new">Operator '{0}' must have a second parameter of type 'Integer' or 'Integer?'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyNullableOnBoth">
        <source>Nullable modifier cannot be specified on both a variable and its type.</source>
        <target state="new">Nullable modifier cannot be specified on both a variable and its type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadTypeArgForStructConstraintNull">
        <source>Type '{0}' must be a value type or a type argument constrained to 'Structure' in order to be used with 'Nullable' or nullable modifier '?'.</source>
        <target state="new">Type '{0}' must be a value type or a type argument constrained to 'Structure' in order to be used with 'Nullable' or nullable modifier '?'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyArrayAndNullableOnBoth">
        <source>Nullable modifier '?' and array modifiers '(' and ')' cannot be specified on both a variable and its type.</source>
        <target state="new">Nullable modifier '?' and array modifiers '(' and ')' cannot be specified on both a variable and its type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyTypeCharacterOnIIF">
        <source>Expressions used with an 'If' expression cannot contain type characters.</source>
        <target state="new">Expressions used with an 'If' expression cannot contain type characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalOperandInIIFName">
        <source>'If' operands cannot be named arguments.</source>
        <target state="new">'If' operands cannot be named arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalOperandInIIFConversion">
        <source>Cannot infer a common type for the second and third operands of the 'If' operator. One must have a widening conversion to the other.</source>
        <target state="new">Cannot infer a common type for the second and third operands of the 'If' operator. One must have a widening conversion to the other.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalCondTypeInIIF">
        <source>First operand in a binary 'If' expression must be nullable or a reference type.</source>
        <target state="new">First operand in a binary 'If' expression must be nullable or a reference type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantCallIIF">
        <source>'If' operator cannot be used in a 'Call' statement.</source>
        <target state="new">'If' operator cannot be used in a 'Call' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyAsNewAndNullable">
        <source>Nullable modifier cannot be specified in variable declarations with 'As New'.</source>
        <target state="new">Nullable modifier cannot be specified in variable declarations with 'As New'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalOperandInIIFConversion2">
        <source>Cannot infer a common type for the first and second operands of the binary 'If' operator. One must have a widening conversion to the other.</source>
        <target state="new">Cannot infer a common type for the first and second operands of the binary 'If' operator. One must have a widening conversion to the other.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadNullTypeInCCExpression">
        <source>Nullable types are not allowed in conditional compilation expressions.</source>
        <target state="new">Nullable types are not allowed in conditional compilation expressions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullableImplicit">
        <source>Nullable modifier cannot be used with a variable whose implicit type is 'Object'.</source>
        <target state="new">Nullable modifier cannot be used with a variable whose implicit type is 'Object'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingRuntimeHelper">
        <source>Requested operation is not available because the runtime library function '{0}' is not defined.</source>
        <target state="new">Requested operation is not available because the runtime library function '{0}' is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedDotAfterGlobalNameSpace">
        <source>'Global' must be followed by '.' and an identifier.</source>
        <target state="new">'Global' must be followed by '.' and an identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoGlobalExpectedIdentifier">
        <source>'Global' not allowed in this context; identifier expected.</source>
        <target state="new">'Global' not allowed in this context; identifier expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoGlobalInHandles">
        <source>'Global' not allowed in handles; local name expected.</source>
        <target state="new">'Global' not allowed in handles; local name expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ElseIfNoMatchingIf">
        <source>'ElseIf' must be preceded by a matching 'If' or 'ElseIf'.</source>
        <target state="new">'ElseIf' must be preceded by a matching 'If' or 'ElseIf'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAttributeConstructor2">
        <source>Attribute constructor has a 'ByRef' parameter of type '{0}'; cannot use constructors with byref parameters to apply the attribute.</source>
        <target state="new">Attribute constructor has a 'ByRef' parameter of type '{0}'; cannot use constructors with byref parameters to apply the attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EndUsingWithoutUsing">
        <source>'End Using' must be preceded by a matching 'Using'.</source>
        <target state="new">'End Using' must be preceded by a matching 'Using'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEndUsing">
        <source>'Using' must end with a matching 'End Using'.</source>
        <target state="new">'Using' must end with a matching 'End Using'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_GotoIntoUsing">
        <source>'GoTo {0}' is not valid because '{0}' is inside a 'Using' statement that does not contain this statement.</source>
        <target state="new">'GoTo {0}' is not valid because '{0}' is inside a 'Using' statement that does not contain this statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UsingRequiresDisposePattern">
        <source>'Using' operand of type '{0}' must implement 'System.IDisposable'.</source>
        <target state="new">'Using' operand of type '{0}' must implement 'System.IDisposable'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UsingResourceVarNeedsInitializer">
        <source>'Using' resource variable must have an explicit initialization.</source>
        <target state="new">'Using' resource variable must have an explicit initialization.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UsingResourceVarCantBeArray">
        <source>'Using' resource variable type can not be array type.</source>
        <target state="new">'Using' resource variable type can not be array type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OnErrorInUsing">
        <source>'On Error' statements are not valid within 'Using' statements.</source>
        <target state="new">'On Error' statements are not valid within 'Using' statements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropertyNameConflictInMyCollection">
        <source>'{0}' has the same name as a member used for type '{1}' exposed in a 'My' group. Rename the type or its enclosing namespace.</source>
        <target state="new">'{0}' has the same name as a member used for type '{1}' exposed in a 'My' group. Rename the type or its enclosing namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidImplicitVar">
        <source>Implicit variable '{0}' is invalid because of '{1}'.</source>
        <target state="new">Implicit variable '{0}' is invalid because of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ObjectInitializerRequiresFieldName">
        <source>Object initializers require a field name to initialize.</source>
        <target state="new">Object initializers require a field name to initialize.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedFrom">
        <source>'From' expected.</source>
        <target state="new">'From' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaBindingMismatch1">
        <source>Nested function does not have the same signature as delegate '{0}'.</source>
        <target state="new">Nested function does not have the same signature as delegate '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaBindingMismatch2">
        <source>Nested sub does not have a signature that is compatible with delegate '{0}'.</source>
        <target state="new">Nested sub does not have a signature that is compatible with delegate '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftByRefParamQuery1">
        <source>'ByRef' parameter '{0}' cannot be used in a query expression.</source>
        <target state="new">'ByRef' parameter '{0}' cannot be used in a query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpressionTreeNotSupported">
        <source>Expression cannot be converted into an expression tree.</source>
        <target state="new">Expression cannot be converted into an expression tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftStructureMeQuery">
        <source>Instance members and 'Me' cannot be used within query expressions in structures.</source>
        <target state="new">Instance members and 'Me' cannot be used within query expressions in structures.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InferringNonArrayType1">
        <source>Variable cannot be initialized with non-array type '{0}'.</source>
        <target state="new">Variable cannot be initialized with non-array type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ByRefParamInExpressionTree">
        <source>References to 'ByRef' parameters cannot be converted to an expression tree.</source>
        <target state="new">References to 'ByRef' parameters cannot be converted to an expression tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateAnonTypeMemberName1">
        <source>Anonymous type member or property '{0}' is already declared.</source>
        <target state="new">Anonymous type member or property '{0}' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAnonymousTypeForExprTree">
        <source>Cannot convert anonymous type to an expression tree because a property of the type is used to initialize another property.</source>
        <target state="new">Cannot convert anonymous type to an expression tree because a property of the type is used to initialize another property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftAnonymousType1">
        <source>Anonymous type property '{0}' cannot be used in the definition of a lambda expression within the same initialization list.</source>
        <target state="new">Anonymous type property '{0}' cannot be used in the definition of a lambda expression within the same initialization list.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionOnlyAllowedOnModuleSubOrFunction">
        <source>'Extension' attribute can be applied only to 'Module', 'Sub', or 'Function' declarations.</source>
        <target state="new">'Extension' attribute can be applied only to 'Module', 'Sub', or 'Function' declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodNotInModule">
        <source>Extension methods can be defined only in modules.</source>
        <target state="new">Extension methods can be defined only in modules.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodNoParams">
        <source>Extension methods must declare at least one parameter. The first parameter specifies which type to extend.</source>
        <target state="new">Extension methods must declare at least one parameter. The first parameter specifies which type to extend.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodOptionalFirstArg">
        <source>'Optional' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</source>
        <target state="new">'Optional' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodParamArrayFirstArg">
        <source>'ParamArray' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</source>
        <target state="new">'ParamArray' cannot be applied to the first parameter of an extension method. The first parameter specifies which type to extend.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypeFieldNameInference">
        <source>Anonymous type member name can be inferred only from a simple or qualified name with no arguments.</source>
        <target state="new">Anonymous type member name can be inferred only from a simple or qualified name with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NameNotMemberOfAnonymousType2">
        <source>'{0}' is not a member of '{1}'; it does not exist in the current context.</source>
        <target state="new">'{0}' is not a member of '{1}'; it does not exist in the current context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionAttributeInvalid">
        <source>The custom-designed version of 'System.Runtime.CompilerServices.ExtensionAttribute' found by the compiler is not valid. Its attribute usage flags must be set to allow assemblies, classes, and methods.</source>
        <target state="new">The custom-designed version of 'System.Runtime.CompilerServices.ExtensionAttribute' found by the compiler is not valid. Its attribute usage flags must be set to allow assemblies, classes, and methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypePropertyOutOfOrder1">
        <source>Anonymous type member property '{0}' cannot be used to infer the type of another member property because the type of '{0}' is not yet established.</source>
        <target state="new">Anonymous type member property '{0}' cannot be used to infer the type of another member property because the type of '{0}' is not yet established.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypeDisallowsTypeChar">
        <source>Type characters cannot be used in anonymous type declarations.</source>
        <target state="new">Type characters cannot be used in anonymous type declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleLiteralDisallowsTypeChar">
        <source>Type characters cannot be used in tuple literals.</source>
        <target state="new">Type characters cannot be used in tuple literals.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewWithTupleTypeSyntax">
        <source>'New' cannot be used with tuple type. Use a tuple literal expression instead.</source>
        <target state="new">'New' cannot be used with tuple type. Use a tuple literal expression instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PredefinedValueTupleTypeMustBeStruct">
        <source>Predefined type '{0}' must be a structure.</source>
        <target state="new">Predefined type '{0}' must be a structure.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodUncallable1">
        <source>Extension method '{0}' has type constraints that can never be satisfied.</source>
        <target state="new">Extension method '{0}' has type constraints that can never be satisfied.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodOverloadCandidate3">
        <source>
    Extension method '{0}' defined in '{1}': {2}</source>
        <target state="new">
    Extension method '{0}' defined in '{1}': {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingMismatch">
        <source>Method does not have a signature compatible with the delegate.</source>
        <target state="new">Method does not have a signature compatible with the delegate.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingTypeInferenceFails">
        <source>Type arguments could not be inferred from the delegate.</source>
        <target state="new">Type arguments could not be inferred from the delegate.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyArgs">
        <source>Too many arguments.</source>
        <target state="new">Too many arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgAlsoOmitted1">
        <source>Parameter '{0}' already has a matching omitted argument.</source>
        <target state="new">Parameter '{0}' already has a matching omitted argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgUsedTwice1">
        <source>Parameter '{0}' already has a matching argument.</source>
        <target state="new">Parameter '{0}' already has a matching argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedParamNotFound1">
        <source>'{0}' is not a method parameter.</source>
        <target state="new">'{0}' is not a method parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OmittedArgument1">
        <source>Argument not specified for parameter '{0}'.</source>
        <target state="new">Argument not specified for parameter '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnboundTypeParam1">
        <source>Type parameter '{0}' cannot be inferred.</source>
        <target state="new">Type parameter '{0}' cannot be inferred.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodOverloadCandidate2">
        <source>
    Extension method '{0}' defined in '{1}'.</source>
        <target state="new">
    Extension method '{0}' defined in '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypeNeedField">
        <source>Anonymous type must contain at least one member.</source>
        <target state="new">Anonymous type must contain at least one member.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypeNameWithoutPeriod">
        <source>Anonymous type member name must be preceded by a period.</source>
        <target state="new">Anonymous type member name must be preceded by a period.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonymousTypeExpectedIdentifier">
        <source>Identifier expected, preceded with a period.</source>
        <target state="new">Identifier expected, preceded with a period.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyArgs2">
        <source>Too many arguments to extension method '{0}' defined in '{1}'.</source>
        <target state="new">Too many arguments to extension method '{0}' defined in '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgAlsoOmitted3">
        <source>Parameter '{0}' in extension method '{1}' defined in '{2}' already has a matching omitted argument.</source>
        <target state="new">Parameter '{0}' in extension method '{1}' defined in '{2}' already has a matching omitted argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedArgUsedTwice3">
        <source>Parameter '{0}' of extension method '{1}' defined in '{2}' already has a matching argument.</source>
        <target state="new">Parameter '{0}' of extension method '{1}' defined in '{2}' already has a matching argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamedParamNotFound3">
        <source>'{0}' is not a parameter of extension method '{1}' defined in '{2}'.</source>
        <target state="new">'{0}' is not a parameter of extension method '{1}' defined in '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OmittedArgument3">
        <source>Argument not specified for parameter '{0}' of extension method '{1}' defined in '{2}'.</source>
        <target state="new">Argument not specified for parameter '{0}' of extension method '{1}' defined in '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnboundTypeParam3">
        <source>Type parameter '{0}' for extension method '{1}' defined in '{2}' cannot be inferred.</source>
        <target state="new">Type parameter '{0}' for extension method '{1}' defined in '{2}' cannot be inferred.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooFewGenericArguments2">
        <source>Too few type arguments to extension method '{0}' defined in '{1}'.</source>
        <target state="new">Too few type arguments to extension method '{0}' defined in '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyGenericArguments2">
        <source>Too many type arguments to extension method '{0}' defined in '{1}'.</source>
        <target state="new">Too many type arguments to extension method '{0}' defined in '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedInOrEq">
        <source>'In' or '=' expected.</source>
        <target state="new">'In' or '=' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedQueryableSource">
        <source>Expression of type '{0}' is not queryable. Make sure you are not missing an assembly reference and/or namespace import for the LINQ provider.</source>
        <target state="new">Expression of type '{0}' is not queryable. Make sure you are not missing an assembly reference and/or namespace import for the LINQ provider.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryOperatorNotFound">
        <source>Definition of method '{0}' is not accessible in this context.</source>
        <target state="new">Definition of method '{0}' is not accessible in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotUseOnErrorGotoWithClosure">
        <source>Method cannot contain both a '{0}' statement and a definition of a variable that is used in a lambda or query expression.</source>
        <target state="new">Method cannot contain both a '{0}' statement and a definition of a variable that is used in a lambda or query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotGotoNonScopeBlocksWithClosure">
        <source>'{0}{1}' is not valid because '{2}' is inside a scope that defines a variable that is used in a lambda or query expression.</source>
        <target state="new">'{0}{1}' is not valid because '{2}' is inside a scope that defines a variable that is used in a lambda or query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftRestrictedTypeQuery">
        <source>Instance of restricted type '{0}' cannot be used in a query expression.</source>
        <target state="new">Instance of restricted type '{0}' cannot be used in a query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryAnonymousTypeFieldNameInference">
        <source>Range variable name can be inferred only from a simple or qualified name with no arguments.</source>
        <target state="new">Range variable name can be inferred only from a simple or qualified name with no arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryDuplicateAnonTypeMemberName1">
        <source>Range variable '{0}' is already declared.</source>
        <target state="new">Range variable '{0}' is already declared.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryAnonymousTypeDisallowsTypeChar">
        <source>Type characters cannot be used in range variable declarations.</source>
        <target state="new">Type characters cannot be used in range variable declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReadOnlyInClosure">
        <source>'ReadOnly' variable cannot be the target of an assignment in a lambda expression inside a constructor.</source>
        <target state="new">'ReadOnly' variable cannot be the target of an assignment in a lambda expression inside a constructor.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExprTreeNoMultiDimArrayCreation">
        <source>Multi-dimensional array cannot be converted to an expression tree.</source>
        <target state="new">Multi-dimensional array cannot be converted to an expression tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExprTreeNoLateBind">
        <source>Late binding operations cannot be converted to an expression tree.</source>
        <target state="new">Late binding operations cannot be converted to an expression tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedBy">
        <source>'By' expected.</source>
        <target state="new">'By' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryInvalidControlVariableName1">
        <source>Range variable name cannot match the name of a member of the 'Object' class.</source>
        <target state="new">Range variable name cannot match the name of a member of the 'Object' class.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedIn">
        <source>'In' expected.</source>
        <target state="new">'In' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryNameNotDeclared">
        <source>Name '{0}' is either not declared or not in the current scope.</source>
        <target state="new">Name '{0}' is either not declared or not in the current scope.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedFunctionArgumentNarrowing3">
        <source>Return type of nested function matching parameter '{0}' narrows from '{1}' to '{2}'.</source>
        <target state="new">Return type of nested function matching parameter '{0}' narrows from '{1}' to '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AnonTypeFieldXMLNameInference">
        <source>Anonymous type member name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</source>
        <target state="new">Anonymous type member name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryAnonTypeFieldXMLNameInference">
        <source>Range variable name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</source>
        <target state="new">Range variable name cannot be inferred from an XML identifier that is not a valid Visual Basic identifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedInto">
        <source>'Into' expected.</source>
        <target state="new">'Into' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeCharOnAggregation">
        <source>Aggregate function name cannot be used with a type character.</source>
        <target state="new">Aggregate function name cannot be used with a type character.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedOn">
        <source>'On' expected.</source>
        <target state="new">'On' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedEquals">
        <source>'Equals' expected.</source>
        <target state="new">'Equals' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedAnd">
        <source>'And' expected.</source>
        <target state="new">'And' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EqualsTypeMismatch">
        <source>'Equals' cannot compare a value of type '{0}' with a value of type '{1}'.</source>
        <target state="new">'Equals' cannot compare a value of type '{0}' with a value of type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EqualsOperandIsBad">
        <source>You must reference at least one range variable on both sides of the 'Equals' operator. Range variable(s) {0} must appear on one side of the 'Equals' operator, and range variable(s) {1} must appear on the other.</source>
        <target state="new">You must reference at least one range variable on both sides of the 'Equals' operator. Range variable(s) {0} must appear on one side of the 'Equals' operator, and range variable(s) {1} must appear on the other.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaNotDelegate1">
        <source>Lambda expression cannot be converted to '{0}' because '{0}' is not a delegate type.</source>
        <target state="new">Lambda expression cannot be converted to '{0}' because '{0}' is not a delegate type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaNotCreatableDelegate1">
        <source>Lambda expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</source>
        <target state="new">Lambda expression cannot be converted to '{0}' because type '{0}' is declared 'MustInherit' and cannot be created.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotInferNullableForVariable1">
        <source>A nullable type cannot be inferred for variable '{0}'.</source>
        <target state="new">A nullable type cannot be inferred for variable '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullableTypeInferenceNotSupported">
        <source>Nullable type inference is not supported in this context.</source>
        <target state="new">Nullable type inference is not supported in this context.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedJoin">
        <source>'Join' expected.</source>
        <target state="new">'Join' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullableParameterMustSpecifyType">
        <source>Nullable parameters must specify a type.</source>
        <target state="new">Nullable parameters must specify a type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IterationVariableShadowLocal2">
        <source>Range variable '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</source>
        <target state="new">Range variable '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdasCannotHaveAttributes">
        <source>Attributes cannot be applied to parameters of lambda expressions.</source>
        <target state="new">Attributes cannot be applied to parameters of lambda expressions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaInSelectCaseExpr">
        <source>Lambda expressions are not valid in the first expression of a 'Select Case' statement.</source>
        <target state="new">Lambda expressions are not valid in the first expression of a 'Select Case' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddressOfInSelectCaseExpr">
        <source>'AddressOf' expressions are not valid in the first expression of a 'Select Case' statement.</source>
        <target state="new">'AddressOf' expressions are not valid in the first expression of a 'Select Case' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullableCharNotSupported">
        <source>The '?' character cannot be used here.</source>
        <target state="new">The '?' character cannot be used here.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftStructureMeLambda">
        <source>Instance members and 'Me' cannot be used within a lambda expression in structures.</source>
        <target state="new">Instance members and 'Me' cannot be used within a lambda expression in structures.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftByRefParamLambda1">
        <source>'ByRef' parameter '{0}' cannot be used in a lambda expression.</source>
        <target state="new">'ByRef' parameter '{0}' cannot be used in a lambda expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftRestrictedTypeLambda">
        <source>Instance of restricted type '{0}' cannot be used in a lambda expression.</source>
        <target state="new">Instance of restricted type '{0}' cannot be used in a lambda expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaParamShadowLocal1">
        <source>Lambda parameter '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</source>
        <target state="new">Lambda parameter '{0}' hides a variable in an enclosing block, a previously defined range variable, or an implicitly declared variable in a query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StrictDisallowImplicitObjectLambda">
        <source>Option Strict On requires each lambda expression parameter to be declared with an 'As' clause if its type cannot be inferred.</source>
        <target state="new">Option Strict On requires each lambda expression parameter to be declared with an 'As' clause if its type cannot be inferred.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantSpecifyParamsOnLambdaParamNoType">
        <source>Array modifiers cannot be specified on lambda expression parameter name. They must be specified on its type.</source>
        <target state="new">Array modifiers cannot be specified on lambda expression parameter name. They must be specified on its type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailure1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailure2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailure3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicit1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicit2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicit3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureAmbiguous1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureAmbiguous2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureAmbiguous3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitAmbiguous1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments because more than one type is possible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitAmbiguous2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because more than one type is possible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitAmbiguous3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because more than one type is possible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoBest1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoBest2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoBest3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type. Specifying the data type(s) explicitly might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitNoBest1">
        <source>Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type.</source>
        <target state="new">Data type(s) of the type parameter(s) cannot be inferred from these arguments because they do not convert to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitNoBest2">
        <source>Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type.</source>
        <target state="new">Data type(s) of the type parameter(s) in method '{0}' cannot be inferred from these arguments because they do not convert to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceFailureNoExplicitNoBest3">
        <source>Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type.</source>
        <target state="new">Data type(s) of the type parameter(s) in extension method '{0}' defined in '{1}' cannot be inferred from these arguments because they do not convert to the same type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingMismatchStrictOff2">
        <source>Option Strict On does not allow narrowing in implicit type conversions between method '{0}' and delegate '{1}'.</source>
        <target state="new">Option Strict On does not allow narrowing in implicit type conversions between method '{0}' and delegate '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InaccessibleReturnTypeOfMember2">
        <source>'{0}' is not accessible in this context because the return type is not accessible.</source>
        <target state="new">'{0}' is not accessible in this context because the return type is not accessible.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedIdentifierOrGroup">
        <source>'Group' or an identifier expected.</source>
        <target state="new">'Group' or an identifier expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnexpectedGroup">
        <source>'Group' not allowed in this context; identifier expected.</source>
        <target state="new">'Group' not allowed in this context; identifier expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingMismatchStrictOff3">
        <source>Option Strict On does not allow narrowing in implicit type conversions between extension method '{0}' defined in '{2}' and delegate '{1}'.</source>
        <target state="new">Option Strict On does not allow narrowing in implicit type conversions between extension method '{0}' defined in '{2}' and delegate '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DelegateBindingIncompatible3">
        <source>Extension Method '{0}' defined in '{2}' does not have a signature compatible with delegate '{1}'.</source>
        <target state="new">Extension Method '{0}' defined in '{2}' does not have a signature compatible with delegate '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArgumentNarrowing2">
        <source>Argument matching parameter '{0}' narrows to '{1}'.</source>
        <target state="new">Argument matching parameter '{0}' narrows to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadCandidate1">
        <source>
    {0}</source>
        <target state="new">
    {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AutoPropertyInitializedInStructure">
        <source>Auto-implemented Properties contained in Structures cannot have initializers unless they are marked 'Shared'.</source>
        <target state="new">Auto-implemented Properties contained in Structures cannot have initializers unless they are marked 'Shared'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeDisallowsElements">
        <source>XML elements cannot be selected from type '{0}'.</source>
        <target state="new">XML elements cannot be selected from type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeDisallowsAttributes">
        <source>XML attributes cannot be selected from type '{0}'.</source>
        <target state="new">XML attributes cannot be selected from type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeDisallowsDescendants">
        <source>XML descendant elements cannot be selected from type '{0}'.</source>
        <target state="new">XML descendant elements cannot be selected from type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeOrMemberNotGeneric2">
        <source>Extension method '{0}' defined in '{1}' is not generic (or has no free type parameters) and so cannot have type arguments.</source>
        <target state="new">Extension method '{0}' defined in '{1}' is not generic (or has no free type parameters) and so cannot have type arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExtensionMethodCannotBeLateBound">
        <source>Late-bound extension methods are not supported.</source>
        <target state="new">Late-bound extension methods are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeInferenceArrayRankMismatch1">
        <source>Cannot infer a data type for '{0}' because the array dimensions do not match.</source>
        <target state="new">Cannot infer a data type for '{0}' because the array dimensions do not match.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_QueryStrictDisallowImplicitObject">
        <source>Type of the range variable cannot be inferred, and late binding is not allowed with Option Strict on. Use an 'As' clause to specify the type.</source>
        <target state="new">Type of the range variable cannot be inferred, and late binding is not allowed with Option Strict on. Use an 'As' clause to specify the type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotEmbedInterfaceWithGeneric">
        <source>Type '{0}' cannot be embedded because it has generic argument. Consider disabling the embedding of interop types.</source>
        <target state="new">Type '{0}' cannot be embedded because it has generic argument. Consider disabling the embedding of interop types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotUseGenericTypeAcrossAssemblyBoundaries">
        <source>Type '{0}' cannot be used across assembly boundaries because it has a generic type argument that is an embedded interop type.</source>
        <target state="new">Type '{0}' cannot be used across assembly boundaries because it has a generic type argument that is an embedded interop type.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoleteSymbol2">
        <source>'{0}' is obsolete: '{1}'.</source>
        <target state="new">'{0}' is obsolete: '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoleteSymbol2_Title">
        <source>Type or member is obsolete</source>
        <target state="new">Type or member is obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustOverloadBase4">
        <source>{0} '{1}' shadows an overloadable member declared in the base {2} '{3}'.  If you want to overload the base method, this method must be declared 'Overloads'.</source>
        <target state="new">{0} '{1}' shadows an overloadable member declared in the base {2} '{3}'.  If you want to overload the base method, this method must be declared 'Overloads'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustOverloadBase4_Title">
        <source>Member shadows an overloadable member declared in the base type</source>
        <target state="new">Member shadows an overloadable member declared in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OverrideType5">
        <source>{0} '{1}' conflicts with {2} '{1}' in the base {3} '{4}' and should be declared 'Shadows'.</source>
        <target state="new">{0} '{1}' conflicts with {2} '{1}' in the base {3} '{4}' and should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OverrideType5_Title">
        <source>Member conflicts with member in the base type and should be declared 'Shadows'</source>
        <target state="new">Member conflicts with member in the base type and should be declared 'Shadows'</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustOverride2">
        <source>{0} '{1}' shadows an overridable method in the base {2} '{3}'. To override the base method, this method must be declared 'Overrides'.</source>
        <target state="new">{0} '{1}' shadows an overridable method in the base {2} '{3}'. To override the base method, this method must be declared 'Overrides'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustOverride2_Title">
        <source>Member shadows an overridable method in the base type</source>
        <target state="new">Member shadows an overridable method in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefaultnessShadowed4">
        <source>Default property '{0}' conflicts with the default property '{1}' in the base {2} '{3}'. '{0}' will be the default property. '{0}' should be declared 'Shadows'.</source>
        <target state="new">Default property '{0}' conflicts with the default property '{1}' in the base {2} '{3}'. '{0}' will be the default property. '{0}' should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefaultnessShadowed4_Title">
        <source>Default property conflicts with the default property in the base type</source>
        <target state="new">Default property conflicts with the default property in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoleteSymbolNoMessage1">
        <source>'{0}' is obsolete.</source>
        <target state="new">'{0}' is obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoleteSymbolNoMessage1_Title">
        <source>Type or member is obsolete</source>
        <target state="new">Type or member is obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyGeneration0">
        <source>Possible problem detected while building assembly: {0}</source>
        <target state="new">Possible problem detected while building assembly: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyGeneration0_Title">
        <source>Possible problem detected while building assembly</source>
        <target state="new">Possible problem detected while building assembly</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyGeneration1">
        <source>Possible problem detected while building assembly '{0}': {1}</source>
        <target state="new">Possible problem detected while building assembly '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyGeneration1_Title">
        <source>Possible problem detected while building assembly</source>
        <target state="new">Possible problem detected while building assembly</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassNoMembers1">
        <source>'Microsoft.VisualBasic.ComClassAttribute' is specified for class '{0}' but '{0}' has no public members that can be exposed to COM; therefore, no COM interfaces are generated.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' is specified for class '{0}' but '{0}' has no public members that can be exposed to COM; therefore, no COM interfaces are generated.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassNoMembers1_Title">
        <source>'Microsoft.VisualBasic.ComClassAttribute' is specified for class but class has no public members that can be exposed to COM</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' is specified for class but class has no public members that can be exposed to COM</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SynthMemberShadowsMember5">
        <source>{0} '{1}' implicitly declares '{2}', which conflicts with a member in the base {3} '{4}', and so the {0} should be declared 'Shadows'.</source>
        <target state="new">{0} '{1}' implicitly declares '{2}', which conflicts with a member in the base {3} '{4}', and so the {0} should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SynthMemberShadowsMember5_Title">
        <source>Property or event implicitly declares type or member that conflicts with a member in the base type</source>
        <target state="new">Property or event implicitly declares type or member that conflicts with a member in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MemberShadowsSynthMember6">
        <source>{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in the base {4} '{5}' and should be declared 'Shadows'.</source>
        <target state="new">{0} '{1}' conflicts with a member implicitly declared for {2} '{3}' in the base {4} '{5}' and should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MemberShadowsSynthMember6_Title">
        <source>Member conflicts with a member implicitly declared for property or event in the base type</source>
        <target state="new">Member conflicts with a member implicitly declared for property or event in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SynthMemberShadowsSynthMember7">
        <source>{0} '{1}' implicitly declares '{2}', which conflicts with a member implicitly declared for {3} '{4}' in the base {5} '{6}'. {0} should be declared 'Shadows'.</source>
        <target state="new">{0} '{1}' implicitly declares '{2}', which conflicts with a member implicitly declared for {3} '{4}' in the base {5} '{6}'. {0} should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SynthMemberShadowsSynthMember7_Title">
        <source>Property or event implicitly declares member, which conflicts with a member implicitly declared for property or event in the base type</source>
        <target state="new">Property or event implicitly declares member, which conflicts with a member implicitly declared for property or event in the base type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoletePropertyAccessor3">
        <source>'{0}' accessor of '{1}' is obsolete: '{2}'.</source>
        <target state="new">'{0}' accessor of '{1}' is obsolete: '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoletePropertyAccessor3_Title">
        <source>Property accessor is obsolete</source>
        <target state="new">Property accessor is obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoletePropertyAccessor2">
        <source>'{0}' accessor of '{1}' is obsolete.</source>
        <target state="new">'{0}' accessor of '{1}' is obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseOfObsoletePropertyAccessor2_Title">
        <source>Property accessor is obsolete</source>
        <target state="new">Property accessor is obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_FieldNotCLSCompliant1">
        <source>Type of member '{0}' is not CLS-compliant.</source>
        <target state="new">Type of member '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_FieldNotCLSCompliant1_Title">
        <source>Type of member is not CLS-compliant</source>
        <target state="new">Type of member is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BaseClassNotCLSCompliant2">
        <source>'{0}' is not CLS-compliant because it derives from '{1}', which is not CLS-compliant.</source>
        <target state="new">'{0}' is not CLS-compliant because it derives from '{1}', which is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BaseClassNotCLSCompliant2_Title">
        <source>Type is not CLS-compliant because it derives from base type that is not CLS-compliant</source>
        <target state="new">Type is not CLS-compliant because it derives from base type that is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ProcTypeNotCLSCompliant1">
        <source>Return type of function '{0}' is not CLS-compliant.</source>
        <target state="new">Return type of function '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ProcTypeNotCLSCompliant1_Title">
        <source>Return type of function is not CLS-compliant</source>
        <target state="new">Return type of function is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ParamNotCLSCompliant1">
        <source>Type of parameter '{0}' is not CLS-compliant.</source>
        <target state="new">Type of parameter '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ParamNotCLSCompliant1_Title">
        <source>Type of parameter is not CLS-compliant</source>
        <target state="new">Type of parameter is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InheritedInterfaceNotCLSCompliant2">
        <source>'{0}' is not CLS-compliant because the interface '{1}' it inherits from is not CLS-compliant.</source>
        <target state="new">'{0}' is not CLS-compliant because the interface '{1}' it inherits from is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InheritedInterfaceNotCLSCompliant2_Title">
        <source>Type is not CLS-compliant because the interface it inherits from is not CLS-compliant</source>
        <target state="new">Type is not CLS-compliant because the interface it inherits from is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSMemberInNonCLSType3">
        <source>{0} '{1}' cannot be marked CLS-compliant because its containing type '{2}' is not CLS-compliant.</source>
        <target state="new">{0} '{1}' cannot be marked CLS-compliant because its containing type '{2}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSMemberInNonCLSType3_Title">
        <source>Member cannot be marked CLS-compliant because its containing type is not CLS-compliant</source>
        <target state="new">Member cannot be marked CLS-compliant because its containing type is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NameNotCLSCompliant1">
        <source>Name '{0}' is not CLS-compliant.</source>
        <target state="new">Name '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NameNotCLSCompliant1_Title">
        <source>Name is not CLS-compliant</source>
        <target state="new">Name is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EnumUnderlyingTypeNotCLS1">
        <source>Underlying type '{0}' of Enum is not CLS-compliant.</source>
        <target state="new">Underlying type '{0}' of Enum is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EnumUnderlyingTypeNotCLS1_Title">
        <source>Underlying type of Enum is not CLS-compliant</source>
        <target state="new">Underlying type of Enum is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NonCLSMemberInCLSInterface1">
        <source>Non CLS-compliant '{0}' is not allowed in a CLS-compliant interface.</source>
        <target state="new">Non CLS-compliant '{0}' is not allowed in a CLS-compliant interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NonCLSMemberInCLSInterface1_Title">
        <source>Non CLS-compliant member is not allowed in a CLS-compliant interface</source>
        <target state="new">Non CLS-compliant member is not allowed in a CLS-compliant interface</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NonCLSMustOverrideInCLSType1">
        <source>Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type '{0}'.</source>
        <target state="new">Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NonCLSMustOverrideInCLSType1_Title">
        <source>Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type</source>
        <target state="new">Non CLS-compliant 'MustOverride' member is not allowed in CLS-compliant type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayOverloadsNonCLS2">
        <source>'{0}' is not CLS-compliant because it overloads '{1}' which differs from it only by array of array parameter types or by the rank of the array parameter types.</source>
        <target state="new">'{0}' is not CLS-compliant because it overloads '{1}' which differs from it only by array of array parameter types or by the rank of the array parameter types.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayOverloadsNonCLS2_Title">
        <source>Method is not CLS-compliant because it overloads method which differs from it only by array of array parameter types or by the rank of the array parameter types</source>
        <target state="new">Method is not CLS-compliant because it overloads method which differs from it only by array of array parameter types or by the rank of the array parameter types</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RootNamespaceNotCLSCompliant1">
        <source>Root namespace '{0}' is not CLS-compliant.</source>
        <target state="new">Root namespace '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RootNamespaceNotCLSCompliant1_Title">
        <source>Root namespace is not CLS-compliant</source>
        <target state="new">Root namespace is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RootNamespaceNotCLSCompliant2">
        <source>Name '{0}' in the root namespace '{1}' is not CLS-compliant.</source>
        <target state="new">Name '{0}' in the root namespace '{1}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RootNamespaceNotCLSCompliant2_Title">
        <source>Part of the root namespace is not CLS-compliant</source>
        <target state="new">Part of the root namespace is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_GenericConstraintNotCLSCompliant1">
        <source>Generic parameter constraint type '{0}' is not CLS-compliant.</source>
        <target state="new">Generic parameter constraint type '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_GenericConstraintNotCLSCompliant1_Title">
        <source>Generic parameter constraint type is not CLS-compliant</source>
        <target state="new">Generic parameter constraint type is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeNotCLSCompliant1">
        <source>Type '{0}' is not CLS-compliant.</source>
        <target state="new">Type '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeNotCLSCompliant1_Title">
        <source>Type is not CLS-compliant</source>
        <target state="new">Type is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OptionalValueNotCLSCompliant1">
        <source>Type of optional value for optional parameter '{0}' is not CLS-compliant.</source>
        <target state="new">Type of optional value for optional parameter '{0}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OptionalValueNotCLSCompliant1_Title">
        <source>Type of optional value for optional parameter is not CLS-compliant</source>
        <target state="new">Type of optional value for optional parameter is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSAttrInvalidOnGetSet">
        <source>System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'.</source>
        <target state="new">System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSAttrInvalidOnGetSet_Title">
        <source>System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'</source>
        <target state="new">System.CLSCompliantAttribute cannot be applied to property 'Get' or 'Set'</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeConflictButMerged6">
        <source>{0} '{1}' and partial {2} '{3}' conflict in {4} '{5}', but are being merged because one of them is declared partial.</source>
        <target state="new">{0} '{1}' and partial {2} '{3}' conflict in {4} '{5}', but are being merged because one of them is declared partial.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeConflictButMerged6_Title">
        <source>Type and partial type conflict, but are being merged because one of them is declared partial</source>
        <target state="new">Type and partial type conflict, but are being merged because one of them is declared partial</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ShadowingGenericParamWithParam1">
        <source>Type parameter '{0}' has the same name as a type parameter of an enclosing type. Enclosing type's type parameter will be shadowed.</source>
        <target state="new">Type parameter '{0}' has the same name as a type parameter of an enclosing type. Enclosing type's type parameter will be shadowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ShadowingGenericParamWithParam1_Title">
        <source>Type parameter has the same name as a type parameter of an enclosing type</source>
        <target state="new">Type parameter has the same name as a type parameter of an enclosing type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CannotFindStandardLibrary1">
        <source>Could not find standard library '{0}'.</source>
        <target state="new">Could not find standard library '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CannotFindStandardLibrary1_Title">
        <source>Could not find standard library</source>
        <target state="new">Could not find standard library</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EventDelegateTypeNotCLSCompliant2">
        <source>Delegate type '{0}' of event '{1}' is not CLS-compliant.</source>
        <target state="new">Delegate type '{0}' of event '{1}' is not CLS-compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EventDelegateTypeNotCLSCompliant2_Title">
        <source>Delegate type of event is not CLS-compliant</source>
        <target state="new">Delegate type of event is not CLS-compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DebuggerHiddenIgnoredOnProperties">
        <source>System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition.  Apply the attribute directly to the 'Get' and 'Set' procedures as appropriate.</source>
        <target state="new">System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition.  Apply the attribute directly to the 'Get' and 'Set' procedures as appropriate.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DebuggerHiddenIgnoredOnProperties_Title">
        <source>System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition</source>
        <target state="new">System.Diagnostics.DebuggerHiddenAttribute does not affect 'Get' or 'Set' when applied to the Property definition</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SelectCaseInvalidRange">
        <source>Range specified for 'Case' statement is not valid. Make sure that the lower bound is less than or equal to the upper bound.</source>
        <target state="new">Range specified for 'Case' statement is not valid. Make sure that the lower bound is less than or equal to the upper bound.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SelectCaseInvalidRange_Title">
        <source>Range specified for 'Case' statement is not valid</source>
        <target state="new">Range specified for 'Case' statement is not valid</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSEventMethodInNonCLSType3">
        <source>'{0}' method for event '{1}' cannot be marked CLS compliant because its containing type '{2}' is not CLS compliant.</source>
        <target state="new">'{0}' method for event '{1}' cannot be marked CLS compliant because its containing type '{2}' is not CLS compliant.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_CLSEventMethodInNonCLSType3_Title">
        <source>AddHandler or RemoveHandler method for event cannot be marked CLS compliant because its containing type is not CLS compliant</source>
        <target state="new">AddHandler or RemoveHandler method for event cannot be marked CLS compliant because its containing type is not CLS compliant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ExpectedInitComponentCall2">
        <source>'{0}' in designer-generated type '{1}' should call InitializeComponent method.</source>
        <target state="new">'{0}' in designer-generated type '{1}' should call InitializeComponent method.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ExpectedInitComponentCall2_Title">
        <source>Constructor in designer-generated type should call InitializeComponent method</source>
        <target state="new">Constructor in designer-generated type should call InitializeComponent method</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NamespaceCaseMismatch3">
        <source>Casing of namespace name '{0}' does not match casing of namespace name '{1}' in '{2}'.</source>
        <target state="new">Casing of namespace name '{0}' does not match casing of namespace name '{1}' in '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NamespaceCaseMismatch3_Title">
        <source>Casing of namespace name does not match</source>
        <target state="new">Casing of namespace name does not match</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UndefinedOrEmptyNamespaceOrClass1">
        <source>Namespace or type specified in the Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</source>
        <target state="new">Namespace or type specified in the Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UndefinedOrEmptyNamespaceOrClass1_Title">
        <source>Namespace or type specified in Imports statement doesn't contain any public member or cannot be found</source>
        <target state="new">Namespace or type specified in Imports statement doesn't contain any public member or cannot be found</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UndefinedOrEmptyProjectNamespaceOrClass1">
        <source>Namespace or type specified in the project-level Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</source>
        <target state="new">Namespace or type specified in the project-level Imports '{0}' doesn't contain any public member or cannot be found. Make sure the namespace or the type is defined and contains at least one public member. Make sure the imported element name doesn't use any aliases.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UndefinedOrEmptyProjectNamespaceOrClass1_Title">
        <source>Namespace or type imported at project level doesn't contain any public member or cannot be found</source>
        <target state="new">Namespace or type imported at project level doesn't contain any public member or cannot be found</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IndirectRefToLinkedAssembly2">
        <source>A reference was created to embedded interop assembly '{0}' because of an indirect reference to that assembly from assembly '{1}'. Consider changing the 'Embed Interop Types' property on either assembly.</source>
        <target state="new">A reference was created to embedded interop assembly '{0}' because of an indirect reference to that assembly from assembly '{1}'. Consider changing the 'Embed Interop Types' property on either assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IndirectRefToLinkedAssembly2_Title">
        <source>A reference was created to embedded interop assembly because of an indirect reference to that assembly</source>
        <target state="new">A reference was created to embedded interop assembly because of an indirect reference to that assembly</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoNonObsoleteConstructorOnBase3">
        <source>Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</source>
        <target state="new">Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoNonObsoleteConstructorOnBase3_Title">
        <source>Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</source>
        <target state="new">Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoNonObsoleteConstructorOnBase4">
        <source>Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</source>
        <target state="new">Class '{0}' should declare a 'Sub New' because the '{1}' in its base class '{2}' is marked obsolete: '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoNonObsoleteConstructorOnBase4_Title">
        <source>Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</source>
        <target state="new">Class should declare a 'Sub New' because the constructor in its base class is marked obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RequiredNonObsoleteNewCall3">
        <source>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</source>
        <target state="new">First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RequiredNonObsoleteNewCall3_Title">
        <source>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</source>
        <target state="new">First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RequiredNonObsoleteNewCall4">
        <source>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'</source>
        <target state="new">First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the '{0}' in the base class '{1}' of '{2}' is marked obsolete: '{3}'</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RequiredNonObsoleteNewCall4_Title">
        <source>First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</source>
        <target state="new">First statement of this 'Sub New' should be an explicit call to 'MyBase.New' or 'MyClass.New' because the constructor in the base class is marked obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinOperator">
        <source>Operator without an 'As' clause; type of Object assumed.</source>
        <target state="new">Operator without an 'As' clause; type of Object assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinOperator_Title">
        <source>Operator without an 'As' clause</source>
        <target state="new">Operator without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConstraintsFailedForInferredArgs2">
        <source>Type arguments inferred for method '{0}' result in the following warnings :{1}</source>
        <target state="new">Type arguments inferred for method '{0}' result in the following warnings :{1}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConstraintsFailedForInferredArgs2_Title">
        <source>Type arguments inferred for method result in warnings</source>
        <target state="new">Type arguments inferred for method result in warnings</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConditionalNotValidOnFunction">
        <source>Attribute 'Conditional' is only valid on 'Sub' declarations.</source>
        <target state="new">Attribute 'Conditional' is only valid on 'Sub' declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConditionalNotValidOnFunction_Title">
        <source>Attribute 'Conditional' is only valid on 'Sub' declarations</source>
        <target state="new">Attribute 'Conditional' is only valid on 'Sub' declarations</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseSwitchInsteadOfAttribute">
        <source>Use command-line option '{0}' or appropriate project settings instead of '{1}'.</source>
        <target state="new">Use command-line option '{0}' or appropriate project settings instead of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UseSwitchInsteadOfAttribute_Title">
        <source>Use command-line option /keyfile, /keycontainer, or /delaysign instead of AssemblyKeyFileAttribute, AssemblyKeyNameAttribute, or AssemblyDelaySignAttribute</source>
        <target state="new">Use command-line option /keyfile, /keycontainer, or /delaysign instead of AssemblyKeyFileAttribute, AssemblyKeyNameAttribute, or AssemblyDelaySignAttribute</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursiveAddHandlerCall">
        <source>Statement recursively calls the containing '{0}' for event '{1}'.</source>
        <target state="new">Statement recursively calls the containing '{0}' for event '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursiveAddHandlerCall_Title">
        <source>Statement recursively calls the event's containing AddHandler</source>
        <target state="new">Statement recursively calls the event's containing AddHandler</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversionCopyBack">
        <source>Implicit conversion from '{1}' to '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</source>
        <target state="new">Implicit conversion from '{1}' to '{2}' in copying the value of 'ByRef' parameter '{0}' back to the matching argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversionCopyBack_Title">
        <source>Implicit conversion in copying the value of 'ByRef' parameter back to the matching argument</source>
        <target state="new">Implicit conversion in copying the value of 'ByRef' parameter back to the matching argument</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustShadowOnMultipleInheritance2">
        <source>{0} '{1}' conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'.</source>
        <target state="new">{0} '{1}' conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MustShadowOnMultipleInheritance2_Title">
        <source>Method conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'</source>
        <target state="new">Method conflicts with other members of the same name across the inheritance hierarchy and so should be declared 'Shadows'</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursiveOperatorCall">
        <source>Expression recursively calls the containing Operator '{0}'.</source>
        <target state="new">Expression recursively calls the containing Operator '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursiveOperatorCall_Title">
        <source>Expression recursively calls the containing Operator</source>
        <target state="new">Expression recursively calls the containing Operator</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversion2">
        <source>Implicit conversion from '{0}' to '{1}'.</source>
        <target state="new">Implicit conversion from '{0}' to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversion2_Title">
        <source>Implicit conversion</source>
        <target state="new">Implicit conversion</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MutableStructureInUsing">
        <source>Local variable '{0}' is read-only and its type is a structure. Invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</source>
        <target state="new">Local variable '{0}' is read-only and its type is a structure. Invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MutableStructureInUsing_Title">
        <source>Local variable declared by Using statement is read-only and its type is a structure</source>
        <target state="new">Local variable declared by Using statement is read-only and its type is a structure</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MutableGenericStructureInUsing">
        <source>Local variable '{0}' is read-only. When its type is a structure, invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</source>
        <target state="new">Local variable '{0}' is read-only. When its type is a structure, invoking its members or passing it ByRef does not change its content and might lead to unexpected results. Consider declaring this variable outside of the 'Using' block.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MutableGenericStructureInUsing_Title">
        <source>Local variable declared by Using statement is read-only and its type may be a structure</source>
        <target state="new">Local variable declared by Using statement is read-only and its type may be a structure</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversionSubst1">
        <source>{0}</source>
        <target state="new">{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ImplicitConversionSubst1_Title">
        <source>Implicit conversion</source>
        <target state="new">Implicit conversion</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LateBindingResolution">
        <source>Late bound resolution; runtime errors could occur.</source>
        <target state="new">Late bound resolution; runtime errors could occur.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LateBindingResolution_Title">
        <source>Late bound resolution</source>
        <target state="new">Late bound resolution</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath1">
        <source>Operands of type Object used for operator '{0}'; use the 'Is' operator to test object identity.</source>
        <target state="new">Operands of type Object used for operator '{0}'; use the 'Is' operator to test object identity.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath1_Title">
        <source>Operands of type Object used for operator</source>
        <target state="new">Operands of type Object used for operator</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath2">
        <source>Operands of type Object used for operator '{0}'; runtime errors could occur.</source>
        <target state="new">Operands of type Object used for operator '{0}'; runtime errors could occur.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath2_Title">
        <source>Operands of type Object used for operator</source>
        <target state="new">Operands of type Object used for operator</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumedVar1">
        <source>{0}</source>
        <target state="new">{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumedVar1_Title">
        <source>Variable declaration without an 'As' clause</source>
        <target state="new">Variable declaration without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumed1">
        <source>{0}</source>
        <target state="new">{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumed1_Title">
        <source>Function without an 'As' clause</source>
        <target state="new">Function without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumedProperty1">
        <source>{0}</source>
        <target state="new">{0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectAssumedProperty1_Title">
        <source>Property without an 'As' clause</source>
        <target state="new">Property without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinVarDecl">
        <source>Variable declaration without an 'As' clause; type of Object assumed.</source>
        <target state="new">Variable declaration without an 'As' clause; type of Object assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinVarDecl_Title">
        <source>Variable declaration without an 'As' clause</source>
        <target state="new">Variable declaration without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinFunction">
        <source>Function without an 'As' clause; return type of Object assumed.</source>
        <target state="new">Function without an 'As' clause; return type of Object assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinFunction_Title">
        <source>Function without an 'As' clause</source>
        <target state="new">Function without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinProperty">
        <source>Property without an 'As' clause; type of Object assumed.</source>
        <target state="new">Property without an 'As' clause; type of Object assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MissingAsClauseinProperty_Title">
        <source>Property without an 'As' clause</source>
        <target state="new">Property without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnusedLocal">
        <source>Unused local variable: '{0}'.</source>
        <target state="new">Unused local variable: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnusedLocal_Title">
        <source>Unused local variable</source>
        <target state="new">Unused local variable</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SharedMemberThroughInstance">
        <source>Access of shared member, constant member, enum member or nested type through an instance; qualifying expression will not be evaluated.</source>
        <target state="new">Access of shared member, constant member, enum member or nested type through an instance; qualifying expression will not be evaluated.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_SharedMemberThroughInstance_Title">
        <source>Access of shared member, constant member, enum member or nested type through an instance</source>
        <target state="new">Access of shared member, constant member, enum member or nested type through an instance</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursivePropertyCall">
        <source>Expression recursively calls the containing property '{0}'.</source>
        <target state="new">Expression recursively calls the containing property '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RecursivePropertyCall_Title">
        <source>Expression recursively calls the containing property</source>
        <target state="new">Expression recursively calls the containing property</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OverlappingCatch">
        <source>'Catch' block never reached, because '{0}' inherits from '{1}'.</source>
        <target state="new">'Catch' block never reached, because '{0}' inherits from '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_OverlappingCatch_Title">
        <source>'Catch' block never reached; exception type's base type handled above in the same Try statement</source>
        <target state="new">'Catch' block never reached; exception type's base type handled above in the same Try statement</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefByRef">
        <source>Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime.</source>
        <target state="new">Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefByRef_Title">
        <source>Variable is passed by reference before it has been assigned a value</source>
        <target state="new">Variable is passed by reference before it has been assigned a value</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DuplicateCatch">
        <source>'Catch' block never reached; '{0}' handled above in the same Try statement.</source>
        <target state="new">'Catch' block never reached; '{0}' handled above in the same Try statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DuplicateCatch_Title">
        <source>'Catch' block never reached; exception type handled above in the same Try statement</source>
        <target state="new">'Catch' block never reached; exception type handled above in the same Try statement</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath1Not">
        <source>Operands of type Object used for operator '{0}'; use the 'IsNot' operator to test object identity.</source>
        <target state="new">Operands of type Object used for operator '{0}'; use the 'IsNot' operator to test object identity.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMath1Not_Title">
        <source>Operands of type Object used for operator &lt;&gt;</source>
        <target state="new">Operands of type Object used for operator &lt;&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadChecksumValExtChecksum">
        <source>Bad checksum value, non hex digits or odd number of hex digits.</source>
        <target state="new">Bad checksum value, non hex digits or odd number of hex digits.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadChecksumValExtChecksum_Title">
        <source>Bad checksum value, non hex digits or odd number of hex digits</source>
        <target state="new">Bad checksum value, non hex digits or odd number of hex digits</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MultipleDeclFileExtChecksum">
        <source>File name already declared with a different GUID and checksum value.</source>
        <target state="new">File name already declared with a different GUID and checksum value.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MultipleDeclFileExtChecksum_Title">
        <source>File name already declared with a different GUID and checksum value</source>
        <target state="new">File name already declared with a different GUID and checksum value</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadGUIDFormatExtChecksum">
        <source>Bad GUID format.</source>
        <target state="new">Bad GUID format.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_BadGUIDFormatExtChecksum_Title">
        <source>Bad GUID format</source>
        <target state="new">Bad GUID format</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMathSelectCase">
        <source>Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur.</source>
        <target state="new">Operands of type Object used in expressions for 'Select', 'Case' statements; runtime errors could occur.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObjectMathSelectCase_Title">
        <source>Operands of type Object used in expressions for 'Select', 'Case' statements</source>
        <target state="new">Operands of type Object used in expressions for 'Select', 'Case' statements</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EqualToLiteralNothing">
        <source>This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is null consider using 'Is Nothing'.</source>
        <target state="new">This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is null consider using 'Is Nothing'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EqualToLiteralNothing_Title">
        <source>This expression will always evaluate to Nothing</source>
        <target state="new">This expression will always evaluate to Nothing</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NotEqualToLiteralNothing">
        <source>This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is not null consider using 'IsNot Nothing'.</source>
        <target state="new">This expression will always evaluate to Nothing (due to null propagation from the equals operator). To check if the value is not null consider using 'IsNot Nothing'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NotEqualToLiteralNothing_Title">
        <source>This expression will always evaluate to Nothing</source>
        <target state="new">This expression will always evaluate to Nothing</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnusedLocalConst">
        <source>Unused local constant: '{0}'.</source>
        <target state="new">Unused local constant: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnusedLocalConst_Title">
        <source>Unused local constant</source>
        <target state="new">Unused local constant</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassInterfaceShadows5">
        <source>'Microsoft.VisualBasic.ComClassAttribute' on class '{0}' implicitly declares {1} '{2}', which conflicts with a member of the same name in {3} '{4}'. Use 'Microsoft.VisualBasic.ComClassAttribute(InterfaceShadows:=True)' if you want to hide the name on the base {4}.</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' on class '{0}' implicitly declares {1} '{2}', which conflicts with a member of the same name in {3} '{4}'. Use 'Microsoft.VisualBasic.ComClassAttribute(InterfaceShadows:=True)' if you want to hide the name on the base {4}.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassInterfaceShadows5_Title">
        <source>'Microsoft.VisualBasic.ComClassAttribute' on class implicitly declares member, which conflicts with a member of the same name</source>
        <target state="new">'Microsoft.VisualBasic.ComClassAttribute' on class implicitly declares member, which conflicts with a member of the same name</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassPropertySetObject1">
        <source>'{0}' cannot be exposed to COM as a property 'Let'. You will not be able to assign non-object values (such as numbers or strings) to this property from Visual Basic 6.0 using a 'Let' statement.</source>
        <target state="new">'{0}' cannot be exposed to COM as a property 'Let'. You will not be able to assign non-object values (such as numbers or strings) to this property from Visual Basic 6.0 using a 'Let' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ComClassPropertySetObject1_Title">
        <source>Property cannot be exposed to COM as a property 'Let'</source>
        <target state="new">Property cannot be exposed to COM as a property 'Let'</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRef">
        <source>Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime.</source>
        <target state="new">Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRef_Title">
        <source>Variable is used before it has been assigned a value</source>
        <target state="new">Variable is used before it has been assigned a value</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValFuncRef1">
        <source>Function '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</source>
        <target state="new">Function '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValFuncRef1_Title">
        <source>Function doesn't return a value on all code paths</source>
        <target state="new">Function doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValOpRef1">
        <source>Operator '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</source>
        <target state="new">Operator '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValOpRef1_Title">
        <source>Operator doesn't return a value on all code paths</source>
        <target state="new">Operator doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValPropRef1">
        <source>Property '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</source>
        <target state="new">Property '{0}' doesn't return a value on all code paths. A null reference exception could occur at run time when the result is used.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValPropRef1_Title">
        <source>Property doesn't return a value on all code paths</source>
        <target state="new">Property doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefByRefStr">
        <source>Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</source>
        <target state="new">Variable '{0}' is passed by reference before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefByRefStr_Title">
        <source>Variable is passed by reference before it has been assigned a value</source>
        <target state="new">Variable is passed by reference before it has been assigned a value</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefStr">
        <source>Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</source>
        <target state="new">Variable '{0}' is used before it has been assigned a value. A null reference exception could result at runtime. Make sure the structure or all the reference members are initialized before use</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgUseNullRefStr_Title">
        <source>Variable is used before it has been assigned a value</source>
        <target state="new">Variable is used before it has been assigned a value</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_StaticLocalNoInference">
        <source>Static variable declared without an 'As' clause; type of Object assumed.</source>
        <target state="new">Static variable declared without an 'As' clause; type of Object assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_StaticLocalNoInference_Title">
        <source>Static variable declared without an 'As' clause</source>
        <target state="new">Static variable declared without an 'As' clause</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidAssemblyName">
        <source>Assembly reference '{0}' is invalid and cannot be resolved.</source>
        <target state="new">Assembly reference '{0}' is invalid and cannot be resolved.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidAssemblyName_Title">
        <source>Assembly reference is invalid and cannot be resolved</source>
        <target state="new">Assembly reference is invalid and cannot be resolved</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadXMLLine">
        <source>XML comment block must immediately precede the language element to which it applies. XML comment will be ignored.</source>
        <target state="new">XML comment block must immediately precede the language element to which it applies. XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadXMLLine_Title">
        <source>XML comment block must immediately precede the language element to which it applies</source>
        <target state="new">XML comment block must immediately precede the language element to which it applies</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocMoreThanOneCommentBlock">
        <source>Only one XML comment block is allowed per language element.</source>
        <target state="new">Only one XML comment block is allowed per language element.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocMoreThanOneCommentBlock_Title">
        <source>Only one XML comment block is allowed per language element</source>
        <target state="new">Only one XML comment block is allowed per language element</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocNotFirstOnLine">
        <source>XML comment must be the first statement on a line. XML comment will be ignored.</source>
        <target state="new">XML comment must be the first statement on a line. XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocNotFirstOnLine_Title">
        <source>XML comment must be the first statement on a line</source>
        <target state="new">XML comment must be the first statement on a line</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocInsideMethod">
        <source>XML comment cannot appear within a method or a property. XML comment will be ignored.</source>
        <target state="new">XML comment cannot appear within a method or a property. XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocInsideMethod_Title">
        <source>XML comment cannot appear within a method or a property</source>
        <target state="new">XML comment cannot appear within a method or a property</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocParseError1">
        <source>XML documentation parse error: {0} XML comment will be ignored.</source>
        <target state="new">XML documentation parse error: {0} XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocParseError1_Title">
        <source>XML documentation parse error</source>
        <target state="new">XML documentation parse error</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocDuplicateXMLNode1">
        <source>XML comment tag '{0}' appears with identical attributes more than once in the same XML comment block.</source>
        <target state="new">XML comment tag '{0}' appears with identical attributes more than once in the same XML comment block.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocDuplicateXMLNode1_Title">
        <source>XML comment tag appears with identical attributes more than once in the same XML comment block</source>
        <target state="new">XML comment tag appears with identical attributes more than once in the same XML comment block</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocIllegalTagOnElement2">
        <source>XML comment tag '{0}' is not permitted on a '{1}' language element.</source>
        <target state="new">XML comment tag '{0}' is not permitted on a '{1}' language element.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocIllegalTagOnElement2_Title">
        <source>XML comment tag is not permitted on language element</source>
        <target state="new">XML comment tag is not permitted on language element</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadParamTag2">
        <source>XML comment parameter '{0}' does not match a parameter on the corresponding '{1}' statement.</source>
        <target state="new">XML comment parameter '{0}' does not match a parameter on the corresponding '{1}' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadParamTag2_Title">
        <source>XML comment parameter does not match a parameter on the corresponding declaration statement</source>
        <target state="new">XML comment parameter does not match a parameter on the corresponding declaration statement</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocParamTagWithoutName">
        <source>XML comment parameter must have a 'name' attribute.</source>
        <target state="new">XML comment parameter must have a 'name' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocParamTagWithoutName_Title">
        <source>XML comment parameter must have a 'name' attribute</source>
        <target state="new">XML comment parameter must have a 'name' attribute</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocCrefAttributeNotFound1">
        <source>XML comment has a tag with a 'cref' attribute '{0}' that could not be resolved.</source>
        <target state="new">XML comment has a tag with a 'cref' attribute '{0}' that could not be resolved.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocCrefAttributeNotFound1_Title">
        <source>XML comment has a tag with a 'cref' attribute that could not be resolved</source>
        <target state="new">XML comment has a tag with a 'cref' attribute that could not be resolved</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLMissingFileOrPathAttribute1">
        <source>XML comment tag 'include' must have a '{0}' attribute. XML comment will be ignored.</source>
        <target state="new">XML comment tag 'include' must have a '{0}' attribute. XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLMissingFileOrPathAttribute1_Title">
        <source>XML comment tag 'include' must have 'file' and 'path' attributes</source>
        <target state="new">XML comment tag 'include' must have 'file' and 'path' attributes</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLCannotWriteToXMLDocFile2">
        <source>Unable to create XML documentation file '{0}': {1}</source>
        <target state="new">Unable to create XML documentation file '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLCannotWriteToXMLDocFile2_Title">
        <source>Unable to create XML documentation file</source>
        <target state="new">Unable to create XML documentation file</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocWithoutLanguageElement">
        <source>XML documentation comments must precede member or type declarations.</source>
        <target state="new">XML documentation comments must precede member or type declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocWithoutLanguageElement_Title">
        <source>XML documentation comments must precede member or type declarations</source>
        <target state="new">XML documentation comments must precede member or type declarations</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocReturnsOnWriteOnlyProperty">
        <source>XML comment tag 'returns' is not permitted on a 'WriteOnly' Property.</source>
        <target state="new">XML comment tag 'returns' is not permitted on a 'WriteOnly' Property.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocReturnsOnWriteOnlyProperty_Title">
        <source>XML comment tag 'returns' is not permitted on a 'WriteOnly' Property</source>
        <target state="new">XML comment tag 'returns' is not permitted on a 'WriteOnly' Property</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocOnAPartialType">
        <source>XML comment cannot be applied more than once on a partial {0}. XML comments for this {0} will be ignored.</source>
        <target state="new">XML comment cannot be applied more than once on a partial {0}. XML comments for this {0} will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocOnAPartialType_Title">
        <source>XML comment cannot be applied more than once on a partial type</source>
        <target state="new">XML comment cannot be applied more than once on a partial type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocReturnsOnADeclareSub">
        <source>XML comment tag 'returns' is not permitted on a 'declare sub' language element.</source>
        <target state="new">XML comment tag 'returns' is not permitted on a 'declare sub' language element.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocReturnsOnADeclareSub_Title">
        <source>XML comment tag 'returns' is not permitted on a 'declare sub' language element</source>
        <target state="new">XML comment tag 'returns' is not permitted on a 'declare sub' language element</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocStartTagWithNoEndTag">
        <source>XML documentation parse error: Start tag '{0}' doesn't have a matching end tag. XML comment will be ignored.</source>
        <target state="new">XML documentation parse error: Start tag '{0}' doesn't have a matching end tag. XML comment will be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocStartTagWithNoEndTag_Title">
        <source>XML documentation parse error: Start tag doesn't have a matching end tag</source>
        <target state="new">XML documentation parse error: Start tag doesn't have a matching end tag</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadGenericParamTag2">
        <source>XML comment type parameter '{0}' does not match a type parameter on the corresponding '{1}' statement.</source>
        <target state="new">XML comment type parameter '{0}' does not match a type parameter on the corresponding '{1}' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadGenericParamTag2_Title">
        <source>XML comment type parameter does not match a type parameter on the corresponding declaration statement</source>
        <target state="new">XML comment type parameter does not match a type parameter on the corresponding declaration statement</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocGenericParamTagWithoutName">
        <source>XML comment type parameter must have a 'name' attribute.</source>
        <target state="new">XML comment type parameter must have a 'name' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocGenericParamTagWithoutName_Title">
        <source>XML comment type parameter must have a 'name' attribute</source>
        <target state="new">XML comment type parameter must have a 'name' attribute</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocExceptionTagWithoutCRef">
        <source>XML comment exception must have a 'cref' attribute.</source>
        <target state="new">XML comment exception must have a 'cref' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocExceptionTagWithoutCRef_Title">
        <source>XML comment exception must have a 'cref' attribute</source>
        <target state="new">XML comment exception must have a 'cref' attribute</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocInvalidXMLFragment">
        <source>Unable to include XML fragment '{0}' of file '{1}'.</source>
        <target state="new">Unable to include XML fragment '{0}' of file '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocInvalidXMLFragment_Title">
        <source>Unable to include XML fragment</source>
        <target state="new">Unable to include XML fragment</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadFormedXML">
        <source>Unable to include XML fragment '{1}' of file '{0}'. {2}</source>
        <target state="new">Unable to include XML fragment '{1}' of file '{0}'. {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocBadFormedXML_Title">
        <source>Unable to include XML fragment</source>
        <target state="new">Unable to include XML fragment</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InterfaceConversion2">
        <source>Runtime errors might occur when converting '{0}' to '{1}'.</source>
        <target state="new">Runtime errors might occur when converting '{0}' to '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InterfaceConversion2_Title">
        <source>Runtime errors might occur when converting to or from interface type</source>
        <target state="new">Runtime errors might occur when converting to or from interface type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LiftControlVariableLambda">
        <source>Using the iteration variable in a lambda expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</source>
        <target state="new">Using the iteration variable in a lambda expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LiftControlVariableLambda_Title">
        <source>Using the iteration variable in a lambda expression may have unexpected results</source>
        <target state="new">Using the iteration variable in a lambda expression may have unexpected results</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaPassedToRemoveHandler">
        <source>Lambda expression will not be removed from this event handler. Assign the lambda expression to a variable and use the variable to add and remove the event.</source>
        <target state="new">Lambda expression will not be removed from this event handler. Assign the lambda expression to a variable and use the variable to add and remove the event.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaPassedToRemoveHandler_Title">
        <source>Lambda expression will not be removed from this event handler</source>
        <target state="new">Lambda expression will not be removed from this event handler</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LiftControlVariableQuery">
        <source>Using the iteration variable in a query expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</source>
        <target state="new">Using the iteration variable in a query expression may have unexpected results.  Instead, create a local variable within the loop and assign it the value of the iteration variable.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LiftControlVariableQuery_Title">
        <source>Using the iteration variable in a query expression may have unexpected results</source>
        <target state="new">Using the iteration variable in a query expression may have unexpected results</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RelDelegatePassedToRemoveHandler">
        <source>The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event. Assign the 'AddressOf' expression to a variable, and use the variable to add or remove the method as the handler.</source>
        <target state="new">The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event. Assign the 'AddressOf' expression to a variable, and use the variable to add or remove the method as the handler.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RelDelegatePassedToRemoveHandler_Title">
        <source>The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event</source>
        <target state="new">The 'AddressOf' expression has no effect in this context because the method argument to 'AddressOf' requires a relaxed conversion to the delegate type of the event</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_QueryMissingAsClauseinVarDecl">
        <source>Range variable is assumed to be of type Object because its type cannot be inferred. Use an 'As' clause to specify a different type.</source>
        <target state="new">Range variable is assumed to be of type Object because its type cannot be inferred. Use an 'As' clause to specify a different type.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_QueryMissingAsClauseinVarDecl_Title">
        <source>Range variable is assumed to be of type Object because its type cannot be inferred</source>
        <target state="new">Range variable is assumed to be of type Object because its type cannot be inferred</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultilineLambdaMissingFunction">
        <source>Multiline lambda expression is missing 'End Function'.</source>
        <target state="new">Multiline lambda expression is missing 'End Function'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultilineLambdaMissingSub">
        <source>Multiline lambda expression is missing 'End Sub'.</source>
        <target state="new">Multiline lambda expression is missing 'End Sub'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeOnLambdaReturnType">
        <source>Attributes cannot be applied to return types of lambda expressions.</source>
        <target state="new">Attributes cannot be applied to return types of lambda expressions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubDisallowsStatement">
        <source>Statement is not valid inside a single-line statement lambda.</source>
        <target state="new">Statement is not valid inside a single-line statement lambda.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubRequiresParenthesesBang">
        <source>This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;)!key</source>
        <target state="new">This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;)!key</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubRequiresParenthesesDot">
        <source>This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;).Invoke()</source>
        <target state="new">This single-line statement lambda must be enclosed in parentheses. For example: (Sub() &lt;statement&gt;).Invoke()</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubRequiresParenthesesLParen">
        <source>This single-line statement lambda must be enclosed in parentheses. For example: Call (Sub() &lt;statement&gt;) ()</source>
        <target state="new">This single-line statement lambda must be enclosed in parentheses. For example: Call (Sub() &lt;statement&gt;) ()</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SubRequiresSingleStatement">
        <source>Single-line statement lambdas must include exactly one statement.</source>
        <target state="new">Single-line statement lambdas must include exactly one statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StaticInLambda">
        <source>Static local variables cannot be declared inside lambda expressions.</source>
        <target state="new">Static local variables cannot be declared inside lambda expressions.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InitializedExpandedProperty">
        <source>Expanded Properties cannot be initialized.</source>
        <target state="new">Expanded Properties cannot be initialized.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AutoPropertyCantHaveParams">
        <source>Auto-implemented properties cannot have parameters.</source>
        <target state="new">Auto-implemented properties cannot have parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AutoPropertyCantBeWriteOnly">
        <source>Auto-implemented properties cannot be WriteOnly.</source>
        <target state="new">Auto-implemented properties cannot be WriteOnly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalOperandInIIFCount">
        <source>'If' operator requires either two or three operands.</source>
        <target state="new">'If' operator requires either two or three operands.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NotACollection1">
        <source>Cannot initialize the type '{0}' with a collection initializer because it is not a collection type.</source>
        <target state="new">Cannot initialize the type '{0}' with a collection initializer because it is not a collection type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoAddMethod1">
        <source>Cannot initialize the type '{0}' with a collection initializer because it does not have an accessible 'Add' method.</source>
        <target state="new">Cannot initialize the type '{0}' with a collection initializer because it does not have an accessible 'Add' method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantCombineInitializers">
        <source>An Object Initializer and a Collection Initializer cannot be combined in the same initialization.</source>
        <target state="new">An Object Initializer and a Collection Initializer cannot be combined in the same initialization.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EmptyAggregateInitializer">
        <source>An aggregate collection initializer entry must contain at least one element.</source>
        <target state="new">An aggregate collection initializer entry must contain at least one element.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_XmlEndElementNoMatchingStart">
        <source>XML end element must be preceded by a matching start element.</source>
        <target state="new">XML end element must be preceded by a matching start element.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MultilineLambdasCannotContainOnError">
        <source>'On Error' and 'Resume' cannot appear inside a lambda expression.</source>
        <target state="new">'On Error' and 'Resume' cannot appear inside a lambda expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceDisallowedHere">
        <source>Keywords 'Out' and 'In' can only be used in interface and delegate declarations.</source>
        <target state="new">Keywords 'Out' and 'In' can only be used in interface and delegate declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_XmlEndCDataNotAllowedInContent">
        <source>The literal string ']]&gt;' is not allowed in element content.</source>
        <target state="new">The literal string ']]&gt;' is not allowed in element content.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OverloadsModifierInModule">
        <source>Inappropriate use of '{0}' keyword in a module.</source>
        <target state="new">Inappropriate use of '{0}' keyword in a module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UndefinedTypeOrNamespace1">
        <source>Type or namespace '{0}' is not defined.</source>
        <target state="new">Type or namespace '{0}' is not defined.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IdentityDirectCastForFloat">
        <source>Using DirectCast operator to cast a floating-point value to the same type is not supported.</source>
        <target state="new">Using DirectCast operator to cast a floating-point value to the same type is not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObsoleteIdentityDirectCastForValueType">
        <source>Using DirectCast operator to cast a value-type to the same type is obsolete.</source>
        <target state="new">Using DirectCast operator to cast a value-type to the same type is obsolete.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ObsoleteIdentityDirectCastForValueType_Title">
        <source>Using DirectCast operator to cast a value-type to the same type is obsolete</source>
        <target state="new">Using DirectCast operator to cast a value-type to the same type is obsolete</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnreachableCode">
        <source>Unreachable code detected.</source>
        <target state="new">Unreachable code detected.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnreachableCode_Title">
        <source>Unreachable code detected</source>
        <target state="new">Unreachable code detected</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValFuncVal1">
        <source>Function '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</source>
        <target state="new">Function '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValFuncVal1_Title">
        <source>Function doesn't return a value on all code paths</source>
        <target state="new">Function doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValOpVal1">
        <source>Operator '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</source>
        <target state="new">Operator '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValOpVal1_Title">
        <source>Operator doesn't return a value on all code paths</source>
        <target state="new">Operator doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValPropVal1">
        <source>Property '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</source>
        <target state="new">Property '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValPropVal1_Title">
        <source>Property doesn't return a value on all code paths</source>
        <target state="new">Property doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedGlobalNamespace">
        <source>Global namespace may not be nested in another namespace.</source>
        <target state="new">Global namespace may not be nested in another namespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AccessMismatch6">
        <source>'{0}' cannot expose type '{1}' in {2} '{3}' through {4} '{5}'.</source>
        <target state="new">'{0}' cannot expose type '{1}' in {2} '{3}' through {4} '{5}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadMetaDataReference1">
        <source>'{0}' cannot be referenced because it is not a valid assembly.</source>
        <target state="new">'{0}' cannot be referenced because it is not a valid assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PropertyDoesntImplementAllAccessors">
        <source>'{0}' cannot be implemented by a {1} property.</source>
        <target state="new">'{0}' cannot be implemented by a {1} property.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnimplementedMustOverride">
        <source>
    {0}: {1}</source>
        <target state="new">
    {0}: {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IfTooManyTypesObjectDisallowed">
        <source>Cannot infer a common type because more than one type is possible.</source>
        <target state="new">Cannot infer a common type because more than one type is possible.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IfTooManyTypesObjectAssumed">
        <source>Cannot infer a common type because more than one type is possible; 'Object' assumed.</source>
        <target state="new">Cannot infer a common type because more than one type is possible; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IfTooManyTypesObjectAssumed_Title">
        <source>Cannot infer a common type because more than one type is possible</source>
        <target state="new">Cannot infer a common type because more than one type is possible</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IfNoTypeObjectDisallowed">
        <source>Cannot infer a common type, and Option Strict On does not allow 'Object' to be assumed.</source>
        <target state="new">Cannot infer a common type, and Option Strict On does not allow 'Object' to be assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IfNoTypeObjectAssumed">
        <source>Cannot infer a common type; 'Object' assumed.</source>
        <target state="new">Cannot infer a common type; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_IfNoTypeObjectAssumed_Title">
        <source>Cannot infer a common type</source>
        <target state="new">Cannot infer a common type</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IfNoType">
        <source>Cannot infer a common type.</source>
        <target state="new">Cannot infer a common type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PublicKeyFileFailure">
        <source>Error extracting public key from file '{0}': {1}</source>
        <target state="new">Error extracting public key from file '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PublicKeyContainerFailure">
        <source>Error extracting public key from container '{0}': {1}</source>
        <target state="new">Error extracting public key from container '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendRefNotEqualToThis">
        <source>Friend access was granted by '{0}', but the public key of the output assembly does not match that specified by the attribute in the granting assembly.</source>
        <target state="new">Friend access was granted by '{0}', but the public key of the output assembly does not match that specified by the attribute in the granting assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FriendRefSigningMismatch">
        <source>Friend access was granted by '{0}', but the strong name signing state of the output assembly does not match that of the granting assembly.</source>
        <target state="new">Friend access was granted by '{0}', but the strong name signing state of the output assembly does not match that of the granting assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PublicSignNoKey">
        <source>Public sign was specified and requires a public key, but no public key was specified</source>
        <target state="new">Public sign was specified and requires a public key, but no public key was specified</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PublicSignNetModule">
        <source>Public signing is not supported for netmodules.</source>
        <target state="new">Public signing is not supported for netmodules.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AttributeIgnoredWhenPublicSigning">
        <source>Attribute '{0}' is ignored when public signing is specified.</source>
        <target state="new">Attribute '{0}' is ignored when public signing is specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AttributeIgnoredWhenPublicSigning_Title">
        <source>Attribute is ignored when public signing is specified.</source>
        <target state="new">Attribute is ignored when public signing is specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DelaySignButNoKey">
        <source>Delay signing was specified and requires a public key, but no public key was specified.</source>
        <target state="new">Delay signing was specified and requires a public key, but no public key was specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DelaySignButNoKey_Title">
        <source>Delay signing was specified and requires a public key, but no public key was specified</source>
        <target state="new">Delay signing was specified and requires a public key, but no public key was specified</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SignButNoPrivateKey">
        <source>Key file '{0}' is missing the private key needed for signing.</source>
        <target state="new">Key file '{0}' is missing the private key needed for signing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FailureSigningAssembly">
        <source>Error signing assembly '{0}': {1}</source>
        <target state="new">Error signing assembly '{0}': {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidVersionFormat">
        <source>The specified version string does not conform to the required format - major[.minor[.build|*[.revision|*]]]</source>
        <target state="new">The specified version string does not conform to the required format - major[.minor[.build|*[.revision|*]]]</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidVersionFormat">
        <source>The specified version string does not conform to the recommended format - major.minor.build.revision</source>
        <target state="new">The specified version string does not conform to the recommended format - major.minor.build.revision</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_InvalidVersionFormat_Title">
        <source>The specified version string does not conform to the recommended format</source>
        <target state="new">The specified version string does not conform to the recommended format</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidVersionFormat2">
        <source>The specified version string does not conform to the recommended format - major.minor.build.revision</source>
        <target state="new">The specified version string does not conform to the recommended format - major.minor.build.revision</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAssemblyCultureForExe">
        <source>Executables cannot be satellite assemblies; culture should always be empty</source>
        <target state="new">Executables cannot be satellite assemblies; culture should always be empty</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MainIgnored">
        <source>The entry point of the program is global script code; ignoring '{0}' entry point.</source>
        <target state="new">The entry point of the program is global script code; ignoring '{0}' entry point.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_MainIgnored_Title">
        <source>The entry point of the program is global script code; ignoring entry point</source>
        <target state="new">The entry point of the program is global script code; ignoring entry point</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EmptyPrefixAndXmlnsLocalName">
        <source>The xmlns attribute has special meaning and should not be written with a prefix.</source>
        <target state="new">The xmlns attribute has special meaning and should not be written with a prefix.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_EmptyPrefixAndXmlnsLocalName_Title">
        <source>The xmlns attribute has special meaning and should not be written with a prefix</source>
        <target state="new">The xmlns attribute has special meaning and should not be written with a prefix</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PrefixAndXmlnsLocalName">
        <source>It is not recommended to have attributes named xmlns. Did you mean to write 'xmlns:{0}' to define a prefix named '{0}'?</source>
        <target state="new">It is not recommended to have attributes named xmlns. Did you mean to write 'xmlns:{0}' to define a prefix named '{0}'?</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PrefixAndXmlnsLocalName_Title">
        <source>It is not recommended to have attributes named xmlns</source>
        <target state="new">It is not recommended to have attributes named xmlns</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedSingleScript">
        <source>Expected a single script (.vbx file)</source>
        <target state="new">Expected a single script (.vbx file)</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReservedAssemblyName">
        <source>The assembly name '{0}' is reserved and cannot be used as a reference in an interactive session</source>
        <target state="new">The assembly name '{0}' is reserved and cannot be used as a reference in an interactive session</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReferenceDirectiveOnlyAllowedInScripts">
        <source>#R is only allowed in scripts</source>
        <target state="new">#R is only allowed in scripts</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NamespaceNotAllowedInScript">
        <source>You cannot declare Namespace in script code</source>
        <target state="new">You cannot declare Namespace in script code</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_KeywordNotAllowedInScript">
        <source>You cannot use '{0}' in top-level script code</source>
        <target state="new">You cannot use '{0}' in top-level script code</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaNoType">
        <source>Cannot infer a return type.  Consider adding an 'As' clause to specify the return type.</source>
        <target state="new">Cannot infer a return type.  Consider adding an 'As' clause to specify the return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaNoTypeObjectAssumed">
        <source>Cannot infer a return type; 'Object' assumed.</source>
        <target state="new">Cannot infer a return type; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaNoTypeObjectAssumed_Title">
        <source>Cannot infer a return type</source>
        <target state="new">Cannot infer a return type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaTooManyTypesObjectAssumed">
        <source>Cannot infer a return type because more than one type is possible; 'Object' assumed.</source>
        <target state="new">Cannot infer a return type because more than one type is possible; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_LambdaTooManyTypesObjectAssumed_Title">
        <source>Cannot infer a return type because more than one type is possible</source>
        <target state="new">Cannot infer a return type because more than one type is possible</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaNoTypeObjectDisallowed">
        <source>Cannot infer a return type. Consider adding an 'As' clause to specify the return type.</source>
        <target state="new">Cannot infer a return type. Consider adding an 'As' clause to specify the return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LambdaTooManyTypesObjectDisallowed">
        <source>Cannot infer a return type because more than one type is possible. Consider adding an 'As' clause to specify the return type.</source>
        <target state="new">Cannot infer a return type because more than one type is possible. Consider adding an 'As' clause to specify the return type.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnimplementedCommandLineSwitch">
        <source>The command line switch '{0}' is not yet implemented and was ignored.</source>
        <target state="new">The command line switch '{0}' is not yet implemented and was ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnimplementedCommandLineSwitch_Title">
        <source>Command line switch is not yet implemented</source>
        <target state="new">Command line switch is not yet implemented</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitNoTypeObjectDisallowed">
        <source>Cannot infer an element type, and Option Strict On does not allow 'Object' to be assumed. Specifying the type of the array might correct this error.</source>
        <target state="new">Cannot infer an element type, and Option Strict On does not allow 'Object' to be assumed. Specifying the type of the array might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitNoType">
        <source>Cannot infer an element type. Specifying the type of the array might correct this error.</source>
        <target state="new">Cannot infer an element type. Specifying the type of the array might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ArrayInitTooManyTypesObjectDisallowed">
        <source>Cannot infer an element type because more than one type is possible. Specifying the type of the array might correct this error.</source>
        <target state="new">Cannot infer an element type because more than one type is possible. Specifying the type of the array might correct this error.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayInitNoTypeObjectAssumed">
        <source>Cannot infer an element type; 'Object' assumed.</source>
        <target state="new">Cannot infer an element type; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayInitNoTypeObjectAssumed_Title">
        <source>Cannot infer an element type</source>
        <target state="new">Cannot infer an element type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayInitTooManyTypesObjectAssumed">
        <source>Cannot infer an element type because more than one type is possible; 'Object' assumed.</source>
        <target state="new">Cannot infer an element type because more than one type is possible; 'Object' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ArrayInitTooManyTypesObjectAssumed_Title">
        <source>Cannot infer an element type because more than one type is possible</source>
        <target state="new">Cannot infer an element type because more than one type is possible</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeInferenceAssumed3">
        <source>Data type of '{0}' in '{1}' could not be inferred. '{2}' assumed.</source>
        <target state="new">Data type of '{0}' in '{1}' could not be inferred. '{2}' assumed.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TypeInferenceAssumed3_Title">
        <source>Data type could not be inferred</source>
        <target state="new">Data type could not be inferred</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AmbiguousCastConversion2">
        <source>Option Strict On does not allow implicit conversions from '{0}' to '{1}' because the conversion is ambiguous.</source>
        <target state="new">Option Strict On does not allow implicit conversions from '{0}' to '{1}' because the conversion is ambiguous.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AmbiguousCastConversion2">
        <source>Conversion from '{0}' to '{1}' may be ambiguous.</source>
        <target state="new">Conversion from '{0}' to '{1}' may be ambiguous.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AmbiguousCastConversion2_Title">
        <source>Conversion may be ambiguous</source>
        <target state="new">Conversion may be ambiguous</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceIEnumerableSuggestion3">
        <source>'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceIEnumerableSuggestion3">
        <source>'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider using '{2}' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceIEnumerableSuggestion3_Title">
        <source>Type cannot be converted to target collection type</source>
        <target state="new">Type cannot be converted to target collection type</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceConversionFailedIn6">
        <source>'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</source>
        <target state="new">'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceConversionFailedOut6">
        <source>'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</source>
        <target state="new">'{4}' cannot be converted to '{5}' because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedIn6">
        <source>Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</source>
        <target state="new">Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'In' generic parameter '{2}' in '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedIn6_Title">
        <source>Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'In' generic parameter</source>
        <target state="new">Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'In' generic parameter</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedOut6">
        <source>Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</source>
        <target state="new">Implicit conversion from '{4}' to '{5}'; this conversion may fail because '{0}' is not derived from '{1}', as required for the 'Out' generic parameter '{2}' in '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedOut6_Title">
        <source>Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'Out' generic parameter</source>
        <target state="new">Implicit conversion; this conversion may fail because the target type is not derived from the source type, as required for 'Out' generic parameter</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceConversionFailedTryIn4">
        <source>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceConversionFailedTryOut4">
        <source>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedTryIn4">
        <source>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an In type parameter, 'In {2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedTryIn4_Title">
        <source>Type cannot be converted to target type</source>
        <target state="new">Type cannot be converted to target type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedTryOut4">
        <source>'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</source>
        <target state="new">'{0}' cannot be converted to '{1}'. Consider changing the '{2}' in the definition of '{3}' to an Out type parameter, 'Out {2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceConversionFailedTryOut4_Title">
        <source>Type cannot be converted to target type</source>
        <target state="new">Type cannot be converted to target type</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceDeclarationAmbiguous3">
        <source>Interface '{0}' is ambiguous with another implemented interface '{1}' due to the 'In' and 'Out' parameters in '{2}'.</source>
        <target state="new">Interface '{0}' is ambiguous with another implemented interface '{1}' due to the 'In' and 'Out' parameters in '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_VarianceDeclarationAmbiguous3_Title">
        <source>Interface is ambiguous with another implemented interface due to 'In' and 'Out' parameters</source>
        <target state="new">Interface is ambiguous with another implemented interface due to 'In' and 'Out' parameters</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInterfaceNesting">
        <source>Enumerations, classes, and structures cannot be declared in an interface that has an 'In' or 'Out' type parameter.</source>
        <target state="new">Enumerations, classes, and structures cannot be declared in an interface that has an 'In' or 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VariancePreventsSynthesizedEvents2">
        <source>Event definitions with parameters are not allowed in an interface such as '{0}' that has 'In' or 'Out' type parameters. Consider declaring the event by using a delegate type which is not defined within '{0}'. For example, 'Event {1} As Action(Of ...)'.</source>
        <target state="new">Event definitions with parameters are not allowed in an interface such as '{0}' that has 'In' or 'Out' type parameters. Consider declaring the event by using a delegate type which is not defined within '{0}'. For example, 'Event {1} As Action(Of ...)'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInByRefDisallowed1">
        <source>Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInNullableDisallowed2">
        <source>Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInParamDisallowed1">
        <source>Type '{0}' cannot be used in this context because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in this context because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInParamDisallowedForGeneric3">
        <source>Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInParamDisallowedHere2">
        <source>Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInParamDisallowedHereForGeneric4">
        <source>Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInPropertyDisallowed1">
        <source>Type '{0}' cannot be used as a property type in this context because '{0}' is an 'In' type parameter and the property is not marked WriteOnly.</source>
        <target state="new">Type '{0}' cannot be used as a property type in this context because '{0}' is an 'In' type parameter and the property is not marked WriteOnly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInReadOnlyPropertyDisallowed1">
        <source>Type '{0}' cannot be used as a ReadOnly property type because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used as a ReadOnly property type because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceInReturnDisallowed1">
        <source>Type '{0}' cannot be used as a return type because '{0}' is an 'In' type parameter.</source>
        <target state="new">Type '{0}' cannot be used as a return type because '{0}' is an 'In' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutByRefDisallowed1">
        <source>Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in this context because 'In' and 'Out' type parameters cannot be used for ByRef parameter types, and '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutByValDisallowed1">
        <source>Type '{0}' cannot be used as a ByVal parameter type because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used as a ByVal parameter type because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutConstraintDisallowed1">
        <source>Type '{0}' cannot be used as a generic type constraint because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used as a generic type constraint because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutNullableDisallowed2">
        <source>Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in '{1}' because 'In' and 'Out' type parameters cannot be made nullable, and '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutParamDisallowed1">
        <source>Type '{0}' cannot be used in this context because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in this context because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutParamDisallowedForGeneric3">
        <source>Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used for the '{1}' in '{2}' in this context because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutParamDisallowedHere2">
        <source>Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used in '{1}' in this context because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutParamDisallowedHereForGeneric4">
        <source>Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used for the '{2}' of '{3}' in '{1}' in this context because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutPropertyDisallowed1">
        <source>Type '{0}' cannot be used as a property type in this context because '{0}' is an 'Out' type parameter and the property is not marked ReadOnly.</source>
        <target state="new">Type '{0}' cannot be used as a property type in this context because '{0}' is an 'Out' type parameter and the property is not marked ReadOnly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceOutWriteOnlyPropertyDisallowed1">
        <source>Type '{0}' cannot be used as a WriteOnly property type because '{0}' is an 'Out' type parameter.</source>
        <target state="new">Type '{0}' cannot be used as a WriteOnly property type because '{0}' is an 'Out' type parameter.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceTypeDisallowed2">
        <source>Type '{0}' cannot be used in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</source>
        <target state="new">Type '{0}' cannot be used in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceTypeDisallowedForGeneric4">
        <source>Type '{0}' cannot be used for the '{2}' in '{3}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</source>
        <target state="new">Type '{0}' cannot be used for the '{2}' in '{3}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceTypeDisallowedHere3">
        <source>Type '{0}' cannot be used in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</source>
        <target state="new">Type '{0}' cannot be used in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_VarianceTypeDisallowedHereForGeneric5">
        <source>Type '{0}' cannot be used for the '{3}' of '{4}' in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</source>
        <target state="new">Type '{0}' cannot be used for the '{3}' of '{4}' in '{2}' in this context because both the context and the definition of '{0}' are nested within interface '{1}', and '{1}' has 'In' or 'Out' type parameters. Consider moving the definition of '{0}' outside of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParameterNotValidForType">
        <source>Parameter not valid for the specified unmanaged type.</source>
        <target state="new">Parameter not valid for the specified unmanaged type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MarshalUnmanagedTypeNotValidForFields">
        <source>Unmanaged type '{0}' not valid for fields.</source>
        <target state="new">Unmanaged type '{0}' not valid for fields.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MarshalUnmanagedTypeOnlyValidForFields">
        <source>Unmanaged type '{0}' is only valid for fields.</source>
        <target state="new">Unmanaged type '{0}' is only valid for fields.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeParameterRequired1">
        <source>Attribute parameter '{0}' must be specified.</source>
        <target state="new">Attribute parameter '{0}' must be specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeParameterRequired2">
        <source>Attribute parameter '{0}' or '{1}' must be specified.</source>
        <target state="new">Attribute parameter '{0}' or '{1}' must be specified.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MemberConflictWithSynth4">
        <source>Conflicts with '{0}', which is implicitly declared for '{1}' in {2} '{3}'.</source>
        <target state="new">Conflicts with '{0}', which is implicitly declared for '{1}' in {2} '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_ProjectSettingsLocationName">
        <source>&lt;project settings&gt;</source>
        <target state="new">&lt;project settings&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ReturnTypeAttributeOnWriteOnlyProperty">
        <source>Attributes applied on a return type of a WriteOnly Property have no effect.</source>
        <target state="new">Attributes applied on a return type of a WriteOnly Property have no effect.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ReturnTypeAttributeOnWriteOnlyProperty_Title">
        <source>Attributes applied on a return type of a WriteOnly Property have no effect</source>
        <target state="new">Attributes applied on a return type of a WriteOnly Property have no effect</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityAttributeInvalidTarget">
        <source>Security attribute '{0}' is not valid on this declaration type. Security attributes are only valid on assembly, type and method declarations.</source>
        <target state="new">Security attribute '{0}' is not valid on this declaration type. Security attributes are only valid on assembly, type and method declarations.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AbsentReferenceToPIA1">
        <source>Cannot find the interop type that matches the embedded type '{0}'. Are you missing an assembly reference?</source>
        <target state="new">Cannot find the interop type that matches the embedded type '{0}'. Are you missing an assembly reference?</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLinkClassWithNoPIA1">
        <source>Reference to class '{0}' is not allowed when its assembly is configured to embed interop types.</source>
        <target state="new">Reference to class '{0}' is not allowed when its assembly is configured to embed interop types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidStructMemberNoPIA1">
        <source>Embedded interop structure '{0}' can contain only public instance fields.</source>
        <target state="new">Embedded interop structure '{0}' can contain only public instance fields.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoPIAAttributeMissing2">
        <source>Interop type '{0}' cannot be embedded because it is missing the required '{1}' attribute.</source>
        <target state="new">Interop type '{0}' cannot be embedded because it is missing the required '{1}' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PIAHasNoAssemblyGuid1">
        <source>Cannot embed interop types from assembly '{0}' because it is missing the '{1}' attribute.</source>
        <target state="new">Cannot embed interop types from assembly '{0}' because it is missing the '{1}' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateLocalTypes3">
        <source>Cannot embed interop type '{0}' found in both assembly '{1}' and '{2}'. Consider disabling the embedding of interop types.</source>
        <target state="new">Cannot embed interop type '{0}' found in both assembly '{1}' and '{2}'. Consider disabling the embedding of interop types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PIAHasNoTypeLibAttribute1">
        <source>Cannot embed interop types from assembly '{0}' because it is missing either the '{1}' attribute or the '{2}' attribute.</source>
        <target state="new">Cannot embed interop types from assembly '{0}' because it is missing either the '{1}' attribute or the '{2}' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SourceInterfaceMustBeInterface">
        <source>Interface '{0}' has an invalid source interface which is required to embed event '{1}'.</source>
        <target state="new">Interface '{0}' has an invalid source interface which is required to embed event '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventNoPIANoBackingMember">
        <source>Source interface '{0}' is missing method '{1}', which is required to embed event '{2}'.</source>
        <target state="new">Source interface '{0}' is missing method '{1}', which is required to embed event '{2}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestedInteropType">
        <source>Nested type '{0}' cannot be embedded.</source>
        <target state="new">Nested type '{0}' cannot be embedded.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LocalTypeNameClash2">
        <source>Embedding the interop type '{0}' from assembly '{1}' causes a name clash in the current assembly. Consider disabling the embedding of interop types.</source>
        <target state="new">Embedding the interop type '{0}' from assembly '{1}' causes a name clash in the current assembly. Consider disabling the embedding of interop types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InteropMethodWithBody1">
        <source>Embedded interop method '{0}' contains a body.</source>
        <target state="new">Embedded interop method '{0}' contains a body.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAsyncInQuery">
        <source>'Await' may only be used in a query expression within the first collection expression of the initial 'From' clause or within the collection expression of a 'Join' clause.</source>
        <target state="new">'Await' may only be used in a query expression within the first collection expression of the initial 'From' clause or within the collection expression of a 'Join' clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadGetAwaiterMethod1">
        <source>'Await' requires that the type '{0}' have a suitable GetAwaiter method.</source>
        <target state="new">'Await' requires that the type '{0}' have a suitable GetAwaiter method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadIsCompletedOnCompletedGetResult2">
        <source>'Await' requires that the return type '{0}' of '{1}.GetAwaiter()' have suitable IsCompleted, OnCompleted and GetResult members, and implement INotifyCompletion or ICriticalNotifyCompletion.</source>
        <target state="new">'Await' requires that the return type '{0}' of '{1}.GetAwaiter()' have suitable IsCompleted, OnCompleted and GetResult members, and implement INotifyCompletion or ICriticalNotifyCompletion.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DoesntImplementAwaitInterface2">
        <source>'{0}' does not implement '{1}'.</source>
        <target state="new">'{0}' does not implement '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitNothing">
        <source>Cannot await Nothing. Consider awaiting 'Task.Yield()' instead.</source>
        <target state="new">Cannot await Nothing. Consider awaiting 'Task.Yield()' instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAsyncByRefParam">
        <source>Async methods cannot have ByRef parameters.</source>
        <target state="new">Async methods cannot have ByRef parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAsyncIteratorModifiers">
        <source>'Async' and 'Iterator' modifiers cannot be used together.</source>
        <target state="new">'Async' and 'Iterator' modifiers cannot be used together.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadResumableAccessReturnVariable">
        <source>The implicit return variable of an Iterator or Async method cannot be accessed.</source>
        <target state="new">The implicit return variable of an Iterator or Async method cannot be accessed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReturnFromNonGenericTaskAsync">
        <source>'Return' statements in this Async method cannot return a value since the return type of the function is 'Task'. Consider changing the function's return type to 'Task(Of T)'.</source>
        <target state="new">'Return' statements in this Async method cannot return a value since the return type of the function is 'Task'. Consider changing the function's return type to 'Task(Of T)'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAsyncReturnOperand1">
        <source>Since this is an async method, the return expression must be of type '{0}' rather than 'Task(Of {0})'.</source>
        <target state="new">Since this is an async method, the return expression must be of type '{0}' rather than 'Task(Of {0})'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAsyncReturn">
        <source>The 'Async' modifier can only be used on Subs, or on Functions that return Task or Task(Of T).</source>
        <target state="new">The 'Async' modifier can only be used on Subs, or on Functions that return Task or Task(Of T).</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantAwaitAsyncSub1">
        <source>'{0}' does not return a Task and cannot be awaited. Consider changing it to an Async Function.</source>
        <target state="new">'{0}' does not return a Task and cannot be awaited. Consider changing it to an Async Function.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidLambdaModifier">
        <source>'Only the 'Async' or 'Iterator' modifier is valid on a lambda.</source>
        <target state="new">'Only the 'Async' or 'Iterator' modifier is valid on a lambda.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitInNonAsyncMethod">
        <source>'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task(Of {0})'.</source>
        <target state="new">'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task(Of {0})'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitInNonAsyncVoidMethod">
        <source>'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task'.</source>
        <target state="new">'Await' can only be used within an Async method. Consider marking this method with the 'Async' modifier and changing its return type to 'Task'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitInNonAsyncLambda">
        <source>'Await' can only be used within an Async lambda expression. Consider marking this lambda expression with the 'Async' modifier.</source>
        <target state="new">'Await' can only be used within an Async lambda expression. Consider marking this lambda expression with the 'Async' modifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitNotInAsyncMethodOrLambda">
        <source>'Await' can only be used when contained within a method or lambda expression marked with the 'Async' modifier.</source>
        <target state="new">'Await' can only be used when contained within a method or lambda expression marked with the 'Async' modifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_StatementLambdaInExpressionTree">
        <source>Statement lambdas cannot be converted to expression trees.</source>
        <target state="new">Statement lambdas cannot be converted to expression trees.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnobservedAwaitableExpression">
        <source>Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the Await operator to the result of the call.</source>
        <target state="new">Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the Await operator to the result of the call.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnobservedAwaitableExpression_Title">
        <source>Because this call is not awaited, execution of the current method continues before the call is completed</source>
        <target state="new">Because this call is not awaited, execution of the current method continues before the call is completed</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LoopControlMustNotAwait">
        <source>Loop control variable cannot include an 'Await'.</source>
        <target state="new">Loop control variable cannot include an 'Await'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadStaticInitializerInResumable">
        <source>Static variables cannot appear inside Async or Iterator methods.</source>
        <target state="new">Static variables cannot appear inside Async or Iterator methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RestrictedResumableType1">
        <source>'{0}' cannot be used as a parameter type for an Iterator or Async method.</source>
        <target state="new">'{0}' cannot be used as a parameter type for an Iterator or Async method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstructorAsync">
        <source>Constructor must not have the 'Async' modifier.</source>
        <target state="new">Constructor must not have the 'Async' modifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodsMustNotBeAsync1">
        <source>'{0}' cannot be declared 'Partial' because it has the 'Async' modifier.</source>
        <target state="new">'{0}' cannot be declared 'Partial' because it has the 'Async' modifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ResumablesCannotContainOnError">
        <source>'On Error' and 'Resume' cannot appear inside async or iterator methods.</source>
        <target state="new">'On Error' and 'Resume' cannot appear inside async or iterator methods.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ResumableLambdaInExpressionTree">
        <source>Lambdas with the 'Async' or 'Iterator' modifiers cannot be converted to expression trees.</source>
        <target state="new">Lambdas with the 'Async' or 'Iterator' modifiers cannot be converted to expression trees.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotLiftRestrictedTypeResumable1">
        <source>Variable of restricted type '{0}' cannot be declared in an Async or Iterator method.</source>
        <target state="new">Variable of restricted type '{0}' cannot be declared in an Async or Iterator method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAwaitInTryHandler">
        <source>'Await' cannot be used inside a 'Catch' statement, a 'Finally' statement, or a 'SyncLock' statement.</source>
        <target state="new">'Await' cannot be used inside a 'Catch' statement, a 'Finally' statement, or a 'SyncLock' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AsyncLacksAwaits">
        <source>This async method lacks 'Await' operators and so will run synchronously. Consider using the 'Await' operator to await non-blocking API calls, or 'Await Task.Run(...)' to do CPU-bound work on a background thread.</source>
        <target state="new">This async method lacks 'Await' operators and so will run synchronously. Consider using the 'Await' operator to await non-blocking API calls, or 'Await Task.Run(...)' to do CPU-bound work on a background thread.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AsyncLacksAwaits_Title">
        <source>This async method lacks 'Await' operators and so will run synchronously</source>
        <target state="new">This async method lacks 'Await' operators and so will run synchronously</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnobservedAwaitableDelegate">
        <source>The Task returned from this Async Function will be dropped, and any exceptions in it ignored. Consider changing it to an Async Sub so its exceptions are propagated.</source>
        <target state="new">The Task returned from this Async Function will be dropped, and any exceptions in it ignored. Consider changing it to an Async Sub so its exceptions are propagated.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnobservedAwaitableDelegate_Title">
        <source>The Task returned from this Async Function will be dropped, and any exceptions in it ignored</source>
        <target state="new">The Task returned from this Async Function will be dropped, and any exceptions in it ignored</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityCriticalAsyncInClassOrStruct">
        <source>Async and Iterator methods are not allowed in a [Class|Structure|Interface|Module] that has the 'SecurityCritical' or 'SecuritySafeCritical' attribute.</source>
        <target state="new">Async and Iterator methods are not allowed in a [Class|Structure|Interface|Module] that has the 'SecurityCritical' or 'SecuritySafeCritical' attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SecurityCriticalAsync">
        <source>Security attribute '{0}' cannot be applied to an Async or Iterator method.</source>
        <target state="new">Security attribute '{0}' cannot be applied to an Async or Iterator method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DllImportOnResumableMethod">
        <source>'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to an Async or Iterator method.</source>
        <target state="new">'System.Runtime.InteropServices.DllImportAttribute' cannot be applied to an Async or Iterator method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SynchronizedAsyncMethod">
        <source>'MethodImplOptions.Synchronized' cannot be applied to an Async method.</source>
        <target state="new">'MethodImplOptions.Synchronized' cannot be applied to an Async method.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AsyncSubMain">
        <source>The 'Main' method cannot be marked 'Async'.</source>
        <target state="new">The 'Main' method cannot be marked 'Async'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AsyncSubCouldBeFunction">
        <source>Some overloads here take an Async Function rather than an Async Sub. Consider either using an Async Function, or casting this Async Sub explicitly to the desired type.</source>
        <target state="new">Some overloads here take an Async Function rather than an Async Sub. Consider either using an Async Function, or casting this Async Sub explicitly to the desired type.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AsyncSubCouldBeFunction_Title">
        <source>Some overloads here take an Async Function rather than an Async Sub</source>
        <target state="new">Some overloads here take an Async Function rather than an Async Sub</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MyGroupCollectionAttributeCycle">
        <source>MyGroupCollectionAttribute cannot be applied to itself.</source>
        <target state="new">MyGroupCollectionAttribute cannot be applied to itself.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LiteralExpected">
        <source>Literal expected.</source>
        <target state="new">Literal expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_WinRTEventWithoutDelegate">
        <source>Event declarations that target WinMD must specify a delegate type.  Add an As clause to the event declaration.</source>
        <target state="new">Event declarations that target WinMD must specify a delegate type.  Add an As clause to the event declaration.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MixingWinRTAndNETEvents">
        <source>Event '{0}' cannot implement a Windows Runtime event '{1}' and a regular .NET event '{2}'</source>
        <target state="new">Event '{0}' cannot implement a Windows Runtime event '{1}' and a regular .NET event '{2}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EventImplRemoveHandlerParamWrong">
        <source>Event '{0}' cannot implement event '{1}' on interface '{2}' because the parameters of their 'RemoveHandler' methods do not match.</source>
        <target state="new">Event '{0}' cannot implement event '{1}' on interface '{2}' because the parameters of their 'RemoveHandler' methods do not match.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AddParamWrongForWinRT">
        <source>The type of the 'AddHandler' method's parameter must be the same as the type of the event.</source>
        <target state="new">The type of the 'AddHandler' method's parameter must be the same as the type of the event.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RemoveParamWrongForWinRT">
        <source>In a Windows Runtime event, the type of the 'RemoveHandler' method parameter must be 'EventRegistrationToken'</source>
        <target state="new">In a Windows Runtime event, the type of the 'RemoveHandler' method parameter must be 'EventRegistrationToken'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReImplementingWinRTInterface5">
        <source>'{0}.{1}' from 'implements {2}' is already implemented by the base class '{3}'. Re-implementation of Windows Runtime Interface '{4}' is not allowed</source>
        <target state="new">'{0}.{1}' from 'implements {2}' is already implemented by the base class '{3}'. Re-implementation of Windows Runtime Interface '{4}' is not allowed</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ReImplementingWinRTInterface4">
        <source>'{0}.{1}' is already implemented by the base class '{2}'. Re-implementation of Windows Runtime Interface '{3}' is not allowed</source>
        <target state="new">'{0}.{1}' is already implemented by the base class '{2}'. Re-implementation of Windows Runtime Interface '{3}' is not allowed</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadIteratorByRefParam">
        <source>Iterator methods cannot have ByRef parameters.</source>
        <target state="new">Iterator methods cannot have ByRef parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadIteratorExpressionLambda">
        <source>Single-line lambdas cannot have the 'Iterator' modifier. Use a multiline lambda instead.</source>
        <target state="new">Single-line lambdas cannot have the 'Iterator' modifier. Use a multiline lambda instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadIteratorReturn">
        <source>Iterator functions must return either IEnumerable(Of T), or IEnumerator(Of T), or the non-generic forms IEnumerable or IEnumerator.</source>
        <target state="new">Iterator functions must return either IEnumerable(Of T), or IEnumerator(Of T), or the non-generic forms IEnumerable or IEnumerator.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadReturnValueInIterator">
        <source>To return a value from an Iterator function, use 'Yield' rather than 'Return'.</source>
        <target state="new">To return a value from an Iterator function, use 'Yield' rather than 'Return'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadYieldInNonIteratorMethod">
        <source>'Yield' can only be used in a method marked with the 'Iterator' modifier.</source>
        <target state="new">'Yield' can only be used in a method marked with the 'Iterator' modifier.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadYieldInTryHandler">
        <source>'Yield' cannot be used inside a 'Catch' statement or a 'Finally' statement.</source>
        <target state="new">'Yield' cannot be used inside a 'Catch' statement or a 'Finally' statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValWinRtEventVal1">
        <source>The AddHandler for Windows Runtime event '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</source>
        <target state="new">The AddHandler for Windows Runtime event '{0}' doesn't return a value on all code paths. Are you missing a 'Return' statement?</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_DefAsgNoRetValWinRtEventVal1_Title">
        <source>The AddHandler for Windows Runtime event doesn't return a value on all code paths</source>
        <target state="new">The AddHandler for Windows Runtime event doesn't return a value on all code paths</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodDefaultParameterValueMismatch2">
        <source>Optional parameter of a method '{0}' does not have the same default value as the corresponding parameter of the partial method '{1}'.</source>
        <target state="new">Optional parameter of a method '{0}' does not have the same default value as the corresponding parameter of the partial method '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PartialMethodParamArrayMismatch2">
        <source>Parameter of a method '{0}' differs by ParamArray modifier from the corresponding parameter of the partial method '{1}'.</source>
        <target state="new">Parameter of a method '{0}' differs by ParamArray modifier from the corresponding parameter of the partial method '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NetModuleNameMismatch">
        <source>Module name '{0}' stored in '{1}' must match its filename.</source>
        <target state="new">Module name '{0}' stored in '{1}' must match its filename.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadModuleName">
        <source>Invalid module name: {0}</source>
        <target state="new">Invalid module name: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyAttributeFromModuleIsOverridden">
        <source>Attribute '{0}' from module '{1}' will be ignored in favor of the instance appearing in source.</source>
        <target state="new">Attribute '{0}' from module '{1}' will be ignored in favor of the instance appearing in source.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AssemblyAttributeFromModuleIsOverridden_Title">
        <source>Attribute from module will be ignored in favor of the instance appearing in source</source>
        <target state="new">Attribute from module will be ignored in favor of the instance appearing in source</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CmdOptionConflictsSource">
        <source>Attribute '{0}' given in a source file conflicts with option '{1}'.</source>
        <target state="new">Attribute '{0}' given in a source file conflicts with option '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ReferencedAssemblyDoesNotHaveStrongName">
        <source>Referenced assembly '{0}' does not have a strong name.</source>
        <target state="new">Referenced assembly '{0}' does not have a strong name.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ReferencedAssemblyDoesNotHaveStrongName_Title">
        <source>Referenced assembly does not have a strong name</source>
        <target state="new">Referenced assembly does not have a strong name</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidSignaturePublicKey">
        <source>Invalid signature public key specified in AssemblySignatureKeyAttribute.</source>
        <target state="new">Invalid signature public key specified in AssemblySignatureKeyAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CollisionWithPublicTypeInModule">
        <source>Type '{0}' conflicts with public type defined in added module '{1}'.</source>
        <target state="new">Type '{0}' conflicts with public type defined in added module '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExportedTypeConflictsWithDeclaration">
        <source>Type '{0}' exported from module '{1}' conflicts with type declared in primary module of this assembly.</source>
        <target state="new">Type '{0}' exported from module '{1}' conflicts with type declared in primary module of this assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExportedTypesConflict">
        <source>Type '{0}' exported from module '{1}' conflicts with type '{2}' exported from module '{3}'.</source>
        <target state="new">Type '{0}' exported from module '{1}' conflicts with type '{2}' exported from module '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RefCultureMismatch">
        <source>Referenced assembly '{0}' has different culture setting of '{1}'.</source>
        <target state="new">Referenced assembly '{0}' has different culture setting of '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_RefCultureMismatch_Title">
        <source>Referenced assembly has different culture setting</source>
        <target state="new">Referenced assembly has different culture setting</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AgnosticToMachineModule">
        <source>Agnostic assembly cannot have a processor specific module '{0}'.</source>
        <target state="new">Agnostic assembly cannot have a processor specific module '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConflictingMachineModule">
        <source>Assembly and module '{0}' cannot target different processors.</source>
        <target state="new">Assembly and module '{0}' cannot target different processors.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConflictingMachineAssembly">
        <source>Referenced assembly '{0}' targets a different processor.</source>
        <target state="new">Referenced assembly '{0}' targets a different processor.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ConflictingMachineAssembly_Title">
        <source>Referenced assembly targets a different processor</source>
        <target state="new">Referenced assembly targets a different processor</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CryptoHashFailed">
        <source>Cryptographic failure while creating hashes.</source>
        <target state="new">Cryptographic failure while creating hashes.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantHaveWin32ResAndManifest">
        <source>Conflicting options specified: Win32 resource file; Win32 manifest.</source>
        <target state="new">Conflicting options specified: Win32 resource file; Win32 manifest.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForwardedTypeConflictsWithDeclaration">
        <source>Forwarded type '{0}' conflicts with type declared in primary module of this assembly.</source>
        <target state="new">Forwarded type '{0}' conflicts with type declared in primary module of this assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForwardedTypesConflict">
        <source>Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' forwarded to assembly '{3}'.</source>
        <target state="new">Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' forwarded to assembly '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooLongMetadataName">
        <source>Name '{0}' exceeds the maximum length allowed in metadata.</source>
        <target state="new">Name '{0}' exceeds the maximum length allowed in metadata.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MissingNetModuleReference">
        <source>Reference to '{0}' netmodule missing.</source>
        <target state="new">Reference to '{0}' netmodule missing.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NetModuleNameMustBeUnique">
        <source>Module '{0}' is already defined in this assembly. Each module must have a unique filename.</source>
        <target state="new">Module '{0}' is already defined in this assembly. Each module must have a unique filename.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ForwardedTypeConflictsWithExportedType">
        <source>Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' exported from module '{3}'.</source>
        <target state="new">Type '{0}' forwarded to assembly '{1}' conflicts with type '{2}' exported from module '{3}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_MSG_ADDREFERENCE">
        <source>Adding assembly reference '{0}'</source>
        <target state="new">Adding assembly reference '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_MSG_ADDLINKREFERENCE">
        <source>Adding embedded assembly reference '{0}'</source>
        <target state="new">Adding embedded assembly reference '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_MSG_ADDMODULE">
        <source>Adding module reference '{0}'</source>
        <target state="new">Adding module reference '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NestingViolatesCLS1">
        <source>Type '{0}' does not inherit the generic type parameters of its container.</source>
        <target state="new">Type '{0}' does not inherit the generic type parameters of its container.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PDBWritingFailed">
        <source>Failure writing debug information: {0}</source>
        <target state="new">Failure writing debug information: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ParamDefaultValueDiffersFromAttribute">
        <source>The parameter has multiple distinct default values.</source>
        <target state="new">The parameter has multiple distinct default values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FieldHasMultipleDistinctConstantValues">
        <source>The field has multiple distinct constant values.</source>
        <target state="new">The field has multiple distinct constant values.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EncNoPIAReference">
        <source>Cannot continue since the edit includes a reference to an embedded type: '{0}'.</source>
        <target state="new">Cannot continue since the edit includes a reference to an embedded type: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EncReferenceToAddedMember">
        <source>Member '{0}' added during the current debug session can only be accessed from within its declaring assembly '{1}'.</source>
        <target state="new">Member '{0}' added during the current debug session can only be accessed from within its declaring assembly '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedModule1">
        <source>'{0}' is an unsupported .NET module.</source>
        <target state="new">'{0}' is an unsupported .NET module.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnsupportedEvent1">
        <source>'{0}' is an unsupported event.</source>
        <target state="new">'{0}' is an unsupported event.</target>
        <note />
      </trans-unit>
      <trans-unit id="PropertiesCanNotHaveTypeArguments">
        <source>Properties can not have type arguments</source>
        <target state="new">Properties can not have type arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="IdentifierSyntaxNotWithinSyntaxTree">
        <source>IdentifierSyntax not within syntax tree</source>
        <target state="new">IdentifierSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="AnonymousObjectCreationExpressionSyntaxNotWithinTree">
        <source>AnonymousObjectCreationExpressionSyntax not within syntax tree</source>
        <target state="new">AnonymousObjectCreationExpressionSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="FieldInitializerSyntaxNotWithinSyntaxTree">
        <source>FieldInitializerSyntax not within syntax tree</source>
        <target state="new">FieldInitializerSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_TheSystemCannotFindThePathSpecified">
        <source>The system cannot find the path specified</source>
        <target state="new">The system cannot find the path specified</target>
        <note />
      </trans-unit>
      <trans-unit id="ThereAreNoPointerTypesInVB">
        <source>There are no pointer types in VB.</source>
        <target state="new">There are no pointer types in VB.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThereIsNoDynamicTypeInVB">
        <source>There is no dynamic type in VB.</source>
        <target state="new">There is no dynamic type in VB.</target>
        <note />
      </trans-unit>
      <trans-unit id="VariableSyntaxNotWithinSyntaxTree">
        <source>variableSyntax not within syntax tree</source>
        <target state="new">variableSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="AggregateSyntaxNotWithinSyntaxTree">
        <source>AggregateSyntax not within syntax tree</source>
        <target state="new">AggregateSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="FunctionSyntaxNotWithinSyntaxTree">
        <source>FunctionSyntax not within syntax tree</source>
        <target state="new">FunctionSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="PositionIsNotWithinSyntax">
        <source>Position is not within syntax tree</source>
        <target state="new">Position is not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="RangeVariableSyntaxNotWithinSyntaxTree">
        <source>RangeVariableSyntax not within syntax tree</source>
        <target state="new">RangeVariableSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarationSyntaxNotWithinSyntaxTree">
        <source>DeclarationSyntax not within syntax tree</source>
        <target state="new">DeclarationSyntax not within syntax tree</target>
        <note />
      </trans-unit>
      <trans-unit id="StatementOrExpressionIsNotAValidType">
        <source>StatementOrExpression is not an ExecutableStatementSyntax or an ExpressionSyntax</source>
        <target state="new">StatementOrExpression is not an ExecutableStatementSyntax or an ExpressionSyntax</target>
        <note />
      </trans-unit>
      <trans-unit id="DeclarationSyntaxNotWithinTree">
        <source>DeclarationSyntax not within tree</source>
        <target state="new">DeclarationSyntax not within tree</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeParameterNotWithinTree">
        <source>TypeParameter not within tree</source>
        <target state="new">TypeParameter not within tree</target>
        <note />
      </trans-unit>
      <trans-unit id="NotWithinTree">
        <source> not within tree</source>
        <target state="new"> not within tree</target>
        <note />
      </trans-unit>
      <trans-unit id="LocationMustBeProvided">
        <source>Location must be provided in order to provide minimal type qualification.</source>
        <target state="new">Location must be provided in order to provide minimal type qualification.</target>
        <note />
      </trans-unit>
      <trans-unit id="SemanticModelMustBeProvided">
        <source>SemanticModel must be provided in order to provide minimal type qualification.</source>
        <target state="new">SemanticModel must be provided in order to provide minimal type qualification.</target>
        <note />
      </trans-unit>
      <trans-unit id="NumberOfTypeParametersAndArgumentsMustMatch">
        <source>the number of type parameters and arguments should be the same</source>
        <target state="new">the number of type parameters and arguments should be the same</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ResourceInModule">
        <source>Cannot link resource files when building a module</source>
        <target state="new">Cannot link resource files when building a module</target>
        <note />
      </trans-unit>
      <trans-unit id="NotAVbSymbol">
        <source>Not a VB symbol.</source>
        <target state="new">Not a VB symbol.</target>
        <note />
      </trans-unit>
      <trans-unit id="ElementsCannotBeNull">
        <source>Elements cannot be null.</source>
        <target state="new">Elements cannot be null.</target>
        <note />
      </trans-unit>
      <trans-unit id="HDN_UnusedImportClause">
        <source>Unused import clause.</source>
        <target state="new">Unused import clause.</target>
        <note />
      </trans-unit>
      <trans-unit id="HDN_UnusedImportStatement">
        <source>Unused import statement.</source>
        <target state="new">Unused import statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="WrongSemanticModelType">
        <source>Expected a {0} SemanticModel.</source>
        <target state="new">Expected a {0} SemanticModel.</target>
        <note />
      </trans-unit>
      <trans-unit id="PositionNotWithinTree">
        <source>Position must be within span of the syntax tree.</source>
        <target state="new">Position must be within span of the syntax tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="SpeculatedSyntaxNodeCannotBelongToCurrentCompilation">
        <source>Syntax node to be speculated cannot belong to a syntax tree from the current compilation.</source>
        <target state="new">Syntax node to be speculated cannot belong to a syntax tree from the current compilation.</target>
        <note />
      </trans-unit>
      <trans-unit id="ChainingSpeculativeModelIsNotSupported">
        <source>Chaining speculative semantic model is not supported. You should create a speculative model from the non-speculative ParentModel.</source>
        <target state="new">Chaining speculative semantic model is not supported. You should create a speculative model from the non-speculative ParentModel.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_ToolName">
        <source>Microsoft (R) Visual Basic Compiler</source>
        <target state="new">Microsoft (R) Visual Basic Compiler</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LogoLine1">
        <source>{0} version {1}</source>
        <target state="new">{0} version {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LogoLine2">
        <source>Copyright (C) Microsoft Corporation. All rights reserved.</source>
        <target state="new">Copyright (C) Microsoft Corporation. All rights reserved.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LangVersions">
        <source>Supported language versions:</source>
        <target state="new">Supported language versions:</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_VBCHelp">
        <source>                  Visual Basic Compiler Options

                                  - OUTPUT FILE -
/out:&lt;file&gt;                       Specifies the output file name.
/target:exe                       Create a console application (default). 
                                  (Short form: /t)
/target:winexe                    Create a Windows application.
/target:library                   Create a library assembly.
/target:module                    Create a module that can be added to an 
                                  assembly.
/target:appcontainerexe           Create a Windows application that runs in 
                                  AppContainer.
/target:winmdobj                  Create a Windows Metadata intermediate file
/doc[+|-]                         Generates XML documentation file.
/doc:&lt;file&gt;                       Generates XML documentation file to &lt;file&gt;.
/refout:&lt;file&gt;                    Reference assembly output to generate

                                  - INPUT FILES -
/addmodule:&lt;file_list&gt;            Reference metadata from the specified modules
/link:&lt;file_list&gt;                 Embed metadata from the specified interop 
                                  assembly. (Short form: /l)
/recurse:&lt;wildcard&gt;               Include all files in the current directory 
                                  and subdirectories according to the
                                  wildcard specifications.
/reference:&lt;file_list&gt;            Reference metadata from the specified 
                                  assembly. (Short form: /r)
/analyzer:&lt;file_list&gt;             Run the analyzers from this assembly
                                  (Short form: /a)
/additionalfile:&lt;file list&gt;       Additional files that don't directly affect code
                                  generation but may be used by analyzers for producing
                                  errors or warnings.

                                  - RESOURCES -
/linkresource:&lt;resinfo&gt;           Links the specified file as an external 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /linkres)
/nowin32manifest                  The default manifest should not be embedded 
                                  in the manifest section of the output PE.
/resource:&lt;resinfo&gt;               Adds the specified file as an embedded 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /res)
/win32icon:&lt;file&gt;                 Specifies a Win32 icon file (.ico) for the 
                                  default Win32 resources.
/win32manifest:&lt;file&gt;             The provided file is embedded in the manifest
                                  section of the output PE.
/win32resource:&lt;file&gt;             Specifies a Win32 resource file (.res).

                                  - CODE GENERATION -
/optimize[+|-]                    Enable optimizations.
/removeintchecks[+|-]             Remove integer checks. Default off.
/debug[+|-]                       Emit debugging information.
/debug:full                       Emit full debugging information (default).
/debug:pdbonly                    Emit full debugging information.
/debug:portable                   Emit cross-platform debugging information.
/debug:embedded                   Emit cross-platform debugging information into 
                                  the target .dll or .exe.
/deterministic                    Produce a deterministic assembly
                                  (including module version GUID and timestamp)
/refonly                          Produce a reference assembly in place of the main output
/instrument:TestCoverage          Produce an assembly instrumented to collect
                                  coverage information
/sourcelink:&lt;file&gt;                Source link info to embed into PDB.

                                  - ERRORS AND WARNINGS -
/nowarn                           Disable all warnings.
/nowarn:&lt;number_list&gt;             Disable a list of individual warnings.
/warnaserror[+|-]                 Treat all warnings as errors.
/warnaserror[+|-]:&lt;number_list&gt;   Treat a list of warnings as errors.
/ruleset:&lt;file&gt;                   Specify a ruleset file that disables specific
                                  diagnostics.
/errorlog:&lt;file&gt;                  Specify a file to log all compiler and analyzer
                                  diagnostics.
/reportanalyzer                   Report additional analyzer information, such as
                                  execution time.

                                  - LANGUAGE -
/define:&lt;symbol_list&gt;             Declare global conditional compilation 
                                  symbol(s). symbol_list:name=value,... 
                                  (Short form: /d)
/imports:&lt;import_list&gt;            Declare global Imports for namespaces in 
                                  referenced metadata files. 
                                  import_list:namespace,...
/langversion:?                    Display the allowed values for language version
/langversion:&lt;string&gt;             Specify language version such as
                                  `default` (latest major version), or
                                  `latest` (latest version, including minor versions),
                                  or specific versions like `14` or `15.3`
/optionexplicit[+|-]              Require explicit declaration of variables.
/optioninfer[+|-]                 Allow type inference of variables.
/rootnamespace:&lt;string&gt;           Specifies the root Namespace for all type 
                                  declarations.
/optionstrict[+|-]                Enforce strict language semantics.
/optionstrict:custom              Warn when strict language semantics are not
                                  respected.
/optioncompare:binary             Specifies binary-style string comparisons.
                                  This is the default.
/optioncompare:text               Specifies text-style string comparisons.

                                  - MISCELLANEOUS -
/help                             Display this usage message. (Short form: /?)
/noconfig                         Do not auto-include VBC.RSP file.
/nologo                           Do not display compiler copyright banner.
/quiet                            Quiet output mode.
/verbose                          Display verbose messages.
/parallel[+|-]                    Concurrent build. 
/version                          Display the compiler version number and exit.

                                  - ADVANCED -
/baseaddress:&lt;number&gt;             The base address for a library or module 
                                  (hex).
/checksumalgorithm:&lt;alg&gt;          Specify algorithm for calculating source file 
                                  checksum stored in PDB. Supported values are:
                                  SHA1 (default) or SHA256.
/codepage:&lt;number&gt;                Specifies the codepage to use when opening 
                                  source files.
/delaysign[+|-]                   Delay-sign the assembly using only the public
                                  portion of the strong name key.
/publicsign[+|-]                  Public-sign the assembly using only the public
                                  portion of the strong name key.
/errorreport:&lt;string&gt;             Specifies how to handle internal compiler
                                  errors; must be prompt, send, none, or queue
                                  (default).
/filealign:&lt;number&gt;               Specify the alignment used for output file 
                                  sections.
/highentropyva[+|-]               Enable high-entropy ASLR.
/keycontainer:&lt;string&gt;            Specifies a strong name key container.
/keyfile:&lt;file&gt;                   Specifies a strong name key file.
/libpath:&lt;path_list&gt;              List of directories to search for metadata 
                                  references. (Semi-colon delimited.)
/main:&lt;class&gt;                     Specifies the Class or Module that contains 
                                  Sub Main. It can also be a Class that 
                                  inherits from System.Windows.Forms.Form. 
                                  (Short form: /m)
/moduleassemblyname:&lt;string&gt;      Name of the assembly which this module will 
                                  be a part of.
/netcf                            Target the .NET Compact Framework.
/nostdlib                         Do not reference standard libraries 
                                  (system.dll and VBC.RSP file).
/pathmap:&lt;K1&gt;=&lt;V1&gt;,&lt;K2&gt;=&lt;V2&gt;,...
                                  Specify a mapping for source path names output by
                                  the compiler.
/platform:&lt;string&gt;                Limit which platforms this code can run on; 
                                  must be x86, x64, Itanium, arm,
                                  AnyCPU32BitPreferred or anycpu (default).
/preferreduilang                  Specify the preferred output language name.
/sdkpath:&lt;path&gt;                   Location of the .NET Framework SDK directory
                                  (mscorlib.dll).
/subsystemversion:&lt;version&gt;       Specify subsystem version of the output PE. 
                                  version:&lt;number&gt;[.&lt;number&gt;]
/utf8output[+|-]                  Emit compiler output in UTF8 character 
                                  encoding.
@&lt;file&gt;                           Insert command-line settings from a text file
/vbruntime[+|-|*]                 Compile with/without the default Visual Basic
                                  runtime.
/vbruntime:&lt;file&gt;                 Compile with the alternate Visual Basic 
                                  runtime in &lt;file&gt;.
</source>
        <target state="new">                  Visual Basic Compiler Options

                                  - OUTPUT FILE -
/out:&lt;file&gt;                       Specifies the output file name.
/target:exe                       Create a console application (default). 
                                  (Short form: /t)
/target:winexe                    Create a Windows application.
/target:library                   Create a library assembly.
/target:module                    Create a module that can be added to an 
                                  assembly.
/target:appcontainerexe           Create a Windows application that runs in 
                                  AppContainer.
/target:winmdobj                  Create a Windows Metadata intermediate file
/doc[+|-]                         Generates XML documentation file.
/doc:&lt;file&gt;                       Generates XML documentation file to &lt;file&gt;.
/refout:&lt;file&gt;                    Reference assembly output to generate

                                  - INPUT FILES -
/addmodule:&lt;file_list&gt;            Reference metadata from the specified modules
/link:&lt;file_list&gt;                 Embed metadata from the specified interop 
                                  assembly. (Short form: /l)
/recurse:&lt;wildcard&gt;               Include all files in the current directory 
                                  and subdirectories according to the
                                  wildcard specifications.
/reference:&lt;file_list&gt;            Reference metadata from the specified 
                                  assembly. (Short form: /r)
/analyzer:&lt;file_list&gt;             Run the analyzers from this assembly
                                  (Short form: /a)
/additionalfile:&lt;file list&gt;       Additional files that don't directly affect code
                                  generation but may be used by analyzers for producing
                                  errors or warnings.

                                  - RESOURCES -
/linkresource:&lt;resinfo&gt;           Links the specified file as an external 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /linkres)
/nowin32manifest                  The default manifest should not be embedded 
                                  in the manifest section of the output PE.
/resource:&lt;resinfo&gt;               Adds the specified file as an embedded 
                                  assembly resource.
                                  resinfo:&lt;file&gt;[,&lt;name&gt;[,public|private]] 
                                  (Short form: /res)
/win32icon:&lt;file&gt;                 Specifies a Win32 icon file (.ico) for the 
                                  default Win32 resources.
/win32manifest:&lt;file&gt;             The provided file is embedded in the manifest
                                  section of the output PE.
/win32resource:&lt;file&gt;             Specifies a Win32 resource file (.res).

                                  - CODE GENERATION -
/optimize[+|-]                    Enable optimizations.
/removeintchecks[+|-]             Remove integer checks. Default off.
/debug[+|-]                       Emit debugging information.
/debug:full                       Emit full debugging information (default).
/debug:pdbonly                    Emit full debugging information.
/debug:portable                   Emit cross-platform debugging information.
/debug:embedded                   Emit cross-platform debugging information into 
                                  the target .dll or .exe.
/deterministic                    Produce a deterministic assembly
                                  (including module version GUID and timestamp)
/refonly                          Produce a reference assembly in place of the main output
/instrument:TestCoverage          Produce an assembly instrumented to collect
                                  coverage information
/sourcelink:&lt;file&gt;                Source link info to embed into PDB.

                                  - ERRORS AND WARNINGS -
/nowarn                           Disable all warnings.
/nowarn:&lt;number_list&gt;             Disable a list of individual warnings.
/warnaserror[+|-]                 Treat all warnings as errors.
/warnaserror[+|-]:&lt;number_list&gt;   Treat a list of warnings as errors.
/ruleset:&lt;file&gt;                   Specify a ruleset file that disables specific
                                  diagnostics.
/errorlog:&lt;file&gt;                  Specify a file to log all compiler and analyzer
                                  diagnostics.
/reportanalyzer                   Report additional analyzer information, such as
                                  execution time.

                                  - LANGUAGE -
/define:&lt;symbol_list&gt;             Declare global conditional compilation 
                                  symbol(s). symbol_list:name=value,... 
                                  (Short form: /d)
/imports:&lt;import_list&gt;            Declare global Imports for namespaces in 
                                  referenced metadata files. 
                                  import_list:namespace,...
/langversion:?                    Display the allowed values for language version
/langversion:&lt;string&gt;             Specify language version such as
                                  `default` (latest major version), or
                                  `latest` (latest version, including minor versions),
                                  or specific versions like `14` or `15.3`
/optionexplicit[+|-]              Require explicit declaration of variables.
/optioninfer[+|-]                 Allow type inference of variables.
/rootnamespace:&lt;string&gt;           Specifies the root Namespace for all type 
                                  declarations.
/optionstrict[+|-]                Enforce strict language semantics.
/optionstrict:custom              Warn when strict language semantics are not
                                  respected.
/optioncompare:binary             Specifies binary-style string comparisons.
                                  This is the default.
/optioncompare:text               Specifies text-style string comparisons.

                                  - MISCELLANEOUS -
/help                             Display this usage message. (Short form: /?)
/noconfig                         Do not auto-include VBC.RSP file.
/nologo                           Do not display compiler copyright banner.
/quiet                            Quiet output mode.
/verbose                          Display verbose messages.
/parallel[+|-]                    Concurrent build. 
/version                          Display the compiler version number and exit.

                                  - ADVANCED -
/baseaddress:&lt;number&gt;             The base address for a library or module 
                                  (hex).
/checksumalgorithm:&lt;alg&gt;          Specify algorithm for calculating source file 
                                  checksum stored in PDB. Supported values are:
                                  SHA1 (default) or SHA256.
/codepage:&lt;number&gt;                Specifies the codepage to use when opening 
                                  source files.
/delaysign[+|-]                   Delay-sign the assembly using only the public
                                  portion of the strong name key.
/publicsign[+|-]                  Public-sign the assembly using only the public
                                  portion of the strong name key.
/errorreport:&lt;string&gt;             Specifies how to handle internal compiler
                                  errors; must be prompt, send, none, or queue
                                  (default).
/filealign:&lt;number&gt;               Specify the alignment used for output file 
                                  sections.
/highentropyva[+|-]               Enable high-entropy ASLR.
/keycontainer:&lt;string&gt;            Specifies a strong name key container.
/keyfile:&lt;file&gt;                   Specifies a strong name key file.
/libpath:&lt;path_list&gt;              List of directories to search for metadata 
                                  references. (Semi-colon delimited.)
/main:&lt;class&gt;                     Specifies the Class or Module that contains 
                                  Sub Main. It can also be a Class that 
                                  inherits from System.Windows.Forms.Form. 
                                  (Short form: /m)
/moduleassemblyname:&lt;string&gt;      Name of the assembly which this module will 
                                  be a part of.
/netcf                            Target the .NET Compact Framework.
/nostdlib                         Do not reference standard libraries 
                                  (system.dll and VBC.RSP file).
/pathmap:&lt;K1&gt;=&lt;V1&gt;,&lt;K2&gt;=&lt;V2&gt;,...
                                  Specify a mapping for source path names output by
                                  the compiler.
/platform:&lt;string&gt;                Limit which platforms this code can run on; 
                                  must be x86, x64, Itanium, arm,
                                  AnyCPU32BitPreferred or anycpu (default).
/preferreduilang                  Specify the preferred output language name.
/sdkpath:&lt;path&gt;                   Location of the .NET Framework SDK directory
                                  (mscorlib.dll).
/subsystemversion:&lt;version&gt;       Specify subsystem version of the output PE. 
                                  version:&lt;number&gt;[.&lt;number&gt;]
/utf8output[+|-]                  Emit compiler output in UTF8 character 
                                  encoding.
@&lt;file&gt;                           Insert command-line settings from a text file
/vbruntime[+|-|*]                 Compile with/without the default Visual Basic
                                  runtime.
/vbruntime:&lt;file&gt;                 Compile with the alternate Visual Basic 
                                  runtime in &lt;file&gt;.
</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PdbLocalNameTooLong">
        <source>Local name '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</source>
        <target state="new">Local name '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PdbLocalNameTooLong_Title">
        <source>Local name is too long for PDB</source>
        <target state="new">Local name is too long for PDB</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PdbUsingNameTooLong">
        <source>Import string '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</source>
        <target state="new">Import string '{0}' is too long for PDB.  Consider shortening or compiling without /debug.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_PdbUsingNameTooLong_Title">
        <source>Import string is too long for PDB</source>
        <target state="new">Import string is too long for PDB</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocCrefToTypeParameter">
        <source>XML comment has a tag with a 'cref' attribute '{0}' that bound to a type parameter.  Use the &lt;typeparamref&gt; tag instead.</source>
        <target state="new">XML comment has a tag with a 'cref' attribute '{0}' that bound to a type parameter.  Use the &lt;typeparamref&gt; tag instead.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_XMLDocCrefToTypeParameter_Title">
        <source>XML comment has a tag with a 'cref' attribute that bound to a type parameter</source>
        <target state="new">XML comment has a tag with a 'cref' attribute that bound to a type parameter</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LinkedNetmoduleMetadataMustProvideFullPEImage">
        <source>Linked netmodule metadata must provide a full PE image: '{0}'.</source>
        <target state="new">Linked netmodule metadata must provide a full PE image: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AnalyzerCannotBeCreated">
        <source>An instance of analyzer {0} cannot be created from {1} : {2}.</source>
        <target state="new">An instance of analyzer {0} cannot be created from {1} : {2}.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_AnalyzerCannotBeCreated_Title">
        <source>Instance of analyzer cannot be created</source>
        <target state="new">Instance of analyzer cannot be created</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoAnalyzerInAssembly">
        <source>The assembly {0} does not contain any analyzers.</source>
        <target state="new">The assembly {0} does not contain any analyzers.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_NoAnalyzerInAssembly_Title">
        <source>Assembly does not contain any analyzers</source>
        <target state="new">Assembly does not contain any analyzers</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnableToLoadAnalyzer">
        <source>Unable to load analyzer assembly {0} : {1}.</source>
        <target state="new">Unable to load analyzer assembly {0} : {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnableToLoadAnalyzer_Title">
        <source>Unable to load analyzer assembly</source>
        <target state="new">Unable to load analyzer assembly</target>
        <note />
      </trans-unit>
      <trans-unit id="INF_UnableToLoadSomeTypesInAnalyzer">
        <source>Skipping some types in analyzer assembly {0} due to a ReflectionTypeLoadException : {1}.</source>
        <target state="new">Skipping some types in analyzer assembly {0} due to a ReflectionTypeLoadException : {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="INF_UnableToLoadSomeTypesInAnalyzer_Title">
        <source>Skip loading types in analyzer assembly that fail due to a ReflectionTypeLoadException</source>
        <target state="new">Skip loading types in analyzer assembly that fail due to a ReflectionTypeLoadException</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantReadRulesetFile">
        <source>Error reading ruleset file {0} - {1}</source>
        <target state="new">Error reading ruleset file {0} - {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PlatformDoesntSupport">
        <source>{0} is not supported in current project type.</source>
        <target state="new">{0} is not supported in current project type.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantUseRequiredAttribute">
        <source>The RequiredAttribute attribute is not permitted on Visual Basic types.</source>
        <target state="new">The RequiredAttribute attribute is not permitted on Visual Basic types.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_EncodinglessSyntaxTree">
        <source>Cannot emit debug information for a source text without encoding.</source>
        <target state="new">Cannot emit debug information for a source text without encoding.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidFormatSpecifier">
        <source>'{0}' is not a valid format specifier</source>
        <target state="new">'{0}' is not a valid format specifier</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidPreprocessorConstantType">
        <source>Preprocessor constant '{0}' of type '{1}' is not supported, only primitive types are allowed.</source>
        <target state="new">Preprocessor constant '{0}' of type '{1}' is not supported, only primitive types are allowed.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpectedWarningKeyword">
        <source>'Warning' expected.</source>
        <target state="new">'Warning' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotBeMadeNullable1">
        <source>'{0}' cannot be made nullable.</source>
        <target state="new">'{0}' cannot be made nullable.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadConditionalWithRef">
        <source>Leading '?' can only appear inside a 'With' statement, but not inside an object member initializer.</source>
        <target state="new">Leading '?' can only appear inside a 'With' statement, but not inside an object member initializer.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NullPropagatingOpInExpressionTree">
        <source>A null propagating operator cannot be converted into an expression tree.</source>
        <target state="new">A null propagating operator cannot be converted into an expression tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooLongOrComplexExpression">
        <source>An expression is too long or complex to compile</source>
        <target state="new">An expression is too long or complex to compile</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpressionDoesntHaveName">
        <source>This expression does not have a name.</source>
        <target state="new">This expression does not have a name.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidNameOfSubExpression">
        <source>This sub-expression cannot be used inside NameOf argument.</source>
        <target state="new">This sub-expression cannot be used inside NameOf argument.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MethodTypeArgsUnexpected">
        <source>Method type arguments unexpected.</source>
        <target state="new">Method type arguments unexpected.</target>
        <note />
      </trans-unit>
      <trans-unit id="NoNoneSearchCriteria">
        <source>SearchCriteria is expected.</source>
        <target state="new">SearchCriteria is expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAssemblyCulture">
        <source>Assembly culture strings may not contain embedded NUL characters.</source>
        <target state="new">Assembly culture strings may not contain embedded NUL characters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InReferencedAssembly">
        <source>There is an error in a referenced assembly '{0}'.</source>
        <target state="new">There is an error in a referenced assembly '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterpolationFormatWhitespace">
        <source>Format specifier may not contain trailing whitespace.</source>
        <target state="new">Format specifier may not contain trailing whitespace.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterpolationAlignmentOutOfRange">
        <source>Alignment value is outside of the supported range.</source>
        <target state="new">Alignment value is outside of the supported range.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InterpolatedStringFactoryError">
        <source>There were one or more errors emitting a call to {0}.{1}. Method or its return type may be missing or malformed.</source>
        <target state="new">There were one or more errors emitting a call to {0}.{1}. Method or its return type may be missing or malformed.</target>
        <note />
      </trans-unit>
      <trans-unit id="HDN_UnusedImportClause_Title">
        <source>Unused import clause</source>
        <target state="new">Unused import clause</target>
        <note />
      </trans-unit>
      <trans-unit id="HDN_UnusedImportStatement_Title">
        <source>Unused import statement</source>
        <target state="new">Unused import statement</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ConstantStringTooLong">
        <source>Length of String constant exceeds current memory limit.  Try splitting the string into multiple constants.</source>
        <target state="new">Length of String constant exceeds current memory limit.  Try splitting the string into multiple constants.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_LanguageVersion">
        <source>Visual Basic {0} does not support {1}.</source>
        <target state="new">Visual Basic {0} does not support {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadPdbData">
        <source>Error reading debug information for '{0}'</source>
        <target state="new">Error reading debug information for '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_ArrayLiterals">
        <source>array literal expressions</source>
        <target state="new">array literal expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_AsyncExpressions">
        <source>async methods or lambdas</source>
        <target state="new">async methods or lambdas</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_AutoProperties">
        <source>auto-implemented properties</source>
        <target state="new">auto-implemented properties</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_ReadonlyAutoProperties">
        <source>readonly auto-implemented properties</source>
        <target state="new">readonly auto-implemented properties</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_CoContraVariance">
        <source>variance</source>
        <target state="new">variance</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_CollectionInitializers">
        <source>collection initializers</source>
        <target state="new">collection initializers</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_GlobalNamespace">
        <source>declaring a Global namespace</source>
        <target state="new">declaring a Global namespace</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_Iterators">
        <source>iterators</source>
        <target state="new">iterators</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_LineContinuation">
        <source>implicit line continuation</source>
        <target state="new">implicit line continuation</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_StatementLambdas">
        <source>multi-line lambda expressions</source>
        <target state="new">multi-line lambda expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_SubLambdas">
        <source>'Sub' lambda expressions</source>
        <target state="new">'Sub' lambda expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_NullPropagatingOperator">
        <source>null conditional operations</source>
        <target state="new">null conditional operations</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_NameOfExpressions">
        <source>'nameof' expressions</source>
        <target state="new">'nameof' expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_RegionsEverywhere">
        <source>region directives within method bodies or regions crossing boundaries of declaration blocks</source>
        <target state="new">region directives within method bodies or regions crossing boundaries of declaration blocks</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_MultilineStringLiterals">
        <source>multiline string literals</source>
        <target state="new">multiline string literals</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_CObjInAttributeArguments">
        <source>CObj in attribute arguments</source>
        <target state="new">CObj in attribute arguments</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_LineContinuationComments">
        <source>line continuation comments</source>
        <target state="new">line continuation comments</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_TypeOfIsNot">
        <source>TypeOf IsNot expression</source>
        <target state="new">TypeOf IsNot expression</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_YearFirstDateLiterals">
        <source>year-first date literals</source>
        <target state="new">year-first date literals</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_WarningDirectives">
        <source>warning directives</source>
        <target state="new">warning directives</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_PartialModules">
        <source>partial modules</source>
        <target state="new">partial modules</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_PartialInterfaces">
        <source>partial interfaces</source>
        <target state="new">partial interfaces</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_ImplementingReadonlyOrWriteonlyPropertyWithReadwrite">
        <source>implementing read-only or write-only property with read-write property</source>
        <target state="new">implementing read-only or write-only property with read-write property</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_DigitSeparators">
        <source>digit separators</source>
        <target state="new">digit separators</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_BinaryLiterals">
        <source>binary literals</source>
        <target state="new">binary literals</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_Tuples">
        <source>tuples</source>
        <target state="new">tuples</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_PrivateProtected">
        <source>Private Protected</source>
        <target state="new">Private Protected</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DebugEntryPointNotSourceMethodDefinition">
        <source>Debug entry point must be a definition of a method declared in the current compilation.</source>
        <target state="new">Debug entry point must be a definition of a method declared in the current compilation.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidPathMap">
        <source>The pathmap option was incorrectly formatted.</source>
        <target state="new">The pathmap option was incorrectly formatted.</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeIsNotASubmission">
        <source>Syntax tree should be created from a submission.</source>
        <target state="new">Syntax tree should be created from a submission.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyUserStrings">
        <source>Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string or XML literals.</source>
        <target state="new">Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string or XML literals.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_PeWritingFailure">
        <source>An error occurred while writing the output file: {0}</source>
        <target state="new">An error occurred while writing the output file: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OptionMustBeAbsolutePath">
        <source>Option '{0}' must be an absolute path.</source>
        <target state="new">Option '{0}' must be an absolute path.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SourceLinkRequiresPdb">
        <source>/sourcelink switch is only supported when emitting PDB.</source>
        <target state="new">/sourcelink switch is only supported when emitting PDB.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleDuplicateElementName">
        <source>Tuple element names must be unique.</source>
        <target state="new">Tuple element names must be unique.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TupleLiteralNameMismatch">
        <source>The tuple element name '{0}' is ignored because a different name or no name is specified by the target type '{1}'.</source>
        <target state="new">The tuple element name '{0}' is ignored because a different name or no name is specified by the target type '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_TupleLiteralNameMismatch_Title">
        <source>The tuple element name is ignored because a different name or no name is specified by the assignment target.</source>
        <target state="new">The tuple element name is ignored because a different name or no name is specified by the assignment target.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleReservedElementName">
        <source>Tuple element name '{0}' is only allowed at position {1}.</source>
        <target state="new">Tuple element name '{0}' is only allowed at position {1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleReservedElementNameAnyPosition">
        <source>Tuple element name '{0}' is disallowed at any position.</source>
        <target state="new">Tuple element name '{0}' is disallowed at any position.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleTooFewElements">
        <source>Tuple must contain at least two elements.</source>
        <target state="new">Tuple must contain at least two elements.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleElementNamesAttributeMissing">
        <source>Cannot define a class or member that utilizes tuples because the compiler required type '{0}' cannot be found. Are you missing a reference?</source>
        <target state="new">Cannot define a class or member that utilizes tuples because the compiler required type '{0}' cannot be found. Are you missing a reference?</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExplicitTupleElementNamesAttribute">
        <source>Cannot reference 'System.Runtime.CompilerServices.TupleElementNamesAttribute' explicitly. Use the tuple syntax to define tuple names.</source>
        <target state="new">Cannot reference 'System.Runtime.CompilerServices.TupleElementNamesAttribute' explicitly. Use the tuple syntax to define tuple names.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_RefReturningCallInExpressionTree">
        <source>An expression tree may not contain a call to a method or property that returns by reference.</source>
        <target state="new">An expression tree may not contain a call to a method or property that returns by reference.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CannotEmbedWithoutPdb">
        <source>/embed switch is only supported when emitting a PDB.</source>
        <target state="new">/embed switch is only supported when emitting a PDB.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidInstrumentationKind">
        <source>Invalid instrumentation kind: {0}</source>
        <target state="new">Invalid instrumentation kind: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DocFileGen">
        <source>Error writing to XML documentation file: {0}</source>
        <target state="new">Error writing to XML documentation file: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadAssemblyName">
        <source>Invalid assembly name: {0}</source>
        <target state="new">Invalid assembly name: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeForwardedToMultipleAssemblies">
        <source>Module '{0}' in assembly '{1}' is forwarding the type '{2}' to multiple assemblies: '{3}' and '{4}'.</source>
        <target state="new">Module '{0}' in assembly '{1}' is forwarding the type '{2}' to multiple assemblies: '{3}' and '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_Merge_conflict_marker_encountered">
        <source>Merge conflict marker encountered</source>
        <target state="new">Merge conflict marker encountered</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoRefOutWhenRefOnly">
        <source>Do not use refout when using refonly.</source>
        <target state="new">Do not use refout when using refonly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NoNetModuleOutputWhenRefOutOrRefOnly">
        <source>Cannot compile net modules when using /refout or /refonly.</source>
        <target state="new">Cannot compile net modules when using /refout or /refonly.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadNonTrailingNamedArgument">
        <source>Named argument '{0}' is used out-of-position but is followed by an unnamed argument</source>
        <target state="new">Named argument '{0}' is used out-of-position but is followed by an unnamed argument</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadDocumentationMode">
        <source>Provided documentation mode is unsupported or invalid: '{0}'.</source>
        <target state="new">Provided documentation mode is unsupported or invalid: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadLanguageVersion">
        <source>Provided language version is unsupported or invalid: '{0}'.</source>
        <target state="new">Provided language version is unsupported or invalid: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadSourceCodeKind">
        <source>Provided source code kind is unsupported or invalid: '{0}'</source>
        <target state="new">Provided source code kind is unsupported or invalid: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TupleInferredNamesNotAvailable">
        <source>Tuple element name '{0}' is inferred. Please use language version {1} or greater to access an element by its inferred name.</source>
        <target state="new">Tuple element name '{0}' is inferred. Please use language version {1} or greater to access an element by its inferred name.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_Experimental">
        <source>'{0}' is for evaluation purposes only and is subject to change or removal in future updates.</source>
        <target state="new">'{0}' is for evaluation purposes only and is subject to change or removal in future updates.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_Experimental_Title">
        <source>Type is for evaluation purposes only and is subject to change or removal in future updates.</source>
        <target state="new">Type is for evaluation purposes only and is subject to change or removal in future updates.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidDebugInfo">
        <source>Unable to read debug information of method '{0}' (token 0x{1}) from assembly '{2}'</source>
        <target state="new">Unable to read debug information of method '{0}' (token 0x{1}) from assembly '{2}'</target>
        <note />
      </trans-unit>
      <trans-unit id="IConversionExpressionIsNotVisualBasicConversion">
        <source>{0} is not a valid Visual Basic conversion expression</source>
        <target state="new">{0} is not a valid Visual Basic conversion expression</target>
        <note />
      </trans-unit>
      <trans-unit id="IArgumentIsNotVisualBasicArgument">
        <source>{0} is not a valid Visual Basic argument</source>
        <target state="new">{0} is not a valid Visual Basic argument</target>
        <note />
      </trans-unit>
      <trans-unit id="FEATURE_LeadingDigitSeparator">
        <source>leading digit separator</source>
        <target state="new">leading digit separator</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ValueTupleResolutionAmbiguous3">
        <source>Predefined type '{0}' is declared in multiple referenced assemblies: '{1}' and '{2}'</source>
        <target state="new">Predefined type '{0}' is declared in multiple referenced assemblies: '{1}' and '{2}'</target>
        <note />
      </trans-unit>
      <trans-unit id="ICompoundAssignmentOperationIsNotVisualBasicCompoundAssignment">
        <source>{0} is not a valid Visual Basic compound assignment operation</source>
        <target state="new">{0} is not a valid Visual Basic compound assignment operation</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>