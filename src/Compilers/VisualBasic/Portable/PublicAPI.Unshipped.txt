Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax.WithAsKeyword(asKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithCloseParenToken(closeParenToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithCommaToken(commaToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithKeyword(keyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithOpenParenToken(openParenToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithType(type As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.WithHashToken(hashToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax.WithKeyKeyword(keyKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.AddNextStatementControlVariables(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.AddStatements(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.WithNextStatement(nextStatement As Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.WithStatements(statements As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.WithControlVariable(controlVariable As Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.WithForKeyword(forKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax.WithKeyword(keyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddAdditionalJoins(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddJoinConditions(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddJoinedVariables(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithAdditionalJoins(additionalJoins As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinConditions(joinConditions As Microsoft.CodeAnalysis.SeparatedSyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinKeyword(joinKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinedVariables(joinedVariables As Microsoft.CodeAnalysis.SeparatedSyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithOnKeyword(onKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax.WithSubOrFunctionHeader(subOrFunctionHeader As Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddAttributeLists(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddModifiers(ParamArray items As Microsoft.CodeAnalysis.SyntaxToken()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddParameterListParameters(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithAttributeLists(attributeLists As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithModifiers(modifiers As Microsoft.CodeAnalysis.SyntaxTokenList) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithParameterList(parameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.AddStatements(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithStatements(statements As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.AddAttributeLists(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.WithAttributeLists(attributeLists As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.WithNewKeyword(newKeyword As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax.WithIdentifier(identifier As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddImplements(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddInherits(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddMembers(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithImplements(implements As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithInherits(inherits As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithMembers(members As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddAttributeLists(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddModifiers(ParamArray items As Microsoft.CodeAnalysis.SyntaxToken()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddTypeParameterListParameters(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithAttributeLists(attributeLists As Microsoft.CodeAnalysis.SyntaxList(Of Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithIdentifier(identifier As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithModifiers(modifiers As Microsoft.CodeAnalysis.SyntaxTokenList) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithTypeParameterList(typeParameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ClassifyCommonConversion(source As Microsoft.CodeAnalysis.ITypeSymbol, destination As Microsoft.CodeAnalysis.ITypeSymbol) -> Microsoft.CodeAnalysis.Operations.CommonConversion
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ContainsSymbolsWithName(name As String, filter As Microsoft.CodeAnalysis.SymbolFilter = Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember, cancellationToken As System.Threading.CancellationToken = Nothing) -> Boolean
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetSymbolsWithName(name As String, filter As Microsoft.CodeAnalysis.SymbolFilter = Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember, cancellationToken As System.Threading.CancellationToken = Nothing) -> System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.ISymbol)
*REMOVED*Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing, publicSign As Boolean = False, reportSuppressedDiagnostics As Boolean = False) -> Void
Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic15_7 = 1507 -> Microsoft.CodeAnalysis.VisualBasic.LanguageVersion
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.EnumFlag() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.EnumFlags() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.OperatorToken() -> Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Update(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithEnumFlag(enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithEnumFlags(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithOperatorToken(operatorToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.Clear = 3 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.IsAny = 4 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.IsSet = 1 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.None = 0 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.Set = 2 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Expression() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Name() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.OperatorToken() -> Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Update(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithName(name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithOperatorToken(operatorToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumClearToken = 796 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumIsAnyToken = 798 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumIsSetToken = 794 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumOperationExpression = 793 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumOperatorSyntax = 797 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumSetToken = 795 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Overridable Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor(Of TResult).VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> TResult
Overridable Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> Void
Overrides Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Accept(Of TResult)(visitor As Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor(Of TResult)) -> TResult
Overrides Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Accept(visitor As Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor) -> Void
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> Microsoft.CodeAnalysis.SyntaxNode
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumClearToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumClearToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsAnyToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsAnyToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsSetToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsSetToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperationExpression(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperationExpression(operatorToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperator(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperator(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumSetToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumSetToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MemberAccessExpression(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MemberAccessExpression(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(expression As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(name As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsFlagsEnumOperationExpressionOperatorToken(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind) -> Boolean
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsFlagsEnumOperator(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind) -> Boolean
