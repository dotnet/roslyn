// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using Microsoft.CodeAnalysis;

namespace Metalama.Compiler;

public static class SourceGeneratedCodeTracker
{
    private sealed class Marker;

    /// <summary>
    /// At build time, determines if the specified <see cref="SyntaxTree"/> was generated by a source generator.
    /// At design time, always returns <c>false</c>.
    /// </summary>
    public static bool IsGenerated(SyntaxTree syntaxTree)
    {
#if !METALAMA_COMPILER_INTERFACE
        return AttachedProperties.Has<SyntaxTree, Marker>(syntaxTree);
#else
        return false;
#endif
    }

#if !METALAMA_COMPILER_INTERFACE
    internal static void MarkAsGenerated(SyntaxTree syntaxTree) => AttachedProperties.GetOrAdd<SyntaxTree, Marker>(syntaxTree);
#endif
}
