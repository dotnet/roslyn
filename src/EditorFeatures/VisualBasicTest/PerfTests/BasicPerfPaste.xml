<?xml version="1.0" encoding="utf-8" ?>

<!-- The measurement is based on code markers, so it measures the duration of the internal -->
<!-- rename to operation. As Dev11 and Roslyn implement rename very differently this test  -->
<!-- is not completely fair in the sense that Roslyn does more work to complete the same   -->
<!-- operation. In fact the amount of work needed is affected by the number of characters  -->
<!-- types. However, the point of the test is to measure the user experience and as such   -->
<!-- we consider the implementation details irrelevant in this case.                  -->

<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget DontResetOptions="true" />
    <EnableClosedFileDiagnostic Enabled="true" Language="Visual Basic"/>
    <OpenProject ProjectFile="C:\Roslyn\LegacyTest\RealworldProjects\RoslynSolutions\Roslyn-VB.sln" DeleteSuoFileBeforeOpening="true" DeleteIDECacheBeforeOpening="true"/>
  </InitTest>

  <ScenarioList>
    <Scenario Name="Paste" Description="Paste two functions in a big Roslyn file">
      <OpenFile FileName="Parser.vb"/>
      <!-- This should copy two functions in their entirety: "ParseSpecifierDeclaration" and "ParseEnumStatement" -->
      <GoToLine LineNumber="1105"/>
      <PlaceCursor Marker="Private Function" CharsOffset="-1" />
      <PlaceCursor Marker="Dim statement As EnumStatementSyntax = Syntax.EnumStatement(attributes, modifiers, enumKeyword, identifier, optionalUnderlyingType)" CharsOffset="52" ExtendSelection="true" />
      <ExecuteCommand Command="Edit.Copy" />
      
      <!-- This should paste those functions just above "ParseVariableDeclaration" in the same file -->
      <GoToLine LineNumber="2012"/>
      <WaitForSolutionCrawler/>
      <WaitForIdleCPU />

      <MeasureTimeStart ScenarioGroup="Paste" Step="Paste" TimeGoal="1" MemoryGoal="1" />
      <ExecuteCommand Command="Edit.Paste" />
      <MeasureTimeStop />

      <!--<VerifyRoslynModulesLoadedStatus ExpectedStatus="NoCSharp" />
      <VerifyRoslynModulesLoadedStatus ExpectedStatus="Basic" />-->
    </Scenario>
  </ScenarioList>
  
  <CleanupScenario>
    <CloseFile SaveFile="false" />
  </CleanupScenario>
  
  <CleanupTest>
    <CloseTarget />
  </CleanupTest>
</TaoTest>
