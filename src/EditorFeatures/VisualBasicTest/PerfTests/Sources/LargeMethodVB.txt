^{END}{UP}{UP}{UP}{UP}{UP}{END}{ENTER}
        str = "c4.Test()"
        If True Then
            Dim i As Integer = 2
            Console.WriteLine(str)
            If True Then
                Dim a As c1 = New c1(i)
                a.goo(i) {ESC}{DOWN}
            Dim d As Double = 1.1
            If True Then
                Dim sb As SByte = 1
                Dim a As c1 = New c1(i + (i + i))
                a.goo(sb)
                If True Then
                    a.goo(d) {ESC}{DOWN}{DOWN}

            ' Nested scopes
            If True Then
                Dim o As Object = i
                Dim b As Boolean = False
				If Not b Then
                    Dim b1 As Byte = 1
                    Dim s As String = "    This is a test"
					While Not b
                        If True Then
                            b = True {ESC}{DOWN}
						
						Console.WriteLine(s)
                        While b
                            If True Then
                                b = False {ESC}{DOWN}

                            Dim oo As Object = i
                            Dim bb As Boolean = b
                            If Not bb Then
                                If Not False Then
                                    bb = True {ESC}{DOWN}

                                Dim b11 As Byte = b1
                                Dim ss As String = s
                                If bb Then
                                    Console.WriteLine(ss)
                                    If bb <> b Then
                                        Dim ooo As Object = i
                                        Dim bbb As Boolean = bb
                                        If bbb = True Then
                                            Dim b111 As Byte = b11
                                            Dim sss As String = ss
                                            While bbb
                                                Console.WriteLine(sss)
                                                bbb = False
                                                ' Method Calls - Ref, Paramarrays
                                                ' Overloaded Abstract Methods
                                                Dim l As Long = i
                                                Dim c As c4 = New c4()
                                                c.abst(s, 1, i)
                                                c.abst(s, New Integer() {1, i, i})
                                                c.abst(s, c.abst(s, l, l), l, l, l)
                                                ' Method Calls - Ref, Paramarrays
                                                ' Overloaded Virtual Methods
                                                Dim a As c1 = New c4()
                                                c.virt(i, c, New c2(Of String)() {c.virt(i, a), New c4()})
                                                c.virt(c.virt(i, a), c.virt(i, c, c.virt(i, a)))
                                                c.virt(c.abst(s, l, l), c.abst(s, New Long() {1, i, l}))
                                                c.virt(i, a)
                                                c.virt(i, New c4(), New c4(), New c2(Of String)())
                                                c.virt(New Integer() {1, 2, 3})
                                                c.virt(New Exception() {})
                                                c.virt(New c1() {New c4(), New c2(Of String)()})
                                                If True Then
                                                    Continue While {ESC}{DOWN}{DOWN}
                                        ElseIf bbb <> True Then
                                            Console.WriteLine("Error - Should not have reached here")
                                            o = i
                                            Return DirectCast(o, Boolean)
                                        ElseIf bbb = False Then
                                            Console.WriteLine("Error - Should not have reached here")
                                            o = i
                                            Return DirectCast(o, Boolean)
                                        Else
                                            Console.WriteLine("Error - Should not have reached here")
                                            o = b
                                            Return DirectCast(o, Boolean) {ESC}{DOWN}{DOWN}
								ElseIf Not b Then
                                    Console.WriteLine("Error - Should not have reached here")
                                    Dim o1 As Object = b
                                    Return DirectCast(o1, Boolean)
                                Else
                                    Console.WriteLine("Error - Should not have reached here")
                                    Dim o1 As Object = b
                                    Return DirectCast(o1, Boolean) {ESC}{DOWN}
							ElseIf Not bb Then
                                Console.WriteLine("Error - Should not have reached here")
                                o = b
                                Return DirectCast(o, Boolean)
                            Else
                                Console.WriteLine("Error - Should not have reached here")
                                Dim o1 As Object = b
                                Return DirectCast(o1, Boolean) {ESC}{DOWN}

                            While b <> False
                                b = False
                                Exit While {ESC}{DOWN}
						
						     Exit While {ESC}{DOWN}
						
						While b <> True
                            b = True
                            Continue While {ESC}{DOWN}{DOWN}
                ElseIf b Then
                    Console.WriteLine("Error - Should not have reached here")
                    Return b
                Else
                    Console.WriteLine("Error - Should not have reached here")
                    Return b <> True {ESC}{DOWN}{DOWN}{DOWN}

        us = 0
        sh = 1
        cc = New c5()
        Console.WriteLine("c5.test")
        If True Then
            Dim ui As UInteger = 1
            Dim o As Object = ui
            Dim i As Integer = sh
            Dim b As Boolean = False
            us = 1
            If True Then
                Dim b1 As Byte = 1
                Dim l As Long = i
                Dim s1 As String = ""
                Dim s As String = ""
                Dim f As Single = 1.2F
                o = f
                l = ui
                Dim c As c4 = New c4()
                c.goo(sh)
                Me.bar(sh)
				If b = False Then
                    Dim d As Double = f
                    s1 = s {ESC}{DOWN}

                If b1 >= l Then
                    Dim ui1 As UInteger = 1
                    o = ui1
                    i = sh
                    b = False
                    us = 1
                    While i <> 1000
                        Dim b11 As Byte = 1
                        Dim l1 As Long = i
                        Dim s11 As String = s1
                        Dim f1 As Single = 1.2F
                        o = f1
                        l1 = ui1
                        c.goo(b)
                        b11 = l1
                        If Not False Then
                            Dim d1 As Double = f1
                            s1 = s
                            c.goo(b1) {ESC}{DOWN}

                        If i <> 1000 Then
                            Dim ui2 As UInteger = 1
                            o = ui2
                            i = sh
                            b = False
                            us = 1
                            If True Then
                                Dim l2 As Long = i
                                Dim s12 As String = s11
                                o = f1
                                l2 = ui1
                                If i <= 1000 Then
                                    Exit While {ESC}{DOWN}{DOWN}{DOWN}

                        If i <= 1000 Then
                            i = 1000 {ESC}{DOWN}

						Return False {ESC}{DOWN}{DOWN}{DOWN}{DOWN}
^{END}