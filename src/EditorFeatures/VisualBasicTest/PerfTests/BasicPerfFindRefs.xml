<?xml version="1.0" encoding="utf-8" ?>

<!-- This test measures the performance of the find all references operation for VB.       -->
<!-- The measurement is based on code markers, so it measures the duration of the internal -->
<!-- find all references operation.                                                        -->


<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget DontResetOptions="true" />
    <EnableClosedFileDiagnostic Enabled="true" Language="Visual Basic"/>
    <OpenProject ProjectFile="C:\Roslyn\LegacyTest\RealworldProjects\RoslynSolutions\Roslyn-VB.sln" DeleteSuoFileBeforeOpening="true" DeleteIDECacheBeforeOpening="true" />
    <OpenFile FileName="SourceNamedTypeSymbol.vb" />
    <GoToLine LineNumber="1"/>
    <PlaceCursor Marker="As SyntaxNode" />
    <WaitForSolutionCrawler/>
  </InitTest>

  <ScenarioList>
    <Scenario Name="Find All Refs" Description="Find All Refs">
      <WaitForIdleCPU />
      <ListenForCodeMarkers ScenarioGroup="Find All Refs" Step="Find Class" TimeGoal="0.1" MemoryGoal="0.9" BeginMarker="VB_FindRefsBegin" EndMarker="VB_FindRefsEnd" IsVB="true" />
      <ExecuteCommand Command="Edit.FindAllReferences" />
      <WaitForCodeMarkers />
      <!-- VS does not always handle ActivateDocumentWindow correctly, but making sure FindSymbolResults is focused seems to address the issue -->
      <!-- The issue has only been observed for VB files -->
      <ExecuteCommand Command="View.FindSymbolResults" />
      <ExecuteCommand Command="Window.ActivateDocumentWindow" />
      
      <!--<VerifyRoslynModulesLoadedStatus ExpectedStatus="NoCSharp" />
      <VerifyRoslynModulesLoadedStatus ExpectedStatus="Basic" />-->
    </Scenario>
  </ScenarioList>

  <CleanupTest>
    <CloseTarget />
  </CleanupTest>
</TaoTest>