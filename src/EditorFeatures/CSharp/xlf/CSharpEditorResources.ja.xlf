<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../CSharpEditorResources.resx">
    <body>
      <trans-unit id="Add_Missing_Usings_on_Paste">
        <source>Add Missing Usings on Paste</source>
        <target state="translated">貼り付け時に欠落している usings を追加する</target>
        <note>"usings" is a language specific term and should not be localized</note>
      </trans-unit>
      <trans-unit id="Adding_missing_usings">
        <source>Adding missing usings...</source>
        <target state="translated">欠落している usings を追加しています...</target>
        <note>Shown in a thread await dialog. "usings" is a language specific term and should not be localized</note>
      </trans-unit>
      <trans-unit id="Avoid_expression_statements_that_implicitly_ignore_value">
        <source>Avoid expression statements that implicitly ignore value</source>
        <target state="translated">値を暗黙的に無視する式ステートメントを指定しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="Avoid_unused_value_assignments">
        <source>Avoid unused value assignments</source>
        <target state="translated">使用されない値の代入を指定しないでください</target>
        <note />
      </trans-unit>
      <trans-unit id="Chosen_version_0">
        <source>Chosen version: '{0}'</source>
        <target state="translated">選択されたバージョン: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Complete_statement_on_semicolon">
        <source>Complete statement on ;</source>
        <target state="translated">ステートメントを ; で完了させてください</target>
        <note />
      </trans-unit>
      <trans-unit id="Could_not_find_by_name_0">
        <source>Could not find by name: '{0}'</source>
        <target state="translated">名前 '{0}' で見つけることができませんでした</target>
        <note />
      </trans-unit>
      <trans-unit id="Decompilation_log">
        <source>Decompilation log</source>
        <target state="translated">逆コンパイルのログ</target>
        <note />
      </trans-unit>
      <trans-unit id="Discard">
        <source>Discard</source>
        <target state="translated">破棄</target>
        <note />
      </trans-unit>
      <trans-unit id="Elsewhere">
        <source>Elsewhere</source>
        <target state="translated">その他の場所</target>
        <note />
      </trans-unit>
      <trans-unit id="Fix_interpolated_verbatim_string">
        <source>Fix interpolated verbatim string</source>
        <target state="translated">挿入された逐語的文字列を修正します</target>
        <note />
      </trans-unit>
      <trans-unit id="For_built_in_types">
        <source>For built-in types</source>
        <target state="translated">ビルトイン型の場合</target>
        <note />
      </trans-unit>
      <trans-unit id="Found_0_assemblies_for_1">
        <source>Found '{0}' assemblies for '{1}':</source>
        <target state="translated">'{1}' の '{0}' 個のアセンブリが見つかりました:</target>
        <note />
      </trans-unit>
      <trans-unit id="Found_exact_match_0">
        <source>Found exact match: '{0}'</source>
        <target state="translated">完全一致が見つかりました: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Found_higher_version_match_0">
        <source>Found higher version match: '{0}'</source>
        <target state="translated">新しいバージョンの一致が見つかりました: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Found_single_assembly_0">
        <source>Found single assembly: '{0}'</source>
        <target state="translated">1 つのアセンブリが見つかりました: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Generate_Event_Subscription">
        <source>Generate Event Subscription</source>
        <target state="translated">イベント サブスクリプションの生成</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore_spaces_in_declaration_statements">
        <source>Ignore spaces in declaration statements</source>
        <target state="translated">宣言ステートメント内のスペースを無視する</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_block_contents">
        <source>Indent block contents</source>
        <target state="translated">ブロックの内容をインデントする</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents">
        <source>Indent case contents</source>
        <target state="translated">case の内容をインデントする</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents_when_block">
        <source>Indent case contents (when block)</source>
        <target state="translated">case の内容をインデントします (ブロックする場合)</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_labels">
        <source>Indent case labels</source>
        <target state="translated">case ラベルをインデントする</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_open_and_close_braces">
        <source>Indent open and close braces</source>
        <target state="translated">始めと終わりのかっこをインデントする</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_cast">
        <source>Insert space after cast</source>
        <target state="translated">キャストの後にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space after colon for base or interface in type declaration</source>
        <target state="translated">型宣言で、基本またはインターフェイス用のコロンの後にスペースを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_comma">
        <source>Insert space after comma</source>
        <target state="translated">コンマの後にスペースを追加する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_dot">
        <source>Insert space after dot</source>
        <target state="translated">ピリオドの後にスペースを追加する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_keywords_in_control_flow_statements">
        <source>Insert space after keywords in control flow statements</source>
        <target state="translated">制御フロー ステートメント内のキーワードの後にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_semicolon_in_for_statement">
        <source>Insert space after semicolon in "for" statement</source>
        <target state="translated">"for" ステートメントでセミコロンの後にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space before colon for base or interface in type declaration</source>
        <target state="translated">型宣言で、基本またはインターフェイス用のコロンの前にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_comma">
        <source>Insert space before comma</source>
        <target state="translated">コンマの前にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_dot">
        <source>Insert space before dot</source>
        <target state="translated">ピリオドの前にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_open_square_bracket">
        <source>Insert space before open square bracket</source>
        <target state="translated">始め角かっこの前にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_semicolon_in_for_statement">
        <source>Insert space before semicolon in "for" statement</source>
        <target state="translated">"for" ステートメントの前にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis1">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="translated">メソッド名と始めかっこの間にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis2">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="translated">メソッド名と始めかっこの間にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_argument_list_parentheses">
        <source>Insert space within argument list parentheses</source>
        <target state="translated">引数リストのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_argument_list_parentheses">
        <source>Insert space within empty argument list parentheses</source>
        <target state="translated">空の引数リストのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_parameter_list_parentheses">
        <source>Insert space within empty parameter list parentheses</source>
        <target state="translated">空のパラメーター リストのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_square_brackets">
        <source>Insert space within empty square brackets</source>
        <target state="translated">空の角かっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parameter_list_parentheses">
        <source>Insert space within parameter list parentheses</source>
        <target state="translated">パラメーター リストのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parentheses_of_expressions">
        <source>Insert space within parentheses of expressions</source>
        <target state="translated">式のかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parentheses_of_type_casts">
        <source>Insert space within parentheses of type casts</source>
        <target state="translated">型キャストのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_spaces_within_parentheses_of_control_flow_statements">
        <source>Insert spaces within parentheses of control flow statements</source>
        <target state="translated">制御フロー ステートメントのかっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_spaces_within_square_brackets">
        <source>Insert spaces within square brackets</source>
        <target state="translated">角かっこ内にスペースを挿入する</target>
        <note />
      </trans-unit>
      <trans-unit id="Inside_namespace">
        <source>Inside namespace</source>
        <target state="translated">namespace 内</target>
        <note />
      </trans-unit>
      <trans-unit id="Label_Indentation">
        <source>Label Indentation</source>
        <target state="translated">ラベル インデント</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_block_on_single_line">
        <source>Leave block on single line</source>
        <target state="translated">ブロックを単一行に配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_statements_and_member_declarations_on_the_same_line">
        <source>Leave statements and member declarations on the same line</source>
        <target state="translated">1 行に複数のステートメントとメンバー宣言を表示する</target>
        <note />
      </trans-unit>
      <trans-unit id="Load_from_0">
        <source>Load from: '{0}'</source>
        <target state="translated">読み込み元: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Module_not_found">
        <source>Module not found!</source>
        <target state="translated">モジュールが見つかりません</target>
        <note />
      </trans-unit>
      <trans-unit id="Never">
        <source>Never</source>
        <target state="translated">行わない</target>
        <note />
      </trans-unit>
      <trans-unit id="Outside_namespace">
        <source>Outside namespace</source>
        <target state="translated">namespace 外</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_catch_on_new_line">
        <source>Place "catch" on new line</source>
        <target state="translated">新しい行に "catch" を配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_else_on_new_line">
        <source>Place "else" on new line</source>
        <target state="translated">新しい行に "else" を配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_finally_on_new_line">
        <source>Place "finally" on new line</source>
        <target state="translated">新しい行に "finally" を配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_anonymous_types_on_new_line">
        <source>Place members in anonymous types on new line</source>
        <target state="translated">新しい行に匿名型のメンバーを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_object_initializers_on_new_line">
        <source>Place members in object initializers on new line</source>
        <target state="translated">新しい行にオブジェクト初期化子のメンバーを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_anonymous_methods">
        <source>Place open brace on new line for anonymous methods</source>
        <target state="translated">新しい行に匿名メソッドの始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_anonymous_types">
        <source>Place open brace on new line for anonymous types</source>
        <target state="translated">新しい行に匿名型の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_control_blocks">
        <source>Place open brace on new line for control blocks</source>
        <target state="translated">新しい行にコントロール ブロック用の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_lambda_expression">
        <source>Place open brace on new line for lambda expression</source>
        <target state="translated">新しい行にラムダ式の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_methods_local_functions">
        <source>Place open brace on new line for methods and local functions</source>
        <target state="translated">新しい行にメソッドとローカル関数の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_object_collection_array_and_with_initializers">
        <source>Place open brace on new line for object, collection, array, and with initializers</source>
        <target state="translated">新しい行にオブジェクト、コレクション、配列、with 初期化子用の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_properties_indexers_and_events">
        <source>Place open brace on new line for properties, indexers, and events</source>
        <target state="translated">プロパティ、インデクサー、イベントの新しい行に始めかっこを配置します</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_property_indexer_and_event_accessors">
        <source>Place open brace on new line for property, indexer, and event accessors</source>
        <target state="translated">プロパティ、インデクサー、イベント アクセサーの新しい行に始めかっこを配置します</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line_for_types">
        <source>Place open brace on new line for types</source>
        <target state="translated">新しい行に型の始めかっこを配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_query_expression_clauses_on_new_line">
        <source>Place query expression clauses on new line</source>
        <target state="translated">新しい行にクエリ式の句を配置する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_conditional_delegate_call">
        <source>Prefer conditional delegate call</source>
        <target state="translated">条件付きの代理呼び出しを優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_deconstructed_variable_declaration">
        <source>Prefer deconstructed variable declaration</source>
        <target state="translated">分解された変数宣言を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_explicit_type">
        <source>Prefer explicit type</source>
        <target state="translated">明示的な型を優先してください</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_index_operator">
        <source>Prefer index operator</source>
        <target state="translated">インデックス演算子を優先</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_inlined_variable_declaration">
        <source>Prefer inlined variable declaration</source>
        <target state="translated">インライン変数宣言を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_local_function_over_anonymous_function">
        <source>Prefer local function over anonymous function</source>
        <target state="translated">匿名関数よりローカル関数を優先します</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_null_check_over_type_check">
        <source>Prefer 'null' check over type check</source>
        <target state="new">Prefer 'null' check over type check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching">
        <source>Prefer pattern matching</source>
        <target state="translated">パターン マッチングを優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_as_with_null_check">
        <source>Prefer pattern matching over 'as' with 'null' check</source>
        <target state="translated">as' を 'null' チェックで使用するよりもパターン マッチングを優先します</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_is_with_cast_check">
        <source>Prefer pattern matching over 'is' with 'cast' check</source>
        <target state="translated">is' を 'cast' チェックで使用するよりもパターン マッチングを優先します</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_mixed_type_check">
        <source>Prefer pattern matching over mixed type check</source>
        <target state="translated">混合型チェックよりパターン マッチングを優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_range_operator">
        <source>Prefer range operator</source>
        <target state="translated">範囲演算子を優先</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simple_default_expression">
        <source>Prefer simple 'default' expression</source>
        <target state="translated">単純な 'default' 式を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simple_using_statement">
        <source>Prefer simple 'using' statement</source>
        <target state="translated">単純な 'using' ステートメントを優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_static_local_functions">
        <source>Prefer static local functions</source>
        <target state="translated">静的ローカル関数を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_switch_expression">
        <source>Prefer switch expression</source>
        <target state="translated">switch 式を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_throw_expression">
        <source>Prefer throw-expression</source>
        <target state="translated">スロー式を優先する</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_var">
        <source>Prefer 'var'</source>
        <target state="translated">var' を優先してください</target>
        <note />
      </trans-unit>
      <trans-unit id="Preferred_using_directive_placement">
        <source>Preferred 'using' directive placement</source>
        <target state="translated">優先する 'using' ディレクティブの配置</target>
        <note />
      </trans-unit>
      <trans-unit id="Press_TAB_to_insert">
        <source>     (Press TAB to insert)</source>
        <target state="translated">(Tab キーを押して挿入)</target>
        <note />
      </trans-unit>
      <trans-unit id="Resolve_0">
        <source>Resolve: '{0}'</source>
        <target state="translated">解決: "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="Resolve_module_0_of_1">
        <source>Resolve module: '{0}' of '{1}'</source>
        <target state="translated">モジュールの解決: '{1}' の '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_operators">
        <source>Set spacing for operators</source>
        <target state="translated">演算子のスペースを設定する</target>
        <note />
      </trans-unit>
      <trans-unit id="Smart_Indenting">
        <source>Smart Indenting</source>
        <target state="translated">スマート インデント</target>
        <note />
      </trans-unit>
      <trans-unit id="Split_string">
        <source>Split string</source>
        <target state="translated">文字列を分割します</target>
        <note />
      </trans-unit>
      <trans-unit id="Unused_local">
        <source>Unused local</source>
        <target state="translated">未使用のローカル</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_accessors">
        <source>Use expression body for accessors</source>
        <target state="translated">アクセサーに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_constructors">
        <source>Use expression body for constructors</source>
        <target state="translated">コンストラクターに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_indexers">
        <source>Use expression body for indexers</source>
        <target state="translated">インデクサーに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_lambdas">
        <source>Use expression body for lambdas</source>
        <target state="translated">ラムダに式本体を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_local_functions">
        <source>Use expression body for local functions</source>
        <target state="translated">ローカル関数に式本体を使用します</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_methods">
        <source>Use expression body for methods</source>
        <target state="translated">メソッドに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_operators">
        <source>Use expression body for operators</source>
        <target state="translated">オペレーターに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_properties">
        <source>Use expression body for properties</source>
        <target state="translated">プロパティに式本体を使用する</target>
        <note />
      </trans-unit>
      <trans-unit id="WARN_Version_mismatch_Expected_0_Got_1">
        <source>WARN: Version mismatch. Expected: '{0}', Got: '{1}'</source>
        <target state="translated">警告: バージョンが一致しません。必要なバージョン: '{0}'、現在のバージョン: '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="When_on_single_line">
        <source>When on single line</source>
        <target state="translated">1 行の場合</target>
        <note />
      </trans-unit>
      <trans-unit id="When_possible">
        <source>When possible</source>
        <target state="translated">可能な場合</target>
        <note />
      </trans-unit>
      <trans-unit id="When_variable_type_is_apparent">
        <source>When variable type is apparent</source>
        <target state="translated">変数の型が明らかな場合</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_items_in_cache">
        <source>'{0}' items in cache</source>
        <target state="translated">キャッシュ内の '{0}' 個の項目</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>