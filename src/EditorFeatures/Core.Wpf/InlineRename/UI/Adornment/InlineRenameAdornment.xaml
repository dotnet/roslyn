<UserControl x:Class="Microsoft.CodeAnalysis.Editor.InlineRename.Adornment.InlineRenameAdornment"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Microsoft.CodeAnalysis.Editor.InlineRename.Adornment"
             xmlns:rename="clr-namespace:Microsoft.CodeAnalysis.Editor.Implementation.InlineRename"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imagecatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             MinWidth="200"
             x:Name="control"
             KeyDown="Adornment_KeyDown"
             MouseDown="Adornment_ConsumeMouseEvent"
             MouseUp="Adornment_ConsumeMouseEvent"
             GotKeyboardFocus="Adornment_GotKeyboardFocus"
             Focusable="False"
             UseLayoutRounding="True"
             Background="{DynamicResource {x:Static rename:InlineRenameColors.BackgroundBrushKey}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../InlineRenameColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <SolidColorBrush x:Key="ForegroundText" Color="{DynamicResource {x:Static rename:InlineRenameColors.SystemCaptionTextColorKey}}"/>

            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static rename:InlineRenameColors.CheckBoxTextBrushKey}}"/>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource ForegroundText}"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border 
        Background="{DynamicResource {x:Static rename:InlineRenameColors.BackgroundBrushKey}}" 
        BorderThickness="1" 
        BorderBrush="{DynamicResource {x:Static rename:InlineRenameColors.ButtonBorderBrush}}" >
        <StackPanel Orientation="Vertical" Margin="5" >
            <Grid Margin="0 0 0 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>

                
                <TextBox 
                    Grid.Column="0"
                    x:Name="IdentifierTextBox" 
                    Text="{Binding IdentifierText, UpdateSourceTrigger=PropertyChanged}" 
                    GotFocus="IdentifierTextBox_GotFocus" 
                    HorizontalAlignment="Stretch" />

                <!-- Expand/Collapse button and glyph -->
                <Button x:Name="ToggleExpandButton" Grid.Column="1" Click="ToggleExpand" Background="Transparent">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Name="border" 
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static rename:InlineRenameColors.BackgroundBrushKey}}"
                                        Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static rename:InlineRenameColors.ButtonBorderBrush}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <imaging:CrispImage Grid.Column="0">
                        <imaging:CrispImage.Style>
                            <Style TargetType="imaging:CrispImage">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
                                        <Setter Property="Moniker" Value="{x:Static imagecatalog:KnownMonikers.ExpandDown}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsCollapsed}" Value="False">
                                        <Setter Property="Moniker" Value="{x:Static imagecatalog:KnownMonikers.CollapseUp}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </imaging:CrispImage.Style>
                    </imaging:CrispImage>
                </Button>
            </Grid>
            
            <StackPanel Orientation="Vertical" Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                <CheckBox Content="{Binding ElementName=control, Path=RenameOverloads}" Margin="0,5,0,0" IsChecked="{Binding Path=RenameOverloadFlag, Mode=TwoWay}"
                      Name="OverloadsCheckbox" Visibility="{Binding RenameOverloadsVisibility}" IsEnabled="{Binding IsRenameOverloadsEditable}" />
                <CheckBox Name="CommentsCheckbox" Content="{Binding ElementName=control, Path=SearchInComments}" Margin="0,5,0,0" IsChecked="{Binding Path=RenameInCommentsFlag, Mode=TwoWay}" />
                <CheckBox Name="StringsCheckbox" Content="{Binding ElementName=control, Path=SearchInStrings}" Margin="0,5,0,0" IsChecked="{Binding Path=RenameInStringsFlag, Mode=TwoWay}" />
                <CheckBox Name="FileRenameCheckbox" 
                    Content="{Binding Path=FileRenameString}" 
                    Margin="0,5,0,0"
                    IsChecked="{Binding Path=RenameFileFlag, Mode=TwoWay}" 
                    IsEnabled="{Binding Path=AllowFileRename, Mode=OneWay}" 
                    Visibility="{Binding Path=ShowFileRename, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
            </StackPanel>

            <TextBlock Text="{Binding ElementName=control, Path=SubmitText}" Foreground="LightGray" Margin="5, 5, 0, 0" FontStyle="Italic" />
    </StackPanel>
    </Border>
</UserControl>
