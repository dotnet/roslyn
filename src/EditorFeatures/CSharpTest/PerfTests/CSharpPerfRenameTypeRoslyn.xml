<?xml version="1.0" encoding="utf-8" ?>

<!-- This test measures the performance of the inline rename operation for C#.             -->
<!-- The measurement is based on code markers, so it measures the duration of the internal -->
<!-- rename to operation. As Dev12 and Roslyn implement rename very differently this test  -->
<!-- is not completely fair in the sense that Roslyn does more work to complete the same   -->
<!-- operation. In fact the amount of work needed is affected by the number of characters  -->
<!-- types. However, the point of the test is to measure the user experience and as such   -->
<!-- we consider the implementation details irrelevant in this case.                  -->

<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget DontResetOptions="true" />
    <EnableClosedFileDiagnostic Enabled="true" Language="C#"/>
    <OpenProject ProjectFile="C:\Roslyn\LegacyTest\RealworldProjects\RoslynSolutions\Roslyn-CSharp.sln" DeleteSuoFileBeforeOpening="true" DeleteIDECacheBeforeOpening="true"/>
    <OpenFile FileName="ReadOnlyArray`1.cs"/>
    <GoToLine LineNumber="24"/>
    <PlaceCursor Marker="ReadOnlyArray" CharsOffset="-1" />
  </InitTest>

  <ScenarioList>
    <Scenario Name="RenameRoslyn" Description="Rename ReadOnlyArray Roslyn">
      <WaitForSolutionCrawler/>
      <WaitForIdleCPU/>
      <ListenForCodeMarkers ScenarioGroup="Rename Roslyn" Step="Rename ReadOnlyArray Roslyn" TimeGoal="0.1" MemoryGoal="0.9" BeginMarker="StartNow" EndMarker="CS_RenameEnd" />
      <PerfRename NewName="ImmutableArray" Language="CSharp" />
      <WaitForCodeMarkers />

      <!--<VerifyRoslynModulesLoadedStatus ExpectedStatus="CSharp" />
      <VerifyRoslynModulesLoadedStatus ExpectedStatus="NoBasic" />-->
    </Scenario>
  </ScenarioList>

  <CleanupScenario>
    <UndoRename />
  </CleanupScenario>

  <CleanupTest>
    <CloseTarget />
  </CleanupTest>
</TaoTest>
