# Branches that trigger a build on commit
trigger:
- master
- master-vs-deps
- dev16.0-preview3
- dev16.0-preview3-vs-deps
- dev16.0
- dev16.0-vs-deps

# Branches that trigger builds on PR
pr:
- master
- master-vs-deps
- features/*
- demos/*
- dev16.0-preview3
- dev16.0-preview3-vs-deps
- dev16.0
- dev16.0-vs-deps

jobs:
- job: Windows_Desktop_Unit_Tests
  pool: dotnet-external-temp
  strategy:
    maxParallel: 4
    matrix:
      debug_32:
        _configuration: Debug
        _testKind: Test32
      debug_64:
        _configuration: Debug
        _testKind: Test64
      release_32:
        _configuration: Release
        _testKind: Test32
      release_64:
        _configuration: Release
        _testKind: Test64
  timeoutInMinutes: 90

  steps:
    - script: eng/cibuild.cmd -configuration $(_configuration) -prepareMachine -testDesktop -$(_testKind) -procdump
      displayName: Build and Test

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows Desktop $(_configuration) $(_testKind)'
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: 'Windows Desktop $(_configuration) $(_testKind)' 
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

- job: Windows_Desktop_Spanish_Unit_Tests
  pool: dnceng-windows-spanish-external-temp
  timeoutInMinutes: 90

  steps:
    - script: eng/cibuild.cmd -configuration Debug -prepareMachine -testDesktop
      displayName: Build and Test

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\Debug\*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows Desktop Spanish'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\Debug'
        ArtifactName: 'Windows Desktop Spanish' 
        publishLocation: Container
      continueOnError: true
      condition: failed()

- job: Windows_CoreClr_Unit_Tests
  pool: dotnet-external-temp
  strategy:
    maxParallel: 2
    matrix:
      debug:
        _configuration: Debug
      release:
        _configuration: Release
  timeoutInMinutes: 90

  steps:
    - script: eng/cibuild.cmd -configuration $(_configuration) -prepareMachine -msbuildEngine:dotnet -testCoreClr
      displayName: Build and Test

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows CoreClr $(_configuration)'
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: 'Windows CoreClr $(_configuration)'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())
           
- job: Windows_Determinism_Test
  pool: dotnet-external-temp
  timeoutInMinutes: 90
  steps:
    - script: eng/test-determinism.cmd -configuration Debug
      displayName: Build - Validate determinism

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\Debug'
        ArtifactName: 'Build Determinism Files'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

- job: Windows_Correctness_Test
  pool: dotnet-external-temp
  timeoutInMinutes: 90
  steps:
    - script: eng/test-build-correctness.cmd -configuration Release
      displayName: Build - Validate correctness

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\Release'
        ArtifactName: 'Build Correctness Files'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact Packages
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\packages\Release\PreRelease'
        ArtifactName: 'Packages - PreRelease'
        publishLocation: Container
      condition: succeeded()

    - task: PublishBuildArtifacts@1
      displayName: Publish VSIX Packages
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\VSSetup\Release\Installer'
        ArtifactName: 'VSIX - PreRelease'
        publishLocation: Container
      condition: succeeded()

- job: Linux_Test
  pool: DotNetCore-Linux
  strategy:
    maxParallel: 2
    matrix:
      coreclr:
        _args: --testCoreClr
        _name: CoreClr
        _configuration: Debug
      mono:
        _args: --testMono --docker
        _name: Mono
        _configuration: Debug
  timeoutInMinutes: 90
  steps:
    - script: ./eng/cibuild.sh --configuration $(_configuration) --prepareMachine $(_args)
      displayName: Build and Test
    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_configuration)/*.xml'
        mergeTestResults: true
        testRunTitle: 'Linux $(_name)'
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_configuration)'
        ArtifactName: 'Linux $(_name)'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

