phases:
- phase: Windows_Desktop_Unit_Tests
  queue:
    name: Helix
    timeoutInMinutes: 90
    parallel: 4
    matrix:
      debug_32:
        _configuration: Debug
        _testKind: Test32
      debug_64:
        _configuration: Debug
        _testKind: Test64
      release_32:
        _configuration: Release
        _testKind: Test32
      release_64:
        _configuration: Release
        _testKind: Test64

  steps:
    - script: build/scripts/cibuild.cmd -$(_configuration) -testDesktop -$(_testKind)

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '**/xUnitResults/*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows Desktop $(_configuration) $(_testKind)'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\Binaries\$(_configuration)\Logs'
        ArtifactName: 'Windows Desktop $(_configuration) $(_testKind)' 
        publishLocation: Container
      continueOnError: true
      condition: failed()

- phase: Windows_CoreClr_Unit_Tests
  queue:
    name: Helix
    timeoutInMinutes: 90
    parallel: 2
    matrix:
      debug:
        _configuration: Debug
      release:
        _configuration: Release

  steps:
    - script: build/scripts/cibuild.cmd -$(_configuration) -testCoreClr -buildCoreClr

    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '**/xUnitResults/*.xml'
        mergeTestResults: true
        testRunTitle: 'Windows CoreClr $(_configuration)'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\Binaries\$(_configuration)\Logs'
        ArtifactName: 'Windows CoreClr $(_configuration)'
        publishLocation: Container
      continueOnError: true
      condition: failed()
           
- phase: Windows_Determinism_Test
  queue:
    name: Helix
    timeoutInMinutes: 90
  steps:
    - script: build/scripts/cibuild.cmd -testDeterminism

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\Binaries\Debug\Logs'
        ArtifactName: 'Build Determinism Files'
        publishLocation: Container
      continueOnError: true
      condition: failed()

- phase: Windows_Correctness_Test
  queue:
    name: Helix
    timeoutInMinutes: 90
  steps:
    - script: build/scripts/test-build-correctness.cmd -cibuild -release

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\Binaries\Release\Logs'
        ArtifactName: 'Build Correctness Files'
        publishLocation: Container
      continueOnError: true
      condition: failed()

- phase: Linux_Test
  queue:
    name: DotNetCore-Linux                     
    timeoutInMinutes: 90
    parallel: 2
    matrix:
      coreclr:
        _args: --debug
        _name: CoreClr 
      mono:
        _args: --debug --docker --mono
        _name: Mono
  steps:
    - script: ./build/scripts/cibuild.sh $(_args)
    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '**/xUnitResults/*.xml'
        mergeTestResults: true
        testRunTitle: 'Linux $(_name)'
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/Binaries/$(_configuration)/Logs'
        ArtifactName: 'Linux $(_name)'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    
