<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>
  <!--
    This file must be imported after targets from NuGet packages have been imported (e.g. from Directory.Build.targets).
    It overwrites GeneratePkgDef defined by VSSDK NuGet package targets.
    
    GeneratePkgDef target defined below generates .pkgdef file based on PkgDefEntry items.
    Unlike the VSSDK implementation it does not load the project assembly and does not use RegistrationAttributes.
    The following kinds of PkgDefEntry are recognized (based on Kind metadata of the item):
    
      1) PackageRegistration 
         Corresponds to Microsoft.VisualStudio.Shell.PackageRegistrationAttribute.
         Project specifies this entry explicitly.
         
      2) InstalledProduct
         Emits $RootKey$\InstalledProducts entry.
         Project specifies this entry explicitly.
         
      3) BindingRedirect
         Emits $RootKey$\RuntimeConfiguration\dependentAssembly\bindingRedirection entry.
         
         Project may specify <PkgDefEntry>BindingRedirect</PkgDefEntry> on any item that contributes to ReferencePath item group.
         (e.g. ProjectReference), or on NuGetPackageToIncludeInVsix items. These items will be automatically included in PkgDefEntry items.
         
      4) CodeBase
         Emits $RootKey$\RuntimeConfiguration\dependentAssembly\codeBase entry.
         
         Project may specify <PkgDefEntry>CodeBase</PkgDefEntry> on any item that contributes to ReferencePath item group.
         (e.g. ProjectReference), or on NuGetPackageToIncludeInVsix items. These items will be automatically included in PkgDefEntry items.
         
      5) FileContent
         Merges the content of the file whose path is specified in the identity of the item to the generated pkgdef file.
         The path may be relative to the project being built.
    
    The FileContent kind allows the project to add arbitrary static content. The other kinds are used to generate dynamic content.
  -->
  
  <UsingTask TaskName="Microsoft.DotNet.Build.Tasks.VisualStudio.GetPkgDefAssemblyDependencyGuid" AssemblyFile="$(ArcadeVisualStudioBuildTasksAssembly)" />
  <UsingTask TaskName="Microsoft.DotNet.Arcade.Sdk.GetAssemblyFullName" AssemblyFile="$(ArcadeSdkBuildTasksAssembly)" />
    
  <Target Name="_SetGeneratePkgDefInputsOutputs">
    <PropertyGroup>
      <!-- The path must match the value that VSSDK uses. -->
      <_GeneratePkgDefOutputFile>$(IntermediateOutputPath)$(TargetName).pkgdef</_GeneratePkgDefOutputFile>
    </PropertyGroup>

    <ItemGroup>
      <_ContentEntries Include="@(Content)" Condition="'%(Content.PkgDefEntry)' != ''">
        <FullFilePath>$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '%(Content.Identity)'))</FullFilePath>
      </_ContentEntries>

      <PkgDefEntry Include="@(_ContentEntries->'%(FullFilePath)')" >
        <Kind>%(_ContentEntries.PkgDefEntry)</Kind>
      </PkgDefEntry>
    </ItemGroup>
  </Target>
  
  <!--
    Initializes metadata on PkgDefEntry items with Kind="PackageRegistration".
  -->
  <Target Name="_InitializePackageRegistrationEntries"
          BeforeTargets="GeneratePkgDef"
          DependsOnTargets="GetAssemblyVersion">
    <PropertyGroup>
      <_AssemblyCodeBase>$([System.IO.Path]::Combine('$PackageFolder$', '$(AssemblyVSIXSubPath)', '$(TargetFileName)'))</_AssemblyCodeBase>
      <_AssemblyOrCodeBase Condition="'$(UseCodeBase)' != 'true'">"Assembly"="$(AssemblyName), Version=$(AssemblyVersion), Culture=neutral, PublicKeyToken=$(PublicKeyToken)"</_AssemblyOrCodeBase>
      <_AssemblyOrCodeBase Condition="'$(UseCodeBase)' == 'true'">"CodeBase"="$(_AssemblyCodeBase)"</_AssemblyOrCodeBase>
    </PropertyGroup>
    <ItemGroup>
      <PkgDefEntry Update="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'PackageRegistration' and '%(PkgDefEntry.AssemblyName)' == ''">
        <_AllowsBackgroundLoad>dword:00000000</_AllowsBackgroundLoad>
        <_AllowsBackgroundLoad Condition="'%(PkgDefEntry.AllowsBackgroundLoad)' == 'true'">dword:00000001</_AllowsBackgroundLoad>
        <_AssemblyOrCodeBase>$(_AssemblyOrCodeBase)</_AssemblyOrCodeBase>
      </PkgDefEntry>
    </ItemGroup>
  </Target>

  <!--
    Initializes metadata on PkgDefEntry items with Kind="InstalledProduct".
  -->
  <Target Name="_InitializeInstalledProductEntries"
          BeforeTargets="GeneratePkgDef"
          DependsOnTargets="AddSourceRevisionToInformationalVersion">
    <ItemGroup>
      <PkgDefEntry Update="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'InstalledProduct' and '%(PkgDefEntry.PID)' == ''">
        <_PID>$(InformationalVersion)</_PID>
      </PkgDefEntry>
    </ItemGroup>
  </Target>
  
  <!--
    Populates PkgDefEntry group from references with non-empty PkgDefEntry.
  -->
  <Target Name="_AddPkgDefEntriesFromReferences"
          BeforeTargets="AfterResolveReferences;GeneratePkgDef">
    <ItemGroup>
      <PkgDefEntry Include="@(ReferencePath)" Condition="'%(ReferencePath.PkgDefEntry)' != ''">
        <Kind>%(_AssetsWithMetadata.PkgDefEntry)</Kind>
      </PkgDefEntry>
    </ItemGroup>
  </Target>
  
  <!--
    Generates a .pkgdef file based on items in PkgDefEntry group and includes the generated file in the VSIX.
  -->
  <Target Name="GeneratePkgDef"          
          DependsOnTargets="$(GeneratePkgDefDependsOn);_SetGeneratePkgDefInputsOutputs"
          Inputs="$(MSBuildAllProjects)"
          Outputs="$(_GeneratePkgDefOutputFile)"
          Condition="'@(PkgDefEntry)' != ''">
    <ItemGroup>
      <_AssemblyDependencyEntry Include="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'BindingRedirect' or '%(PkgDefEntry.Kind)' == 'CodeBase'" />
        
      <_AssemblyDependencyEntryWithoutAssemblyName Include="@(_AssemblyDependencyEntry)" Condition="'%(_AssemblyDependencyEntry.FusionName)' == ''" />
    </ItemGroup>
    
     <Microsoft.DotNet.Arcade.Sdk.GetAssemblyFullName Items="@(_AssemblyDependencyEntryWithoutAssemblyName)" FullNameMetadata="FusionName">
       <Output TaskParameter="ItemsWithFullName" ItemName="_AssemblyDependencyEntryWithAssemblyName"/>
     </Microsoft.DotNet.Arcade.Sdk.GetAssemblyFullName>
  
    <ItemGroup>
      <_AssemblyDependencyEntryWithAssemblyName Include="@(_AssemblyDependencyEntry)" Condition="'%(_AssemblyDependencyEntry.FusionName)' != ''"/>
      
      <_AssemblyDependencyEntryWithAssemblyName Update="@(_AssemblyDependencyEntryWithAssemblyName)">
        <AssemblyFileName>%(_AssemblyDependencyEntryWithAssemblyName.FileName)%(_AssemblyDependencyEntryWithAssemblyName.Extension)</AssemblyFileName>
        <OldAssemblyVersion>0.0.0.0</OldAssemblyVersion>
       
        <!-- Split FusionName: "{0}, Version={1}, Culture={2}, PublicKeyToken={3}" -->
        <AssemblyName>$([MSBuild]::ValueOrDefault('%(_AssemblyDependencyEntryWithAssemblyName.FusionName)', '').Split(',')[0])</AssemblyName>
        <AssemblyVersion>$([MSBuild]::ValueOrDefault('%(_AssemblyDependencyEntryWithAssemblyName.FusionName)', '').Split(',')[1].Split('=')[1])</AssemblyVersion>
        <Culture>$([MSBuild]::ValueOrDefault('%(_AssemblyDependencyEntryWithAssemblyName.FusionName)', '').Split(',')[2].Split('=')[1])</Culture>
        <PublicKeyToken>$([MSBuild]::ValueOrDefault('%(_AssemblyDependencyEntryWithAssemblyName.FusionName)', '').Split(',')[3].Split('=')[1])</PublicKeyToken>
      </_AssemblyDependencyEntryWithAssemblyName>

      <_AssemblyDependencyEntryWithAssemblyName Update="@(_AssemblyDependencyEntryWithAssemblyName)" Condition="'%(PkgDefEntry)' == 'BindingRedirect'">
        <HashBase>%(AssemblyName),%(PublicKeyToken),%(Culture),%(OldAssemblyVersion)-%(AssemblyVersion),%(AssemblyVersion)</HashBase>
      </_AssemblyDependencyEntryWithAssemblyName>
      
      <_AssemblyDependencyEntryWithAssemblyName Update="@(_AssemblyDependencyEntryWithAssemblyName)" Condition="'%(PkgDefEntry)' == 'CodeBase'">
        <HashBase>%(AssemblyName),%(PublicKeyToken),%(Culture),%(AssemblyVersion)</HashBase>
      </_AssemblyDependencyEntryWithAssemblyName>
    </ItemGroup>
    
    <Microsoft.DotNet.Build.Tasks.VisualStudio.GetPkgDefAssemblyDependencyGuid Items="@(_AssemblyDependencyEntryWithAssemblyName)" InputMetadata="HashBase" OutputMetadata="Guid">
      <Output TaskParameter="OutputItems" ItemName="_ADEntry"/>
    </Microsoft.DotNet.Build.Tasks.VisualStudio.GetPkgDefAssemblyDependencyGuid>
  
    <ItemGroup>
      <_PkgDefEntry Include="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'PackageRegistration'">
        <RawValue>
          <![CDATA[[$RootKey$\Packages\%(PkgDefEntry.Identity)]
@="%(PkgDefEntry.Name)"
"InprocServer32"="$WinDir$\SYSTEM32\MSCOREE.DLL"
"Class"="%(PkgDefEntry.Class)"
"AllowsBackgroundLoad"=%(PkgDefEntry._AllowsBackgroundLoad)
%(PkgDefEntry._AssemblyOrCodeBase)]]>
        </RawValue>
      </_PkgDefEntry>
      
      <_PkgDefEntry Include="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'InstalledProduct'">
        <RawValue>
          <![CDATA[[$RootKey$\InstalledProducts\%(PkgDefEntry.Name)]
@="%(PkgDefEntry.DisplayName)"
"Package"="%(PkgDefEntry.Identity)"
"PID"="%(PkgDefEntry.PID)"
"ProductDetails"="%(PkgDefEntry.ProductDetails)"
"UseInterface"=dword:00000000
"UseVSProductID"=dword:00000000]]>
        </RawValue>
      </_PkgDefEntry>
      
      <_PkgDefEntry Include="@(_ADEntry)" Condition="'%(_ADEntry.Kind)' == 'BindingRedirect'">
        <RawValue>
          <![CDATA[[$RootKey$\RuntimeConfiguration\dependentAssembly\bindingRedirection\%(_ADEntry.Guid)]
"name"="%(_ADEntry.AssemblyName)"
"publicKeyToken"="%(_ADEntry.PublicKeyToken)"
"culture"="%(_ADEntry.Culture)"
"oldVersion"="%(_ADEntry.OldAssemblyVersion)-%(_ADEntry.AssemblyVersion)"
"newVersion"="%(_ADEntry.AssemblyVersion)"
"codeBase"="$PackageFolder$\%(_ADEntry.AssemblyFileName)"]]>
        </RawValue>
      </_PkgDefEntry>
      
      <_PkgDefEntry Include="@(_ADEntry)" Condition="'%(_ADEntry.Kind)' == 'CodeBase'">
        <RawValue>
          <![CDATA[[$RootKey$\RuntimeConfiguration\dependentAssembly\codeBase\%(_ADEntry.Guid)]
"name"="%(_ADEntry.AssemblyName)"
"publicKeyToken"="%(_ADEntry.PublicKeyToken)"
"culture"="%(_ADEntry.Culture)"
"version"="%(_ADEntry.AssemblyVersion)"
"codeBase"="$PackageFolder$\%(_ADEntry.AssemblyFileName)"]]>
        </RawValue>
      </_PkgDefEntry>
    </ItemGroup>

    <!-- Include content generated above -->
    <ItemGroup>
      <_PkgDefLines Include="@(_PkgDefEntry->'%(RawValue)')" />
    </ItemGroup>

    <!-- Include content of files listed in PkgDefEntry items with Kind="FileContent" -->
    <ItemGroup>
      <_FilesToMerge Include="@(PkgDefEntry)" Condition="'%(PkgDefEntry.Kind)' == 'FileContent'"/>
    </ItemGroup>
    
    <ReadLinesFromFile File="%(_FilesToMerge.Identity)" Condition="'@(_FilesToMerge)' != ''">
      <Output TaskParameter="Lines" ItemName="_PkgDefLines"/>
    </ReadLinesFromFile>

    <!-- Write final pkgdef content. If the CTO file was changed, touch the pkgdef file to cause a re-merge (see VSSDK targets). -->
    <WriteLinesToFile File="$(_GeneratePkgDefOutputFile)"
                      Lines="@(_PkgDefLines)"
                      Overwrite="true"
                      Encoding="UTF-8"
                      WriteOnlyWhenDifferent="!$([MSBuild]::ValueOrDefault('$(CTOFileHasChanged)', 'false'))" />
    <ItemGroup>
      <FileWrites Include="$(_GeneratePkgDefOutputFile)" />
    </ItemGroup>
  </Target>
</Project>