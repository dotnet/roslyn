<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>

  <!--
    Specification: https://github.com/dotnet/arcade/blob/master/Documentation/Versioning.md
    
    Properties:
      SemanticVersioningV1  "true" if the Version needs to respect SemVer 1.0. Default is false, which means format following SemVer 2.0.
      
    Global settings:
      DotNetUseShippingVersions   
        - "true" to produce shipping versions in non-official builds, instead of default fixed dummy version number (42.42.42.42).
        - A builds target that produces MSI shall fail if DotNetUseShippingVersions == false, since MSIs require increasing file versions to function properly.
  -->
    
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(OfficialBuild)' == 'true' or '$(DotNetUseShippingVersions)' == 'true'">
      <PropertyGroup>
        <!--
          Building MSIs from dev build requires file versions to be increasing. 
          Use the current date in non-official builds. Note that this reduces the deterministic properties of the build 
          and should only be enabled when it's necessary to test-install the MSIs produced by the build.
        -->
        <_BuildNumber>$(OfficialBuildId)</_BuildNumber>
        <_BuildNumber Condition="'$(OfficialBuildId)' == ''">$([System.DateTime]::Now.ToString(yyyyMMdd)).1</_BuildNumber>

        <!--
          Split the build parts out from the BuildNumber which is given to us by VSTS in the format of yyyymmdd.nn
          where VersionSuffixDateStamp is mmmdd (such as 60615) and VersionSuffixBuildOfTheDay is nn (which represents the nth build
          started that day). So the first build of the day, 20160615.1, will produce something similar to VersionSuffixDateStamp: 60615,
          BuildNumberBuildOfTheDayPadded: 01; and the 12th build of the day, 20160615.12, will produce VersionSuffixDateStamp: 60615, 
          VersionSuffixBuildOfTheDay: 12

          Additionally, in order ensure the value fits in the 16-bit PE header fields, we will only take the last five digits of the BuildNumber, so
          in the case of 20160615, we will set VersionSuffixDateStamp to 60615. Further, if this would result in a number like 71201 or 81201, we
          decrement the year and add 12 to the month to extend the time. 
        -->
        <_BuildNumberFiveDigitDateStamp>$([MSBuild]::Subtract($(_BuildNumber.Split($([System.Convert]::ToString(`.`).ToCharArray())).GetValue($([System.Convert]::ToInt32(0)))), 20100000))</_BuildNumberFiveDigitDateStamp>
        <_BuildNumberFiveDigitDateStampYearsToOffset>$([System.Math]::Max($([System.Convert]::ToInt32($([MSBuild]::Subtract($([MSBuild]::Divide($(_BuildNumberFiveDigitDateStamp), 10000)), 6)))), 0))</_BuildNumberFiveDigitDateStampYearsToOffset>
    
        <VersionSuffixDateStamp>$([MSBuild]::Subtract($([System.Convert]::ToInt32($(_BuildNumberFiveDigitDateStamp))), $([MSBuild]::Multiply($(_BuildNumberFiveDigitDateStampYearsToOffset), 8800))))</VersionSuffixDateStamp>
        <VersionSuffixBuildOfTheDay>$(_BuildNumber.Split($([System.Convert]::ToString(`.`).ToCharArray())).GetValue($([System.Convert]::ToInt32(1))))</VersionSuffixBuildOfTheDay>
        <VersionSuffixBuildOfTheDayPadded>$(VersionSuffixBuildOfTheDay.PadLeft($([System.Convert]::ToInt32(2)), $([System.Convert]::ToChar(`0`))))</VersionSuffixBuildOfTheDayPadded>

        <_BuildNumberSuffix Condition="'$(SemanticVersioningV1)' != 'true'">.$(VersionSuffixDateStamp).$(VersionSuffixBuildOfTheDay)</_BuildNumberSuffix>
        <_BuildNumberSuffix Condition="'$(SemanticVersioningV1)' == 'true'">-$(VersionSuffixDateStamp)-$(VersionSuffixBuildOfTheDayPadded)</_BuildNumberSuffix>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <VersionSuffixDateStamp/>
        <VersionSuffixBuildOfTheDay/>
        <VersionSuffixBuildOfTheDayPadded/>
        <_BuildNumberSuffix/>

        <!--
          Don't include a commit SHA to AssemblyInformationalVersion. 
          It would reduce the possibility of sharing otherwise unchanged build artifacts across deterministic builds.
        -->
        <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <PropertyGroup>
    <_PreReleaseLabel>$(PreReleaseVersionLabel)</_PreReleaseLabel>
    <_PreReleaseLabel Condition="'$(ContinuousIntegrationBuild)' == 'true' and '$(OfficialBuild)' != 'true'">ci</_PreReleaseLabel>
    <_PreReleaseLabel Condition="'$(ContinuousIntegrationBuild)' != 'true'">dev</_PreReleaseLabel>

    <!--
      If DotNetFinalVersionKind is specified, overrides the package version produced by the build like so:
        ""           1.2.3-beta.12345.67+sha
        "prerelease" 1.2.3-beta+sha
        "release"    1.2.3
    -->
    <VersionSuffix Condition="'$(DotNetFinalVersionKind)' == 'release'"/>
    <VersionSuffix Condition="'$(DotNetFinalVersionKind)' == 'prerelease'">$(_PreReleaseLabel)</VersionSuffix>
    <VersionSuffix Condition="'$(DotNetFinalVersionKind)' == ''">$(_PreReleaseLabel)$(_BuildNumberSuffix)</VersionSuffix>
    
    <!-- 
      Disable NuGet Pack warning that the version is SemVer 2.0.
      SemVer 2.0 is supported by Nuget since 3.0.0 (July 2015) in some capacity, and fully since 3.5.0 (October 2016).
    -->
    <NoWarn Condition="'$(SemanticVersioningV1)' != 'true'">$(NoWarn);NU5105</NoWarn>
  </PropertyGroup>

</Project>
