<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- 
    This props file manages the target framework properties for Roslyn. The strategy for these properties
    is convered in "docs/contributing/Target Framework Strategy.md".

    This props file makes use of $(NetCurrent) and $(NetPrevious) which are values that change as .NET 
    releases occur. When this happens, or any of the $(NetVS*) values change, it's important to re-evaluate
    all the properties here to ensure there are none with duplicate values.
  -->
  <PropertyGroup>
    <!-- Represents the .NET core version that should be used if there are no specific product attachments to
         consider -->
    <NetRoslyn>net7.0</NetRoslyn>

    <!-- Represents the private runtime for Visual Studio -->
    <NetVS>net8.0</NetVS>

    <!-- Represents the runtime VS Code (aka DevKit) executes on -->
    <NetVSCode>net7.0</NetVSCode>

    <!-- Represents code that executes on both VS Code and VS private runtime. Can be simplified to a single
         TFM when the two agree -->
    <NetVSShared>net7.0;net8.0</NetVSShared>

    <!-- Represents all the .NET Core runtimes currently supported -->
    <NetRoslynAll>net7.0;net8.0</NetRoslynAll>
  </PropertyGroup>

  <!-- 
    There are effectively three modes that are needed for our source build TFMs and this is where
    we calculate them
  -->
  <Choose>
    <!-- 
      1. CI source build leg: this needs to build the current and previous source build TFM. Both are 
         necessary as the output of this leg is used in other CI source build legs. Those could be 
         targeting NetCurrent or NetPrevious hence we must produce both. 

        However the toolset package we produce must target NetPrevious. This package gets used as the 
        bootstrap toolset in other repos doing (1). Those can be using a NetPrevious runtime hence 
        the toolset must support that.
    -->
    <When Condition="'$(DotNetBuildFromSource)' == 'true' AND '$(DotNetBuildFromSourceFlavor)' != 'Product'">
      <PropertyGroup>
        <NetRoslynToolset>$(NetPrevious)</NetRoslynToolset>
        <NetRoslynSourceBuild>$(NetCurrent);$(NetPrevious)</NetRoslynSourceBuild>
      </PropertyGroup>
    </When>

    <!--
      2. Source build the product: this is the all up build of the product which needs only NetCurrent
    -->
    <When Condition="'$(DotNetBuildFromSource)' == 'true' AND '$(DotNetBuildFromSourceFlavor)' == 'Product'">
      <PropertyGroup>
        <NetRoslynToolset>$(NetCurrent)</NetRoslynToolset>
        <NetRoslynSourceBuild>$(NetCurrent);$(NetPrevious)</NetRoslynSourceBuild>
      </PropertyGroup>
    </When>

    <!--
      3. Everything else including normal CI, developer machines and official builds. This brings in enough
         TFM that source build will go smoothly but doesn't bring in all source build TFMs to avoid adding
         too many extra compiles to our builds
    -->
    <Otherwise>
      <PropertyGroup>
        <NetRoslynToolset>net8.0</NetRoslynToolset>
        <NetRoslynSourceBuild>net7.0;net8.0</NetRoslynSourceBuild>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>