<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <!--
    This MSBuild file is intended to be used as the body of the default 
    publishing release pipeline. The release pipeline will use this file
    to invoke the PublishSymbols tasks to publish symbols to MSDL and SymWeb.
  
    Parameters:
  
      - PDBArtifactsDirectory   : Full path to directory containing PDB files to be published.
      - BlobBasePath            : Full path containing *.symbols.nupkg packages to be published.
      - DotNetSymbolServerTokenMsdl   : PAT to access MSDL.
      - DotNetSymbolServerTokenSymWeb : PAT to access SymWeb.
      - DotNetSymbolExpirationInDays  : Expiration days for published packages. Default is 3650.
  -->

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
  </PropertyGroup>

  <Import Project="$(NuGetPackageRoot)microsoft.symboluploader.build.task\$(SymbolUploaderVersion)\build\PublishSymbols.targets" />
    
  <Target Name="PublishSymbols">
    <ItemGroup>
      <FilesToPublishToSymbolServer Include="$(PDBArtifactsDirectory)\*.pdb"/>
      <PackagesToPublishToSymbolServer Include="$(BlobBasePath)\*.symbols.nupkg"/>

      <!--
        These packages from Arcade-Services include some native libraries that
        our current symbol uploader can't handle. Below is a workaround until
        we get issue: https://github.com/dotnet/arcade/issues/2457 sorted.
      -->
      <PackagesToPublishToSymbolServer Remove="$(BlobBasePath)\Microsoft.DotNet.Darc.*" />
      <PackagesToPublishToSymbolServer Remove="$(BlobBasePath)\Microsoft.DotNet.Maestro.Tasks.*" />
    </ItemGroup>

    <PropertyGroup>
      <DotNetSymbolExpirationInDays Condition="'$(DotNetSymbolExpirationInDays)' == ''">3650</DotNetSymbolExpirationInDays>
      <PublishToSymbolServer>true</PublishToSymbolServer>
      <PublishToSymbolServer Condition="'@(FilesToPublishToSymbolServer)' == '' and '@(PackagesToPublishToSymbolServer)' == ''">false</PublishToSymbolServer>
    </PropertyGroup>

    <Message
      Importance="High"
      Text="No symbol package(s) were found to publish." 
      Condition="$(PublishToSymbolServer) == false" />
    
    <!-- Symbol Uploader: MSDL -->
    <Message Importance="High" Text="Publishing symbol packages to MSDL ..." Condition="$(PublishToSymbolServer)" />
    <PublishSymbols PackagesToPublish="@(PackagesToPublishToSymbolServer)"
                    FilesToPublish="@(FilesToPublishToSymbolServer)"
                    PersonalAccessToken="$(DotNetSymbolServerTokenMsdl)"
                    SymbolServerPath="https://microsoftpublicsymbols.artifacts.visualstudio.com/DefaultCollection"
                    ExpirationInDays="$(DotNetSymbolExpirationInDays)"
                    VerboseLogging="true"
                    DryRun="false"
                    ConvertPortablePdbsToWindowsPdbs="false"
                    PdbConversionTreatAsWarning=""
                    Condition="$(PublishToSymbolServer)"/>

    <!-- 
      Symbol Uploader: SymWeb 
      Watson, VS insertion testings and the typical internal dev usage require SymWeb.
      Currently we need to call the task twice (https://github.com/dotnet/core-eng/issues/3489).
    -->
    <Message Importance="High" Text="Publishing symbol packages to SymWeb ..." Condition="$(PublishToSymbolServer)" />
    <PublishSymbols PackagesToPublish="@(PackagesToPublishToSymbolServer)"
                    FilesToPublish="@(FilesToPublishToSymbolServer)"
                    PersonalAccessToken="$(DotNetSymbolServerTokenSymWeb)"
                    SymbolServerPath="https://microsoft.artifacts.visualstudio.com/DefaultCollection"
                    ExpirationInDays="$(DotNetSymbolExpirationInDays)"
                    VerboseLogging="true"
                    DryRun="false"
                    ConvertPortablePdbsToWindowsPdbs="false"
                    PdbConversionTreatAsWarning=""
                    Condition="$(PublishToSymbolServer)"/>
  </Target>

  <ItemGroup>
    <PackageReference Include="Microsoft.SymbolUploader.Build.Task" Version="$(SymbolUploaderVersion)" />
  </ItemGroup>
</Project>
