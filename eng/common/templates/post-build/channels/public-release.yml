parameters:
  enableSymbolValidation: true

stages:
- stage: PubRel_Publish
  dependsOn: validate
  variables:
    - template: ../common-variables.yml
  displayName: Public Release
  jobs:
  - template: ../setup-maestro-vars.yml

  - job:
    displayName: Symbol Publishing
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id))
    variables:
      - group: DotNet-Symbol-Server-Pats
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Artifacts
        inputs:
          downloadType: specific files
          matchingPattern: "*Artifacts*"

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToSymbolServers -restore -msbuildEngine dotnet
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat) 
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat) 
            /p:PDBArtifactsDirectory='$(Build.ArtifactStagingDirectory)/PDBArtifacts/'
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/'
            /p:Configuration=Release

  - job: publish_assets
    displayName: Publish Assets
    dependsOn: setupMaestroVars
    variables:
      - group: DotNet-Blob-Feed
      - group: AzureDevOps-Artifact-Feeds-Pats
      - name: BARBuildId
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
      - name: IsStableBuild
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.IsStableBuild'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id))
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: PackageArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Asset Manifests
        inputs:
          buildType: current
          artifactName: AssetManifests

      - task: PowerShell@2
        displayName: Publish
        env:
          AZURE_DEVOPS_EXT_PAT: $(dn-bot-dnceng-unviersal-packages-rw)
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishArtifactsInManifest -restore -msbuildEngine dotnet 
            /p:ChannelId=$(PublicRelease_30_Channel_Id)
            /p:IsStableBuild=$(IsStableBuild)
            /p:IsInternalBuild=$(IsInternalBuild)
            /p:RepositoryName=$(Build.Repository.Name)
            /p:CommitSha=$(Build.SourceVersion)
            /p:AzureStorageAccountName=$(ProxyBackedFeedsAccountName)
            /p:AzureStorageAccountKey=$(dotnetfeed-storage-access-key-1)
            /p:AzureDevOpsFeedsBaseUrl=$(dotnetfeed-internal-private-feed-url)
            /p:StaticInternalFeed=$(dotnetfeed-internal-nonstable-feed-url)
            /p:NugetPath=$(Agent.BuildDirectory)\Nuget\NuGet.exe
            /p:BARBuildId=$(BARBuildId) 
            /p:MaestroApiEndpoint='$(MaestroApiEndPoint)' 
            /p:BuildAssetRegistryToken='$(MaestroApiAccessToken)' 
            /p:ManifestsBasePath='$(Build.ArtifactStagingDirectory)/AssetManifests/' 
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)\BlobArtifacts' 
            /p:PackageBasePath='$(Build.ArtifactStagingDirectory)\PackageArtifacts' 
            /p:Configuration=Release 
        
      - task: NuGetCommand@2
        displayName: Publish Packages to AzDO Feed
        condition: contains(variables['TargetAzDOFeed'], 'pkgs.visualstudio.com')
        inputs:
          command: push
          vstsFeed: $(AzDoFeedName)
          packagesToPush: $(Build.ArtifactStagingDirectory)\PackageArtifacts\*.nupkg
          publishVstsFeed: $(AzDoFeedName)

      - task: PowerShell@2
        displayName: Publish Blobs to AzDO Feed
        inputs:
          filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-blobs-to-azdo.ps1
          arguments: -FeedName $(AzDoFeedName) 
            -SourceFolderCollection $(Build.ArtifactStagingDirectory)/BlobArtifacts/
            -PersonalAccessToken $(dn-bot-dnceng-unviersal-packages-rw)
        enabled: false

      - template: ../trigger-subscription.yml
        parameters:
          ChannelId: ${{ variables.PublicRelease_30_Channel_Id }}

- stage: PubRel_PublishValidation
  displayName: Publish Validation
  variables:
    - template: ../common-variables.yml  
  jobs:
  - template: ../setup-maestro-vars.yml

  - ${{ if eq(parameters.enableSymbolValidation, 'true') }}:
    - job:
      displayName: Symbol Availability
      dependsOn: setupMaestroVars
      condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id))
      pool:
        vmImage: 'windows-2019'
      steps:
        - task: DownloadBuildArtifacts@0
          displayName: Download Package Artifacts
          inputs:
            buildType: current
            artifactName: PackageArtifacts

        - task: PowerShell@2
          displayName: Check Symbol Availability
          inputs:
            filePath: $(Build.SourcesDirectory)/eng/common/post-build/symbols-validation.ps1
            arguments: -InputPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ -ExtractPath $(Agent.BuildDirectory)/Temp/ -DotnetSymbolVersion $(SymbolToolVersion)

  - template: ../promote-build.yml
    parameters:
      ChannelId: ${{ variables.PublicRelease_30_Channel_Id }}
