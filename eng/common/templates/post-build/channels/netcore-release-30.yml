parameters:
  enableSymbolValidation: true
  symbolPublishingAdditionalParameters: ''
  artifactsPublishingAdditionalParameters: ''

stages:
- stage: NetCore_Release30_Publish
  dependsOn: validate
  variables:
    - template: ../common-variables.yml
  displayName: .NET Core 3.0 Release Publishing
  jobs:
  - template: ../setup-maestro-vars.yml

  - job:
    displayName: Symbol Publishing
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id))
    variables:
      - group: DotNet-Symbol-Server-Pats
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          artifactName: 'BlobArtifacts'
        continueOnError: true

      - task: DownloadBuildArtifacts@0
        displayName: Download PDB Artifacts
        inputs:
          artifactName: 'PDBArtifacts'
        continueOnError: true

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToSymbolServers -restore -msbuildEngine dotnet
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
            /p:PDBArtifactsDirectory='$(Build.ArtifactStagingDirectory)/PDBArtifacts/'
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/'
            /p:SymbolPublishingExclusionsFile='$(Build.SourcesDirectory)/eng/SymbolPublishingExclusionsFile.txt'
            /p:Configuration=Release
            ${{ parameters.symbolPublishingAdditionalParameters }}

  - job: publish_assets
    displayName: Publish Assets
    dependsOn: setupMaestroVars
    variables:
      - group: DotNet-Blob-Feed
      - group: AzureDevOps-Artifact-Feeds-Pats
      - name: BARBuildId
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
      - name: IsStableBuild
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.IsStableBuild'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id))
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: PackageArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Asset Manifests
        inputs:
          buildType: current
          artifactName: AssetManifests

      - task: NuGetToolInstaller@1
        displayName: 'Install NuGet.exe'

      # This is necessary whenever we want to publish/restore to an AzDO private feed
      - task: NuGetAuthenticate@0
        displayName: 'Authenticate to AzDO Feeds'

      - task: PowerShell@2
        displayName: Publish Assets
        env:
          AZURE_DEVOPS_EXT_PAT: $(dn-bot-dnceng-universal-packages-rw)
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishArtifactsInManifest -restore -msbuildEngine dotnet 
            /p:IsStableBuild=$(IsStableBuild)
            /p:IsInternalBuild=$(IsInternalBuild)
            /p:RepositoryName=$(Build.Repository.Name)
            /p:CommitSha=$(Build.SourceVersion)
            /p:StaticInternalFeed=$(StaticInternalFeed)
            /p:InternalChecksumsTargetStaticFeed=$(InternalChecksumsBlobFeedUrl)
            /p:InternalChecksumsTargetStaticFeedKey=$(InternalChecksumsBlobFeedKey)
            /p:InternalInstallersTargetStaticFeed=$(InternalInstallersBlobFeedUrl)
            /p:InternalInstallersTargetStaticFeedKey=$(InternalInstallersBlobFeedKey)
            /p:NugetPath=$(NuGetExeToolPath)
            /p:AzdoTargetFeedPAT='$(dn-bot-dnceng-universal-packages-rw)'
            /p:TargetFeedPAT='$(dn-bot-dnceng-universal-packages-rw)' 
            /p:AzureStorageTargetFeedPAT='$(dotnetfeed-storage-access-key-1)' 
            /p:BARBuildId=$(BARBuildId) 
            /p:MaestroApiEndpoint='$(MaestroApiEndPoint)' 
            /p:BuildAssetRegistryToken='$(MaestroApiAccessToken)' 
            /p:ManifestsBasePath='$(Build.ArtifactStagingDirectory)/AssetManifests/' 
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/' 
            /p:PackageBasePath='$(Build.ArtifactStagingDirectory)/PackageArtifacts/' 
            /p:Configuration=Release 
            ${{ parameters.artifactsPublishingAdditionalParameters }}

      - template: ../trigger-subscription.yml
        parameters:
          ChannelId: ${{ variables.PublicRelease_30_Channel_Id }}

- stage: NetCore_Release30_Publish_Validation
  displayName: .NET Core 3.0 Release Publish Validation
  variables:
    - template: ../common-variables.yml
  jobs:
  - template: ../setup-maestro-vars.yml

  - ${{ if eq(parameters.enableSymbolValidation, 'true') }}:
    - job:
      displayName: Symbol Availability
      dependsOn: setupMaestroVars
      condition: or(contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_30_Channel_Id)),
                    contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], format('[{0}]', variables.PublicRelease_31_Channel_Id)))
      pool:
        vmImage: 'windows-2019'
      steps:
        - task: DownloadBuildArtifacts@0
          displayName: Download Package Artifacts
          inputs:
            buildType: current
            artifactName: PackageArtifacts

        - task: PowerShell@2
          displayName: Check Symbol Availability
          inputs:
            filePath: $(Build.SourcesDirectory)/eng/common/post-build/symbols-validation.ps1
            arguments: -InputPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ -ExtractPath $(Agent.BuildDirectory)/Temp/ -DotnetSymbolVersion $(SymbolToolVersion)

  - template: ../promote-build.yml
    parameters:
      ChannelId: ${{ variables.PublicRelease_30_Channel_Id }}
