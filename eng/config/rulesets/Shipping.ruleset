<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Common diagnostic rules to run during build for all shipping Roslyn projects" Description="This file contains diagnostic settings used by all Roslyn projects. Projects that need specific settings should have their own rule set files that Include this one, and then make the necessary adjustments." ToolsVersion="14.0">
  <IncludeAll Action="Hidden" />
  <Rules AnalyzerId="Microsoft.ApiDesignGuidelines.Analyzers" RuleNamespace="Microsoft.ApiDesignGuidelines.Analyzers">
    <Rule Id="CA1000" Action="None" />
    <Rule Id="CA1001" Action="None" />
    <Rule Id="CA1010" Action="None" />
    <Rule Id="CA1016" Action="None" />
    <Rule Id="CA1018" Action="None" />
    <Rule Id="CA1028" Action="None" />
    <Rule Id="CA1030" Action="None" />
    <Rule Id="CA1031" Action="None" /> <!-- Do not catch general exception types -->
    <Rule Id="CA1032" Action="None" />
    <Rule Id="CA1034" Action="None" />
    <Rule Id="CA1036" Action="None" />
    <Rule Id="CA1040" Action="None" />
    <Rule Id="CA1041" Action="None" />
    <Rule Id="CA1043" Action="None" />
    <Rule Id="CA1051" Action="None" />
    <Rule Id="CA1052" Action="None" />
    <Rule Id="CA1054" Action="None" />
    <Rule Id="CA1055" Action="None" />
    <Rule Id="CA1056" Action="None" />
    <Rule Id="CA1061" Action="None" /> <!-- "do not hide base class methods": currently violations in the compiler -->
    <Rule Id="CA1062" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/26400: Enable rules CA1062, CA1303, CA1508, CA2100 and CA2215 for Roslyn.sln -->
    <Rule Id="CA1063" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/25134: Enable rule CA1063 (Implement IDisposable correctly) for Roslyn.sln -->
    <Rule Id="CA1064" Action="None" />
    <Rule Id="CA1065" Action="None" />
    <Rule Id="CA1066" Action="None" />
    <Rule Id="CA1067" Action="Warning" />
    <Rule Id="CA1068" Action="Warning" />
    <Rule Id="CA1303" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/26400: Enable rules CA1062, CA1303, CA1508, CA2100 and CA2215 for Roslyn.sln -->
    <Rule Id="CA1304" Action="None" />
    <Rule Id="CA1508" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/26400: Enable rules CA1062, CA1303, CA1508, CA2100 and CA2215 for Roslyn.sln -->
    <Rule Id="CA1707" Action="None" />
    <Rule Id="CA1710" Action="None" />
    <Rule Id="CA1714" Action="None" />
    <Rule Id="CA1715" Action="None" />
    <Rule Id="CA1716" Action="None" />
    <Rule Id="CA1717" Action="None" />
    <Rule Id="CA1720" Action="None" />
    <Rule Id="CA1721" Action="None" />
    <Rule Id="CA1724" Action="None" />
    <Rule Id="CA1801" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/20405: Enable rule CA1801 (remove unused parameter) in Roslyn.sln once we have a fixer for it -->
    <Rule Id="CA1802" Action="Warning" />
    <Rule Id="CA1804" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/20406: Enable rule CA1804 (remove unused local) in Roslyn.sln once we have a fixer for it -->
    <Rule Id="CA1806" Action="None" /> <!-- "do not ignore results": we do this in many places, for example fire-and-forget async or HRESULTs we don't care about -->
    <Rule Id="CA1812" Action="None" /> <!-- disabled as we create many internal types via reflection-based mechanisms -->
    <Rule Id="CA1814" Action="None" /> <!-- prefer jagged arrays to multidimensional: a silly piece of advice -->
    <Rule Id="CA1815" Action="None" />
    <Rule Id="CA1820" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/29038: Enable CA1820 (Test for empty strings using string length) -->
    <Rule Id="CA1821" Action="Warning" />
    <Rule Id="CA1822" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/25132: Enable rule CA1822 (Mark members as static) on Roslyn.sln -->
    <Rule Id="CA1823" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/20404: Enable rule CA1823 (remove unused field) once we have a fixer for it -->
    <Rule Id="CA1824" Action="None" /> <!-- mark assemblies with NeutralResourcesLanguageAttribute -->
    <Rule Id="CA1827" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/37959: DoNotUseCountWhenAnyCanBeUsed -->
    <Rule Id="CA2000" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/25880 -->
    <Rule Id="CA2007" Action="Warning" />
    <Rule Id="CA2211" Action="None" />
    <Rule Id="CA2213" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/25880 -->
    <Rule Id="CA2214" Action="None" /> <!-- do not call overridable methods in constructors: done in various places -->
    <Rule Id="CA2215" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/26400: Enable rules CA1062, CA1303, CA1508, CA2100 and CA2215 for Roslyn.sln -->
    <Rule Id="CA2218" Action="None" />
    <Rule Id="CA2222" Action="None" />
    <Rule Id="CA2224" Action="None" />
    <Rule Id="CA2225" Action="None" />
    <Rule Id="CA2227" Action="None" />
    <Rule Id="CA2231" Action="None" />
    <Rule Id="CA2234" Action="None" />
    <Rule Id="CA5350" Action="None" /> <!-- in some cases we must use legacy cryptographic hashes, so disable for now -->
    <Rule Id="CA5351" Action="None" /> <!-- in some cases we must use legacy cryptographic hashes, so disable for now -->
  </Rules>
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CodeStyle" RuleNamespace="Microsoft.CodeAnalysis.CodeStyle">
    <Rule Id="IDE0055" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="Microsoft.CodeAnalysis.Analyzers" RuleNamespace="Microsoft.CodeAnalysis.Analyzers">
    <Rule Id="RS1001" Action="None" />
    <Rule Id="RS1002" Action="None" />
    <Rule Id="RS1003" Action="None" />
    <Rule Id="RS1004" Action="None" />
    <Rule Id="RS1005" Action="None" />
    <Rule Id="RS1006" Action="None" />
    <Rule Id="RS1008" Action="None" />
    <Rule Id="RS1009" Action="None" />
    <Rule Id="RS1010" Action="None" />
    <Rule Id="RS1011" Action="None" />
    <Rule Id="RS1012" Action="None" />
    <Rule Id="RS1013" Action="None" />
    <Rule Id="RS1014" Action="Warning" />
    <Rule Id="RS1022" Action="None" /> <!-- https://github.com/dotnet/roslyn/issues/26420: Enable rule RS1022 for Roslyn.sln -->
    <Rule Id="RS1024" Action="Hidden" /> <!-- Compare symbols correctly -->
  </Rules>
  <Rules AnalyzerId="Microsoft.Composition.Analyzers" RuleNamespace="Microsoft.Composition.Analyzers">
    <Rule Id="RS0006" Action="Error" />
    <Rule Id="RS0023" Action="Error" />
  </Rules>
  <Rules AnalyzerId="Roslyn.Core" RuleNamespace="Roslyn.Core">
    <Rule Id="AD0001" Action="Error" />
  </Rules>
  <Rules AnalyzerId="Roslyn.Diagnostic.Analyzers" RuleNamespace="Roslyn.Diagnostics.Analyzers">
    <Rule Id="RS0001" Action="Warning" />
    <Rule Id="RS0002" Action="Warning" />
    <Rule Id="RS0005" Action="Warning" />
    <Rule Id="RS0016" Action="Error" />
    <Rule Id="RS0017" Action="Error" />
    <Rule Id="RS0022" Action="Error" />
    <Rule Id="RS0024" Action="Error" />
    <Rule Id="RS0025" Action="Error" />
    <Rule Id="RS0026" Action="Error" />
    <Rule Id="RS0027" Action="Error" />
    <Rule Id="RS0033" Action="None" /> <!-- Importing constructor should be [Obsolete] -->
    <Rule Id="RS0034" Action="None" /> <!-- 'type_name' is MEF-exported and should have a single importing constructor of the correct form -->
  </Rules>
  <Rules AnalyzerId="Microsoft.NetCore.Analyzers" RuleNamespace="Microsoft.NetCore.Analyzers.ImmutableCollections">
    <Rule Id="RS0012" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="System.Runtime.Analyzers" RuleNamespace="System.Runtime.Analyzers">
    <Rule Id="CA1305" Action="None" />
    <Rule Id="CA1307" Action="None" />
    <Rule Id="CA1308" Action="None" />
    <Rule Id="CA1810" Action="None" />
    <Rule Id="CA1816" Action="None" />
    <Rule Id="CA1825" Action="None" />
    <Rule Id="CA2002" Action="None" />
    <Rule Id="CA2207" Action="None" />
    <Rule Id="CA2208" Action="None" />
    <Rule Id="CA2216" Action="None" />
    <Rule Id="CA2219" Action="None" />
    <Rule Id="CA2241" Action="None" />
    <Rule Id="CA2242" Action="None" />
    <Rule Id="RS0014" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="System.Runtime.InteropServices.Analyzers" RuleNamespace="System.Runtime.InteropServices.Analyzers">
    <Rule Id="CA1401" Action="None" />
    <Rule Id="CA2101" Action="None" />
    <Rule Id="RS0015" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="Microsoft.NetCore.Analyzers" RuleNamespace="Microsoft.NetCore.Analyzers.Tasks">
    <Rule Id="RS0018" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="XmlDocumentationComments.Analyzers" RuleNamespace="XmlDocumentationComments.Analyzers">
    <Rule Id="CA1200" Action="Warning" />
  </Rules>
  <Rules AnalyzerId="Microsoft.NetCore.Analyzers" RuleNamespace="Microsoft.NetCore.Analyzers">
    <Rule Id="CA9999" Action="None" /> <!-- We know the analyzers will fail during a bootstrap build -->
  </Rules>
  <Rules AnalyzerId="xunit.analyzers" RuleNamespace="Xunit.Analyzers">
    <Rule Id="xUnit1004" Action="None" /> <!-- allow skipped tests -->
    <Rule Id="xUnit2006" Action="None" /> <!-- "do not use generic Assert.Equal to test string equality" is a valid assert, but very noisy right now -->
    <Rule Id="xUnit2009" Action="None" /> <!-- "do not use Assert.True to check for substrings" is a valid assert, but very noisy right now -->
    <Rule Id="xUnit2012" Action="None" /> <!-- "do not use Enumerable.Any() to check if a value exists in a collection" is a valid assert, but very noisy right now -->
    <Rule Id="xUnit2013" Action="None" /> <!-- "do not use Assert.Equal() to check for collection size" is a valid assert, but very noisy right now -->
    <Rule Id="xUnit2017" Action="None" /> <!-- "do not use Contains() to check if a value exists in a collection" is a valid assert, but very noisy right now -->
  </Rules>
  <Rules AnalyzerId="Microsoft.VisualStudio.SDK.Analyzers" RuleNamespace="Microsoft.VisualStudio.SDK.Analyzers">
    <!-- https://github.com/Microsoft/VSSDK-Analyzers/blob/master/doc/index.md -->
    <Rule Id="VSSDK001" Action="Warning" /> <!-- Derive from AsyncPackage -->
    <Rule Id="VSSDK003" Action="Warning" /> <!-- Support async tool windows -->
    <Rule Id="VSSDK006" Action="None" /> <!-- Remove suppression. https://github.com/dotnet/roslyn/issues/38471 -->
  </Rules>
  <Rules AnalyzerId="Microsoft.VisualStudio.Threading.Analyzers" RuleNamespace="Microsoft.VisualStudio.Threading.Analyzers">
    <Rule Id="VSTHRD002" Action="None" /> <!-- Avoid problematic synchronous waits -->
    <Rule Id="VSTHRD003" Action="None" /> <!-- Avoid awaiting foreign Tasks https://github.com/dotnet/roslyn/issues/34331 -->
    <Rule Id="VSTHRD103" Action="None" /> <!-- Call async methods when in an async method -->
    <Rule Id="VSTHRD010" Action="None" /> <!-- Invoke single-threaded types on Main thread https://github.com/dotnet/roslyn/issues/29275 -->
    <Rule Id="VSTHRD110" Action="None" /> <!-- Observe result of async calls -->
    <Rule Id="VSTHRD200" Action="None" /> <!-- Use "Async" suffix for async methods -->
  </Rules>
</RuleSet>
