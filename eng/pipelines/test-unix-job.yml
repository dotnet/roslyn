# Test on Unix using Helix
parameters:
- name: helixQueueName
  type: string
- name: testRunName
  type: string
  default: ''
- name: jobName
  type: string
  default: ''
- name: testArtifactName
  type: string
  default: ''
- name: configuration
  type: string
  default: 'Debug'
- name: testArguments
  type: string
  default: ''
- name: helixApiAccessToken
  type: string
  default: ''
- name: poolParameters
  type: object
- name: miniDump
  type: boolean
  default: false

jobs:
- job: ${{ parameters.jobName }}
  pool: ${{ parameters.poolParameters }}
  timeoutInMinutes: 90

  steps:
    - checkout: none

    - task: DownloadPipelineArtifact@2
      displayName: Download Test Payload
      inputs:
        artifact: ${{ parameters.testArtifactName }}
        path: '$(Build.SourcesDirectory)'
    
    - task: ShellScript@2
      displayName: Rehydrate RunTests
      inputs:
        scriptPath: ./artifacts/bin/RunTests/${{ parameters.configuration }}/net8.0/rehydrate.sh
      env:
        HELIX_CORRELATION_PAYLOAD: '$(Build.SourcesDirectory)/.duplicate'

    - task: ShellScript@2
      inputs:
        scriptPath: ./eng/build.sh        
        ${{ if ne(variables['System.TeamProject'], 'public') }}:
          args: --ci --helix --configuration ${{ parameters.configuration }} --helixQueueName ${{ parameters.helixQueueName }} --helixApiAccessToken ${{ parameters.helixApiAccessToken }} ${{ parameters.testArguments }}        
        ${{ else }}:
          args: --ci --helix --configuration ${{ parameters.configuration }} --helixQueueName ${{ parameters.helixQueueName }} ${{ parameters.testArguments }}
      displayName: Test
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        ${{ if eq(parameters.miniDump, true) }}:
          DOTNET_DbgEnableMiniDump: 1
          DOTNET_DbgMiniDumpType: 1
          DOTNET_EnableCrashReport: 1

    - template: publish-logs.yml
      parameters:
        configuration: ${{ parameters.configuration }}
        jobName: ${{ parameters.jobName }}
