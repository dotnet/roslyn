# Test on Unix using Helix
parameters:
- name: testRunName
  type: string
  default: ''
- name: jobName
  type: string
  default: ''
- name: testArtifactName
  type: string
  default: ''
- name: configuration
  type: string
  default: 'Debug'
- name: testArguments
  type: string
  default: ''
- name: queueName
  type: string
  default: ''
- name: vmImageName
  type: string
  default: ''

jobs:
- job: ${{ parameters.jobName }}
  pool:
    ${{ if ne(parameters.queueName, '') }}:
      name: NetCore-Public
      demands: ImageOverride -equals ${{ parameters.queueName }}

    ${{ if ne(parameters.vmImageName, '') }}:
      vmImage: ${{ parameters.vmImageName }}
  timeoutInMinutes: 90
  steps:
    - checkout: none

    - task: DownloadPipelineArtifact@2
      displayName: Download Test Payload
      inputs:
        artifact: ${{ parameters.testArtifactName }}
        path: '$(Build.SourcesDirectory)'

    - task: ShellScript@2
      displayName: Rehydrate RunTests
      inputs:
        scriptPath: ./artifacts/bin/RunTests/${{ parameters.configuration }}/net7.0/rehydrate.sh
      env:
        HELIX_CORRELATION_PAYLOAD: '$(Build.SourcesDirectory)/.duplicate'

    - task: ShellScript@2
      inputs:
        scriptPath: ./eng/build.sh
        args: --ci --helix --configuration ${{ parameters.configuration }} ${{ parameters.testArguments }}
      displayName: Test
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

    - template: publish-logs.yml
      parameters:
        configuration: ${{ parameters.configuration }}
        jobName: ${{ parameters.jobName }}
