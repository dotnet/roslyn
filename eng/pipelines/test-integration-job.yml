parameters:
  - name: configuration
    type: string
    default: 'Debug'
  - name: oop64bit
    # This is actually a boolean but must be defined as string.
    # Parameters are evaluated at compile time, but all variables are strings at compile time.
    # So in order to pass a parameter that comes from a variable these must be typed as string.
    type: string
    default: true
  - name: oopCoreClr
    type: string
    default: false
  - name: lspEditor
    type: string
    default: false
  - name: skipCheckout
    type: boolean
    default: false
  - name: publishCacheForMainBranch
    type: boolean
    default: false

steps:
  # Pipelines like the DartLab integration pipeline skip checkout because it is performed elsewhere.
  - ${{ if eq(parameters.skipCheckout, false) }}:
    - template: checkout-windows-task.yml

  # Optimize pull requests that don't change the .dotnet version by downloading the most recent one from the target
  # branch. We also download the cache for any main branch builds which are not responsible for publishing an updated
  # cache.
  - ${{ if or(eq(variables['Build.Reason'], 'PullRequest'), ne(parameters.publishCacheForMainBranch, true)) }}:
    - task: DownloadPipelineArtifact@2
      displayName: Download cached .dotnet folder
      inputs:
        buildType: specific
        project: $(System.TeamProjectId)
        definition: $(System.DefinitionId)
        buildVersionToDownload: latestFromBranch
        branchName: refs/heads/$(System.PullRequest.TargetBranch)
        artifactName: dotnet-install
        targetPath: $(Build.SourcesDirectory)/.dotnet

  - task: PowerShell@2
    displayName: Build and Test
    inputs:
      filePath: eng/build.ps1
      arguments: -ci -restore -build -pack -sign -publish -binaryLog -configuration ${{ parameters.configuration }} -prepareMachine -testVsi -oop64bit:$${{ parameters.oop64bit }} -oopCoreClr:$${{ parameters.oopCoreClr }} -collectDumps -lspEditor:$${{ parameters.lspEditor }}

  # Publish the .dotnet folder for main branch builds when requested.
  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), eq(parameters.publishCacheForMainBranch, true)) }}:
    - task: PublishPipelineArtifact@1
      displayName: Publish .dotnet folder
      inputs:
        targetPath: $(Build.SourcesDirectory)/.dotnet
        artifact: dotnet-install

  # Publish the .dotnet folder in this PR just to test how large it is.
  - ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), eq(parameters.publishCacheForMainBranch, true)) }}:
    - task: PublishPipelineArtifact@1
      displayName: Publish .dotnet folder
      inputs:
        targetPath: $(Build.SourcesDirectory)/.dotnet
        artifact: dotnet-install-test

  - task: PublishTestResults@2
    displayName: Publish xUnit Test Results
    inputs:
      testRunner: XUnit
      testResultsFiles: $(Build.SourcesDirectory)\artifacts\TestResults\${{ parameters.configuration }}\*.xml
      mergeTestResults: true
      testRunTitle: '$(System.JobAttempt)-Integration ${{ parameters.configuration }} OOP64_${{ parameters.oop64bit }} OOPCoreClr_${{ parameters.oopCoreClr }}'
    condition: always()

  # Dumps from test timeouts or crashes get published to the test results directory by dotnet test, so make sure to publish any here.
  - task: PublishBuildArtifacts@1
    displayName: Publish Test Results Directory
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\artifacts\TestResults\${{ parameters.configuration }}'
      ArtifactName: '$(System.JobAttempt)-Logs ${{ parameters.configuration }} OOP64_${{ parameters.oop64bit }} OOPCoreClr_${{ parameters.oopCoreClr }} LspEditor_${{ parameters.lspEditor }} $(Build.BuildNumber)'
      publishLocation: Container
    continueOnError: true
    condition: not(succeeded())
  
  - task: PublishBuildArtifacts@1
    displayName: Publish Logs
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\${{ parameters.configuration }}'
      ArtifactName: '$(System.JobAttempt)-Logs ${{ parameters.configuration }} OOP64_${{ parameters.oop64bit }} OOPCoreClr_${{ parameters.oopCoreClr }} LspEditor_${{ parameters.lspEditor }} $(Build.BuildNumber)'
      publishLocation: Container
    continueOnError: true
    condition: not(succeeded())

  - task: PublishBuildArtifacts@1
    displayName: Publish Screenshots and Test Attachments (Old Tests)
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\artifacts\bin\Microsoft.VisualStudio.LanguageServices.IntegrationTests\${{ parameters.configuration }}\net472\TestResults'
      ArtifactName: '$(System.JobAttempt)-Screenshots ${{ parameters.configuration }} OOP64_${{ parameters.oop64bit }} OOPCoreClr_${{ parameters.oopCoreClr }} LspEditor_${{ parameters.lspEditor }} $(Build.BuildNumber)'
      publishLocation: Container
    continueOnError: true
    condition: not(succeeded())
