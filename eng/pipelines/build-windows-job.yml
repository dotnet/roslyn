# Build on windows desktop
parameters:
- name: jobName
  type: string
  default: ''
- name: testArtifactName
  type: string
  default: ''
- name: configuration
  type: string
  default: 'Debug'
- name: poolParameters
  type: object
- name: restoreArguments
  type: string
  default: ''
- name: buildArguments
  type: string
  default: ''

jobs:
- job: ${{ parameters.jobName }}
  pool: ${{ parameters.poolParameters }}
  timeoutInMinutes: 40
  variables:
    - template: variables-build.yml
      parameters:
        configuration: ${{ parameters.configuration }}
    - name: artifactName
      value: ${{ parameters.testArtifactName }}

  steps:
    - template: checkout-windows-task.yml

    - task: PowerShell@2
      displayName: Restore
      inputs:
        filePath: eng/build.ps1
        arguments: -configuration ${{ parameters.configuration }} -prepareMachine -ci -restore -binaryLogName Restore.binlog ${{ parameters.restoreArguments }}

    - task: PowerShell@2
      displayName: Build
      inputs:
        filePath: eng/build.ps1
        arguments: -configuration ${{ parameters.configuration }} -prepareMachine -ci -build -binaryLogName Build.binlog -skipDocumentation ${{ parameters.buildArguments }}

    - task: PowerShell@2
      displayName: Prepare Unit Tests
      inputs:
        filePath: eng/prepare-tests.ps1
        arguments: -configuration ${{ parameters.configuration }}
      condition: and(ne(variables['artifactName'], ''), succeeded())

    - task: PublishPipelineArtifact@1
      displayName: Publish Test Payload
      inputs:
        targetPath: '$(Build.SourcesDirectory)\artifacts\testPayload'
        artifactName: ${{ parameters.testArtifactName }}
      condition: and(ne(variables['artifactName'], ''), succeeded())

    - template: publish-logs.yml
      parameters:
        configuration: ${{ parameters.configuration }}
        jobName: ${{ parameters.jobName }}

