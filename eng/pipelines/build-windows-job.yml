# Build on windows desktop
parameters:
- name: jobName
  type: string
  default: ''
- name: testArtifactName
  type: string
  default: ''
- name: configuration
  type: string
  default: 'Debug'
- name: queueName
  type: string
  default: ''
- name: vmImageName
  type: string
  default: ''
- name: restoreArguments
  type: string
  default: ''
- name: buildArguments
  type: string
  default: ''
- name: solution
  type: string
  default: 'Roslyn.sln'
- name: compilersChange
  type: string
  default: ''
- name: expressionEvaluatorChange
  type: string
  default: ''
- name: scriptingChange
  type: string
  default: ''
- name: codeStyleChange
  type: string
  default: ''
- name: workspaceChange
  type: string
  default: ''
- name: featuresChange
  type: string
  default: ''
- name: visualStudioChange
  type: string
  default: ''
  
jobs:
- job: ${{ parameters.jobName }}
  pool:
    ${{ if ne(parameters.queueName, '') }}:
      name: NetCore1ESPool-Public
      demands: ImageOverride -equals ${{ parameters.queueName }}

    ${{ if ne(parameters.vmImageName, '') }}:
      vmImage: ${{ parameters.vmImageName }}
  timeoutInMinutes: 40
  variables:
    artifactName: ${{ parameters.testArtifactName }}

  steps:
    - template: checkout-windows-task.yml

    - task: PowerShell@2
      displayName: Restore
      inputs:
        filePath: eng/build.ps1
        arguments:
          -configuration ${{ parameters.configuration }}
          -prepareMachine -ci -binaryLog
          -msbuildEngine dotnet
          -solution ${{ parameters.solution }}
          -restore
          /p:BuildReason=$(Build.Reason)
          /p:CompilersChange=${{ parameters.compilersChange }}
          /p:ExpressionEvaluatorChange=${{ parameters.expressionEvaluatorChange }}
          /p:ScriptingChange=${{ parameters.scriptingChange }}
          /p:CodeStyleChange=${{ parameters.codeStyleChange }}
          /p:WorkspaceChange= ${{ parameters.workspaceChange }}
          /p:FeaturesChange=${{ parameters.featuresChange }}
          /p:VisualStudioChange=${{ parameters.visualStudioChange }}
          ${{ parameters.restoreArguments }}

    - task: PowerShell@2
      displayName: Build
      inputs:
        filePath: eng/build.ps1
        arguments:
          -configuration ${{ parameters.configuration }}
          -prepareMachine -ci -binaryLog
          -skipDocumentation
          -msbuildEngine dotnet
          -solution ${{ parameters.solution }}
          -build
          /p:BuildReason=${{ parameters.buildReason }}
          /p:CompilersChange=${{ parameters.compilersChange }}
          /p:ExpressionEvaluatorChange=${{ parameters.expressionEvaluatorChange }}
          /p:ScriptingChange=${{ parameters.scriptingChange }}
          /p:CodeStyleChange=${{ parameters.codeStyleChange }}
          /p:WorkspaceChange= ${{ parameters.workspaceChange }}
          /p:FeaturesChange=${{ parameters.featuresChange }}
          /p:VisualStudioChange=${{ parameters.visualStudioChange }}
          ${{ parameters.buildArguments }}

    - task: PowerShell@2
      displayName: Prepare Unit Tests
      inputs:
        filePath: eng/prepare-tests.ps1
        arguments: -configuration ${{ parameters.configuration }}
      condition: and(ne(variables['artifactName'], ''), succeeded())

    - task: PublishPipelineArtifact@1
      displayName: Publish Test Payload
      inputs:
        targetPath: '$(Build.SourcesDirectory)\artifacts\testPayload'
        artifactName: ${{ parameters.testArtifactName }}
      condition: and(ne(variables['artifactName'], ''), succeeded())

    - template: publish-logs.yml
      parameters:
        configuration: ${{ parameters.configuration }}
        jobName: ${{ parameters.jobName }}

